/*
 howler.js v2.1.1 | (c) 2013-2018, James Simpson of GoldFire Studios | MIT License | howlerjs.com  Spatial Plugin  @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(ca, x, L) {
  ca != Array.prototype && ca != Object.prototype && (ca[x] = L.value)
};
$jscomp.getGlobal = function(ca) {
  ca = ["object" == typeof window && window, "object" == typeof self && self, "object" == typeof global && global, ca];
  for (var x = 0; x < ca.length; ++x) {
    var L = ca[x];
    if (L && L.Math == Math) return L
  }
  throw Error("Cannot find global object");
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(ca, x, L, I) {
  if (x) {
    L = $jscomp.global;
    ca = ca.split(".");
    for (I = 0; I < ca.length - 1; I++) {
      var J = ca[I];
      J in L || (L[J] = {});
      L = L[J]
    }
    ca = ca[ca.length - 1];
    I = L[ca];
    x = x(I);
    x != I && null != x && $jscomp.defineProperty(L, ca, {
      configurable: !0,
      writable: !0,
      value: x
    })
  }
};
$jscomp.polyfill("String.fromCodePoint", function(ca) {
  return ca ? ca : function(x) {
    for (var L = "", I = 0; I < arguments.length; I++) {
      var J = Number(arguments[I]);
      if (0 > J || 1114111 < J || J !== Math.floor(J)) throw new RangeError("invalid_code_point " + J);
      65535 >= J ? L += String.fromCharCode(J) : (J -= 65536, L += String.fromCharCode(J >>> 10 & 1023 | 55296), L += String.fromCharCode(J & 1023 | 56320))
    }
    return L
  }
}, "es6", "es3");
$jscomp.arrayIteratorImpl = function(ca) {
  var x = 0;
  return function() {
    return x < ca.length ? {
      done: !1,
      value: ca[x++]
    } : {
      done: !0
    }
  }
};
$jscomp.arrayIterator = function(ca) {
  return {
    next: $jscomp.arrayIteratorImpl(ca)
  }
};
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
  $jscomp.initSymbol = function() {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol)
};
$jscomp.SymbolClass = function(ca, x) {
  this.$jscomp$symbol$id_ = ca;
  $jscomp.defineProperty(this, "description", {
    configurable: !0,
    writable: !0,
    value: x
  })
};
$jscomp.SymbolClass.prototype.toString = function() {
  return this.$jscomp$symbol$id_
};
$jscomp.Symbol = function() {
  function ca(L) {
    if (this instanceof ca) throw new TypeError("Symbol is not a constructor");
    return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (L || "") + "_" + x++, L)
  }
  var x = 0;
  return ca
}();
$jscomp.initSymbolIterator = function() {
  $jscomp.initSymbol();
  var ca = $jscomp.global.Symbol.iterator;
  ca || (ca = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("Symbol.iterator"));
  "function" != typeof Array.prototype[ca] && $jscomp.defineProperty(Array.prototype, ca, {
    configurable: !0,
    writable: !0,
    value: function() {
      return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))
    }
  });
  $jscomp.initSymbolIterator = function() {}
};
$jscomp.initSymbolAsyncIterator = function() {
  $jscomp.initSymbol();
  var ca = $jscomp.global.Symbol.asyncIterator;
  ca || (ca = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol("Symbol.asyncIterator"));
  $jscomp.initSymbolAsyncIterator = function() {}
};
$jscomp.iteratorPrototype = function(ca) {
  $jscomp.initSymbolIterator();
  ca = {
    next: ca
  };
  ca[$jscomp.global.Symbol.iterator] = function() {
    return this
  };
  return ca
};
$jscomp.iteratorFromArray = function(ca, x) {
  $jscomp.initSymbolIterator();
  ca instanceof String && (ca += "");
  var L = 0,
    I = {
      next: function() {
        if (L < ca.length) {
          var J = L++;
          return {
            value: x(J, ca[J]),
            done: !1
          }
        }
        I.next = function() {
          return {
            done: !0,
            value: void 0
          }
        };
        return I.next()
      }
    };
  I[Symbol.iterator] = function() {
    return I
  };
  return I
};
$jscomp.polyfill("Array.prototype.keys", function(ca) {
  return ca ? ca : function() {
    return $jscomp.iteratorFromArray(this, function(x) {
      return x
    })
  }
}, "es6", "es3");
$jscomp.checkStringArgs = function(ca, x, L) {
  if (null == ca) throw new TypeError("The 'this' value for String.prototype." + L + " must not be null or undefined");
  if (x instanceof RegExp) throw new TypeError("First argument to String.prototype." + L + " must not be a regular expression");
  return ca + ""
};
$jscomp.polyfill("String.prototype.startsWith", function(ca) {
  return ca ? ca : function(x, L) {
    var I = $jscomp.checkStringArgs(this, x, "startsWith");
    x += "";
    var J = I.length,
      oa = x.length;
    L = Math.max(0, Math.min(L | 0, I.length));
    for (var t = 0; t < oa && L < J;)
      if (I[L++] != x[t++]) return !1;
    return t >= oa
  }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.values", function(ca) {
  return ca ? ca : function() {
    return $jscomp.iteratorFromArray(this, function(x, L) {
      return L
    })
  }
}, "es8", "es3");
$jscomp.polyfill("String.prototype.codePointAt", function(ca) {
  return ca ? ca : function(x) {
    var L = $jscomp.checkStringArgs(this, null, "codePointAt"),
      I = L.length;
    x = Number(x) || 0;
    if (0 <= x && x < I) {
      x |= 0;
      var J = L.charCodeAt(x);
      if (55296 > J || 56319 < J || x + 1 === I) return J;
      x = L.charCodeAt(x + 1);
      return 56320 > x || 57343 < x ? J : 1024 * (J - 55296) + x + 9216
    }
  }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.endsWith", function(ca) {
  return ca ? ca : function(x, L) {
    var I = $jscomp.checkStringArgs(this, x, "endsWith");
    x += "";
    void 0 === L && (L = I.length);
    L = Math.max(0, Math.min(L | 0, I.length));
    for (var J = x.length; 0 < J && 0 < L;)
      if (I[--L] != x[--J]) return !1;
    return 0 >= J
  }
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(ca) {
  return ca ? ca : function(x, L, I) {
    var J = this.length || 0;
    0 > L && (L = Math.max(0, J + L));
    if (null == I || I > J) I = J;
    I = Number(I);
    0 > I && (I = Math.max(0, J + I));
    for (L = Number(L || 0); L < I; L++) this[L] = x;
    return this
  }
}, "es6", "es3");
$jscomp.polyfill("String.prototype.repeat", function(ca) {
  return ca ? ca : function(x) {
    var L = $jscomp.checkStringArgs(this, null, "repeat");
    if (0 > x || 1342177279 < x) throw new RangeError("Invalid count value");
    x |= 0;
    for (var I = ""; x;)
      if (x & 1 && (I += L), x >>>= 1) L += L;
    return I
  }
}, "es6", "es3");
(function(ca, x) {
  ca.lime = ca.lime || {};
  ca.lime.$scripts = ca.lime.$scripts || {};
  ca.lime.$scripts.ResizerHooda = function(x, I) {
    (function(x, L) {
      function t(a, b) {
        a = Object.create(a);
        for (var c in b) a[c] = b[c];
        b.toString !== Object.prototype.toString && (a.toString = b.toString);
        return a
      }

      function I(a) {
        return a instanceof Array ? new Ne(a) : a.iterator()
      }

      function r(a, b) {
        if (null == b) return null;
        null == b.__id__ && (b.__id__ = L.$haxeUID++);
        var c;
        null == a.hx__closures__ ? a.hx__closures__ = {} : c = a.hx__closures__[b.__id__];
        null == c && (c = b.bind(a),
          a.hx__closures__[b.__id__] = c);
        return c
      }
      x.lime = x.lime || {};
      var k = {},
        v = function() {
          return K.__string_rec(this, "")
        },
        O = O || {},
        w, za = function() {};
      k.ApplicationMain = za;
      za.__name__ = "ApplicationMain";
      za.main = function() {
        V.am = za;
        V.setupTracing(!0);
        ka.load();
        N.loadInputConfig();
        V.setupTracing();
        Wa.__registerEntryPoint("ResizerHooda", za.create);
        Ja.get_current()
      };
      za.reloadGame = function() {
        for (var a = 0, b = za.reloadListeners; a < b.length;) {
          var c = b[a];
          ++a;
          c()
        }
        u.resetStatics();
        eb.resetStatics();
        wb.resetStatics();
        Oe.resetStatics();
        Bb.resetStatics();
        Ia.resetStatics();
        Yb.resetStatics();
        ve.resetStatics();
        nc.resetStatics();
        Sd.resetStatics();
        Cf.resetStatics();
        Yd.resetStatics();
        xb.resetStatics();
        R.resetStatics();
        oc.resetStatics();
        N.resetStatics();
        p.resetStatics();
        Ja.get_current().removeChild(za.universal);
        N.loadInputConfig();
        za.universal = new V;
        Ja.get_current().addChild(za.universal);
        za.universal.preloaderComplete()
      };
      za.create = function(a) {
        za.app = new lj;
        rb.init(a);
        za.app.meta.h.build = "1";
        za.app.meta.h.company = "Stencyl";
        za.app.meta.h.file =
          "ResizerHooda";
        za.app.meta.h.name = "Resizer";
        za.app.meta.h.packageName = "com.example.myapp";
        za.app.meta.h.version = "1.0.0";
        var b = {
          allowHighDPI: !1,
          alwaysOnTop: !1,
          borderless: !1,
          element: null,
          frameRate: 65,
          height: 480,
          hidden: !1,
          maximized: !1,
          minimized: !1,
          parameters: {},
          resizable: !0,
          title: "Resizer",
          width: 720,
          x: null,
          y: null
        };
        b.context = {
          antialiasing: ka.antialias ? 2 : 0,
          background: 0,
          colorDepth: 32,
          depth: !0,
          hardware: !0,
          stencil: !0,
          type: null,
          vsync: !0
        };
        if (null == za.app.__window && null != a)
          for (var c = 0, d = Y.fields(a); c < d.length;) {
            var e =
              d[c];
            ++c;
            Object.prototype.hasOwnProperty.call(b, e) ? b[e] = Y.field(a, e) : Object.prototype.hasOwnProperty.call(b.context, e) && (b.context[e] = Y.field(a, e))
          }
        za.app.createWindow(b);
        ka.releaseMode || Ja.get_current().get_loaderInfo().uncaughtErrorEvents.addEventListener("uncaughtError", za.uncaughtErrorHandler);
        V.initWindow(za.app.__window);
        za.universal = new V;
        Ja.get_current().addChild(za.universal);
        c = new hh;
        c.onComplete.add((w = za.universal, r(w, w.preloaderComplete)));
        za.app.__preloader.onProgress.add(r(c, c.onUpdate));
        za.app.__preloader.onComplete.add(r(c, c.onLoaded));
        c = 0;
        for (d = rb.preloadLibraries; c < d.length;) a = d[c], ++c, za.app.__preloader.addLibrary(a);
        c = 0;
        for (d = rb.preloadLibraryNames; c < d.length;) a = d[c], ++c, za.app.__preloader.addLibraryName(a);
        za.app.__preloader.load();
        za.app.exec()
      };
      za.uncaughtErrorHandler = function(a) {};
      var S = function(a) {
        this.duration = a;
        this.complete = this.active = !1;
        0 == a && (this.active = this.complete = !0)
      };
      k["com.stencyl.graphics.transitions.Transition"] = S;
      S.__name__ = "com.stencyl.graphics.transitions.Transition";
      S.prototype = {
        duration: null,
        direction: null,
        active: null,
        complete: null,
        start: function() {},
        reset: function() {
          this.complete = !1
        },
        stop: function() {
          this.complete = !0
        },
        deactivate: function() {
          this.active = !1
        },
        cleanup: function() {},
        isActive: function() {
          return this.active
        },
        isComplete: function() {
          return this.complete
        },
        update: function(a) {},
        draw: function(a) {},
        getDuration: function() {
          return this.duration
        },
        __class__: S
      };
      var qb = function(a) {
        S.call(this, a)
      };
      k.BaseTransition = qb;
      qb.__name__ = "BaseTransition";
      qb.__super__ = S;
      qb.prototype =
        t(S.prototype, {
          clone: function() {
            return null
          },
          __class__: qb
        });
      var J = function(a, b, c, d) {
        this.odd = !0;
        this.persistent = !1;
        S.call(this, a);
        this.thickness1x = b | 0;
        this.thickness = b * p.SCALE | 0;
        this.type = c;
        this.easing = d
      };
      k.BarTransition = J;
      J.__name__ = "BarTransition";
      J.__super__ = qb;
      J.prototype = t(qb.prototype, {
        fakeTween: null,
        persistent: null,
        thickness1x: null,
        thickness: null,
        type: null,
        odd: null,
        easing: null,
        instances: null,
        clone: function() {
          return new J(this.duration, this.thickness1x, this.type, this.easing)
        },
        start: function() {
          this.active = !0;
          this.instances = [];
          this.fakeTween = new he;
          var a = 1;
          "Horizontal" == this.type ? a = Math.ceil(p.screenHeight / this.thickness1x) : "Vertical" == this.type && (a = Math.ceil(p.screenWidth / this.thickness1x));
          if (this.direction == S.IN) {
            if (this.persistent)
              for (var b = 0; b < a;) {
                var c = b++,
                  d = J.globalInstances[c];
                this.instances.push(d);
                "Horizontal" == this.type ? this.odd ? d.get_tweenProps().xy.tween(d.get_imgX(), p.screenWidth, d.get_imgY(), d.get_imgY(), this.easing, 1E3 * this.duration | 0) : d.get_tweenProps().xy.tween(d.get_imgX(), -p.screenWidth,
                  d.get_imgY(), d.get_imgY(), this.easing, 1E3 * this.duration | 0) : "Vertical" == this.type && (this.odd ? d.get_tweenProps().xy.tween(d.get_imgX(), d.get_imgX(), d.get_imgY(), p.screenHeight, this.easing, 1E3 * this.duration | 0) : d.get_tweenProps().xy.tween(d.get_imgX(), d.get_imgX(), d.get_imgY(), -p.screenHeight, this.easing, 1E3 * this.duration | 0));
                this.odd = !this.odd
              } else {
                var e = null;
                "Horizontal" == this.type ? e = new wa(p.screenWidth * p.SCALE | 0, this.thickness, !0, ob.color) : "Vertical" == this.type && (e = new wa(this.thickness, p.screenHeight *
                  p.SCALE | 0, !0, ob.color));
                for (b = 0; b < a;) c = b++, d = new Ih(new Ac(e)), this.instances.push(d), d.set_smoothing(ka.antialias), p.engine.transitionLayer.addChild(d), "Horizontal" == this.type ? (d.set_imgY(c * this.thickness1x), this.odd ? d.get_tweenProps().xy.tween(d.get_imgX(), p.screenWidth, d.get_imgY(), d.get_imgY(), this.easing, 1E3 * this.duration | 0) : d.get_tweenProps().xy.tween(d.get_imgX(), -p.screenWidth, d.get_imgY(), d.get_imgY(), this.easing, 1E3 * this.duration | 0)) : "Vertical" == this.type && (d.set_imgX(c * this.thickness1x),
                  this.odd ? d.get_tweenProps().xy.tween(d.get_imgX(), d.get_imgX(), d.get_imgY(), p.screenHeight, this.easing, 1E3 * this.duration | 0) : d.get_tweenProps().xy.tween(d.get_imgX(), d.get_imgX(), d.get_imgY(), -p.screenHeight, this.easing, 1E3 * this.duration | 0)), this.odd = !this.odd
              }
            this.fakeTween.tween(0, 1, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
          } else if (this.direction == S.OUT) {
            e = null;
            "Horizontal" == this.type ? e = new wa(p.screenWidth * p.SCALE | 0, this.thickness, !0, ob.color) : "Vertical" == this.type && (e = new wa(this.thickness,
              p.screenHeight * p.SCALE | 0, !0, ob.color));
            for (b = 0; b < a;) c = b++, d = new Ih(new Ac(e)), this.instances.push(d), d.set_smoothing(ka.antialias), p.engine.transitionLayer.addChild(d), "Horizontal" == this.type ? (this.odd ? d.set_imgX(-p.screenWidth) : d.set_imgX(p.screenWidth), d.set_imgY(c * this.thickness1x), d.get_tweenProps().xy.tween(d.get_imgX(), 0, d.get_imgY(), d.get_imgY(), this.easing, 1E3 * this.duration | 0)) : "Vertical" == this.type && (this.odd ? d.set_imgY(-p.screenHeight) : d.set_imgY(p.screenHeight), d.set_imgX(c * this.thickness1x),
              d.get_tweenProps().xy.tween(d.get_imgX(), d.get_imgX(), d.get_imgY(), 0, this.easing, 1E3 * this.duration | 0)), this.odd = !this.odd;
            this.persistent && (J.globalInstances = this.instances);
            this.fakeTween.tween(0, 1, qa.linear, 1E3 * (this.duration + ob.durationPad) | 0).doOnComplete(r(this, this.stop))
          } else this.complete = !0
        },
        update: function(a) {},
        cleanup: function() {
          if (this.direction != S.OUT || !this.persistent) {
            for (var a = 0, b = this.instances; a < b.length;) {
              var c = b[a];
              ++a;
              p.engine.transitionLayer.removeChild(c)
            }
            this.instances = null;
            J.globalInstances = null
          }
        },
        __class__: J
      });
      var nb = function(a, b) {
        this.r = new RegExp(a, b.split("u").join(""))
      };
      k.EReg = nb;
      nb.__name__ = "EReg";
      nb.prototype = {
        r: null,
        match: function(a) {
          this.r.global && (this.r.lastIndex = 0);
          this.r.m = this.r.exec(a);
          this.r.s = a;
          return null != this.r.m
        },
        matched: function(a) {
          if (null != this.r.m && 0 <= a && a < this.r.m.length) return this.r.m[a];
          throw F.thrown("EReg::matched");
        },
        matchedRight: function() {
          if (null == this.r.m) throw F.thrown("No string matched");
          var a = this.r.m.index + this.r.m[0].length;
          return da.substr(this.r.s,
            a, this.r.s.length - a)
        },
        matchedPos: function() {
          if (null == this.r.m) throw F.thrown("No string matched");
          return {
            pos: this.r.m.index,
            len: this.r.m[0].length
          }
        },
        matchSub: function(a, b, c) {
          null == c && (c = -1);
          if (this.r.global) {
            if (this.r.lastIndex = b, this.r.m = this.r.exec(0 > c ? a : da.substr(a, 0, b + c)), c = null != this.r.m) this.r.s = a
          } else if (c = this.match(0 > c ? da.substr(a, b, null) : da.substr(a, b, c))) this.r.s = a, this.r.m.index += b;
          return c
        },
        split: function(a) {
          return a.replace(this.r, "#__delim__#").split("#__delim__#")
        },
        map: function(a,
          b) {
          for (var c = 0, d = ""; !(c >= a.length);) {
            if (!this.matchSub(a, c)) {
              d += M.string(da.substr(a, c, null));
              break
            }
            var e = this.matchedPos();
            d += M.string(da.substr(a, c, e.pos - c));
            d += M.string(b(this));
            0 == e.len ? (d += M.string(da.substr(a, e.pos, 1)), c = e.pos + 1) : c = e.pos + e.len;
            if (!this.r.global) break
          }!this.r.global && 0 < c && c < a.length && (d += M.string(da.substr(a, c, null)));
          return d
        },
        __class__: nb
      };
      var da = function() {};
      k.HxOverrides = da;
      da.__name__ = "HxOverrides";
      da.strDate = function(a) {
        switch (a.length) {
          case 8:
            a = a.split(":");
            var b = new Date;
            b.setTime(0);
            b.setUTCHours(a[0]);
            b.setUTCMinutes(a[1]);
            b.setUTCSeconds(a[2]);
            return b;
          case 10:
            return a = a.split("-"), new Date(a[0], a[1] - 1, a[2], 0, 0, 0);
          case 19:
            return a = a.split(" "), b = a[0].split("-"), a = a[1].split(":"), new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2]);
          default:
            throw F.thrown("Invalid date format : " + a);
        }
      };
      da.cca = function(a, b) {
        a = a.charCodeAt(b);
        if (a == a) return a
      };
      da.substr = function(a, b, c) {
        if (null == c) c = a.length;
        else if (0 > c)
          if (0 == b) c = a.length + c;
          else return "";
        return a.substr(b, c)
      };
      da.remove = function(a,
        b) {
        b = a.indexOf(b);
        if (-1 == b) return !1;
        a.splice(b, 1);
        return !0
      };
      da.now = function() {
        return Date.now()
      };
      var oa = function(a, b) {
        this.min = a;
        this.max = b
      };
      k.IntIterator = oa;
      oa.__name__ = "IntIterator";
      oa.prototype = {
        min: null,
        max: null,
        hasNext: function() {
          return this.min < this.max
        },
        next: function() {
          return this.min++
        },
        __class__: oa
      };
      var ca = function() {};
      k.Lambda = ca;
      ca.__name__ = "Lambda";
      ca.array = function(a) {
        var b = [];
        for (a = I(a); a.hasNext();) {
          var c = a.next();
          b.push(c)
        }
        return b
      };
      ca.count = function(a, b) {
        var c = 0;
        if (null == b)
          for (b =
            I(a); b.hasNext();) b.next(), ++c;
        else
          for (a = I(a); a.hasNext();) {
            var d = a.next();
            b(d) && ++c
          }
        return c
      };
      ca.indexOf = function(a, b) {
        var c = 0;
        for (a = I(a); a.hasNext();) {
          var d = a.next();
          if (b == d) return c;
          ++c
        }
        return -1
      };
      var rb = function() {};
      k.ManifestResources = rb;
      rb.__name__ = "ManifestResources";
      rb.init = function(a) {
        rb.preloadLibraries = [];
        rb.preloadLibraryNames = [];
        rb.rootPath = null;
        null != a && Object.prototype.hasOwnProperty.call(a, "rootPath") && (rb.rootPath = Y.field(a, "rootPath"));
        null == rb.rootPath && (rb.rootPath = "./");
        a = Pc.parse('{"name":null,"assets":"aoy8:positioni10y4:sizezy4:typey5:IMAGEy2:idy44:assets%2Fgraphics%2F1x%2Fbackground-23-0.pngy6:lengthi117y7:preloadtgoR0i127R1zR2y4:TEXTR4y36:assets%2Fgraphics%2F1x%2Ffont-54.fntR6i999goR0i1126R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-54.pngR6i3403R7tgoR0i4529R1zR2R8R4y36:assets%2Fgraphics%2F1x%2Ffont-58.fntR6i999goR0i5528R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-58.pngR6i3304R7tgoR0i8832R1zR2R8R4y36:assets%2Fgraphics%2F1x%2Ffont-66.fntR6i1027goR0i9859R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-66.pngR6i5773R7tgoR0i15632R1zR2R8R4y36:assets%2Fgraphics%2F1x%2Ffont-67.fntR6i1077goR0i16709R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-67.pngR6i10674R7tgoR0i27383R1zR2R8R4y36:assets%2Fgraphics%2F1x%2Ffont-68.fntR6i1028goR0i28411R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-68.pngR6i6045R7tgoR0i34456R1zR2R8R4y36:assets%2Fgraphics%2F1x%2Ffont-69.fntR6i999goR0i35455R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-69.pngR6i3355R7tgoR0i38810R1zR2R8R4y36:assets%2Fgraphics%2F1x%2Ffont-78.fntR6i1002goR0i39812R1zR2R3R4y36:assets%2Fgraphics%2F1x%2Ffont-78.pngR6i1483R7tgoR0i41295R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-12-0.pngR6i468R7tgoR0i41763R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-14-0.pngR6i390R7tgoR0i42153R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-16-0.pngR6i140R7tgoR0i42293R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-18-0.pngR6i224R7tgoR0i42517R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Fsprite-2-0.pngR6i102R7tgoR0i42619R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Fsprite-2-1.pngR6i117R7tgoR0i42736R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Fsprite-2-2.pngR6i205R7tgoR0i42941R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-20-0.pngR6i120R7tgoR0i43061R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-22-0.pngR6i117R7tgoR0i43178R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-26-0.pngR6i124R7tgoR0i43302R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-28-0.pngR6i171R7tgoR0i43473R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-28-1.pngR6i114R7tgoR0i43587R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-30-0.pngR6i163R7tgoR0i43750R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-32-0.pngR6i147R7tgoR0i43897R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-34-0.pngR6i365R7tgoR0i44262R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-36-0.pngR6i357R7tgoR0i44619R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-38-0.pngR6i369R7tgoR0i44988R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-40-0.pngR6i357R7tgoR0i45345R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-42-0.pngR6i126R7tgoR0i45471R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-44-0.pngR6i214R7tgoR0i45685R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Fsprite-5-0.pngR6i264R7tgoR0i45949R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-61-0.pngR6i125R7tgoR0i46074R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-63-0.pngR6i340R7tgoR0i46414R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-63-1.pngR6i221R7tgoR0i46635R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-63-2.pngR6i223R7tgoR0i46858R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-65-0.pngR6i852R7tgoR0i47710R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Fsprite-7-1.pngR6i2378R7tgoR0i50088R1zR2R3R4y40:assets%2Fgraphics%2F1x%2Fsprite-80-0.pngR6i49358R7tgoR0i99446R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Fsprite-9-0.pngR6i263R7tgoR0i99709R1zR2R3R4y41:assets%2Fgraphics%2F1x%2Ftileset-10-0.pngR6i223R7tgoR0i99932R1zR2R3R4y39:assets%2Fgraphics%2F1x%2Ftileset-10.pngR6i203R7tgoR0i100135R1zR2R8R4y36:assets%2Fgraphics%2Fdefault-font.fntR6i1057goR0i101192R1zR2R3R4y36:assets%2Fgraphics%2Fdefault-font.pngR6i1759R7tgoR1i2048834R2y5:MUSICR4y29:assets%2Fmusic%2Fsound-59.mp3y9:pathGroupaR57y29:assets%2Fmusic%2Fsound-59.ogghR7tgoR1i1591250R2R56R4R59R58aR57R59hgoR1i6268R2y5:SOUNDR4y27:assets%2Fsfx%2Fsound-45.mp3R58aR61y27:assets%2Fsfx%2Fsound-45.ogghR7tgoR1i6268R2R60R4y27:assets%2Fsfx%2Fsound-46.mp3R58aR63y27:assets%2Fsfx%2Fsound-46.ogghR7tgoR1i6268R2R60R4y27:assets%2Fsfx%2Fsound-47.mp3R58aR65y27:assets%2Fsfx%2Fsound-47.ogghR7tgoR1i11701R2R60R4y27:assets%2Fsfx%2Fsound-48.mp3R58aR67y27:assets%2Fsfx%2Fsound-48.ogghR7tgoR1i16717R2R60R4y27:assets%2Fsfx%2Fsound-49.mp3R58aR69y27:assets%2Fsfx%2Fsound-49.ogghR7tgoR1i6268R2R60R4y27:assets%2Fsfx%2Fsound-50.mp3R58aR71y27:assets%2Fsfx%2Fsound-50.ogghR7tgoR1i18807R2R60R4y27:assets%2Fsfx%2Fsound-51.mp3R58aR73y27:assets%2Fsfx%2Fsound-51.ogghR7tgoR1i9612R2R60R4y27:assets%2Fsfx%2Fsound-52.mp3R58aR75y27:assets%2Fsfx%2Fsound-52.ogghR7tgoR1i3342R2R60R4y27:assets%2Fsfx%2Fsound-53.mp3R58aR77y27:assets%2Fsfx%2Fsound-53.ogghR7tgoR1i2506R2R60R4y27:assets%2Fsfx%2Fsound-72.mp3R58aR79y27:assets%2Fsfx%2Fsound-72.ogghR7tgoR1i5681R2R60R4R62R58aR61R62hgoR1i5926R2R60R4R64R58aR63R64hgoR1i6134R2R60R4R66R58aR65R66hgoR1i10623R2R60R4R68R58aR67R68hgoR1i15281R2R60R4R70R58aR69R70hgoR1i7809R2R60R4R72R58aR71R72hgoR1i16409R2R60R4R74R58aR73R74hgoR1i16092R2R60R4R76R58aR75R76hgoR1i5722R2R60R4R78R58aR77R78hgoR1i4547R2R60R4R80R58aR79R80hgoR0i102951R1zR2y6:BINARYR4y29:assets%2Fdata%2Fbehaviors.mbsR6i4828goR0i107779R1zR2R81R4y24:assets%2Fdata%2Fgame.mbsR6i986goR0i108765R1zR2R3R4y34:assets%2Fdata%2Finner-joystick.pngR6i902R7tgoR0i109667R1zR2R3R4y34:assets%2Fdata%2Fouter-joystick.pngR6i1974R7tgoR0i111641R1zR2R81R4y29:assets%2Fdata%2Fresources.mbsR6i11125goR0i122766R1zR2R81R4y27:assets%2Fdata%2Fscene-1.mbsR6i746goR0i123512R1zR2R81R4y27:assets%2Fdata%2Fscene-1.scnR6i378goR0i123890R1zR2R81R4y28:assets%2Fdata%2Fscene-10.mbsR6i1148goR0i125038R1zR2R81R4y28:assets%2Fdata%2Fscene-10.scnR6i170goR0i125208R1zR2R81R4y28:assets%2Fdata%2Fscene-11.mbsR6i896goR0i126104R1zR2R81R4y28:assets%2Fdata%2Fscene-11.scnR6i279goR0i126383R1zR2R81R4y28:assets%2Fdata%2Fscene-12.mbsR6i1639goR0i128022R1zR2R81R4y28:assets%2Fdata%2Fscene-12.scnR6i389goR0i128411R1zR2R81R4y28:assets%2Fdata%2Fscene-13.mbsR6i1070goR0i129481R1zR2R81R4y28:assets%2Fdata%2Fscene-13.scnR6i199goR0i129680R1zR2R81R4y28:assets%2Fdata%2Fscene-14.mbsR6i1430goR0i131110R1zR2R81R4y28:assets%2Fdata%2Fscene-14.scnR6i315goR0i131425R1zR2R81R4y28:assets%2Fdata%2Fscene-15.mbsR6i1581goR0i133006R1zR2R81R4y28:assets%2Fdata%2Fscene-15.scnR6i312goR0i133318R1zR2R81R4y28:assets%2Fdata%2Fscene-16.mbsR6i1292goR0i134610R1zR2R81R4y28:assets%2Fdata%2Fscene-16.scnR6i343goR0i134953R1zR2R81R4y28:assets%2Fdata%2Fscene-17.mbsR6i1255goR0i136208R1zR2R81R4y28:assets%2Fdata%2Fscene-17.scnR6i335goR0i136543R1zR2R81R4y28:assets%2Fdata%2Fscene-18.mbsR6i1348goR0i137891R1zR2R81R4y28:assets%2Fdata%2Fscene-18.scnR6i309goR0i138200R1zR2R81R4y28:assets%2Fdata%2Fscene-19.mbsR6i966goR0i139166R1zR2R81R4y28:assets%2Fdata%2Fscene-19.scnR6i259goR0i139425R1zR2R81R4y27:assets%2Fdata%2Fscene-2.mbsR6i342goR0i139767R1zR2R81R4y27:assets%2Fdata%2Fscene-2.scnR6i41goR0i139808R1zR2R81R4y28:assets%2Fdata%2Fscene-20.mbsR6i219goR0i140027R1zR2R81R4y28:assets%2Fdata%2Fscene-20.scnR6i26goR0i140053R1zR2R81R4y28:assets%2Fdata%2Fscene-21.mbsR6i556goR0i140609R1zR2R81R4y28:assets%2Fdata%2Fscene-21.scnR6i136goR0i140745R1zR2R81R4y28:assets%2Fdata%2Fscene-22.mbsR6i514goR0i141259R1zR2R81R4y28:assets%2Fdata%2Fscene-22.scnR6i107goR0i141366R1zR2R81R4y28:assets%2Fdata%2Fscene-23.mbsR6i255goR0i141621R1zR2R81R4y28:assets%2Fdata%2Fscene-23.scnR6i26goR0i141647R1zR2R81R4y28:assets%2Fdata%2Fscene-24.mbsR6i624goR0i142271R1zR2R81R4y28:assets%2Fdata%2Fscene-24.scnR6i26goR0i142297R1zR2R81R4y28:assets%2Fdata%2Fscene-25.mbsR6i647goR0i142944R1zR2R81R4y28:assets%2Fdata%2Fscene-25.scnR6i96goR0i143040R1zR2R81R4y28:assets%2Fdata%2Fscene-26.mbsR6i501goR0i143541R1zR2R81R4y28:assets%2Fdata%2Fscene-26.scnR6i116goR0i143657R1zR2R81R4y27:assets%2Fdata%2Fscene-3.mbsR6i833goR0i144490R1zR2R81R4y27:assets%2Fdata%2Fscene-3.scnR6i354goR0i144844R1zR2R81R4y27:assets%2Fdata%2Fscene-4.mbsR6i1019goR0i145863R1zR2R81R4y27:assets%2Fdata%2Fscene-4.scnR6i320goR0i146183R1zR2R81R4y27:assets%2Fdata%2Fscene-5.mbsR6i914goR0i147097R1zR2R81R4y27:assets%2Fdata%2Fscene-5.scnR6i214goR0i147311R1zR2R81R4y27:assets%2Fdata%2Fscene-6.mbsR6i866goR0i148177R1zR2R81R4y27:assets%2Fdata%2Fscene-6.scnR6i245goR0i148422R1zR2R81R4y27:assets%2Fdata%2Fscene-7.mbsR6i958goR0i149380R1zR2R81R4y27:assets%2Fdata%2Fscene-7.scnR6i252goR0i149632R1zR2R81R4y27:assets%2Fdata%2Fscene-8.mbsR6i837goR0i150469R1zR2R81R4y27:assets%2Fdata%2Fscene-8.scnR6i289goR0i150758R1zR2R81R4y27:assets%2Fdata%2Fscene-9.mbsR6i1004goR0i151762R1zR2R81R4y27:assets%2Fdata%2Fscene-9.scnR6i310goR0i152072R1zR2R81R4y26:assets%2Fdata%2Fscenes.mbsR6i325gh","rootPath":null,"version":2,"libraryArgs":["lib/default.pak","gzip"],"libraryType":"lime.utils.PackedAssetLibrary"}',
          rb.rootPath);
        a = yb.fromManifest(a);
        sa.registerLibrary("default", a);
        a = sa.getLibrary("default");
        null != a ? rb.preloadLibraries.push(a) : rb.preloadLibraryNames.push("default")
      };
      Math.__name__ = "Math";
      var Y = function() {};
      k.Reflect = Y;
      Y.__name__ = "Reflect";
      Y.field = function(a, b) {
        try {
          return a[b]
        } catch (c) {
          return pa.lastError = c, null
        }
      };
      Y.getProperty = function(a, b) {
        var c;
        if (null == a) return null;
        var d = a.__properties__ ? c = a.__properties__["get_" + b] : !1;
        return d ? a[c]() : a[b]
      };
      Y.fields = function(a) {
        var b = [];
        if (null != a) {
          var c = Object.prototype.hasOwnProperty,
            d;
          for (d in a) "__id__" != d && "hx__closures__" != d && c.call(a, d) && b.push(d)
        }
        return b
      };
      Y.isFunction = function(a) {
        return "function" == typeof a ? !(a.__name__ || a.__ename__) : !1
      };
      Y.compare = function(a, b) {
        return a == b ? 0 : a > b ? 1 : -1
      };
      Y.compareMethods = function(a, b) {
        return a == b ? !0 : Y.isFunction(a) && Y.isFunction(b) ? a.scope == b.scope && a.method == b.method ? null != a.method : !1 : !1
      };
      Y.isEnumValue = function(a) {
        return null != a ? null != a.__enum__ : !1
      };
      Y.deleteField = function(a, b) {
        if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
        delete a[b];
        return !0
      };
      Y.makeVarArgs = function(a) {
        return function() {
          var b = Array.prototype.slice.call(arguments);
          return a(b)
        }
      };
      var M = function() {};
      k.Std = M;
      M.__name__ = "Std";
      M.string = function(a) {
        return K.__string_rec(a, "")
      };
      M.parseInt = function(a) {
        if (null != a)
          for (var b = 0, c = a.length; b < c;) {
            var d = b++,
              e = a.charCodeAt(d);
            if (8 >= e || 14 <= e && 32 != e && 45 != e)
              if (b = a.charCodeAt(d + 1), a = parseInt(a, 120 == b || 88 == b ? 16 : 10), isNaN(a)) break;
              else return a
          }
        return null
      };
      var vb = function() {};
      k["_String.String_Impl_"] = vb;
      vb.__name__ = "_String.String_Impl_";
      vb.fromCharCode = function(a) {
        return String.fromCodePoint(a)
      };
      var Qa = function() {
        this.b = ""
      };
      k.StringBuf = Qa;
      Qa.__name__ = "StringBuf";
      Qa.prototype = {
        b: null,
        __class__: Qa
      };
      var W = function() {};
      k.StringTools = W;
      W.__name__ = "StringTools";
      W.htmlEscape = function(a, b) {
        for (var c = "", d = 0, e = a; d < e.length;) {
          a = e;
          var f = d++,
            g = a.charCodeAt(f);
          55296 <= g && 56319 >= g && (g = g - 55232 << 10 | a.charCodeAt(f + 1) & 1023);
          a = g;
          65536 <= a && ++d;
          switch (a) {
            case 34:
              c = b ? c + "&quot;" : c + String.fromCodePoint(a);
              break;
            case 38:
              c += "&amp;";
              break;
            case 39:
              c = b ? c + "&#039;" :
                c + String.fromCodePoint(a);
              break;
            case 60:
              c += "&lt;";
              break;
            case 62:
              c += "&gt;";
              break;
            default:
              c += String.fromCodePoint(a)
          }
        }
        return c
      };
      W.htmlUnescape = function(a) {
        return a.split("&gt;").join(">").split("&lt;").join("<").split("&quot;").join('"').split("&#039;").join("'").split("&amp;").join("&")
      };
      W.startsWith = function(a, b) {
        return a.length >= b.length ? 0 == a.lastIndexOf(b, 0) : !1
      };
      W.endsWith = function(a, b) {
        var c = b.length,
          d = a.length;
        return d >= c ? a.indexOf(b, d - c) == d - c : !1
      };
      W.isSpace = function(a, b) {
        a = da.cca(a, b);
        return 8 <
          a && 14 > a ? !0 : 32 == a
      };
      W.ltrim = function(a) {
        for (var b = a.length, c = 0; c < b && W.isSpace(a, c);) ++c;
        return 0 < c ? da.substr(a, c, b - c) : a
      };
      W.rtrim = function(a) {
        for (var b = a.length, c = 0; c < b && W.isSpace(a, b - c - 1);) ++c;
        return 0 < c ? da.substr(a, 0, b - c) : a
      };
      W.trim = function(a) {
        return W.ltrim(W.rtrim(a))
      };
      W.rpad = function(a, b, c) {
        if (0 >= b.length) return a;
        for (a = null == a ? "null" : "" + a; a.length < c;) a += null == b ? "null" : "" + b;
        return a
      };
      W.replace = function(a, b, c) {
        return a.split(b).join(c)
      };
      W.hex = function(a, b) {
        for (var c = ""; c = "0123456789ABCDEF".charAt(a &
            15) + c, a >>>= 4, 0 < a;);
        if (null != b)
          for (; c.length < b;) c = "0" + c;
        return c
      };
      var db = function(a, b, c, d, e, f, g) {
        this.persistent = this.global = !1;
        S.call(this, a);
        this.tileWidth1x = b;
        this.tileHeight1x = c;
        this.tileWidth = b * p.SCALE | 0;
        this.tileHeight = c * p.SCALE | 0;
        this.tweenDuration = d;
        this.tweenDurationMs = 1E3 * d;
        this.growEasing = e;
        this.alphaEasing = f;
        this.pattern = g;
        this.totalCols = Math.ceil(p.screenWidth * p.SCALE / this.tileWidth);
        this.totalTiles = this.totalCols * Math.ceil(p.screenHeight * p.SCALE / this.tileHeight)
      };
      k.TileTransition = db;
      db.__name__ = "TileTransition";
      db.__super__ = qb;
      db.prototype = t(qb.prototype, {
        tileCount: null,
        fakeTween: null,
        tilemap: null,
        tileset: null,
        oldValue: null,
        totalCols: null,
        totalTiles: null,
        tileWidth1x: null,
        tileHeight1x: null,
        tileWidth: null,
        tileHeight: null,
        tweenDuration: null,
        tweenDurationMs: null,
        growEasing: null,
        alphaEasing: null,
        pattern: null,
        persistent: null,
        global: null,
        patternArray: null,
        clone: function() {
          return new db(this.duration, this.tileWidth1x, this.tileHeight1x, this.tweenDuration, this.growEasing, this.alphaEasing,
            this.pattern)
        },
        start: function() {
          this.active = !0;
          this.tileCount = new he;
          this.fakeTween = new he;
          if (null == this.patternArray && "random" == this.pattern) {
            for (var a = [], b = 0, c = this.totalTiles; b < c;) {
              var d = b++;
              a.push(d)
            }
            this.patternArray = a.slice();
            b = 0;
            for (c = this.totalTiles; b < c;) {
              d = b++;
              a = this.patternArray[d];
              var e = Math.floor(Math.random() * this.patternArray.length);
              this.patternArray[d] = this.patternArray[e];
              this.patternArray[e] = a
            }
          }
          if (this.direction == S.IN) {
            if (this.persistent)
              for (this.tilemap = db.globalTilemap, b = 0, c = this.tilemap.get_numTiles(); b <
                c;) d = b++, d = this.tilemap.getTileAt(d), d.data = this.tweenDurationMs;
            else
              for (b = new wa(this.tileWidth, this.tileHeight, !0, ob.color), this.tileset = new mj(b), this.tileset.addRect(new ha(0, 0, b.width, b.height)), this.tilemap = new ih(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0, this.tileset), p.engine.transitionLayer.addChild(this.tilemap), b = 0, c = this.totalTiles; b < c;) d = b++, e = a = 0, "read" == this.pattern ? (a = d % this.totalCols | 0, e = Math.floor(d / this.totalCols)) : "random" == this.pattern && (a = this.patternArray[d] % this.totalCols |
                0, e = Math.floor(this.patternArray[d] / this.totalCols)), d = new sg(0, a * this.tileWidth, e * this.tileHeight), d.set_originX(this.tileWidth / 2), d.set_originY(this.tileHeight / 2), d.set_x(d.get_x() + d.get_originX()), d.set_y(d.get_y() + d.get_originY()), d.data = this.tweenDurationMs, this.tilemap.addTile(d);
            this.oldValue = this.totalTiles;
            this.tileCount.tween(this.totalTiles, 0, qa.linear, 1E3 * this.duration | 0);
            this.fakeTween.tween(0, 1, qa.linear, 1E3 * (this.duration + this.tweenDuration) | 0).doOnComplete(r(this, this.stop))
          } else this.direction ==
            S.OUT ? (this.global && null != db.globalTilemap ? this.tilemap = db.globalTilemap : (b = new wa(this.tileWidth, this.tileHeight, !0, ob.color), this.tileset = new mj(b), this.tileset.addRect(new ha(0, 0, b.width, b.height)), this.tilemap = new ih(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0, this.tileset), this.persistent && (db.globalTilemap = this.tilemap)), p.engine.transitionLayer.addChild(this.tilemap), this.oldValue = 0, this.tileCount.tween(0, this.totalTiles, qa.linear, 1E3 * this.duration | 0), this.fakeTween.tween(0, 1, qa.linear,
              1E3 * (this.duration + this.tweenDuration + ob.durationPad) | 0).doOnComplete(r(this, this.stop))) : this.complete = !0
        },
        update: function(a) {
          var b = Math.floor(this.tileCount.value),
            c = b - this.oldValue;
          if (this.direction == S.IN) {
            var d = 0;
            for (c = this.tilemap.get_numTiles() - b; d < c;) {
              var e = d++;
              if (null == this.growEasing && null == this.alphaEasing)
                if (this.global) {
                  var f = this.tilemap.getTileAt(e);
                  f.set_alpha(0)
                } else this.tilemap.removeTileAt(0);
              else f = this.tilemap.getTileAt(e), f.data -= a, null != this.growEasing && 0 < f.get_scaleX() && (e =
                this.growEasing.apply(f.data / this.tweenDurationMs), f.set_scaleX(e), f.set_scaleY(e)), null != this.alphaEasing && 0 < f.get_alpha() && f.set_alpha(this.alphaEasing.apply(f.data / this.tweenDurationMs))
            }
          } else if (this.direction == S.OUT) {
            if (0 < c)
              for (d = 0; d < c;) {
                e = d++;
                var g = f = 0;
                "read" == this.pattern ? (f = (this.oldValue + e) % this.totalCols | 0, g = Math.floor((this.oldValue + e) / this.totalCols)) : "random" == this.pattern && (f = this.patternArray[this.oldValue + e] % this.totalCols | 0, g = Math.floor(this.patternArray[this.oldValue + e] / this.totalCols));
                this.global && this.tilemap.get_numTiles() == this.totalTiles ? f = this.tilemap.getTileAt(this.oldValue + e) : (f = new sg(0, f * this.tileWidth, g * this.tileHeight), f.set_originX(this.tileWidth / 2), f.set_originY(this.tileHeight / 2), f.set_x(f.get_x() + f.get_originX()), f.set_y(f.get_y() + f.get_originY()), this.tilemap.addTile(f));
                f.data = 0;
                null != this.growEasing && (f.set_scaleX(0), f.set_scaleY(0));
                null != this.alphaEasing ? f.set_alpha(0) : this.global && f.set_alpha(1)
              }
            if (null != this.growEasing || null != this.alphaEasing)
              for (d = 0, c = this.tilemap.get_numTiles(); d <
                c;) e = d++, f = this.tilemap.getTileAt(e), f.data < this.tweenDurationMs && (f.data += a, null != this.growEasing && (e = this.growEasing.apply(f.data / this.tweenDurationMs), f.set_scaleX(e), f.set_scaleY(e)), null != this.alphaEasing && f.set_alpha(this.alphaEasing.apply(f.data / this.tweenDurationMs)))
          }
          this.oldValue = b
        },
        cleanup: function() {
          null != this.tilemap && (this.direction == S.OUT && this.persistent ? db.globalTilemap = this.tilemap : (p.engine.transitionLayer.removeChild(this.tilemap), this.tileset = this.tilemap = null, this.global || (db.globalTilemap =
            null)))
        },
        __class__: db
      });
      var ob = function() {};
      k.TransitionCore = ob;
      ob.__name__ = "TransitionCore";
      ob.switchScene = function(a, b, c) {
        null == b ? null != c && (b = c.clone()) : null == c && (c = b.clone());
        ob.compare(b, c);
        null != b && (b.direction = S.OUT);
        null != c && (c.direction = S.IN);
        p.engine.switchScene(a, b, c)
      };
      ob.tileTransition = function(a, b, c, d, e, f, g) {
        null == g && (g = "read");
        null == d && (d = 0);
        null == c && (c = -1);
        null == b && (b = -1);
        null == a && (a = 1);
        0 >= a && (a = 1);
        0 >= b && (b = u.getTileWidth());
        0 >= c && (c = u.getTileHeight());
        return new db(a, b | 0, c | 0, d, e, f,
          g)
      };
      ob.barTransition = function(a, b, c, d) {
        null == a && (a = 1);
        0 >= a && (a = 1);
        return new J(a, b, c, d)
      };
      ob.setColor = function(a) {
        ob.color = -16777216 | a
      };
      ob.setDurationPad = function(a) {
        ob.durationPad = a
      };
      ob.getEasing = function(a, b) {
        if ("in" == b) switch (a) {
          case "back":
            return qa.backIn;
          case "bounce":
            return qa.bounceIn;
          case "circ":
            return qa.circIn;
          case "cubic":
            return qa.cubicIn;
          case "elastic":
            return qa.elasticIn;
          case "expo":
            return qa.expoIn;
          case "quad":
            return qa.quadIn;
          case "quart":
            return qa.quartIn;
          case "quint":
            return qa.quintIn;
          case "sine":
            return qa.sineIn;
          case "warp":
            return qa.warpIn
        } else if ("out" == b) switch (a) {
          case "back":
            return qa.backOut;
          case "bounce":
            return qa.bounceOut;
          case "circ":
            return qa.circOut;
          case "cubic":
            return qa.cubicOut;
          case "elastic":
            return qa.elasticOut;
          case "expo":
            return qa.expoOut;
          case "quad":
            return qa.quadOut;
          case "quart":
            return qa.quartOut;
          case "quint":
            return qa.quintOut;
          case "sine":
            return qa.sineOut;
          case "warp":
            return qa.warpOut
        } else if ("inOut" == b) switch (a) {
          case "back":
            return qa.backInOut;
          case "bounce":
            return qa.bounceInOut;
          case "circ":
            return qa.circInOut;
          case "cubic":
            return qa.cubicInOut;
          case "elastic":
            return qa.elasticInOut;
          case "expo":
            return qa.expoInOut;
          case "quad":
            return qa.quadInOut;
          case "quart":
            return qa.quartInOut;
          case "quint":
            return qa.quintInOut;
          case "sine":
            return qa.sineInOut;
          case "warp":
            return qa.warpInOut
        } else if ("outIn" == b) switch (a) {
          case "back":
            return qa.backOutIn;
          case "bounce":
            return qa.bounceOutIn;
          case "circ":
            return qa.circOutIn;
          case "cubic":
            return qa.cubicOutIn;
          case "elastic":
            return qa.elasticOutIn;
          case "expo":
            return qa.expoOutIn;
          case "quad":
            return qa.quadOutIn;
          case "quart":
            return qa.quartOutIn;
          case "quint":
            return qa.quintOutIn;
          case "sine":
            return qa.sineOutIn;
          case "warp":
            return qa.warpOutIn
        }
        return qa.linear
      };
      ob.compare = function(a, b) {
        null != a && null != b && (a instanceof db && b instanceof db ? (a = K.__cast(a, db), b = K.__cast(b, db), a.tileWidth == b.tileWidth && a.tileHeight == b.tileHeight && (a.persistent = !0, b.persistent = !0)) : a instanceof J && b instanceof J && (a = K.__cast(a, J), b = K.__cast(b, J), a.thickness == b.thickness &&
          a.type == b.type && (a.persistent = !0, b.persistent = !0)))
      };
      var ec = O.ValueType = {
        __ename__: "ValueType",
        __constructs__: null,
        TNull: {
          _hx_name: "TNull",
          _hx_index: 0,
          __enum__: "ValueType",
          toString: v
        },
        TInt: {
          _hx_name: "TInt",
          _hx_index: 1,
          __enum__: "ValueType",
          toString: v
        },
        TFloat: {
          _hx_name: "TFloat",
          _hx_index: 2,
          __enum__: "ValueType",
          toString: v
        },
        TBool: {
          _hx_name: "TBool",
          _hx_index: 3,
          __enum__: "ValueType",
          toString: v
        },
        TObject: {
          _hx_name: "TObject",
          _hx_index: 4,
          __enum__: "ValueType",
          toString: v
        },
        TFunction: {
          _hx_name: "TFunction",
          _hx_index: 5,
          __enum__: "ValueType",
          toString: v
        },
        TClass: (w = function(a) {
          return {
            _hx_index: 6,
            c: a,
            __enum__: "ValueType",
            toString: v
          }
        }, w._hx_name = "TClass", w.__params__ = ["c"], w),
        TEnum: (w = function(a) {
          return {
            _hx_index: 7,
            e: a,
            __enum__: "ValueType",
            toString: v
          }
        }, w._hx_name = "TEnum", w.__params__ = ["e"], w),
        TUnknown: {
          _hx_name: "TUnknown",
          _hx_index: 8,
          __enum__: "ValueType",
          toString: v
        }
      };
      ec.__constructs__ = [ec.TNull, ec.TInt, ec.TFloat, ec.TBool, ec.TObject, ec.TFunction, ec.TClass, ec.TEnum, ec.TUnknown];
      var Qb = function() {};
      k.Type = Qb;
      Qb.__name__ =
        "Type";
      Qb.resolveEnum = function(a) {
        return O[a]
      };
      Qb.createInstance = function(a, b) {
        return new(Function.prototype.bind.apply(a, [null].concat(b)))
      };
      Qb.createEnum = function(a, b, c) {
        var d = Y.field(a, b);
        if (null == d) throw F.thrown("No such constructor " + b);
        if (Y.isFunction(d)) {
          if (null == c) throw F.thrown("Constructor " + b + " need parameters");
          return d.apply(a, c)
        }
        if (null != c && 0 != c.length) throw F.thrown("Constructor " + b + " does not need parameters");
        return d
      };
      Qb.getInstanceFields = function(a) {
        var b = [],
          c;
        for (c in a.prototype) b.push(c);
        da.remove(b, "__class__");
        da.remove(b, "__properties__");
        return b
      };
      Qb.typeof = function(a) {
        switch (typeof a) {
          case "boolean":
            return ec.TBool;
          case "function":
            return a.__name__ || a.__ename__ ? ec.TObject : ec.TFunction;
          case "number":
            return Math.ceil(a) == a % 2147483648 ? ec.TInt : ec.TFloat;
          case "object":
            if (null == a) return ec.TNull;
            var b = a.__enum__;
            if (null != b) return ec.TEnum(O[b]);
            a = K.getClass(a);
            return null != a ? ec.TClass(a) : ec.TObject;
          case "string":
            return ec.TClass(String);
          case "undefined":
            return ec.TNull;
          default:
            return ec.TUnknown
        }
      };
      Qb.enumParameters = function(a) {
        var b = O[a.__enum__].__constructs__[a._hx_index].__params__;
        if (null != b) {
          for (var c = [], d = 0; d < b.length;) {
            var e = b[d];
            ++d;
            c.push(a[e])
          }
          return c
        }
        return []
      };
      var Ya = {
          gt: function(a, b) {
            var c = 0 > a;
            return c != 0 > b ? c : a > b
          },
          toFloat: function(a) {
            return 0 > a ? 4294967296 + a : a + 0
          }
        },
        Pe = function() {};
      k["openfl.events.IEventDispatcher"] = Pe;
      Pe.__name__ = "openfl.events.IEventDispatcher";
      Pe.__isInterface__ = !0;
      Pe.prototype = {
        addEventListener: null,
        dispatchEvent: null,
        hasEventListener: null,
        removeEventListener: null,
        willTrigger: null,
        __class__: Pe
      };
      var Ka = function(a) {
        null != a && (this.__targetDispatcher = a)
      };
      k["openfl.events.EventDispatcher"] = Ka;
      Ka.__name__ = "openfl.events.EventDispatcher";
      Ka.__interfaces__ = [Pe];
      Ka.prototype = {
        __eventMap: null,
        __iterators: null,
        __targetDispatcher: null,
        addEventListener: function(a, b, c, d, e) {
          null == d && (d = 0);
          null == c && (c = !1);
          if (null != b)
            if (null == this.__eventMap && (this.__eventMap = new ua, this.__iterators = new ua), Object.prototype.hasOwnProperty.call(this.__eventMap.h, a)) {
              h = this.__eventMap.h[a];
              e =
                0;
              for (var f = h.length; e < f;) {
                var g = e++;
                if (h[g].match(b, c)) return
              }
              a = this.__iterators.h[a];
              for (e = 0; e < a.length;) f = a[e], ++e, f.active && f.copy();
              this.__addListenerByPriority(h, new nj(b, c, d))
            } else {
              var h = [];
              h.push(new nj(b, c, d));
              f = new oj(h);
              this.__eventMap.h[a] = h;
              this.__iterators.h[a] = [f]
            }
        },
        dispatchEvent: function(a) {
          a.target = null != this.__targetDispatcher ? this.__targetDispatcher : this;
          return this.__dispatchEvent(a)
        },
        hasEventListener: function(a) {
          return null == this.__eventMap ? !1 : Object.prototype.hasOwnProperty.call(this.__eventMap.h,
            a)
        },
        removeEventListener: function(a, b, c) {
          null == c && (c = !1);
          if (null != this.__eventMap && null != b) {
            var d = this.__eventMap.h[a];
            if (null != d) {
              for (var e = this.__iterators.h[a], f = 0, g = d.length; f < g;) {
                var h = f++;
                if (d[h].match(b, c)) {
                  for (b = 0; b < e.length;) c = e[b], ++b, c.remove(d[h], h);
                  d.splice(h, 1);
                  break
                }
              }
              0 == d.length && (d = this.__eventMap, e = a, Object.prototype.hasOwnProperty.call(d.h, e) && delete d.h[e], d = this.__iterators, e = a, Object.prototype.hasOwnProperty.call(d.h, e) && delete d.h[e]);
              0 >= Object.keys(this.__eventMap.h).length &&
                (this.__iterators = this.__eventMap = null)
            }
          }
        },
        toString: function() {
          return "[object " + K.getClass(this).__name__.split(".").pop() + "]"
        },
        willTrigger: function(a) {
          return this.hasEventListener(a)
        },
        __dispatchEvent: function(a) {
          if (null == this.__eventMap || null == a) return !0;
          var b = a.type,
            c = this.__eventMap.h[b];
          if (null == c) return !0;
          null == a.target && (a.target = null != this.__targetDispatcher ? this.__targetDispatcher : this);
          a.currentTarget = this;
          var d = 1 == a.eventPhase;
          b = this.__iterators.h[b];
          var e = b[0];
          e.active && (e = new oj(c), b.push(e));
          e.start();
          for (var f = e; f.hasNext();) {
            var g = f.next();
            if (null != g && g.useCapture == d && (g.callback(a), a.__isCanceledNow)) break
          }
          e.stop();
          e != b[0] ? da.remove(b, e) : e.reset(c);
          return !a.isDefaultPrevented()
        },
        __removeAllListeners: function() {
          this.__iterators = this.__eventMap = null
        },
        __addListenerByPriority: function(a, b) {
          for (var c = a.length, d = c, e = 0; e < c;) {
            var f = e++;
            if (a[f].priority < b.priority) {
              d = f;
              break
            }
          }
          a.splice(d, 0, b)
        },
        __class__: Ka
      };
      var Zd = function() {};
      k["openfl.display.IBitmapDrawable"] = Zd;
      Zd.__name__ = "openfl.display.IBitmapDrawable";
      Zd.__isInterface__ = !0;
      Zd.prototype = {
        __blendMode: null,
        __drawableType: null,
        __isMask: null,
        __renderable: null,
        __renderTransform: null,
        __transform: null,
        __worldAlpha: null,
        __worldColorTransform: null,
        __worldTransform: null,
        __getBounds: null,
        __update: null,
        __updateTransforms: null,
        __mask: null,
        __scrollRect: null,
        __class__: Zd
      };
      var Fb = {
          __properties__: {
            set_length: "set_length",
            get_length: "get_length",
            set_fixed: "set_fixed",
            get_fixed: "get_fixed"
          },
          concat: function(a, b) {
            return a.concat(b)
          },
          copy: function(a) {
            return a.copy()
          },
          filter: function(a, b) {
            return a.filter(b)
          },
          get: function(a, b) {
            return a.get(b)
          },
          indexOf: function(a, b, c) {
            null == c && (c = 0);
            return a.indexOf(b, c)
          },
          insertAt: function(a, b, c) {
            a.insertAt(b, c)
          },
          iterator: function(a) {
            return a.iterator()
          },
          join: function(a, b) {
            null == b && (b = ",");
            return a.join(b)
          },
          lastIndexOf: function(a, b, c) {
            return a.lastIndexOf(b, c)
          },
          pop: function(a) {
            return a.pop()
          },
          push: function(a, b) {
            return a.push(b)
          },
          removeAt: function(a, b) {
            return a.removeAt(b)
          },
          reverse: function(a) {
            return a.reverse()
          },
          set: function(a, b,
            c) {
            return a.set(b, c)
          },
          shift: function(a) {
            return a.shift()
          },
          slice: function(a, b, c) {
            null == b && (b = 0);
            return a.slice(b, c)
          },
          sort: function(a, b) {
            a.sort(b)
          },
          splice: function(a, b, c) {
            return a.splice(b, c)
          },
          toString: function(a) {
            return null != a ? a.toString() : null
          },
          unshift: function(a, b) {
            a.unshift(b)
          },
          convert: function(a) {
            return a
          },
          toBoolVector: function(a, b, c, d) {
            return new Df(b, c, d)
          },
          toIntVector: function(a, b, c, d) {
            return new Ef(b, c, d)
          },
          toFloatVector: function(a, b, c, d) {
            return new Ff(b, c, d, !0)
          },
          toFunctionVector: function(a,
            b, c, d) {
            return new Gf(b, c, d)
          },
          toObjectVector: function(a, b, c, d) {
            return new sf(b, c, d, !0)
          },
          toNullVector: function(a, b, c, d) {
            return new sf(b, c, d, !0)
          },
          fromBoolVector: function(a) {
            return a
          },
          fromIntVector: function(a) {
            return a
          },
          fromFloatVector: function(a) {
            return a
          },
          fromFunctionVector: function(a) {
            return a
          },
          fromObjectVector: function(a) {
            return a
          },
          get_fixed: function(a) {
            return a.fixed
          },
          set_fixed: function(a, b) {
            return a.fixed = b
          },
          get_length: function(a) {
            return a.get_length()
          },
          set_length: function(a, b) {
            return a.set_length(b)
          }
        },
        E = function(a, b, c) {
          this.__pool = new pc;
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList = new bb;
          null != a && (this.create = a);
          null != b && (this.clean = b);
          null != c && this.set_size(c)
        };
      k["lime.utils.ObjectPool"] = E;
      E.__name__ = "lime.utils.ObjectPool";
      E.prototype = {
        activeObjects: null,
        inactiveObjects: null,
        __inactiveObject0: null,
        __inactiveObject1: null,
        __inactiveObjectList: null,
        __pool: null,
        __size: null,
        add: function(a) {
          this.__pool.exists(a) || (this.__pool.set(a,
            !1), this.clean(a), this.__pool.set(a, !1), null == this.__inactiveObject0 ? this.__inactiveObject0 = a : null == this.__inactiveObject1 ? this.__inactiveObject1 = a : this.__inactiveObjectList.add(a), this.inactiveObjects++)
        },
        clean: function(a) {},
        clear: function() {
          this.__pool = new pc;
          this.inactiveObjects = this.activeObjects = 0;
          this.__inactiveObject1 = this.__inactiveObject0 = null;
          this.__inactiveObjectList.clear()
        },
        create: function() {
          return null
        },
        get: function() {
          var a = null;
          if (0 < this.inactiveObjects) null != this.__inactiveObject0 ?
            (a = this.__inactiveObject0, this.__inactiveObject0 = null) : null != this.__inactiveObject1 ? (a = this.__inactiveObject1, this.__inactiveObject1 = null) : (a = this.__inactiveObjectList.pop(), 0 < this.__inactiveObjectList.length && (this.__inactiveObject0 = this.__inactiveObjectList.pop()), 0 < this.__inactiveObjectList.length && (this.__inactiveObject1 = this.__inactiveObjectList.pop())), this.__pool.set(a, !0), this.inactiveObjects--, this.activeObjects++;
          else if (null == this.__size || this.activeObjects < this.__size) a = this.create(),
            null != a && (this.__pool.set(a, !0), this.activeObjects++);
          return a
        },
        release: function(a) {
          this.__pool.exists(a) ? this.__pool.get(a) || Na.error("Object has already been released", {
            fileName: "lime/utils/ObjectPool.hx",
            lineNumber: 106,
            className: "lime.utils.ObjectPool",
            methodName: "release"
          }) : Na.error("Object is not a member of the pool", {
            fileName: "lime/utils/ObjectPool.hx",
            lineNumber: 102,
            className: "lime.utils.ObjectPool",
            methodName: "release"
          });
          this.activeObjects--;
          null == this.__size || this.activeObjects + this.inactiveObjects <
            this.__size ? (this.clean(a), this.__pool.set(a, !1), null == this.__inactiveObject0 ? this.__inactiveObject0 = a : null == this.__inactiveObject1 ? this.__inactiveObject1 = a : this.__inactiveObjectList.add(a), this.inactiveObjects++) : this.__pool.remove(a)
        },
        remove: function(a) {
          this.__pool.exists(a) && (this.__pool.remove(a), this.__inactiveObject0 == a ? (this.__inactiveObject0 = null, this.inactiveObjects--) : this.__inactiveObject1 == a ? (this.__inactiveObject1 = null, this.inactiveObjects--) : this.__inactiveObjectList.remove(a) ? this.inactiveObjects-- :
            this.activeObjects--)
        },
        __addInactive: function(a) {
          this.__pool.set(a, !1);
          null == this.__inactiveObject0 ? this.__inactiveObject0 = a : null == this.__inactiveObject1 ? this.__inactiveObject1 = a : this.__inactiveObjectList.add(a);
          this.inactiveObjects++
        },
        __getInactive: function() {
          if (null != this.__inactiveObject0) {
            var a = this.__inactiveObject0;
            this.__inactiveObject0 = null
          } else null != this.__inactiveObject1 ? (a = this.__inactiveObject1, this.__inactiveObject1 = null) : (a = this.__inactiveObjectList.pop(), 0 < this.__inactiveObjectList.length &&
            (this.__inactiveObject0 = this.__inactiveObjectList.pop()), 0 < this.__inactiveObjectList.length && (this.__inactiveObject1 = this.__inactiveObjectList.pop()));
          this.__pool.set(a, !0);
          this.inactiveObjects--;
          this.activeObjects++;
          return a
        },
        __removeInactive: function(a) {
          if (!(0 >= a || 0 == this.inactiveObjects) && (null != this.__inactiveObject0 && (this.__pool.remove(this.__inactiveObject0), this.__inactiveObject0 = null, this.inactiveObjects--, --a), 0 != a && 0 != this.inactiveObjects && (null != this.__inactiveObject1 && (this.__pool.remove(this.__inactiveObject1),
              this.__inactiveObject1 = null, this.inactiveObjects--, --a), 0 != a && 0 != this.inactiveObjects)))
            for (var b = this.__inactiveObjectList.h; null != b;) {
              var c = b.item;
              b = b.next;
              this.__pool.remove(c);
              this.__inactiveObjectList.remove(c);
              this.inactiveObjects--;
              --a;
              if (0 == a || 0 == this.inactiveObjects) break
            }
        },
        get_size: function() {
          return this.__size
        },
        set_size: function(a) {
          if (null == a) this.__size = null;
          else {
            var b = this.inactiveObjects + this.activeObjects;
            this.__size = a;
            if (b > a) this.__removeInactive(b - a);
            else if (a > b)
              for (var c = 0, d = a - b; c <
                d;)
                if (c++, b = this.create(), null != b) this.__pool.set(b, !1), this.__inactiveObjectList.add(b), this.inactiveObjects++;
                else break
          }
          return a
        },
        __class__: E,
        __properties__: {
          set_size: "set_size",
          get_size: "get_size"
        }
      };
      var kd = function() {};
      k["haxe.IMap"] = kd;
      kd.__name__ = "haxe.IMap";
      kd.__isInterface__ = !0;
      kd.prototype = {
        get: null,
        set: null,
        exists: null,
        remove: null,
        keys: null,
        iterator: null,
        keyValueIterator: null,
        __class__: kd
      };
      var pc = function() {
        this.h = {
          __keys__: {}
        }
      };
      k["haxe.ds.ObjectMap"] = pc;
      pc.__name__ = "haxe.ds.ObjectMap";
      pc.__interfaces__ = [kd];
      pc.prototype = {
        h: null,
        set: function(a, b) {
          var c = a.__id__;
          null == c && (c = a.__id__ = L.$haxeUID++);
          this.h[c] = b;
          this.h.__keys__[c] = a
        },
        get: function(a) {
          return this.h[a.__id__]
        },
        exists: function(a) {
          return null != this.h.__keys__[a.__id__]
        },
        remove: function(a) {
          a = a.__id__;
          if (null == this.h.__keys__[a]) return !1;
          delete this.h[a];
          delete this.h.__keys__[a];
          return !0
        },
        keys: function() {
          var a = [],
            b;
          for (b in this.h.__keys__) this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
          return new Ne(a)
        },
        iterator: function() {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function() {
              return this.it.hasNext()
            },
            next: function() {
              var a = this.it.next();
              return this.ref[a.__id__]
            }
          }
        },
        keyValueIterator: function() {
          return new jh(this)
        },
        toString: function() {
          var a = "{";
          for (var b = this.keys(); b.hasNext();) {
            var c = b.next();
            a += M.string(M.string(c));
            a += " => ";
            a += M.string(M.string(this.h[c.__id__]));
            b.hasNext() && (a += ", ")
          }
          return a + "}"
        },
        __class__: pc
      };
      var bb = function() {
        this.length = 0
      };
      k["haxe.ds.List"] = bb;
      bb.__name__ = "haxe.ds.List";
      bb.prototype = {
        h: null,
        q: null,
        length: null,
        add: function(a) {
          a = new tk(a, null);
          null == this.h ? this.h = a : this.q.next = a;
          this.q = a;
          this.length++
        },
        push: function(a) {
          this.h = a = new tk(a, this.h);
          null == this.q && (this.q = a);
          this.length++
        },
        pop: function() {
          if (null == this.h) return null;
          var a = this.h.item;
          this.h = this.h.next;
          null == this.h && (this.q = null);
          this.length--;
          return a
        },
        clear: function() {
          this.q = this.h = null;
          this.length = 0
        },
        remove: function(a) {
          for (var b = null, c = this.h; null != c;) {
            if (c.item == a) return null == b ? this.h = c.next : b.next = c.next, this.q == c && (this.q = b), this.length--,
              !0;
            b = c;
            c = c.next
          }
          return !1
        },
        iterator: function() {
          return new Bn(this.h)
        },
        __class__: bb
      };
      var ya = function() {
        Ka.call(this);
        this.__alpha = this.__drawableType = 1;
        this.__blendMode = 10;
        this.__cacheAsBitmap = !1;
        this.__transform = new Ea;
        this.__visible = !0;
        this.__rotationSine = this.__rotation = 0;
        this.__worldAlpha = this.__scaleY = this.__scaleX = this.__rotationCosine = 1;
        this.__worldBlendMode = 10;
        this.__worldTransform = new Ea;
        this.__worldColorTransform = new Ec;
        this.__renderTransform = new Ea;
        this.__worldVisible = !0;
        this.set_name("instance" +
          ++ya.__instanceCount);
        null != ya.__initStage && (this.stage = ya.__initStage, ya.__initStage = null, this.stage.addChild(this))
      };
      k["openfl.display.DisplayObject"] = ya;
      ya.__name__ = "openfl.display.DisplayObject";
      ya.__interfaces__ = [Zd];
      ya.__calculateAbsoluteTransform = function(a, b, c) {
        c.a = a.a * b.a + a.b * b.c;
        c.b = a.a * b.b + a.b * b.d;
        c.c = a.c * b.a + a.d * b.c;
        c.d = a.c * b.b + a.d * b.d;
        c.tx = a.tx * b.a + a.ty * b.c + b.tx;
        c.ty = a.tx * b.b + a.ty * b.d + b.ty
      };
      ya.__super__ = Ka;
      ya.prototype = t(Ka.prototype, {
        opaqueBackground: null,
        parent: null,
        stage: null,
        __alpha: null,
        __blendMode: null,
        __cacheAsBitmap: null,
        __cacheAsBitmapMatrix: null,
        __cacheBitmap: null,
        __cacheBitmapBackground: null,
        __cacheBitmapColorTransform: null,
        __cacheBitmapData: null,
        __cacheBitmapData2: null,
        __cacheBitmapData3: null,
        __cacheBitmapMatrix: null,
        __cacheBitmapRenderer: null,
        __cairo: null,
        __children: null,
        __customRenderClear: null,
        __customRenderEvent: null,
        __drawableType: null,
        __filters: null,
        __graphics: null,
        __interactive: null,
        __isCacheBitmapRender: null,
        __isMask: null,
        __loaderInfo: null,
        __mask: null,
        __maskTarget: null,
        __name: null,
        __objectTransform: null,
        __renderable: null,
        __renderDirty: null,
        __renderParent: null,
        __renderTransform: null,
        __renderTransformCache: null,
        __renderTransformChanged: null,
        __rotation: null,
        __rotationCosine: null,
        __rotationSine: null,
        __scale9Grid: null,
        __scaleX: null,
        __scaleY: null,
        __scrollRect: null,
        __shader: null,
        __tempPoint: null,
        __transform: null,
        __transformDirty: null,
        __visible: null,
        __worldAlpha: null,
        __worldAlphaChanged: null,
        __worldBlendMode: null,
        __worldClip: null,
        __worldClipChanged: null,
        __worldColorTransform: null,
        __worldShader: null,
        __worldScale9Grid: null,
        __worldTransform: null,
        __worldVisible: null,
        __worldVisibleChanged: null,
        __worldTransformInvalid: null,
        __worldZ: null,
        __canvas: null,
        __context: null,
        __style: null,
        addEventListener: function(a, b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          switch (a) {
            case "activate":
            case "deactivate":
            case "enterFrame":
            case "exitFrame":
            case "frameConstructed":
            case "render":
              Object.prototype.hasOwnProperty.call(ya.__broadcastEvents.h, a) || (ya.__broadcastEvents.h[a] = []);
              var f = ya.__broadcastEvents.h[a]; -
              1 == f.indexOf(this) && f.push(this);
              break;
            case "clearDOM":
            case "renderCairo":
            case "renderCanvas":
            case "renderDOM":
            case "renderOpenGL":
              null == this.__customRenderEvent && (this.__customRenderEvent = new tg(null), this.__customRenderEvent.objectColorTransform = new Ec, this.__customRenderEvent.objectMatrix = new Ea, this.__customRenderClear = !0)
          }
          Ka.prototype.addEventListener.call(this, a, b, c, d, e)
        },
        dispatchEvent: function(a) {
          if (a instanceof Ob) {
            var b = this.__getRenderTransform();
            a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
            b = this.__getRenderTransform();
            a.stageY = a.localX * b.b + a.localY * b.d + b.ty
          } else a instanceof $d && (b = this.__getRenderTransform(), a.stageX = a.localX * b.a + a.localY * b.c + b.tx, b = this.__getRenderTransform(), a.stageY = a.localX * b.b + a.localY * b.d + b.ty);
          a.target = this;
          return this.__dispatchWithCapture(a)
        },
        getBounds: function(a) {
          var b = Ea.__pool.get();
          if (null != a && a != this) {
            b.copyFrom(this.__getWorldTransform());
            var c = Ea.__pool.get();
            c.copyFrom(a.__getWorldTransform());
            c.invert();
            b.concat(c);
            Ea.__pool.release(c)
          } else b.identity();
          a = new ha;
          this.__getBounds(a, b);
          Ea.__pool.release(b);
          return a
        },
        getRect: function(a) {
          return this.getBounds(a)
        },
        globalToLocal: function(a) {
          return this.__globalToLocal(a, new la)
        },
        hitTestObject: function(a) {
          if (null != a && null != a.parent && null != this.parent) {
            var b = this.getBounds(this);
            a = a.getBounds(this);
            return b.intersects(a)
          }
          return !1
        },
        hitTestPoint: function(a, b, c) {
          null == c && (c = !1);
          return null != this.stage ? this.__hitTest(a, b, c, null, !1, this) : !1
        },
        invalidate: function() {
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        localToGlobal: function(a) {
          return this.__getRenderTransform().transformPoint(a)
        },
        removeEventListener: function(a, b, c) {
          null == c && (c = !1);
          Ka.prototype.removeEventListener.call(this, a, b, c);
          switch (a) {
            case "activate":
            case "deactivate":
            case "enterFrame":
            case "exitFrame":
            case "frameConstructed":
            case "render":
              this.hasEventListener(a) || Object.prototype.hasOwnProperty.call(ya.__broadcastEvents.h, a) && da.remove(ya.__broadcastEvents.h[a], this);
              break;
            case "clearDOM":
            case "renderCairo":
            case "renderCanvas":
            case "renderDOM":
            case "renderOpenGL":
              this.hasEventListener("clearDOM") ||
                this.hasEventListener("renderCairo") || this.hasEventListener("renderCanvas") || this.hasEventListener("renderDOM") || this.hasEventListener("renderOpenGL") || (this.__customRenderEvent = null)
          }
        },
        __cleanup: function() {
          this.__context = this.__canvas = this.__cairo = null;
          null != this.__graphics && this.__graphics.__cleanup();
          null != this.__cacheBitmap && (this.__cacheBitmap.__cleanup(), this.__cacheBitmap = null);
          null != this.__cacheBitmapData && (this.__cacheBitmapData.dispose(), this.__cacheBitmapData = null)
        },
        __dispatch: function(a) {
          if (null !=
            this.__eventMap && this.hasEventListener(a.type)) {
            var b = Ka.prototype.__dispatchEvent.call(this, a);
            return a.__isCanceled ? !0 : b
          }
          return !0
        },
        __dispatchChildren: function(a) {},
        __dispatchEvent: function(a) {
          var b = a.bubbles ? this.parent : null,
            c = Ka.prototype.__dispatchEvent.call(this, a);
          if (a.__isCanceled) return !0;
          null != b && b != this && (a.eventPhase = 3, null == a.target && (a.target = this), b.__dispatchEvent(a));
          return c
        },
        __dispatchWithCapture: function(a) {
          null == a.target && (a.target = this);
          if (null != this.parent)
            if (a.eventPhase = 1,
              this.parent == this.stage) this.parent.__dispatch(a);
            else {
              for (var b = ya.__tempStack.get(), c = this.parent, d = 0; null != c;) b.set(d, c), c = c.parent, ++d;
              c = 0;
              for (var e = d; c < e;) {
                var f = c++;
                b.get(d - f - 1).__dispatch(a)
              }
              ya.__tempStack.release(b)
            } a.eventPhase = 2;
          return this.__dispatchEvent(a)
        },
        __enterFrame: function(a) {},
        __getBounds: function(a, b) {
          null != this.__graphics && this.__graphics.__getBounds(a, b)
        },
        __getCursor: function() {
          return null
        },
        __getFilterBounds: function(a, b) {
          this.__getRenderBounds(a, b);
          if (null != this.__filters) {
            b =
              ha.__pool.get();
            for (var c = 0, d = this.__filters; c < d.length;) {
              var e = d[c];
              ++c;
              b.__expand(-e.__leftExtension, -e.__topExtension, e.__leftExtension + e.__rightExtension, e.__topExtension + e.__bottomExtension)
            }
            a.width += b.width;
            a.height += b.height;
            a.x += b.x;
            a.y += b.y;
            ha.__pool.release(b)
          }
        },
        __getInteractive: function(a) {
          return !1
        },
        __getLocalBounds: function(a) {
          this.__getBounds(a, this.__transform);
          a.x -= this.__transform.tx;
          a.y -= this.__transform.ty
        },
        __getRenderBounds: function(a, b) {
          if (null == this.__scrollRect) this.__getBounds(a,
            b);
          else {
            var c = ha.__pool.get();
            c.copyFrom(this.__scrollRect);
            c.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            ha.__pool.release(c)
          }
        },
        __getRenderTransform: function() {
          this.__getWorldTransform();
          return this.__renderTransform
        },
        __getWorldTransform: function() {
          if (this.__transformDirty || this.__worldTransformInvalid) {
            var a = [],
              b = this;
            if (null == this.parent) this.__update(!0, !1);
            else
              for (; b != this.stage && (a.push(b), b = b.parent, null != b););
            for (var c = a.length; 0 <= --c;) b = a[c], b.__update(!0, !1)
          }
          return this.__worldTransform
        },
        __globalToLocal: function(a, b) {
          this.__getRenderTransform();
          if (a == b) {
            var c = this.__renderTransform,
              d = c.a * c.d - c.b * c.c;
            if (0 == d) a.x = -c.tx, a.y = -c.ty;
            else {
              var e = 1 / d * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
              a.y = 1 / d * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
              a.x = e
            }
          } else c = this.__renderTransform, d = c.a * c.d - c.b * c.c, b.x = 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx)), c = this.__renderTransform, d = c.a * c.d - c.b * c.c, b.y = 0 == d ? -c.ty : 1 / d * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
          return b
        },
        __hitTest: function(a, b, c, d, e, f) {
          if (null != this.__graphics) {
            if (!f.__visible ||
              this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
            if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())) return null == d || e || d.push(f), !0
          }
          return !1
        },
        __hitTestMask: function(a, b) {
          return null != this.__graphics && this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()) ? !0 : !1
        },
        __readGraphicsData: function(a, b) {
          null != this.__graphics && this.__graphics.__readGraphicsData(a)
        },
        __setParentRenderDirty: function() {
          var a = null != this.__renderParent ? this.__renderParent : this.parent;
          null == a || a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty())
        },
        __setRenderDirty: function() {
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        __setStageReference: function(a) {
          this.stage = a
        },
        __setTransformDirty: function() {
          this.__transformDirty || (this.__transformDirty = !0, this.__setWorldTransformInvalid(), this.__setParentRenderDirty())
        },
        __setWorldTransformInvalid: function() {
          this.__worldTransformInvalid = !0
        },
        __stopAllMovieClips: function() {},
        __update: function(a, b) {
          var c =
            null != this.__renderParent ? this.__renderParent : this.parent;
          this.__isMask && null == c && (c = this.__maskTarget);
          this.__renderable = this.__visible && 0 != this.__scaleX && 0 != this.__scaleY && !this.__isMask && (null == c || !c.__isMask);
          this.__updateTransforms();
          this.__worldTransformInvalid = this.__transformDirty = !1;
          if (!a)
            if (ya.__supportDOM && (this.__renderTransformChanged = !this.__renderTransform.equals(this.__renderTransformCache), null == this.__renderTransformCache ? this.__renderTransformCache = this.__renderTransform.clone() :
                this.__renderTransformCache.copyFrom(this.__renderTransform)), null != c) {
              if (ya.__supportDOM) {
                var d = c.__worldVisible && this.__visible;
                this.__worldVisibleChanged = this.__worldVisible != d;
                this.__worldVisible = d;
                d = this.get_alpha() * c.__worldAlpha;
                this.__worldAlphaChanged = this.__worldAlpha != d;
                this.__worldAlpha = d
              } else this.__worldAlpha = this.get_alpha() * c.__worldAlpha;
              null != this.__objectTransform ? (this.__worldColorTransform.__copyFrom(this.__objectTransform.get_colorTransform()), this.__worldColorTransform.__combine(c.__worldColorTransform)) :
                this.__worldColorTransform.__copyFrom(c.__worldColorTransform);
              this.__worldBlendMode = null == this.__blendMode || 10 == this.__blendMode ? c.__worldBlendMode : this.__blendMode;
              this.__worldShader = null == this.__shader ? c.__shader : this.__shader;
              this.__worldScale9Grid = null == this.__scale9Grid ? c.__scale9Grid : this.__scale9Grid
            } else this.__worldAlpha = this.get_alpha(), ya.__supportDOM && (this.__worldVisibleChanged = this.__worldVisible != this.__visible, this.__worldVisible = this.__visible, this.__worldAlphaChanged = this.__worldAlpha !=
              this.get_alpha()), null != this.__objectTransform ? this.__worldColorTransform.__copyFrom(this.__objectTransform.get_colorTransform()) : this.__worldColorTransform.__identity(), this.__worldBlendMode = this.__blendMode, this.__worldShader = this.__shader, this.__worldScale9Grid = this.__scale9Grid;
          b && null != this.get_mask() && this.get_mask().__update(a, !0)
        },
        __updateTransforms: function(a) {
          var b = null != a;
          a = b ? a : this.__transform;
          null == this.__worldTransform && (this.__worldTransform = new Ea);
          null == this.__renderTransform && (this.__renderTransform =
            new Ea);
          var c = null != this.__renderParent ? this.__renderParent : this.parent;
          if (b || null == this.parent) this.__worldTransform.copyFrom(a);
          else {
            var d = this.parent.__worldTransform,
              e = this.__worldTransform;
            e.a = a.a * d.a + a.b * d.c;
            e.b = a.a * d.b + a.b * d.d;
            e.c = a.c * d.a + a.d * d.c;
            e.d = a.c * d.b + a.d * d.d;
            e.tx = a.tx * d.a + a.ty * d.c + d.tx;
            e.ty = a.tx * d.b + a.ty * d.d + d.ty
          }
          b || null == c ? this.__renderTransform.copyFrom(a) : (d = c.__renderTransform, e = this.__renderTransform, e.a = a.a * d.a + a.b * d.c, e.b = a.a * d.b + a.b * d.d, e.c = a.c * d.a + a.d * d.c, e.d = a.c * d.b + a.d * d.d,
            e.tx = a.tx * d.a + a.ty * d.c + d.tx, e.ty = a.tx * d.b + a.ty * d.d + d.ty);
          null != this.__scrollRect && (b = this.__renderTransform, a = -this.__scrollRect.x, c = -this.__scrollRect.y, b.tx = a * b.a + c * b.c + b.tx, b.ty = a * b.b + c * b.d + b.ty)
        },
        get_alpha: function() {
          return this.__alpha
        },
        set_alpha: function(a) {
          1 < a && (a = 1);
          0 > a && (a = 0);
          a == this.__alpha || this.get_cacheAsBitmap() || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return this.__alpha = a
        },
        get_blendMode: function() {
          return this.__blendMode
        },
        set_blendMode: function(a) {
          null ==
            a && (a = 10);
          a == this.__blendMode || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return this.__blendMode = a
        },
        get_cacheAsBitmap: function() {
          return null == this.__filters ? this.__cacheAsBitmap : !0
        },
        set_cacheAsBitmap: function(a) {
          a == this.__cacheAsBitmap || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return this.__cacheAsBitmap = a
        },
        get_cacheAsBitmapMatrix: function() {
          return this.__cacheAsBitmapMatrix
        },
        set_cacheAsBitmapMatrix: function(a) {
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return this.__cacheAsBitmapMatrix = null != a ? a.clone() : a
        },
        get_filters: function() {
          return null == this.__filters ? [] : this.__filters.slice()
        },
        set_filters: function(a) {
          null != a && 0 < a.length ? (this.__filters = a, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())) : null != this.__filters && (this.__filters = null, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return a
        },
        get_height: function() {
          var a = ha.__pool.get();
          this.__getLocalBounds(a);
          var b = a.height;
          ha.__pool.release(a);
          return b
        },
        set_height: function(a) {
          var b = ha.__pool.get(),
            c = Ea.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
          ha.__pool.release(b);
          Ea.__pool.release(c);
          return a
        },
        get_loaderInfo: function() {
          return null != this.stage ? Kc.current.__loaderInfo : null
        },
        get_mask: function() {
          return this.__mask
        },
        set_mask: function(a) {
          if (a == this.__mask) return a;
          a != this.__mask && (this.__setTransformDirty(), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          if (null != this.__mask) {
            this.__mask.__isMask = !1;
            this.__mask.__maskTarget = null;
            this.__mask.__setTransformDirty();
            var b = this.__mask;
            b.__renderDirty || (b.__renderDirty = !0, b.__setParentRenderDirty())
          }
          null != a && (a.__isMask = !0, a.__maskTarget = this, a.__setWorldTransformInvalid());
          null != this.__cacheBitmap && this.__cacheBitmap.get_mask() != a && this.__cacheBitmap.set_mask(a);
          return this.__mask = a
        },
        get_mouseX: function() {
          var a = null != this.stage ? this.stage.__mouseX : Kc.current.stage.__mouseX,
            b = null != this.stage ? this.stage.__mouseY : Kc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - b) + c.d * (a - c.tx))
        },
        get_mouseY: function() {
          var a = null != this.stage ? this.stage.__mouseX : Kc.current.stage.__mouseX,
            b = null != this.stage ? this.stage.__mouseY : Kc.current.stage.__mouseY,
            c = this.__getRenderTransform(),
            d = c.a * c.d - c.b * c.c;
          return 0 == d ? -c.ty : 1 / d * (c.a * (b - c.ty) + c.b * (c.tx - a))
        },
        get_name: function() {
          return this.__name
        },
        set_name: function(a) {
          return this.__name = a
        },
        get_root: function() {
          return null != this.stage ? Kc.current : null
        },
        get_rotation: function() {
          return this.__rotation
        },
        set_rotation: function(a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = Math.PI / 180 * this.__rotation;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            this.__transform.a = this.__rotationCosine * this.__scaleX;
            this.__transform.b = this.__rotationSine * this.__scaleX;
            this.__transform.c = -this.__rotationSine * this.__scaleY;
            this.__transform.d = this.__rotationCosine * this.__scaleY;
            this.__setTransformDirty()
          }
          return a
        },
        get_scale9Grid: function() {
          return null == this.__scale9Grid ? null : this.__scale9Grid.clone()
        },
        set_scale9Grid: function(a) {
          if (null == a && null == this.__scale9Grid || null != a && null != this.__scale9Grid && this.__scale9Grid.equals(a)) return a;
          null != a ? (null == this.__scale9Grid && (this.__scale9Grid = new ha), this.__scale9Grid.copyFrom(a)) : this.__scale9Grid = null;
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return a
        },
        get_scaleX: function() {
          return this.__scaleX
        },
        set_scaleX: function(a) {
          if (a != this.__scaleX)
            if (this.__scaleX =
              a, 0 == this.__transform.b) a != this.__transform.a && this.__setTransformDirty(), this.__transform.a = a;
            else {
              var b = this.__rotationCosine * a,
                c = this.__rotationSine * a;
              this.__transform.a == b && this.__transform.b == c || this.__setTransformDirty();
              this.__transform.a = b;
              this.__transform.b = c
            } return a
        },
        get_scaleY: function() {
          return this.__scaleY
        },
        set_scaleY: function(a) {
          if (a != this.__scaleY)
            if (this.__scaleY = a, 0 == this.__transform.c) a != this.__transform.d && this.__setTransformDirty(), this.__transform.d = a;
            else {
              var b = -this.__rotationSine *
                a,
                c = this.__rotationCosine * a;
              this.__transform.d == c && this.__transform.c == b || this.__setTransformDirty();
              this.__transform.c = b;
              this.__transform.d = c
            } return a
        },
        get_scrollRect: function() {
          return null == this.__scrollRect ? null : this.__scrollRect.clone()
        },
        set_scrollRect: function(a) {
          if (null == a && null == this.__scrollRect || null != a && null != this.__scrollRect && this.__scrollRect.equals(a)) return a;
          null != a ? (null == this.__scrollRect && (this.__scrollRect = new ha), this.__scrollRect.copyFrom(a)) : this.__scrollRect = null;
          this.__setTransformDirty();
          ya.__supportDOM && !this.__renderDirty && (this.__renderDirty = !0, this.__setParentRenderDirty());
          return a
        },
        get_shader: function() {
          return this.__shader
        },
        set_shader: function(a) {
          this.__shader = a;
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return a
        },
        get_transform: function() {
          null == this.__objectTransform && (this.__objectTransform = new uk(this));
          return this.__objectTransform
        },
        set_transform: function(a) {
          if (null == a) throw F.thrown(new pj("Parameter transform must be non-null."));
          null == this.__objectTransform &&
            (this.__objectTransform = new uk(this));
          this.__setTransformDirty();
          this.__objectTransform.set_matrix(a.get_matrix());
          if (!this.__objectTransform.get_colorTransform().__equals(a.get_colorTransform(), !0) || !this.get_cacheAsBitmap() && this.__objectTransform.get_colorTransform().alphaMultiplier != a.get_colorTransform().alphaMultiplier) this.__objectTransform.get_colorTransform().__copyFrom(a.get_colorTransform()), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return this.__objectTransform
        },
        get_visible: function() {
          return this.__visible
        },
        set_visible: function(a) {
          a == this.__visible || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return this.__visible = a
        },
        get_width: function() {
          var a = ha.__pool.get();
          this.__getLocalBounds(a);
          var b = a.width;
          ha.__pool.release(a);
          return b
        },
        set_width: function(a) {
          var b = ha.__pool.get(),
            c = Ea.__pool.get();
          c.identity();
          this.__getBounds(b, c);
          a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
          ha.__pool.release(b);
          Ea.__pool.release(c);
          return a
        },
        get_x: function() {
          return this.__transform.tx
        },
        set_x: function(a) {
          a != this.__transform.tx && this.__setTransformDirty();
          return this.__transform.tx = a
        },
        get_y: function() {
          return this.__transform.ty
        },
        set_y: function(a) {
          a != this.__transform.ty && this.__setTransformDirty();
          return this.__transform.ty = a
        },
        __class__: ya,
        __properties__: {
          set_y: "set_y",
          get_y: "get_y",
          set_x: "set_x",
          get_x: "get_x",
          set_width: "set_width",
          get_width: "get_width",
          set_visible: "set_visible",
          get_visible: "get_visible",
          set_transform: "set_transform",
          get_transform: "get_transform",
          set_shader: "set_shader",
          get_shader: "get_shader",
          set_scrollRect: "set_scrollRect",
          get_scrollRect: "get_scrollRect",
          set_scaleY: "set_scaleY",
          get_scaleY: "get_scaleY",
          set_scaleX: "set_scaleX",
          get_scaleX: "get_scaleX",
          set_scale9Grid: "set_scale9Grid",
          get_scale9Grid: "get_scale9Grid",
          set_rotation: "set_rotation",
          get_rotation: "get_rotation",
          get_root: "get_root",
          set_name: "set_name",
          get_name: "get_name",
          get_mouseY: "get_mouseY",
          get_mouseX: "get_mouseX",
          set_mask: "set_mask",
          get_mask: "get_mask",
          get_loaderInfo: "get_loaderInfo",
          set_height: "set_height",
          get_height: "get_height",
          set_filters: "set_filters",
          get_filters: "get_filters",
          set_cacheAsBitmapMatrix: "set_cacheAsBitmapMatrix",
          get_cacheAsBitmapMatrix: "get_cacheAsBitmapMatrix",
          set_cacheAsBitmap: "set_cacheAsBitmap",
          get_cacheAsBitmap: "get_cacheAsBitmap",
          set_blendMode: "set_blendMode",
          get_blendMode: "get_blendMode",
          set_alpha: "set_alpha",
          get_alpha: "get_alpha"
        }
      });
      var Oa = function() {
        ya.call(this);
        this.doubleClickEnabled = !1;
        this.mouseEnabled = !0;
        this.needsSoftKeyboard = !1;
        this.__tabEnabled =
          null;
        this.__tabIndex = -1
      };
      k["openfl.display.InteractiveObject"] = Oa;
      Oa.__name__ = "openfl.display.InteractiveObject";
      Oa.__super__ = ya;
      Oa.prototype = t(ya.prototype, {
        doubleClickEnabled: null,
        focusRect: null,
        mouseEnabled: null,
        needsSoftKeyboard: null,
        softKeyboardInputAreaOfInterest: null,
        __tabEnabled: null,
        __tabIndex: null,
        requestSoftKeyboard: function() {
          Kc.notImplemented({
            fileName: "openfl/display/InteractiveObject.hx",
            lineNumber: 1251,
            className: "openfl.display.InteractiveObject",
            methodName: "requestSoftKeyboard"
          });
          return !1
        },
        __allowMouseFocus: function() {
          return this.get_tabEnabled()
        },
        __getInteractive: function(a) {
          null != a && (a.push(this), null != this.parent && this.parent.__getInteractive(a));
          return !0
        },
        __hitTest: function(a, b, c, d, e, f) {
          return !f.get_visible() || this.__isMask || e && !this.mouseEnabled ? !1 : ya.prototype.__hitTest.call(this, a, b, c, d, e, f)
        },
        __tabTest: function(a) {
          this.get_tabEnabled() && a.push(this)
        },
        get_tabEnabled: function() {
          return 1 == this.__tabEnabled ? !0 : !1
        },
        set_tabEnabled: function(a) {
          this.__tabEnabled != a && (this.__tabEnabled =
            a, this.dispatchEvent(new ma("tabEnabledChange", !0, !1)));
          return this.__tabEnabled
        },
        get_tabIndex: function() {
          return this.__tabIndex
        },
        set_tabIndex: function(a) {
          if (this.__tabIndex != a) {
            if (-1 > a) throw F.thrown(new Jh("Parameter tabIndex must be a non-negative number; got " + a));
            this.__tabIndex = a;
            this.dispatchEvent(new ma("tabIndexChange", !0, !1))
          }
          return this.__tabIndex
        },
        __class__: Oa,
        __properties__: t(ya.prototype.__properties__, {
          set_tabIndex: "set_tabIndex",
          get_tabIndex: "get_tabIndex",
          set_tabEnabled: "set_tabEnabled",
          get_tabEnabled: "get_tabEnabled"
        })
      });
      var Da = function() {
        Oa.call(this);
        this.__tabChildren = this.mouseChildren = !0;
        this.__children = [];
        this.__removedChildren = Fb.toObjectVector(null)
      };
      k["openfl.display.DisplayObjectContainer"] = Da;
      Da.__name__ = "openfl.display.DisplayObjectContainer";
      Da.__super__ = Oa;
      Da.prototype = t(Oa.prototype, {
        mouseChildren: null,
        __removedChildren: null,
        __tabChildren: null,
        addChild: function(a) {
          return this.addChildAt(a, this.get_numChildren())
        },
        addChildAt: function(a, b) {
          if (null == a) throw a = new pj("Error #2007: Parameter child must be non-null."),
            a.errorID = 2007, F.thrown(a);
          if (a.stage == a) throw a = new pi("Error #3783: A Stage object cannot be added as the child of another object."), a.errorID = 3783, F.thrown(a);
          if (b > this.__children.length || 0 > b) throw F.thrown("Invalid index position " + b);
          if (a.parent == this) this.__children[b] != a && (da.remove(this.__children, a), this.__children.splice(b, 0, a), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          else {
            null != a.parent && a.parent.removeChild(a);
            this.__children.splice(b, 0, a);
            a.parent = this;
            (b = null != this.stage && null == a.stage) && a.__setStageReference(this.stage);
            a.__setTransformDirty();
            a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty());
            this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
            var c = new ma("added");
            c.bubbles = !0;
            c.target = a;
            a.__dispatchWithCapture(c);
            b && (c = new ma("addedToStage", !1, !1), a.__dispatchWithCapture(c), a.__dispatchChildren(c))
          }
          return a
        },
        areInaccessibleObjectsUnderPoint: function(a) {
          return !1
        },
        contains: function(a) {
          for (; a != this && null != a;) a =
            a.parent;
          return a == this
        },
        getChildAt: function(a) {
          return 0 <= a && a < this.__children.length ? this.__children[a] : null
        },
        getChildByName: function(a) {
          for (var b = 0, c = this.__children; b < c.length;) {
            var d = c[b];
            ++b;
            if (d.get_name() == a) return d
          }
          return null
        },
        getChildIndex: function(a) {
          for (var b = 0, c = this.__children.length; b < c;) {
            var d = b++;
            if (this.__children[d] == a) return d
          }
          return -1
        },
        getObjectsUnderPoint: function(a) {
          var b = [];
          this.__hitTest(a.x, a.y, !1, b, !1, this);
          b.reverse();
          return b
        },
        removeChild: function(a) {
          if (null != a && a.parent ==
            this) {
            a.__setTransformDirty();
            a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty());
            this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
            var b = new ma("removed", !0);
            a.__dispatchWithCapture(b);
            null != this.stage && (null != a.stage && this.stage.get_focus() == a && this.stage.set_focus(null), b = new ma("removedFromStage", !1, !1), a.__dispatchWithCapture(b), a.__dispatchChildren(b), a.__setStageReference(null));
            a.parent = null;
            da.remove(this.__children, a);
            this.__removedChildren.push(a);
            a.__setTransformDirty()
          }
          return a
        },
        removeChildAt: function(a) {
          return 0 <= a && a < this.__children.length ? this.removeChild(this.__children[a]) : null
        },
        removeChildren: function(a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          if (2147483647 == b && (b = this.__children.length - 1, 0 > b)) return;
          if (!(a > this.__children.length - 1)) {
            if (b < a || 0 > a || b > this.__children.length) throw F.thrown(new Jh("The supplied index is out of bounds."));
            for (b -= a; 0 <= b;) this.removeChildAt(a), --b
          }
        },
        resolve: function(a) {
          if (null == this.__children) return null;
          for (var b = 0, c = this.__children; b < c.length;) {
            var d =
              c[b];
            ++b;
            if (d.get_name() == a) return d
          }
          return null
        },
        setChildIndex: function(a, b) {
          0 <= b && b <= this.__children.length && a.parent == this && (da.remove(this.__children, a), this.__children.splice(b, 0, a))
        },
        stopAllMovieClips: function() {
          this.__stopAllMovieClips()
        },
        swapChildren: function(a, b) {
          if (a.parent == this && b.parent == this) {
            var c = this.__children.indexOf(a),
              d = this.__children.indexOf(b);
            this.__children[c] = b;
            this.__children[d] = a;
            this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
          }
        },
        swapChildrenAt: function(a,
          b) {
          var c = this.__children[a];
          this.__children[a] = this.__children[b];
          this.__children[b] = c;
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        __cleanup: function() {
          Oa.prototype.__cleanup.call(this);
          for (var a = 0, b = this.__children; a < b.length;) {
            var c = b[a];
            ++a;
            c.__cleanup()
          }
          for (a = this.__removedChildren.iterator(); a.hasNext();) b = a.next(), null == b.stage && b.__cleanup();
          this.__removedChildren.set_length(0)
        },
        __cleanupRemovedChildren: function() {
          for (var a = this.__removedChildren.iterator(); a.hasNext();) {
            var b =
              a.next();
            null == b.stage && b.__cleanup()
          }
          this.__removedChildren.set_length(0)
        },
        __dispatchChildren: function(a) {
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length;) {
              var d = c[b];
              ++b;
              a.target = d;
              if (!d.__dispatchWithCapture(a)) break;
              d.__dispatchChildren(a)
            }
        },
        __enterFrame: function(a) {
          for (var b = 0, c = this.__children; b < c.length;) {
            var d = c[b];
            ++b;
            d.__enterFrame(a)
          }
        },
        __getBounds: function(a, b) {
          Oa.prototype.__getBounds.call(this, a, b);
          if (0 != this.__children.length) {
            for (var c = Ea.__pool.get(), d = 0, e = this.__children; d <
              e.length;) {
              var f = e[d];
              ++d;
              if (0 != f.__scaleX && 0 != f.__scaleY) {
                var g = f.__transform;
                c.a = g.a * b.a + g.b * b.c;
                c.b = g.a * b.b + g.b * b.d;
                c.c = g.c * b.a + g.d * b.c;
                c.d = g.c * b.b + g.d * b.d;
                c.tx = g.tx * b.a + g.ty * b.c + b.tx;
                c.ty = g.tx * b.b + g.ty * b.d + b.ty;
                f.__getBounds(a, c)
              }
            }
            Ea.__pool.release(c)
          }
        },
        __getFilterBounds: function(a, b) {
          Oa.prototype.__getFilterBounds.call(this, a, b);
          if (null == this.__scrollRect && 0 != this.__children.length) {
            for (var c = Ea.__pool.get(), d = 0, e = this.__children; d < e.length;) {
              var f = e[d];
              ++d;
              if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
                var g =
                  f.__transform;
                c.a = g.a * b.a + g.b * b.c;
                c.b = g.a * b.b + g.b * b.d;
                c.c = g.c * b.a + g.d * b.c;
                c.d = g.c * b.b + g.d * b.d;
                c.tx = g.tx * b.a + g.ty * b.c + b.tx;
                c.ty = g.tx * b.b + g.ty * b.d + b.ty;
                g = ha.__pool.get();
                f.__getFilterBounds(g, c);
                a.__expand(g.x, g.y, g.width, g.height);
                ha.__pool.release(g)
              }
            }
            Ea.__pool.release(c)
          }
        },
        __getRenderBounds: function(a, b) {
          if (null != this.__scrollRect) Oa.prototype.__getRenderBounds.call(this, a, b);
          else if (Oa.prototype.__getBounds.call(this, a, b), 0 != this.__children.length) {
            for (var c = Ea.__pool.get(), d = 0, e = this.__children; d <
              e.length;) {
              var f = e[d];
              ++d;
              if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
                var g = f.__transform;
                c.a = g.a * b.a + g.b * b.c;
                c.b = g.a * b.b + g.b * b.d;
                c.c = g.c * b.a + g.d * b.c;
                c.d = g.c * b.b + g.d * b.d;
                c.tx = g.tx * b.a + g.ty * b.c + b.tx;
                c.ty = g.tx * b.b + g.ty * b.d + b.ty;
                f.__getRenderBounds(a, c)
              }
            }
            Ea.__pool.release(c)
          }
        },
        __hitTest: function(a, b, c, d, e, f) {
          if (!f.get_visible() || this.__isMask || e && !this.mouseEnabled && !this.mouseChildren || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
          if (null != this.__scrollRect) {
            var g = la.__pool.get();
            g.setTo(a, b);
            var h = this.__getRenderTransform(),
              m = h.a * h.d - h.b * h.c;
            if (0 == m) g.x = -h.tx, g.y = -h.ty;
            else {
              var l = 1 / m * (h.c * (h.ty - g.y) + h.d * (g.x - h.tx));
              g.y = 1 / m * (h.a * (g.y - h.ty) + h.b * (h.tx - g.x));
              g.x = l
            }
            if (!this.__scrollRect.containsPoint(g)) return la.__pool.release(g), !1;
            la.__pool.release(g)
          }
          g = this.__children.length;
          if (e)
            if (null == d || !this.mouseChildren)
              for (; 0 <= --g;) {
                if (this.__children[g].__hitTest(a, b, c, null, !0, this.__children[g])) return null != d && d.push(f), !0
              } else {
                if (null != d) {
                  e = d.length;
                  for (m = !1; 0 <= --g && !(((h = this.__children[g].__getInteractive(null)) ||
                      this.mouseEnabled && !m) && this.__children[g].__hitTest(a, b, c, d, !0, this.__children[g]) && (m = !0, h && d.length > e)););
                  if (m) return d.splice(e, 0, f), !0
                }
              } else {
                for (m = !1; 0 <= --g && (!this.__children[g].__hitTest(a, b, c, d, !1, this.__children[g]) || (m = !0, null != d)););
                return m
              }
          return !1
        },
        __hitTestMask: function(a, b) {
          for (var c = this.__children.length; 0 <= --c;)
            if (this.__children[c].__hitTestMask(a, b)) return !0;
          return !1
        },
        __readGraphicsData: function(a, b) {
          Oa.prototype.__readGraphicsData.call(this, a, b);
          if (b)
            for (var c = 0, d = this.__children; c <
              d.length;) {
              var e = d[c];
              ++c;
              e.__readGraphicsData(a, b)
            }
        },
        __setStageReference: function(a) {
          Oa.prototype.__setStageReference.call(this, a);
          if (null != this.__children)
            for (var b = 0, c = this.__children; b < c.length;) {
              var d = c[b];
              ++b;
              d.__setStageReference(a)
            }
        },
        __setWorldTransformInvalid: function() {
          if (!this.__worldTransformInvalid && (this.__worldTransformInvalid = !0, null != this.__children))
            for (var a = 0, b = this.__children; a < b.length;) {
              var c = b[a];
              ++a;
              c.__setWorldTransformInvalid()
            }
        },
        __stopAllMovieClips: function() {
          for (var a =
              0, b = this.__children; a < b.length;) {
            var c = b[a];
            ++a;
            c.__stopAllMovieClips()
          }
        },
        __tabTest: function(a) {
          Oa.prototype.__tabTest.call(this, a);
          if (this.get_tabChildren())
            for (var b, c = 0, d = this.__children; c < d.length;) {
              var e = d[c];
              ++c;
              if (b = e.__getInteractive(null)) b = e, b.__tabTest(a)
            }
        },
        __update: function(a, b) {
          Oa.prototype.__update.call(this, a, b);
          if (b) {
            b = 0;
            for (var c = this.__children; b < c.length;) {
              var d = c[b];
              ++b;
              d.__update(a, !0)
            }
          }
        },
        get_numChildren: function() {
          return this.__children.length
        },
        get_tabChildren: function() {
          return this.__tabChildren
        },
        set_tabChildren: function(a) {
          this.__tabChildren != a && (this.__tabChildren = a, this.dispatchEvent(new ma("tabChildrenChange", !0, !1)));
          return this.__tabChildren
        },
        __class__: Da,
        __properties__: t(Oa.prototype.__properties__, {
          set_tabChildren: "set_tabChildren",
          get_tabChildren: "get_tabChildren",
          get_numChildren: "get_numChildren"
        })
      });
      var Z = function() {
        Da.call(this);
        this.__drawableType = 4;
        this.__buttonMode = !1;
        this.useHandCursor = !0
      };
      k["openfl.display.Sprite"] = Z;
      Z.__name__ = "openfl.display.Sprite";
      Z.__super__ = Da;
      Z.prototype =
        t(Da.prototype, {
          dropTarget: null,
          hitArea: null,
          useHandCursor: null,
          __buttonMode: null,
          startDrag: function(a, b) {
            null == a && (a = !1);
            null != this.stage && this.stage.__startDrag(this, a, b)
          },
          stopDrag: function() {
            null != this.stage && this.stage.__stopDrag(this)
          },
          __getCursor: function() {
            return this.__buttonMode && this.useHandCursor ? "button" : null
          },
          __hitTest: function(a, b, c, d, e, f) {
            if (e && !this.mouseEnabled && !this.mouseChildren) return !1;
            if (!f.get_visible() || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a,
                b)) return this.__hitTestHitArea(a, b, c, d, e, f);
            if (null != this.__scrollRect) {
              var g = la.__pool.get();
              g.setTo(a, b);
              var h = this.__getRenderTransform(),
                m = h.a * h.d - h.b * h.c;
              if (0 == m) g.x = -h.tx, g.y = -h.ty;
              else {
                var l = 1 / m * (h.c * (h.ty - g.y) + h.d * (g.x - h.tx));
                g.y = 1 / m * (h.a * (g.y - h.ty) + h.b * (h.tx - g.x));
                g.x = l
              }
              if (!this.__scrollRect.containsPoint(g)) return la.__pool.release(g), this.__hitTestHitArea(a, b, c, d, !0, f);
              la.__pool.release(g)
            }
            return Da.prototype.__hitTest.call(this, a, b, c, d, e, f) ? null != d ? e : !0 : null == this.hitArea && null != this.__graphics &&
              this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()) ? (null == d || e && !this.mouseEnabled || d.push(f), !0) : this.__hitTestHitArea(a, b, c, d, e, f)
          },
          __hitTestHitArea: function(a, b, c, d, e, f) {
            return null == this.hitArea || this.hitArea.mouseEnabled ? !1 : (this.hitArea.mouseEnabled = !0, a = this.hitArea.__hitTest(a, b, c, null, !0, f), this.hitArea.mouseEnabled = !1, null != d && a && (d[d.length] = f), a)
          },
          __hitTestMask: function(a, b) {
            return Da.prototype.__hitTestMask.call(this, a, b) || null != this.__graphics && this.__graphics.__hitTest(a,
              b, !0, this.__getRenderTransform()) ? !0 : !1
          },
          get_graphics: function() {
            null == this.__graphics && (this.__graphics = new Ze(this));
            return this.__graphics
          },
          get_tabEnabled: function() {
            return null == this.__tabEnabled ? this.__buttonMode : this.__tabEnabled
          },
          get_buttonMode: function() {
            return this.__buttonMode
          },
          set_buttonMode: function(a) {
            return this.__buttonMode = a
          },
          __class__: Z,
          __properties__: t(Da.prototype.__properties__, {
            get_graphics: "get_graphics",
            set_buttonMode: "set_buttonMode",
            get_buttonMode: "get_buttonMode"
          })
        });
      var V =
        function() {
          Z.call(this);
          this.set_name("Root");
          this.addEventListener("addedToStage", r(this, this.onAdded))
        };
      k.Universal = V;
      V.__name__ = "Universal";
      V.initWindow = function(a) {
        V.window = a;
        a.stage.align = 6;
        a.stage.set_scaleMode(2)
      };
      V.setupTracing = function(a) {
        null == a && (a = !1);
        null == V.oldTrace && (V.oldTrace = kh.trace);
        a || !ka.releaseMode ? (kh.trace = V.oldTrace, Na.level = 5) : (kh.trace = function(a, c) {}, Na.level = 0)
      };
      V.reloadGame = function() {
        Y.field(V.am, "reloadGame").apply(V.am, [])
      };
      V.addReloadListener = function(a) {
        Y.field(V.am,
          "reloadListeners").push(a)
      };
      V.__super__ = Z;
      V.prototype = t(Z.prototype, {
        maskLayer: null,
        onAdded: function(a) {
          this.removeEventListener("addedToStage", r(this, this.onAdded));
          this.initServices();
          this.maskLayer = new Qe;
          this.maskLayer.set_name("Mask Layer");
          this.initScreen(ka.startInFullScreen)
        },
        initServices: function() {},
        initScreen: function(a) {
          a = !1;
          this.stage.set_displayState(a ? 1 : 2);
          this.stage.__setLogicalSize(0, 0);
          Ja.get_current().set_x(0);
          Ja.get_current().set_y(0);
          Ja.get_current().set_scaleX(1);
          Ja.get_current().set_scaleY(1);
          this.set_x(0);
          this.set_y(0);
          this.set_scaleX(1);
          this.set_scaleY(1);
          p.stage = this.stage;
          for (var b = new pc, c = 0, d = ka.scales; c < d.length;) {
            var e = d[c];
            ++c;
            b.set(e, !0)
          }
          V.windowWidth = a ? Ya.toFloat(this.stage.get_fullScreenWidth()) : ka.stageWidth * ka.gameScale;
          V.windowHeight = a ? Ya.toFloat(this.stage.get_fullScreenHeight()) : ka.stageHeight * ka.gameScale;
          c = this.getDesiredScale(V.windowWidth, V.windowHeight, ka.stageWidth, ka.stageHeight);
          d = this.getDesiredScale(Ya.toFloat(this.stage.get_fullScreenWidth()), Ya.toFloat(this.stage.get_fullScreenHeight()),
            ka.stageWidth, ka.stageHeight);
          d = ka.forceHiResAssets ? d : c;
          4 == d && null != b.h.__keys__[Kd._4X.__id__] ? (p.SCALE = 4, p.IMG_BASE = "4x") : 3 <= d && null != b.h.__keys__[Kd._3X.__id__] ? (p.SCALE = 3, p.IMG_BASE = "3x") : 2 <= d && null != b.h.__keys__[Kd._2X.__id__] ? (p.SCALE = 2, p.IMG_BASE = "2x") : 1.5 <= d && null != b.h.__keys__[Kd._1_5X.__id__] ? (p.SCALE = 1.5, p.IMG_BASE = "1.5x") : (p.SCALE = 1, p.IMG_BASE = "1x");
          b = ka.stageWidth * p.SCALE;
          d = ka.stageHeight * p.SCALE;
          e = V.windowWidth / b;
          var f = V.windowHeight / d;
          if (ka.forceHiResAssets || V.windowWidth != ka.stageWidth ||
            V.windowHeight != ka.stageHeight) 1 == ka.scaleMode ? p.SCALE != c && (this.set_scaleX(c / p.SCALE), this.set_scaleY(this.get_scaleX())) : 2 == ka.scaleMode ? (this.set_scaleX(e), this.set_scaleY(f)) : 3 == ka.scaleMode || 5 == ka.scaleMode ? (this.set_scaleX(Math.min(e, f)), this.set_scaleY(this.get_scaleX())) : 4 == ka.scaleMode ? (this.set_scaleX(Math.max(e, f)), this.set_scaleY(this.get_scaleX())) : 0 == ka.scaleMode && p.SCALE != c && (this.set_scaleX(c / p.SCALE), this.set_scaleY(this.get_scaleX())), 5 != ka.scaleMode && 1 != ka.scaleMode && (this.set_x(this.get_x() +
            (V.windowWidth - b * this.get_scaleX()) / 2), this.set_y(this.get_y() + (V.windowHeight - d * this.get_scaleY()) / 2));
          V.logicalWidth = ka.stageWidth;
          V.logicalHeight = ka.stageHeight;
          !a || 5 != ka.scaleMode && 1 != ka.scaleMode || (V.logicalWidth = V.windowWidth / this.get_scaleX() / p.SCALE, V.logicalHeight = V.windowHeight / this.get_scaleY() / p.SCALE, (V.logicalWidth | 0) == V.logicalWidth && (V.logicalHeight | 0) == V.logicalHeight) || (V.logicalWidth |= 0, V.logicalHeight |= 0, this.set_scaleX(V.windowWidth / p.SCALE / V.logicalWidth), this.set_scaleY(V.windowHeight /
            p.SCALE / V.logicalHeight));
          p.screenScaleX = this.get_scaleX();
          p.screenScaleY = this.get_scaleY();
          this.maskLayer.get_graphics().clear();
          !a || 3 != ka.scaleMode && 0 != ka.scaleMode || (a = this.get_x() / this.get_scaleX(), c = this.get_y() / this.get_scaleY(), e = V.windowWidth / this.get_scaleX(), this.maskLayer.get_graphics().beginFill(this.stage.get_color()), this.maskLayer.get_graphics().drawRect(-a, -c, e, c), this.maskLayer.get_graphics().drawRect(-a, 0, a, d), this.maskLayer.get_graphics().drawRect(b, 0, a, d), this.maskLayer.get_graphics().drawRect(-a,
            d, e, c), this.maskLayer.get_graphics().endFill())
        },
        getDesiredScale: function(a, b, c, d) {
          var e = 2 * c,
            f = 2 * d;
          c *= 3;
          d *= 3;
          return a >= 2 * e && b >= 2 * f ? 4 : a >= c && b >= d ? 3 : a >= e && b >= f ? 2 : a >= c / 2 && b >= d / 2 ? 1.5 : 1
        },
        preloaderComplete: function() {
          try {
            new p(this)
          } catch (b) {
            pa.lastError = b;
            var a = F.caught(b).unwrap();
            this.stage.__handleError(a)
          }
        },
        __class__: V
      });
      var sb = {
          toString: function(a) {
            switch (a) {
              case 0:
                return "Element";
              case 1:
                return "PCData";
              case 2:
                return "CData";
              case 3:
                return "Comment";
              case 4:
                return "DocType";
              case 5:
                return "ProcessingInstruction";
              case 6:
                return "Document"
            }
          }
        },
        ia = function(a) {
          this.nodeType = a;
          this.children = [];
          this.attributeMap = new ua
        };
      k.Xml = ia;
      ia.__name__ = "Xml";
      ia.parse = function(a) {
        return lh.parse(a)
      };
      ia.createElement = function(a) {
        var b = new ia(ia.Element);
        if (b.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
        b.nodeName = a;
        return b
      };
      ia.createPCData = function(a) {
        var b = new ia(ia.PCData);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " +
          (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
        b.nodeValue = a;
        return b
      };
      ia.createCData = function(a) {
        var b = new ia(ia.CData);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
        b.nodeValue = a;
        return b
      };
      ia.createComment = function(a) {
        var b = new ia(ia.Comment);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
        b.nodeValue =
          a;
        return b
      };
      ia.createDocType = function(a) {
        var b = new ia(ia.DocType);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
        b.nodeValue = a;
        return b
      };
      ia.createProcessingInstruction = function(a) {
        var b = new ia(ia.ProcessingInstruction);
        if (b.nodeType == ia.Document || b.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
        b.nodeValue = a;
        return b
      };
      ia.createDocument =
        function() {
          return new ia(ia.Document)
        };
      ia.prototype = {
        nodeType: null,
        nodeName: null,
        nodeValue: null,
        parent: null,
        children: null,
        attributeMap: null,
        get: function(a) {
          if (this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          return this.attributeMap.h[a]
        },
        set: function(a, b) {
          if (this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          this.attributeMap.h[a] =
            b
        },
        exists: function(a) {
          if (this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          return Object.prototype.hasOwnProperty.call(this.attributeMap.h, a)
        },
        attributes: function() {
          if (this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          return new qj(this.attributeMap.h)
        },
        elements: function() {
          if (this.nodeType != ia.Document && this.nodeType !=
            ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          for (var a = [], b = 0, c = this.children; b < c.length;) {
            var d = c[b];
            ++b;
            d.nodeType == ia.Element && a.push(d)
          }
          return new Ne(a)
        },
        elementsNamed: function(a) {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          for (var b = [], c = 0, d = this.children; c < d.length;) {
            var e =
              d[c];
            ++c;
            if (e.nodeType == ia.Element) {
              if (e.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == e.nodeType ? "null" : sb.toString(e.nodeType)));
              var f = e.nodeName == a
            } else f = !1;
            f && b.push(e)
          }
          return new Ne(b)
        },
        firstElement: function() {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          for (var a = 0, b = this.children; a < b.length;) {
            var c = b[a];
            ++a;
            if (c.nodeType ==
              ia.Element) return c
          }
          return null
        },
        addChild: function(a) {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          null != a.parent && a.parent.removeChild(a);
          this.children.push(a);
          a.parent = this
        },
        removeChild: function(a) {
          if (this.nodeType != ia.Document && this.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == this.nodeType ? "null" : sb.toString(this.nodeType)));
          return da.remove(this.children, a) ? (a.parent = null, !0) : !1
        },
        toString: function() {
          return rj.print(this)
        },
        __class__: ia
      };
      var wc = function() {
        this.lowerBound = new C;
        this.upperBound = new C
      };
      k["box2D.collision.B2AABB"] = wc;
      wc.__name__ = "box2D.collision.B2AABB";
      wc.prototype = {
        isValid: function() {
          var a = this.upperBound.y - this.lowerBound.y;
          return 0 <= this.upperBound.x - this.lowerBound.x && 0 <= a && this.lowerBound.isValid() && this.upperBound.isValid()
        },
        getCenter: function() {
          return new C((this.lowerBound.x + this.upperBound.x) / 2,
            (this.lowerBound.y + this.upperBound.y) / 2)
        },
        getExtents: function() {
          return new C((this.upperBound.x - this.lowerBound.x) / 2, (this.upperBound.y - this.lowerBound.y) / 2)
        },
        contains: function(a) {
          var b;
          return b = (b = (b = (b = this.lowerBound.x <= a.lowerBound.x) && this.lowerBound.y <= a.lowerBound.y) && a.upperBound.x <= this.upperBound.x) && a.upperBound.y <= this.upperBound.y
        },
        rayCast: function(a, b) {
          var c = -Number.MAX_VALUE,
            d = Number.MAX_VALUE,
            e = b.p1.x,
            f = b.p1.y,
            g = b.p2.x - b.p1.x;
          b = b.p2.y - b.p1.y;
          var h = Math.abs(b),
            m = a.normal;
          if (Math.abs(g) <
            Number.MIN_VALUE) {
            if (e < this.lowerBound.x || this.upperBound.x < e) return !1
          } else {
            var l = 1 / g;
            g = (this.lowerBound.x - e) * l;
            e = (this.upperBound.x - e) * l;
            l = -1;
            g > e && (l = g, g = e, e = l, l = 1);
            g > c && (m.x = l, m.y = 0, c = g);
            d = Math.min(d, e);
            if (c > d) return !1
          }
          if (h < Number.MIN_VALUE) {
            if (f < this.lowerBound.y || this.upperBound.y < f) return !1
          } else if (l = 1 / b, g = (this.lowerBound.y - f) * l, e = (this.upperBound.y - f) * l, l = -1, g > e && (l = g, g = e, e = l, l = 1), g > c && (m.y = l, m.x = 0, c = g), d = Math.min(d, e), c > d) return !1;
          a.fraction = c;
          return !0
        },
        testOverlap: function(a) {
          var b = a.lowerBound.y -
            this.upperBound.y,
            c = this.lowerBound.y - a.upperBound.y;
          return 0 < a.lowerBound.x - this.upperBound.x || 0 < b || 0 < this.lowerBound.x - a.upperBound.x || 0 < c ? !1 : !0
        },
        combine: function(a, b) {
          this.lowerBound.x = Math.min(a.lowerBound.x, b.lowerBound.x);
          this.lowerBound.y = Math.min(a.lowerBound.y, b.lowerBound.y);
          this.upperBound.x = Math.max(a.upperBound.x, b.upperBound.x);
          this.upperBound.y = Math.max(a.upperBound.y, b.upperBound.y)
        },
        reset: function() {
          this.lowerBound.x = 0;
          this.lowerBound.y = 0;
          this.upperBound.x = 0;
          this.upperBound.y = 0
        },
        setTo: function(a) {
          this.lowerBound.x = a.lowerBound.x;
          this.lowerBound.y = a.lowerBound.y;
          this.upperBound.x = a.upperBound.x;
          this.upperBound.y = a.upperBound.y
        },
        lowerBound: null,
        upperBound: null,
        __class__: wc
      };
      var C = function(a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b
      };
      k["box2D.common.math.B2Vec2"] = C;
      C.__name__ = "box2D.common.math.B2Vec2";
      C.make = function(a, b) {
        return new C(a, b)
      };
      C.freePool = function() {
        C.pooli = 0
      };
      C.getFromPool = function() {
        500 < C.pooli && (C.pooli = 0);
        if (C.pooli < C.pool.length) {
          var a = C.pool[C.pooli];
          a.x = 0;
          a.y = 0
        } else a = new C, C.pool.push(a);
        C.pooli++;
        return a
      };
      C.prototype = {
        setZero: function() {
          this.y = this.x = 0
        },
        set: function(a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          this.x = a;
          this.y = b
        },
        setV: function(a) {
          this.x = a.x;
          this.y = a.y
        },
        getNegative: function() {
          return new C(-this.x, -this.y)
        },
        getNegativePooled: function() {
          var a = C.getFromPool();
          a.x = -this.x;
          a.y = -this.y;
          return a
        },
        negativeSelf: function() {
          this.x = -this.x;
          this.y = -this.y
        },
        copy: function(a) {
          null == a && (a = !1);
          if (a) {
            a = C.getFromPool();
            var b = this.x,
              c = this.y;
            null == c && (c =
              0);
            null == b && (b = 0);
            a.x = b;
            a.y = c
          } else a = new C(this.x, this.y);
          return a
        },
        add: function(a) {
          this.x += a.x;
          this.y += a.y
        },
        subtract: function(a) {
          this.x -= a.x;
          this.y -= a.y
        },
        multiply: function(a) {
          this.x *= a;
          this.y *= a
        },
        mulM: function(a) {
          var b = this.x;
          this.x = a.col1.x * b + a.col2.x * this.y;
          this.y = a.col1.y * b + a.col2.y * this.y
        },
        mulTM: function(a) {
          var b = P.dot(this, a.col1);
          this.y = P.dot(this, a.col2);
          this.x = b
        },
        crossVF: function(a) {
          var b = this.x;
          this.x = a * this.y;
          this.y = -a * b
        },
        crossFV: function(a) {
          var b = this.x;
          this.x = -a * this.y;
          this.y = a * b
        },
        minV: function(a) {
          this.x =
            this.x < a.x ? this.x : a.x;
          this.y = this.y < a.y ? this.y : a.y
        },
        maxV: function(a) {
          this.x = this.x > a.x ? this.x : a.x;
          this.y = this.y > a.y ? this.y : a.y
        },
        abs: function() {
          0 > this.x && (this.x = -this.x);
          0 > this.y && (this.y = -this.y)
        },
        length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        lengthSquared: function() {
          return this.x * this.x + this.y * this.y
        },
        normalize: function() {
          var a = Math.sqrt(this.x * this.x + this.y * this.y);
          if (a < Number.MIN_VALUE) return 0;
          var b = 1 / a;
          this.x *= b;
          this.y *= b;
          return a
        },
        perpDot: function(a) {
          return -this.y * a.x + this.x *
            a.y
        },
        winding: function(a, b) {
          var c = a.copy();
          c.subtract(this);
          b = b.copy();
          b.subtract(a);
          return c.perpDot(b)
        },
        isValid: function() {
          return P.isValid(this.x) ? P.isValid(this.y) : !1
        },
        x: null,
        y: null,
        toString: function() {
          return "(" + this.x + ", " + this.y + ")"
        },
        reset: function() {
          this.y = this.x = 0
        },
        __class__: C
      };
      var Q = function() {
        this.v = new C;
        this.id = new Bc
      };
      k["box2D.collision.ClipVertex"] = Q;
      Q.__name__ = "box2D.collision.ClipVertex";
      Q.prototype = {
        set: function(a) {
          var b = this.v,
            c = a.v;
          b.x = c.x;
          b.y = c.y;
          this.id.set(a.id)
        },
        v: null,
        id: null,
        __class__: Q
      };
      var Bc = function() {
        this.features = new aa;
        this.features._m_id = this
      };
      k["box2D.collision.B2ContactID"] = Bc;
      Bc.__name__ = "box2D.collision.B2ContactID";
      Bc.prototype = {
        set: function(a) {
          this.set_key(a._key)
        },
        copy: function() {
          var a = new Bc;
          a.set_key(this.get_key());
          return a
        },
        get_key: function() {
          return this._key
        },
        set_key: function(a) {
          this._key = a;
          this.features._referenceEdge = this._key & 255;
          this.features._incidentEdge = (this._key & 65280) >> 8 & 255;
          this.features._incidentVertex = (this._key & 16711680) >> 16 & 255;
          this.features._flip =
            (this._key & -16777216) >> 24 & 255;
          return this._key
        },
        features: null,
        _key: null,
        indexA: null,
        indexB: null,
        typeA: null,
        typeB: null,
        __class__: Bc,
        __properties__: {
          set_key: "set_key",
          get_key: "get_key"
        }
      };
      var aa = function() {};
      k["box2D.collision.Features"] = aa;
      aa.__name__ = "box2D.collision.Features";
      aa.prototype = {
        get_referenceEdge: function() {
          return this._referenceEdge
        },
        set_referenceEdge: function(a) {
          this._referenceEdge = a;
          this._m_id._key = this._m_id._key & -256 | this._referenceEdge & 255;
          return a
        },
        _referenceEdge: null,
        get_incidentEdge: function() {
          return this._incidentEdge
        },
        set_incidentEdge: function(a) {
          this._incidentEdge = a;
          this._m_id._key = this._m_id._key & -65281 | this._incidentEdge << 8 & 65280;
          return a
        },
        _incidentEdge: null,
        get_incidentVertex: function() {
          return this._incidentVertex
        },
        set_incidentVertex: function(a) {
          this._incidentVertex = a;
          this._m_id._key = this._m_id._key & -16711681 | this._incidentVertex << 16 & 16711680;
          return a
        },
        _incidentVertex: null,
        get_flip: function() {
          return this._flip
        },
        set_flip: function(a) {
          this._flip = a;
          this._m_id._key = this._m_id._key & 16777215 | this._flip << 24 & -16777216;
          return a
        },
        _flip: null,
        _m_id: null,
        __class__: aa,
        __properties__: {
          set_flip: "set_flip",
          get_flip: "get_flip",
          set_incidentVertex: "set_incidentVertex",
          get_incidentVertex: "get_incidentVertex",
          set_incidentEdge: "set_incidentEdge",
          get_incidentEdge: "get_incidentEdge",
          set_referenceEdge: "set_referenceEdge",
          get_referenceEdge: "get_referenceEdge"
        }
      };
      var z = function() {};
      k["box2D.collision.B2Collision"] = z;
      z.__name__ = "box2D.collision.B2Collision";
      z.clipSegmentToLine = function(a, b, c, d) {
        var e = 0,
          f = b[0],
          g = f.v;
        f = b[1];
        var h = f.v,
          m = c.x * g.x + c.y * g.y - d;
        f = c.x * h.x + c.y * h.y - d;
        0 >= m && a[e++].set(b[0]);
        0 >= f && a[e++].set(b[1]);
        0 > m * f && (c = m / (m - f), f = a[e], f = f.v, f.x = g.x + c * (h.x - g.x), f.y = g.y + c * (h.y - g.y), f = a[e], f.id = (0 < m ? b[0] : b[1]).id, ++e);
        return e
      };
      z.edgeSeparation = function(a, b, c, d, e) {
        var f = a.m_vertices,
          g = d.m_vertexCount;
        d = d.m_vertices;
        var h = b.R,
          m = a.m_normals[c];
        a = h.col1.x * m.x + h.col2.x * m.y;
        var l = h.col1.y * m.x + h.col2.y * m.y;
        h = e.R;
        var y = h.col1.x * a + h.col1.y * l;
        h = h.col2.x * a + h.col2.y * l;
        for (var n = 0, p = Number.MAX_VALUE, q = 0; q < g;) {
          var k = q++;
          m = d[k];
          m = m.x *
            y + m.y * h;
          m < p && (p = m, n = k)
        }
        m = f[c];
        h = b.R;
        c = b.position.x + (h.col1.x * m.x + h.col2.x * m.y);
        b = b.position.y + (h.col1.y * m.x + h.col2.y * m.y);
        m = d[n];
        h = e.R;
        return (e.position.x + (h.col1.x * m.x + h.col2.x * m.y) - c) * a + (e.position.y + (h.col1.y * m.x + h.col2.y * m.y) - b) * l
      };
      z.findMaxSeparation = function(a, b, c, d, e) {
        var f = b.m_vertexCount,
          g = b.m_normals,
          h = e.R,
          m = d.m_centroid,
          l = e.position.x + (h.col1.x * m.x + h.col2.x * m.y),
          y = e.position.y + (h.col1.y * m.x + h.col2.y * m.y);
        h = c.R;
        m = b.m_centroid;
        l -= c.position.x + (h.col1.x * m.x + h.col2.x * m.y);
        y -= c.position.y + (h.col1.y *
          m.x + h.col2.y * m.y);
        h = l * c.R.col1.x + y * c.R.col1.y;
        y = l * c.R.col2.x + y * c.R.col2.y;
        l = 0;
        for (var n = -Number.MAX_VALUE, p = 0; p < f;) {
          var q = p++;
          m = g[q];
          m = m.x * h + m.y * y;
          m > n && (n = m, l = q)
        }
        g = z.edgeSeparation(b, c, l, d, e);
        n = 0 <= l - 1 ? l - 1 : f - 1;
        h = z.edgeSeparation(b, c, n, d, e);
        p = l + 1 < f ? l + 1 : 0;
        y = z.edgeSeparation(b, c, p, d, e);
        if (h > g && h > y) m = -1;
        else if (y > g) m = 1, n = p, h = y;
        else return a[0] = l, g;
        for (;;)
          if (l = -1 == m ? 0 <= n - 1 ? n - 1 : f - 1 : n + 1 < f ? n + 1 : 0, g = z.edgeSeparation(b, c, l, d, e), g > h) n = l, h = g;
          else break;
        a[0] = n;
        return h
      };
      z.findIncidentEdge = function(a, b, c, d, e, f) {
        var g =
          e.m_vertexCount,
          h = e.m_vertices;
        e = e.m_normals;
        var m = c.R;
        b = b.m_normals[d];
        c = m.col1.x * b.x + m.col2.x * b.y;
        var l = m.col1.y * b.x + m.col2.y * b.y;
        m = f.R;
        b = m.col1.x * c + m.col1.y * l;
        l = m.col2.x * c + m.col2.y * l;
        c = b;
        m = 0;
        for (var y = Number.MAX_VALUE, n = 0; n < g;) {
          var p = n++;
          b = e[p];
          b = c * b.x + l * b.y;
          b < y && (y = b, m = p)
        }
        e = m;
        g = e + 1 < g ? e + 1 : 0;
        c = a[0];
        b = h[e];
        m = f.R;
        c.v.x = f.position.x + (m.col1.x * b.x + m.col2.x * b.y);
        c.v.y = f.position.y + (m.col1.y * b.x + m.col2.y * b.y);
        c.id.features.set_referenceEdge(d);
        c.id.features.set_incidentEdge(e);
        c.id.features.set_incidentVertex(0);
        c = a[1];
        b = h[g];
        m = f.R;
        c.v.x = f.position.x + (m.col1.x * b.x + m.col2.x * b.y);
        c.v.y = f.position.y + (m.col1.y * b.x + m.col2.y * b.y);
        c.id.features.set_referenceEdge(d);
        c.id.features.set_incidentEdge(g);
        c.id.features.set_incidentVertex(1)
      };
      z.makeClipPointVector = function() {
        var a = [];
        a[0] = new Q;
        a[1] = new Q;
        return a
      };
      z.collidePolygons = function(a, b, c, d, e) {
        a.m_pointCount = 0;
        var f = b.m_radius + d.m_radius;
        z.s_edgeAO[0] = 0;
        var g = z.findMaxSeparation(z.s_edgeAO, b, c, d, e);
        var h = z.s_edgeAO[0];
        if (!(g > f)) {
          z.s_edgeBO[0] = 0;
          var m = z.findMaxSeparation(z.s_edgeBO,
            d, e, b, c);
          var l = z.s_edgeBO[0];
          if (!(m > f)) {
            m > .98 * g + .001 ? (g = d, d = b, b = e, e = l, a.m_type = 4, h = 1) : (g = b, b = c, c = e, e = h, a.m_type = 2, h = 0);
            l = z.s_incidentEdge;
            z.findIncidentEdge(l, g, b, e, d, c);
            m = g.m_vertices;
            d = m[e];
            var y = e + 1 < g.m_vertexCount ? m[e + 1] : m[0];
            g = z.s_localTangent;
            e = y.x - d.x;
            var n = y.y - d.y;
            null == n && (n = 0);
            null == e && (e = 0);
            g.x = e;
            g.y = n;
            g.normalize();
            m = z.s_localNormal;
            m.x = g.y;
            m.y = -g.x;
            var p = z.s_planePoint;
            e = .5 * (d.x + y.x);
            n = .5 * (d.y + y.y);
            null == n && (n = 0);
            null == e && (e = 0);
            p.x = e;
            p.y = n;
            n = z.s_tangent;
            e = b.R;
            n.x = e.col1.x * g.x + e.col2.x *
              g.y;
            n.y = e.col1.y * g.x + e.col2.y * g.y;
            var q = z.s_tangent2;
            q.x = -n.x;
            q.y = -n.y;
            g = z.s_normal;
            g.x = n.y;
            g.y = -n.x;
            var k = z.s_v11,
              u = z.s_v12;
            k.x = b.position.x + (e.col1.x * d.x + e.col2.x * d.y);
            k.y = b.position.y + (e.col1.y * d.x + e.col2.y * d.y);
            u.x = b.position.x + (e.col1.x * y.x + e.col2.x * y.y);
            u.y = b.position.y + (e.col1.y * y.x + e.col2.y * y.y);
            b = g.x * k.x + g.y * k.y;
            e = n.x * u.x + n.y * u.y + f;
            y = z.s_clipPoints1;
            d = z.s_clipPoints2;
            l = z.clipSegmentToLine(y, l, q, -n.x * k.x - n.y * k.y + f);
            if (!(2 > l || (l = z.clipSegmentToLine(d, y, n, e), 2 > l))) {
              l = a.m_localPlaneNormal;
              l.x =
                m.x;
              l.y = m.y;
              l = a.m_localPoint;
              l.x = p.x;
              l.y = p.y;
              m = l = 0;
              for (p = ea.b2_maxManifoldPoints; m < p;) e = m++, n = d[e], g.x * n.v.x + g.y * n.v.y - b <= f && (q = a.m_points[l], e = c.R, k = n.v.x - c.position.x, y = n.v.y - c.position.y, q.m_localPoint.x = k * e.col1.x + y * e.col1.y, q.m_localPoint.y = k * e.col2.x + y * e.col2.y, q.m_id.set(n.id), q.m_id.features.set_flip(h), ++l);
              a.m_pointCount = l
            }
          }
        }
      };
      z.collideCircles = function(a, b, c, d, e) {
        a.m_pointCount = 0;
        var f = c.R,
          g = b.m_p,
          h = c.position.x + (f.col1.x * g.x + f.col2.x * g.y);
        c = c.position.y + (f.col1.y * g.x + f.col2.y * g.y);
        f = e.R;
        g = d.m_p;
        h = e.position.x + (f.col1.x * g.x + f.col2.x * g.y) - h;
        e = e.position.y + (f.col1.y * g.x + f.col2.y * g.y) - c;
        f = b.m_radius + d.m_radius;
        h * h + e * e > f * f || (a.m_type = 1, e = a.m_localPoint, b = b.m_p, e.x = b.x, e.y = b.y, e = a.m_localPlaneNormal, e.x = 0, e.y = 0, a.m_pointCount = 1, e = a.m_points[0].m_localPoint, b = d.m_p, e.x = b.x, e.y = b.y, a.m_points[0].m_id.set_key(0))
      };
      z.collidePolygonAndCircle = function(a, b, c, d, e) {
        a.m_pointCount = 0;
        var f = e.R,
          g = d.m_p,
          h = e.position.x + (f.col1.x * g.x + f.col2.x * g.y) - c.position.x,
          m = e.position.y + (f.col1.y * g.x + f.col2.y * g.y) -
          c.position.y;
        f = c.R;
        c = h * f.col1.x + m * f.col1.y;
        f = h * f.col2.x + m * f.col2.y;
        var l = 0,
          y = -Number.MAX_VALUE;
        e = b.m_radius + d.m_radius;
        var n = b.m_vertexCount,
          p = b.m_vertices;
        b = b.m_normals;
        for (var q = 0; q < n;) {
          var k = q++;
          g = p[k];
          h = c - g.x;
          m = f - g.y;
          g = b[k];
          g = g.x * h + g.y * m;
          if (g > e) return;
          g > y && (y = g, l = k)
        }
        h = l;
        g = p[h];
        n = p[h + 1 < n ? h + 1 : 0];
        if (y < Number.MIN_VALUE) a.m_pointCount = 1, a.m_type = 2, c = a.m_localPlaneNormal, f = b[l], c.x = f.x, c.y = f.y, a.m_localPoint.x = .5 * (g.x + n.x), a.m_localPoint.y = .5 * (g.y + n.y);
        else if (y = (c - n.x) * (g.x - n.x) + (f - n.y) * (g.y - n.y),
          0 >= (c - g.x) * (n.x - g.x) + (f - g.y) * (n.y - g.y)) {
          if ((c - g.x) * (c - g.x) + (f - g.y) * (f - g.y) > e * e) return;
          a.m_pointCount = 1;
          a.m_type = 2;
          a.m_localPlaneNormal.x = c - g.x;
          a.m_localPlaneNormal.y = f - g.y;
          a.m_localPlaneNormal.normalize();
          c = a.m_localPoint;
          c.x = g.x;
          c.y = g.y
        } else if (0 >= y) {
          if ((c - n.x) * (c - n.x) + (f - n.y) * (f - n.y) > e * e) return;
          a.m_pointCount = 1;
          a.m_type = 2;
          a.m_localPlaneNormal.x = c - n.x;
          a.m_localPlaneNormal.y = f - n.y;
          a.m_localPlaneNormal.normalize();
          c = a.m_localPoint;
          c.x = n.x;
          c.y = n.y
        } else {
          l = .5 * (g.x + n.x);
          g = .5 * (g.y + n.y);
          y = (c - l) * b[h].x + (f -
            g) * b[h].y;
          if (y > e) return;
          a.m_pointCount = 1;
          a.m_type = 2;
          a.m_localPlaneNormal.x = b[h].x;
          a.m_localPlaneNormal.y = b[h].y;
          a.m_localPlaneNormal.normalize();
          c = a.m_localPoint;
          f = l;
          e = g;
          null == e && (e = 0);
          null == f && (f = 0);
          c.x = f;
          c.y = e
        }
        c = a.m_points[0].m_localPoint;
        f = d.m_p;
        c.x = f.x;
        c.y = f.y;
        a.m_points[0].m_id.set_key(0)
      };
      z.testOverlap = function(a, b) {
        var c = b.lowerBound,
          d = a.upperBound,
          e = c.x - d.x,
          f = c.y - d.y;
        c = a.lowerBound;
        d = b.upperBound;
        a = c.y - d.y;
        return 0 < e || 0 < f || 0 < c.x - d.x || 0 < a ? !1 : !0
      };
      var re = function() {
        this.position = new C;
        this.velocity =
          new C;
        this.normal = new C;
        this.id = new Bc
      };
      k["box2D.collision.B2ContactPoint"] = re;
      re.__name__ = "box2D.collision.B2ContactPoint";
      re.prototype = {
        shape1: null,
        shape2: null,
        position: null,
        velocity: null,
        normal: null,
        separation: null,
        friction: null,
        restitution: null,
        id: null,
        __class__: re
      };
      var Ae = function() {
        this.m_v1 = new se;
        this.m_v2 = new se;
        this.m_v3 = new se;
        this.m_vertices = [];
        this.m_vertices[0] = this.m_v1;
        this.m_vertices[1] = this.m_v2;
        this.m_vertices[2] = this.m_v3
      };
      k["box2D.collision.B2Simplex"] = Ae;
      Ae.__name__ = "box2D.collision.B2Simplex";
      Ae.prototype = {
        readCache: function(a, b, c, d, e) {
          ea.b2Assert(0 <= a.count && 3 >= a.count);
          this.m_count = a.count;
          var f = this.m_vertices;
          if (a.useCache) {
            for (var g = 0, h = this.m_count; g < h;) {
              var m = g++;
              var l = f[m];
              l.indexA = a.indexA[m];
              l.indexB = a.indexB[m];
              m = b.getVertex(l.indexA);
              var y = d.getVertex(l.indexB);
              l.wA = P.mulX(c, m, !0);
              l.wB = P.mulX(e, y, !0);
              l.w = P.subtractVVPooled(l.wB, l.wA);
              l.a = 0
            }
            1 < this.m_count && (a = a.metric, l = this.getMetric(), l < .5 * a || 2 * a < l || l < Number.MIN_VALUE) && (this.m_count = 0)
          }
          0 == this.m_count && (l = f[0], l.indexA = 0,
            l.indexB = 0, m = b.getVertex(0), y = d.getVertex(0), l.wA = P.mulX(c, m, !0), l.wB = P.mulX(e, y, !0), l.w = P.subtractVVPooled(l.wB, l.wA), this.m_count = 1)
        },
        writeCache: function(a) {
          if (a.useCache) {
            a.metric = this.getMetric();
            a.count = this.m_count;
            for (var b = this.m_vertices, c = 0, d = this.m_count; c < d;) {
              var e = c++;
              a.indexA[e] = b[e].indexA;
              a.indexB[e] = b[e].indexB
            }
          }
        },
        getSearchDirection: function() {
          switch (this.m_count) {
            case 1:
              return this.m_v1.w.getNegativePooled();
            case 2:
              var a = P.subtractVVPooled(this.m_v2.w, this.m_v1.w);
              return 0 < P.crossVV(a,
                this.m_v1.w.getNegativePooled()) ? P.crossFV(1, a, !0) : P.crossVF(a, 1, !0);
            default:
              return ea.b2Assert(!1), C.getFromPool()
          }
        },
        getClosestPoint: function() {
          switch (this.m_count) {
            case 0:
              return ea.b2Assert(!1), C.getFromPool();
            case 1:
              return this.m_v1.w;
            case 2:
              var a = C.getFromPool();
              a.x = this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x;
              a.y = this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y;
              return a;
            default:
              return ea.b2Assert(!1), C.getFromPool()
          }
        },
        getWitnessPoints: function(a, b) {
          switch (this.m_count) {
            case 0:
              ea.b2Assert(!1);
              break;
            case 1:
              var c = this.m_v1.wA;
              a.x = c.x;
              a.y = c.y;
              c = this.m_v1.wB;
              b.x = c.x;
              b.y = c.y;
              break;
            case 2:
              a.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;
              a.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;
              b.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;
              b.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;
              break;
            case 3:
              b.x = a.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x + this.m_v3.a * this.m_v3.wA.x;
              b.y = a.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y + this.m_v3.a * this.m_v3.wA.y;
              break;
            default:
              ea.b2Assert(!1)
          }
        },
        getMetric: function() {
          switch (this.m_count) {
            case 0:
              return ea.b2Assert(!1), 0;
            case 1:
              return 0;
            case 2:
              return P.subtractVVPooled(this.m_v1.w, this.m_v2.w).length();
            case 3:
              return P.crossVV(P.subtractVVPooled(this.m_v2.w, this.m_v1.w), P.subtractVVPooled(this.m_v3.w, this.m_v1.w));
            default:
              return ea.b2Assert(!1), 0
          }
        },
        solve2: function() {
          var a = this.m_v1.w,
            b = this.m_v2.w,
            c = P.subtractVVPooled(b, a);
          a = -(a.x * c.x + a.y * c.y);
          0 >= a ? this.m_count = this.m_v1.a = 1 : (b = b.x * c.x + b.y * c.y, 0 >= b ? (this.m_count =
            this.m_v2.a = 1, this.m_v1.set(this.m_v2)) : (c = 1 / (b + a), this.m_v1.a = b * c, this.m_v2.a = a * c, this.m_count = 2))
        },
        solve3: function() {
          var a = this.m_v1.w,
            b = this.m_v2.w,
            c = this.m_v3.w,
            d = P.subtractVVPooled(b, a),
            e = P.dot(a, d),
            f = P.dot(b, d);
          e = -e;
          var g = P.subtractVVPooled(c, a),
            h = P.dot(a, g),
            m = P.dot(c, g);
          h = -h;
          var l = P.subtractVVPooled(c, b),
            y = P.dot(b, l);
          l = P.dot(c, l);
          y = -y;
          g = P.crossVV(d, g);
          d = g * P.crossVV(b, c);
          c = g * P.crossVV(c, a);
          a = g * P.crossVV(a, b);
          0 >= e && 0 >= h ? this.m_count = this.m_v1.a = 1 : 0 < f && 0 < e && 0 >= a ? (m = 1 / (f + e), this.m_v1.a = f * m, this.m_v2.a =
            e * m, this.m_count = 2) : 0 < m && 0 < h && 0 >= c ? (f = 1 / (m + h), this.m_v1.a = m * f, this.m_v3.a = h * f, this.m_count = 2, this.m_v2.set(this.m_v3)) : 0 >= f && 0 >= y ? (this.m_count = this.m_v2.a = 1, this.m_v1.set(this.m_v2)) : 0 >= m && 0 >= l ? (this.m_count = this.m_v3.a = 1, this.m_v1.set(this.m_v3)) : 0 < l && 0 < y && 0 >= d ? (f = 1 / (l + y), this.m_v2.a = l * f, this.m_v3.a = y * f, this.m_count = 2, this.m_v1.set(this.m_v3)) : (f = 1 / (d + c + a), this.m_v1.a = d * f, this.m_v2.a = c * f, this.m_v3.a = a * f, this.m_count = 3)
        },
        m_v1: null,
        m_v2: null,
        m_v3: null,
        m_vertices: null,
        m_count: null,
        __class__: Ae
      };
      var se =
        function() {};
      k["box2D.collision.B2SimplexVertex"] = se;
      se.__name__ = "box2D.collision.B2SimplexVertex";
      se.prototype = {
        set: function(a) {
          var b = this.wA,
            c = a.wA;
          b.x = c.x;
          b.y = c.y;
          b = this.wB;
          c = a.wB;
          b.x = c.x;
          b.y = c.y;
          b = this.w;
          c = a.w;
          b.x = c.x;
          b.y = c.y;
          this.a = a.a;
          this.indexA = a.indexA;
          this.indexB = a.indexB
        },
        wA: null,
        wB: null,
        w: null,
        a: null,
        indexA: null,
        indexB: null,
        __class__: se
      };
      var $e = function() {};
      k["box2D.collision.B2Distance"] = $e;
      $e.__name__ = "box2D.collision.B2Distance";
      $e.distance = function(a, b, c) {
        ++$e.b2_gjkCalls;
        var d = c.proxyA,
          e = c.proxyB,
          f = c.transformA,
          g = c.transformB,
          h = $e.s_simplex;
        h.readCache(b, d, f, e, g);
        var m = h.m_vertices,
          l = $e.s_saveA,
          y = $e.s_saveB;
        h.getClosestPoint().lengthSquared();
        for (var n, p = 0; 20 > p;) {
          var q = h.m_count;
          for (var k = 0, u = q; k < u;) n = k++, l[n] = m[n].indexA, y[n] = m[n].indexB;
          switch (h.m_count) {
            case 1:
              break;
            case 2:
              h.solve2();
              break;
            case 3:
              h.solve3();
              break;
            default:
              ea.b2Assert(!1)
          }
          if (3 == h.m_count) break;
          n = h.getClosestPoint();
          n.lengthSquared();
          k = h.getSearchDirection();
          if (k.lengthSquared() < Number.MIN_VALUE * Number.MIN_VALUE) break;
          n = m[h.m_count];
          n.indexA = d.getSupport(P.mulTMV(f.R, k.getNegativePooled(), !0)) | 0;
          n.wA = P.mulX(f, d.getVertex(n.indexA), !0);
          n.indexB = e.getSupport(P.mulTMV(g.R, k, !0)) | 0;
          n.wB = P.mulX(g, e.getVertex(n.indexB), !0);
          n.w = P.subtractVVPooled(n.wB, n.wA);
          ++p;
          ++$e.b2_gjkIters;
          k = !1;
          for (u = 0; u < q;) {
            var v = u++;
            if (n.indexA == l[v] && n.indexB == y[v]) {
              k = !0;
              break
            }
          }
          if (k) break;
          ++h.m_count
        }
        $e.b2_gjkMaxIters = P.max($e.b2_gjkMaxIters, p) | 0;
        h.getWitnessPoints(a.pointA, a.pointB);
        a.distance = P.subtractVVPooled(a.pointA, a.pointB).length();
        a.iterations =
          p;
        h.writeCache(b);
        c.useRadii && (b = d.m_radius, e = e.m_radius, a.distance > b + e && a.distance > Number.MIN_VALUE ? (a.distance -= b + e, c = P.subtractVVPooled(a.pointB, a.pointA), c.normalize(), a.pointA.x += b * c.x, a.pointA.y += b * c.y, a.pointB.x -= e * c.x, a.pointB.y -= e * c.y) : (n = C.getFromPool(), n.x = .5 * (a.pointA.x + a.pointB.x), n.y = .5 * (a.pointA.y + a.pointB.y), a.pointA.x = a.pointB.x = n.x, a.pointA.y = a.pointB.y = n.y, a.distance = 0))
      };
      var vk = function() {};
      k["box2D.collision.B2DistanceInput"] = vk;
      vk.__name__ = "box2D.collision.B2DistanceInput";
      vk.prototype = {
        proxyA: null,
        proxyB: null,
        transformA: null,
        transformB: null,
        useRadii: null,
        __class__: vk
      };
      var Re = function() {
        this.pointA = new C;
        this.pointB = new C
      };
      k["box2D.collision.B2DistanceOutput"] = Re;
      Re.__name__ = "box2D.collision.B2DistanceOutput";
      Re.prototype = {
        pointA: null,
        pointB: null,
        distance: null,
        iterations: null,
        __class__: Re
      };
      var qi = function() {
        this.m_internalVertices = []
      };
      k["box2D.collision.B2DistanceProxy"] = qi;
      qi.__name__ = "box2D.collision.B2DistanceProxy";
      qi.prototype = {
        set: function(a) {
          switch (a.getType()) {
            case 0:
              a =
                K.__cast(a, Qc);
              for (this.m_vertices = this.m_internalVertices; 1 < this.m_vertices.length;) this.m_vertices.pop();
              this.m_vertices[0] = a.m_p;
              this.m_count = 1;
              this.m_radius = a.m_radius;
              break;
            case 1:
              a = K.__cast(a, Lb);
              this.m_vertices = a.m_vertices;
              this.m_count = a.m_vertexCount;
              this.m_radius = a.m_radius;
              break;
            case 2:
              a = K.__cast(a, ug);
              for (this.m_vertices = this.m_internalVertices; 2 < this.m_vertices.length;) this.m_vertices.pop();
              this.m_vertices[0] = a.m_v1;
              this.m_vertices[1] = a.m_v2;
              this.m_count = 2;
              this.m_radius = a.m_radius;
              break;
            default:
              ea.b2Assert(!1)
          }
        },
        getSupport: function(a) {
          for (var b = 0, c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y, d = 1, e = this.m_count; d < e;) {
            var f = d++,
              g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
            g > c && (b = f, c = g)
          }
          return b
        },
        getSupportVertex: function(a) {
          for (var b = 0, c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y, d = 1, e = this.m_count; d < e;) {
            var f = d++,
              g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
            g > c && (b = f, c = g)
          }
          return this.m_vertices[b]
        },
        getVertexCount: function() {
          return this.m_count
        },
        getVertex: function(a) {
          ea.b2Assert(0 <=
            a && a < this.m_count);
          return this.m_vertices[a]
        },
        m_internalVertices: null,
        m_vertices: null,
        m_count: null,
        m_radius: null,
        __class__: qi
      };
      var Cn = function() {
        this.oldAABB = new wc;
        this.stackQueue = [];
        this.stackQueuePos = 0;
        this.m_freeList = this.m_root = null;
        this.m_insertionCount = this.m_path = 0
      };
      k["box2D.collision.B2DynamicTree"] = Cn;
      Cn.__name__ = "box2D.collision.B2DynamicTree";
      Cn.prototype = {
        createProxy: function(a, b) {
          var c = this.allocateNode(),
            d = ea.b2_aabbExtension,
            e = ea.b2_aabbExtension;
          c.aabb.lowerBound.x = a.lowerBound.x -
            d;
          c.aabb.lowerBound.y = a.lowerBound.y - e;
          c.aabb.upperBound.x = a.upperBound.x + d;
          c.aabb.upperBound.y = a.upperBound.y + e;
          c.userData = b;
          this.insertLeaf(c);
          return c
        },
        destroyProxy: function(a) {
          this.removeLeaf(a);
          this.freeNode(a)
        },
        moveProxy: function(a, b, c) {
          ea.b2Assert(a.isLeaf());
          if (a.aabb.contains(b)) return !1;
          this.removeLeaf(a);
          var d = ea.b2_aabbExtension + ea.b2_aabbMultiplier * (0 < c.x ? c.x : -c.x);
          c = ea.b2_aabbExtension + ea.b2_aabbMultiplier * (0 < c.y ? c.y : -c.y);
          a.aabb.lowerBound.x = b.lowerBound.x - d;
          a.aabb.lowerBound.y = b.lowerBound.y -
            c;
          a.aabb.upperBound.x = b.upperBound.x + d;
          a.aabb.upperBound.y = b.upperBound.y + c;
          this.insertLeaf(a);
          return !0
        },
        rebalance: function(a) {
          if (null != this.m_root)
            for (var b = 0; b < a;) {
              b++;
              for (var c = this.m_root, d = 0; 0 == c.isLeaf();) c = 0 != (this.m_path >> d & 1) ? c.child2 : c.child1, d = d + 1 & 31;
              ++this.m_path;
              this.removeLeaf(c);
              this.insertLeaf(c)
            }
        },
        getFatAABB: function(a) {
          return a.aabb
        },
        getUserData: function(a) {
          return a.userData
        },
        stackQueuePos: null,
        stackQueue: null,
        query: function(a, b) {
          if (null != this.m_root) {
            null == this.stackQueue[this.stackQueuePos] &&
              (this.stackQueue[this.stackQueuePos] = []);
            var c = this.stackQueue[this.stackQueuePos++],
              d = 0;
            for (c[d++] = this.m_root; 0 < d;) {
              var e = c[--d];
              if (e.aabb.testOverlap(b))
                if (e.isLeaf()) {
                  if (!a.queryCallback(e)) break
                } else c[d++] = e.child1, c[d++] = e.child2
            }
            for (d = c.length; 0 < d--;) c.pop();
            --this.stackQueuePos
          }
        },
        rayCast: function(a, b) {
          if (null != this.m_root) {
            var c = b.p1,
              d = b.p2,
              e = P.subtractVVPooled(c, d);
            e.normalize();
            e = P.crossFV(1, e);
            var f = P.absV(e),
              g = b.maxFraction,
              h = new wc;
            var m = c.x + g * (d.x - c.x);
            g = c.y + g * (d.y - c.y);
            h.lowerBound.x =
              Math.min(c.x, m);
            h.lowerBound.y = Math.min(c.y, g);
            h.upperBound.x = Math.max(c.x, m);
            h.upperBound.y = Math.max(c.y, g);
            var l = [],
              y = 0;
            for (l[y++] = this.m_root; 0 < y;)
              if (m = l[--y], 0 != m.aabb.testOverlap(h)) {
                g = m.aabb.getCenter();
                var n = m.aabb.getExtents();
                if (!(0 < Math.abs(e.x * (c.x - g.x) + e.y * (c.y - g.y)) - f.x * n.x - f.y * n.y))
                  if (m.isLeaf()) {
                    g = new wk;
                    g.p1 = b.p1;
                    g.p2 = b.p2;
                    g.maxFraction = b.maxFraction;
                    g = a(g, m);
                    if (0 == g) break;
                    m = c.x + g * (d.x - c.x);
                    g = c.y + g * (d.y - c.y);
                    h.lowerBound.x = Math.min(c.x, m);
                    h.lowerBound.y = Math.min(c.y, g);
                    h.upperBound.x =
                      Math.max(c.x, m);
                    h.upperBound.y = Math.max(c.y, g)
                  } else l[y++] = m.child1, l[y++] = m.child2
              }
          }
        },
        allocateNode: function() {
          if (null != this.m_freeList) {
            var a = this.m_freeList;
            this.m_freeList = a.parent;
            a.parent = null;
            a.child1 = null;
            a.child2 = null;
            return a
          }
          return new tj
        },
        freeNode: function(a) {
          a.parent = this.m_freeList;
          this.m_freeList = a
        },
        insertLeaf: function(a) {
          ++this.m_insertionCount;
          if (null == this.m_root) this.m_root = a, this.m_root.parent = null;
          else {
            var b = this.m_root;
            if (0 == b.isLeaf())
              for (var c = (a.aabb.lowerBound.x + a.aabb.upperBound.x) /
                  2, d = (a.aabb.lowerBound.y + a.aabb.upperBound.y) / 2;;) {
                var e = b.child1;
                b = b.child2;
                b = Math.abs((e.aabb.lowerBound.x + e.aabb.upperBound.x) / 2 - c) + Math.abs((e.aabb.lowerBound.y + e.aabb.upperBound.y) / 2 - d) < Math.abs((b.aabb.lowerBound.x + b.aabb.upperBound.x) / 2 - c) + Math.abs((b.aabb.lowerBound.y + b.aabb.upperBound.y) / 2 - d) ? e : b;
                if (0 != b.isLeaf()) break
              }
            c = b.parent;
            d = this.allocateNode();
            d.parent = c;
            d.userData = null;
            d.aabb.combine(a.aabb, b.aabb);
            if (null != c)
              for (b.parent.child1 == b ? c.child1 = d : c.child2 = d, d.child1 = b, d.child2 = a, b.parent =
                d, a.parent = d; !c.aabb.contains(d.aabb) && (c.aabb.combine(c.child1.aabb, c.child2.aabb), d = c, c = c.parent, null != c););
            else d.child1 = b, d.child2 = a, b.parent = d, this.m_root = a.parent = d
          }
        },
        oldAABB: null,
        removeLeaf: function(a) {
          if (a == this.m_root) this.m_root = null;
          else {
            var b = a.parent,
              c = b.parent;
            a = b.child1 == a ? b.child2 : b.child1;
            if (null != c)
              for (c.child1 == b ? c.child1 = a : c.child2 = a, a.parent = c, this.freeNode(b); null != c;) {
                this.oldAABB.setTo(c.aabb);
                c.aabb.combine(c.child1.aabb, c.child2.aabb);
                if (this.oldAABB.contains(c.aabb)) break;
                c = c.parent
              } else this.m_root = a, a.parent = null, this.freeNode(b)
          }
        },
        m_root: null,
        m_freeList: null,
        m_path: null,
        m_insertionCount: null,
        __class__: Cn
      };
      var Kh = function() {};
      k["box2D.collision.QueryCallback"] = Kh;
      Kh.__name__ = "box2D.collision.QueryCallback";
      Kh.__isInterface__ = !0;
      Kh.prototype = {
        queryCallback: null,
        __class__: Kh
      };
      var xk = function() {};
      k["box2D.collision.IBroadPhase"] = xk;
      xk.__name__ = "box2D.collision.IBroadPhase";
      xk.__isInterface__ = !0;
      xk.prototype = {
        createProxy: null,
        destroyProxy: null,
        moveProxy: null,
        testOverlap: null,
        getUserData: null,
        getFatAABB: null,
        getProxyCount: null,
        updatePairs: null,
        query: null,
        rayCast: null,
        validate: null,
        rebalance: null,
        __class__: xk
      };
      var yk = function() {
        this.m_tree = new Cn;
        this.m_moveBuffer = [];
        this.m_pairBuffer = [];
        this.m_proxyCount = this.m_pairCount = 0
      };
      k["box2D.collision.B2DynamicTreeBroadPhase"] = yk;
      yk.__name__ = "box2D.collision.B2DynamicTreeBroadPhase";
      yk.__interfaces__ = [Kh, xk];
      yk.prototype = {
        createProxy: function(a, b) {
          a = this.m_tree.createProxy(a, b);
          ++this.m_proxyCount;
          this.bufferMove(a);
          return a
        },
        destroyProxy: function(a) {
          this.unBufferMove(a);
          --this.m_proxyCount;
          this.m_tree.destroyProxy(a)
        },
        moveProxy: function(a, b, c) {
          this.m_tree.moveProxy(a, b, c) && this.bufferMove(a)
        },
        testOverlap: function(a, b) {
          a = this.m_tree.getFatAABB(a);
          b = this.m_tree.getFatAABB(b);
          return a.testOverlap(b)
        },
        getUserData: function(a) {
          return this.m_tree.getUserData(a)
        },
        getFatAABB: function(a) {
          return this.m_tree.getFatAABB(a)
        },
        getProxyCount: function() {
          return this.m_proxyCount
        },
        updatePairs: function(a) {
          for (var b = this.m_pairCount = 0, c = this.m_moveBuffer; b <
            c.length;) {
            var d = c[b];
            ++b;
            this.cur_queryProxy = d;
            d = this.m_tree.getFatAABB(d);
            this.m_tree.query(this, d)
          }
          this.cur_queryProxy = null;
          for (b = this.m_moveBuffer.length; 0 <= --b;) this.m_moveBuffer.pop();
          c = !0;
          for (b = 0; c;)
            if (b >= this.m_pairCount) c = !1;
            else
              for (d = this.m_pairBuffer[b], a.addPair(this.m_tree.getUserData(d.proxyA), this.m_tree.getUserData(d.proxyB)), ++b; b < this.m_pairCount;) {
                var e = this.m_pairBuffer[b];
                if (e.proxyA != d.proxyA || e.proxyB != d.proxyB) break;
                ++b
              }
        },
        queryCallback: function(a) {
          if (a == this.cur_queryProxy) return !0;
          this.m_pairCount == this.m_pairBuffer.length && (this.m_pairBuffer[this.m_pairCount] = new Dn);
          var b = this.m_pairBuffer[this.m_pairCount];
          a.id < this.cur_queryProxy.id ? (b.proxyA = a, b.proxyB = this.cur_queryProxy) : (b.proxyA = this.cur_queryProxy, b.proxyB = a);
          ++this.m_pairCount;
          return !0
        },
        query: function(a, b) {
          this.m_tree.query(a, b)
        },
        rayCast: function(a, b) {
          this.m_tree.rayCast(a, b)
        },
        validate: function() {},
        rebalance: function(a) {
          this.m_tree.rebalance(a)
        },
        bufferMove: function(a) {
          this.m_moveBuffer[this.m_moveBuffer.length] =
            a
        },
        unBufferMove: function(a) {
          da.remove(this.m_moveBuffer, a)
        },
        comparePairs: function(a, b) {
          return 0
        },
        m_tree: null,
        m_proxyCount: null,
        m_moveBuffer: null,
        m_pairBuffer: null,
        m_pairCount: null,
        cur_queryProxy: null,
        __class__: yk
      };
      var tj = function() {
        this.aabb = new wc;
        this.id = tj.currentID++
      };
      k["box2D.collision.B2DynamicTreeNode"] = tj;
      tj.__name__ = "box2D.collision.B2DynamicTreeNode";
      tj.prototype = {
        id: null,
        isLeaf: function() {
          return null == this.child1
        },
        userData: null,
        aabb: null,
        parent: null,
        child1: null,
        child2: null,
        __class__: tj
      };
      var Dn = function() {};
      k["box2D.collision.B2DynamicTreePair"] = Dn;
      Dn.__name__ = "box2D.collision.B2DynamicTreePair";
      Dn.prototype = {
        proxyA: null,
        proxyB: null,
        __class__: Dn
      };
      var mh = function() {
        this.m_pointCount = 0;
        this.m_points = [];
        for (var a = 0, b = ea.b2_maxManifoldPoints; a < b;) {
          var c = a++;
          this.m_points[c] = new En
        }
        this.m_localPlaneNormal = new C;
        this.m_localPoint = new C
      };
      k["box2D.collision.B2Manifold"] = mh;
      mh.__name__ = "box2D.collision.B2Manifold";
      mh.prototype = {
        reset: function() {
          for (var a = 0, b = ea.b2_maxManifoldPoints; a < b;) {
            var c =
              a++;
            this.m_points[c].reset()
          }
          a = this.m_localPlaneNormal;
          a.x = 0;
          a.y = 0;
          a = this.m_localPoint;
          a.x = 0;
          this.m_pointCount = this.m_type = a.y = 0
        },
        set: function(a) {
          this.m_pointCount = a.m_pointCount;
          for (var b = 0, c = ea.b2_maxManifoldPoints; b < c;) {
            var d = b++;
            this.m_points[d].set(a.m_points[d])
          }
          b = this.m_localPlaneNormal;
          c = a.m_localPlaneNormal;
          b.x = c.x;
          b.y = c.y;
          b = this.m_localPoint;
          c = a.m_localPoint;
          b.x = c.x;
          b.y = c.y;
          this.m_type = a.m_type
        },
        copy: function() {
          var a = new mh;
          a.set(this);
          return a
        },
        m_points: null,
        m_localPlaneNormal: null,
        m_localPoint: null,
        m_type: null,
        m_pointCount: null,
        __class__: mh
      };
      var En = function() {
        this.m_localPoint = new C;
        this.m_id = new Bc;
        this.reset()
      };
      k["box2D.collision.B2ManifoldPoint"] = En;
      En.__name__ = "box2D.collision.B2ManifoldPoint";
      En.prototype = {
        reset: function() {
          var a = this.m_localPoint;
          a.x = 0;
          this.m_tangentImpulse = this.m_normalImpulse = a.y = 0;
          this.m_id.set_key(0)
        },
        set: function(a) {
          var b = this.m_localPoint,
            c = a.m_localPoint;
          b.x = c.x;
          b.y = c.y;
          this.m_normalImpulse = a.m_normalImpulse;
          this.m_tangentImpulse = a.m_tangentImpulse;
          this.m_id.set(a.m_id)
        },
        m_localPoint: null,
        m_normalImpulse: null,
        m_tangentImpulse: null,
        m_id: null,
        __class__: En
      };
      var sq = function() {
        this.R = new Fc;
        this.center = new C;
        this.extents = new C
      };
      k["box2D.collision.B2OBB"] = sq;
      sq.__name__ = "box2D.collision.B2OBB";
      sq.prototype = {
        R: null,
        center: null,
        extents: null,
        __class__: sq
      };
      var wk = function(a, b, c) {
        null == c && (c = 1);
        this.p1 = new C;
        this.p2 = new C;
        if (null != a) {
          var d = this.p1;
          d.x = a.x;
          d.y = a.y
        }
        null != b && (d = this.p2, d.x = b.x, d.y = b.y);
        this.maxFraction = c
      };
      k["box2D.collision.B2RayCastInput"] = wk;
      wk.__name__ = "box2D.collision.B2RayCastInput";
      wk.prototype = {
        p1: null,
        p2: null,
        maxFraction: null,
        __class__: wk
      };
      var Fn = function() {
        this.normal = new C
      };
      k["box2D.collision.B2RayCastOutput"] = Fn;
      Fn.__name__ = "box2D.collision.B2RayCastOutput";
      Fn.prototype = {
        normal: null,
        fraction: null,
        __class__: Fn
      };
      var kf = function() {
        this.m_localPoint = new C;
        this.m_axis = new C
      };
      k["box2D.collision.B2SeparationFunction"] = kf;
      kf.__name__ = "box2D.collision.B2SeparationFunction";
      kf.prototype = {
        initialize: function(a, b, c, d, e) {
          this.m_proxyA = b;
          this.m_proxyB = d;
          b = a.count;
          ea.b2Assert(0 < b && 3 >
            b);
          if (1 == b) {
            this.m_type = kf.e_points;
            var f = this.m_proxyA.getVertex(a.indexA[0]);
            a = this.m_proxyB.getVertex(a.indexB[0]);
            var g = f;
            var h = c.R;
            f = c.position.x + (h.col1.x * g.x + h.col2.x * g.y);
            c = c.position.y + (h.col1.y * g.x + h.col2.y * g.y);
            g = a;
            h = e.R;
            a = e.position.x + (h.col1.x * g.x + h.col2.x * g.y);
            e = e.position.y + (h.col1.y * g.x + h.col2.y * g.y);
            this.m_axis.x = a - f;
            this.m_axis.y = e - c;
            this.m_axis.normalize()
          } else if (a.indexB[0] == a.indexB[1]) {
            this.m_type = kf.e_faceA;
            b = this.m_proxyA.getVertex(a.indexA[0]);
            d = this.m_proxyA.getVertex(a.indexA[1]);
            a = this.m_proxyB.getVertex(a.indexB[0]);
            this.m_localPoint.x = .5 * (b.x + d.x);
            this.m_localPoint.y = .5 * (b.y + d.y);
            var m = this.m_axis;
            b = P.crossVF(P.subtractVVPooled(d, b), 1, !0);
            m.x = b.x;
            m.y = b.y;
            this.m_axis.normalize();
            g = this.m_axis;
            h = c.R;
            b = h.col1.x * g.x + h.col2.x * g.y;
            d = h.col1.y * g.x + h.col2.y * g.y;
            g = this.m_localPoint;
            h = c.R;
            f = c.position.x + (h.col1.x * g.x + h.col2.x * g.y);
            c = c.position.y + (h.col1.y * g.x + h.col2.y * g.y);
            g = a;
            h = e.R;
            a = e.position.x + (h.col1.x * g.x + h.col2.x * g.y);
            e = e.position.y + (h.col1.y * g.x + h.col2.y * g.y);
            0 > (a - f) * b + (e -
              c) * d && (m = this.m_axis, m.x = -m.x, m.y = -m.y)
          } else if (a.indexA[0] == a.indexA[0]) this.m_type = kf.e_faceB, h = this.m_proxyB.getVertex(a.indexB[0]), g = this.m_proxyB.getVertex(a.indexB[1]), f = this.m_proxyA.getVertex(a.indexA[0]), this.m_localPoint.x = .5 * (h.x + g.x), this.m_localPoint.y = .5 * (h.y + g.y), m = this.m_axis, b = P.crossVF(P.subtractVVPooled(g, h), 1, !0), m.x = b.x, m.y = b.y, this.m_axis.normalize(), g = this.m_axis, h = e.R, b = h.col1.x * g.x + h.col2.x * g.y, d = h.col1.y * g.x + h.col2.y * g.y, g = this.m_localPoint, h = e.R, a = e.position.x + (h.col1.x *
            g.x + h.col2.x * g.y), e = e.position.y + (h.col1.y * g.x + h.col2.y * g.y), g = f, h = c.R, f = c.position.x + (h.col1.x * g.x + h.col2.x * g.y), c = c.position.y + (h.col1.y * g.x + h.col2.y * g.y), 0 > (f - a) * b + (c - e) * d && (m = this.m_axis, m.x = -m.x, m.y = -m.y);
          else {
            b = this.m_proxyA.getVertex(a.indexA[0]);
            d = this.m_proxyA.getVertex(a.indexA[1]);
            h = this.m_proxyB.getVertex(a.indexB[0]);
            g = this.m_proxyB.getVertex(a.indexB[1]);
            var l = P.mulMV(c.R, P.subtractVVPooled(d, b), !0);
            e = P.mulMV(e.R, P.subtractVVPooled(g, h), !0);
            c = l.x * l.x + l.y * l.y;
            f = e.x * e.x + e.y * e.y;
            m = P.subtractVVPooled(e,
              l);
            a = l.x * m.x + l.y * m.y;
            m = e.x * m.x + e.y * m.y;
            l = l.x * e.x + l.y * e.y;
            var y = c * f - l * l;
            e = 0;
            0 != y && (e = P.clamp((l * m - a * f) / y, 0, 1));
            0 > (l * e + m) / f && (e = P.clamp((l - a) / c, 0, 1));
            f = C.getFromPool();
            f.x = b.x + e * (d.x - b.x);
            f.y = b.y + e * (d.y - b.y);
            a = C.getFromPool();
            a.x = h.x + e * (g.x - h.x);
            a.y = h.y + e * (g.y - h.y);
            0 == e || 1 == e ? (this.m_type = kf.e_faceB, m = this.m_axis, b = P.crossVF(P.subtractVVPooled(g, h), 1, !0), m.x = b.x, m.y = b.y, this.m_axis.normalize(), m = this.m_localPoint, m.x = a.x, m.y = a.y) : (this.m_type = kf.e_faceA, m = this.m_axis, b = P.crossVF(P.subtractVVPooled(d,
              b), 1, !0), m.x = b.x, m.y = b.y, m = this.m_localPoint, m.x = f.x, m.y = f.y);
            0 > e && (m = this.m_axis, m.x = -m.x, m.y = -m.y)
          }
        },
        evaluate: function(a, b) {
          var c;
          if (this.m_type == kf.e_points) {
            var d = P.mulTMV(a.R, this.m_axis, !0);
            var e = P.mulTMV(b.R, this.m_axis.getNegativePooled(), !0);
            d = this.m_proxyA.getSupportVertex(d);
            e = this.m_proxyB.getSupportVertex(e);
            a = P.mulX(a, d, !0);
            b = P.mulX(b, e, !0);
            return c = (b.x - a.x) * this.m_axis.x + (b.y - a.y) * this.m_axis.y
          }
          if (this.m_type == kf.e_faceA) return c = P.mulMV(a.R, this.m_axis, !0), a = P.mulX(a, this.m_localPoint,
            !0), e = P.mulTMV(b.R, c.getNegativePooled(), !0), e = this.m_proxyB.getSupportVertex(e), b = P.mulX(b, e, !0), c = (b.x - a.x) * c.x + (b.y - a.y) * c.y;
          if (this.m_type == kf.e_faceB) return c = P.mulMV(b.R, this.m_axis, !0), b = P.mulX(b, this.m_localPoint, !0), d = P.mulTMV(a.R, c.getNegativePooled(), !0), d = this.m_proxyA.getSupportVertex(d), a = P.mulX(a, d, !0), c = (a.x - b.x) * c.x + (a.y - b.y) * c.y;
          ea.b2Assert(!1);
          return 0
        },
        m_proxyA: null,
        m_proxyB: null,
        m_type: null,
        m_localPoint: null,
        m_axis: null,
        __class__: kf
      };
      var zk = function() {
        this.useCache = !1;
        this.indexA = [];
        this.indexB = []
      };
      k["box2D.collision.B2SimplexCache"] = zk;
      zk.__name__ = "box2D.collision.B2SimplexCache";
      zk.prototype = {
        metric: null,
        count: null,
        indexA: null,
        indexB: null,
        useCache: null,
        __class__: zk
      };
      var Gn = function() {
        this.proxyA = new qi;
        this.proxyB = new qi;
        this.sweepA = new nh;
        this.sweepB = new nh
      };
      k["box2D.collision.B2TOIInput"] = Gn;
      Gn.__name__ = "box2D.collision.B2TOIInput";
      Gn.prototype = {
        proxyA: null,
        proxyB: null,
        sweepA: null,
        sweepB: null,
        tolerance: null,
        __class__: Gn
      };
      var af = function(a, b) {
        this.position = new C;
        this.R =
          new Fc;
        if (null != a) {
          var c = this.position;
          c.x = a.x;
          c.y = a.y;
          this.R.setM(b)
        }
      };
      k["box2D.common.math.B2Transform"] = af;
      af.__name__ = "box2D.common.math.B2Transform";
      af.prototype = {
        initialize: function(a, b) {
          var c = this.position;
          c.x = a.x;
          c.y = a.y;
          this.R.setM(b)
        },
        setIdentity: function() {
          var a = this.position;
          a.x = 0;
          a.y = 0;
          this.R.setIdentity()
        },
        set: function(a) {
          var b = this.position,
            c = a.position;
          b.x = c.x;
          b.y = c.y;
          this.R.setM(a.R)
        },
        getAngle: function() {
          return Math.atan2(this.R.col1.y, this.R.col1.x)
        },
        multiply: function(a) {
          a = this.R.multiplyV(a);
          a.add(this.position);
          return a
        },
        multiplyInPlace: function(a) {
          this.R.multiplyVInPlace(a);
          a.add(this.position)
        },
        position: null,
        R: null,
        __class__: af
      };
      var Fc = function() {
        this.col1 = new C(0, 1);
        this.col2 = new C(0, 1)
      };
      k["box2D.common.math.B2Mat22"] = Fc;
      Fc.__name__ = "box2D.common.math.B2Mat22";
      Fc.fromAngle = function(a) {
        var b = new Fc;
        b.set(a);
        return b
      };
      Fc.fromVV = function(a, b) {
        var c = new Fc;
        c.setVV(a, b);
        return c
      };
      Fc.prototype = {
        set: function(a) {
          var b = Math.cos(a);
          a = Math.sin(a);
          this.col1.x = b;
          this.col2.x = -a;
          this.col1.y = a;
          this.col2.y =
            b
        },
        setVV: function(a, b) {
          var c = this.col1;
          c.x = a.x;
          c.y = a.y;
          c = this.col2;
          c.x = b.x;
          c.y = b.y
        },
        copy: function() {
          var a = new Fc;
          a.setM(this);
          return a
        },
        setM: function(a) {
          var b = this.col1,
            c = a.col1;
          b.x = c.x;
          b.y = c.y;
          b = this.col2;
          c = a.col2;
          b.x = c.x;
          b.y = c.y
        },
        addM: function(a) {
          this.col1.x += a.col1.x;
          this.col1.y += a.col1.y;
          this.col2.x += a.col2.x;
          this.col2.y += a.col2.y
        },
        multiplyV: function(a) {
          return new C(this.col1.x * a.x + this.col2.x * a.y, this.col1.y * a.x + this.col2.y * a.y)
        },
        multiplyVInPlace: function(a) {
          var b = this.col1.x * a.x + this.col2.x *
            a.y,
            c = this.col1.y * a.x + this.col2.y * a.y;
          null == c && (c = 0);
          null == b && (b = 0);
          a.x = b;
          a.y = c
        },
        setIdentity: function() {
          this.col1.x = 1;
          this.col2.x = 0;
          this.col1.y = 0;
          this.col2.y = 1
        },
        setZero: function() {
          this.col1.x = 0;
          this.col2.x = 0;
          this.col1.y = 0;
          this.col2.y = 0
        },
        setAngle: function(a) {
          this.col1.x = Math.cos(a);
          this.col1.y = Math.sin(a);
          this.col2.x = -this.col1.y;
          this.col2.y = this.col1.x
        },
        getAngle: function() {
          return Math.atan2(this.col1.y, this.col1.x)
        },
        getInverse: function(a) {
          var b = this.col1.x,
            c = this.col2.x,
            d = this.col1.y,
            e = this.col2.y,
            f = b * e - c * d;
          0 != f && (f = 1 / f);
          a.col1.x = f * e;
          a.col2.x = -f * c;
          a.col1.y = -f * d;
          a.col2.y = f * b;
          return a
        },
        solve: function(a, b, c) {
          var d = this.col1.x,
            e = this.col2.x,
            f = this.col1.y,
            g = this.col2.y,
            h = d * g - e * f;
          0 != h && (h = 1 / h);
          a.x = h * (g * b - e * c);
          a.y = h * (d * c - f * b);
          return a
        },
        abs: function() {
          this.col1.abs();
          this.col2.abs()
        },
        col1: null,
        col2: null,
        __class__: Fc
      };
      var Mb = function() {};
      k["box2D.collision.B2TimeOfImpact"] = Mb;
      Mb.__name__ = "box2D.collision.B2TimeOfImpact";
      Mb.timeOfImpact = function(a) {
        ++Mb.b2_toiCalls;
        var b = a.proxyA,
          c = a.proxyB,
          d = a.sweepA,
          e = a.sweepB;
        ea.b2Assert(d.t0 == e.t0);
        ea.b2Assert(1 - d.t0 > Number.MIN_VALUE);
        var f = b.m_radius + c.m_radius;
        a = a.tolerance;
        var g = 0,
          h = 0,
          m = 0;
        Mb.s_cache.count = 0;
        for (Mb.s_distanceInput.useRadii = !1;;) {
          d.getTransform(Mb.s_xfA, g);
          e.getTransform(Mb.s_xfB, g);
          Mb.s_distanceInput.proxyA = b;
          Mb.s_distanceInput.proxyB = c;
          Mb.s_distanceInput.transformA = Mb.s_xfA;
          Mb.s_distanceInput.transformB = Mb.s_xfB;
          $e.distance(Mb.s_distanceOutput, Mb.s_cache, Mb.s_distanceInput);
          if (0 >= Mb.s_distanceOutput.distance) {
            g = 1;
            break
          }
          Mb.s_fcn.initialize(Mb.s_cache,
            b, Mb.s_xfA, c, Mb.s_xfB);
          var l = Mb.s_fcn.evaluate(Mb.s_xfA, Mb.s_xfB);
          if (0 >= l) {
            g = 1;
            break
          }
          0 == h && (m = l > f ? P.max(f - a, .75 * f) : P.max(l - a, .02 * f));
          if (l - m < .5 * a) {
            if (0 == h) {
              g = 1;
              break
            }
            break
          }
          var y = g,
            n = g,
            p = 1;
          d.getTransform(Mb.s_xfA, p);
          e.getTransform(Mb.s_xfB, p);
          var q = Mb.s_fcn.evaluate(Mb.s_xfA, Mb.s_xfB);
          if (q >= m) {
            g = 1;
            break
          }
          for (var k = 0;;) {
            var u = 0 != (k & 1) ? n + (m - l) * (p - n) / (q - l) : .5 * (n + p);
            d.getTransform(Mb.s_xfA, u);
            e.getTransform(Mb.s_xfB, u);
            var v = Mb.s_fcn.evaluate(Mb.s_xfA, Mb.s_xfB);
            if (P.abs(v - m) < .025 * a) {
              y = u;
              break
            }
            v > m ? (n = u, l =
              v) : (p = u, q = v);
            ++k;
            ++Mb.b2_toiRootIters;
            if (50 == k) break
          }
          Mb.b2_toiMaxRootIters = P.max(Mb.b2_toiMaxRootIters, k) | 0;
          if (y < (1 + 100 * Number.MIN_VALUE) * g) break;
          g = y;
          ++h;
          ++Mb.b2_toiIters;
          if (1E3 == h) break
        }
        Mb.b2_toiMaxIters = P.max(Mb.b2_toiMaxIters, h) | 0;
        return g
      };
      var uj = function() {
        this.m_normal = new C;
        this.m_points = [];
        for (var a = 0, b = ea.b2_maxManifoldPoints; a < b;) {
          var c = a++;
          this.m_points[c] = new C
        }
      };
      k["box2D.collision.B2WorldManifold"] = uj;
      uj.__name__ = "box2D.collision.B2WorldManifold";
      uj.prototype = {
        reset: function() {
          var a =
            this.m_normal;
          a.x = 0;
          for (var b = a.y = 0, c = ea.b2_maxManifoldPoints; b < c;) a = b++, a = this.m_points[a], a.x = 0, a.y = 0
        },
        initialize: function(a, b, c, d, e) {
          if (0 != a.m_pointCount) {
            var f = this.m_normal;
            f.x = 0;
            for (var g = f.y = 0, h = ea.b2_maxManifoldPoints; g < h;) {
              var m = g++;
              f = this.m_points[m];
              f.x = 0;
              f.y = 0
            }
            switch (a.m_type) {
              case 1:
                var l = b.R;
                f = a.m_localPoint;
                g = b.position.x + l.col1.x * f.x + l.col2.x * f.y;
                b = b.position.y + l.col1.y * f.x + l.col2.y * f.y;
                l = d.R;
                f = a.m_points[0].m_localPoint;
                a = d.position.x + l.col1.x * f.x + l.col2.x * f.y;
                d = d.position.y + l.col1.y *
                  f.x + l.col2.y * f.y;
                f = a - g;
                l = d - b;
                h = f * f + l * l;
                h > Number.MIN_VALUE * Number.MIN_VALUE ? (h = Math.sqrt(h), this.m_normal.x = f / h, this.m_normal.y = l / h) : (this.m_normal.x = 1, this.m_normal.y = 0);
                b += c * this.m_normal.y;
                d -= e * this.m_normal.y;
                this.m_points[0].x = .5 * (g + c * this.m_normal.x + (a - e * this.m_normal.x));
                this.m_points[0].y = .5 * (b + d);
                break;
              case 2:
                l = b.R;
                f = a.m_localPlaneNormal;
                var y = l.col1.x * f.x + l.col2.x * f.y;
                var n = l.col1.y * f.x + l.col2.y * f.y;
                l = b.R;
                f = a.m_localPoint;
                var p = b.position.x + l.col1.x * f.x + l.col2.x * f.y;
                var q = b.position.y + l.col1.y *
                  f.x + l.col2.y * f.y;
                this.m_normal.x = y;
                this.m_normal.y = n;
                g = 0;
                for (h = a.m_pointCount; g < h;) {
                  m = g++;
                  l = d.R;
                  f = a.m_points[m].m_localPoint;
                  var k = d.position.x + l.col1.x * f.x + l.col2.x * f.y;
                  f = d.position.y + l.col1.y * f.x + l.col2.y * f.y;
                  this.m_points[m].x = k + .5 * (c - (k - p) * y - (f - q) * n - e) * y;
                  this.m_points[m].y = f + .5 * (c - (k - p) * y - (f - q) * n - e) * n
                }
                break;
              case 4:
                for (l = d.R, f = a.m_localPlaneNormal, y = l.col1.x * f.x + l.col2.x * f.y, n = l.col1.y * f.x + l.col2.y * f.y, l = d.R, f = a.m_localPoint, p = d.position.x + l.col1.x * f.x + l.col2.x * f.y, q = d.position.y + l.col1.y * f.x +
                  l.col2.y * f.y, this.m_normal.x = -y, this.m_normal.y = -n, g = 0, h = a.m_pointCount; g < h;) m = g++, l = b.R, f = a.m_points[m].m_localPoint, k = b.position.x + l.col1.x * f.x + l.col2.x * f.y, f = b.position.y + l.col1.y * f.x + l.col2.y * f.y, this.m_points[m].x = k + .5 * (e - (k - p) * y - (f - q) * n - c) * y, this.m_points[m].y = f + .5 * (e - (k - p) * y - (f - q) * n - c) * n
            }
          }
        },
        getPoint: function() {
          return 0 == this.m_points.length ? null : 1 == this.m_points.length ? this.m_points[0] : new C((this.m_points[0].x + this.m_points[1].x) / 2, (this.m_points[0].y + this.m_points[1].y) / 2)
        },
        m_normal: null,
        m_points: null,
        __class__: uj
      };
      var Xb = function() {
        this.m_type = -1;
        this.m_radius = ea.b2_linearSlop
      };
      k["box2D.collision.shapes.B2Shape"] = Xb;
      Xb.__name__ = "box2D.collision.shapes.B2Shape";
      Xb.testOverlap = function(a, b, c, d) {
        Xb.initialized || (Xb.distanceInput.proxyA = Xb.proxyA, Xb.distanceInput.proxyB = Xb.proxyB, Xb.distanceInput.useRadii = !0, Xb.initialized = !0);
        Xb.proxyA.set(a);
        Xb.proxyB.set(c);
        Xb.distanceInput.transformA = b;
        Xb.distanceInput.transformB = d;
        Xb.simplexCache.count = 0;
        $e.distance(Xb.distanceOutput, Xb.simplexCache,
          Xb.distanceInput);
        return Xb.distanceOutput.distance < 10 * Number.MIN_VALUE
      };
      Xb.prototype = {
        copy: function() {
          return null
        },
        set: function(a) {
          this.m_radius = a.m_radius
        },
        getType: function() {
          return this.m_type
        },
        testPoint: function(a, b) {
          return !1
        },
        rayCast: function(a, b, c) {
          return !1
        },
        computeAABB: function(a, b) {},
        computeMass: function(a, b) {},
        computeSubmergedArea: function(a, b, c, d) {
          return 0
        },
        m_type: null,
        m_radius: null,
        __class__: Xb
      };
      var Qc = function(a) {
        null == a && (a = 0);
        Xb.call(this);
        this.m_p = new C;
        this.m_type = 0;
        this.m_radius =
          a
      };
      k["box2D.collision.shapes.B2CircleShape"] = Qc;
      Qc.__name__ = "box2D.collision.shapes.B2CircleShape";
      Qc.__super__ = Xb;
      Qc.prototype = t(Xb.prototype, {
        copy: function() {
          var a = new Qc;
          a.set(this);
          return a
        },
        set: function(a) {
          Xb.prototype.set.call(this, a);
          if (a instanceof Qc) {
            var b = K.__cast(a, Qc);
            a = this.m_p;
            b = b.m_p;
            a.x = b.x;
            a.y = b.y
          }
        },
        testPoint: function(a, b) {
          var c = a.R,
            d = a.position.x + (c.col1.x * this.m_p.x + c.col2.x * this.m_p.y);
          a = a.position.y + (c.col1.y * this.m_p.x + c.col2.y * this.m_p.y);
          d = b.x - d;
          a = b.y - a;
          return d * d + a * a <= this.m_radius *
            this.m_radius
        },
        rayCast: function(a, b, c) {
          var d = c.R,
            e = b.p1.x - (c.position.x + (d.col1.x * this.m_p.x + d.col2.x * this.m_p.y));
          c = b.p1.y - (c.position.y + (d.col1.y * this.m_p.x + d.col2.y * this.m_p.y));
          d = b.p2.x - b.p1.x;
          var f = b.p2.y - b.p1.y,
            g = e * d + c * f,
            h = d * d + f * f,
            m = g * g - h * (e * e + c * c - this.m_radius * this.m_radius);
          if (0 > m || h < Number.MIN_VALUE) return !1;
          g = -(g + Math.sqrt(m));
          return 0 <= g && g <= b.maxFraction * h ? (g /= h, a.fraction = g, a.normal.x = e + g * d, a.normal.y = c + g * f, a.normal.normalize(), !0) : !1
        },
        computeAABB: function(a, b) {
          var c = b.R,
            d = b.position.x +
            (c.col1.x * this.m_p.x + c.col2.x * this.m_p.y);
          b = b.position.y + (c.col1.y * this.m_p.x + c.col2.y * this.m_p.y);
          c = a.lowerBound;
          var e = d - this.m_radius,
            f = b - this.m_radius;
          null == f && (f = 0);
          null == e && (e = 0);
          c.x = e;
          c.y = f;
          c = a.upperBound;
          e = d + this.m_radius;
          f = b + this.m_radius;
          null == f && (f = 0);
          null == e && (e = 0);
          c.x = e;
          c.y = f
        },
        computeMass: function(a, b) {
          a.mass = b * ea.b2_pi * this.m_radius * this.m_radius;
          b = a.center;
          var c = this.m_p;
          b.x = c.x;
          b.y = c.y;
          a.I = a.mass * (.5 * this.m_radius * this.m_radius + (this.m_p.x * this.m_p.x + this.m_p.y * this.m_p.y))
        },
        computeSubmergedArea: function(a,
          b, c, d) {
          c = P.mulX(c, this.m_p, !0);
          var e = -(P.dot(a, c) - b);
          if (e < -this.m_radius + Number.MIN_VALUE) return 0;
          if (e > this.m_radius) return d.x = c.x, d.y = c.y, Math.PI * this.m_radius * this.m_radius;
          b = this.m_radius * this.m_radius;
          var f = e * e;
          e = b * (Math.asin(e / this.m_radius) + Math.PI / 2) + e * Math.sqrt(b - f);
          b = -.6666666666666666 * Math.pow(b - f, 1.5) / e;
          d.x = c.x + a.x * b;
          d.y = c.y + a.y * b;
          return e
        },
        getLocalPosition: function() {
          return this.m_p
        },
        setLocalPosition: function(a) {
          var b = this.m_p;
          b.x = a.x;
          b.y = a.y
        },
        getRadius: function() {
          return this.m_radius
        },
        setRadius: function(a) {
          this.m_radius = a
        },
        m_p: null,
        __class__: Qc
      });
      var ug = function(a, b) {
        Xb.call(this);
        this.s_supportVec = new C;
        this.m_v1 = new C;
        this.m_v2 = new C;
        this.m_v0 = new C;
        this.m_v3 = new C;
        this.m_hasVertex3 = this.m_hasVertex0 = !1;
        this.m_coreV1 = new C;
        this.m_coreV2 = new C;
        this.m_normal = new C;
        this.m_direction = new C;
        this.m_cornerDir1 = new C;
        this.m_cornerDir2 = new C;
        this.m_type = 2;
        this.m_nextEdge = this.m_prevEdge = null;
        this.m_v1 = a;
        this.m_v2 = b;
        a = this.m_direction;
        b = this.m_v2.x - this.m_v1.x;
        var c = this.m_v2.y - this.m_v1.y;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        this.m_length = this.m_direction.normalize();
        a = this.m_normal;
        b = this.m_direction.y;
        c = -this.m_direction.x;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a = this.m_coreV1;
        b = -ea.b2_toiSlop * (this.m_normal.x - this.m_direction.x) + this.m_v1.x;
        c = -ea.b2_toiSlop * (this.m_normal.y - this.m_direction.y) + this.m_v1.y;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a = this.m_coreV2;
        b = -ea.b2_toiSlop * (this.m_normal.x + this.m_direction.x) + this.m_v2.x;
        c = -ea.b2_toiSlop * (this.m_normal.y + this.m_direction.y) +
          this.m_v2.y;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        this.m_cornerDir1 = this.m_normal;
        a = this.m_cornerDir2;
        b = -this.m_normal.x;
        c = -this.m_normal.y;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c
      };
      k["box2D.collision.shapes.B2EdgeShape"] = ug;
      ug.__name__ = "box2D.collision.shapes.B2EdgeShape";
      ug.__super__ = Xb;
      ug.prototype = t(Xb.prototype, {
        testPoint: function(a, b) {
          return !1
        },
        rayCast: function(a, b, c) {
          var d = b.p2.x - b.p1.x,
            e = b.p2.y - b.p1.y,
            f = c.R,
            g = c.position.x + (f.col1.x * this.m_v1.x + f.col2.x * this.m_v1.y),
            h = c.position.y + (f.col1.y *
              this.m_v1.x + f.col2.y * this.m_v1.y),
            m = c.position.y + (f.col1.y * this.m_v2.x + f.col2.y * this.m_v2.y) - h;
          c = -(c.position.x + (f.col1.x * this.m_v2.x + f.col2.x * this.m_v2.y) - g);
          f = 100 * Number.MIN_VALUE;
          var l = -(d * m + e * c);
          if (l > f) {
            g = b.p1.x - g;
            var y = b.p1.y - h;
            h = g * m + y * c;
            if (0 <= h && h <= b.maxFraction * l && (b = -d * y + e * g, -f * l <= b && b <= l * (1 + f))) return a.fraction = h / l, b = Math.sqrt(m * m + c * c), a.normal.x = m / b, a.normal.y = c / b, !0
          }
          return !1
        },
        computeAABB: function(a, b) {
          var c = b.R,
            d = b.position.x + (c.col1.x * this.m_v1.x + c.col2.x * this.m_v1.y),
            e = b.position.y +
            (c.col1.y * this.m_v1.x + c.col2.y * this.m_v1.y),
            f = b.position.x + (c.col1.x * this.m_v2.x + c.col2.x * this.m_v2.y);
          b = b.position.y + (c.col1.y * this.m_v2.x + c.col2.y * this.m_v2.y);
          d < f ? (a.lowerBound.x = d, a.upperBound.x = f) : (a.lowerBound.x = f, a.upperBound.x = d);
          e < b ? (a.lowerBound.y = e, a.upperBound.y = b) : (a.lowerBound.y = b, a.upperBound.y = e)
        },
        computeMass: function(a, b) {
          a.mass = 0;
          b = a.center;
          var c = this.m_v1;
          b.x = c.x;
          b.y = c.y;
          a.I = 0
        },
        computeSubmergedArea: function(a, b, c, d) {
          var e = new C(a.x * b, a.y * b),
            f = P.mulX(c, this.m_v1, !0);
          c = P.mulX(c, this.m_v2,
            !0);
          var g = P.dot(a, f) - b;
          a = P.dot(a, c) - b;
          if (0 < g) {
            if (0 < a) return 0;
            f.x = -a / (g - a) * f.x + g / (g - a) * c.x;
            f.y = -a / (g - a) * f.y + g / (g - a) * c.y
          } else 0 < a && (c.x = -a / (g - a) * f.x + g / (g - a) * c.x, c.y = -a / (g - a) * f.y + g / (g - a) * c.y);
          d.x = (e.x + f.x + c.x) / 3;
          d.y = (e.y + f.y + c.y) / 3;
          return .5 * ((f.x - e.x) * (c.y - e.y) - (f.y - e.y) * (c.x - e.x))
        },
        getLength: function() {
          return this.m_length
        },
        getVertex1: function() {
          return this.m_v1
        },
        getVertex2: function() {
          return this.m_v2
        },
        getCoreVertex1: function() {
          return this.m_coreV1
        },
        getCoreVertex2: function() {
          return this.m_coreV2
        },
        getNormalVector: function() {
          return this.m_normal
        },
        getDirectionVector: function() {
          return this.m_direction
        },
        getCorner1Vector: function() {
          return this.m_cornerDir1
        },
        getCorner2Vector: function() {
          return this.m_cornerDir2
        },
        corner1IsConvex: function() {
          return this.m_cornerConvex1
        },
        corner2IsConvex: function() {
          return this.m_cornerConvex2
        },
        getFirstVertex: function(a) {
          var b = a.R;
          return new C(a.position.x + (b.col1.x * this.m_coreV1.x + b.col2.x * this.m_coreV1.y), a.position.y + (b.col1.y * this.m_coreV1.x + b.col2.y * this.m_coreV1.y))
        },
        getNextEdge: function() {
          return this.m_nextEdge
        },
        getPrevEdge: function() {
          return this.m_prevEdge
        },
        s_supportVec: null,
        support: function(a, b, c) {
          var d = a.R,
            e = a.position.x + (d.col1.x * this.m_coreV1.x + d.col2.x * this.m_coreV1.y),
            f = a.position.y + (d.col1.y * this.m_coreV1.x + d.col2.y * this.m_coreV1.y),
            g = a.position.x + (d.col1.x * this.m_coreV2.x + d.col2.x * this.m_coreV2.y);
          a = a.position.y + (d.col1.y * this.m_coreV2.x + d.col2.y * this.m_coreV2.y);
          e * b + f * c > g * b + a * c ? (this.s_supportVec.x = e, this.s_supportVec.y = f) : (this.s_supportVec.x = g, this.s_supportVec.y =
            a);
          return this.s_supportVec
        },
        copy: function() {
          var a = new ug(this.m_v1, this.m_v2);
          a.set(this);
          var b = K.__cast(a, ug),
            c = b.m_v0,
            d = this.m_v0;
          c.x = d.x;
          c.y = d.y;
          c = b.m_v3;
          d = this.m_v3;
          c.x = d.x;
          c.y = d.y;
          b.m_hasVertex0 = this.m_hasVertex0;
          b.m_hasVertex3 = this.m_hasVertex3;
          return a
        },
        setPrevEdge: function(a, b, c, d) {
          this.m_prevEdge = a;
          this.m_coreV1 = b;
          this.m_cornerDir1 = c;
          this.m_cornerConvex1 = d
        },
        setNextEdge: function(a, b, c, d) {
          this.m_nextEdge = a;
          this.m_coreV2 = b;
          this.m_cornerDir2 = c;
          this.m_cornerConvex2 = d
        },
        m_v1: null,
        m_v2: null,
        m_v0: null,
        m_v3: null,
        m_hasVertex0: null,
        m_hasVertex3: null,
        m_coreV1: null,
        m_coreV2: null,
        m_length: null,
        m_normal: null,
        m_direction: null,
        m_cornerDir1: null,
        m_cornerDir2: null,
        m_cornerConvex1: null,
        m_cornerConvex2: null,
        m_nextEdge: null,
        m_prevEdge: null,
        __class__: ug
      });
      var vj = function() {
        this.mass = 0;
        this.center = new C(0, 0);
        this.I = 0
      };
      k["box2D.collision.shapes.B2MassData"] = vj;
      vj.__name__ = "box2D.collision.shapes.B2MassData";
      vj.prototype = {
        mass: null,
        center: null,
        I: null,
        __class__: vj
      };
      var Lb = function() {
        Xb.call(this);
        this.m_type = 1;
        this.m_centroid =
          new C;
        this.m_vertices = [];
        this.m_normals = []
      };
      k["box2D.collision.shapes.B2PolygonShape"] = Lb;
      Lb.__name__ = "box2D.collision.shapes.B2PolygonShape";
      Lb.asArray = function(a, b) {
        var c = new Lb;
        c.setAsArray(a, b);
        return c
      };
      Lb.asVector = function(a, b) {
        var c = new Lb;
        c.setAsVector(a, b);
        return c
      };
      Lb.asBox = function(a, b) {
        var c = new Lb;
        c.setAsBox(a, b);
        return c
      };
      Lb.asOrientedBox = function(a, b, c, d) {
        null == d && (d = 0);
        var e = new Lb;
        e.setAsOrientedBox(a, b, c, d);
        return e
      };
      Lb.asEdge = function(a, b) {
        var c = new Lb;
        c.setAsEdge(a, b);
        return c
      };
      Lb.computeCentroid = function(a, b) {
        for (var c = new C, d = 0, e = 0; e < b;) {
          var f = e++,
            g = a[f];
          f = f + 1 < b ? a[f + 1 | 0] : a[0];
          var h = .5 * ((g.x - 0) * (f.y - 0) - (g.y - 0) * (f.x - 0));
          d += h;
          c.x += .3333333333333333 * h * (0 + g.x + f.x);
          c.y += .3333333333333333 * h * (0 + g.y + f.y)
        }
        c.x *= 1 / d;
        c.y *= 1 / d;
        return c
      };
      Lb.computeOBB = function(a, b, c) {
        for (var d, e = [], f = 0, g = c; f < g;) d = f++, e[d] = b[d];
        e[c] = e[0];
        b = Number.MAX_VALUE;
        f = 1;
        for (g = c + 1; f < g;) {
          d = f++;
          var h = e[d - 1 | 0],
            m = e[d].x - h.x,
            l = e[d].y - h.y;
          d = Math.sqrt(m * m + l * l);
          m /= d;
          l /= d;
          for (var y = -l, n = m, p = d = Number.MAX_VALUE, q = -Number.MAX_VALUE,
              k = -Number.MAX_VALUE, u = 0, v = c; u < v;) {
            var T = u++,
              ja = e[T].x - h.x,
              r = e[T].y - h.y;
            T = m * ja + l * r;
            ja = y * ja + n * r;
            T < d && (d = T);
            ja < p && (p = ja);
            T > q && (q = T);
            ja > k && (k = ja)
          }
          u = (q - d) * (k - p);
          u < .95 * b && (b = u, a.R.col1.x = m, a.R.col1.y = l, a.R.col2.x = y, a.R.col2.y = n, m = .5 * (d + q), l = .5 * (p + k), y = a.R, a.center.x = h.x + (y.col1.x * m + y.col2.x * l), a.center.y = h.y + (y.col1.y * m + y.col2.y * l), a.extents.x = .5 * (q - d), a.extents.y = .5 * (k - p))
        }
      };
      Lb.__super__ = Xb;
      Lb.prototype = t(Xb.prototype, {
        copy: function() {
          var a = new Lb;
          a.set(this);
          return a
        },
        set: function(a) {
          Xb.prototype.set.call(this,
            a);
          if (a instanceof Lb) {
            a = K.__cast(a, Lb);
            var b = this.m_centroid,
              c = a.m_centroid;
            b.x = c.x;
            b.y = c.y;
            this.m_vertexCount = a.m_vertexCount;
            this.reserve(this.m_vertexCount);
            for (var d = 0, e = this.m_vertexCount; d < e;) {
              var f = d++;
              b = this.m_vertices[f];
              c = a.m_vertices[f];
              b.x = c.x;
              b.y = c.y;
              b = this.m_normals[f];
              f = a.m_normals[f];
              b.x = f.x;
              b.y = f.y
            }
          }
        },
        setAsArray: function(a, b) {
          null == b && (b = 0);
          for (var c = [], d = 0; d < a.length;) {
            var e = a[d];
            ++d;
            c.push(e)
          }
          this.setAsVector(c, b)
        },
        setAsVector: function(a, b) {
          null == b && (b = 0);
          0 == b && (b = a.length);
          ea.b2Assert(2 <=
            b);
          this.m_vertexCount = b;
          this.reserve(b);
          for (var c = 0, d = this.m_vertexCount; c < d;) {
            b = c++;
            var e = this.m_vertices[b],
              f = a[b];
            e.x = f.x;
            e.y = f.y
          }
          c = 0;
          for (d = this.m_vertexCount; c < d;) b = c++, a = P.subtractVVPooled(this.m_vertices[b + 1 < this.m_vertexCount ? b + 1 : 0], this.m_vertices[b]), ea.b2Assert(a.lengthSquared() > Number.MIN_VALUE), e = this.m_normals[b], f = P.crossVF(a, 1, !0), e.x = f.x, e.y = f.y, this.m_normals[b].normalize();
          this.m_centroid = Lb.computeCentroid(this.m_vertices, this.m_vertexCount)
        },
        setAsBox: function(a, b) {
          this.m_vertexCount =
            4;
          this.reserve(4);
          var c = this.m_vertices[0],
            d = -a,
            e = -b;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_vertices[1];
          d = a;
          e = -b;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_vertices[2];
          d = a;
          e = b;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_vertices[3];
          d = -a;
          e = b;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_normals[0];
          d = 0;
          e = -1;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_normals[1];
          d = 1;
          e = 0;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_normals[2];
          d = 0;
          e = 1;
          null == e && (e = 0);
          null == d &&
            (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_normals[3];
          d = -1;
          e = 0;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = this.m_centroid;
          c.x = 0;
          c.y = 0
        },
        setAsOrientedBox: function(a, b, c, d) {
          null == d && (d = 0);
          this.m_vertexCount = 4;
          this.reserve(4);
          var e = this.m_vertices[0],
            f = -a,
            g = -b;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = this.m_vertices[1];
          f = a;
          g = -b;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = this.m_vertices[2];
          f = a;
          g = b;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = this.m_vertices[3];
          f = -a;
          g = b;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e =
            this.m_normals[0];
          f = 0;
          g = -1;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = this.m_normals[1];
          f = 1;
          g = 0;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = this.m_normals[2];
          f = 0;
          g = 1;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = this.m_normals[3];
          f = -1;
          g = 0;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          this.m_centroid = c;
          a = new af;
          a.position = c;
          a.R.set(d);
          c = 0;
          for (d = this.m_vertexCount; c < d;) b = c++, this.m_vertices[b] = P.mulX(a, this.m_vertices[b]), this.m_normals[b] = P.mulMV(a.R, this.m_normals[b])
        },
        setAsEdge: function(a, b) {
          this.m_vertexCount =
            2;
          this.reserve(2);
          var c = this.m_vertices[0];
          c.x = a.x;
          c.y = a.y;
          c = this.m_vertices[1];
          c.x = b.x;
          c.y = b.y;
          this.m_centroid.x = .5 * (a.x + b.x);
          this.m_centroid.y = .5 * (a.y + b.y);
          this.m_normals[0] = P.crossVF(P.subtractVV(b, a), 1);
          this.m_normals[0].normalize();
          this.m_normals[1].x = -this.m_normals[0].x;
          this.m_normals[1].y = -this.m_normals[0].y
        },
        testPoint: function(a, b) {
          var c = a.R;
          var d = b.x - a.position.x;
          a = b.y - a.position.y;
          b = d * c.col1.x + a * c.col1.y;
          for (var e = d * c.col2.x + a * c.col2.y, f = 0, g = this.m_vertexCount; f < g;) {
            var h = f++;
            c = this.m_vertices[h];
            d = b - c.x;
            a = e - c.y;
            c = this.m_normals[h];
            if (0 < c.x * d + c.y * a) return !1
          }
          return !0
        },
        rayCast: function(a, b, c) {
          var d = 0,
            e = b.maxFraction,
            f = b.p1.x - c.position.x,
            g = b.p1.y - c.position.y,
            h = c.R,
            m = f * h.col1.x + g * h.col1.y,
            l = f * h.col2.x + g * h.col2.y;
          f = b.p2.x - c.position.x;
          g = b.p2.y - c.position.y;
          h = c.R;
          b = f * h.col1.x + g * h.col1.y - m;
          h = f * h.col2.x + g * h.col2.y - l;
          for (var y = -1, n = 0, p = this.m_vertexCount; n < p;) {
            var q = n++;
            var k = this.m_vertices[q];
            f = k.x - m;
            g = k.y - l;
            k = this.m_normals[q];
            f = k.x * f + k.y * g;
            k = k.x * b + k.y * h;
            if (0 == k) {
              if (0 > f) return !1
            } else 0 > k && f < d *
              k ? (d = f / k, y = q) : 0 < k && f < e * k && (e = f / k);
            if (e < d - Number.MIN_VALUE) return !1
          }
          return 0 <= y ? (a.fraction = d, h = c.R, k = this.m_normals[y], a.normal.x = h.col1.x * k.x + h.col2.x * k.y, a.normal.y = h.col1.y * k.x + h.col2.y * k.y, !0) : !1
        },
        computeAABB: function(a, b) {
          for (var c = b.R, d = this.m_vertices[0], e = b.position.x + (c.col1.x * d.x + c.col2.x * d.y), f = b.position.y + (c.col1.y * d.x + c.col2.y * d.y), g = e, h = f, m = 1, l = this.m_vertexCount; m < l;) {
            var y = m++;
            d = this.m_vertices[y];
            y = b.position.x + (c.col1.x * d.x + c.col2.x * d.y);
            d = b.position.y + (c.col1.y * d.x + c.col2.y * d.y);
            e < y || (e = y);
            f < d || (f = d);
            g > y || (g = y);
            h > d || (h = d)
          }
          a.lowerBound.x = e - this.m_radius;
          a.lowerBound.y = f - this.m_radius;
          a.upperBound.x = g + this.m_radius;
          a.upperBound.y = h + this.m_radius
        },
        computeMass: function(a, b) {
          if (2 == this.m_vertexCount) a.center.x = .5 * (this.m_vertices[0].x + this.m_vertices[1].x), a.center.y = .5 * (this.m_vertices[0].y + this.m_vertices[1].y), a.mass = 0, a.I = 0;
          else {
            for (var c = 0, d = 0, e = 0, f = 0, g = 0, h = this.m_vertexCount; g < h;) {
              var m = g++,
                l = this.m_vertices[m],
                y = m + 1 < this.m_vertexCount ? this.m_vertices[m + 1 | 0] : this.m_vertices[0],
                n = l.x - 0,
                p = l.y - 0,
                k = y.x - 0,
                q = y.y - 0;
              m = n * q - p * k;
              var u = .5 * m;
              e += u;
              c += .3333333333333333 * u * (0 + l.x + y.x);
              d += .3333333333333333 * u * (0 + l.y + y.y);
              l = n;
              f += m * (.3333333333333333 * (.25 * (l * l + k * l + k * k) + (0 * l + 0 * k)) + .3333333333333333 * (.25 * (p * p + q * p + q * q) + (0 * p + 0 * q)))
            }
            a.mass = b * e;
            g = a.center;
            c *= 1 / e;
            d *= 1 / e;
            null == d && (d = 0);
            null == c && (c = 0);
            g.x = c;
            g.y = d;
            a.I = b * f
          }
        },
        computeSubmergedArea: function(a, b, c, d) {
          var e = P.mulTMV(c.R, a, !0),
            f = b - P.dot(a, c.position),
            g = [],
            h = 0,
            m = -1;
          b = -1;
          for (var l = !1, y = 0, n = this.m_vertexCount; y < n;) {
            a = y++;
            g[a] = P.dot(e, this.m_vertices[a]) -
              f;
            var p = g[a] < -Number.MIN_VALUE;
            0 < a && (p ? l || (m = a - 1, ++h) : l && (b = a - 1, ++h));
            l = p
          }
          switch (h) {
            case 0:
              return l ? (a = new vj, this.computeMass(a, 1), c = P.mulX(c, a.center), d.x = c.x, d.y = c.y, a.mass) : 0;
            case 1:
              -1 == m ? m = this.m_vertexCount - 1 : b = this.m_vertexCount - 1
          }
          a = (m + 1) % this.m_vertexCount;
          e = (b + 1) % this.m_vertexCount;
          f = (0 - g[m]) / (g[a] - g[m]);
          g = (0 - g[b]) / (g[e] - g[b]);
          m = new C(this.m_vertices[m].x * (1 - f) + this.m_vertices[a].x * f, this.m_vertices[m].y * (1 - f) + this.m_vertices[a].y * f);
          g = new C(this.m_vertices[b].x * (1 - g) + this.m_vertices[e].x *
            g, this.m_vertices[b].y * (1 - g) + this.m_vertices[e].y * g);
          b = 0;
          f = new C;
          for (h = this.m_vertices[a]; a != e;) a = (a + 1) % this.m_vertexCount, l = a == e ? g : this.m_vertices[a], y = .5 * ((h.x - m.x) * (l.y - m.y) - (h.y - m.y) * (l.x - m.x)), b += y, f.x += y * (m.x + h.x + l.x) / 3, f.y += y * (m.y + h.y + l.y) / 3, h = l;
          f.multiply(1 / b);
          c = P.mulX(c, f);
          d.x = c.x;
          d.y = c.y;
          return b
        },
        getVertexCount: function() {
          return this.m_vertexCount
        },
        getVertices: function() {
          return this.m_vertices
        },
        getNormals: function() {
          return this.m_normals
        },
        getSupport: function(a) {
          for (var b = 0, c = this.m_vertices[0].x *
              a.x + this.m_vertices[0].y * a.y, d = 1, e = this.m_vertexCount; d < e;) {
            var f = d++,
              g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
            g > c && (b = f, c = g)
          }
          return b
        },
        getSupportVertex: function(a) {
          for (var b = 0, c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y, d = 1, e = this.m_vertexCount; d < e;) {
            var f = d++,
              g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
            g > c && (b = f, c = g)
          }
          return this.m_vertices[b]
        },
        validate: function() {
          return !1
        },
        reserve: function(a) {
          for (var b = this.m_vertices.length; b < a;) {
            var c = b++;
            this.m_vertices[c] = new C;
            this.m_normals[c] =
              new C
          }
        },
        m_centroid: null,
        m_vertices: null,
        m_normals: null,
        m_vertexCount: null,
        __class__: Lb
      });
      var Ak = function(a, b, c) {
        this._r = 255 * P.clamp(a, 0, 1) | 0;
        this._g = 255 * P.clamp(b, 0, 1) | 0;
        this._b = 255 * P.clamp(c, 0, 1) | 0
      };
      k["box2D.common.B2Color"] = Ak;
      Ak.__name__ = "box2D.common.B2Color";
      Ak.prototype = {
        set: function(a, b, c) {
          this._r = 255 * P.clamp(a, 0, 1) | 0;
          this._g = 255 * P.clamp(b, 0, 1) | 0;
          this._b = 255 * P.clamp(c, 0, 1) | 0
        },
        r: null,
        g: null,
        b: null,
        color: null,
        set_r: function(a) {
          return this._r = 255 * P.clamp(a, 0, 1) | 0
        },
        set_g: function(a) {
          return this._g =
            255 * P.clamp(a, 0, 1) | 0
        },
        set_b: function(a) {
          return this._b = 255 * P.clamp(a, 0, 1) | 0
        },
        get_color: function() {
          return this._r << 16 | this._g << 8 | this._b
        },
        _r: null,
        _g: null,
        _b: null,
        __class__: Ak,
        __properties__: {
          get_color: "get_color",
          set_b: "set_b",
          set_g: "set_g",
          set_r: "set_r"
        }
      };
      var ea = function() {};
      k["box2D.common.B2Settings"] = ea;
      ea.__name__ = "box2D.common.B2Settings";
      ea.b2MixFriction = function(a, b) {
        return Math.sqrt(a * b)
      };
      ea.b2MixRestitution = function(a, b) {
        return a > b ? a : b
      };
      ea.b2Assert = function(a) {
        if (!a) throw F.thrown("Assertion Failed");
      };
      var Lh = function(a, b, c) {
        this.col1 = new bf;
        this.col2 = new bf;
        this.col3 = new bf;
        null == a && null == b && null == c ? (this.col1.setZero(), this.col2.setZero(), this.col3.setZero()) : (this.col1.setV(a), this.col2.setV(b), this.col3.setV(c))
      };
      k["box2D.common.math.B2Mat33"] = Lh;
      Lh.__name__ = "box2D.common.math.B2Mat33";
      Lh.prototype = {
        setVVV: function(a, b, c) {
          this.col1.setV(a);
          this.col2.setV(b);
          this.col3.setV(c)
        },
        copy: function() {
          return new Lh(this.col1, this.col2, this.col3)
        },
        setM: function(a) {
          this.col1.setV(a.col1);
          this.col2.setV(a.col2);
          this.col3.setV(a.col3)
        },
        addM: function(a) {
          this.col1.x += a.col1.x;
          this.col1.y += a.col1.y;
          this.col1.z += a.col1.z;
          this.col2.x += a.col2.x;
          this.col2.y += a.col2.y;
          this.col2.z += a.col2.z;
          this.col3.x += a.col3.x;
          this.col3.y += a.col3.y;
          this.col3.z += a.col3.z
        },
        setIdentity: function() {
          this.col1.x = 1;
          this.col2.x = 0;
          this.col3.x = 0;
          this.col1.y = 0;
          this.col2.y = 1;
          this.col3.y = 0;
          this.col1.z = 0;
          this.col2.z = 0;
          this.col3.z = 1
        },
        setZero: function() {
          this.col1.x = 0;
          this.col2.x = 0;
          this.col3.x = 0;
          this.col1.y = 0;
          this.col2.y = 0;
          this.col3.y = 0;
          this.col1.z =
            0;
          this.col2.z = 0;
          this.col3.z = 0
        },
        solve22: function(a, b, c) {
          var d = this.col1.x,
            e = this.col2.x,
            f = this.col1.y,
            g = this.col2.y,
            h = d * g - e * f;
          0 != h && (h = 1 / h);
          a.x = h * (g * b - e * c);
          a.y = h * (d * c - f * b);
          return a
        },
        solve33: function(a, b, c, d) {
          var e = this.col1.x,
            f = this.col1.y,
            g = this.col1.z,
            h = this.col2.x,
            m = this.col2.y,
            l = this.col2.z,
            y = this.col3.x,
            n = this.col3.y,
            p = this.col3.z,
            k = e * (m * p - l * n) + f * (l * y - h * p) + g * (h * n - m * y);
          0 != k && (k = 1 / k);
          a.x = k * (b * (m * p - l * n) + c * (l * y - h * p) + d * (h * n - m * y));
          a.y = k * (e * (c * p - d * n) + f * (d * y - b * p) + g * (b * n - c * y));
          a.z = k * (e * (m * d - l * c) + f * (l *
            b - h * d) + g * (h * c - m * b));
          return a
        },
        col1: null,
        col2: null,
        col3: null,
        __class__: Lh
      };
      var P = function() {};
      k["box2D.common.math.B2Math"] = P;
      P.__name__ = "box2D.common.math.B2Math";
      P.__properties__ = {
        get_MIN_VALUE: "get_MIN_VALUE",
        get_MAX_VALUE: "get_MAX_VALUE"
      };
      P.isValid = function(a) {
        return isNaN(a) || -Infinity == a || Infinity == a ? !1 : !0
      };
      P.dot = function(a, b) {
        return a.x * b.x + a.y * b.y
      };
      P.crossVV = function(a, b) {
        return a.x * b.y - a.y * b.x
      };
      P.crossVF = function(a, b, c) {
        null == c && (c = !1);
        if (c) {
          c = C.getFromPool();
          var d = b * a.y;
          a = -b * a.x;
          null == a &&
            (a = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = a
        } else c = new C(b * a.y, -b * a.x);
        return c
      };
      P.crossFV = function(a, b, c) {
        null == c && (c = !1);
        if (c) {
          c = C.getFromPool();
          var d = -a * b.y;
          a *= b.x;
          null == a && (a = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = a
        } else c = new C(-a * b.y, a * b.x);
        return c
      };
      P.mulMV = function(a, b, c) {
        null == c && (c = !1);
        if (c) {
          c = C.getFromPool();
          var d = a.col1.x * b.x + a.col2.x * b.y;
          a = a.col1.y * b.x + a.col2.y * b.y;
          null == a && (a = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = a
        } else c = new C(a.col1.x * b.x + a.col2.x * b.y, a.col1.y * b.x + a.col2.y * b.y);
        return c
      };
      P.mulTMV = function(a, b, c) {
        null ==
          c && (c = !1);
        if (c) {
          c = C.getFromPool();
          var d = P.dot(b, a.col1);
          a = P.dot(b, a.col2);
          null == a && (a = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = a
        } else c = new C(P.dot(b, a.col1), P.dot(b, a.col2));
        return c
      };
      P.mulX = function(a, b, c) {
        null == c && (c = !1);
        b = P.mulMV(a.R, b, c);
        b.x += a.position.x;
        b.y += a.position.y;
        return b
      };
      P.mulXT = function(a, b, c) {
        b = P.subtractVVPooled(b, a.position);
        c = b.x * a.R.col1.x + b.y * a.R.col1.y;
        b.y = b.x * a.R.col2.x + b.y * a.R.col2.y;
        b.x = c;
        return b
      };
      P.addVV = function(a, b) {
        return new C(a.x + b.x, a.y + b.y)
      };
      P.subtractVV = function(a, b) {
        return new C(a.x -
          b.x, a.y - b.y)
      };
      P.subtractVVPooled = function(a, b) {
        var c = C.getFromPool(),
          d = a.x - b.x;
        a = a.y - b.y;
        null == a && (a = 0);
        null == d && (d = 0);
        c.x = d;
        c.y = a;
        return c
      };
      P.distance = function(a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(c * c + a * a)
      };
      P.distanceSquared = function(a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return c * c + a * a
      };
      P.mulFV = function(a, b) {
        return new C(a * b.x, a * b.y)
      };
      P.addMM = function(a, b) {
        return Fc.fromVV(P.addVV(a.col1, b.col1), P.addVV(a.col2, b.col2))
      };
      P.mulMM = function(a, b) {
        return Fc.fromVV(P.mulMV(a, b.col1), P.mulMV(a, b.col2))
      };
      P.mulTMM = function(a, b) {
        var c = new C(P.dot(a.col1, b.col1), P.dot(a.col2, b.col1));
        a = new C(P.dot(a.col1, b.col2), P.dot(a.col2, b.col2));
        return Fc.fromVV(c, a)
      };
      P.abs = function(a) {
        return 0 < a ? a : -a
      };
      P.absV = function(a) {
        return new C(P.abs(a.x), P.abs(a.y))
      };
      P.absM = function(a) {
        return Fc.fromVV(P.absV(a.col1), P.absV(a.col2))
      };
      P.min = function(a, b) {
        return a < b ? a : b
      };
      P.minV = function(a, b) {
        return new C(P.min(a.x, b.x), P.min(a.y, b.y))
      };
      P.max = function(a, b) {
        return a > b ? a : b
      };
      P.maxV = function(a, b) {
        return new C(P.max(a.x, b.x), P.max(a.y,
          b.y))
      };
      P.clamp = function(a, b, c) {
        return a < b ? b : a > c ? c : a
      };
      P.clampV = function(a, b, c) {
        return P.maxV(b, P.minV(a, c))
      };
      P.swap = function(a, b) {
        var c = a[0];
        a[0] = b[0];
        b[0] = c
      };
      P.random = function() {
        return 2 * Math.random() - 1
      };
      P.randomRange = function(a, b) {
        return (b - a) * Math.random() + a
      };
      P.nextPowerOfTwo = function(a) {
        a |= a >> 1 & 2147483647;
        a |= a >> 2 & 1073741823;
        a |= a >> 4 & 268435455;
        a |= a >> 8 & 16777215;
        return (a | a >> 16 & 65535) + 1
      };
      P.isPowerOfTwo = function(a) {
        return 0 < a && 0 == (a & a - 1)
      };
      P.get_MAX_VALUE = function() {
        return Number.MAX_VALUE
      };
      P.get_MIN_VALUE =
        function() {
          return Number.MIN_VALUE
        };
      var nh = function() {
        this.localCenter = new C;
        this.c0 = new C;
        this.c = new C
      };
      k["box2D.common.math.B2Sweep"] = nh;
      nh.__name__ = "box2D.common.math.B2Sweep";
      nh.prototype = {
        set: function(a) {
          var b = this.localCenter,
            c = a.localCenter;
          b.x = c.x;
          b.y = c.y;
          b = this.c0;
          c = a.c0;
          b.x = c.x;
          b.y = c.y;
          b = this.c;
          c = a.c;
          b.x = c.x;
          b.y = c.y;
          this.a0 = a.a0;
          this.a = a.a;
          this.t0 = a.t0
        },
        copy: function() {
          var a = new nh,
            b = a.localCenter,
            c = this.localCenter;
          b.x = c.x;
          b.y = c.y;
          b = a.c0;
          c = this.c0;
          b.x = c.x;
          b.y = c.y;
          b = a.c;
          c = this.c;
          b.x = c.x;
          b.y = c.y;
          a.a0 = this.a0;
          a.a = this.a;
          a.t0 = this.t0;
          return a
        },
        getTransform: function(a, b) {
          a.position.x = (1 - b) * this.c0.x + b * this.c.x;
          a.position.y = (1 - b) * this.c0.y + b * this.c.y;
          a.R.set((1 - b) * this.a0 + b * this.a);
          b = a.R;
          a.position.x -= b.col1.x * this.localCenter.x + b.col2.x * this.localCenter.y;
          a.position.y -= b.col1.y * this.localCenter.x + b.col2.y * this.localCenter.y
        },
        advance: function(a) {
          if (this.t0 < a && 1 - this.t0 > Number.MIN_VALUE) {
            var b = (a - this.t0) / (1 - this.t0);
            this.c0.x = (1 - b) * this.c0.x + b * this.c.x;
            this.c0.y = (1 - b) * this.c0.y + b * this.c.y;
            this.a0 = (1 - b) * this.a0 + b * this.a;
            this.t0 = a
          }
        },
        localCenter: null,
        c0: null,
        c: null,
        a0: null,
        a: null,
        t0: null,
        __class__: nh
      };
      var bf = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.z = c
      };
      k["box2D.common.math.B2Vec3"] = bf;
      bf.__name__ = "box2D.common.math.B2Vec3";
      bf.prototype = {
        setZero: function() {
          this.x = this.y = this.z = 0
        },
        set: function(a, b, c) {
          this.x = a;
          this.y = b;
          this.z = c
        },
        setV: function(a) {
          this.x = a.x;
          this.y = a.y;
          this.z = a.z
        },
        getNegative: function() {
          return new bf(-this.x, -this.y, -this.z)
        },
        negativeSelf: function() {
          this.x = -this.x;
          this.y = -this.y;
          this.z = -this.z
        },
        copy: function() {
          return new bf(this.x, this.y, this.z)
        },
        add: function(a) {
          this.x += a.x;
          this.y += a.y;
          this.z += a.z
        },
        subtract: function(a) {
          this.x -= a.x;
          this.y -= a.y;
          this.z -= a.z
        },
        multiply: function(a) {
          this.x *= a;
          this.y *= a;
          this.z *= a
        },
        x: null,
        y: null,
        z: null,
        __class__: bf
      };
      var ra = function(a, b) {
        this.m_xf = new af;
        this.m_sweep = new nh;
        this.m_linearVelocity = new C;
        this.m_force = new C;
        this.m_flags = 0;
        a.bullet && (this.m_flags |= ra.e_bulletFlag);
        a.fixedRotation && (this.m_flags |= ra.e_fixedRotationFlag);
        a.allowSleep && (this.m_flags |= ra.e_allowSleepFlag);
        a.awake && (this.m_flags |= ra.e_awakeFlag);
        a.active && (this.m_flags |= ra.e_activeFlag);
        a.ignoreGravity && (this.m_flags |= ra.e_ignoreGravityFlag);
        this.m_world = b;
        b = this.m_xf.position;
        var c = a.position;
        b.x = c.x;
        b.y = c.y;
        this.m_xf.R.set(a.angle);
        b = this.m_sweep.localCenter;
        b.x = 0;
        b.y = 0;
        this.m_sweep.t0 = 1;
        this.m_sweep.a0 = this.m_sweep.a = a.angle;
        b = this.m_xf.R;
        c = this.m_sweep.localCenter;
        this.m_sweep.c.x = b.col1.x * c.x + b.col2.x * c.y;
        this.m_sweep.c.y = b.col1.y * c.x + b.col2.y *
          c.y;
        this.m_sweep.c.x += this.m_xf.position.x;
        this.m_sweep.c.y += this.m_xf.position.y;
        b = this.m_sweep.c0;
        c = this.m_sweep.c;
        b.x = c.x;
        b.y = c.y;
        this.m_contactList = this.m_controllerList = this.m_jointList = null;
        this.m_controllerCount = 0;
        this.m_next = this.m_prev = null;
        b = this.m_linearVelocity;
        c = a.linearVelocity;
        b.x = c.x;
        b.y = c.y;
        this.m_angularVelocity = a.angularVelocity;
        this.m_linearDamping = a.linearDamping;
        this.m_angularDamping = a.angularDamping;
        b = this.m_force;
        var d = c = 0;
        null == d && (d = 0);
        null == c && (c = 0);
        b.x = c;
        b.y = d;
        this.m_sleepTime =
          this.m_torque = 0;
        this.m_type = a.type;
        this.m_invMass = this.m_type == ra.b2_dynamicBody ? this.m_mass = 1 : this.m_mass = 0;
        this.m_invI = this.m_I = 0;
        this.m_inertiaScale = a.inertiaScale;
        this.m_userData = a.userData;
        this.m_fixtureList = null;
        this.m_fixtureCount = 0;
        this.groupID = a.groupID;
        this.origin = new C;
        this.size = new C
      };
      k["box2D.dynamics.B2Body"] = ra;
      ra.__name__ = "box2D.dynamics.B2Body";
      ra.prototype = {
        connectEdges: function(a, b, c) {
          var d = Math.atan2(b.getDirectionVector().y, b.getDirectionVector().x);
          c = P.mulFV(Math.tan(.5 * (d - c)),
            b.getDirectionVector());
          c = P.subtractVV(c, b.getNormalVector());
          c = P.mulFV(ea.b2_toiSlop, c);
          c = P.addVV(c, b.getVertex1());
          var e = P.addVV(a.getDirectionVector(), b.getDirectionVector());
          e.normalize();
          var f = 0 < P.dot(a.getDirectionVector(), b.getNormalVector());
          a.setNextEdge(b, c, e, f);
          b.setPrevEdge(a, c, e, f);
          return d
        },
        createFixture: function(a) {
          if (1 == this.m_world.isLocked()) return null;
          var b = new Hf;
          b.create(this, this.m_xf, a);
          0 != (this.m_flags & ra.e_activeFlag) && b.createProxy(this.m_world.m_contactManager.m_broadPhase,
            this.m_xf);
          b.m_next = this.m_fixtureList;
          this.m_fixtureList = b;
          ++this.m_fixtureCount;
          b.m_body = this;
          0 < b.m_density && this.resetMassData();
          this.m_world.m_flags |= gc.e_newFixture;
          return b
        },
        createFixture2: function(a, b) {
          null == b && (b = 0);
          var c = new If;
          c.shape = a;
          c.density = b;
          return this.createFixture(c)
        },
        DestroyFixture: function(a) {
          if (1 != this.m_world.isLocked()) {
            for (var b = this.m_fixtureList, c = null; null != b;) {
              if (b == a) {
                null != c ? c.m_next = a.m_next : this.m_fixtureList = a.m_next;
                break
              }
              c = b;
              b = b.m_next
            }
            for (b = this.m_contactList; null !=
              b;) {
              c = b.contact;
              b = b.next;
              var d = c.getFixtureA(),
                e = c.getFixtureB();
              a != d && a != e || this.m_world.m_contactManager.destroy(c)
            }
            0 != (this.m_flags & ra.e_activeFlag) && a.destroyProxy(this.m_world.m_contactManager.m_broadPhase);
            a.destroy();
            a.m_body = null;
            a.m_next = null;
            --this.m_fixtureCount;
            this.resetMassData()
          }
        },
        setPositionAndAngle: function(a, b) {
          if (1 != this.m_world.isLocked()) {
            this.m_xf.R.set(b);
            var c = this.m_xf.position;
            c.x = a.x;
            c.y = a.y;
            c = this.m_xf.R;
            a = this.m_sweep.localCenter;
            this.m_sweep.c.x = c.col1.x * a.x + c.col2.x *
              a.y;
            this.m_sweep.c.y = c.col1.y * a.x + c.col2.y * a.y;
            this.m_sweep.c.x += this.m_xf.position.x;
            this.m_sweep.c.y += this.m_xf.position.y;
            c = this.m_sweep.c0;
            a = this.m_sweep.c;
            c.x = a.x;
            c.y = a.y;
            this.m_sweep.a0 = this.m_sweep.a = b;
            b = this.m_world.m_contactManager.m_broadPhase;
            for (c = this.m_fixtureList; null != c;) c.synchronize(b, this.m_xf, this.m_xf), c = c.m_next;
            this.m_world.m_contactManager.findNewContacts()
          }
        },
        setPositionFast: function(a) {
          if (1 != this.m_world.isLocked()) {
            var b = this.m_xf.position;
            b.x = a.x;
            b.y = a.y;
            b = this.m_xf.R;
            a =
              this.m_sweep.localCenter;
            this.m_sweep.c.x = b.col1.x * a.x + b.col2.x * a.y;
            this.m_sweep.c.y = b.col1.y * a.x + b.col2.y * a.y;
            this.m_sweep.c.x += this.m_xf.position.x;
            this.m_sweep.c.y += this.m_xf.position.y;
            b = this.m_sweep.c0;
            a = this.m_sweep.c;
            b.x = a.x;
            b.y = a.y
          }
        },
        setTransform: function(a) {
          this.setPositionAndAngle(a.position, a.getAngle())
        },
        getTransform: function() {
          return this.m_xf
        },
        getPosition: function() {
          return this.m_xf.position
        },
        setPosition: function(a) {
          this.setPositionAndAngle(a, this.getAngle())
        },
        getAngle: function() {
          return this.m_sweep.a
        },
        setAngle: function(a) {
          this.setPositionAndAngle(this.getPosition(), a)
        },
        getWorldCenter: function() {
          return this.m_sweep.c
        },
        getLocalCenter: function() {
          return this.m_sweep.localCenter
        },
        setLinearVelocity: function(a) {
          if (this.m_type != ra.b2_staticBody) {
            var b = this.m_linearVelocity;
            b.x = a.x;
            b.y = a.y
          }
        },
        getLinearVelocity: function() {
          return this.m_linearVelocity
        },
        setAngularVelocity: function(a) {
          this.m_type != ra.b2_staticBody && (this.m_angularVelocity = a)
        },
        getAngularVelocity: function() {
          return this.m_angularVelocity
        },
        getDefinition: function() {
          var a =
            new ri;
          a.type = this.getType();
          a.allowSleep = (this.m_flags & ra.e_allowSleepFlag) == ra.e_allowSleepFlag;
          a.angle = this.getAngle();
          a.angularDamping = this.m_angularDamping;
          a.angularVelocity = this.m_angularVelocity;
          a.fixedRotation = (this.m_flags & ra.e_fixedRotationFlag) == ra.e_fixedRotationFlag;
          a.bullet = (this.m_flags & ra.e_bulletFlag) == ra.e_bulletFlag;
          a.awake = (this.m_flags & ra.e_awakeFlag) == ra.e_awakeFlag;
          a.linearDamping = this.m_linearDamping;
          var b = a.linearVelocity,
            c = this.getLinearVelocity();
          b.x = c.x;
          b.y = c.y;
          a.position =
            this.getPosition();
          a.userData = this.getUserData();
          return a
        },
        applyForce: function(a, b) {
          this.m_type == ra.b2_dynamicBody && (0 == this.isAwake() && this.setAwake(!0), this.m_force.x += a.x, this.m_force.y += a.y, this.m_torque += (b.x - this.m_sweep.c.x) * a.y - (b.y - this.m_sweep.c.y) * a.x)
        },
        applyTorque: function(a) {
          this.m_type == ra.b2_dynamicBody && (0 == this.isAwake() && this.setAwake(!0), this.m_torque += a)
        },
        applyImpulse: function(a, b) {
          this.m_type == ra.b2_dynamicBody && (0 == this.isAwake() && this.setAwake(!0), this.m_linearVelocity.x += this.m_invMass *
            a.x, this.m_linearVelocity.y += this.m_invMass * a.y, this.m_angularVelocity += this.m_invI * ((b.x - this.m_sweep.c.x) * a.y - (b.y - this.m_sweep.c.y) * a.x))
        },
        split: function(a) {
          for (var b = this.getLinearVelocity().copy(), c = this.getAngularVelocity(), d = this.getWorldCenter(), e = this.m_world.createBody(this.getDefinition()), f = null, g = this.m_fixtureList; null != g;)
            if (a(g)) {
              var h = g.m_next;
              null != f ? f.m_next = h : this.m_fixtureList = h;
              this.m_fixtureCount--;
              g.m_next = e.m_fixtureList;
              e.m_fixtureList = g;
              e.m_fixtureCount++;
              g.m_body = e;
              g = h
            } else f =
              g, g = g.m_next;
          this.resetMassData();
          e.resetMassData();
          f = this.getWorldCenter();
          a = e.getWorldCenter();
          f = P.addVV(b, P.crossFV(c, P.subtractVV(f, d)));
          b = P.addVV(b, P.crossFV(c, P.subtractVV(a, d)));
          this.setLinearVelocity(f);
          e.setLinearVelocity(b);
          this.setAngularVelocity(c);
          e.setAngularVelocity(c);
          this.synchronizeFixtures();
          e.synchronizeFixtures();
          return e
        },
        merge: function(a) {
          for (var b = a.m_fixtureList; null != b;) {
            var c = b.m_next;
            a.m_fixtureCount--;
            b.m_next = this.m_fixtureList;
            this.m_fixtureList = b;
            this.m_fixtureCount++;
            b.m_body = a;
            b = c
          }
          this.m_fixtureCount = 0;
          this.getWorldCenter();
          a.getWorldCenter();
          this.getLinearVelocity().copy();
          a.getLinearVelocity().copy();
          this.getAngularVelocity();
          a.getAngularVelocity();
          this.resetMassData();
          this.synchronizeFixtures()
        },
        getMass: function() {
          return this.m_mass
        },
        getInertia: function() {
          return this.m_I
        },
        getMassData: function(a) {
          a.mass = this.m_mass;
          a.I = this.m_I;
          a = a.center;
          var b = this.m_sweep.localCenter;
          a.x = b.x;
          a.y = b.y
        },
        setMassData: function(a) {
          ea.b2Assert(0 == this.m_world.isLocked());
          if (1 != this.m_world.isLocked() &&
            this.m_type == ra.b2_dynamicBody) {
            this.m_invI = this.m_I = this.m_invMass = 0;
            this.m_mass = a.mass;
            0 >= this.m_mass && (this.m_mass = 1);
            this.m_invMass = 1 / this.m_mass;
            0 < a.I && 0 == (this.m_flags & ra.e_fixedRotationFlag) && (this.m_I = a.I - this.m_mass * (a.center.x * a.center.x + a.center.y * a.center.y), this.m_invI = 1 / this.m_I);
            var b = this.m_sweep.c.copy(),
              c = this.m_sweep.localCenter;
            a = a.center;
            c.x = a.x;
            c.y = a.y;
            c = this.m_sweep.c0;
            a = P.mulX(this.m_xf, this.m_sweep.localCenter);
            c.x = a.x;
            c.y = a.y;
            c = this.m_sweep.c;
            a = this.m_sweep.c0;
            c.x = a.x;
            c.y =
              a.y;
            this.m_linearVelocity.x += this.m_angularVelocity * -(this.m_sweep.c.y - b.y);
            this.m_linearVelocity.y += this.m_angularVelocity * (this.m_sweep.c.x - b.x)
          }
        },
        resetMassData: function() {
          this.m_invI = this.m_I = this.m_invMass = this.m_mass = 0;
          var a = this.m_sweep.localCenter;
          a.x = 0;
          a.y = 0;
          if (this.m_type != ra.b2_staticBody && this.m_type != ra.b2_kinematicBody) {
            var b = C.make(0, 0);
            for (a = this.m_fixtureList; null != a;)
              if (0 != a.m_density) {
                var c = a.getMassData();
                this.m_mass += c.mass;
                b.x += c.center.x * c.mass;
                b.y += c.center.y * c.mass;
                this.m_I +=
                  c.I;
                a = a.m_next
              } 0 < this.m_mass ? (this.m_invMass = 1 / this.m_mass, b.x *= this.m_invMass, b.y *= this.m_invMass) : this.m_invMass = this.m_mass = 1;
            0 < this.m_I && 0 == (this.m_flags & ra.e_fixedRotationFlag) ? (this.m_I -= this.m_mass * (b.x * b.x + b.y * b.y), this.m_I *= this.m_inertiaScale, ea.b2Assert(0 < this.m_I), this.m_invI = 1 / this.m_I) : this.m_invI = this.m_I = 0;
            c = this.m_sweep.c.copy();
            a = this.m_sweep.localCenter;
            a.x = b.x;
            a.y = b.y;
            a = this.m_sweep.c0;
            b = P.mulX(this.m_xf, this.m_sweep.localCenter);
            a.x = b.x;
            a.y = b.y;
            a = this.m_sweep.c;
            b = this.m_sweep.c0;
            a.x = b.x;
            a.y = b.y;
            this.m_linearVelocity.x += this.m_angularVelocity * -(this.m_sweep.c.y - c.y);
            this.m_linearVelocity.y += this.m_angularVelocity * (this.m_sweep.c.x - c.x)
          }
        },
        getWorldPoint: function(a) {
          var b = this.m_xf.R;
          a = new C(b.col1.x * a.x + b.col2.x * a.y, b.col1.y * a.x + b.col2.y * a.y);
          a.x += this.m_xf.position.x;
          a.y += this.m_xf.position.y;
          return a
        },
        getWorldVector: function(a) {
          return P.mulMV(this.m_xf.R, a)
        },
        getLocalPoint: function(a) {
          return P.mulXT(this.m_xf, a)
        },
        getLocalVector: function(a) {
          return P.mulTMV(this.m_xf.R, a)
        },
        getLinearVelocityFromWorldPoint: function(a) {
          return new C(this.m_linearVelocity.x -
            this.m_angularVelocity * (a.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (a.x - this.m_sweep.c.x))
        },
        getLinearVelocityFromLocalPoint: function(a) {
          var b = this.m_xf.R;
          a = new C(b.col1.x * a.x + b.col2.x * a.y, b.col1.y * a.x + b.col2.y * a.y);
          a.x += this.m_xf.position.x;
          a.y += this.m_xf.position.y;
          return new C(this.m_linearVelocity.x - this.m_angularVelocity * (a.y - this.m_sweep.c.y), this.m_linearVelocity.y + this.m_angularVelocity * (a.x - this.m_sweep.c.x))
        },
        getLinearDamping: function() {
          return this.m_linearDamping
        },
        setLinearDamping: function(a) {
          this.m_linearDamping = a
        },
        getAngularDamping: function() {
          return this.m_angularDamping
        },
        setAngularDamping: function(a) {
          this.m_angularDamping = a
        },
        setType: function(a) {
          if (this.m_type != a)
            for (this.m_type = a, this.resetMassData(), this.m_type == ra.b2_staticBody && (a = this.m_linearVelocity, a.x = 0, this.m_angularVelocity = a.y = 0), this.setAwake(!0), a = this.m_force, a.x = 0, this.m_torque = a.y = 0, a = this.m_contactList; null != a;) a.contact.flagForFiltering(), a = a.next
        },
        getType: function() {
          return this.m_type
        },
        setBullet: function(a) {
          this.m_flags = a ? this.m_flags | ra.e_bulletFlag : this.m_flags & ~ra.e_bulletFlag
        },
        isBullet: function() {
          return (this.m_flags & ra.e_bulletFlag) == ra.e_bulletFlag
        },
        setSleepingAllowed: function(a) {
          a ? this.m_flags |= ra.e_allowSleepFlag : (this.m_flags &= ~ra.e_allowSleepFlag, this.setAwake(!0))
        },
        setAwake: function(a) {
          a ? (this.m_flags |= ra.e_awakeFlag, this.m_sleepTime = 0) : (this.m_flags &= ~ra.e_awakeFlag, this.m_sleepTime = 0, a = this.m_linearVelocity, a.x = 0, this.m_angularVelocity = a.y = 0, a = this.m_force, a.x = 0, this.m_torque =
            a.y = 0)
        },
        isAwake: function() {
          return (this.m_flags & ra.e_awakeFlag) == ra.e_awakeFlag
        },
        setFixedRotation: function(a) {
          this.m_flags = a ? this.m_flags | ra.e_fixedRotationFlag : this.m_flags & ~ra.e_fixedRotationFlag;
          this.resetMassData()
        },
        isFixedRotation: function() {
          return (this.m_flags & ra.e_fixedRotationFlag) == ra.e_fixedRotationFlag
        },
        setActive: function(a) {
          if (a != this.isActive()) {
            var b;
            if (a)
              for (this.m_flags |= ra.e_activeFlag, a = this.m_world.m_contactManager.m_broadPhase, b = this.m_fixtureList; null != b;) b.createProxy(a, this.m_xf),
                b = b.m_next;
            else {
              this.m_flags &= ~ra.e_activeFlag;
              a = this.m_world.m_contactManager.m_broadPhase;
              for (b = this.m_fixtureList; null != b;) b.destroyProxy(a), b = b.m_next;
              for (a = this.m_contactList; null != a;) b = a, a = a.next, this.m_world.m_contactManager.destroy(b.contact);
              this.m_contactList = null
            }
          }
        },
        isActive: function() {
          return (this.m_flags & ra.e_activeFlag) == ra.e_activeFlag
        },
        isSleepingAllowed: function() {
          return (this.m_flags & ra.e_allowSleepFlag) == ra.e_allowSleepFlag
        },
        getFixtureList: function() {
          return this.m_fixtureList
        },
        getJointList: function() {
          return this.m_jointList
        },
        getControllerList: function() {
          return this.m_controllerList
        },
        getContactList: function() {
          return this.m_contactList
        },
        getNext: function() {
          return this.m_next
        },
        getUserData: function() {
          return this.m_userData
        },
        setUserData: function(a) {
          this.m_userData = a
        },
        getWorld: function() {
          return this.m_world
        },
        setFriction: function(a) {
          for (var b = this.m_fixtureList; null != b;) b.m_friction = a, b = b.m_next
        },
        setBounciness: function(a) {
          for (var b = this.m_fixtureList; null != b;) b.m_restitution = a, b = b.m_next
        },
        setPaused: function(a) {
          this.m_flags = a ?
            this.m_flags | ra.e_pausedFlag : this.m_flags & ~ra.e_pausedFlag
        },
        isPaused: function() {
          return (this.m_flags & ra.e_pausedFlag) == ra.e_pausedFlag
        },
        setIgnoreGravity: function(a) {
          this.m_flags = a ? this.m_flags | ra.e_ignoreGravityFlag : this.m_flags & ~ra.e_ignoreGravityFlag
        },
        isIgnoringGravity: function() {
          return (this.m_flags & ra.e_ignoreGravityFlag) == ra.e_ignoreGravityFlag
        },
        setAlwaysActive: function(a) {
          this.m_flags = a ? this.m_flags | ra.e_alwaysActiveFlag : this.m_flags & ~ra.e_alwaysActiveFlag
        },
        isAlwaysActive: function() {
          return (this.m_flags &
            ra.e_alwaysActiveFlag) == ra.e_alwaysActiveFlag
        },
        synchronizeFixtures: function() {
          var a = ra.s_xf1;
          a.R.set(this.m_sweep.a0);
          var b = a.R,
            c = this.m_sweep.localCenter;
          a.position.x = this.m_sweep.c0.x - (b.col1.x * c.x + b.col2.x * c.y);
          a.position.y = this.m_sweep.c0.y - (b.col1.y * c.x + b.col2.y * c.y);
          b = this.m_world.m_contactManager.m_broadPhase;
          for (c = this.m_fixtureList; null != c;) c.synchronize(b, a, this.m_xf), c = c.m_next
        },
        synchronizeTransform: function() {
          this.m_xf.R.set(this.m_sweep.a);
          var a = this.m_xf.R,
            b = this.m_sweep.localCenter;
          this.m_xf.position.x = this.m_sweep.c.x - (a.col1.x * b.x + a.col2.x * b.y);
          this.m_xf.position.y = this.m_sweep.c.y - (a.col1.y * b.x + a.col2.y * b.y)
        },
        shouldCollide: function(a) {
          if (this.m_type != ra.b2_dynamicBody && a.m_type != ra.b2_dynamicBody) return !1;
          for (var b = this.m_jointList; null != b;) {
            if (b.other == a && 0 == b.joint.m_collideConnected) return !1;
            b = b.next
          }
          return !0
        },
        advance: function(a) {
          this.m_sweep.advance(a);
          a = this.m_sweep.c;
          var b = this.m_sweep.c0;
          a.x = b.x;
          a.y = b.y;
          this.m_sweep.a = this.m_sweep.a0;
          this.synchronizeTransform()
        },
        m_flags: null,
        m_type: null,
        m_islandIndex: null,
        m_xf: null,
        m_sweep: null,
        m_linearVelocity: null,
        m_angularVelocity: null,
        m_force: null,
        m_torque: null,
        m_world: null,
        m_prev: null,
        m_next: null,
        m_fixtureList: null,
        m_fixtureCount: null,
        m_controllerList: null,
        m_controllerCount: null,
        m_jointList: null,
        m_contactList: null,
        m_mass: null,
        m_invMass: null,
        m_I: null,
        m_invI: null,
        m_inertiaScale: null,
        m_linearDamping: null,
        m_angularDamping: null,
        m_sleepTime: null,
        m_userData: null,
        groupID: null,
        origin: null,
        size: null,
        __class__: ra
      };
      var ri = function() {
        this.position =
          new C;
        this.linearVelocity = new C;
        this.userData = null;
        this.angularDamping = this.linearDamping = this.angularVelocity = this.angle = 0;
        this.awake = this.allowSleep = !0;
        this.bullet = this.fixedRotation = !1;
        this.type = ra.b2_staticBody;
        this.active = !0;
        this.inertiaScale = 1;
        this.groupID = 3
      };
      k["box2D.dynamics.B2BodyDef"] = ri;
      ri.__name__ = "box2D.dynamics.B2BodyDef";
      ri.prototype = {
        type: null,
        position: null,
        angle: null,
        linearVelocity: null,
        angularVelocity: null,
        linearDamping: null,
        angularDamping: null,
        allowSleep: null,
        awake: null,
        fixedRotation: null,
        bullet: null,
        active: null,
        userData: null,
        inertiaScale: null,
        groupID: null,
        ignoreGravity: null,
        friction: null,
        bounciness: null,
        mass: null,
        aMass: null,
        __class__: ri
      };
      var wj = function() {};
      k["box2D.dynamics.B2ContactFilter"] = wj;
      wj.__name__ = "box2D.dynamics.B2ContactFilter";
      wj.prototype = {
        shouldCollide: function(a, b) {
          var c = a.m_body.groupID,
            d = b.m_body.groupID;
          a = a.groupID;
          b = b.groupID; - 1E3 != a && (c = a); - 1E3 != b && (d = b);
          return -1 == c || -1 == d ? !1 : -2 == c || -2 == d ? 1 == c || 1 == d ? !1 : !0 : Bb.collisionMap[c][d]
        },
        rayCollide: function(a, b) {
          return null ==
            a ? !0 : this.shouldCollide(K.__cast(a, Hf), b)
        },
        __class__: wj
      };
      var Hn = function() {
        this.normalImpulses = [];
        this.tangentImpulses = []
      };
      k["box2D.dynamics.B2ContactImpulse"] = Hn;
      Hn.__name__ = "box2D.dynamics.B2ContactImpulse";
      Hn.prototype = {
        normalImpulses: null,
        tangentImpulses: null,
        __class__: Hn
      };
      var Og = function() {};
      k["box2D.dynamics.B2ContactListener"] = Og;
      Og.__name__ = "box2D.dynamics.B2ContactListener";
      Og.prototype = {
        beginContact: function(a) {
          2147483647 < Og.KEY_LOCK && (Og.KEY_LOCK = -2147483648);
          a.key = Og.KEY_LOCK++;
          var b =
            a.getFixtureA().getUserData(),
            c = a.getFixtureB().getUserData(),
            d = b instanceof vd,
            e = c instanceof vd;
          !d || e || c instanceof Pg ? !e || d || b instanceof Pg ? (null != b.contacts && (b.contacts.set(a.key, a), b.contactCount++), null != c.contacts && (c.contacts.set(a.key, a), c.contactCount++)) : (K.__cast(c, vd).addActor(b), null != b.regionContacts && b.regionContacts.set(a.key, a)) : (K.__cast(b, vd).addActor(c), null != c.regionContacts && c.regionContacts.set(a.key, a))
        },
        endContact: function(a) {
          var b = a.getFixtureA().getUserData(),
            c = a.getFixtureB().getUserData(),
            d = b instanceof vd,
            e = c instanceof vd;
          if (d && !e) {
            d = !1;
            null != c.regionContacts && c.regionContacts.unset(a.key);
            for (a = c.regionContacts.iterator(); a.hasNext();) {
              e = a.next();
              if (e.getFixtureA().getUserData() instanceof vd && e.getFixtureA().getUserData() == b) {
                d = !0;
                break
              }
              if (e.getFixtureB().getUserData() instanceof vd && e.getFixtureB().getUserData() == b) {
                d = !0;
                break
              }
            }
            d && !c.recycled || K.__cast(b, vd).removeActor(c)
          } else if (e && !d) {
            d = !1;
            null != b.regionContacts && b.regionContacts.unset(a.key);
            for (a = b.regionContacts.iterator(); a.hasNext();) {
              e =
                a.next();
              if (e.getFixtureA().getUserData() instanceof vd && e.getFixtureA().getUserData() == c) {
                d = !0;
                break
              }
              if (e.getFixtureB().getUserData() instanceof vd && e.getFixtureB().getUserData() == c) {
                d = !0;
                break
              }
            }
            d && !b.recycled || K.__cast(c, vd).removeActor(b)
          } else {
            if (null != b.collisions) {
              d = b.collisions;
              e = a.key;
              var f = d.mH,
                g = f.mHash[73856093 * e & f.mMask];
              if (-1 == g) e = -2147483648;
              else if (f = f.mData, f[g] == e) e = f[g + 1];
              else {
                var h = -2147483648;
                for (g = f[g + 2]; - 1 != g;) {
                  if (f[g] == e) {
                    h = f[g + 1];
                    break
                  }
                  g = f[g + 2]
                }
                e = h
              }
              f = -2147483648 == e ? null : d.mVals[e];
              if (null != f)
                for (b.collisions.unset(a.key), b.collisionsCount--; 0 < f.points.length;) Sd.free(f.points.pop())
            }
            null != b.contacts && b.contacts.unset(a.key) && b.contactCount--;
            if (null != c.collisions) {
              d = c.collisions;
              e = a.key;
              f = d.mH;
              g = f.mHash[73856093 * e & f.mMask];
              if (-1 == g) e = -2147483648;
              else if (f = f.mData, f[g] == e) e = f[g + 1];
              else {
                h = -2147483648;
                for (g = f[g + 2]; - 1 != g;) {
                  if (f[g] == e) {
                    h = f[g + 1];
                    break
                  }
                  g = f[g + 2]
                }
                e = h
              }
              f = -2147483648 == e ? null : d.mVals[e];
              if (null != f)
                for (c.collisions.unset(a.key), c.collisionsCount--; 0 < f.points.length;) Sd.free(f.points.pop())
            }
            null !=
              c.contacts && c.contacts.unset(a.key) && c.contactCount--
          }
        },
        preSolve: function(a, b) {
          nc.preSolve(a, b)
        },
        postSolve: function(a, b) {},
        __class__: Og
      };
      var Bk = function() {
        this.m_world = null;
        this.m_contactCount = 0;
        this.m_contactFilter = wj.b2_defaultFilter;
        this.m_contactListener = Og.b2_defaultListener;
        this.m_contactFactory = new In(this.m_allocator);
        this.m_broadPhase = new yk
      };
      k["box2D.dynamics.B2ContactManager"] = Bk;
      Bk.__name__ = "box2D.dynamics.B2ContactManager";
      Bk.prototype = {
        addPair: function(a, b) {
          var c = a.getBody(),
            d = b.getBody();
          if (c != d) {
            for (var e = d.getContactList(); null != e;) {
              if (e.other == c) {
                var f = e.contact.getFixtureA(),
                  g = e.contact.getFixtureB();
                if (f == a && g == b || f == b && g == a) return
              }
              e = e.next
            }
            0 != d.shouldCollide(c) && 0 != this.m_contactFilter.shouldCollide(a, b) && (e = this.m_contactFactory.create(a, b), a = e.getFixtureA(), b = e.getFixtureB(), c = a.m_body, d = b.m_body, e.m_prev = null, e.m_next = this.m_world.m_contactList, null != this.m_world.m_contactList && (this.m_world.m_contactList.m_prev = e), this.m_world.m_contactList = e, e.m_nodeA.contact = e, e.m_nodeA.other =
              d, e.m_nodeA.prev = null, e.m_nodeA.next = c.m_contactList, null != c.m_contactList && (c.m_contactList.prev = e.m_nodeA), c.m_contactList = e.m_nodeA, e.m_nodeB.contact = e, e.m_nodeB.other = c, e.m_nodeB.prev = null, e.m_nodeB.next = d.m_contactList, null != d.m_contactList && (d.m_contactList.prev = e.m_nodeB), d.m_contactList = e.m_nodeB, ++this.m_world.m_contactCount)
          }
        },
        findNewContacts: function() {
          this.m_broadPhase.updatePairs(this)
        },
        destroy: function(a) {
          var b = a.getFixtureA(),
            c = a.getFixtureB();
          b = b.getBody();
          c = c.getBody();
          a.isTouching() &&
            this.m_contactListener.endContact(a);
          null != a.m_prev && (a.m_prev.m_next = a.m_next);
          null != a.m_next && (a.m_next.m_prev = a.m_prev);
          a == this.m_world.m_contactList && (this.m_world.m_contactList = a.m_next);
          null != a.m_nodeA.prev && (a.m_nodeA.prev.next = a.m_nodeA.next);
          null != a.m_nodeA.next && (a.m_nodeA.next.prev = a.m_nodeA.prev);
          a.m_nodeA == b.m_contactList && (b.m_contactList = a.m_nodeA.next);
          null != a.m_nodeB.prev && (a.m_nodeB.prev.next = a.m_nodeB.next);
          null != a.m_nodeB.next && (a.m_nodeB.next.prev = a.m_nodeB.prev);
          a.m_nodeB == c.m_contactList &&
            (c.m_contactList = a.m_nodeB.next);
          this.m_contactFactory.destroy(a);
          --this.m_contactCount
        },
        collide: function() {
          for (var a = this.m_world.m_contactList; null != a;) {
            var b = a.getFixtureA(),
              c = a.getFixtureB(),
              d = b.getBody(),
              e = c.getBody();
            if (0 == d.isAwake() && 0 == e.isAwake()) a = a.getNext();
            else {
              if (0 != (a.m_flags & cb.e_filterFlag)) {
                if (0 == e.shouldCollide(d)) {
                  b = a;
                  a = b.getNext();
                  this.destroy(b);
                  continue
                }
                if (0 == this.m_contactFilter.shouldCollide(b, c)) {
                  b = a;
                  a = b.getNext();
                  this.destroy(b);
                  continue
                }
                a.m_flags &= ~cb.e_filterFlag
              }
              0 ==
                this.m_broadPhase.testOverlap(b.m_proxy, c.m_proxy) ? (b = a, a = b.getNext(), this.destroy(b)) : (a.update(this.m_contactListener), a = a.getNext())
            }
          }
        },
        m_world: null,
        m_broadPhase: null,
        m_contactList: null,
        m_contactCount: null,
        m_contactFilter: null,
        m_contactListener: null,
        m_contactFactory: null,
        m_allocator: null,
        __class__: Bk
      };
      var Ie = function() {
        this.m_xformScale = this.m_fillAlpha = this.m_alpha = this.m_lineThickness = this.m_drawScale = 1;
        this.m_drawFlags = 0
      };
      k["box2D.dynamics.B2DebugDraw"] = Ie;
      Ie.__name__ = "box2D.dynamics.B2DebugDraw";
      Ie.prototype = {
        setFlags: function(a) {
          this.m_drawFlags = a
        },
        getFlags: function() {
          return this.m_drawFlags
        },
        appendFlags: function(a) {
          this.m_drawFlags |= a
        },
        clearFlags: function(a) {
          this.m_drawFlags &= ~a
        },
        setSprite: function(a) {
          this.m_sprite = a
        },
        getSprite: function() {
          return this.m_sprite
        },
        setDrawScale: function(a) {
          this.m_drawScale = a
        },
        getDrawScale: function() {
          return this.m_drawScale
        },
        setLineThickness: function(a) {
          this.m_lineThickness = a
        },
        getLineThickness: function() {
          return this.m_lineThickness
        },
        setAlpha: function(a) {
          this.m_alpha =
            a
        },
        getAlpha: function() {
          return this.m_alpha
        },
        setFillAlpha: function(a) {
          this.m_fillAlpha = a
        },
        getFillAlpha: function() {
          return this.m_fillAlpha
        },
        setXFormScale: function(a) {
          this.m_xformScale = a
        },
        getXFormScale: function() {
          return this.m_xformScale
        },
        drawPolygon: function(a, b, c) {
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
          this.m_sprite.get_graphics().moveTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale);
          for (c = 0; c < b;) {
            var d = c++;
            this.m_sprite.get_graphics().lineTo(a[d].x *
              this.m_drawScale, a[d].y * this.m_drawScale)
          }
          this.m_sprite.get_graphics().lineTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale)
        },
        drawSolidPolygon: function(a, b, c) {
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
          this.m_sprite.get_graphics().moveTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale);
          this.m_sprite.get_graphics().beginFill(c.get_color(), this.m_fillAlpha);
          for (c = 0; c < b;) {
            var d = c++;
            this.m_sprite.get_graphics().lineTo(a[d].x * this.m_drawScale, a[d].y * this.m_drawScale)
          }
          this.m_sprite.get_graphics().lineTo(a[0].x *
            this.m_drawScale, a[0].y * this.m_drawScale);
          this.m_sprite.get_graphics().endFill()
        },
        drawCircle: function(a, b, c) {
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
          this.m_sprite.get_graphics().drawCircle(a.x * this.m_drawScale, a.y * this.m_drawScale, b * this.m_drawScale)
        },
        drawSolidCircle: function(a, b, c, d) {
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness, d.get_color(), this.m_alpha);
          this.m_sprite.get_graphics().moveTo(0, 0);
          this.m_sprite.get_graphics().beginFill(d.get_color(),
            this.m_fillAlpha);
          this.m_sprite.get_graphics().drawCircle(a.x * this.m_drawScale, a.y * this.m_drawScale, b * this.m_drawScale);
          this.m_sprite.get_graphics().endFill();
          this.m_sprite.get_graphics().moveTo(a.x * this.m_drawScale, a.y * this.m_drawScale);
          this.m_sprite.get_graphics().lineTo((a.x + c.x * b) * this.m_drawScale, (a.y + c.y * b) * this.m_drawScale)
        },
        drawSegment: function(a, b, c) {
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
          this.m_sprite.get_graphics().moveTo(a.x * this.m_drawScale,
            a.y * this.m_drawScale);
          this.m_sprite.get_graphics().lineTo(b.x * this.m_drawScale, b.y * this.m_drawScale)
        },
        drawTransform: function(a) {
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness, 16711680, this.m_alpha);
          this.m_sprite.get_graphics().moveTo(a.position.x * this.m_drawScale, a.position.y * this.m_drawScale);
          this.m_sprite.get_graphics().lineTo((a.position.x + this.m_xformScale * a.R.col1.x) * this.m_drawScale, (a.position.y + this.m_xformScale * a.R.col1.y) * this.m_drawScale);
          this.m_sprite.get_graphics().lineStyle(this.m_lineThickness,
            65280, this.m_alpha);
          this.m_sprite.get_graphics().moveTo(a.position.x * this.m_drawScale, a.position.y * this.m_drawScale);
          this.m_sprite.get_graphics().lineTo((a.position.x + this.m_xformScale * a.R.col2.x) * this.m_drawScale, (a.position.y + this.m_xformScale * a.R.col2.y) * this.m_drawScale)
        },
        m_drawFlags: null,
        m_sprite: null,
        m_drawScale: null,
        m_lineThickness: null,
        m_alpha: null,
        m_fillAlpha: null,
        m_xformScale: null,
        __class__: Ie
      };
      var tq = function() {};
      k["box2D.dynamics.B2DestructionListener"] = tq;
      tq.__name__ = "box2D.dynamics.B2DestructionListener";
      tq.prototype = {
        sayGoodbyeJoint: function(a) {},
        sayGoodbyeFixture: function(a) {},
        __class__: tq
      };
      var xj = function() {
        this.categoryBits = 1;
        this.maskBits = 65535;
        this.groupIndex = 0
      };
      k["box2D.dynamics.B2FilterData"] = xj;
      xj.__name__ = "box2D.dynamics.B2FilterData";
      xj.prototype = {
        copy: function() {
          var a = new xj;
          a.categoryBits = this.categoryBits;
          a.maskBits = this.maskBits;
          a.groupIndex = this.groupIndex;
          return a
        },
        categoryBits: null,
        maskBits: null,
        groupIndex: null,
        __class__: xj
      };
      var Hf = function() {
        this.m_filter = new xj;
        this.m_aabb = new wc;
        this.m_shape = this.m_next = this.m_body = this.m_userData = null;
        this.m_restitution = this.m_friction = this.m_density = 0;
        this.groupID = 3
      };
      k["box2D.dynamics.B2Fixture"] = Hf;
      Hf.__name__ = "box2D.dynamics.B2Fixture";
      Hf.prototype = {
        getType: function() {
          return this.m_shape.getType()
        },
        getShape: function() {
          return this.m_shape
        },
        setSensor: function(a) {
          if (this.m_isSensor != a && (this.m_isSensor = a, null != this.m_body))
            for (a = this.m_body.getContactList(); null != a;) {
              var b = a.contact,
                c = b.getFixtureA(),
                d = b.getFixtureB();
              c != this && d != this ||
                b.setSensor(c.isSensor() || d.isSensor());
              a = a.next
            }
        },
        isSensor: function() {
          return this.m_isSensor
        },
        setFilterData: function(a) {
          this.m_filter = a.copy();
          if (null == this.m_body)
            for (a = this.m_body.getContactList(); null != a;) {
              var b = a.contact,
                c = b.getFixtureA(),
                d = b.getFixtureB();
              c != this && d != this || b.flagForFiltering();
              a = a.next
            }
        },
        getFilterData: function() {
          return this.m_filter.copy()
        },
        getBody: function() {
          return this.m_body
        },
        getNext: function() {
          return this.m_next
        },
        getUserData: function() {
          return this.m_userData
        },
        SetUserData: function(a) {
          this.m_userData =
            a
        },
        testPoint: function(a) {
          return this.m_shape.testPoint(this.m_body.getTransform(), a)
        },
        rayCast: function(a, b) {
          return this.m_shape.rayCast(a, b, this.m_body.getTransform())
        },
        getMassData: function(a) {
          null == a && (a = new vj);
          this.m_shape.computeMass(a, this.m_density);
          return a
        },
        setDensity: function(a) {
          this.m_density = a
        },
        getDensity: function() {
          return this.m_density
        },
        getFriction: function() {
          return this.m_friction
        },
        setFriction: function(a) {
          this.m_friction = a
        },
        getRestitution: function() {
          return this.m_restitution
        },
        setRestitution: function(a) {
          this.m_restitution =
            a
        },
        getAABB: function() {
          return this.m_aabb
        },
        create: function(a, b, c) {
          this.m_userData = c.userData;
          this.m_friction = c.friction;
          this.m_restitution = c.restitution;
          this.m_body = a;
          this.m_next = null;
          this.m_filter = c.filter.copy();
          this.m_isSensor = c.isSensor;
          this.m_shape = c.shape.copy();
          this.m_density = c.density;
          this.groupID = c.groupID
        },
        destroy: function() {
          this.m_shape = null
        },
        createProxy: function(a, b) {
          this.m_shape.computeAABB(this.m_aabb, b);
          this.m_proxy = a.createProxy(this.m_aabb, this)
        },
        destroyProxy: function(a) {
          null != this.m_proxy &&
            (a.destroyProxy(this.m_proxy), this.m_proxy = null)
        },
        synchronize: function(a, b, c) {
          null != this.m_proxy && (this.m_shape.computeAABB(Hf.tempAABB1, b), this.m_shape.computeAABB(Hf.tempAABB2, c), this.m_aabb.combine(Hf.tempAABB1, Hf.tempAABB2), b = P.subtractVVPooled(c.position, b.position), a.moveProxy(this.m_proxy, this.m_aabb, b))
        },
        m_massData: null,
        m_aabb: null,
        m_density: null,
        m_next: null,
        m_body: null,
        m_shape: null,
        m_friction: null,
        m_restitution: null,
        m_proxy: null,
        m_filter: null,
        m_isSensor: null,
        m_userData: null,
        groupID: null,
        __class__: Hf
      };
      var If = function() {
        this.filter = new xj;
        this.userData = this.shape = null;
        this.friction = .2;
        this.density = this.restitution = 0;
        this.filter.categoryBits = 1;
        this.filter.maskBits = 65535;
        this.filter.groupIndex = 0;
        this.isSensor = !1;
        this.groupID = 3
      };
      k["box2D.dynamics.B2FixtureDef"] = If;
      If.__name__ = "box2D.dynamics.B2FixtureDef";
      If.prototype = {
        shape: null,
        userData: null,
        friction: null,
        restitution: null,
        density: null,
        isSensor: null,
        filter: null,
        groupID: null,
        __class__: If
      };
      var Mh = function() {
        this.m_bodies = [];
        this.m_contacts = [];
        this.m_joints = []
      };
      k["box2D.dynamics.B2Island"] = Mh;
      Mh.__name__ = "box2D.dynamics.B2Island";
      Mh.prototype = {
        initialize: function(a, b, c, d, e, f) {
          this.m_bodyCapacity = a;
          this.m_contactCapacity = b;
          this.m_jointCapacity = c;
          this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0;
          this.m_allocator = d;
          this.m_listener = e;
          this.m_contactSolver = f;
          d = this.m_bodies.length;
          for (e = a; d < e;) a = d++, this.m_bodies[a] = null;
          d = this.m_contacts.length;
          for (e = b; d < e;) a = d++, this.m_contacts[a] = null;
          d = this.m_joints.length;
          for (e = c; d < e;) a = d++, this.m_joints[a] =
            null
        },
        clear: function() {
          this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0
        },
        solve: function(a, b, c) {
          for (var d, e, f = 0, g = this.m_bodyCount; f < g;) d = f++, d = this.m_bodies[d], d.getType() == ra.b2_dynamicBody && (d.isIgnoringGravity() ? (d.m_linearVelocity.x += a.dt * d.m_invMass * d.m_force.x, d.m_linearVelocity.y += a.dt * d.m_invMass * d.m_force.y) : (d.m_linearVelocity.x += a.dt * (b.x + d.m_invMass * d.m_force.x), d.m_linearVelocity.y += a.dt * (b.y + d.m_invMass * d.m_force.y)), d.m_angularVelocity += a.dt * d.m_invI * d.m_torque, d.m_linearVelocity.multiply(P.clamp(1 -
            a.dt * d.m_linearDamping, 0, 1)), d.m_angularVelocity *= P.clamp(1 - a.dt * d.m_angularDamping, 0, 1));
          this.m_contactSolver.initialize(a, this.m_contacts, this.m_contactCount, this.m_allocator);
          b = this.m_contactSolver;
          b.initVelocityConstraints(a);
          f = 0;
          for (g = this.m_jointCount; f < g;) d = f++, e = this.m_joints[d], e.initVelocityConstraints(a);
          f = 0;
          for (g = a.velocityIterations; f < g;) {
            f++;
            d = 0;
            for (var h = this.m_jointCount; d < h;) e = d++, e = this.m_joints[e], e.solveVelocityConstraints(a);
            b.solveVelocityConstraints()
          }
          f = 0;
          for (g = this.m_jointCount; f <
            g;) d = f++, e = this.m_joints[d], e.finalizeVelocityConstraints();
          b.finalizeVelocityConstraints();
          f = 0;
          for (g = this.m_bodyCount; f < g;)
            if (d = f++, d = this.m_bodies[d], d.getType() != ra.b2_staticBody) {
              h = a.dt * d.m_linearVelocity.x;
              var m = a.dt * d.m_linearVelocity.y;
              h * h + m * m > ea.b2_maxTranslationSquared && (d.m_linearVelocity.normalize(), d.m_linearVelocity.x = d.m_linearVelocity.x * ea.b2_maxTranslation * a.inv_dt, d.m_linearVelocity.y = d.m_linearVelocity.y * ea.b2_maxTranslation * a.inv_dt);
              h = a.dt * d.m_angularVelocity;
              h * h > ea.b2_maxRotationSquared &&
                (d.m_angularVelocity = 0 > d.m_angularVelocity ? -ea.b2_maxRotation * a.inv_dt : ea.b2_maxRotation * a.inv_dt);
              h = d.m_sweep.c0;
              m = d.m_sweep.c;
              h.x = m.x;
              h.y = m.y;
              d.m_sweep.a0 = d.m_sweep.a;
              d.m_sweep.c.x += a.dt * d.m_linearVelocity.x;
              d.m_sweep.c.y += a.dt * d.m_linearVelocity.y;
              d.m_sweep.a += a.dt * d.m_angularVelocity;
              d.synchronizeTransform()
            } f = 0;
          for (g = a.positionIterations; f < g;) {
            f++;
            m = b.solvePositionConstraints(ea.b2_contactBaumgarte);
            var l = !0;
            d = 0;
            for (h = this.m_jointCount; d < h;) e = d++, e = this.m_joints[e], e = e.solvePositionConstraints(ea.b2_contactBaumgarte),
              l = l && e;
            if (m && l) break
          }
          this.report(b.m_constraints);
          if (c) {
            c = Number.MAX_VALUE;
            b = ea.b2_linearSleepTolerance * ea.b2_linearSleepTolerance;
            h = ea.b2_angularSleepTolerance * ea.b2_angularSleepTolerance;
            f = 0;
            for (g = this.m_bodyCount; f < g;) d = f++, d = this.m_bodies[d], d.getType() != ra.b2_staticBody && (0 == (d.m_flags & ra.e_allowSleepFlag) && (c = d.m_sleepTime = 0), 0 == (d.m_flags & ra.e_allowSleepFlag) || d.m_angularVelocity * d.m_angularVelocity > h || P.dot(d.m_linearVelocity, d.m_linearVelocity) > b ? c = d.m_sleepTime = 0 : (d.m_sleepTime += a.dt, c =
              P.min(c, d.m_sleepTime)));
            if (c >= ea.b2_timeToSleep)
              for (f = 0, g = this.m_bodyCount; f < g;) d = f++, d = this.m_bodies[d], d.setAwake(!1)
          }
        },
        solveTOI: function(a) {
          this.m_contactSolver.initialize(a, this.m_contacts, this.m_contactCount, this.m_allocator);
          for (var b = this.m_contactSolver, c = 0, d = this.m_jointCount; c < d;) {
            var e = c++;
            this.m_joints[e].initVelocityConstraints(a)
          }
          c = 0;
          for (d = a.velocityIterations; c < d;) {
            c++;
            b.solveVelocityConstraints();
            e = 0;
            for (var f = this.m_jointCount; e < f;) {
              var g = e++;
              this.m_joints[g].solveVelocityConstraints(a)
            }
          }
          c =
            0;
          for (d = this.m_bodyCount; c < d;) e = c++, e = this.m_bodies[e], e.getType() != ra.b2_staticBody && (f = a.dt * e.m_linearVelocity.x, g = a.dt * e.m_linearVelocity.y, f * f + g * g > ea.b2_maxTranslationSquared && (e.m_linearVelocity.normalize(), e.m_linearVelocity.x = e.m_linearVelocity.x * ea.b2_maxTranslation * a.inv_dt, e.m_linearVelocity.y = e.m_linearVelocity.y * ea.b2_maxTranslation * a.inv_dt), f = a.dt * e.m_angularVelocity, f * f > ea.b2_maxRotationSquared && (e.m_angularVelocity = 0 > e.m_angularVelocity ? -ea.b2_maxRotation * a.inv_dt : ea.b2_maxRotation *
            a.inv_dt), f = e.m_sweep.c0, g = e.m_sweep.c, f.x = g.x, f.y = g.y, e.m_sweep.a0 = e.m_sweep.a, e.m_sweep.c.x += a.dt * e.m_linearVelocity.x, e.m_sweep.c.y += a.dt * e.m_linearVelocity.y, e.m_sweep.a += a.dt * e.m_angularVelocity, e.synchronizeTransform());
          c = 0;
          for (d = a.positionIterations; c < d;) {
            c++;
            a = b.solvePositionConstraints(.75);
            var h = !0;
            e = 0;
            for (f = this.m_jointCount; e < f;) g = e++, g = this.m_joints[g].solvePositionConstraints(ea.b2_contactBaumgarte), h = h && g;
            if (a && h) break
          }
          this.report(b.m_constraints)
        },
        report: function(a) {
          if (null != this.m_listener)
            for (var b =
                0, c = this.m_contactCount; b < c;) {
              var d = b++,
                e = this.m_contacts[d];
              d = a[d];
              for (var f = 0, g = d.pointCount; f < g;) {
                var h = f++;
                Mh.s_impulse.normalImpulses[h] = d.points[h].normalImpulse;
                Mh.s_impulse.tangentImpulses[h] = d.points[h].tangentImpulse
              }
              this.m_listener.postSolve(e, Mh.s_impulse)
            }
        },
        addBody: function(a) {
          a.m_islandIndex = this.m_bodyCount;
          this.m_bodies[this.m_bodyCount++] = a
        },
        addContact: function(a) {
          this.m_contacts[this.m_contactCount++] = a
        },
        addJoint: function(a) {
          this.m_joints[this.m_jointCount++] = a
        },
        m_allocator: null,
        m_listener: null,
        m_contactSolver: null,
        m_bodies: null,
        m_contacts: null,
        m_joints: null,
        m_bodyCount: null,
        m_jointCount: null,
        m_contactCount: null,
        m_bodyCapacity: null,
        m_contactCapacity: null,
        m_jointCapacity: null,
        __class__: Mh
      };
      var yj = function() {};
      k["box2D.dynamics.B2TimeStep"] = yj;
      yj.__name__ = "box2D.dynamics.B2TimeStep";
      yj.prototype = {
        set: function(a) {
          this.dt = a.dt;
          this.inv_dt = a.inv_dt;
          this.positionIterations = a.positionIterations;
          this.velocityIterations = a.velocityIterations;
          this.warmStarting = a.warmStarting
        },
        dt: null,
        inv_dt: null,
        dtRatio: null,
        velocityIterations: null,
        positionIterations: null,
        warmStarting: null,
        __class__: yj
      };
      var gc = function(a, b) {
        this.pointQueryCallback = new Ck;
        this.shapeQueryCallback = new Dk;
        this.aabbQueryCallback = new Ek;
        this.s_stack = [];
        this.m_contactManager = new Bk;
        this.m_contactSolver = new Je;
        this.m_island = new Mh;
        this.m_controllerList = this.m_jointList = this.m_contactList = this.m_bodyList = this.m_debugDraw = this.m_destructionListener = null;
        this.m_controllerCount = this.m_jointCount = this.m_contactCount = this.m_bodyCount =
          0;
        gc.m_warmStarting = !0;
        gc.m_continuousPhysics = !1;
        this.m_allowSleep = b;
        this.m_gravity = a;
        this.m_flags = this.m_inv_dt0 = 0;
        this.m_contactManager.m_world = this;
        a = new ri;
        this.m_groundBody = this.createBody(a)
      };
      k["box2D.dynamics.B2World"] = gc;
      gc.__name__ = "box2D.dynamics.B2World";
      gc.prototype = {
        setDestructionListener: function(a) {
          this.m_destructionListener = a
        },
        setContactFilter: function(a) {
          this.m_contactManager.m_contactFilter = a
        },
        setContactListener: function(a) {
          this.m_contactManager.m_contactListener = a
        },
        setDebugDraw: function(a) {
          this.m_debugDraw =
            a
        },
        setBroadPhase: function(a) {
          var b = this.m_contactManager.m_broadPhase;
          this.m_contactManager.m_broadPhase = a;
          for (var c = this.m_bodyList; null != c;) {
            for (var d = c.m_fixtureList; null != d;) d.m_proxy = a.createProxy(b.getFatAABB(d.m_proxy), d), d = d.m_next;
            c = c.m_next
          }
        },
        validate: function() {
          this.m_contactManager.m_broadPhase.validate()
        },
        getProxyCount: function() {
          return this.m_contactManager.m_broadPhase.getProxyCount()
        },
        createBody: function(a) {
          if (1 == this.isLocked()) return null;
          a = new ra(a, this);
          a.m_prev = null;
          a.m_next =
            this.m_bodyList;
          null != this.m_bodyList && (this.m_bodyList.m_prev = a);
          this.m_bodyList = a;
          ++this.m_bodyCount;
          return a
        },
        destroyBody: function(a) {
          if (1 != this.isLocked()) {
            for (var b = a.m_jointList; null != b;) {
              var c = b;
              b = b.next;
              null != this.m_destructionListener && this.m_destructionListener.sayGoodbyeJoint(c.joint);
              this.destroyJoint(c.joint)
            }
            for (b = a.m_controllerList; null != b;) c = b, b = b.nextController, c.controller.removeBody(a);
            for (b = a.m_contactList; null != b;) c = b, b = b.next, this.m_contactManager.destroy(c.contact);
            a.m_contactList =
              null;
            for (b = a.m_fixtureList; null != b;) c = b, b = b.m_next, null != this.m_destructionListener && this.m_destructionListener.sayGoodbyeFixture(c), c.destroyProxy(this.m_contactManager.m_broadPhase), c.destroy();
            a.m_fixtureList = null;
            a.m_fixtureCount = 0;
            null != a.m_prev && (a.m_prev.m_next = a.m_next);
            null != a.m_next && (a.m_next.m_prev = a.m_prev);
            a == this.m_bodyList && (this.m_bodyList = a.m_next);
            --this.m_bodyCount
          }
        },
        createJoint: function(a) {
          var b = Vb.create(a, null);
          b.m_prev = null;
          b.m_next = this.m_jointList;
          null != this.m_jointList &&
            (this.m_jointList.m_prev = b);
          this.m_jointList = b;
          ++this.m_jointCount;
          b.m_edgeA.joint = b;
          b.m_edgeA.other = b.m_bodyB;
          b.m_edgeA.prev = null;
          b.m_edgeA.next = b.m_bodyA.m_jointList;
          null != b.m_bodyA.m_jointList && (b.m_bodyA.m_jointList.prev = b.m_edgeA);
          b.m_bodyA.m_jointList = b.m_edgeA;
          b.m_edgeB.joint = b;
          b.m_edgeB.other = b.m_bodyA;
          b.m_edgeB.prev = null;
          b.m_edgeB.next = b.m_bodyB.m_jointList;
          null != b.m_bodyB.m_jointList && (b.m_bodyB.m_jointList.prev = b.m_edgeB);
          b.m_bodyB.m_jointList = b.m_edgeB;
          var c = a.bodyA,
            d = a.bodyB;
          if (0 == a.collideConnected)
            for (a =
              d.getContactList(); null != a;) a.other == c && a.contact.flagForFiltering(), a = a.next;
          return b
        },
        destroyJoint: function(a) {
          var b = a.m_collideConnected;
          null != a.m_prev && (a.m_prev.m_next = a.m_next);
          null != a.m_next && (a.m_next.m_prev = a.m_prev);
          a == this.m_jointList && (this.m_jointList = a.m_next);
          var c = a.m_bodyA,
            d = a.m_bodyB;
          c.setAwake(!0);
          d.setAwake(!0);
          null != a.m_edgeA.prev && (a.m_edgeA.prev.next = a.m_edgeA.next);
          null != a.m_edgeA.next && (a.m_edgeA.next.prev = a.m_edgeA.prev);
          a.m_edgeA == c.m_jointList && (c.m_jointList = a.m_edgeA.next);
          a.m_edgeA.prev = null;
          a.m_edgeA.next = null;
          null != a.m_edgeB.prev && (a.m_edgeB.prev.next = a.m_edgeB.next);
          null != a.m_edgeB.next && (a.m_edgeB.next.prev = a.m_edgeB.prev);
          a.m_edgeB == d.m_jointList && (d.m_jointList = a.m_edgeB.next);
          a.m_edgeB.prev = null;
          a.m_edgeB.next = null;
          Vb.destroy(a, null);
          --this.m_jointCount;
          if (0 == b)
            for (a = d.getContactList(); null != a;) a.other == c && a.contact.flagForFiltering(), a = a.next
        },
        addController: function(a) {
          a.m_next = this.m_controllerList;
          a.m_prev = null;
          this.m_controllerList = a;
          a.m_world = this;
          this.m_controllerCount++;
          return a
        },
        removeController: function(a) {
          null != a.m_prev && (a.m_prev.m_next = a.m_next);
          null != a.m_next && (a.m_next.m_prev = a.m_prev);
          this.m_controllerList == a && (this.m_controllerList = a.m_next);
          this.m_controllerCount--
        },
        createController: function(a) {
          if (a.m_world != this) throw F.thrown("Controller can only be a member of one world");
          a.m_next = this.m_controllerList;
          a.m_prev = null;
          null != this.m_controllerList && (this.m_controllerList.m_prev = a);
          this.m_controllerList = a;
          ++this.m_controllerCount;
          a.m_world = this;
          return a
        },
        destroyController: function(a) {
          a.clear();
          null != a.m_next && (a.m_next.m_prev = a.m_prev);
          null != a.m_prev && (a.m_prev.m_next = a.m_next);
          a == this.m_controllerList && (this.m_controllerList = a.m_next);
          --this.m_controllerCount
        },
        setWarmStarting: function(a) {
          gc.m_warmStarting = a
        },
        setContinuousPhysics: function(a) {
          gc.m_continuousPhysics = a
        },
        getBodyCount: function() {
          return this.m_bodyCount
        },
        getJointCount: function() {
          return this.m_jointCount
        },
        getContactCount: function() {
          return this.m_contactCount
        },
        setGravity: function(a) {
          this.m_gravity =
            a
        },
        getGravity: function() {
          return this.m_gravity
        },
        getGroundBody: function() {
          return this.m_groundBody
        },
        step: function(a, b, c) {
          C.freePool();
          0 != (this.m_flags & gc.e_newFixture) && (this.m_contactManager.findNewContacts(), this.m_flags &= ~gc.e_newFixture);
          this.m_flags |= gc.e_locked;
          var d = gc.s_timestep2;
          d.dt = a;
          d.velocityIterations = b;
          d.positionIterations = c;
          d.inv_dt = 0 < a ? 1 / a : 0;
          d.dtRatio = this.m_inv_dt0 * a;
          d.warmStarting = gc.m_warmStarting;
          this.m_contactManager.collide();
          0 < d.dt && this.solve(d);
          gc.m_continuousPhysics && 0 < d.dt &&
            this.solveTOI(d);
          0 < d.dt && (this.m_inv_dt0 = d.inv_dt);
          this.m_flags &= ~gc.e_locked
        },
        clearForces: function() {
          for (var a = this.m_bodyList; null != a;) {
            var b = a.m_force;
            b.x = 0;
            b.y = 0;
            a.m_torque = 0;
            a = a.m_next
          }
        },
        drawDebugData: function() {
          if (null != this.m_debugDraw) {
            this.m_debugDraw.m_sprite.get_graphics().clear();
            var a = this.m_debugDraw.getFlags(),
              b, c;
            new C;
            new C;
            new C;
            new wc;
            new wc;
            new C;
            new C;
            new C;
            new C;
            var d = new Ak(0, 0, 0);
            if (0 != (a & Ie.e_shapeBit))
              for (b = this.m_bodyList; null != b;) {
                var e = b.m_xf;
                for (c = b.getFixtureList(); null !=
                  c;) {
                  var f = c.getShape();
                  0 == b.isActive() ? d.set(.5, .5, .3) : b.getType() == ra.b2_staticBody ? d.set(.5, .9, .5) : b.getType() == ra.b2_kinematicBody ? d.set(.5, .5, .9) : 0 == b.isAwake() ? d.set(.6, .6, .6) : d.set(.9, .7, .7);
                  this.drawShape(f, e, d);
                  c = c.m_next
                }
                b = b.m_next
              }
            if (0 != (a & Ie.e_jointBit))
              for (b = this.m_jointList; null != b;) this.drawJoint(b), b = b.m_next;
            if (0 != (a & Ie.e_controllerBit))
              for (b = this.m_controllerList; null != b;) b.draw(this.m_debugDraw), b = b.m_next;
            if (0 != (a & Ie.e_pairBit))
              for (d.set(.3, .9, .9), b = this.m_contactManager.m_contactList; null !=
                b;) f = b.getFixtureA(), c = b.getFixtureB(), f = f.getAABB().getCenter(), c = c.getAABB().getCenter(), this.m_debugDraw.drawSegment(f, c, d), b = b.getNext();
            if (0 != (a & Ie.e_aabbBit))
              for (f = this.m_contactManager.m_broadPhase, e = [new C, new C, new C, new C], b = this.m_bodyList; null != b;) {
                if (0 != b.isActive())
                  for (c = b.getFixtureList(); null != c;) {
                    var g = f.getFatAABB(c.m_proxy),
                      h = e[0],
                      m = g.lowerBound.x,
                      l = g.lowerBound.y;
                    null == l && (l = 0);
                    null == m && (m = 0);
                    h.x = m;
                    h.y = l;
                    h = e[1];
                    m = g.upperBound.x;
                    l = g.lowerBound.y;
                    null == l && (l = 0);
                    null == m && (m = 0);
                    h.x =
                      m;
                    h.y = l;
                    h = e[2];
                    m = g.upperBound.x;
                    l = g.upperBound.y;
                    null == l && (l = 0);
                    null == m && (m = 0);
                    h.x = m;
                    h.y = l;
                    h = e[3];
                    m = g.lowerBound.x;
                    g = g.upperBound.y;
                    null == g && (g = 0);
                    null == m && (m = 0);
                    h.x = m;
                    h.y = g;
                    this.m_debugDraw.drawPolygon(e, 4, d);
                    c = c.getNext()
                  }
                b = b.getNext()
              }
            if (0 != (a & Ie.e_centerOfMassBit))
              for (b = this.m_bodyList; null != b;) e = gc.s_xf, e.R = b.m_xf.R, e.position = b.getWorldCenter(), this.m_debugDraw.drawTransform(e), b = b.m_next
          }
        },
        queryAABB: function(a, b) {
          this.aabbQueryCallback.broadPhase = this.m_contactManager.m_broadPhase;
          this.aabbQueryCallback.callbackMethod =
            a;
          this.m_contactManager.m_broadPhase.query(this.aabbQueryCallback, b)
        },
        queryShape: function(a, b, c) {
          this.shapeQueryCallback.broadPhase = this.m_contactManager.m_broadPhase;
          this.shapeQueryCallback.callbackMethod = a;
          null == c && (c = new af, c.setIdentity());
          this.shapeQueryCallback.transform = c;
          a = new wc;
          b.computeAABB(a, c);
          this.shapeQueryCallback.shape = b;
          this.m_contactManager.m_broadPhase.query(this.shapeQueryCallback, a)
        },
        queryPoint: function(a, b) {
          this.pointQueryCallback.broadPhase = this.m_contactManager.m_broadPhase;
          this.pointQueryCallback.callbackMethod = a;
          this.pointQueryCallback.p = b;
          a = new wc;
          var c = a.lowerBound,
            d = b.x - ea.b2_linearSlop,
            e = b.y - ea.b2_linearSlop;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          c = a.upperBound;
          d = b.x + ea.b2_linearSlop;
          e = b.y + ea.b2_linearSlop;
          null == e && (e = 0);
          null == d && (d = 0);
          c.x = d;
          c.y = e;
          this.m_contactManager.m_broadPhase.query(this.pointQueryCallback, a)
        },
        rayCast: function(a, b, c) {
          var d = this.m_contactManager.m_broadPhase,
            e = new Fn,
            f = new wk(b, c);
          d.rayCast(function(f, h) {
            h = d.getUserData(h);
            h = K.__cast(h,
              Hf);
            if (h.rayCast(e, f)) {
              f = e.fraction;
              var g = new C((1 - f) * b.x + f * c.x, (1 - f) * b.y + f * c.y);
              return a(h, g, e.normal, f)
            }
            return f.maxFraction
          }, f)
        },
        rayCastOne: function(a, b) {
          var c;
          this.rayCast(function(a, b, f, g) {
            c = a;
            return g
          }, a, b);
          return c
        },
        rayCastAll: function(a, b) {
          var c = [];
          this.rayCast(function(a, b, f, g) {
            c[c.length] = a;
            return 1
          }, a, b);
          return c
        },
        getBodyList: function() {
          return this.m_bodyList
        },
        getJointList: function() {
          return this.m_jointList
        },
        getContactList: function() {
          return this.m_contactList
        },
        isLocked: function() {
          return 0 <
            (this.m_flags & gc.e_locked)
        },
        s_stack: null,
        solve: function(a) {
          for (var b = this.m_controllerList; null != b;) b.step(a), b = b.m_next;
          b = this.m_island;
          b.initialize(this.m_bodyCount, this.m_contactCount, this.m_jointCount, null, this.m_contactManager.m_contactListener, this.m_contactSolver);
          for (var c = this.m_bodyList; null != c;) c.m_flags &= ~ra.e_islandFlag, c = c.m_next;
          for (var d = this.m_contactList; null != d;) d.m_flags &= ~cb.e_islandFlag, d = d.m_next;
          for (d = this.m_jointList; null != d;) d.m_islandFlag = !1, d = d.m_next;
          d = this.s_stack;
          for (var e =
              this.m_bodyList; null != e;) {
            if (0 == (e.m_flags & ra.e_islandFlag) && (!e.isActive() && !e.isAlwaysActive() && e.m_xf.position.x + e.origin.x + e.size.x >= this.m_aabb.lowerBound.x && e.m_xf.position.y + e.origin.y + e.size.y >= this.m_aabb.lowerBound.y && e.m_xf.position.x + e.origin.x <= this.m_aabb.upperBound.x && e.m_xf.position.y + e.origin.y <= this.m_aabb.upperBound.y && (e.setActive(!0), e.setAwake(!0)), 0 != e.isAwake() && 0 != e.isActive() && !e.isPaused() && e.getType() != ra.b2_staticBody))
              if (e.isActive() && !e.isAlwaysActive() && (e.m_xf.position.x +
                  e.origin.x + e.size.x < this.m_aabb.lowerBound.x || e.m_xf.position.y + e.origin.y + e.size.y < this.m_aabb.lowerBound.y || e.m_xf.position.x + e.origin.x > this.m_aabb.upperBound.x || e.m_xf.position.y + e.origin.y > this.m_aabb.upperBound.y)) e.setAwake(!1), e.setActive(!1);
              else {
                b.clear();
                var f = 0;
                d[f++] = e;
                for (e.m_flags |= ra.e_islandFlag; 0 < f;)
                  if (c = d[--f], b.addBody(c), 0 == c.isAwake() && c.setAwake(!0), c.getType() != ra.b2_staticBody) {
                    for (var g, h = c.m_contactList; null != h;) 0 == (h.contact.m_flags & cb.e_islandFlag) && 1 != h.contact.isSensor() &&
                      0 != h.contact.isEnabled() && 0 != h.contact.isTouching() && (b.addContact(h.contact), h.contact.m_flags |= cb.e_islandFlag, g = h.other, 0 == (g.m_flags & ra.e_islandFlag) && (d[f++] = g, g.m_flags |= ra.e_islandFlag)), h = h.next;
                    for (c = c.m_jointList; null != c;) 1 != c.joint.m_islandFlag && (g = c.other, 0 != g.isActive() && (b.addJoint(c.joint), c.joint.m_islandFlag = !0, 0 == (g.m_flags & ra.e_islandFlag) && (d[f++] = g, g.m_flags |= ra.e_islandFlag))), c = c.next
                  } b.solve(a, this.m_gravity, this.m_allowSleep);
                f = 0;
                for (g = b.m_bodyCount; f < g;) c = f++, c = b.m_bodies[c],
                  c.getType() == ra.b2_staticBody && (c.m_flags &= ~ra.e_islandFlag)
              } e = e.m_next
          }
          f = 0;
          for (g = d.length; f < g;) {
            c = f++;
            if (null == d[c]) break;
            d[c] = null
          }
          for (c = this.m_bodyList; null != c;) 0 != c.isAwake() && 0 != c.isActive() && c.getType() != ra.b2_staticBody && c.synchronizeFixtures(), c = c.m_next;
          this.m_contactManager.findNewContacts()
        },
        solveTOI: function(a) {
          var b, c = this.m_island;
          c.initialize(this.m_bodyCount, ea.b2_maxTOIContactsPerIsland, ea.b2_maxTOIJointsPerIsland, null, this.m_contactManager.m_contactListener, this.m_contactSolver);
          for (var d = gc.s_queue, e = this.m_bodyList; null != e;) e.m_flags &= ~ra.e_islandFlag, e.m_sweep.t0 = 0, e = e.m_next;
          for (b = this.m_contactList; null != b;) b.m_flags &= ~(cb.e_toiFlag | cb.e_islandFlag), b = b.m_next;
          for (e = this.m_jointList; null != e;) e.m_islandFlag = !1, e = e.m_next;
          for (;;) {
            e = null;
            var f = 1;
            for (b = this.m_contactList; null != b;) {
              if (1 != b.isSensor() && 0 != b.isEnabled() && 0 != b.isContinuous()) {
                if (0 != (b.m_flags & cb.e_toiFlag)) var g = b.m_toi;
                else {
                  g = b.m_fixtureA;
                  var h = b.m_fixtureB;
                  g = g.m_body;
                  h = h.m_body;
                  if (!(g.getType() == ra.b2_dynamicBody &&
                      0 != g.isAwake() || h.getType() == ra.b2_dynamicBody && 0 != h.isAwake())) {
                    b = b.m_next;
                    continue
                  }
                  var m = g.m_sweep.t0;
                  g.m_sweep.t0 < h.m_sweep.t0 ? (m = h.m_sweep.t0, g.m_sweep.advance(m)) : h.m_sweep.t0 < g.m_sweep.t0 && (m = g.m_sweep.t0, h.m_sweep.advance(m));
                  g = b.computeTOI(g.m_sweep, h.m_sweep);
                  ea.b2Assert(0 <= g && 1 >= g);
                  0 < g && 1 > g && (g = (1 - g) * m + g, 1 < g && (g = 1));
                  b.m_toi = g;
                  b.m_flags |= cb.e_toiFlag
                }
                Number.MIN_VALUE < g && g < f && (e = b, f = g)
              }
              b = b.m_next
            }
            if (null == e || 1 - 100 * Number.MIN_VALUE < f) break;
            g = e.m_fixtureA;
            h = e.m_fixtureB;
            g = g.m_body;
            h = h.m_body;
            gc.s_backupA.set(g.m_sweep);
            gc.s_backupB.set(h.m_sweep);
            g.advance(f);
            h.advance(f);
            e.update(this.m_contactManager.m_contactListener);
            e.m_flags &= ~cb.e_toiFlag;
            if (1 == e.isSensor() || 0 == e.isEnabled()) g.m_sweep.set(gc.s_backupA), h.m_sweep.set(gc.s_backupB), g.synchronizeTransform(), h.synchronizeTransform();
            else if (0 != e.isTouching()) {
              b = g;
              b.getType() != ra.b2_dynamicBody && (b = h);
              c.clear();
              h = g = 0;
              d[g + h++] = b;
              for (b.m_flags |= ra.e_islandFlag; 0 < h;)
                if (e = d[g++], --h, c.addBody(e), 0 == e.isAwake() && e.setAwake(!0), e.getType() ==
                  ra.b2_dynamicBody) {
                  for (b = e.m_contactList; null != b && c.m_contactCount != c.m_contactCapacity;) 0 == (b.contact.m_flags & cb.e_islandFlag) && 1 != b.contact.isSensor() && 0 != b.contact.isEnabled() && 0 != b.contact.isTouching() && (c.addContact(b.contact), b.contact.m_flags |= cb.e_islandFlag, m = b.other, 0 == (m.m_flags & ra.e_islandFlag) && (m.getType() != ra.b2_staticBody && (m.advance(f), m.setAwake(!0)), d[g + h] = m, ++h, m.m_flags |= ra.e_islandFlag)), b = b.next;
                  for (b = e.m_jointList; null != b;) c.m_jointCount != c.m_jointCapacity && 1 != b.joint.m_islandFlag &&
                    (m = b.other, 0 != m.isActive() && (c.addJoint(b.joint), b.joint.m_islandFlag = !0, 0 == (m.m_flags & ra.e_islandFlag) && (m.getType() != ra.b2_staticBody && (m.advance(f), m.setAwake(!0)), d[g + h] = m, ++h, m.m_flags |= ra.e_islandFlag))), b = b.next
                } b = gc.s_timestep;
              b.warmStarting = !1;
              b.dt = (1 - f) * a.dt;
              b.inv_dt = 1 / b.dt;
              b.dtRatio = 0;
              b.velocityIterations = a.velocityIterations;
              b.positionIterations = a.positionIterations;
              c.solveTOI(b);
              f = 0;
              for (g = c.m_bodyCount; f < g;)
                if (b = f++, e = c.m_bodies[b], e.m_flags &= ~ra.e_islandFlag, 0 != e.isAwake() && e.getType() ==
                  ra.b2_dynamicBody)
                  for (e.synchronizeFixtures(), b = e.m_contactList; null != b;) b.contact.m_flags &= ~cb.e_toiFlag, b = b.next;
              f = 0;
              for (e = c.m_contactCount; f < e;) b = f++, b = c.m_contacts[b], b.m_flags &= ~(cb.e_toiFlag | cb.e_islandFlag);
              f = 0;
              for (b = c.m_jointCount; f < b;) e = f++, e = c.m_joints[e], e.m_islandFlag = !1;
              this.m_contactManager.findNewContacts()
            }
          }
        },
        drawJoint: function(a) {
          var b = a.getBodyA(),
            c = a.getBodyB(),
            d = b.m_xf.position,
            e = c.m_xf.position,
            f = a.getAnchorA(),
            g = a.getAnchorB(),
            h = gc.s_jointColor;
          switch (a.m_type) {
            case 3:
              this.m_debugDraw.drawSegment(f,
                g, h);
              break;
            case 4:
              b = K.__cast(a, vg);
              a = b.getGroundAnchorA();
              b = b.getGroundAnchorB();
              this.m_debugDraw.drawSegment(a, f, h);
              this.m_debugDraw.drawSegment(b, g, h);
              this.m_debugDraw.drawSegment(a, b, h);
              break;
            case 5:
              this.m_debugDraw.drawSegment(f, g, h);
              break;
            default:
              b != this.m_groundBody && this.m_debugDraw.drawSegment(d, f, h), this.m_debugDraw.drawSegment(f, g, h), c != this.m_groundBody && this.m_debugDraw.drawSegment(e, g, h)
          }
        },
        drawShape: function(a, b, c) {
          switch (a.m_type) {
            case 0:
              a = K.__cast(a, Qc);
              var d = P.mulX(b, a.m_p);
              this.m_debugDraw.drawSolidCircle(d,
                a.m_radius, b.R.col1, c);
              break;
            case 1:
              d = K.__cast(a, Lb);
              a = d.getVertexCount();
              for (var e = d.getVertices(), f = [], g = 0; g < a;) d = g++, f[d] = P.mulX(b, e[d]);
              this.m_debugDraw.drawSolidPolygon(f, a, c);
              break;
            case 2:
              a = K.__cast(a, ug), this.m_debugDraw.drawSegment(P.mulX(b, a.getVertex1()), P.mulX(b, a.getVertex2()), c)
          }
        },
        m_aabb: null,
        setScreenBounds: function(a) {
          this.m_aabb = a
        },
        getScreenBounds: function() {
          return this.m_aabb
        },
        m_flags: null,
        m_contactManager: null,
        m_contactSolver: null,
        m_island: null,
        m_bodyList: null,
        m_jointList: null,
        m_contactList: null,
        m_bodyCount: null,
        m_contactCount: null,
        m_jointCount: null,
        m_controllerList: null,
        m_controllerCount: null,
        m_gravity: null,
        m_allowSleep: null,
        m_groundBody: null,
        m_destructionListener: null,
        m_debugDraw: null,
        m_inv_dt0: null,
        aabbQueryCallback: null,
        shapeQueryCallback: null,
        pointQueryCallback: null,
        __class__: gc
      };
      var Ek = function() {};
      k["box2D.dynamics.AABBQueryCallback"] = Ek;
      Ek.__name__ = "box2D.dynamics.AABBQueryCallback";
      Ek.__interfaces__ = [Kh];
      Ek.prototype = {
        broadPhase: null,
        callbackMethod: null,
        queryCallback: function(a) {
          return this.callbackMethod(this.broadPhase.getUserData(a))
        },
        __class__: Ek
      };
      var Dk = function() {};
      k["box2D.dynamics.ShapeQueryCallback"] = Dk;
      Dk.__name__ = "box2D.dynamics.ShapeQueryCallback";
      Dk.__interfaces__ = [Kh];
      Dk.prototype = {
        broadPhase: null,
        shape: null,
        transform: null,
        callbackMethod: null,
        queryCallback: function(a) {
          a = this.broadPhase.getUserData(a);
          return Xb.testOverlap(this.shape, this.transform, a.getShape(), a.getBody().getTransform()) ? this.callbackMethod(a) : !0
        },
        __class__: Dk
      };
      var Ck = function() {};
      k["box2D.dynamics.PointQueryCallback"] = Ck;
      Ck.__name__ = "box2D.dynamics.PointQueryCallback";
      Ck.__interfaces__ = [Kh];
      Ck.prototype = {
        broadPhase: null,
        callbackMethod: null,
        p: null,
        queryCallback: function(a) {
          a = this.broadPhase.getUserData(a);
          return a.testPoint(this.p) ? this.callbackMethod(a) : !0
        },
        __class__: Ck
      };
      var cb = function() {
        this.m_nodeA = new Fk;
        this.m_nodeB = new Fk;
        this.m_manifold = new mh;
        this.m_oldManifold = new mh
      };
      k["box2D.dynamics.contacts.B2Contact"] = cb;
      cb.__name__ = "box2D.dynamics.contacts.B2Contact";
      cb.prototype = {
        getManifold: function() {
          return this.m_manifold
        },
        getWorldManifold: function(a) {
          var b =
            this.m_fixtureA.getBody(),
            c = this.m_fixtureB.getBody(),
            d = this.m_fixtureA.getShape(),
            e = this.m_fixtureB.getShape();
          a.initialize(this.m_manifold, b.getTransform(), d.m_radius, c.getTransform(), e.m_radius)
        },
        isTouching: function() {
          return (this.m_flags & cb.e_touchingFlag) == cb.e_touchingFlag
        },
        isContinuous: function() {
          return (this.m_flags & cb.e_continuousFlag) == cb.e_continuousFlag
        },
        setSensor: function(a) {
          this.m_flags = a ? this.m_flags | cb.e_sensorFlag : this.m_flags & ~cb.e_sensorFlag
        },
        isSensor: function() {
          return (this.m_flags &
            cb.e_sensorFlag) == cb.e_sensorFlag
        },
        setEnabled: function(a) {
          this.m_flags = a ? this.m_flags | cb.e_enabledFlag : this.m_flags & ~cb.e_enabledFlag
        },
        isEnabled: function() {
          return (this.m_flags & cb.e_enabledFlag) == cb.e_enabledFlag
        },
        getNext: function() {
          return this.m_next
        },
        getFixtureA: function() {
          return this.m_fixtureA
        },
        getFixtureB: function() {
          return this.m_fixtureB
        },
        flagForFiltering: function() {
          this.m_flags |= cb.e_filterFlag
        },
        reset: function(a, b) {
          this.m_flags = cb.e_enabledFlag;
          if (null == a || null == b) this.m_fixtureB = this.m_fixtureA =
            null;
          else {
            if (a.isSensor() || b.isSensor()) this.m_flags |= cb.e_sensorFlag;
            var c = a.getBody(),
              d = b.getBody();
            if (c.getType() != ra.b2_dynamicBody || c.isBullet() || d.getType() != ra.b2_dynamicBody || d.isBullet()) this.m_flags |= cb.e_continuousFlag;
            this.m_fixtureA = a;
            this.m_fixtureB = b;
            this.m_manifold.m_pointCount = 0;
            this.m_next = this.m_prev = null;
            this.m_nodeA.contact = null;
            this.m_nodeA.prev = null;
            this.m_nodeA.next = null;
            this.m_nodeA.other = null;
            this.m_nodeB.contact = null;
            this.m_nodeB.prev = null;
            this.m_nodeB.next = null;
            this.m_nodeB.other =
              null
          }
        },
        update: function(a) {
          var b = this.m_oldManifold;
          this.m_oldManifold = this.m_manifold;
          this.m_manifold = b;
          this.m_flags |= cb.e_enabledFlag;
          var c = !1;
          b = (this.m_flags & cb.e_touchingFlag) == cb.e_touchingFlag;
          var d = this.m_fixtureA.m_body,
            e = this.m_fixtureB.m_body,
            f = this.m_fixtureA.m_aabb.testOverlap(this.m_fixtureB.m_aabb);
          if (0 != (this.m_flags & cb.e_sensorFlag)) f && (c = this.m_fixtureA.getShape(), f = this.m_fixtureB.getShape(), d = d.getTransform(), e = e.getTransform(), c = Xb.testOverlap(c, d, f, e)), this.m_manifold.m_pointCount =
            0;
          else {
            d.getType() != ra.b2_dynamicBody || d.isBullet() || e.getType() != ra.b2_dynamicBody || e.isBullet() ? this.m_flags |= cb.e_continuousFlag : this.m_flags &= ~cb.e_continuousFlag;
            if (f) {
              this.evaluate();
              c = 0 < this.m_manifold.m_pointCount;
              f = 0;
              for (var g = this.m_manifold.m_pointCount; f < g;) {
                var h = f++;
                h = this.m_manifold.m_points[h];
                h.m_normalImpulse = 0;
                h.m_tangentImpulse = 0;
                for (var m = h.m_id, l = 0, y = this.m_oldManifold.m_pointCount; l < y;) {
                  var n = l++;
                  n = this.m_oldManifold.m_points[n];
                  if (n.m_id.get_key() == m.get_key()) {
                    h.m_normalImpulse =
                      n.m_normalImpulse;
                    h.m_tangentImpulse = n.m_tangentImpulse;
                    break
                  }
                }
              }
            } else this.m_manifold.m_pointCount = 0;
            c != b && (d.setAwake(!0), e.setAwake(!0))
          }
          this.m_flags = c ? this.m_flags | cb.e_touchingFlag : this.m_flags & ~cb.e_touchingFlag;
          0 == b && 1 == c && a.beginContact(this);
          1 == b && 0 == c && a.endContact(this);
          0 == (this.m_flags & cb.e_sensorFlag) && a.preSolve(this, this.m_oldManifold)
        },
        evaluate: function() {},
        computeTOI: function(a, b) {
          cb.s_input.proxyA.set(this.m_fixtureA.getShape());
          cb.s_input.proxyB.set(this.m_fixtureB.getShape());
          cb.s_input.sweepA =
            a;
          cb.s_input.sweepB = b;
          cb.s_input.tolerance = ea.b2_linearSlop;
          return Mb.timeOfImpact(cb.s_input)
        },
        m_flags: null,
        m_prev: null,
        m_next: null,
        m_nodeA: null,
        m_nodeB: null,
        m_fixtureA: null,
        m_fixtureB: null,
        m_manifold: null,
        m_oldManifold: null,
        m_toi: null,
        key: null,
        __class__: cb
      };
      var oh = function() {
        cb.call(this)
      };
      k["box2D.dynamics.contacts.B2CircleContact"] = oh;
      oh.__name__ = "box2D.dynamics.contacts.B2CircleContact";
      oh.create = function(a) {
        return new oh
      };
      oh.destroy = function(a, b) {};
      oh.__super__ = cb;
      oh.prototype = t(cb.prototype, {
        reset: function(a, b) {
          cb.prototype.reset.call(this, a, b)
        },
        evaluate: function() {
          var a = this.m_fixtureA.getBody(),
            b = this.m_fixtureB.getBody();
          z.collideCircles(this.m_manifold, K.__cast(this.m_fixtureA.getShape(), Qc), a.m_xf, K.__cast(this.m_fixtureB.getShape(), Qc), b.m_xf)
        },
        __class__: oh
      });
      var Kn = function() {
        this.localPlaneNormal = new C;
        this.localPoint = new C;
        this.normal = new C;
        this.normalMass = new Fc;
        this.K = new Fc;
        this.points = [];
        for (var a = 0, b = ea.b2_maxManifoldPoints; a < b;) {
          var c = a++;
          this.points[c] = new Jn
        }
      };
      k["box2D.dynamics.contacts.B2ContactConstraint"] =
        Kn;
      Kn.__name__ = "box2D.dynamics.contacts.B2ContactConstraint";
      Kn.prototype = {
        points: null,
        localPlaneNormal: null,
        localPoint: null,
        normal: null,
        normalMass: null,
        K: null,
        bodyA: null,
        bodyB: null,
        type: null,
        radius: null,
        friction: null,
        restitution: null,
        pointCount: null,
        manifold: null,
        __class__: Kn
      };
      var Jn = function() {
        this.localPoint = new C;
        this.rA = new C;
        this.rB = new C
      };
      k["box2D.dynamics.contacts.B2ContactConstraintPoint"] = Jn;
      Jn.__name__ = "box2D.dynamics.contacts.B2ContactConstraintPoint";
      Jn.prototype = {
        localPoint: null,
        rA: null,
        rB: null,
        normalImpulse: null,
        tangentImpulse: null,
        normalMass: null,
        tangentMass: null,
        equalizedMass: null,
        velocityBias: null,
        __class__: Jn
      };
      var Fk = function() {};
      k["box2D.dynamics.contacts.B2ContactEdge"] = Fk;
      Fk.__name__ = "box2D.dynamics.contacts.B2ContactEdge";
      Fk.prototype = {
        other: null,
        contact: null,
        prev: null,
        next: null,
        __class__: Fk
      };
      var In = function(a) {
        this.m_allocator = a;
        this.initializeRegisters()
      };
      k["box2D.dynamics.contacts.B2ContactFactory"] = In;
      In.__name__ = "box2D.dynamics.contacts.B2ContactFactory";
      In.prototype = {
        addType: function(a, b, c, d) {
          this.m_registers[c][d].createFcn = a;
          this.m_registers[c][d].destroyFcn = b;
          this.m_registers[c][d].primary = c
        },
        initializeRegisters: function() {
          this.m_registers = [];
          this.m_registers[0] = [];
          this.m_registers[0][0] = null;
          this.m_registers[0][1] = null;
          this.m_registers[0][2] = null;
          this.m_registers[1] = [];
          this.m_registers[1][0] = null;
          this.m_registers[1][1] = null;
          this.m_registers[1][2] = null;
          this.m_registers[2] = [];
          this.m_registers[2][0] = null;
          this.m_registers[2][1] = null;
          this.m_registers[2][2] = null;
          null == this.m_registers[0][0] && (this.m_registers[0][0] = new ag);
          null == this.m_registers[0][1] && (this.m_registers[0][1] = new ag, this.m_registers[1][0] = this.m_registers[0][1]);
          null == this.m_registers[0][2] && (this.m_registers[0][2] = new ag, this.m_registers[2][0] = this.m_registers[0][2]);
          null == this.m_registers[1][0] && (this.m_registers[1][0] = new ag, this.m_registers[0][1] = this.m_registers[1][0]);
          null == this.m_registers[1][1] && (this.m_registers[1][1] = new ag);
          null == this.m_registers[1][2] && (this.m_registers[1][2] =
            new ag, this.m_registers[2][1] = this.m_registers[1][2]);
          null == this.m_registers[2][0] && (this.m_registers[2][0] = new ag, this.m_registers[0][2] = this.m_registers[2][0]);
          null == this.m_registers[2][1] && (this.m_registers[2][1] = new ag, this.m_registers[1][2] = this.m_registers[2][1]);
          null == this.m_registers[2][2] && (this.m_registers[2][2] = new ag);
          this.addType(oh.create, oh.destroy, 0, 0);
          this.addType(ph.create, ph.destroy, 1, 0);
          this.addType(qh.create, qh.destroy, 1, 1);
          this.addType(Ra.create, Ra.destroy, 2, 0);
          this.addType(D.create,
            D.destroy, 1, 2)
        },
        create: function(a, b) {
          var c = a.getType(),
            d = b.getType();
          d = this.m_registers[c][d];
          if (null != d.pool) {
            var e = d.pool;
            d.pool = e.m_next;
            d.poolCount--;
            d.primary == c ? e.reset(a, b) : e.reset(b, a);
            return e
          }
          e = d.createFcn;
          return null != e ? (d.primary == c ? (e = e(this.m_allocator), e.reset(a, b)) : (e = e(this.m_allocator), e.reset(b, a)), e) : null
        },
        destroy: function(a) {
          0 < a.m_manifold.m_pointCount && (a.m_fixtureA.m_body.setAwake(!0), a.m_fixtureB.m_body.setAwake(!0));
          var b = a.m_fixtureA.getType(),
            c = a.m_fixtureB.getType();
          b =
            this.m_registers[b][c];
          b.poolCount++;
          a.m_next = b.pool;
          b.pool = a;
          b = b.destroyFcn;
          b(a, this.m_allocator)
        },
        m_registers: null,
        m_allocator: null,
        __class__: In
      };
      var ag = function() {};
      k["box2D.dynamics.contacts.B2ContactRegister"] = ag;
      ag.__name__ = "box2D.dynamics.contacts.B2ContactRegister";
      ag.prototype = {
        createFcn: null,
        destroyFcn: null,
        primary: null,
        pool: null,
        poolCount: null,
        __class__: ag
      };
      var zj = function() {
        this.m_normal = new C;
        this.m_separations = [];
        this.m_points = [];
        for (var a = 0, b = ea.b2_maxManifoldPoints; a < b;) {
          var c = a++;
          this.m_points[c] = new C
        }
      };
      k["box2D.dynamics.contacts.B2PositionSolverManifold"] = zj;
      zj.__name__ = "box2D.dynamics.contacts.B2PositionSolverManifold";
      zj.prototype = {
        initialize: function(a) {
          ea.b2Assert(0 < a.pointCount);
          switch (a.type) {
            case 1:
              var b = a.bodyA.m_xf.R;
              var c = a.localPoint;
              var d = a.bodyA.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
              var e = a.bodyA.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
              b = a.bodyB.m_xf.R;
              c = a.points[0].localPoint;
              var f = a.bodyB.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
              b = a.bodyB.m_xf.position.y +
                (b.col1.y * c.x + b.col2.y * c.y);
              var g = f - d;
              c = b - e;
              var h = g * g + c * c;
              h > Number.MIN_VALUE * Number.MIN_VALUE ? (h = Math.sqrt(h), this.m_normal.x = g / h, this.m_normal.y = c / h) : (this.m_normal.x = 1, this.m_normal.y = 0);
              this.m_points[0].x = .5 * (d + f);
              this.m_points[0].y = .5 * (e + b);
              this.m_separations[0] = g * this.m_normal.x + c * this.m_normal.y - a.radius;
              break;
            case 2:
              b = a.bodyA.m_xf.R;
              c = a.localPlaneNormal;
              this.m_normal.x = b.col1.x * c.x + b.col2.x * c.y;
              this.m_normal.y = b.col1.y * c.x + b.col2.y * c.y;
              b = a.bodyA.m_xf.R;
              c = a.localPoint;
              d = a.bodyA.m_xf.position.x +
                (b.col1.x * c.x + b.col2.x * c.y);
              e = a.bodyA.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
              b = a.bodyB.m_xf.R;
              f = 0;
              for (g = a.pointCount; f < g;) {
                var m = f++;
                c = a.points[m].localPoint;
                h = a.bodyB.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
                c = a.bodyB.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
                this.m_separations[m] = (h - d) * this.m_normal.x + (c - e) * this.m_normal.y - a.radius;
                this.m_points[m].x = h;
                this.m_points[m].y = c
              }
              break;
            case 4:
              b = a.bodyB.m_xf.R;
              c = a.localPlaneNormal;
              this.m_normal.x = b.col1.x * c.x + b.col2.x * c.y;
              this.m_normal.y = b.col1.y *
                c.x + b.col2.y * c.y;
              b = a.bodyB.m_xf.R;
              c = a.localPoint;
              d = a.bodyB.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
              e = a.bodyB.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
              b = a.bodyA.m_xf.R;
              f = 0;
              for (g = a.pointCount; f < g;) m = f++, c = a.points[m].localPoint, h = a.bodyA.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y), c = a.bodyA.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y), this.m_separations[m] = (h - d) * this.m_normal.x + (c - e) * this.m_normal.y - a.radius, m = this.m_points[m], null == c && (c = 0), null == h && (h = 0), m.x = h, m.y = c;
              this.m_normal.x *= -1;
              this.m_normal.y *=
                -1
          }
        },
        m_normal: null,
        m_points: null,
        m_separations: null,
        __class__: zj
      };
      var Je = function() {
        this.m_step = new yj;
        this.m_constraints = []
      };
      k["box2D.dynamics.contacts.B2ContactSolver"] = Je;
      Je.__name__ = "box2D.dynamics.contacts.B2ContactSolver";
      Je.prototype = {
        initialize: function(a, b, c, d) {
          this.m_step.set(a);
          this.m_allocator = d;
          for (this.m_constraintCount = c; this.m_constraints.length < this.m_constraintCount;) this.m_constraints[this.m_constraints.length] = new Kn;
          for (a = 0; a < c;) {
            d = a++;
            var e = b[d];
            var f = e.m_fixtureA,
              g = e.m_fixtureB,
              h = f.m_shape.m_radius,
              m = g.m_shape.m_radius,
              l = f.m_body,
              y = g.m_body;
            e = e.getManifold();
            var n = ea.b2MixFriction(f.getFriction(), g.getFriction()),
              p = ea.b2MixRestitution(f.getRestitution(), g.getRestitution()),
              k = l.m_linearVelocity.x,
              q = l.m_linearVelocity.y,
              u = y.m_linearVelocity.x,
              v = y.m_linearVelocity.y,
              T = l.m_angularVelocity,
              ja = y.m_angularVelocity;
            ea.b2Assert(0 < e.m_pointCount);
            Je.s_worldManifold.initialize(e, l.m_xf, h, y.m_xf, m);
            f = Je.s_worldManifold.m_normal.x;
            g = Je.s_worldManifold.m_normal.y;
            d = this.m_constraints[d];
            d.bodyA = l;
            d.bodyB = y;
            d.manifold = e;
            d.normal.x = f;
            d.normal.y = g;
            d.pointCount = e.m_pointCount;
            d.friction = n;
            d.restitution = p;
            d.localPlaneNormal.x = e.m_localPlaneNormal.x;
            d.localPlaneNormal.y = e.m_localPlaneNormal.y;
            d.localPoint.x = e.m_localPoint.x;
            d.localPoint.y = e.m_localPoint.y;
            d.radius = h + m;
            d.type = e.m_type;
            h = 0;
            for (m = d.pointCount; h < m;) {
              var r = h++,
                t = e.m_points[r];
              n = d.points[r];
              n.normalImpulse = t.m_normalImpulse;
              n.tangentImpulse = t.m_tangentImpulse;
              p = n.localPoint;
              t = t.m_localPoint;
              p.x = t.x;
              p.y = t.y;
              p = n.rA.x = Je.s_worldManifold.m_points[r].x -
                l.m_sweep.c.x;
              t = n.rA.y = Je.s_worldManifold.m_points[r].y - l.m_sweep.c.y;
              var z = n.rB.x = Je.s_worldManifold.m_points[r].x - y.m_sweep.c.x;
              r = n.rB.y = Je.s_worldManifold.m_points[r].y - y.m_sweep.c.y;
              var Q = p * g - t * f,
                w = z * g - r * f;
              Q *= Q;
              w *= w;
              n.normalMass = 1 / (l.m_invMass + y.m_invMass + l.m_invI * Q + y.m_invI * w);
              var O = l.m_mass * l.m_invMass + y.m_mass * y.m_invMass;
              O += l.m_mass * l.m_invI * Q + y.m_mass * y.m_invI * w;
              n.equalizedMass = 1 / O;
              w = g;
              O = -f;
              Q = p * O - t * w;
              w = z * O - r * w;
              Q *= Q;
              w *= w;
              n.tangentMass = 1 / (l.m_invMass + y.m_invMass + l.m_invI * Q + y.m_invI * w);
              n.velocityBias =
                0;
              p = d.normal.x * (u + -ja * r - k - -T * t) + d.normal.y * (v + ja * z - q - T * p);
              p < -ea.b2_velocityThreshold && (n.velocityBias += -d.restitution * p)
            }
            2 == d.pointCount && (v = d.points[0], u = d.points[1], e = l.m_invMass, l = l.m_invI, k = y.m_invMass, y = y.m_invI, q = v.rA.x * g - v.rA.y * f, v = v.rB.x * g - v.rB.y * f, T = u.rA.x * g - u.rA.y * f, u = u.rB.x * g - u.rB.y * f, g = e + k + l * q * q + y * v * v, f = e + k + l * T * T + y * u * u, y = e + k + l * q * T + y * v * u, g * g < 100 * (g * f - y * y) ? (l = d.K.col1, e = y, null == e && (e = 0), null == g && (g = 0), l.x = g, l.y = e, g = d.K.col2, null == f && (f = 0), null == y && (y = 0), g.x = y, g.y = f, d.K.getInverse(d.normalMass)) :
              d.pointCount = 1)
          }
        },
        initVelocityConstraints: function(a) {
          for (var b = 0, c = this.m_constraintCount; b < c;) {
            var d = b++;
            d = this.m_constraints[d];
            var e = d.bodyA,
              f = d.bodyB,
              g = e.m_invMass,
              h = e.m_invI,
              m = f.m_invMass,
              l = f.m_invI,
              y = d.normal.x,
              n = d.normal.y,
              p = n,
              k = -y;
            if (a.warmStarting) {
              var q = d.pointCount;
              for (var u = 0; u < q;) {
                var v = u++;
                v = d.points[v];
                v.normalImpulse *= a.dtRatio;
                v.tangentImpulse *= a.dtRatio;
                var T = v.normalImpulse * y + v.tangentImpulse * p,
                  ja = v.normalImpulse * n + v.tangentImpulse * k;
                e.m_angularVelocity -= h * (v.rA.x * ja - v.rA.y * T);
                e.m_linearVelocity.x -= g * T;
                e.m_linearVelocity.y -= g * ja;
                f.m_angularVelocity += l * (v.rB.x * ja - v.rB.y * T);
                f.m_linearVelocity.x += m * T;
                f.m_linearVelocity.y += m * ja
              }
            } else
              for (q = d.pointCount, e = 0, f = q; e < f;) g = e++, g = d.points[g], g.normalImpulse = 0, g.tangentImpulse = 0
          }
        },
        solveVelocityConstraints: function() {
          for (var a, b, c, d, e, f, g, h, m, l, y = 0, n = this.m_constraintCount; y < n;) {
            var p = y++;
            d = this.m_constraints[p];
            p = d.bodyA;
            var k = d.bodyB,
              q = p.m_angularVelocity,
              u = k.m_angularVelocity,
              v = p.m_linearVelocity,
              T = k.m_linearVelocity,
              ja = p.m_invMass,
              r = p.m_invI,
              t = k.m_invMass,
              z = k.m_invI;
            h = d.normal.x;
            var Q = m = d.normal.y,
              w = -h;
            l = d.friction;
            g = 0;
            for (f = d.pointCount; g < f;) a = g++, a = d.points[a], b = T.x - u * a.rB.y - v.x + q * a.rA.y, c = T.y + u * a.rB.x - v.y - q * a.rA.x, b = b * Q + c * w, b = a.tangentMass * -b, c = l * a.normalImpulse, c = P.clamp(a.tangentImpulse + b, -c, c), b = c - a.tangentImpulse, e = b * Q, b *= w, v.x -= ja * e, v.y -= ja * b, q -= r * (a.rA.x * b - a.rA.y * e), T.x += t * e, T.y += t * b, u += z * (a.rB.x * b - a.rB.y * e), a.tangentImpulse = c;
            if (1 == d.pointCount) a = d.points[0], b = T.x + -u * a.rB.y - v.x - -q * a.rA.y, c = T.y + u * a.rB.x - v.y - q * a.rA.x,
              d = b * h + c * m, b = -a.normalMass * (d - a.velocityBias), c = a.normalImpulse + b, 0 < c || (c = 0), b = c - a.normalImpulse, e = b * h, b *= m, v.x -= ja * e, v.y -= ja * b, q -= r * (a.rA.x * b - a.rA.y * e), T.x += t * e, T.y += t * b, u += z * (a.rB.x * b - a.rB.y * e), a.normalImpulse = c;
            else {
              a = d.points[0];
              Q = d.points[1];
              f = a.normalImpulse;
              g = Q.normalImpulse;
              e = (T.x - u * a.rB.y - v.x + q * a.rA.y) * h + (T.y + u * a.rB.x - v.y - q * a.rA.x) * m;
              var O = (T.x - u * Q.rB.y - v.x + q * Q.rA.y) * h + (T.y + u * Q.rB.x - v.y - q * Q.rA.x) * m;
              b = e - a.velocityBias;
              c = O - Q.velocityBias;
              l = d.K;
              b -= l.col1.x * f + l.col2.x * g;
              for (c -= l.col1.y * f + l.col2.y *
                g;;) {
                l = d.normalMass;
                w = -(l.col1.x * b + l.col2.x * c);
                l = -(l.col1.y * b + l.col2.y * c);
                if (0 <= w && 0 <= l) {
                  f = w - f;
                  g = l - g;
                  d = f * h;
                  f *= m;
                  h *= g;
                  m *= g;
                  v.x -= ja * (d + h);
                  v.y -= ja * (f + m);
                  q -= r * (a.rA.x * f - a.rA.y * d + Q.rA.x * m - Q.rA.y * h);
                  T.x += t * (d + h);
                  T.y += t * (f + m);
                  u += z * (a.rB.x * f - a.rB.y * d + Q.rB.x * m - Q.rB.y * h);
                  a.normalImpulse = w;
                  Q.normalImpulse = l;
                  break
                }
                w = -a.normalMass * b;
                l = 0;
                O = d.K.col1.y * w + c;
                if (0 <= w && 0 <= O) {
                  f = w - f;
                  g = l - g;
                  d = f * h;
                  f *= m;
                  h *= g;
                  m *= g;
                  v.x -= ja * (d + h);
                  v.y -= ja * (f + m);
                  q -= r * (a.rA.x * f - a.rA.y * d + Q.rA.x * m - Q.rA.y * h);
                  T.x += t * (d + h);
                  T.y += t * (f + m);
                  u += z * (a.rB.x *
                    f - a.rB.y * d + Q.rB.x * m - Q.rB.y * h);
                  a.normalImpulse = w;
                  Q.normalImpulse = l;
                  break
                }
                w = 0;
                l = -Q.normalMass * c;
                e = d.K.col2.x * l + b;
                if (0 <= l && 0 <= e) {
                  f = w - f;
                  g = l - g;
                  d = f * h;
                  f *= m;
                  h *= g;
                  m *= g;
                  v.x -= ja * (d + h);
                  v.y -= ja * (f + m);
                  q -= r * (a.rA.x * f - a.rA.y * d + Q.rA.x * m - Q.rA.y * h);
                  T.x += t * (d + h);
                  T.y += t * (f + m);
                  u += z * (a.rB.x * f - a.rB.y * d + Q.rB.x * m - Q.rB.y * h);
                  a.normalImpulse = w;
                  Q.normalImpulse = l;
                  break
                }
                l = w = 0;
                e = b;
                O = c;
                if (0 <= e && 0 <= O) {
                  f = w - f;
                  g = l - g;
                  d = f * h;
                  f *= m;
                  h *= g;
                  m *= g;
                  v.x -= ja * (d + h);
                  v.y -= ja * (f + m);
                  q -= r * (a.rA.x * f - a.rA.y * d + Q.rA.x * m - Q.rA.y * h);
                  T.x += t * (d + h);
                  T.y += t * (f + m);
                  u +=
                    z * (a.rB.x * f - a.rB.y * d + Q.rB.x * m - Q.rB.y * h);
                  a.normalImpulse = w;
                  Q.normalImpulse = l;
                  break
                }
                break
              }
            }
            p.m_angularVelocity = q;
            k.m_angularVelocity = u
          }
        },
        finalizeVelocityConstraints: function() {
          for (var a = 0, b = this.m_constraintCount; a < b;) {
            var c = a++;
            c = this.m_constraints[c];
            for (var d = c.manifold, e = 0, f = c.pointCount; e < f;) {
              var g = e++,
                h = d.m_points[g];
              g = c.points[g];
              h.m_normalImpulse = g.normalImpulse;
              h.m_tangentImpulse = g.tangentImpulse
            }
          }
        },
        solvePositionConstraints: function(a) {
          for (var b = 0, c = 0, d = this.m_constraintCount; c < d;) {
            var e = c++;
            e = this.m_constraints[e];
            var f = e.bodyA,
              g = e.bodyB,
              h = f.m_mass * f.m_invMass,
              m = f.m_mass * f.m_invI,
              l = g.m_mass * g.m_invMass,
              y = g.m_mass * g.m_invI;
            Je.s_psm.initialize(e);
            for (var n = Je.s_psm.m_normal, p = 0, k = e.pointCount; p < k;) {
              var q = p++,
                u = e.points[q],
                v = Je.s_psm.m_points[q],
                T = Je.s_psm.m_separations[q];
              q = v.x - f.m_sweep.c.x;
              var ja = v.y - f.m_sweep.c.y,
                r = v.x - g.m_sweep.c.x;
              v = v.y - g.m_sweep.c.y;
              b < T || (b = T);
              T = P.clamp(a * (T + ea.b2_linearSlop), -ea.b2_maxLinearCorrection, 0);
              T *= -u.equalizedMass;
              u = T * n.x;
              T *= n.y;
              f.m_sweep.c.x -= h * u;
              f.m_sweep.c.y -=
                h * T;
              f.m_sweep.a -= m * (q * T - ja * u);
              f.synchronizeTransform();
              g.m_sweep.c.x += l * u;
              g.m_sweep.c.y += l * T;
              g.m_sweep.a += y * (r * T - v * u);
              g.synchronizeTransform()
            }
          }
          return b > -1.5 * ea.b2_linearSlop
        },
        m_step: null,
        m_allocator: null,
        m_constraints: null,
        m_constraintCount: null,
        __class__: Je
      };
      var Ra = function() {
        cb.call(this)
      };
      k["box2D.dynamics.contacts.B2EdgeAndCircleContact"] = Ra;
      Ra.__name__ = "box2D.dynamics.contacts.B2EdgeAndCircleContact";
      Ra.create = function(a) {
        return new Ra
      };
      Ra.destroy = function(a, b) {};
      Ra.__super__ = cb;
      Ra.prototype =
        t(cb.prototype, {
          m_v0: null,
          m_v1: null,
          m_v2: null,
          m_v3: null,
          reset: function(a, b) {
            cb.prototype.reset.call(this, a, b)
          },
          evaluate: function() {
            var a = this.m_fixtureA.getBody(),
              b = this.m_fixtureB.getBody();
            this.b2CollideEdgeAndCircle(this.m_manifold, K.__cast(this.m_fixtureA.getShape(), ug), a.m_xf, K.__cast(this.m_fixtureB.getShape(), Qc), b.m_xf)
          },
          b2CollideEdgeAndCircle: function(a, b, c, d, e) {
            a.m_pointCount = 0;
            this.multiplyTransformVector(e, d.m_p, Ra.temp1);
            e = Ra.q;
            var f = P.mulXT(c, Ra.temp1);
            e.x = f.x;
            e.y = f.y;
            this.m_v0 = b.m_v0;
            this.m_v1 = b.m_v1;
            this.m_v2 = b.m_v2;
            this.m_v3 = b.m_v3;
            e = Ra.e;
            f = this.m_v2.x - this.m_v1.x;
            var g = this.m_v2.y - this.m_v1.y;
            null == g && (g = 0);
            null == f && (f = 0);
            e.x = f;
            e.y = g;
            e = Ra.temp1;
            f = this.m_v2.x - Ra.q.x;
            g = this.m_v2.y - Ra.q.y;
            null == g && (g = 0);
            null == f && (f = 0);
            e.x = f;
            e.y = g;
            var h = P.dot(Ra.e, Ra.temp1);
            e = Ra.temp1;
            f = Ra.q.x - this.m_v1.x;
            g = Ra.q.y - this.m_v1.y;
            null == g && (g = 0);
            null == f && (f = 0);
            e.x = f;
            e.y = g;
            f = P.dot(Ra.e, Ra.temp1);
            c = b.m_radius + d.m_radius;
            if (0 >= f) {
              if (e = Ra.p, h = this.m_v1, e.x = h.x, e.y = h.y, e = Ra.temp1, f = Ra.q.x - Ra.p.x, g = Ra.q.y -
                Ra.p.y, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, e = P.dot(Ra.temp1, Ra.temp1), !(e > c * c)) {
                if (b.m_hasVertex0 && (e = Ra.temp1, f = this.m_v1.x - this.m_v0.x, g = this.m_v1.y - this.m_v0.y, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, e = Ra.temp2, f = this.m_v1.x - Ra.q.x, g = this.m_v1.y - Ra.q.y, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, 0 < P.dot(Ra.temp1, Ra.temp2))) return;
                a.m_pointCount = 1;
                a.m_type = 1;
                e = a.m_localPlaneNormal;
                e.x = 0;
                e.y = 0;
                e = a.m_localPoint;
                h = Ra.p;
                e.x = h.x;
                e.y = h.y;
                a.m_points[0].m_id.set_key(0);
                a.m_points[0].m_id.indexA = 0;
                a.m_points[0].m_id.indexB = 0;
                a.m_points[0].m_id.typeA = Bc.VERTEX;
                a.m_points[0].m_id.typeB = Bc.VERTEX;
                e = a.m_points[0].m_localPoint;
                h = d.m_p;
                e.x = h.x;
                e.y = h.y
              }
            } else if (0 >= h) {
              if (e = Ra.p, h = this.m_v2, e.x = h.x, e.y = h.y, e = Ra.temp1, f = Ra.q.x - Ra.p.x, g = Ra.q.y - Ra.p.y, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, e = P.dot(Ra.temp1, Ra.temp1), !(e > c * c)) {
                if (b.m_hasVertex3 && (e = Ra.temp1, f = this.m_v3.x - this.m_v2.x, g = this.m_v3.y - this.m_v2.y, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, e = Ra.temp2, f = Ra.q.x - this.m_v2.x, g = Ra.q.y - this.m_v2.y,
                    null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, 0 < P.dot(Ra.temp1, Ra.temp2))) return;
                a.m_pointCount = 1;
                a.m_type = 1;
                e = a.m_localPlaneNormal;
                e.x = 0;
                e.y = 0;
                e = a.m_localPoint;
                h = Ra.p;
                e.x = h.x;
                e.y = h.y;
                a.m_points[0].m_id.set_key(0);
                a.m_points[0].m_id.indexA = 1;
                a.m_points[0].m_id.indexB = 0;
                a.m_points[0].m_id.typeA = Bc.VERTEX;
                a.m_points[0].m_id.typeB = Bc.VERTEX;
                e = a.m_points[0].m_localPoint;
                h = d.m_p;
                e.x = h.x;
                e.y = h.y
              }
            } else b = P.dot(Ra.e, Ra.e), ea.b2Assert(0 < b), Ra.p.x = 1 / b * (this.m_v1.x * h + this.m_v2.x * f), Ra.p.y = 1 / b * (this.m_v1.y * h + this.m_v2.y *
              f), Ra.temp1.x = Ra.q.x - Ra.p.x, Ra.temp1.y = Ra.q.y - Ra.p.y, e = P.dot(Ra.temp1, Ra.temp1), e > c * c || (e = Ra.temp1, f = -Ra.e.y, g = Ra.e.x, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, e = Ra.temp2, f = Ra.q.x - this.m_v1.x, g = Ra.q.y - this.m_v1.y, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, 0 > P.dot(Ra.temp1, Ra.temp2) && (e = Ra.temp1, e.x = -e.x, e.y = -e.y), Ra.temp1.normalize(), a.m_pointCount = 1, a.m_type = 2, e = a.m_localPlaneNormal, f = Ra.temp1, e.x = f.x, e.y = f.y, e = a.m_localPoint, f = this.m_v1, e.x = f.x, e.y = f.y, a.m_points[0].m_id.set_key(0), a.m_points[0].m_id.indexA =
              0, a.m_points[0].m_id.indexB = 0, a.m_points[0].m_id.typeA = Bc.FACE, a.m_points[0].m_id.typeB = Bc.VERTEX, e = a.m_points[0].m_localPoint, f = d.m_p, e.x = f.x, e.y = f.y)
          },
          multiplyTransformsInverse: function(a, b, c) {
            this.multiplyRotationsInverse(a.R, b.R, Ra.mat);
            var d = Ra.temp2;
            b = b.position;
            d.x = b.x;
            d.y = b.y;
            Ra.temp2.subtract(a.position);
            this.multiplyRotationVectorInverse(a.R, Ra.temp2, c.position);
            d = c.R.col1;
            b = Ra.mat.col1;
            d.x = b.x;
            d.y = b.y;
            d = c.R.col2;
            b = Ra.mat.col2;
            d.x = b.x;
            d.y = b.y
          },
          multiplyRotationsInverse: function(a, b, c) {
            c.col1.x =
              a.col1.x * b.col1.x + a.col1.y * b.col1.y;
            c.col1.y = a.col2.x * b.col1.x + a.col2.y * b.col1.y;
            c.col2.x = a.col1.x * b.col2.x + a.col1.y * b.col2.y;
            c.col2.y = a.col2.x * b.col2.x + a.col2.y * b.col2.y
          },
          multiplyRotationVector: function(a, b, c) {
            c.x = a.col1.x * b.x + a.col2.x * b.y;
            c.y = a.col1.y * b.x + a.col2.y * b.y
          },
          multiplyRotationVectorInverse: function(a, b, c) {
            c.x = a.col1.x * b.x + a.col1.y * b.y;
            c.y = a.col2.x * b.x + a.col2.y * b.y
          },
          multiplyTransformVector: function(a, b, c) {
            c.x = a.R.col1.x * b.x + a.R.col2.x * b.y + a.position.x;
            c.y = a.R.col1.y * b.x + a.R.col2.y * b.y + a.position.y
          },
          __class__: Ra
        });
      var ph = function() {
        cb.call(this)
      };
      k["box2D.dynamics.contacts.B2PolyAndCircleContact"] = ph;
      ph.__name__ = "box2D.dynamics.contacts.B2PolyAndCircleContact";
      ph.create = function(a) {
        return new ph
      };
      ph.destroy = function(a, b) {};
      ph.__super__ = cb;
      ph.prototype = t(cb.prototype, {
        reset: function(a, b) {
          cb.prototype.reset.call(this, a, b);
          ea.b2Assert(1 == a.getType());
          ea.b2Assert(0 == b.getType())
        },
        evaluate: function() {
          var a = this.m_fixtureA.m_body,
            b = this.m_fixtureB.m_body;
          z.collidePolygonAndCircle(this.m_manifold, K.__cast(this.m_fixtureA.getShape(),
            Lb), a.m_xf, K.__cast(this.m_fixtureB.getShape(), Qc), b.m_xf)
        },
        __class__: ph
      });
      var rh = function() {
        this.v = new C;
        this.id = new Bc
      };
      k["box2D.dynamics.contacts.ClipVertex"] = rh;
      rh.__name__ = "box2D.dynamics.contacts.ClipVertex";
      rh.prototype = {
        v: null,
        id: null,
        set: function(a) {
          var b = this.v,
            c = a.v;
          b.x = c.x;
          b.y = c.y;
          this.id.set(a.id)
        },
        __class__: rh
      };
      var Gk = function() {};
      k["box2D.dynamics.contacts.EPAxis"] = Gk;
      Gk.__name__ = "box2D.dynamics.contacts.EPAxis";
      Gk.prototype = {
        type: null,
        index: null,
        separation: null,
        __class__: Gk
      };
      var Ln =
        function() {
          this.vertices = [];
          this.normals = [];
          for (var a = 0; 32 > a;) a++, this.vertices.push(new C), this.normals.push(new C)
        };
      k["box2D.dynamics.contacts.TempPolygon"] = Ln;
      Ln.__name__ = "box2D.dynamics.contacts.TempPolygon";
      Ln.prototype = {
        vertices: null,
        normals: null,
        count: null,
        __class__: Ln
      };
      var Mn = function() {
        this.v1 = new C;
        this.v2 = new C;
        this.normal = new C;
        this.sideNormal1 = new C;
        this.sideNormal2 = new C
      };
      k["box2D.dynamics.contacts.ReferenceFace"] = Mn;
      Mn.__name__ = "box2D.dynamics.contacts.ReferenceFace";
      Mn.prototype = {
        i1: null,
        i2: null,
        v1: null,
        v2: null,
        normal: null,
        sideNormal1: null,
        sideNormal2: null,
        sideOffset1: null,
        sideOffset2: null,
        __class__: Mn
      };
      var D = function() {
        cb.call(this)
      };
      k["box2D.dynamics.contacts.B2PolyAndEdgeContact"] = D;
      D.__name__ = "box2D.dynamics.contacts.B2PolyAndEdgeContact";
      D.create = function(a) {
        return new D
      };
      D.destroy = function(a, b) {};
      D.clipSegmentToLine = function(a, b, c, d, e) {
        var f = 0,
          g = P.dot(c, b[0].v) - d;
        c = P.dot(c, b[1].v) - d;
        0 >= g && a[f++].set(b[0]);
        0 >= c && a[f++].set(b[1]);
        0 > g * c && (g /= g - c, c = a[f].v, d = b[1].v, c.x = d.x, c.y = d.y,
          a[f].v.subtract(b[0].v), a[f].v.multiply(g), a[f].v.add(b[0].v), a[f].id.indexA = e, a[f].id.indexB = b[0].id.indexB, a[f].id.typeA = Bc.VERTEX, a[f].id.typeB = Bc.FACE, ++f);
        return f
      };
      D.__super__ = cb;
      D.prototype = t(cb.prototype, {
        m_v0: null,
        m_v1: null,
        m_v2: null,
        m_v3: null,
        m_front: null,
        m_radius: null,
        reset: function(a, b) {
          a.getShape() instanceof Lb ? (cb.prototype.reset.call(this, b, a), ea.b2Assert(1 == a.getType()), ea.b2Assert(2 == b.getType())) : (cb.prototype.reset.call(this, a, b), ea.b2Assert(2 == a.getType()), ea.b2Assert(1 == b.getType()))
        },
        evaluate: function() {
          var a = this.m_fixtureA.getBody(),
            b = this.m_fixtureB.getBody();
          this.b2CollidePolyAndEdge(this.m_manifold, K.__cast(this.m_fixtureA.getShape(), ug), a.m_xf, K.__cast(this.m_fixtureB.getShape(), Lb), b.m_xf)
        },
        b2CollidePolyAndEdge: function(a, b, c, d, e) {
          this.multiplyTransformsInverse(c, e, D.m_xf);
          this.multiplyTransformVector(D.m_xf, d.m_centroid, D.temp);
          e = D.m_centroidB;
          var f = D.temp;
          e.x = f.x;
          e.y = f.y;
          this.m_v0 = b.m_v0;
          this.m_v1 = b.m_v1;
          this.m_v2 = b.m_v2;
          this.m_v3 = b.m_v3;
          c = b.m_hasVertex0;
          b = b.m_hasVertex3;
          e = D.edge1;
          f = this.m_v2;
          e.x = f.x;
          e.y = f.y;
          D.edge1.subtract(this.m_v1);
          D.edge1.normalize();
          e = D.m_normal1;
          f = D.edge1.y;
          var g = -D.edge1.x;
          null == g && (g = 0);
          null == f && (f = 0);
          e.x = f;
          e.y = g;
          e = D.temp;
          f = D.m_centroidB;
          e.x = f.x;
          e.y = f.y;
          D.temp.subtract(this.m_v1);
          var h = P.dot(D.m_normal1, D.temp),
            m = 0,
            l = 0,
            y = !1,
            n = !1;
          c && (e = D.edge0, f = this.m_v1, e.x = f.x, e.y = f.y, D.edge0.subtract(this.m_v0), D.edge0.normalize(), e = D.m_normal0, f = D.edge0.y, g = -D.edge0.x, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, y = 0 <= P.crossVV(D.edge0, D.edge1), e = D.temp,
            f = D.m_centroidB, e.x = f.x, e.y = f.y, D.temp.subtract(this.m_v0), m = P.dot(D.m_normal0, D.temp));
          b && (e = D.edge2, f = this.m_v3, e.x = f.x, e.y = f.y, D.edge2.subtract(this.m_v2), D.edge2.normalize(), e = D.m_normal2, f = D.edge2.y, g = -D.edge2.x, null == g && (g = 0), null == f && (f = 0), e.x = f, e.y = g, n = 0 < P.crossVV(D.edge1, D.edge2), e = D.temp, f = D.m_centroidB, e.x = f.x, e.y = f.y, D.temp.subtract(this.m_v2), l = P.dot(D.m_normal2, D.temp));
          c && b ? y && n ? (this.m_front = 0 <= m || 0 <= h || 0 <= l) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal0,
            e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal2, e.x = f.x, e.y = f.y) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, e.x = -e.x, e.y = -e.y) : y ? (this.m_front = 0 <= m || 0 <= h && 0 <= l) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal0, e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal1, e.x = f.x, e.y = f.y) : (e = D.m_normal, f = D.m_normal1,
            e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal2, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, e.x = -e.x, e.y = -e.y) : n ? (this.m_front = 0 <= l || 0 <= m && 0 <= h) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal2, e.x = f.x, e.y = f.y) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y =
            f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal0, e.x = f.x, e.y = f.y, e = D.m_upperLimit, e.x = -e.x, e.y = -e.y) : (this.m_front = 0 <= m && 0 <= h && 0 <= l) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal1, e.x = f.x, e.y = f.y) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal2, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal0, e.x = f.x, e.y = f.y, e = D.m_upperLimit,
            e.x = -e.x, e.y = -e.y) : c ? (y ? ((this.m_front = 0 <= m || 0 <= h) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal0) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal1), e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal1) : (this.m_front = 0 <= m && 0 <= h) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal1) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal0), e.x = f.x, e.y = f.y, e = D.m_upperLimit, e.x = -e.x, e.y = -e.y) : b ? (n ? (this.m_front = 0 <= h || 0 <= l) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal2) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f =
            D.m_normal1) : ((this.m_front = 0 <= h && 0 <= l) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal1) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal2), e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal1), e.x = f.x, e.y = f.y) : (this.m_front = 0 <= h) ? (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_lowerLimit, e.x = -e.x, e.y = -e.y, e = D.m_upperLimit, f = D.m_normal1, e.x =
            f.x, e.y = f.y, e = D.m_upperLimit, e.x = -e.x, e.y = -e.y) : (e = D.m_normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_normal, e.x = -e.x, e.y = -e.y, e = D.m_lowerLimit, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.m_upperLimit, f = D.m_normal1, e.x = f.x, e.y = f.y);
          D.m_polygonB.count = d.m_vertexCount;
          b = 0;
          for (g = d.m_vertexCount; b < g;) h = b++, this.multiplyTransformVector(D.m_xf, d.m_vertices[h], D.temp), e = D.m_polygonB.vertices[h], f = D.temp, e.x = f.x, e.y = f.y, this.multiplyRotationVector(D.m_xf.R, d.m_normals[h], D.temp), f = D.m_polygonB.normals[h], m = D.temp, f.x =
            m.x, f.y = m.y;
          this.m_radius = 2 * ea.b2_polygonRadius;
          a.m_pointCount = 0;
          this.computeEdgeSeparation(D.edgeAxis);
          if (!(D.edgeAxis.type == Jf.UNKNOWN || D.edgeAxis.separation > this.m_radius || (this.computePolygonSeparation(D.polygonAxis), D.polygonAxis.type != Jf.UNKNOWN && D.polygonAxis.separation > this.m_radius))) {
            c = D.polygonAxis.type == Jf.UNKNOWN ? D.edgeAxis : D.polygonAxis.separation > .98 * D.edgeAxis.separation + .001 ? D.polygonAxis : D.edgeAxis;
            if (c.type == Jf.EDGE_A) {
              a.m_type = 2;
              e = 0;
              f = P.dot(D.m_normal, D.m_polygonB.normals[0]);
              b = 1;
              for (g = D.m_polygonB.count; b < g;) h = b++, m = P.dot(D.m_normal, D.m_polygonB.normals[h]), m < f && (f = m, e = h);
              b = e;
              g = b + 1 < D.m_polygonB.count ? b + 1 : 0;
              e = D.ie[0].v;
              f = D.m_polygonB.vertices[b];
              e.x = f.x;
              e.y = f.y;
              D.ie[0].id.indexA = 0;
              D.ie[0].id.indexB = b;
              D.ie[0].id.typeA = Bc.FACE;
              D.ie[0].id.typeB = Bc.VERTEX;
              e = D.ie[1].v;
              f = D.m_polygonB.vertices[g];
              e.x = f.x;
              e.y = f.y;
              D.ie[1].id.indexA = 0;
              D.ie[1].id.indexB = g;
              D.ie[1].id.typeA = Bc.FACE;
              D.ie[1].id.typeB = Bc.VERTEX;
              this.m_front ? (D.rf.i1 = 0, D.rf.i2 = 1, e = D.rf.v1, f = this.m_v1, e.x = f.x, e.y = f.y, e =
                D.rf.v2, f = this.m_v2, e.x = f.x, e.y = f.y, e = D.rf.normal, f = D.m_normal1, e.x = f.x, e.y = f.y) : (D.rf.i1 = 1, D.rf.i2 = 0, e = D.rf.v1, f = this.m_v2, e.x = f.x, e.y = f.y, e = D.rf.v2, f = this.m_v1, e.x = f.x, e.y = f.y, e = D.rf.normal, f = D.m_normal1, e.x = f.x, e.y = f.y, e = D.rf.normal, e.x = -e.x, e.y = -e.y)
            } else a.m_type = 4, e = D.ie[0].v, f = this.m_v1, e.x = f.x, e.y = f.y, D.ie[0].id.indexA = 0, D.ie[0].id.indexB = c.index, D.ie[0].id.typeA = Bc.VERTEX, D.ie[0].id.typeB = Bc.FACE, e = D.ie[1].v, f = this.m_v2, e.x = f.x, e.y = f.y, D.ie[1].id.indexA = 0, D.ie[1].id.indexB = c.index, D.ie[1].id.typeA =
              Bc.VERTEX, D.ie[1].id.typeB = Bc.FACE, D.rf.i1 = c.index, D.rf.i2 = D.rf.i1 + 1 < D.m_polygonB.count ? D.rf.i1 + 1 : 0, e = D.rf.v1, f = D.m_polygonB.vertices[D.rf.i1], e.x = f.x, e.y = f.y, e = D.rf.v2, f = D.m_polygonB.vertices[D.rf.i2], e.x = f.x, e.y = f.y, e = D.rf.normal, f = D.m_polygonB.normals[D.rf.i1], e.x = f.x, e.y = f.y;
            e = D.rf.sideNormal1;
            f = D.rf.normal.y;
            g = -D.rf.normal.x;
            null == g && (g = 0);
            null == f && (f = 0);
            e.x = f;
            e.y = g;
            e = D.rf.sideNormal2;
            f = D.rf.sideNormal1;
            e.x = f.x;
            e.y = f.y;
            e = D.rf.sideNormal2;
            e.x = -e.x;
            e.y = -e.y;
            D.rf.sideOffset1 = P.dot(D.rf.sideNormal1,
              D.rf.v1);
            D.rf.sideOffset2 = P.dot(D.rf.sideNormal2, D.rf.v2);
            e = D.clipSegmentToLine(D.clipPoints1, D.ie, D.rf.sideNormal1, D.rf.sideOffset1, D.rf.i1);
            if (!(e < ea.b2_maxManifoldPoints || (e = D.clipSegmentToLine(D.clipPoints2, D.clipPoints1, D.rf.sideNormal2, D.rf.sideOffset2, D.rf.i2), e < ea.b2_maxManifoldPoints))) {
              c.type == Jf.EDGE_A ? (e = a.m_localPlaneNormal, f = D.rf.normal, e.x = f.x, e.y = f.y, e = a.m_localPoint, f = D.rf.v1) : (e = a.m_localPlaneNormal, f = d.m_normals[D.rf.i1], e.x = f.x, e.y = f.y, e = a.m_localPoint, f = d.m_vertices[D.rf.i1]);
              e.x = f.x;
              e.y = f.y;
              b = d = 0;
              for (g = ea.b2_maxManifoldPoints; b < g;) h = b++, e = D.temp, f = D.clipPoints2[h].v, e.x = f.x, e.y = f.y, D.temp.subtract(D.rf.v1), P.dot(D.rf.normal, D.temp) <= this.m_radius && (e = a.m_points[d], c.type == Jf.EDGE_A ? (f = e.m_localPoint, m = P.mulXT(D.m_xf, D.clipPoints2[h].v), f.x = m.x, f.y = m.y, e.m_id.set(D.clipPoints2[h].id)) : (f = e.m_localPoint, m = D.clipPoints2[h].v, f.x = m.x, f.y = m.y, e.m_id.typeA = D.clipPoints2[h].id.typeB, e.m_id.typeB = D.clipPoints2[h].id.typeA, e.m_id.indexA = D.clipPoints2[h].id.indexB, e.m_id.indexB =
                D.clipPoints2[h].id.indexA), ++d);
              a.m_pointCount = d
            }
          }
        },
        computeEdgeSeparation: function(a) {
          a.type = Jf.EDGE_A;
          a.index = this.m_front ? 0 : 1;
          a.separation = Number.MAX_VALUE;
          for (var b = 0, c = D.m_polygonB.count; b < c;) {
            var d = b++,
              e = D.temp;
            d = D.m_polygonB.vertices[d];
            e.x = d.x;
            e.y = d.y;
            D.temp.subtract(this.m_v1);
            e = P.dot(D.m_normal, D.temp);
            e < a.separation && (a.separation = e)
          }
        },
        computePolygonSeparation: function(a) {
          a.type = Jf.UNKNOWN;
          a.index = -1;
          a.separation = -Number.MAX_VALUE;
          var b = D.perp,
            c = -D.m_normal.y,
            d = D.m_normal.x;
          null == d && (d =
            0);
          null == c && (c = 0);
          b.x = c;
          b.y = d;
          c = 0;
          for (d = D.m_polygonB.count; c < d;) {
            var e = c++;
            b = D.n;
            var f = D.m_polygonB.normals[e];
            b.x = f.x;
            b.y = f.y;
            b = D.n;
            b.x = -b.x;
            b.y = -b.y;
            b = D.temp;
            f = D.m_polygonB.vertices[e];
            b.x = f.x;
            b.y = f.y;
            D.temp.subtract(this.m_v1);
            b = P.dot(D.n, D.temp);
            f = D.temp;
            var g = D.m_polygonB.vertices[e];
            f.x = g.x;
            f.y = g.y;
            D.temp.subtract(this.m_v2);
            f = P.dot(D.n, D.temp);
            b = Math.min(b, f);
            if (b > this.m_radius) {
              a.type = Jf.EDGE_B;
              a.index = e;
              a.separation = b;
              break
            }
            0 <= P.dot(D.n, D.perp) ? (f = D.temp, g = D.n, f.x = g.x, f.y = g.y, D.temp.subtract(D.m_upperLimit)) :
              (f = D.temp, g = D.n, f.x = g.x, f.y = g.y, D.temp.subtract(D.m_lowerLimit));
            !(P.dot(D.temp, D.m_normal) < -ea.b2_angularSlop) && b > a.separation && (a.type = Jf.EDGE_B, a.index = e, a.separation = b)
          }
        },
        multiplyTransformsInverse: function(a, b, c) {
          this.multiplyRotationsInverse(a.R, b.R, D.mat);
          var d = D.temp2;
          b = b.position;
          d.x = b.x;
          d.y = b.y;
          D.temp2.subtract(a.position);
          this.multiplyRotationVectorInverse(a.R, D.temp2, c.position);
          d = c.R.col1;
          b = D.mat.col1;
          d.x = b.x;
          d.y = b.y;
          d = c.R.col2;
          b = D.mat.col2;
          d.x = b.x;
          d.y = b.y
        },
        multiplyRotationsInverse: function(a,
          b, c) {
          c.col1.x = a.col1.x * b.col1.x + a.col1.y * b.col1.y;
          c.col1.y = a.col2.x * b.col1.x + a.col2.y * b.col1.y;
          c.col2.x = a.col1.x * b.col2.x + a.col1.y * b.col2.y;
          c.col2.y = a.col2.x * b.col2.x + a.col2.y * b.col2.y
        },
        multiplyRotationVector: function(a, b, c) {
          c.x = a.col1.x * b.x + a.col2.x * b.y;
          c.y = a.col1.y * b.x + a.col2.y * b.y
        },
        multiplyRotationVectorInverse: function(a, b, c) {
          c.x = a.col1.x * b.x + a.col1.y * b.y;
          c.y = a.col2.x * b.x + a.col2.y * b.y
        },
        multiplyTransformVector: function(a, b, c) {
          c.x = a.R.col1.x * b.x + a.R.col2.x * b.y + a.position.x;
          c.y = a.R.col1.y * b.x + a.R.col2.y *
            b.y + a.position.y
        },
        __class__: D
      });
      var Jf = O["box2D.dynamics.contacts.Type"] = {
        __ename__: "box2D.dynamics.contacts.Type",
        __constructs__: null,
        UNKNOWN: {
          _hx_name: "UNKNOWN",
          _hx_index: 0,
          __enum__: "box2D.dynamics.contacts.Type",
          toString: v
        },
        EDGE_A: {
          _hx_name: "EDGE_A",
          _hx_index: 1,
          __enum__: "box2D.dynamics.contacts.Type",
          toString: v
        },
        EDGE_B: {
          _hx_name: "EDGE_B",
          _hx_index: 2,
          __enum__: "box2D.dynamics.contacts.Type",
          toString: v
        }
      };
      Jf.__constructs__ = [Jf.UNKNOWN, Jf.EDGE_A, Jf.EDGE_B];
      var qh = function() {
        cb.call(this)
      };
      k["box2D.dynamics.contacts.B2PolygonContact"] =
        qh;
      qh.__name__ = "box2D.dynamics.contacts.B2PolygonContact";
      qh.create = function(a) {
        return new qh
      };
      qh.destroy = function(a, b) {};
      qh.__super__ = cb;
      qh.prototype = t(cb.prototype, {
        reset: function(a, b) {
          cb.prototype.reset.call(this, a, b)
        },
        evaluate: function() {
          var a = this.m_fixtureA.getBody(),
            b = this.m_fixtureB.getBody();
          z.collidePolygons(this.m_manifold, K.__cast(this.m_fixtureA.getShape(), Lb), a.m_xf, K.__cast(this.m_fixtureB.getShape(), Lb), b.m_xf)
        },
        __class__: qh
      });
      var uq = function() {};
      k["box2D.dynamics.controllers.B2Controller"] =
        uq;
      uq.__name__ = "box2D.dynamics.controllers.B2Controller";
      uq.prototype = {
        step: function(a) {},
        draw: function(a) {},
        addBody: function(a) {
          var b = new Nn;
          b.controller = this;
          b.body = a;
          b.nextBody = this.m_bodyList;
          b.prevBody = null;
          this.m_bodyList = b;
          null != b.nextBody && (b.nextBody.prevBody = b);
          this.m_bodyCount++;
          b.nextController = a.m_controllerList;
          b.prevController = null;
          a.m_controllerList = b;
          null != b.nextController && (b.nextController.prevController = b);
          a.m_controllerCount++
        },
        removeBody: function(a) {
          for (var b = a.m_controllerList; null !=
            b && b.controller != this;) b = b.nextController;
          null != b.prevBody && (b.prevBody.nextBody = b.nextBody);
          null != b.nextBody && (b.nextBody.prevBody = b.prevBody);
          null != b.nextController && (b.nextController.prevController = b.prevController);
          null != b.prevController && (b.prevController.nextController = b.nextController);
          this.m_bodyList == b && (this.m_bodyList = b.nextBody);
          a.m_controllerList == b && (a.m_controllerList = b.nextController);
          a.m_controllerCount--;
          this.m_bodyCount--
        },
        clear: function() {
          for (; null != this.m_bodyList;) this.removeBody(this.m_bodyList.body)
        },
        getNext: function() {
          return this.m_next
        },
        getWorld: function() {
          return this.m_world
        },
        getBodyList: function() {
          return this.m_bodyList
        },
        m_next: null,
        m_prev: null,
        m_bodyList: null,
        m_bodyCount: null,
        m_world: null,
        __class__: uq
      };
      var Nn = function() {};
      k["box2D.dynamics.controllers.B2ControllerEdge"] = Nn;
      Nn.__name__ = "box2D.dynamics.controllers.B2ControllerEdge";
      Nn.prototype = {
        controller: null,
        body: null,
        prevBody: null,
        nextBody: null,
        prevController: null,
        nextController: null,
        __class__: Nn
      };
      var Vb = function(a) {
        this.m_edgeA = new Hk;
        this.m_edgeB = new Hk;
        this.m_localCenterA = new C;
        this.m_localCenterB = new C;
        ea.b2Assert(a.bodyA != a.bodyB);
        this.m_type = a.type;
        this.m_next = this.m_prev = null;
        this.m_bodyA = a.bodyA;
        this.m_bodyB = a.bodyB;
        this.m_collideConnected = a.collideConnected;
        this.m_islandFlag = !1;
        this.m_userData = a.userData
      };
      k["box2D.dynamics.joints.B2Joint"] = Vb;
      Vb.__name__ = "box2D.dynamics.joints.B2Joint";
      Vb.create = function(a, b) {
        b = null;
        3 == a.type ? b = new si(K.__cast(a, Nh)) : 5 == a.type ? b = new Ik(K.__cast(a, Jk)) : 2 == a.type ? b = new ti(K.__cast(a, Kk)) :
          1 == a.type ? b = new bg(K.__cast(a, Oh)) : 4 == a.type ? b = new vg(K.__cast(a, Lk)) : 6 == a.type ? b = new Mk(K.__cast(a, Nk)) : 7 == a.type ? b = new Aj(K.__cast(a, Ph)) : 8 == a.type ? b = new Ok(K.__cast(a, Pk)) : 9 == a.type && (b = new Qk(K.__cast(a, Rk)));
        return b
      };
      Vb.destroy = function(a, b) {};
      Vb.prototype = {
        getType: function() {
          return this.m_type
        },
        getAnchorA: function() {
          return null
        },
        getAnchorB: function() {
          return null
        },
        getReactionForce: function(a) {
          return null
        },
        getReactionTorque: function(a) {
          return 0
        },
        getBodyA: function() {
          return this.m_bodyA
        },
        getBodyB: function() {
          return this.m_bodyB
        },
        getNext: function() {
          return this.m_next
        },
        getUserData: function() {
          return this.m_userData
        },
        setUserData: function(a) {
          this.m_userData = a
        },
        isActive: function() {
          return this.m_bodyA.isActive() ? this.m_bodyB.isActive() : !1
        },
        initVelocityConstraints: function(a) {},
        solveVelocityConstraints: function(a) {},
        finalizeVelocityConstraints: function() {},
        solvePositionConstraints: function(a) {
          return !1
        },
        m_type: null,
        m_prev: null,
        m_next: null,
        m_edgeA: null,
        m_edgeB: null,
        m_bodyA: null,
        m_bodyB: null,
        m_islandFlag: null,
        m_collideConnected: null,
        m_userData: null,
        m_localCenterA: null,
        m_localCenterB: null,
        m_invMassA: null,
        m_invMassB: null,
        m_invIA: null,
        m_invIB: null,
        ID: null,
        __class__: Vb
      };
      var si = function(a) {
        Vb.call(this, a);
        this.m_localAnchor1 = new C;
        this.m_localAnchor2 = new C;
        this.m_u = new C;
        var b = this.m_localAnchor1,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchor2;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        this.m_length = a.length;
        this.m_frequencyHz = a.frequencyHz;
        this.m_dampingRatio = a.dampingRatio;
        this.m_bias = this.m_gamma = this.m_impulse = 0
      };
      k["box2D.dynamics.joints.B2DistanceJoint"] =
        si;
      si.__name__ = "box2D.dynamics.joints.B2DistanceJoint";
      si.__super__ = Vb;
      si.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchor1)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor2)
        },
        getReactionForce: function(a) {
          return new C(a * this.m_impulse * this.m_u.x, a * this.m_impulse * this.m_u.y)
        },
        getReactionTorque: function(a) {
          return 0
        },
        getLength: function() {
          return this.m_length
        },
        setLength: function(a) {
          this.m_length = a
        },
        getFrequency: function() {
          return this.m_frequencyHz
        },
        setFrequency: function(a) {
          this.m_frequencyHz = a
        },
        getDampingRatio: function() {
          return this.m_dampingRatio
        },
        setDampingRatio: function(a) {
          this.m_dampingRatio = a
        },
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_xf.R,
            e = this.m_localAnchor1.x - b.m_sweep.localCenter.x,
            f = this.m_localAnchor1.y - b.m_sweep.localCenter.y,
            g = d.col1.x * e + d.col2.x * f;
          f = d.col1.y * e + d.col2.y * f;
          e = g;
          d = c.m_xf.R;
          var h = this.m_localAnchor2.x - c.m_sweep.localCenter.x,
            m = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
          g = d.col1.x *
            h + d.col2.x * m;
          m = d.col1.y * h + d.col2.y * m;
          h = g;
          this.m_u.x = c.m_sweep.c.x + h - b.m_sweep.c.x - e;
          this.m_u.y = c.m_sweep.c.y + m - b.m_sweep.c.y - f;
          d = Math.sqrt(this.m_u.x * this.m_u.x + this.m_u.y * this.m_u.y);
          d > ea.b2_linearSlop ? this.m_u.multiply(1 / d) : (g = this.m_u, g.x = 0, g.y = 0);
          g = e * this.m_u.y - f * this.m_u.x;
          var l = h * this.m_u.y - m * this.m_u.x;
          g = b.m_invMass + b.m_invI * g * g + c.m_invMass + c.m_invI * l * l;
          this.m_mass = 0 != g ? 1 / g : 0;
          if (0 < this.m_frequencyHz) {
            d -= this.m_length;
            l = 2 * Math.PI * this.m_frequencyHz;
            var y = this.m_mass * l * l;
            this.m_gamma = a.dt * (2 *
              this.m_mass * this.m_dampingRatio * l + a.dt * y);
            this.m_gamma = 0 != this.m_gamma ? 1 / this.m_gamma : 0;
            this.m_bias = d * a.dt * y * this.m_gamma;
            this.m_mass = g + this.m_gamma;
            this.m_mass = 0 != this.m_mass ? 1 / this.m_mass : 0
          }
          a.warmStarting ? (this.m_impulse *= a.dtRatio, a = this.m_impulse * this.m_u.x, d = this.m_impulse * this.m_u.y, b.m_linearVelocity.x -= b.m_invMass * a, b.m_linearVelocity.y -= b.m_invMass * d, b.m_angularVelocity -= b.m_invI * (e * d - f * a), c.m_linearVelocity.x += c.m_invMass * a, c.m_linearVelocity.y += c.m_invMass * d, c.m_angularVelocity += c.m_invI *
            (h * d - m * a)) : this.m_impulse = 0
        },
        solveVelocityConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_xf.R,
            d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
            e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          c = b.m_xf.R;
          var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
            h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
          f = c.col1.x * g + c.col2.x * h;
          h = c.col1.y * g + c.col2.y * h;
          g = f;
          f = -this.m_mass * (this.m_u.x * (b.m_linearVelocity.x + -b.m_angularVelocity * h - (a.m_linearVelocity.x +
            -a.m_angularVelocity * e)) + this.m_u.y * (b.m_linearVelocity.y + b.m_angularVelocity * g - (a.m_linearVelocity.y + a.m_angularVelocity * d)) + this.m_bias + this.m_gamma * this.m_impulse);
          this.m_impulse += f;
          c = f * this.m_u.x;
          f *= this.m_u.y;
          a.m_linearVelocity.x -= a.m_invMass * c;
          a.m_linearVelocity.y -= a.m_invMass * f;
          a.m_angularVelocity -= a.m_invI * (d * f - e * c);
          b.m_linearVelocity.x += b.m_invMass * c;
          b.m_linearVelocity.y += b.m_invMass * f;
          b.m_angularVelocity += b.m_invI * (g * f - h * c)
        },
        solvePositionConstraints: function(a) {
          if (0 < this.m_frequencyHz) return !0;
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_xf.R,
            d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
            e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          c = b.m_xf.R;
          var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
            h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
          f = c.col1.x * g + c.col2.x * h;
          h = c.col1.y * g + c.col2.y * h;
          g = f;
          var m = b.m_sweep.c.x + g - a.m_sweep.c.x - d,
            l = b.m_sweep.c.y + h - a.m_sweep.c.y - e;
          c = Math.sqrt(m * m + l * l);
          m /= c;
          l /= c;
          c -= this.m_length;
          c = P.clamp(c, -ea.b2_maxLinearCorrection,
            ea.b2_maxLinearCorrection);
          f = -this.m_mass * c;
          var y = this.m_u;
          null == l && (l = 0);
          null == m && (m = 0);
          y.x = m;
          y.y = l;
          l = f * this.m_u.x;
          f *= this.m_u.y;
          a.m_sweep.c.x -= a.m_invMass * l;
          a.m_sweep.c.y -= a.m_invMass * f;
          a.m_sweep.a -= a.m_invI * (d * f - e * l);
          b.m_sweep.c.x += b.m_invMass * l;
          b.m_sweep.c.y += b.m_invMass * f;
          b.m_sweep.a += b.m_invI * (g * f - h * l);
          a.synchronizeTransform();
          b.synchronizeTransform();
          return P.abs(c) < ea.b2_linearSlop
        },
        m_localAnchor1: null,
        m_localAnchor2: null,
        m_u: null,
        m_frequencyHz: null,
        m_dampingRatio: null,
        m_gamma: null,
        m_bias: null,
        m_impulse: null,
        m_mass: null,
        m_length: null,
        __class__: si
      });
      var $c = function() {
        this.type = 0;
        this.bodyB = this.bodyA = this.userData = null;
        this.collideConnected = !1
      };
      k["box2D.dynamics.joints.B2JointDef"] = $c;
      $c.__name__ = "box2D.dynamics.joints.B2JointDef";
      $c.prototype = {
        type: null,
        userData: null,
        bodyA: null,
        bodyB: null,
        collideConnected: null,
        ID: null,
        actor1: null,
        actor2: null,
        __class__: $c
      };
      var Nh = function() {
        $c.call(this);
        this.localAnchorA = new C;
        this.localAnchorB = new C;
        this.type = 3;
        this.length = 1;
        this.dampingRatio = this.frequencyHz =
          0
      };
      k["box2D.dynamics.joints.B2DistanceJointDef"] = Nh;
      Nh.__name__ = "box2D.dynamics.joints.B2DistanceJointDef";
      Nh.__super__ = $c;
      Nh.prototype = t($c.prototype, {
        initialize: function(a, b, c, d) {
          this.bodyA = a;
          this.bodyB = b;
          a = this.localAnchorA;
          b = this.bodyA.getLocalPoint(c);
          a.x = b.x;
          a.y = b.y;
          a = this.localAnchorB;
          b = this.bodyB.getLocalPoint(d);
          a.x = b.x;
          a.y = b.y;
          a = d.x - c.x;
          c = d.y - c.y;
          this.length = Math.sqrt(a * a + c * c);
          this.dampingRatio = this.frequencyHz = 0
        },
        localAnchorA: null,
        localAnchorB: null,
        length: null,
        frequencyHz: null,
        dampingRatio: null,
        __class__: Nh
      });
      var Qk = function(a) {
        Vb.call(this, a);
        this.m_localAnchorA = new C;
        this.m_localAnchorB = new C;
        this.m_linearMass = new Fc;
        this.m_linearImpulse = new C;
        var b = this.m_localAnchorA,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchorB;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        this.m_linearMass.setZero();
        this.m_angularMass = 0;
        b = this.m_linearImpulse;
        b.x = 0;
        this.m_angularImpulse = b.y = 0;
        this.m_maxForce = a.maxForce;
        this.m_maxTorque = a.maxTorque
      };
      k["box2D.dynamics.joints.B2FrictionJoint"] = Qk;
      Qk.__name__ = "box2D.dynamics.joints.B2FrictionJoint";
      Qk.__super__ = Vb;
      Qk.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchorA)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchorB)
        },
        getReactionForce: function(a) {
          return new C(a * this.m_linearImpulse.x, a * this.m_linearImpulse.y)
        },
        getReactionTorque: function(a) {
          return a * this.m_angularImpulse
        },
        setMaxForce: function(a) {
          this.m_maxForce = a
        },
        getMaxForce: function() {
          return this.m_maxForce
        },
        setMaxTorque: function(a) {
          this.m_maxTorque = a
        },
        getMaxTorque: function() {
          return this.m_maxTorque
        },
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_xf.R,
            e = this.m_localAnchorA.x - b.m_sweep.localCenter.x,
            f = this.m_localAnchorA.y - b.m_sweep.localCenter.y,
            g = d.col1.x * e + d.col2.x * f;
          f = d.col1.y * e + d.col2.y * f;
          e = g;
          d = c.m_xf.R;
          var h = this.m_localAnchorB.x - c.m_sweep.localCenter.x,
            m = this.m_localAnchorB.y - c.m_sweep.localCenter.y;
          g = d.col1.x * h + d.col2.x * m;
          m = d.col1.y * h + d.col2.y * m;
          h = g;
          d = b.m_invMass;
          g = c.m_invMass;
          var l = b.m_invI,
            y = c.m_invI,
            n = new Fc;
          n.col1.x = d + g;
          n.col2.x = 0;
          n.col1.y = 0;
          n.col2.y = d +
            g;
          n.col1.x += l * f * f;
          n.col2.x += -l * e * f;
          n.col1.y += -l * e * f;
          n.col2.y += l * e * e;
          n.col1.x += y * m * m;
          n.col2.x += -y * h * m;
          n.col1.y += -y * h * m;
          n.col2.y += y * h * h;
          n.getInverse(this.m_linearMass);
          this.m_angularMass = l + y;
          0 < this.m_angularMass && (this.m_angularMass = 1 / this.m_angularMass);
          a.warmStarting ? (this.m_linearImpulse.x *= a.dtRatio, this.m_linearImpulse.y *= a.dtRatio, this.m_angularImpulse *= a.dtRatio, a = this.m_linearImpulse, b.m_linearVelocity.x -= d * a.x, b.m_linearVelocity.y -= d * a.y, b.m_angularVelocity -= l * (e * a.y - f * a.x + this.m_angularImpulse),
            c.m_linearVelocity.x += g * a.x, c.m_linearVelocity.y += g * a.y, c.m_angularVelocity += y * (h * a.y - m * a.x + this.m_angularImpulse)) : (b = this.m_linearImpulse, b.x = 0, this.m_angularImpulse = b.y = 0)
        },
        solveVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_linearVelocity,
            e = b.m_angularVelocity,
            f = c.m_linearVelocity,
            g = c.m_angularVelocity,
            h = b.m_invMass,
            m = c.m_invMass,
            l = b.m_invI,
            y = c.m_invI,
            n = b.m_xf.R,
            p = this.m_localAnchorA.x - b.m_sweep.localCenter.x,
            q = this.m_localAnchorA.y - b.m_sweep.localCenter.y,
            k = n.col1.x *
            p + n.col2.x * q;
          q = n.col1.y * p + n.col2.y * q;
          p = k;
          n = c.m_xf.R;
          var u = this.m_localAnchorB.x - c.m_sweep.localCenter.x,
            v = this.m_localAnchorB.y - c.m_sweep.localCenter.y;
          k = n.col1.x * u + n.col2.x * v;
          v = n.col1.y * u + n.col2.y * v;
          u = k;
          k = -this.m_angularMass * (g - e);
          var T = this.m_angularImpulse;
          n = a.dt * this.m_maxTorque;
          this.m_angularImpulse = P.clamp(this.m_angularImpulse + k, -n, n);
          k = this.m_angularImpulse - T;
          e -= l * k;
          g += y * k;
          n = P.mulMV(this.m_linearMass, new C(-(f.x - g * v - d.x + e * q), -(f.y + g * u - d.y - e * p)));
          k = this.m_linearImpulse.copy();
          this.m_linearImpulse.add(n);
          n = a.dt * this.m_maxForce;
          this.m_linearImpulse.lengthSquared() > n * n && (this.m_linearImpulse.normalize(), this.m_linearImpulse.multiply(n));
          n = P.subtractVV(this.m_linearImpulse, k);
          d.x -= h * n.x;
          d.y -= h * n.y;
          e -= l * (p * n.y - q * n.x);
          f.x += m * n.x;
          f.y += m * n.y;
          g += y * (u * n.y - v * n.x);
          b.m_angularVelocity = e;
          c.m_angularVelocity = g
        },
        solvePositionConstraints: function(a) {
          return !0
        },
        m_localAnchorA: null,
        m_localAnchorB: null,
        m_linearMass: null,
        m_angularMass: null,
        m_linearImpulse: null,
        m_angularImpulse: null,
        m_maxForce: null,
        m_maxTorque: null,
        __class__: Qk
      });
      var Rk = function() {
        $c.call(this);
        this.localAnchorA = new C;
        this.localAnchorB = new C;
        this.type = 9;
        this.maxTorque = this.maxForce = 0
      };
      k["box2D.dynamics.joints.B2FrictionJointDef"] = Rk;
      Rk.__name__ = "box2D.dynamics.joints.B2FrictionJointDef";
      Rk.__super__ = $c;
      Rk.prototype = t($c.prototype, {
        initialize: function(a, b, c) {
          this.bodyA = a;
          this.bodyB = b;
          a = this.localAnchorA;
          b = this.bodyA.getLocalPoint(c);
          a.x = b.x;
          a.y = b.y;
          a = this.localAnchorB;
          b = this.bodyB.getLocalPoint(c);
          a.x = b.x;
          a.y = b.y
        },
        localAnchorA: null,
        localAnchorB: null,
        maxForce: null,
        maxTorque: null,
        __class__: Rk
      });
      var Mk = function(a) {
        Vb.call(this, a);
        this.m_groundAnchor1 = new C;
        this.m_groundAnchor2 = new C;
        this.m_localAnchor1 = new C;
        this.m_localAnchor2 = new C;
        this.m_J = new On;
        var b = a.joint1.m_type,
          c = a.joint2.m_type;
        this.m_prismatic2 = this.m_revolute2 = this.m_prismatic1 = this.m_revolute1 = null;
        this.m_ground1 = a.joint1.getBodyA();
        this.m_bodyA = a.joint1.getBodyB();
        if (1 == b) {
          this.m_revolute1 = K.__cast(a.joint1, bg);
          var d = this.m_groundAnchor1,
            e = this.m_revolute1.m_localAnchor1;
          d.x = e.x;
          d.y = e.y;
          d = this.m_localAnchor1;
          e = this.m_revolute1.m_localAnchor2;
          d.x = e.x;
          d.y = e.y;
          b = this.m_revolute1.getJointAngle()
        } else this.m_prismatic1 = K.__cast(a.joint1, ti), d = this.m_groundAnchor1, e = this.m_prismatic1.m_localAnchor1, d.x = e.x, d.y = e.y, d = this.m_localAnchor1, e = this.m_prismatic1.m_localAnchor2, d.x = e.x, d.y = e.y, b = this.m_prismatic1.getJointTranslation();
        this.m_ground2 = a.joint2.getBodyA();
        this.m_bodyB = a.joint2.getBodyB();
        1 == c ? (this.m_revolute2 = K.__cast(a.joint2, bg), d = this.m_groundAnchor2, e = this.m_revolute2.m_localAnchor1, d.x = e.x, d.y =
          e.y, d = this.m_localAnchor2, e = this.m_revolute2.m_localAnchor2, d.x = e.x, d.y = e.y, c = this.m_revolute2.getJointAngle()) : (this.m_prismatic2 = K.__cast(a.joint2, ti), d = this.m_groundAnchor2, e = this.m_prismatic2.m_localAnchor1, d.x = e.x, d.y = e.y, d = this.m_localAnchor2, e = this.m_prismatic2.m_localAnchor2, d.x = e.x, d.y = e.y, c = this.m_prismatic2.getJointTranslation());
        this.m_ratio = a.ratio;
        this.m_constant = b + this.m_ratio * c;
        this.m_impulse = 0
      };
      k["box2D.dynamics.joints.B2GearJoint"] = Mk;
      Mk.__name__ = "box2D.dynamics.joints.B2GearJoint";
      Mk.__super__ = Vb;
      Mk.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchor1)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor2)
        },
        getReactionForce: function(a) {
          return new C(a * this.m_impulse * this.m_J.linearB.x, a * this.m_impulse * this.m_J.linearB.y)
        },
        getReactionTorque: function(a) {
          var b = this.m_bodyB.m_xf.R,
            c = this.m_localAnchor1.x - this.m_bodyB.m_sweep.localCenter.x,
            d = this.m_localAnchor1.y - this.m_bodyB.m_sweep.localCenter.y,
            e = b.col1.x *
            c + b.col2.x * d;
          d = b.col1.y * c + b.col2.y * d;
          return a * (this.m_impulse * this.m_J.angularB - e * this.m_impulse * this.m_J.linearB.y + d * this.m_impulse * this.m_J.linearB.x)
        },
        getRatio: function() {
          return this.m_ratio
        },
        setRatio: function(a) {
          this.m_ratio = a
        },
        initVelocityConstraints: function(a) {
          var b = this.m_ground1,
            c = this.m_ground2,
            d = this.m_bodyA,
            e = this.m_bodyB,
            f = 0;
          this.m_J.setZero();
          if (null != this.m_revolute1) this.m_J.angularA = -1, f += d.m_invI;
          else {
            var g = b.m_xf.R;
            var h = this.m_prismatic1.m_localXAxis1;
            b = g.col1.x * h.x + g.col2.x * h.y;
            h = g.col1.y * h.x + g.col2.y * h.y;
            g = d.m_xf.R;
            var m = this.m_localAnchor1.x - d.m_sweep.localCenter.x;
            var l = this.m_localAnchor1.y - d.m_sweep.localCenter.y;
            var y = g.col1.x * m + g.col2.x * l;
            l = g.col1.y * m + g.col2.y * l;
            g = y * h - l * b;
            m = this.m_J.linearA;
            b = -b;
            h = -h;
            null == h && (h = 0);
            null == b && (b = 0);
            m.x = b;
            m.y = h;
            this.m_J.angularA = -g;
            f += d.m_invMass + d.m_invI * g * g
          }
          null != this.m_revolute2 ? (this.m_J.angularB = -this.m_ratio, f += this.m_ratio * this.m_ratio * e.m_invI) : (g = c.m_xf.R, h = this.m_prismatic2.m_localXAxis1, b = g.col1.x * h.x + g.col2.x * h.y, h = g.col1.y *
            h.x + g.col2.y * h.y, g = e.m_xf.R, m = this.m_localAnchor2.x - e.m_sweep.localCenter.x, l = this.m_localAnchor2.y - e.m_sweep.localCenter.y, y = g.col1.x * m + g.col2.x * l, l = g.col1.y * m + g.col2.y * l, g = y * h - l * b, m = this.m_J.linearB, b *= -this.m_ratio, h *= -this.m_ratio, null == h && (h = 0), null == b && (b = 0), m.x = b, m.y = h, this.m_J.angularB = -this.m_ratio * g, f += this.m_ratio * this.m_ratio * (e.m_invMass + e.m_invI * g * g));
          this.m_mass = 0 < f ? 1 / f : 0;
          a.warmStarting ? (d.m_linearVelocity.x += d.m_invMass * this.m_impulse * this.m_J.linearA.x, d.m_linearVelocity.y += d.m_invMass *
            this.m_impulse * this.m_J.linearA.y, d.m_angularVelocity += d.m_invI * this.m_impulse * this.m_J.angularA, e.m_linearVelocity.x += e.m_invMass * this.m_impulse * this.m_J.linearB.x, e.m_linearVelocity.y += e.m_invMass * this.m_impulse * this.m_J.linearB.y, e.m_angularVelocity += e.m_invI * this.m_impulse * this.m_J.angularB) : this.m_impulse = 0
        },
        solveVelocityConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = this.m_J.compute(a.m_linearVelocity, a.m_angularVelocity, b.m_linearVelocity, b.m_angularVelocity);
          c *= -this.m_mass;
          this.m_impulse +=
            c;
          a.m_linearVelocity.x += a.m_invMass * c * this.m_J.linearA.x;
          a.m_linearVelocity.y += a.m_invMass * c * this.m_J.linearA.y;
          a.m_angularVelocity += a.m_invI * c * this.m_J.angularA;
          b.m_linearVelocity.x += b.m_invMass * c * this.m_J.linearB.x;
          b.m_linearVelocity.y += b.m_invMass * c * this.m_J.linearB.y;
          b.m_angularVelocity += b.m_invI * c * this.m_J.angularB
        },
        solvePositionConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB;
          var c = null != this.m_revolute1 ? this.m_revolute1.getJointAngle() : this.m_prismatic1.getJointTranslation();
          var d =
            null != this.m_revolute2 ? this.m_revolute2.getJointAngle() : this.m_prismatic2.getJointTranslation();
          c = -this.m_mass * (this.m_constant - (c + this.m_ratio * d));
          a.m_sweep.c.x += a.m_invMass * c * this.m_J.linearA.x;
          a.m_sweep.c.y += a.m_invMass * c * this.m_J.linearA.y;
          a.m_sweep.a += a.m_invI * c * this.m_J.angularA;
          b.m_sweep.c.x += b.m_invMass * c * this.m_J.linearB.x;
          b.m_sweep.c.y += b.m_invMass * c * this.m_J.linearB.y;
          b.m_sweep.a += b.m_invI * c * this.m_J.angularB;
          a.synchronizeTransform();
          b.synchronizeTransform();
          return 0 < ea.b2_linearSlop
        },
        m_ground1: null,
        m_ground2: null,
        m_revolute1: null,
        m_prismatic1: null,
        m_revolute2: null,
        m_prismatic2: null,
        m_groundAnchor1: null,
        m_groundAnchor2: null,
        m_localAnchor1: null,
        m_localAnchor2: null,
        m_J: null,
        m_constant: null,
        m_ratio: null,
        m_mass: null,
        m_impulse: null,
        __class__: Mk
      });
      var Nk = function() {
        $c.call(this);
        this.type = 6;
        this.joint2 = this.joint1 = null;
        this.ratio = 1
      };
      k["box2D.dynamics.joints.B2GearJointDef"] = Nk;
      Nk.__name__ = "box2D.dynamics.joints.B2GearJointDef";
      Nk.__super__ = $c;
      Nk.prototype = t($c.prototype, {
        joint1: null,
        joint2: null,
        ratio: null,
        __class__: Nk
      });
      var On = function() {
        this.linearA = new C;
        this.linearB = new C
      };
      k["box2D.dynamics.joints.B2Jacobian"] = On;
      On.__name__ = "box2D.dynamics.joints.B2Jacobian";
      On.prototype = {
        linearA: null,
        angularA: null,
        linearB: null,
        angularB: null,
        setZero: function() {
          var a = this.linearA;
          a.x = 0;
          this.angularA = a.y = 0;
          a = this.linearB;
          a.x = 0;
          this.angularB = a.y = 0
        },
        set: function(a, b, c, d) {
          var e = this.linearA;
          e.x = a.x;
          e.y = a.y;
          this.angularA = b;
          e = this.linearB;
          e.x = c.x;
          e.y = c.y;
          this.angularB = d
        },
        compute: function(a, b, c,
          d) {
          return this.linearA.x * a.x + this.linearA.y * a.y + this.angularA * b + (this.linearB.x * c.x + this.linearB.y * c.y) + this.angularB * d
        },
        __class__: On
      };
      var Hk = function() {};
      k["box2D.dynamics.joints.B2JointEdge"] = Hk;
      Hk.__name__ = "box2D.dynamics.joints.B2JointEdge";
      Hk.prototype = {
        other: null,
        joint: null,
        prev: null,
        next: null,
        __class__: Hk
      };
      var Aj = function(a) {
        Vb.call(this, a);
        this.m_localAnchor1 = new C;
        this.m_localAnchor2 = new C;
        this.m_localXAxis1 = new C;
        this.m_localYAxis1 = new C;
        this.m_axis = new C;
        this.m_perp = new C;
        this.m_K = new Fc;
        this.m_impulse = new C;
        var b = this.m_localAnchor1,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchor2;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localXAxis1;
        c = a.localAxisA;
        b.x = c.x;
        b.y = c.y;
        this.m_localYAxis1.x = -this.m_localXAxis1.y;
        this.m_localYAxis1.y = this.m_localXAxis1.x;
        b = this.m_impulse;
        b.x = 0;
        this.m_motorImpulse = this.m_motorMass = b.y = 0;
        this.m_lowerTranslation = a.lowerTranslation;
        this.m_upperTranslation = a.upperTranslation;
        this.m_maxMotorForce = a.maxMotorForce;
        this.m_motorSpeed = a.motorSpeed;
        this.m_enableLimit =
          a.enableLimit;
        this.m_enableMotor = a.enableMotor;
        this.m_limitState = 0;
        b = this.m_axis;
        b.x = 0;
        b.y = 0;
        b = this.m_perp;
        b.x = 0;
        b.y = 0
      };
      k["box2D.dynamics.joints.B2LineJoint"] = Aj;
      Aj.__name__ = "box2D.dynamics.joints.B2LineJoint";
      Aj.__super__ = Vb;
      Aj.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchor1)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor2)
        },
        getReactionForce: function(a) {
          return new C(a * (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse +
            this.m_impulse.y) * this.m_axis.x), a * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y))
        },
        getReactionTorque: function(a) {
          return a * this.m_impulse.y
        },
        getJointTranslation: function() {
          var a = this.m_bodyA,
            b = this.m_bodyB,
            c = a.getWorldPoint(this.m_localAnchor1),
            d = b.getWorldPoint(this.m_localAnchor2);
          b = d.x - c.x;
          c = d.y - c.y;
          a = a.getWorldVector(this.m_localXAxis1);
          return a.x * b + a.y * c
        },
        getJointSpeed: function() {
          var a = this.m_bodyA,
            b = this.m_bodyB,
            c = a.m_xf.R,
            d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
            e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          c = b.m_xf.R;
          var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
            h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
          f = c.col1.x * g + c.col2.x * h;
          h = c.col1.y * g + c.col2.y * h;
          g = f;
          c = b.m_sweep.c.x + g - (a.m_sweep.c.x + d);
          f = b.m_sweep.c.y + h - (a.m_sweep.c.y + e);
          var m = a.getWorldVector(this.m_localXAxis1),
            l = a.m_linearVelocity,
            y = b.m_linearVelocity;
          a = a.m_angularVelocity;
          b = b.m_angularVelocity;
          return c * -a * m.y + f * a * m.x + (m.x * (y.x + -b *
            h - l.x - -a * e) + m.y * (y.y + b * g - l.y - a * d))
        },
        isLimitEnabled: function() {
          return this.m_enableLimit
        },
        enableLimit: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_enableLimit = a
        },
        getLowerLimit: function() {
          return this.m_lowerTranslation
        },
        getUpperLimit: function() {
          return this.m_upperTranslation
        },
        setLimits: function(a, b) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_lowerTranslation = a;
          this.m_upperTranslation = b
        },
        isMotorEnabled: function() {
          return this.m_enableMotor
        },
        enableMotor: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_enableMotor = a
        },
        setMotorSpeed: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_motorSpeed = a
        },
        getMotorSpeed: function() {
          return this.m_motorSpeed
        },
        setMaxMotorForce: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_maxMotorForce = a
        },
        getMaxMotorForce: function() {
          return this.m_maxMotorForce
        },
        getMotorForce: function() {
          return this.m_motorImpulse
        },
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = this.m_localCenterA,
            e = b.getLocalCenter();
          d.x = e.x;
          d.y = e.y;
          d = this.m_localCenterB;
          e = c.getLocalCenter();
          d.x = e.x;
          d.y = e.y;
          var f = b.getTransform();
          c.getTransform();
          var g = b.m_xf.R,
            h = this.m_localAnchor1.x - this.m_localCenterA.x,
            m = this.m_localAnchor1.y - this.m_localCenterA.y,
            l = g.col1.x * h + g.col2.x * m;
          m = g.col1.y * h + g.col2.y * m;
          h = l;
          g = c.m_xf.R;
          var y = this.m_localAnchor2.x - this.m_localCenterB.x,
            n = this.m_localAnchor2.y - this.m_localCenterB.y;
          l = g.col1.x * y + g.col2.x * n;
          n = g.col1.y * y + g.col2.y * n;
          y = l;
          g = c.m_sweep.c.x + y - b.m_sweep.c.x - h;
          l = c.m_sweep.c.y +
            n - b.m_sweep.c.y - m;
          this.m_invMassA = b.m_invMass;
          this.m_invMassB = c.m_invMass;
          this.m_invIA = b.m_invI;
          this.m_invIB = c.m_invI;
          d = this.m_axis;
          e = P.mulMV(f.R, this.m_localXAxis1);
          d.x = e.x;
          d.y = e.y;
          this.m_a1 = (g + h) * this.m_axis.y - (l + m) * this.m_axis.x;
          this.m_a2 = y * this.m_axis.y - n * this.m_axis.x;
          this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;
          this.m_motorMass = this.m_motorMass > Number.MIN_VALUE ? 1 / this.m_motorMass : 0;
          d = this.m_perp;
          e = P.mulMV(f.R, this.m_localYAxis1);
          d.x = e.x;
          d.y = e.y;
          this.m_s1 = (g + h) * this.m_perp.y - (l + m) * this.m_perp.x;
          this.m_s2 = y * this.m_perp.y - n * this.m_perp.x;
          f = this.m_invMassA;
          h = this.m_invMassB;
          m = this.m_invIA;
          y = this.m_invIB;
          this.m_K.col1.x = f + h + m * this.m_s1 * this.m_s1 + y * this.m_s2 * this.m_s2;
          this.m_K.col1.y = m * this.m_s1 * this.m_a1 + y * this.m_s2 * this.m_a2;
          this.m_K.col2.x = this.m_K.col1.y;
          this.m_K.col2.y = f + h + m * this.m_a1 * this.m_a1 + y * this.m_a2 * this.m_a2;
          this.m_enableLimit ? (g = this.m_axis.x * g + this.m_axis.y * l, P.abs(this.m_upperTranslation - this.m_lowerTranslation) <
            2 * ea.b2_linearSlop ? this.m_limitState = 3 : g <= this.m_lowerTranslation ? 1 != this.m_limitState && (this.m_limitState = 1, this.m_impulse.y = 0) : g >= this.m_upperTranslation ? 2 != this.m_limitState && (this.m_limitState = 2, this.m_impulse.y = 0) : (this.m_limitState = 0, this.m_impulse.y = 0)) : this.m_limitState = 0;
          0 == this.m_enableMotor && (this.m_motorImpulse = 0);
          a.warmStarting ? (this.m_impulse.x *= a.dtRatio, this.m_impulse.y *= a.dtRatio, this.m_motorImpulse *= a.dtRatio, a = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.y) *
            this.m_axis.x, g = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y, l = this.m_impulse.x * this.m_s1 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a1, f = this.m_impulse.x * this.m_s2 + (this.m_motorImpulse + this.m_impulse.y) * this.m_a2, b.m_linearVelocity.x -= this.m_invMassA * a, b.m_linearVelocity.y -= this.m_invMassA * g, b.m_angularVelocity -= this.m_invIA * l, c.m_linearVelocity.x += this.m_invMassB * a, c.m_linearVelocity.y += this.m_invMassB * g, c.m_angularVelocity += this.m_invIB * f) : (d = this.m_impulse,
            d.x = 0, this.m_motorImpulse = d.y = 0)
        },
        solveVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_linearVelocity,
            e = b.m_angularVelocity,
            f = c.m_linearVelocity,
            g = c.m_angularVelocity;
          if (this.m_enableMotor && 3 != this.m_limitState) {
            var h = this.m_motorMass * (this.m_motorSpeed - (this.m_axis.x * (f.x - d.x) + this.m_axis.y * (f.y - d.y) + this.m_a2 * g - this.m_a1 * e));
            var m = this.m_motorImpulse;
            a = a.dt * this.m_maxMotorForce;
            this.m_motorImpulse = P.clamp(this.m_motorImpulse + h, -a, a);
            h = this.m_motorImpulse - m;
            m = h * this.m_axis.x;
            a = h * this.m_axis.y;
            var l = h * this.m_a1;
            h *= this.m_a2;
            d.x -= this.m_invMassA * m;
            d.y -= this.m_invMassA * a;
            e -= this.m_invIA * l;
            f.x += this.m_invMassB * m;
            f.y += this.m_invMassB * a;
            g += this.m_invIB * h
          }
          a = this.m_perp.x * (f.x - d.x) + this.m_perp.y * (f.y - d.y) + this.m_s2 * g - this.m_s1 * e;
          this.m_enableLimit && 0 != this.m_limitState ? (l = this.m_axis.x * (f.x - d.x) + this.m_axis.y * (f.y - d.y) + this.m_a2 * g - this.m_a1 * e, m = this.m_impulse.copy(), h = this.m_K.solve(new C, -a, -l), this.m_impulse.add(h), 1 == this.m_limitState ? this.m_impulse.y = P.max(this.m_impulse.y,
            0) : 2 == this.m_limitState && (this.m_impulse.y = P.min(this.m_impulse.y, 0)), a = -a - (this.m_impulse.y - m.y) * this.m_K.col2.x, this.m_impulse.x = 0 != this.m_K.col1.x ? a / this.m_K.col1.x + m.x : m.x, h.x = this.m_impulse.x - m.x, h.y = this.m_impulse.y - m.y, m = h.x * this.m_perp.x + h.y * this.m_axis.x, a = h.x * this.m_perp.y + h.y * this.m_axis.y, l = h.x * this.m_s1 + h.y * this.m_a1, h = h.x * this.m_s2 + h.y * this.m_a2) : (h = 0 != this.m_K.col1.x ? -a / this.m_K.col1.x : 0, this.m_impulse.x += h, m = h * this.m_perp.x, a = h * this.m_perp.y, l = h * this.m_s1, h *= this.m_s2);
          d.x -= this.m_invMassA *
            m;
          d.y -= this.m_invMassA * a;
          e -= this.m_invIA * l;
          f.x += this.m_invMassB * m;
          f.y += this.m_invMassB * a;
          g += this.m_invIB * h;
          m = b.m_linearVelocity;
          m.x = d.x;
          m.y = d.y;
          b.m_angularVelocity = e;
          m = c.m_linearVelocity;
          m.x = f.x;
          m.y = f.y;
          c.m_angularVelocity = g
        },
        solvePositionConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_sweep.c,
            d = a.m_sweep.a,
            e = b.m_sweep.c,
            f = b.m_sweep.a,
            g = 0;
          var h = !1;
          var m = 0,
            l = Fc.fromAngle(d);
          var y = Fc.fromAngle(f);
          var n = l,
            p = this.m_localAnchor1.x - this.m_localCenterA.x;
          var k = this.m_localAnchor1.y - this.m_localCenterA.y;
          var q = n.col1.x * p + n.col2.x * k;
          k = n.col1.y * p + n.col2.y * k;
          p = q;
          n = y;
          y = this.m_localAnchor2.x - this.m_localCenterB.x;
          var u = this.m_localAnchor2.y - this.m_localCenterB.y;
          q = n.col1.x * y + n.col2.x * u;
          u = n.col1.y * y + n.col2.y * u;
          y = q;
          n = e.x + y - c.x - p;
          q = e.y + u - c.y - k;
          if (this.m_enableLimit) {
            this.m_axis = P.mulMV(l, this.m_localXAxis1);
            this.m_a1 = (n + p) * this.m_axis.y - (q + k) * this.m_axis.x;
            this.m_a2 = y * this.m_axis.y - u * this.m_axis.x;
            var v = this.m_axis.x * n + this.m_axis.y * q;
            P.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * ea.b2_linearSlop ?
              (m = P.clamp(v, -ea.b2_maxLinearCorrection, ea.b2_maxLinearCorrection), g = P.abs(v), h = !0) : v <= this.m_lowerTranslation ? (m = P.clamp(v - this.m_lowerTranslation + ea.b2_linearSlop, -ea.b2_maxLinearCorrection, 0), g = this.m_lowerTranslation - v, h = !0) : v >= this.m_upperTranslation && (m = P.clamp(v - this.m_upperTranslation + ea.b2_linearSlop, 0, ea.b2_maxLinearCorrection), g = v - this.m_upperTranslation, h = !0)
          }
          this.m_perp = P.mulMV(l, this.m_localYAxis1);
          this.m_s1 = (n + p) * this.m_perp.y - (q + k) * this.m_perp.x;
          this.m_s2 = y * this.m_perp.y - u * this.m_perp.x;
          l = new C;
          p = this.m_perp.x * n + this.m_perp.y * q;
          g = P.max(g, P.abs(p));
          h ? (h = this.m_invMassA, k = this.m_invMassB, y = this.m_invIA, u = this.m_invIB, this.m_K.col1.x = h + k + y * this.m_s1 * this.m_s1 + u * this.m_s2 * this.m_s2, this.m_K.col1.y = y * this.m_s1 * this.m_a1 + u * this.m_s2 * this.m_a2, this.m_K.col2.x = this.m_K.col1.y, this.m_K.col2.y = h + k + y * this.m_a1 * this.m_a1 + u * this.m_a2 * this.m_a2, this.m_K.solve(l, -p, -m)) : (h = this.m_invMassA, k = this.m_invMassB, y = this.m_invIA, u = this.m_invIB, m = h + k + y * this.m_s1 * this.m_s1 + u * this.m_s2 * this.m_s2, l.x = 0 != m ?
            -p / m : 0, l.y = 0);
          m = l.x * this.m_perp.x + l.y * this.m_axis.x;
          h = l.x * this.m_perp.y + l.y * this.m_axis.y;
          p = l.x * this.m_s1 + l.y * this.m_a1;
          l = l.x * this.m_s2 + l.y * this.m_a2;
          c.x -= this.m_invMassA * m;
          c.y -= this.m_invMassA * h;
          d -= this.m_invIA * p;
          e.x += this.m_invMassB * m;
          e.y += this.m_invMassB * h;
          f += this.m_invIB * l;
          a.m_sweep.a = d;
          b.m_sweep.a = f;
          a.synchronizeTransform();
          b.synchronizeTransform();
          return g <= ea.b2_linearSlop ? 0 <= ea.b2_angularSlop : !1
        },
        m_localAnchor1: null,
        m_localAnchor2: null,
        m_localXAxis1: null,
        m_localYAxis1: null,
        m_axis: null,
        m_perp: null,
        m_s1: null,
        m_s2: null,
        m_a1: null,
        m_a2: null,
        m_K: null,
        m_impulse: null,
        m_motorMass: null,
        m_motorImpulse: null,
        m_lowerTranslation: null,
        m_upperTranslation: null,
        m_maxMotorForce: null,
        m_motorSpeed: null,
        m_enableLimit: null,
        m_enableMotor: null,
        m_limitState: null,
        __class__: Aj
      });
      var Ph = function() {
        $c.call(this);
        this.localAnchorA = new C;
        this.localAnchorB = new C;
        this.localAxisA = new C;
        this.type = 7;
        var a = this.localAxisA,
          b = 1,
          c = 0;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        this.enableLimit = !1;
        this.upperTranslation = this.lowerTranslation =
          0;
        this.enableMotor = !1;
        this.motorSpeed = this.maxMotorForce = 0
      };
      k["box2D.dynamics.joints.B2LineJointDef"] = Ph;
      Ph.__name__ = "box2D.dynamics.joints.B2LineJointDef";
      Ph.__super__ = $c;
      Ph.prototype = t($c.prototype, {
        initialize: function(a, b, c, d) {
          this.bodyA = a;
          this.bodyB = b;
          this.localAnchorA = this.bodyA.getLocalPoint(c);
          this.localAnchorB = this.bodyB.getLocalPoint(c);
          this.localAxisA = this.bodyA.getLocalVector(d)
        },
        localAnchorA: null,
        localAnchorB: null,
        localAxisA: null,
        enableLimit: null,
        lowerTranslation: null,
        upperTranslation: null,
        enableMotor: null,
        maxMotorForce: null,
        motorSpeed: null,
        __class__: Ph
      });
      var Ik = function(a) {
        Vb.call(this, a);
        this.K = new Fc;
        this.K1 = new Fc;
        this.K2 = new Fc;
        this.m_localAnchor = new C;
        this.m_target = new C;
        this.m_impulse = new C;
        this.m_mass = new Fc;
        this.m_C = new C;
        var b = this.m_target,
          c = a.target;
        b.x = c.x;
        b.y = c.y;
        b = this.m_target.x - this.m_bodyB.m_xf.position.x;
        c = this.m_target.y - this.m_bodyB.m_xf.position.y;
        var d = this.m_bodyB.m_xf.R;
        this.m_localAnchor.x = b * d.col1.x + c * d.col1.y;
        this.m_localAnchor.y = b * d.col2.x + c * d.col2.y;
        this.m_maxForce =
          a.maxForce;
        b = this.m_impulse;
        b.x = 0;
        b.y = 0;
        this.m_frequencyHz = a.frequencyHz;
        this.m_dampingRatio = a.dampingRatio;
        this.m_gamma = this.m_beta = 0
      };
      k["box2D.dynamics.joints.B2MouseJoint"] = Ik;
      Ik.__name__ = "box2D.dynamics.joints.B2MouseJoint";
      Ik.__super__ = Vb;
      Ik.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_target
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor)
        },
        getReactionForce: function(a) {
          return new C(a * this.m_impulse.x, a * this.m_impulse.y)
        },
        getReactionTorque: function(a) {
          return 0
        },
        getTarget: function() {
          return this.m_target
        },
        setTarget: function(a) {
          0 == this.m_bodyB.isAwake() && this.m_bodyB.setAwake(!0);
          this.m_target = a
        },
        getMaxForce: function() {
          return this.m_maxForce
        },
        setMaxForce: function(a) {
          this.m_maxForce = a
        },
        getFrequency: function() {
          return this.m_frequencyHz
        },
        setFrequency: function(a) {
          this.m_frequencyHz = a
        },
        getDampingRatio: function() {
          return this.m_dampingRatio
        },
        setDampingRatio: function(a) {
          this.m_dampingRatio = a
        },
        K: null,
        K1: null,
        K2: null,
        initVelocityConstraints: function(a) {
          var b = this.m_bodyB,
            c = b.getMass(),
            d = 2 * Math.PI * this.m_frequencyHz,
            e = c * d * d;
          this.m_gamma = a.dt * (2 * c * this.m_dampingRatio * d + a.dt * e);
          this.m_gamma = 0 != this.m_gamma ? 1 / this.m_gamma : 0;
          this.m_beta = a.dt * e * this.m_gamma;
          e = b.m_xf.R;
          c = this.m_localAnchor.x - b.m_sweep.localCenter.x;
          d = this.m_localAnchor.y - b.m_sweep.localCenter.y;
          var f = e.col1.x * c + e.col2.x * d;
          d = e.col1.y * c + e.col2.y * d;
          c = f;
          e = b.m_invMass;
          f = b.m_invI;
          this.K1.col1.x = e;
          this.K1.col2.x = 0;
          this.K1.col1.y = 0;
          this.K1.col2.y = e;
          this.K2.col1.x = f * d * d;
          this.K2.col2.x = -f * c * d;
          this.K2.col1.y = -f * c *
            d;
          this.K2.col2.y = f * c * c;
          this.K.setM(this.K1);
          this.K.addM(this.K2);
          this.K.col1.x += this.m_gamma;
          this.K.col2.y += this.m_gamma;
          this.K.getInverse(this.m_mass);
          this.m_C.x = b.m_sweep.c.x + c - this.m_target.x;
          this.m_C.y = b.m_sweep.c.y + d - this.m_target.y;
          b.m_angularVelocity *= .98;
          this.m_impulse.x *= a.dtRatio;
          this.m_impulse.y *= a.dtRatio;
          b.m_linearVelocity.x += e * this.m_impulse.x;
          b.m_linearVelocity.y += e * this.m_impulse.y;
          b.m_angularVelocity += f * (c * this.m_impulse.y - d * this.m_impulse.x)
        },
        solveVelocityConstraints: function(a) {
          var b =
            this.m_bodyB,
            c = b.m_xf.R,
            d = this.m_localAnchor.x - b.m_sweep.localCenter.x,
            e = this.m_localAnchor.y - b.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          f = b.m_linearVelocity.x + -b.m_angularVelocity * e;
          var g = b.m_linearVelocity.y + b.m_angularVelocity * d;
          c = this.m_mass;
          f = f + this.m_beta * this.m_C.x + this.m_gamma * this.m_impulse.x;
          var h = g + this.m_beta * this.m_C.y + this.m_gamma * this.m_impulse.y;
          g = -(c.col1.x * f + c.col2.x * h);
          h = -(c.col1.y * f + c.col2.y * h);
          c = this.m_impulse.x;
          f = this.m_impulse.y;
          this.m_impulse.x +=
            g;
          this.m_impulse.y += h;
          a = a.dt * this.m_maxForce;
          this.m_impulse.lengthSquared() > a * a && this.m_impulse.multiply(a / this.m_impulse.length());
          g = this.m_impulse.x - c;
          h = this.m_impulse.y - f;
          b.m_linearVelocity.x += b.m_invMass * g;
          b.m_linearVelocity.y += b.m_invMass * h;
          b.m_angularVelocity += b.m_invI * (d * h - e * g)
        },
        solvePositionConstraints: function(a) {
          return !0
        },
        m_localAnchor: null,
        m_target: null,
        m_impulse: null,
        m_mass: null,
        m_C: null,
        m_maxForce: null,
        m_frequencyHz: null,
        m_dampingRatio: null,
        m_beta: null,
        m_gamma: null,
        __class__: Ik
      });
      var Jk =
        function() {
          $c.call(this);
          this.target = new C;
          this.type = 5;
          this.maxForce = 0;
          this.frequencyHz = 5;
          this.dampingRatio = .7
        };
      k["box2D.dynamics.joints.B2MouseJointDef"] = Jk;
      Jk.__name__ = "box2D.dynamics.joints.B2MouseJointDef";
      Jk.__super__ = $c;
      Jk.prototype = t($c.prototype, {
        target: null,
        maxForce: null,
        frequencyHz: null,
        dampingRatio: null,
        __class__: Jk
      });
      var ti = function(a) {
        Vb.call(this, a);
        this.m_localAnchor1 = new C;
        this.m_localAnchor2 = new C;
        this.m_localXAxis1 = new C;
        this.m_localYAxis1 = new C;
        this.m_axis = new C;
        this.m_perp = new C;
        this.m_K = new Lh;
        this.m_impulse = new bf;
        var b = this.m_localAnchor1,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchor2;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localXAxis1;
        c = a.localAxisA;
        b.x = c.x;
        b.y = c.y;
        this.m_localYAxis1.x = -this.m_localXAxis1.y;
        this.m_localYAxis1.y = this.m_localXAxis1.x;
        this.m_refAngle = a.referenceAngle;
        this.m_impulse.setZero();
        this.m_motorImpulse = this.m_motorMass = 0;
        this.m_lowerTranslation = a.lowerTranslation;
        this.m_upperTranslation = a.upperTranslation;
        this.m_maxMotorForce = a.maxMotorForce;
        this.m_motorSpeed = a.motorSpeed;
        this.m_enableLimit = a.enableLimit;
        this.m_enableMotor = a.enableMotor;
        this.m_limitState = 0;
        b = this.m_axis;
        b.x = 0;
        b.y = 0;
        b = this.m_perp;
        b.x = 0;
        b.y = 0
      };
      k["box2D.dynamics.joints.B2PrismaticJoint"] = ti;
      ti.__name__ = "box2D.dynamics.joints.B2PrismaticJoint";
      ti.__super__ = Vb;
      ti.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchor1)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor2)
        },
        getReactionForce: function(a) {
          return new C(a *
            (this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x), a * (this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y))
        },
        getReactionTorque: function(a) {
          return a * this.m_impulse.y
        },
        getJointTranslation: function() {
          var a = this.m_bodyA,
            b = this.m_bodyB,
            c = a.getWorldPoint(this.m_localAnchor1),
            d = b.getWorldPoint(this.m_localAnchor2);
          b = d.x - c.x;
          c = d.y - c.y;
          a = a.getWorldVector(this.m_localXAxis1);
          return a.x * b + a.y * c
        },
        getJointSpeed: function() {
          var a = this.m_bodyA,
            b =
            this.m_bodyB,
            c = a.m_xf.R,
            d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
            e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          c = b.m_xf.R;
          var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
            h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
          f = c.col1.x * g + c.col2.x * h;
          h = c.col1.y * g + c.col2.y * h;
          g = f;
          c = b.m_sweep.c.x + g - (a.m_sweep.c.x + d);
          f = b.m_sweep.c.y + h - (a.m_sweep.c.y + e);
          var m = a.getWorldVector(this.m_localXAxis1),
            l = a.m_linearVelocity,
            y = b.m_linearVelocity;
          a = a.m_angularVelocity;
          b = b.m_angularVelocity;
          return c * -a * m.y + f * a * m.x + (m.x * (y.x + -b * h - l.x - -a * e) + m.y * (y.y + b * g - l.y - a * d))
        },
        isLimitEnabled: function() {
          return this.m_enableLimit
        },
        enableLimit: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_enableLimit = a
        },
        getLowerLimit: function() {
          return this.m_lowerTranslation
        },
        getUpperLimit: function() {
          return this.m_upperTranslation
        },
        setLimits: function(a, b) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_lowerTranslation = a;
          this.m_upperTranslation = b
        },
        isMotorEnabled: function() {
          return this.m_enableMotor
        },
        enableMotor: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_enableMotor = a
        },
        setMotorSpeed: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_motorSpeed = a
        },
        getMotorSpeed: function() {
          return this.m_motorSpeed
        },
        setMaxMotorForce: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_maxMotorForce = a
        },
        getMotorForce: function() {
          return this.m_motorImpulse
        },
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = this.m_localCenterA,
            e = b.getLocalCenter();
          d.x = e.x;
          d.y = e.y;
          d = this.m_localCenterB;
          e = c.getLocalCenter();
          d.x = e.x;
          d.y = e.y;
          var f = b.getTransform();
          c.getTransform();
          var g = b.m_xf.R,
            h = this.m_localAnchor1.x - this.m_localCenterA.x,
            m = this.m_localAnchor1.y - this.m_localCenterA.y,
            l = g.col1.x * h + g.col2.x * m;
          m = g.col1.y * h + g.col2.y * m;
          h = l;
          g = c.m_xf.R;
          var y = this.m_localAnchor2.x - this.m_localCenterB.x,
            n = this.m_localAnchor2.y - this.m_localCenterB.y;
          l = g.col1.x * y + g.col2.x * n;
          n = g.col1.y * y + g.col2.y * n;
          y = l;
          g = c.m_sweep.c.x + y - b.m_sweep.c.x - h;
          l = c.m_sweep.c.y + n - b.m_sweep.c.y - m;
          this.m_invMassA = b.m_invMass;
          this.m_invMassB = c.m_invMass;
          this.m_invIA = b.m_invI;
          this.m_invIB = c.m_invI;
          d = this.m_axis;
          e = P.mulMV(f.R, this.m_localXAxis1);
          d.x = e.x;
          d.y = e.y;
          this.m_a1 = (g + h) * this.m_axis.y - (l + m) * this.m_axis.x;
          this.m_a2 = y * this.m_axis.y - n * this.m_axis.x;
          this.m_motorMass = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_a1 * this.m_a1 + this.m_invIB * this.m_a2 * this.m_a2;
          this.m_motorMass > Number.MIN_VALUE && (this.m_motorMass = 1 / this.m_motorMass);
          d = this.m_perp;
          e = P.mulMV(f.R, this.m_localYAxis1);
          d.x = e.x;
          d.y =
            e.y;
          this.m_s1 = (g + h) * this.m_perp.y - (l + m) * this.m_perp.x;
          this.m_s2 = y * this.m_perp.y - n * this.m_perp.x;
          f = this.m_invMassA;
          h = this.m_invMassB;
          m = this.m_invIA;
          y = this.m_invIB;
          this.m_K.col1.x = f + h + m * this.m_s1 * this.m_s1 + y * this.m_s2 * this.m_s2;
          this.m_K.col1.y = m * this.m_s1 + y * this.m_s2;
          this.m_K.col1.z = m * this.m_s1 * this.m_a1 + y * this.m_s2 * this.m_a2;
          this.m_K.col2.x = this.m_K.col1.y;
          this.m_K.col2.y = m + y;
          this.m_K.col2.z = m * this.m_a1 + y * this.m_a2;
          this.m_K.col3.x = this.m_K.col1.z;
          this.m_K.col3.y = this.m_K.col2.z;
          this.m_K.col3.z = f + h +
            m * this.m_a1 * this.m_a1 + y * this.m_a2 * this.m_a2;
          this.m_enableLimit ? (g = this.m_axis.x * g + this.m_axis.y * l, P.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * ea.b2_linearSlop ? this.m_limitState = 3 : g <= this.m_lowerTranslation ? 1 != this.m_limitState && (this.m_limitState = 1, this.m_impulse.z = 0) : g >= this.m_upperTranslation ? 2 != this.m_limitState && (this.m_limitState = 2, this.m_impulse.z = 0) : (this.m_limitState = 0, this.m_impulse.z = 0)) : this.m_limitState = 0;
          0 == this.m_enableMotor && (this.m_motorImpulse = 0);
          a.warmStarting ? (this.m_impulse.x *=
            a.dtRatio, this.m_impulse.y *= a.dtRatio, this.m_motorImpulse *= a.dtRatio, a = this.m_impulse.x * this.m_perp.x + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x, g = this.m_impulse.x * this.m_perp.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y, l = this.m_impulse.x * this.m_s1 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1, f = this.m_impulse.x * this.m_s2 + this.m_impulse.y + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2, b.m_linearVelocity.x -= this.m_invMassA * a, b.m_linearVelocity.y -= this.m_invMassA *
            g, b.m_angularVelocity -= this.m_invIA * l, c.m_linearVelocity.x += this.m_invMassB * a, c.m_linearVelocity.y += this.m_invMassB * g, c.m_angularVelocity += this.m_invIB * f) : (this.m_impulse.setZero(), this.m_motorImpulse = 0)
        },
        solveVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_linearVelocity,
            e = b.m_angularVelocity,
            f = c.m_linearVelocity,
            g = c.m_angularVelocity;
          if (this.m_enableMotor && 3 != this.m_limitState) {
            var h = this.m_motorMass * (this.m_motorSpeed - (this.m_axis.x * (f.x - d.x) + this.m_axis.y * (f.y - d.y) + this.m_a2 *
              g - this.m_a1 * e));
            var m = this.m_motorImpulse;
            a = a.dt * this.m_maxMotorForce;
            this.m_motorImpulse = P.clamp(this.m_motorImpulse + h, -a, a);
            h = this.m_motorImpulse - m;
            m = h * this.m_axis.x;
            a = h * this.m_axis.y;
            var l = h * this.m_a1;
            h *= this.m_a2;
            d.x -= this.m_invMassA * m;
            d.y -= this.m_invMassA * a;
            e -= this.m_invIA * l;
            f.x += this.m_invMassB * m;
            f.y += this.m_invMassB * a;
            g += this.m_invIB * h
          }
          l = this.m_perp.x * (f.x - d.x) + this.m_perp.y * (f.y - d.y) + this.m_s2 * g - this.m_s1 * e;
          a = g - e;
          this.m_enableLimit && 0 != this.m_limitState ? (h = this.m_axis.x * (f.x - d.x) + this.m_axis.y *
            (f.y - d.y) + this.m_a2 * g - this.m_a1 * e, m = this.m_impulse.copy(), h = this.m_K.solve33(new bf, -l, -a, -h), this.m_impulse.add(h), 1 == this.m_limitState ? this.m_impulse.z = P.max(this.m_impulse.z, 0) : 2 == this.m_limitState && (this.m_impulse.z = P.min(this.m_impulse.z, 0)), l = -l - (this.m_impulse.z - m.z) * this.m_K.col3.x, a = -a - (this.m_impulse.z - m.z) * this.m_K.col3.y, a = this.m_K.solve22(new C, l, a), a.x += m.x, a.y += m.y, this.m_impulse.x = a.x, this.m_impulse.y = a.y, h.x = this.m_impulse.x - m.x, h.y = this.m_impulse.y - m.y, h.z = this.m_impulse.z - m.z, m =
            h.x * this.m_perp.x + h.z * this.m_axis.x, a = h.x * this.m_perp.y + h.z * this.m_axis.y, l = h.x * this.m_s1 + h.y + h.z * this.m_a1, h = h.x * this.m_s2 + h.y + h.z * this.m_a2) : (h = this.m_K.solve22(new C, -l, -a), this.m_impulse.x += h.x, this.m_impulse.y += h.y, m = h.x * this.m_perp.x, a = h.x * this.m_perp.y, l = h.x * this.m_s1 + h.y, h = h.x * this.m_s2 + h.y);
          d.x -= this.m_invMassA * m;
          d.y -= this.m_invMassA * a;
          e -= this.m_invIA * l;
          f.x += this.m_invMassB * m;
          f.y += this.m_invMassB * a;
          g += this.m_invIB * h;
          h = b.m_linearVelocity;
          h.x = d.x;
          h.y = d.y;
          b.m_angularVelocity = e;
          h = c.m_linearVelocity;
          h.x = f.x;
          h.y = f.y;
          c.m_angularVelocity = g
        },
        solvePositionConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_sweep.c,
            d = a.m_sweep.a,
            e = b.m_sweep.c,
            f = b.m_sweep.a,
            g = 0;
          var h = !1;
          var m = 0,
            l = Fc.fromAngle(d),
            y = Fc.fromAngle(f);
          var n = l;
          var p = this.m_localAnchor1.x - this.m_localCenterA.x;
          var k = this.m_localAnchor1.y - this.m_localCenterA.y;
          var q = n.col1.x * p + n.col2.x * k;
          k = n.col1.y * p + n.col2.y * k;
          p = q;
          n = y;
          y = this.m_localAnchor2.x - this.m_localCenterB.x;
          var u = this.m_localAnchor2.y - this.m_localCenterB.y;
          q = n.col1.x * y + n.col2.x *
            u;
          u = n.col1.y * y + n.col2.y * u;
          y = q;
          n = e.x + y - c.x - p;
          q = e.y + u - c.y - k;
          if (this.m_enableLimit) {
            this.m_axis = P.mulMV(l, this.m_localXAxis1);
            this.m_a1 = (n + p) * this.m_axis.y - (q + k) * this.m_axis.x;
            this.m_a2 = y * this.m_axis.y - u * this.m_axis.x;
            var v = this.m_axis.x * n + this.m_axis.y * q;
            P.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2 * ea.b2_linearSlop ? (m = P.clamp(v, -ea.b2_maxLinearCorrection, ea.b2_maxLinearCorrection), g = P.abs(v), h = !0) : v <= this.m_lowerTranslation ? (m = P.clamp(v - this.m_lowerTranslation + ea.b2_linearSlop, -ea.b2_maxLinearCorrection,
              0), g = this.m_lowerTranslation - v, h = !0) : v >= this.m_upperTranslation && (m = P.clamp(v - this.m_upperTranslation + ea.b2_linearSlop, 0, ea.b2_maxLinearCorrection), g = v - this.m_upperTranslation, h = !0)
          }
          this.m_perp = P.mulMV(l, this.m_localYAxis1);
          this.m_s1 = (n + p) * this.m_perp.y - (q + k) * this.m_perp.x;
          this.m_s2 = y * this.m_perp.y - u * this.m_perp.x;
          l = new bf;
          k = this.m_perp.x * n + this.m_perp.y * q;
          y = f - d - this.m_refAngle;
          g = P.max(g, P.abs(k));
          p = P.abs(y);
          h ? (h = this.m_invMassA, u = this.m_invMassB, n = this.m_invIA, q = this.m_invIB, this.m_K.col1.x = h + u +
            n * this.m_s1 * this.m_s1 + q * this.m_s2 * this.m_s2, this.m_K.col1.y = n * this.m_s1 + q * this.m_s2, this.m_K.col1.z = n * this.m_s1 * this.m_a1 + q * this.m_s2 * this.m_a2, this.m_K.col2.x = this.m_K.col1.y, this.m_K.col2.y = n + q, this.m_K.col2.z = n * this.m_a1 + q * this.m_a2, this.m_K.col3.x = this.m_K.col1.z, this.m_K.col3.y = this.m_K.col2.z, this.m_K.col3.z = h + u + n * this.m_a1 * this.m_a1 + q * this.m_a2 * this.m_a2, this.m_K.solve33(l, -k, -y, -m)) : (h = this.m_invMassA, u = this.m_invMassB, n = this.m_invIA, q = this.m_invIB, m = n * this.m_s1 + q * this.m_s2, v = n + q, this.m_K.col1.set(h +
            u + n * this.m_s1 * this.m_s1 + q * this.m_s2 * this.m_s2, m, 0), this.m_K.col2.set(m, v, 0), m = this.m_K.solve22(new C, -k, -y), l.x = m.x, l.y = m.y, l.z = 0);
          m = l.x * this.m_perp.x + l.z * this.m_axis.x;
          h = l.x * this.m_perp.y + l.z * this.m_axis.y;
          k = l.x * this.m_s1 + l.y + l.z * this.m_a1;
          l = l.x * this.m_s2 + l.y + l.z * this.m_a2;
          c.x -= this.m_invMassA * m;
          c.y -= this.m_invMassA * h;
          d -= this.m_invIA * k;
          e.x += this.m_invMassB * m;
          e.y += this.m_invMassB * h;
          f += this.m_invIB * l;
          a.m_sweep.a = d;
          b.m_sweep.a = f;
          a.synchronizeTransform();
          b.synchronizeTransform();
          return g <= ea.b2_linearSlop ?
            p <= ea.b2_angularSlop : !1
        },
        m_localAnchor1: null,
        m_localAnchor2: null,
        m_localXAxis1: null,
        m_localYAxis1: null,
        m_refAngle: null,
        m_axis: null,
        m_perp: null,
        m_s1: null,
        m_s2: null,
        m_a1: null,
        m_a2: null,
        m_K: null,
        m_impulse: null,
        m_motorMass: null,
        m_motorImpulse: null,
        m_lowerTranslation: null,
        m_upperTranslation: null,
        m_maxMotorForce: null,
        m_motorSpeed: null,
        m_enableLimit: null,
        m_enableMotor: null,
        m_limitState: null,
        __class__: ti
      });
      var Kk = function() {
        $c.call(this);
        this.localAnchorA = new C;
        this.localAnchorB = new C;
        this.localAxisA = new C;
        this.type = 2;
        var a = this.localAxisA,
          b = 1,
          c = 0;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        this.referenceAngle = 0;
        this.enableLimit = !1;
        this.upperTranslation = this.lowerTranslation = 0;
        this.enableMotor = !1;
        this.motorSpeed = this.maxMotorForce = 0
      };
      k["box2D.dynamics.joints.B2PrismaticJointDef"] = Kk;
      Kk.__name__ = "box2D.dynamics.joints.B2PrismaticJointDef";
      Kk.__super__ = $c;
      Kk.prototype = t($c.prototype, {
        initialize: function(a, b, c, d) {
          this.bodyA = a;
          this.bodyB = b;
          this.localAnchorA = this.bodyA.getLocalPoint(c);
          this.localAnchorB = this.bodyB.getLocalPoint(c);
          this.localAxisA = this.bodyA.getLocalVector(d);
          this.referenceAngle = this.bodyB.getAngle() - this.bodyA.getAngle()
        },
        localAnchorA: null,
        localAnchorB: null,
        localAxisA: null,
        referenceAngle: null,
        enableLimit: null,
        lowerTranslation: null,
        upperTranslation: null,
        enableMotor: null,
        maxMotorForce: null,
        motorSpeed: null,
        __class__: Kk
      });
      var vg = function(a) {
        Vb.call(this, a);
        this.m_groundAnchor1 = new C;
        this.m_groundAnchor2 = new C;
        this.m_localAnchor1 = new C;
        this.m_localAnchor2 = new C;
        this.m_u1 = new C;
        this.m_u2 = new C;
        this.m_ground = this.m_bodyA.m_world.m_groundBody;
        this.m_groundAnchor1.x = a.groundAnchorA.x - this.m_ground.m_xf.position.x;
        this.m_groundAnchor1.y = a.groundAnchorA.y - this.m_ground.m_xf.position.y;
        this.m_groundAnchor2.x = a.groundAnchorB.x - this.m_ground.m_xf.position.x;
        this.m_groundAnchor2.y = a.groundAnchorB.y - this.m_ground.m_xf.position.y;
        var b = this.m_localAnchor1,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchor2;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        this.m_ratio = a.ratio;
        this.m_constant = a.lengthA + this.m_ratio * a.lengthB;
        this.m_maxLength1 = P.min(a.maxLengthA,
          this.m_constant - this.m_ratio * vg.b2_minPulleyLength);
        this.m_maxLength2 = P.min(a.maxLengthB, (this.m_constant - vg.b2_minPulleyLength) / this.m_ratio);
        this.m_limitImpulse2 = this.m_limitImpulse1 = this.m_impulse = 0
      };
      k["box2D.dynamics.joints.B2PulleyJoint"] = vg;
      vg.__name__ = "box2D.dynamics.joints.B2PulleyJoint";
      vg.__super__ = Vb;
      vg.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchor1)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor2)
        },
        getReactionForce: function(a) {
          return new C(a *
            this.m_impulse * this.m_u2.x, a * this.m_impulse * this.m_u2.y)
        },
        getReactionTorque: function(a) {
          return 0
        },
        getGroundAnchorA: function() {
          var a = this.m_ground.m_xf.position.copy();
          a.add(this.m_groundAnchor1);
          return a
        },
        getGroundAnchorB: function() {
          var a = this.m_ground.m_xf.position.copy();
          a.add(this.m_groundAnchor2);
          return a
        },
        getLength1: function() {
          var a = this.m_bodyA.getWorldPoint(this.m_localAnchor1),
            b = a.x - (this.m_ground.m_xf.position.x + this.m_groundAnchor1.x);
          a = a.y - (this.m_ground.m_xf.position.y + this.m_groundAnchor1.y);
          return Math.sqrt(b * b + a * a)
        },
        getLength2: function() {
          var a = this.m_bodyB.getWorldPoint(this.m_localAnchor2),
            b = a.x - (this.m_ground.m_xf.position.x + this.m_groundAnchor2.x);
          a = a.y - (this.m_ground.m_xf.position.y + this.m_groundAnchor2.y);
          return Math.sqrt(b * b + a * a)
        },
        getRatio: function() {
          return this.m_ratio
        },
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_xf.R,
            e = this.m_localAnchor1.x - b.m_sweep.localCenter.x,
            f = this.m_localAnchor1.y - b.m_sweep.localCenter.y,
            g = d.col1.x * e + d.col2.x * f;
          f = d.col1.y *
            e + d.col2.y * f;
          e = g;
          d = c.m_xf.R;
          var h = this.m_localAnchor2.x - c.m_sweep.localCenter.x,
            m = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
          g = d.col1.x * h + d.col2.x * m;
          m = d.col1.y * h + d.col2.y * m;
          h = g;
          g = c.m_sweep.c.x + h;
          var l = c.m_sweep.c.y + m,
            y = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x,
            n = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y;
          d = this.m_u1;
          var p = b.m_sweep.c.x + e - (this.m_ground.m_xf.position.x + this.m_groundAnchor1.x),
            q = b.m_sweep.c.y + f - (this.m_ground.m_xf.position.y + this.m_groundAnchor1.y);
          null == q &&
            (q = 0);
          null == p && (p = 0);
          d.x = p;
          d.y = q;
          d = this.m_u2;
          p = g - y;
          q = l - n;
          null == q && (q = 0);
          null == p && (p = 0);
          d.x = p;
          d.y = q;
          g = this.m_u1.length();
          l = this.m_u2.length();
          g > ea.b2_linearSlop ? this.m_u1.multiply(1 / g) : (d = this.m_u1, d.x = 0, d.y = 0);
          l > ea.b2_linearSlop ? this.m_u2.multiply(1 / l) : (d = this.m_u2, d.x = 0, d.y = 0);
          0 < this.m_constant - g - this.m_ratio * l ? this.m_impulse = this.m_state = 0 : this.m_state = 2;
          g < this.m_maxLength1 ? this.m_limitImpulse1 = this.m_limitState1 = 0 : this.m_limitState1 = 2;
          l < this.m_maxLength2 ? this.m_limitImpulse2 = this.m_limitState2 =
            0 : this.m_limitState2 = 2;
          d = e * this.m_u1.y - f * this.m_u1.x;
          g = h * this.m_u2.y - m * this.m_u2.x;
          this.m_limitMass1 = b.m_invMass + b.m_invI * d * d;
          this.m_limitMass2 = c.m_invMass + c.m_invI * g * g;
          this.m_pulleyMass = this.m_limitMass1 + this.m_ratio * this.m_ratio * this.m_limitMass2;
          this.m_limitMass1 = 1 / this.m_limitMass1;
          this.m_limitMass2 = 1 / this.m_limitMass2;
          this.m_pulleyMass = 1 / this.m_pulleyMass;
          a.warmStarting ? (this.m_impulse *= a.dtRatio, this.m_limitImpulse1 *= a.dtRatio, this.m_limitImpulse2 *= a.dtRatio, a = (-this.m_impulse - this.m_limitImpulse1) *
            this.m_u1.x, d = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.y, g = (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) * this.m_u2.x, l = (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) * this.m_u2.y, b.m_linearVelocity.x += b.m_invMass * a, b.m_linearVelocity.y += b.m_invMass * d, b.m_angularVelocity += b.m_invI * (e * d - f * a), c.m_linearVelocity.x += c.m_invMass * g, c.m_linearVelocity.y += c.m_invMass * l, c.m_angularVelocity += c.m_invI * (h * l - m * g)) : this.m_limitImpulse2 = this.m_limitImpulse1 = this.m_impulse = 0
        },
        solveVelocityConstraints: function(a) {
          a =
            this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_xf.R,
            d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
            e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          c = b.m_xf.R;
          var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
            h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
          f = c.col1.x * g + c.col2.x * h;
          h = c.col1.y * g + c.col2.y * h;
          g = f;
          if (2 == this.m_state) {
            c = a.m_linearVelocity.x + -a.m_angularVelocity * e;
            f = a.m_linearVelocity.y + a.m_angularVelocity * d;
            var m = b.m_linearVelocity.x + -b.m_angularVelocity *
              h;
            var l = b.m_linearVelocity.y + b.m_angularVelocity * g;
            c = -(this.m_u1.x * c + this.m_u1.y * f) - this.m_ratio * (this.m_u2.x * m + this.m_u2.y * l);
            l = this.m_pulleyMass * -c;
            c = this.m_impulse;
            this.m_impulse = P.max(0, this.m_impulse + l);
            l = this.m_impulse - c;
            c = -l * this.m_u1.x;
            f = -l * this.m_u1.y;
            m = -this.m_ratio * l * this.m_u2.x;
            l = -this.m_ratio * l * this.m_u2.y;
            a.m_linearVelocity.x += a.m_invMass * c;
            a.m_linearVelocity.y += a.m_invMass * f;
            a.m_angularVelocity += a.m_invI * (d * f - e * c);
            b.m_linearVelocity.x += b.m_invMass * m;
            b.m_linearVelocity.y += b.m_invMass *
              l;
            b.m_angularVelocity += b.m_invI * (g * l - h * m)
          }
          2 == this.m_limitState1 && (c = a.m_linearVelocity.x + -a.m_angularVelocity * e, f = a.m_linearVelocity.y + a.m_angularVelocity * d, c = -(this.m_u1.x * c + this.m_u1.y * f), l = -this.m_limitMass1 * c, c = this.m_limitImpulse1, this.m_limitImpulse1 = P.max(0, this.m_limitImpulse1 + l), l = this.m_limitImpulse1 - c, c = -l * this.m_u1.x, f = -l * this.m_u1.y, a.m_linearVelocity.x += a.m_invMass * c, a.m_linearVelocity.y += a.m_invMass * f, a.m_angularVelocity += a.m_invI * (d * f - e * c));
          2 == this.m_limitState2 && (m = b.m_linearVelocity.x +
            -b.m_angularVelocity * h, l = b.m_linearVelocity.y + b.m_angularVelocity * g, c = -(this.m_u2.x * m + this.m_u2.y * l), l = -this.m_limitMass2 * c, c = this.m_limitImpulse2, this.m_limitImpulse2 = P.max(0, this.m_limitImpulse2 + l), l = this.m_limitImpulse2 - c, m = -l * this.m_u2.x, l = -l * this.m_u2.y, b.m_linearVelocity.x += b.m_invMass * m, b.m_linearVelocity.y += b.m_invMass * l, b.m_angularVelocity += b.m_invI * (g * l - h * m))
        },
        solvePositionConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x,
            d =
            this.m_ground.m_xf.position.y + this.m_groundAnchor1.y,
            e = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x,
            f = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y,
            g = 0;
          if (2 == this.m_state) {
            var h = a.m_xf.R;
            var m = this.m_localAnchor1.x - a.m_sweep.localCenter.x;
            var l = this.m_localAnchor1.y - a.m_sweep.localCenter.y;
            var y = h.col1.x * m + h.col2.x * l;
            l = h.col1.y * m + h.col2.y * l;
            m = y;
            h = b.m_xf.R;
            var n = this.m_localAnchor2.x - b.m_sweep.localCenter.x;
            var p = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
            y = h.col1.x * n + h.col2.x * p;
            p = h.col1.y * n + h.col2.y * p;
            n = y;
            var q = a.m_sweep.c.x + m;
            var k = a.m_sweep.c.y + l;
            y = b.m_sweep.c.x + n;
            var u = b.m_sweep.c.y + p;
            h = this.m_u1;
            q -= c;
            k -= d;
            null == k && (k = 0);
            null == q && (q = 0);
            h.x = q;
            h.y = k;
            h = this.m_u2;
            q = y - e;
            k = u - f;
            null == k && (k = 0);
            null == q && (q = 0);
            h.x = q;
            h.y = k;
            y = this.m_u1.length();
            k = this.m_u2.length();
            y > ea.b2_linearSlop ? this.m_u1.multiply(1 / y) : (h = this.m_u1, h.x = 0, h.y = 0);
            k > ea.b2_linearSlop ? this.m_u2.multiply(1 / k) : (h = this.m_u2, h.x = 0, h.y = 0);
            h = this.m_constant - y - this.m_ratio * k;
            g = P.max(g, -h);
            h = P.clamp(h + ea.b2_linearSlop, -ea.b2_maxLinearCorrection,
              0);
            h *= -this.m_pulleyMass;
            q = -h * this.m_u1.x;
            k = -h * this.m_u1.y;
            y = -this.m_ratio * h * this.m_u2.x;
            u = -this.m_ratio * h * this.m_u2.y;
            a.m_sweep.c.x += a.m_invMass * q;
            a.m_sweep.c.y += a.m_invMass * k;
            a.m_sweep.a += a.m_invI * (m * k - l * q);
            b.m_sweep.c.x += b.m_invMass * y;
            b.m_sweep.c.y += b.m_invMass * u;
            b.m_sweep.a += b.m_invI * (n * u - p * y);
            a.synchronizeTransform();
            b.synchronizeTransform()
          }
          2 == this.m_limitState1 && (h = a.m_xf.R, m = this.m_localAnchor1.x - a.m_sweep.localCenter.x, l = this.m_localAnchor1.y - a.m_sweep.localCenter.y, y = h.col1.x * m + h.col2.x *
            l, l = h.col1.y * m + h.col2.y * l, m = y, q = a.m_sweep.c.x + m, k = a.m_sweep.c.y + l, h = this.m_u1, q -= c, k -= d, null == k && (k = 0), null == q && (q = 0), h.x = q, h.y = k, y = this.m_u1.length(), y > ea.b2_linearSlop ? (this.m_u1.x *= 1 / y, this.m_u1.y *= 1 / y) : (h = this.m_u1, h.x = 0, h.y = 0), h = this.m_maxLength1 - y, g = P.max(g, -h), h = P.clamp(h + ea.b2_linearSlop, -ea.b2_maxLinearCorrection, 0), h *= -this.m_limitMass1, q = -h * this.m_u1.x, k = -h * this.m_u1.y, a.m_sweep.c.x += a.m_invMass * q, a.m_sweep.c.y += a.m_invMass * k, a.m_sweep.a += a.m_invI * (m * k - l * q), a.synchronizeTransform());
          2 ==
            this.m_limitState2 && (h = b.m_xf.R, n = this.m_localAnchor2.x - b.m_sweep.localCenter.x, p = this.m_localAnchor2.y - b.m_sweep.localCenter.y, y = h.col1.x * n + h.col2.x * p, p = h.col1.y * n + h.col2.y * p, n = y, y = b.m_sweep.c.x + n, u = b.m_sweep.c.y + p, h = this.m_u2, q = y - e, k = u - f, null == k && (k = 0), null == q && (q = 0), h.x = q, h.y = k, k = this.m_u2.length(), k > ea.b2_linearSlop ? (this.m_u2.x *= 1 / k, this.m_u2.y *= 1 / k) : (h = this.m_u2, h.x = 0, h.y = 0), h = this.m_maxLength2 - k, g = P.max(g, -h), h = P.clamp(h + ea.b2_linearSlop, -ea.b2_maxLinearCorrection, 0), h *= -this.m_limitMass2,
              y = -h * this.m_u2.x, u = -h * this.m_u2.y, b.m_sweep.c.x += b.m_invMass * y, b.m_sweep.c.y += b.m_invMass * u, b.m_sweep.a += b.m_invI * (n * u - p * y), b.synchronizeTransform());
          return g < ea.b2_linearSlop
        },
        m_ground: null,
        m_groundAnchor1: null,
        m_groundAnchor2: null,
        m_localAnchor1: null,
        m_localAnchor2: null,
        m_u1: null,
        m_u2: null,
        m_constant: null,
        m_ratio: null,
        m_maxLength1: null,
        m_maxLength2: null,
        m_pulleyMass: null,
        m_limitMass1: null,
        m_limitMass2: null,
        m_impulse: null,
        m_limitImpulse1: null,
        m_limitImpulse2: null,
        m_state: null,
        m_limitState1: null,
        m_limitState2: null,
        __class__: vg
      });
      var Lk = function() {
        $c.call(this);
        this.groundAnchorA = new C;
        this.groundAnchorB = new C;
        this.localAnchorA = new C;
        this.localAnchorB = new C;
        this.type = 4;
        var a = this.groundAnchorA,
          b = -1,
          c = 1;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a = this.groundAnchorB;
        c = b = 1;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a = this.localAnchorA;
        b = -1;
        c = 0;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a = this.localAnchorB;
        b = 1;
        c = 0;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        this.maxLengthB = this.lengthB = this.maxLengthA =
          this.lengthA = 0;
        this.ratio = 1;
        this.collideConnected = !0
      };
      k["box2D.dynamics.joints.B2PulleyJointDef"] = Lk;
      Lk.__name__ = "box2D.dynamics.joints.B2PulleyJointDef";
      Lk.__super__ = $c;
      Lk.prototype = t($c.prototype, {
        initialize: function(a, b, c, d, e, f, g) {
          this.bodyA = a;
          this.bodyB = b;
          a = this.groundAnchorA;
          a.x = c.x;
          a.y = c.y;
          a = this.groundAnchorB;
          a.x = d.x;
          a.y = d.y;
          this.localAnchorA = this.bodyA.getLocalPoint(e);
          this.localAnchorB = this.bodyB.getLocalPoint(f);
          a = e.x - c.x;
          c = e.y - c.y;
          this.lengthA = Math.sqrt(a * a + c * c);
          c = f.x - d.x;
          d = f.y - d.y;
          this.lengthB =
            Math.sqrt(c * c + d * d);
          this.ratio = g;
          g = this.lengthA + this.ratio * this.lengthB;
          this.maxLengthA = g - this.ratio * vg.b2_minPulleyLength;
          this.maxLengthB = (g - vg.b2_minPulleyLength) / this.ratio
        },
        groundAnchorA: null,
        groundAnchorB: null,
        localAnchorA: null,
        localAnchorB: null,
        lengthA: null,
        maxLengthA: null,
        lengthB: null,
        maxLengthB: null,
        ratio: null,
        __class__: Lk
      });
      var bg = function(a) {
        Vb.call(this, a);
        this.K = new Fc;
        this.K1 = new Fc;
        this.K2 = new Fc;
        this.K3 = new Fc;
        this.impulse3 = new bf;
        this.impulse2 = new C;
        this.reduced = new C;
        this.m_localAnchor1 =
          new C;
        this.m_localAnchor2 = new C;
        this.m_impulse = new bf;
        this.m_mass = new Lh;
        var b = this.m_localAnchor1,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchor2;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        this.m_referenceAngle = a.referenceAngle;
        this.m_impulse.setZero();
        this.m_motorImpulse = 0;
        this.m_lowerAngle = a.lowerAngle;
        this.m_upperAngle = a.upperAngle;
        this.m_maxMotorTorque = a.maxMotorTorque;
        this.m_motorSpeed = a.motorSpeed;
        this.m_enableLimit = a.enableLimit;
        this.m_enableMotor = a.enableMotor;
        this.m_limitState = 0
      };
      k["box2D.dynamics.joints.B2RevoluteJoint"] =
        bg;
      bg.__name__ = "box2D.dynamics.joints.B2RevoluteJoint";
      bg.__super__ = Vb;
      bg.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchor1)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchor2)
        },
        getReactionForce: function(a) {
          return new C(a * this.m_impulse.x, a * this.m_impulse.y)
        },
        getReactionTorque: function(a) {
          return a * this.m_impulse.z
        },
        getJointAngle: function() {
          return this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle
        },
        getJointSpeed: function() {
          return this.m_bodyB.m_angularVelocity -
            this.m_bodyA.m_angularVelocity
        },
        isLimitEnabled: function() {
          return this.m_enableLimit
        },
        enableLimit: function(a) {
          this.m_enableLimit = a
        },
        getLowerLimit: function() {
          return this.m_lowerAngle
        },
        getUpperLimit: function() {
          return this.m_upperAngle
        },
        setLimits: function(a, b) {
          this.m_lowerAngle = a;
          this.m_upperAngle = b
        },
        isMotorEnabled: function() {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          return this.m_enableMotor
        },
        enableMotor: function(a) {
          this.m_enableMotor = a
        },
        setMotorSpeed: function(a) {
          this.m_bodyA.setAwake(!0);
          this.m_bodyB.setAwake(!0);
          this.m_motorSpeed = a
        },
        getMotorSpeed: function() {
          return this.m_motorSpeed
        },
        setMaxMotorTorque: function(a) {
          this.m_maxMotorTorque = a
        },
        getMotorTorque: function() {
          return this.m_maxMotorTorque
        },
        K: null,
        K1: null,
        K2: null,
        K3: null,
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_xf.R,
            e = this.m_localAnchor1.x - b.m_sweep.localCenter.x,
            f = this.m_localAnchor1.y - b.m_sweep.localCenter.y,
            g = d.col1.x * e + d.col2.x * f;
          f = d.col1.y * e + d.col2.y * f;
          e = g;
          d = c.m_xf.R;
          var h = this.m_localAnchor2.x -
            c.m_sweep.localCenter.x,
            m = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
          g = d.col1.x * h + d.col2.x * m;
          m = d.col1.y * h + d.col2.y * m;
          h = g;
          d = b.m_invMass;
          g = c.m_invMass;
          var l = b.m_invI,
            y = c.m_invI;
          this.m_mass.col1.x = d + g + f * f * l + m * m * y;
          this.m_mass.col2.x = -f * e * l - m * h * y;
          this.m_mass.col3.x = -f * l - m * y;
          this.m_mass.col1.y = this.m_mass.col2.x;
          this.m_mass.col2.y = d + g + e * e * l + h * h * y;
          this.m_mass.col3.y = e * l + h * y;
          this.m_mass.col1.z = this.m_mass.col3.x;
          this.m_mass.col2.z = this.m_mass.col3.y;
          this.m_mass.col3.z = l + y;
          this.m_motorMass = 1 / (l + y);
          0 == this.m_enableMotor &&
            (this.m_motorImpulse = 0);
          if (this.m_enableLimit) {
            var n = c.m_sweep.a - b.m_sweep.a - this.m_referenceAngle;
            P.abs(this.m_upperAngle - this.m_lowerAngle) < 2 * ea.b2_angularSlop ? this.m_limitState = 3 : n <= this.m_lowerAngle ? (1 != this.m_limitState && (this.m_impulse.z = 0), this.m_limitState = 1) : n >= this.m_upperAngle ? (2 != this.m_limitState && (this.m_impulse.z = 0), this.m_limitState = 2) : (this.m_limitState = 0, this.m_impulse.z = 0)
          } else this.m_limitState = 0;
          a.warmStarting ? (this.m_impulse.x *= a.dtRatio, this.m_impulse.y *= a.dtRatio, this.m_motorImpulse *=
            a.dtRatio, a = this.m_impulse.x, n = this.m_impulse.y, b.m_linearVelocity.x -= d * a, b.m_linearVelocity.y -= d * n, b.m_angularVelocity -= l * (e * n - f * a + this.m_motorImpulse + this.m_impulse.z), c.m_linearVelocity.x += g * a, c.m_linearVelocity.y += g * n, c.m_angularVelocity += y * (h * n - m * a + this.m_motorImpulse + this.m_impulse.z)) : (this.m_impulse.setZero(), this.m_motorImpulse = 0)
        },
        impulse3: null,
        impulse2: null,
        reduced: null,
        solveVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_linearVelocity,
            e = b.m_angularVelocity,
            f = c.m_linearVelocity,
            g = c.m_angularVelocity,
            h = b.m_invMass,
            m = c.m_invMass,
            l = b.m_invI,
            y = c.m_invI;
          if (this.m_enableMotor && 3 != this.m_limitState) {
            var n = this.m_motorMass * -(g - e - this.m_motorSpeed);
            var p = this.m_motorImpulse;
            a = a.dt * this.m_maxMotorTorque;
            this.m_motorImpulse = P.clamp(this.m_motorImpulse + n, -a, a);
            n = this.m_motorImpulse - p;
            e -= l * n;
            g += y * n
          }
          if (this.m_enableLimit && 0 != this.m_limitState) {
            var k = b.m_xf.R;
            n = this.m_localAnchor1.x - b.m_sweep.localCenter.x;
            p = this.m_localAnchor1.y - b.m_sweep.localCenter.y;
            var q = k.col1.x * n + k.col2.x * p;
            p = k.col1.y *
              n + k.col2.y * p;
            n = q;
            k = c.m_xf.R;
            a = this.m_localAnchor2.x - c.m_sweep.localCenter.x;
            var u = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
            q = k.col1.x * a + k.col2.x * u;
            u = k.col1.y * a + k.col2.y * u;
            a = q;
            q = f.x + -g * u - d.x - -e * p;
            var v = f.y + g * a - d.y - e * n;
            this.m_mass.solve33(this.impulse3, -q, -v, -(g - e));
            3 == this.m_limitState ? this.m_impulse.add(this.impulse3) : 1 == this.m_limitState ? (k = this.m_impulse.z + this.impulse3.z, 0 > k && (this.m_mass.solve22(this.reduced, -q, -v), this.impulse3.x = this.reduced.x, this.impulse3.y = this.reduced.y, this.impulse3.z = -this.m_impulse.z, this.m_impulse.x += this.reduced.x, this.m_impulse.y += this.reduced.y, this.m_impulse.z = 0)) : 2 == this.m_limitState && (k = this.m_impulse.z + this.impulse3.z, 0 < k && (this.m_mass.solve22(this.reduced, -q, -v), this.impulse3.x = this.reduced.x, this.impulse3.y = this.reduced.y, this.impulse3.z = -this.m_impulse.z, this.m_impulse.x += this.reduced.x, this.m_impulse.y += this.reduced.y, this.m_impulse.z = 0));
            d.x -= h * this.impulse3.x;
            d.y -= h * this.impulse3.y;
            e -= l * (n * this.impulse3.y - p * this.impulse3.x + this.impulse3.z);
            f.x +=
              m * this.impulse3.x;
            f.y += m * this.impulse3.y;
            g += y * (a * this.impulse3.y - u * this.impulse3.x + this.impulse3.z)
          } else k = b.m_xf.R, n = this.m_localAnchor1.x - b.m_sweep.localCenter.x, p = this.m_localAnchor1.y - b.m_sweep.localCenter.y, q = k.col1.x * n + k.col2.x * p, p = k.col1.y * n + k.col2.y * p, n = q, k = c.m_xf.R, a = this.m_localAnchor2.x - c.m_sweep.localCenter.x, u = this.m_localAnchor2.y - c.m_sweep.localCenter.y, q = k.col1.x * a + k.col2.x * u, u = k.col1.y * a + k.col2.y * u, a = q, this.m_mass.solve22(this.impulse2, -(f.x + -g * u - d.x - -e * p), -(f.y + g * a - d.y - e * n)), this.m_impulse.x +=
            this.impulse2.x, this.m_impulse.y += this.impulse2.y, d.x -= h * this.impulse2.x, d.y -= h * this.impulse2.y, e -= l * (n * this.impulse2.y - p * this.impulse2.x), f.x += m * this.impulse2.x, f.y += m * this.impulse2.y, g += y * (a * this.impulse2.y - u * this.impulse2.x);
          h = b.m_linearVelocity;
          h.x = d.x;
          h.y = d.y;
          b.m_angularVelocity = e;
          h = c.m_linearVelocity;
          h.x = f.x;
          h.y = f.y;
          c.m_angularVelocity = g
        },
        solvePositionConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = 0;
          if (this.m_enableLimit && 0 != this.m_limitState) {
            var d = b.m_sweep.a - a.m_sweep.a - this.m_referenceAngle;
            var e = 0;
            3 == this.m_limitState ? (d = P.clamp(d - this.m_lowerAngle, -ea.b2_maxAngularCorrection, ea.b2_maxAngularCorrection), e = -this.m_motorMass * d, c = P.abs(d)) : 1 == this.m_limitState ? (d -= this.m_lowerAngle, c = -d, d = P.clamp(d + ea.b2_angularSlop, -ea.b2_maxAngularCorrection, 0), e = -this.m_motorMass * d) : 2 == this.m_limitState && (c = d -= this.m_upperAngle, d = P.clamp(d - ea.b2_angularSlop, 0, ea.b2_maxAngularCorrection), e = -this.m_motorMass * d);
            a.m_sweep.a -= a.m_invI * e;
            b.m_sweep.a += b.m_invI * e;
            a.synchronizeTransform();
            b.synchronizeTransform()
          }
          var f =
            a.m_xf.R;
          e = this.m_localAnchor1.x - a.m_sweep.localCenter.x;
          d = this.m_localAnchor1.y - a.m_sweep.localCenter.y;
          var g = f.col1.x * e + f.col2.x * d;
          d = f.col1.y * e + f.col2.y * d;
          e = g;
          f = b.m_xf.R;
          var h = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
            m = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
          g = f.col1.x * h + f.col2.x * m;
          m = f.col1.y * h + f.col2.y * m;
          h = g;
          var l = b.m_sweep.c.x + h - a.m_sweep.c.x - e;
          var y = b.m_sweep.c.y + m - a.m_sweep.c.y - d;
          var n = l * l + y * y;
          f = Math.sqrt(n);
          g = a.m_invMass;
          var p = b.m_invMass,
            k = a.m_invI,
            q = b.m_invI,
            u = 10 * ea.b2_linearSlop;
          n > u * u && (n = 1 / (g + p), l = n * -l, y = n * -y, a.m_sweep.c.x -= .5 * g * l, a.m_sweep.c.y -= .5 * g * y, b.m_sweep.c.x += .5 * p * l, b.m_sweep.c.y += .5 * p * y, l = b.m_sweep.c.x + h - a.m_sweep.c.x - e, y = b.m_sweep.c.y + m - a.m_sweep.c.y - d);
          this.K1.col1.x = g + p;
          this.K1.col2.x = 0;
          this.K1.col1.y = 0;
          this.K1.col2.y = g + p;
          this.K2.col1.x = k * d * d;
          this.K2.col2.x = -k * e * d;
          this.K2.col1.y = -k * e * d;
          this.K2.col2.y = k * e * e;
          this.K3.col1.x = q * m * m;
          this.K3.col2.x = -q * h * m;
          this.K3.col1.y = -q * h * m;
          this.K3.col2.y = q * h * h;
          this.K.setM(this.K1);
          this.K.addM(this.K2);
          this.K.addM(this.K3);
          this.K.solve(bg.tImpulse,
            -l, -y);
          l = bg.tImpulse.x;
          y = bg.tImpulse.y;
          a.m_sweep.c.x -= a.m_invMass * l;
          a.m_sweep.c.y -= a.m_invMass * y;
          a.m_sweep.a -= a.m_invI * (e * y - d * l);
          b.m_sweep.c.x += b.m_invMass * l;
          b.m_sweep.c.y += b.m_invMass * y;
          b.m_sweep.a += b.m_invI * (h * y - m * l);
          a.synchronizeTransform();
          b.synchronizeTransform();
          return f <= ea.b2_linearSlop ? c <= ea.b2_angularSlop : !1
        },
        m_localAnchor1: null,
        m_localAnchor2: null,
        m_impulse: null,
        m_motorImpulse: null,
        m_mass: null,
        m_motorMass: null,
        m_enableMotor: null,
        m_maxMotorTorque: null,
        m_motorSpeed: null,
        m_enableLimit: null,
        m_referenceAngle: null,
        m_lowerAngle: null,
        m_upperAngle: null,
        m_limitState: null,
        __class__: bg
      });
      var Oh = function() {
        $c.call(this);
        this.localAnchorA = new C;
        this.localAnchorB = new C;
        this.type = 1;
        var a = this.localAnchorA,
          b = 0,
          c = 0;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        a = this.localAnchorB;
        c = b = 0;
        null == c && (c = 0);
        null == b && (b = 0);
        a.x = b;
        a.y = c;
        this.motorSpeed = this.maxMotorTorque = this.upperAngle = this.lowerAngle = this.referenceAngle = 0;
        this.enableMotor = this.enableLimit = !1
      };
      k["box2D.dynamics.joints.B2RevoluteJointDef"] = Oh;
      Oh.__name__ = "box2D.dynamics.joints.B2RevoluteJointDef";
      Oh.__super__ = $c;
      Oh.prototype = t($c.prototype, {
        initialize: function(a, b, c) {
          this.bodyA = a;
          this.bodyB = b;
          this.localAnchorA = this.bodyA.getLocalPoint(c);
          this.localAnchorB = this.bodyB.getLocalPoint(c);
          this.referenceAngle = this.bodyB.getAngle() - this.bodyA.getAngle()
        },
        localAnchorA: null,
        localAnchorB: null,
        referenceAngle: null,
        enableLimit: null,
        lowerAngle: null,
        upperAngle: null,
        enableMotor: null,
        motorSpeed: null,
        maxMotorTorque: null,
        __class__: Oh
      });
      var Ok = function(a) {
        Vb.call(this,
          a);
        this.m_localAnchorA = new C;
        this.m_localAnchorB = new C;
        this.m_impulse = new bf;
        this.m_mass = new Lh;
        var b = this.m_localAnchorA,
          c = a.localAnchorA;
        b.x = c.x;
        b.y = c.y;
        b = this.m_localAnchorB;
        c = a.localAnchorB;
        b.x = c.x;
        b.y = c.y;
        this.m_referenceAngle = a.referenceAngle;
        this.m_impulse.setZero();
        this.m_mass = new Lh
      };
      k["box2D.dynamics.joints.B2WeldJoint"] = Ok;
      Ok.__name__ = "box2D.dynamics.joints.B2WeldJoint";
      Ok.__super__ = Vb;
      Ok.prototype = t(Vb.prototype, {
        getAnchorA: function() {
          return this.m_bodyA.getWorldPoint(this.m_localAnchorA)
        },
        getAnchorB: function() {
          return this.m_bodyB.getWorldPoint(this.m_localAnchorB)
        },
        getReactionForce: function(a) {
          return new C(a * this.m_impulse.x, a * this.m_impulse.y)
        },
        getReactionTorque: function(a) {
          return a * this.m_impulse.z
        },
        initVelocityConstraints: function(a) {
          var b = this.m_bodyA,
            c = this.m_bodyB,
            d = b.m_xf.R,
            e = this.m_localAnchorA.x - b.m_sweep.localCenter.x,
            f = this.m_localAnchorA.y - b.m_sweep.localCenter.y,
            g = d.col1.x * e + d.col2.x * f;
          f = d.col1.y * e + d.col2.y * f;
          e = g;
          d = c.m_xf.R;
          var h = this.m_localAnchorB.x - c.m_sweep.localCenter.x,
            m = this.m_localAnchorB.y - c.m_sweep.localCenter.y;
          g = d.col1.x * h + d.col2.x * m;
          m = d.col1.y * h + d.col2.y * m;
          h = g;
          d = b.m_invMass;
          g = c.m_invMass;
          var l = b.m_invI,
            y = c.m_invI;
          this.m_mass.col1.x = d + g + f * f * l + m * m * y;
          this.m_mass.col2.x = -f * e * l - m * h * y;
          this.m_mass.col3.x = -f * l - m * y;
          this.m_mass.col1.y = this.m_mass.col2.x;
          this.m_mass.col2.y = d + g + e * e * l + h * h * y;
          this.m_mass.col3.y = e * l + h * y;
          this.m_mass.col1.z = this.m_mass.col3.x;
          this.m_mass.col2.z = this.m_mass.col3.y;
          this.m_mass.col3.z = l + y;
          a.warmStarting ? (this.m_impulse.x *= a.dtRatio, this.m_impulse.y *=
            a.dtRatio, this.m_impulse.z *= a.dtRatio, b.m_linearVelocity.x -= d * this.m_impulse.x, b.m_linearVelocity.y -= d * this.m_impulse.y, b.m_angularVelocity -= l * (e * this.m_impulse.y - f * this.m_impulse.x + this.m_impulse.z), c.m_linearVelocity.x += g * this.m_impulse.x, c.m_linearVelocity.y += g * this.m_impulse.y, c.m_angularVelocity += y * (h * this.m_impulse.y - m * this.m_impulse.x + this.m_impulse.z)) : this.m_impulse.setZero()
        },
        solveVelocityConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_linearVelocity,
            d = a.m_angularVelocity,
            e = b.m_linearVelocity,
            f = b.m_angularVelocity,
            g = a.m_invMass,
            h = b.m_invMass,
            m = a.m_invI,
            l = b.m_invI,
            y = a.m_xf.R,
            n = this.m_localAnchorA.x - a.m_sweep.localCenter.x,
            p = this.m_localAnchorA.y - a.m_sweep.localCenter.y,
            k = y.col1.x * n + y.col2.x * p;
          p = y.col1.y * n + y.col2.y * p;
          n = k;
          y = b.m_xf.R;
          var q = this.m_localAnchorB.x - b.m_sweep.localCenter.x,
            u = this.m_localAnchorB.y - b.m_sweep.localCenter.y;
          k = y.col1.x * q + y.col2.x * u;
          u = y.col1.y * q + y.col2.y * u;
          q = k;
          y = e.x - f * u - c.x + d * p;
          k = e.y + f * q - c.y - d * n;
          var v = f - d,
            T = new bf;
          this.m_mass.solve33(T, -y, -k, -v);
          this.m_impulse.add(T);
          c.x -= g * T.x;
          c.y -= g * T.y;
          d -= m * (n * T.y - p * T.x + T.z);
          e.x += h * T.x;
          e.y += h * T.y;
          f += l * (q * T.y - u * T.x + T.z);
          a.m_angularVelocity = d;
          b.m_angularVelocity = f
        },
        solvePositionConstraints: function(a) {
          a = this.m_bodyA;
          var b = this.m_bodyB,
            c = a.m_xf.R,
            d = this.m_localAnchorA.x - a.m_sweep.localCenter.x,
            e = this.m_localAnchorA.y - a.m_sweep.localCenter.y,
            f = c.col1.x * d + c.col2.x * e;
          e = c.col1.y * d + c.col2.y * e;
          d = f;
          c = b.m_xf.R;
          var g = this.m_localAnchorB.x - b.m_sweep.localCenter.x,
            h = this.m_localAnchorB.y - b.m_sweep.localCenter.y;
          f = c.col1.x *
            g + c.col2.x * h;
          h = c.col1.y * g + c.col2.y * h;
          g = f;
          c = a.m_invMass;
          f = b.m_invMass;
          var m = a.m_invI,
            l = b.m_invI,
            y = b.m_sweep.c.x + g - a.m_sweep.c.x - d,
            n = b.m_sweep.c.y + h - a.m_sweep.c.y - e,
            p = b.m_sweep.a - a.m_sweep.a - this.m_referenceAngle,
            k = 10 * ea.b2_linearSlop,
            q = Math.sqrt(y * y + n * n),
            u = P.abs(p);
          q > k && (m *= 1, l *= 1);
          this.m_mass.col1.x = c + f + e * e * m + h * h * l;
          this.m_mass.col2.x = -e * d * m - h * g * l;
          this.m_mass.col3.x = -e * m - h * l;
          this.m_mass.col1.y = this.m_mass.col2.x;
          this.m_mass.col2.y = c + f + d * d * m + g * g * l;
          this.m_mass.col3.y = d * m + g * l;
          this.m_mass.col1.z = this.m_mass.col3.x;
          this.m_mass.col2.z = this.m_mass.col3.y;
          this.m_mass.col3.z = m + l;
          k = new bf;
          this.m_mass.solve33(k, -y, -n, -p);
          a.m_sweep.c.x -= c * k.x;
          a.m_sweep.c.y -= c * k.y;
          a.m_sweep.a -= m * (d * k.y - e * k.x + k.z);
          b.m_sweep.c.x += f * k.x;
          b.m_sweep.c.y += f * k.y;
          b.m_sweep.a += l * (g * k.y - h * k.x + k.z);
          a.synchronizeTransform();
          b.synchronizeTransform();
          return q <= ea.b2_linearSlop ? u <= ea.b2_angularSlop : !1
        },
        m_localAnchorA: null,
        m_localAnchorB: null,
        m_referenceAngle: null,
        m_impulse: null,
        m_mass: null,
        __class__: Ok
      });
      var Pk = function() {
        $c.call(this);
        this.localAnchorA =
          new C;
        this.localAnchorB = new C;
        this.type = 8;
        this.referenceAngle = 0
      };
      k["box2D.dynamics.joints.B2WeldJointDef"] = Pk;
      Pk.__name__ = "box2D.dynamics.joints.B2WeldJointDef";
      Pk.__super__ = $c;
      Pk.prototype = t($c.prototype, {
        initialize: function(a, b, c) {
          this.bodyA = a;
          this.bodyB = b;
          a = this.localAnchorA;
          b = this.bodyA.getLocalPoint(c);
          a.x = b.x;
          a.y = b.y;
          a = this.localAnchorB;
          b = this.bodyB.getLocalPoint(c);
          a.x = b.x;
          a.y = b.y;
          this.referenceAngle = this.bodyB.getAngle() - this.bodyA.getAngle()
        },
        localAnchorA: null,
        localAnchorB: null,
        referenceAngle: null,
        __class__: Pk
      });
      var Pn = function() {
        this.stringMapCloner = new Sk(this, ua);
        this.intMapCloner = new Sk(this, Za);
        this.classHandles = new ua;
        this.classHandles.h.String = r(this, this.returnString);
        this.classHandles.h.Array = r(this, this.cloneArray);
        this.classHandles.h["haxe.ds.StringMap"] = (w = this.stringMapCloner, r(w, w.clone));
        this.classHandles.h["haxe.ds.IntMap"] = (w = this.intMapCloner, r(w, w.clone))
      };
      k["cloner.Cloner"] = Pn;
      Pn.__name__ = "cloner.Cloner";
      Pn.prototype = {
        cache: null,
        classHandles: null,
        stringMapCloner: null,
        intMapCloner: null,
        depth: null,
        returnString: function(a) {
          return a
        },
        clone: function(a) {
          this.cache = new pc;
          this.depth = 0;
          ++this.depth;
          a = this.__clone(a);
          --this.depth;
          this.cache = null;
          return a
        },
        _clone: function(a) {
          ++this.depth;
          a = this.__clone(a);
          --this.depth;
          return a
        },
        __clone: function(a) {
          if (30 < this.depth) throw F.thrown("deep clone");
          if ("string" == typeof a) return a;
          try {
            if (null != a.__name__) return a
          } catch (c) {
            pa.lastError = c
          }
          var b = Qb.typeof(a);
          switch (b._hx_index) {
            case 0:
              return null;
            case 1:
              return a;
            case 2:
              return a;
            case 3:
              return a;
            case 4:
              return this.handleAnonymous(a);
            case 5:
              return null;
            case 6:
              return b = b.c, null == this.cache.h.__keys__[a.__id__] && this.cache.set(a, this.handleClass(b, a)), this.cache.h[a.__id__];
            case 7:
              return a;
            case 8:
              return null
          }
        },
        handleAnonymous: function(a) {
          for (var b = Y.fields(a), c = {}, d = 0, e = b.length; d < e;) {
            var f = d++;
            f = b[f];
            var g = Y.getProperty(a, f);
            ++this.depth;
            g = this.__clone(g);
            --this.depth;
            c[f] = g
          }
          return c
        },
        handleClass: function(a, b) {
          a = this.classHandles.h[a.__name__];
          null == a && (a = r(this, this.cloneClass));
          return a(b)
        },
        cloneArray: function(a) {
          a = a.slice();
          for (var b = 0, c = a.length; b < c;) {
            var d = b++;
            ++this.depth;
            var e = this.__clone(a[d]);
            --this.depth;
            a[d] = e
          }
          return a
        },
        cloneClass: function(a) {
          for (var b = Object.create(K.getClass(a).prototype), c = Y.fields(a), d = 0, e = c.length; d < e;) {
            var f = d++;
            f = c[f];
            var g = Y.getProperty(a, f);
            ++this.depth;
            g = this.__clone(g);
            --this.depth;
            b[f] = g
          }
          return b
        },
        __class__: Pn
      };
      var Sk = function(a, b) {
        this.cloner = a;
        this.type = b;
        this.noArgs = []
      };
      k["cloner.MapCloner"] = Sk;
      Sk.__name__ = "cloner.MapCloner";
      Sk.prototype = {
        cloner: null,
        type: null,
        noArgs: null,
        clone: function(a) {
          for (var b =
              Qb.createInstance(this.type, this.noArgs), c = a.keys(); c.hasNext();) {
            var d = c.next(),
              e = this.cloner,
              f = a.get(d);
            ++e.depth;
            f = e.__clone(f);
            --e.depth;
            b.set(d, f)
          }
          return b
        },
        __class__: Sk
      };
      var Qg = function(a) {
        null == a && (a = !0);
        Z.call(this);
        this.alignRight = a;
        this.start = !0;
        this.fps = this.mem_max = 0;
        this.text = new Se;
        this.text.set_defaultTextFormat(new wg("_sans", 10, 16777215));
        this.text.set_wordWrap(!0);
        this.text.set_multiline(!0);
        this.text.set_width(70);
        this.text.set_height(50);
        this.text.set_selectable(!1);
        this.text.mouseEnabled = !1;
        this.rectangle = new ha(69, 0, 1, 50);
        this.addEventListener("addedToStage", r(this, this.init), !1, 0, !0);
        this.addEventListener("removedFromStage", r(this, this.destroy), !1, 0, !0)
      };
      k["com.nmefermmmtools.debug.Stats"] = Qg;
      Qg.__name__ = "com.nmefermmmtools.debug.Stats";
      Qg.__super__ = Z;
      Qg.prototype = t(Z.prototype, {
        text: null,
        timer: null,
        fps: null,
        ms: null,
        ms_prev: null,
        mem: null,
        mem_max: null,
        graph: null,
        rectangle: null,
        alignRight: null,
        start: null,
        fps_graph: null,
        mem_graph: null,
        ms_graph: null,
        mem_max_graph: null,
        _stage: null,
        fpsStr: null,
        memStr: null,
        memMaxStr: null,
        msStr: null,
        init: function(a) {
          this._stage = Ja.get_current().stage;
          this.get_graphics().beginFill(51);
          this.get_graphics().drawRect(0, 0, 70, 50);
          this.get_graphics().endFill();
          this.addChild(this.text);
          this.graph = new wa(70, 50, !1, 51);
          this.addEventListener("enterFrame", r(this, this.update))
        },
        destroy: function(a) {
          for (this.get_graphics().clear(); 0 < this.get_numChildren();) this.removeChildAt(0);
          this.graph.dispose();
          this.removeEventListener("enterFrame", r(this, this.update))
        },
        update: function(a) {
          this.start &&
            this.alignRight && (this.set_x(this._stage.stageWidth - this.get_width()), this.start = !1);
          this.timer = Ja.getTimer();
          this.timer - 1E3 > this.ms_prev ? (this.mem = 9.54E-7 * cg.get_totalMemory(), this.mem_max = this.mem_max > this.mem ? this.mem_max : this.mem, this.fps_graph = 50 - (Math.min(50, this.fps / this._stage.get_frameRate() * 50) | 0), this.mem_graph = 50 - this.normalizeMem(this.mem), this.mem_max_graph = 50 - this.normalizeMem(this.mem_max), this.ms_graph = 50 - (this.timer - this.ms >> 1) | 0, this.graph.scroll(-1, 0), this.get_graphics().clear(),
            this.get_graphics().beginFill(51), this.get_graphics().drawRect(0, 0, 70, 50), this.get_graphics().endFill(), this.get_graphics().beginBitmapFill(this.graph, new Ea(1, 0, 0, 1, 0, 50)), this.get_graphics().drawRect(0, 50, 70, 50), this.get_graphics().endFill(), this.graph.fillRect(this.rectangle, 51), this.graph.lock(), this.graph.setPixel(69, this.fps_graph, 16776960), this.graph.setPixel(69, this.mem_graph, 65535), this.graph.setPixel(69, this.mem_max_graph, 16711792), this.graph.setPixel(69, this.ms_graph, 65280), this.graph.unlock(),
            60 < this.fps && (this.fps = 60), this.fpsStr = "FPS: " + this.fps + " / 60", this.memStr = "MEM: " + Math.round(this.mem), this.memMaxStr = "MAX: " + Math.round(this.mem_max), this.fps = 0, this.ms_prev = this.timer, this.text.set_htmlText("<font color='#ffff00'>" + this.fpsStr + "</font><br><font color='#00ffff'>" + this.memStr + "</font><br><font color='#ff0070'>" + this.memMaxStr + "</font>")) : (this.fps++, this.ms = this.timer)
        },
        normalizeMem: function(a) {
          return Math.min(50, Math.sqrt(Math.sqrt(5E3 * a))) - 2 | 0
        },
        __class__: Qg
      });
      var xg = function() {};
      k["com.nmefermmmtools.debug.Colors"] = xg;
      xg.__name__ = "com.nmefermmmtools.debug.Colors";
      var yg = function() {};
      k["com.stencyl.APIKeys"] = yg;
      yg.__name__ = "com.stencyl.APIKeys";
      var ka = function() {};
      k["com.stencyl.Config"] = ka;
      ka.__name__ = "com.stencyl.Config";
      ka.load = function() {
        var a = R.getConfigText("config/game-config.json");
        ka.loadFromString(a)
      };
      ka.loadMap = function(a, b) {
        for (var c = 0, d = Y.fields(a); c < d.length;) {
          var e = d[c];
          ++c;
          W.startsWith(e, "config-") ? Object.prototype.hasOwnProperty.call(ka.defines.h, da.substr(e,
            7, null)) && ka.loadMap(Y.field(a, e), b) : b[e] = Y.field(a, e)
        }
        return b
      };
      ka.loadFromString = function(a, b) {
        null == b && (b = !0);
        if (null != ka.data && b) {
          b = ka.data;
          ka.data = ka.loadMap(JSON.parse(a), {});
          ka.setStaticFields();
          for (var c = a = !1, d = 0, e = Y.fields(b); d < e.length;) {
            var f = e[d];
            ++d;
            var g = Y.field(b, f),
              h = Y.field(ka.data, f);
            if (g != h) switch (f) {
              case "debugDraw":
                (p.DEBUG_DRAW = ka.debugDraw) || null != p.debugDrawer && null != p.debugDrawer.m_sprite && p.debugDrawer.m_sprite.get_graphics().clear();
                break;
              case "disposeImages":
              case "physicsMode":
                c = !0;
                break;
              case "antialias":
              case "forceHiResAssets":
              case "gameScale":
              case "scaleMode":
              case "scales":
              case "stageHeight":
              case "stageWidth":
                a = !0;
                break;
              case "keys":
                N.loadInputConfig();
                break;
              case "releaseMode":
              case "useGciLogging":
                V.setupTracing(!ka.releaseMode);
                break;
              case "showConsole":
                p.engine.setStatsVisible(ka.showConsole)
            }
          }
          c ? V.reloadGame() : a && p.engine.reloadScreen()
        } else ka.data = ka.loadMap(JSON.parse(a), {}), ka.setStaticFields()
      };
      ka.setStaticFields = function() {
        ka.landscape = ka.data.landscape;
        ka.autorotate =
          ka.data.autorotate;
        ka.scaleMode = Bj.fromString(ka.data.scaleMode);
        ka.stageWidth = ka.data.stageWidth;
        ka.stageHeight = ka.data.stageHeight;
        ka.initSceneID = ka.data.initSceneID;
        ka.physicsMode = Qn.fromString(ka.data.physicsMode);
        ka.gameScale = ka.data.gameScale;
        ka.forceHiResAssets = ka.data.forceHiResAssets;
        ka.antialias = ka.data.antialias;
        ka.pixelsnap = ka.data.pixelsnap;
        ka.startInFullScreen = ka.data.startInFullScreen;
        ka.disposeImages = ka.data.disposeImages;
        ka.adPositionBottom = ka.data.adPositionBottom;
        ka.testAds = ka.data.testAds;
        ka.releaseMode = ka.data.releaseMode;
        ka.showConsole = ka.data.showConsole;
        ka.debugDraw = ka.data.debugDraw;
        ka.disableBackButton = ka.data.disableBackButton;
        ka.useGciLogging = ka.data.useGciLogging;
        ka.keys = ka.asMap(ka.data.keys);
        for (var a = ka.data.scales, b = Kd.fromString, c = Array(a.length), d = 0, e = a.length; d < e;) {
          var f = d++;
          c[f] = b(a[f])
        }
        ka.scales = ca.array(c);
        ka.toolsetInterfaceHost = ka.data.toolsetInterfaceHost;
        ka.toolsetInterfacePort = ka.data.toolsetInterfacePort;
        ka.projectName = ka.data.projectName;
        ka.buildConfig = ka.data.buildConfig
      };
      ka.asMap = function(a) {
        for (var b = new ua, c = 0, d = Y.fields(a); c < d.length;) {
          var e = d[c];
          ++c;
          b.h[e] = Y.field(a, e)
        }
        return b
      };
      var oc = function() {
        this.actorTypesLoaded = !1;
        this.resourceLookup = this.resourceNameLookup = this.behaviorLookup = this.behaviorReader = this.resourceReaderPool = null;
        if (null == Aa.getBytes("assets/data/game.mbs")) throw F.thrown("Data.hx - Could not load game. Check your logs for a possible cause.");
      };
      k["com.stencyl.Data"] = oc;
      oc.__name__ = "com.stencyl.Data";
      oc.get = function() {
        null == oc.instance && (oc.instance =
          new oc, oc.instance.loadAll());
        return oc.instance
      };
      oc.resetStatics = function() {
        oc.instance = null
      };
      oc.prototype = {
        readers: null,
        gameMbs: null,
        resourceListMbs: null,
        sceneListMbs: null,
        behaviorListMbs: null,
        resources: null,
        resourceMap: null,
        behaviors: null,
        resourceLookup: null,
        resourceNameLookup: null,
        behaviorLookup: null,
        behaviorReader: null,
        resourceReaderPool: null,
        loadAll: function() {
          this.gameMbs = new Rg(lf.get(), !1, !0);
          this.gameMbs.readData(Cb.toBytes(Aa.getBytes("assets/data/game.mbs")));
          this.sceneListMbs = new Rg(lf.get(),
            !1, !0);
          this.sceneListMbs.readData(Cb.toBytes(Aa.getBytes("assets/data/scenes.mbs")));
          this.resourceListMbs = new Rg(lf.get(), !1, !1);
          this.resourceListMbs.readData(Cb.toBytes(Aa.getBytes("assets/data/resources.mbs")));
          this.behaviorListMbs = new Rg(lf.get(), !1, !1);
          this.behaviorListMbs.readData(Cb.toBytes(Aa.getBytes("assets/data/behaviors.mbs")));
          this.behaviors = new Tk(new Za, r(this, this.loadBehaviorFromMbs));
          this.resources = new Tk(new Za, r(this, this.loadResourceFromMbs));
          this.resourceMap = new Rn(new ua, r(this,
            this.loadResourceFromMbsByName));
          this.loadReaders();
          this.scanBehaviorMbs();
          this.scanResourceMbs()
        },
        readGameMbs: function() {
          var a = new Rg(lf.get(), !1, !0);
          a.readData(Cb.toBytes(Aa.getBytes("assets/data/game.mbs")));
          return a.getRoot()
        },
        loadReaders: function() {
          this.readers = [];
          this.readers.push(new Uk);
          this.readers.push(new Vk);
          this.readers.push(new Wk);
          this.readers.push(new Xk);
          this.readers.push(new Yk);
          this.readers.push(new Zk)
        },
        scanBehaviorMbs: function() {
          this.behaviorLookup = new Za;
          for (var a = this.behaviorListMbs.getRoot(),
              b = 0, c = a.length(); b < c;) {
            b++;
            var d = a.elementAddress;
            this.behaviorReader = a.getNextObject();
            var e = this.behaviorLookup,
              f = this.behaviorReader.getId();
            e.h[f] = d
          }
        },
        scanResourceMbs: function() {
          this.resourceLookup = new Za;
          this.resourceNameLookup = new ua;
          var a = this.resourceListMbs.getRoot();
          this.resourceReaderPool = ie.createObjectPool(this.resourceListMbs);
          for (var b = new tb(this.resourceListMbs), c = H.INTEGER.getSize(), d = 0, e = a.length(); d < e;) {
            d++;
            var f = a.elementAddress,
              g = this.resourceListMbs.readInt(f + c);
            a.elementAddress +=
              a.elementSize;
            b.setAddress(g);
            g = this.resourceLookup;
            var h = b.getId();
            g.h[h] = f;
            this.resourceListMbs.readTypecode(f) == vc.MBS_SPRITE ? (f = this.resourceNameLookup, g = "Sprite_" + b.getName(), h = b.getId(), f.h[g] = h) : (f = this.resourceNameLookup, g = b.getName(), h = b.getId(), f.h[g] = h)
          }
        },
        loadResourceFromMbsByName: function(a) {
          a = this.resourceNameLookup.h[a];
          return null == a ? null : this.loadResourceFromMbs(a)
        },
        loadResourceFromMbs: function(a) {
          a = this.resourceLookup.h[a];
          if (null == a) return null;
          a = ie.readDynamicUsingPool(this.resourceListMbs,
            a, this.resourceReaderPool);
          a = this.readResource(a.getMbsType().getName(), a);
          null != a && (this.resources.map.h[a.ID] = a, a instanceof ui ? this.resourceMap.map.h["Sprite_" + a.name] = a : this.resourceMap.map.h[a.name] = a);
          return a
        },
        loadAllResourcesOfType: function(a) {
          var b = this.resourceListMbs.getRoot(),
            c = new tb(this.resourceListMbs),
            d = H.INTEGER.getSize();
          b.elementAddress = b.getAddress() + 2 * d;
          for (var e = 0, f = b.length(); e < f;) {
            e++;
            var g = b.elementAddress;
            this.resourceListMbs.readTypecode(g) == a && (g = this.resourceListMbs.readInt(g +
              d), c.setAddress(g), this.loadResourceFromMbs(c.getId()));
            b.elementAddress += b.elementSize
          }
        },
        loadBehaviorFromMbs: function(a) {
          a = this.behaviorLookup.h[a];
          if (null == a) return null;
          this.behaviorReader.setAddress(a);
          return vi.readBehavior(this.behaviorReader)
        },
        readResource: function(a, b) {
          for (var c = 0, d = this.readers; c < d.length;) {
            var e = d[c];
            ++c;
            if (e.accepts(a)) return e.read(b)
          }
          return null
        },
        actorTypesLoaded: null,
        getAllActorTypes: function() {
          this.actorTypesLoaded || (this.loadAllResourcesOfType(Pa.MBS_ACTOR_TYPE), this.actorTypesLoaded = !0);
          for (var a = [], b = this.resources.map.iterator(); b.hasNext();) {
            var c = b.next();
            c instanceof dg && a.push(K.__cast(c, dg))
          }
          return a
        },
        loadAtlas: function(a) {
          var b = Bb.get().atlases.h[a];
          if (null != b && !b.active)
            for (b.active = !0, a = 0, b = b.members; a < b.length;) {
              var c = b[a];
              ++a;
              c = this.resources.get(c);
              null != c && c.loadGraphics()
            }
        },
        unloadAtlas: function(a) {},
        reloadScaledResources: function() {
          for (var a = this.resources.map.iterator(); a.hasNext();) {
            var b = a.next();
            null != b && (b instanceof Qh || b instanceof dg || b.isAtlasActive() &&
              b.reloadGraphics(-1))
          }
        },
        __class__: oc
      };
      var ld = function() {
        var a = this.eventTable = new Za,
          b = ld.TYPE_ADS,
          c = [];
        a.h[b] = c;
        a = this.eventTable;
        b = ld.TYPE_PURCHASES;
        c = [];
        a.h[b] = c;
        a = this.eventTable;
        b = ld.TYPE_GAMECENTER;
        c = [];
        a.h[b] = c;
        a = this.eventTable;
        b = ld.TYPE_KEYBOARD;
        c = [];
        a.h[b] = c
      };
      k["com.stencyl.event.EventMaster"] = ld;
      ld.__name__ = "com.stencyl.event.EventMaster";
      ld.prototype = {
        eventTable: null,
        addAdEvent: function(a) {
          this.eventTable.h[ld.TYPE_ADS].push(a)
        },
        addPurchaseEvent: function(a) {
          this.eventTable.h[ld.TYPE_PURCHASES].push(a)
        },
        addGameCenterEvent: function(a) {
          this.eventTable.h[ld.TYPE_GAMECENTER].push(a)
        },
        addKeyboardEvent: function(a) {
          this.eventTable.h[ld.TYPE_KEYBOARD].push(a)
        },
        clear: function() {
          this.eventTable.h[ld.TYPE_ADS].length = 0;
          this.eventTable.h[ld.TYPE_PURCHASES].length = 0;
          this.eventTable.h[ld.TYPE_GAMECENTER].length = 0;
          this.eventTable.h[ld.TYPE_KEYBOARD].length = 0
        },
        __class__: ld
      };
      var p = function(a) {
        this.isHUDZoomable = this.sceneInitialized = this.keyPollOccurred = this.isFullScreen = this.ignoreResize = !1;
        this.zoomMultiplier =
          1;
        "opengl" != p.stage.window.context.type && "opengles" != p.stage.window.context.type && "webgl" != p.stage.window.context.type || md.initialize();
        wd.get_isSupported() && (this.shaderLayer = new Z, this.shaderLayer.set_name("Shader Layer"));
        a.mouseChildren = !1;
        a.mouseEnabled = !1;
        ka.debugDraw && (p.DEBUG_DRAW = !0);
        p.engine = this;
        u.engine = this;
        this.root = a;
        this.isFullScreen = ka.startInFullScreen;
        p.screenScaleX = p.unzoomedScaleX = a.get_scaleX();
        p.screenScaleY = p.unzoomedScaleY = a.get_scaleY();
        p.screenOffsetX = a.get_x() | 0;
        p.screenOffsetY =
          a.get_y() | 0;
        p.NO_PHYSICS = 1 == ka.physicsMode;
        p.stage.addEventListener("enterFrame", r(this, this.onUpdate));
        p.stage.addEventListener("deactivate", r(this, this.onFocusLost));
        p.stage.addEventListener("activate", r(this, this.onFocus));
        p.stage.addEventListener("resize", r(this, this.onWindowResize));
        p.stage.window.onRestore.add(r(this, this.onWindowRestore));
        p.stage.window.onMaximize.add(r(this, this.onWindowMaximize));
        p.stage.window.onFullscreen.add(r(this, this.onWindowFullScreen));
        this.isFullScreen && !p.stage.window.__fullscreen &&
          (p.stage.window.__fullscreen = !0);
        this.begin(ka.initSceneID)
      };
      k["com.stencyl.Engine"] = p;
      p.__name__ = "com.stencyl.Engine";
      p.resetStatics = function() {
        p.stage.removeEventListener("enterFrame", (w = p.engine, r(w, w.onUpdate)));
        p.stage.removeEventListener("deactivate", (w = p.engine, r(w, w.onFocusLost)));
        p.stage.removeEventListener("activate", (w = p.engine, r(w, w.onFocus)));
        p.stage.removeEventListener("resize", (w = p.engine, r(w, w.onWindowResize)));
        p.stage.window.onRestore.remove((w = p.engine, r(w, w.onWindowRestore)));
        p.stage.window.onMaximize.remove((w =
          p.engine, r(w, w.onWindowMaximize)));
        p.stage.window.onFullscreen.remove((w = p.engine, r(w, w.onWindowFullScreen)));
        null != p.engine.stats && p.stage.removeChild(p.engine.stats);
        p.NO_PHYSICS = !1;
        p.DEBUG_DRAW = !1;
        p.IMG_BASE = "";
        p.SCALE = 1;
        p.checkedWideScreen = !1;
        p.isStandardIOS = !1;
        p.isExtendedIOS = !1;
        p.isIPhone6 = !1;
        p.isIPhone6Plus = !1;
        p.isTabletIOS = !1;
        p.engine = null;
        p.landscape = !1;
        p.cameraX = 0;
        p.cameraY = 0;
        p.screenScaleX = 0;
        p.screenScaleY = 0;
        p.unzoomedScaleX = 0;
        p.unzoomedScaleY = 0;
        p.screenOffsetX = 0;
        p.screenOffsetY = 0;
        p.screenWidth =
          0;
        p.screenHeight = 0;
        p.sceneWidth = 0;
        p.sceneHeight = 0;
        p.screenWidthHalf = 0;
        p.screenHeightHalf = 0;
        p.paused = !1;
        p.started = !1;
        p.events = new ld;
        p.ITERATIONS = 3;
        p.physicsScale = 10;
        p.preservePadding = !1;
        p.paddingLeft = 0;
        p.paddingRight = 0;
        p.paddingTop = 0;
        p.paddingBottom = 0;
        p.ngID = "";
        p.ngKey = "";
        p.movieClip = null;
        p.stage = null;
        p.STEP_SIZE = 10;
        p.MS_PER_SEC = 1E3;
        p.elapsedTime = 0;
        p.timeScale = 1;
        p.totalElapsedTime = 0;
        p.debug = !1;
        p.debugDrawer = null
      };
      p.initBehaviors = function(a, b, c, d, e) {
        if (null != b) {
          var f = b.h;
          b = f;
          for (var g = Object.keys(f),
              h = g.length, m = 0; m < h;) {
            var l = b[g[m++]];
            if (null != l && l.enabled) {
              var y = oc.get().behaviors.get(l.behaviorID),
                n = new ua;
              if (null != y) {
                if (y.isEvent) {
                  f = y.attributes.h;
                  f = Object.keys(f);
                  for (var p = f.length, k = 0; k < p;) {
                    var q = f[k++],
                      u = y.attributes.h[q];
                    if (null != u) {
                      var v = u.type,
                        T = u.ID;
                      "list" == v ? (u = new wi(T, u.fieldName, u.fullName, [], v, null, u.hidden), n.h[q] = u) : "map" == v && (u = new wi(T, u.fieldName, u.fullName, new ua, v, null, u.hidden), n.h[q] = u)
                    }
                  }
                }
                f = Object.keys(l.values.h);
                p = f.length;
                for (k = 0; k < p;) q = f[k++], u = y.attributes.h[q],
                  null != u && (u = new wi(u.ID, u.fieldName, u.fullName, l.values.h[q], u.type, null, u.hidden), n.h[q] = u);
                l = new $k(c, d, y.ID, y.name, y.classname, !0, !1, n, y.type, y.isEvent);
                a.add(l)
              }
            }
          }
          e && a.initScripts()
        }
      };
      p.toPhysicalUnits = function(a) {
        return a /= p.physicsScale
      };
      p.toPixelUnits = function(a) {
        return a *= p.physicsScale
      };
      p.vToPhysicalUnits = function(a) {
        a.x = p.toPhysicalUnits(a.x);
        a.y = p.toPhysicalUnits(a.y);
        return a
      };
      p.vToPixelUnits = function(a) {
        a.x = p.toPixelUnits(a.x);
        a.y = p.toPixelUnits(a.y);
        return a
      };
      p.prototype = {
        zoomMultiplier: null,
        isHUDZoomable: null,
        world: null,
        gravityX: null,
        gravityY: null,
        physicalWidth: null,
        physicalHeight: null,
        leave: null,
        enter: null,
        sceneToEnter: null,
        shakeTimer: null,
        shakeIntensity: null,
        isShaking: null,
        scene: null,
        camera: null,
        sceneInitialized: null,
        channels: null,
        tasks: null,
        regions: null,
        terrainRegions: null,
        joints: null,
        root: null,
        colorLayer: null,
        maskLayer: null,
        master: null,
        hudLayer: null,
        transitionLayer: null,
        debugLayer: null,
        g: null,
        groups: null,
        reverseGroups: null,
        allActors: null,
        nextID: null,
        actorsOfType: null,
        recycledActorsOfType: null,
        actorsToCreateInNextScene: null,
        layers: null,
        layersByName: null,
        interactiveLayers: null,
        backgroundLayers: null,
        dynamicTiles: null,
        animatedTiles: null,
        topLayer: null,
        bottomLayer: null,
        middleLayer: null,
        layersToDraw: null,
        tileUpdated: null,
        loadedAtlases: null,
        atlasesToLoad: null,
        atlasesToUnload: null,
        actorsToCreate: null,
        gameAttributes: null,
        savableAttributes: null,
        behaviors: null,
        lastTime: null,
        acc: null,
        mx: null,
        my: null,
        collisionPairs: null,
        disableCollisionList: null,
        keyPollOccurred: null,
        whenKeyPressedEvents: null,
        whenAnyKeyPressed: null,
        whenAnyKeyReleased: null,
        whenAnyGamepadPressed: null,
        whenAnyGamepadReleased: null,
        whenTypeGroupCreatedEvents: null,
        whenTypeGroupKilledEvents: null,
        whenTypeGroupPositionStateChangedEvents: null,
        whenCollidedEvents: null,
        whenSoundEndedEvents: null,
        whenChannelEndedEvents: null,
        whenUpdated: null,
        whenDrawing: null,
        whenMousePressed: null,
        whenMouseReleased: null,
        whenMouseMoved: null,
        whenMouseDragged: null,
        whenPaused: null,
        whenFullscreenChanged: null,
        whenScreenSizeChanged: null,
        whenGameScaleChanged: null,
        whenSwiped: null,
        whenMTStarted: null,
        whenMTDragged: null,
        whenMTEnded: null,
        whenFocusChanged: null,
        nativeListeners: null,
        shader: null,
        shaderLayer: null,
        shaders: null,
        isFullScreen: null,
        ignoreResize: null,
        stats: null,
        onKeyDown: function(a) {
          this.isFullScreen && 27 == a.keyCode && this.setFullScreen(!1)
        },
        onWindowResize: function(a) {
          !this.isFullScreen || p.stage.window.__fullscreen || p.stage.window.__minimized || this.ignoreResize || this.setFullScreen(!1)
        },
        onWindowRestore: function() {
          this.isFullScreen && !p.stage.window.__fullscreen && (p.stage.window.__fullscreen = !0)
        },
        onWindowMaximize: function() {
          this.isFullScreen && !p.stage.window.__fullscreen && (p.stage.window.__fullscreen = !0)
        },
        onWindowFullScreen: function() {
          this.isFullScreen || this.setFullScreen(!0)
        },
        isInFullScreen: function() {
          return 1 == Ja.get_current().stage.get_displayState()
        },
        setFullScreen: function(a) {
          if (this.isFullScreen != a) {
            this.ignoreResize = !0;
            this.isFullScreen = a;
            this.reloadScreen();
            if (0 < this.whenFullscreenChanged.length)
              for (this.whenFullscreenChanged._dispatchIndex = 0; this.whenFullscreenChanged._dispatchIndex <
                this.whenFullscreenChanged.length;) {
                try {
                  this.whenFullscreenChanged.listeners[this.whenFullscreenChanged._dispatchIndex]()
                } catch (b) {
                  if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
                }++this.whenFullscreenChanged._dispatchIndex
              }
            this.ignoreResize = !1
          }
        },
        toggleFullScreen: function() {
          this.setFullScreen(!this.isFullScreen)
        },
        reloadScreen: function() {
          var a = p.IMG_BASE,
            b = p.SCALE,
            c = p.screenWidth,
            d = p.screenHeight;
          this.root.initScreen(this.isFullScreen);
          p.screenWidth = V.logicalWidth | 0;
          p.screenWidthHalf =
            p.screenWidth / 2 | 0;
          p.screenHeight = V.logicalHeight | 0;
          p.screenHeightHalf = p.screenHeight / 2 | 0;
          this.setColorBackground(this.scene.colorBackground);
          c = p.screenWidth != c || p.screenHeight != d;
          d = b != p.SCALE;
          a != p.IMG_BASE && oc.get().reloadScaledResources();
          if (b != p.SCALE) {
            null != p.debugDrawer && p.debugDrawer.setDrawScale(10 * p.SCALE);
            this.g.scaleX = this.g.scaleY = p.SCALE;
            R.applyToAllChildren(this.root, function(a) {
              K.__implements(a, sh) && K.__cast(a, sh).updateScale()
            });
            for (a = this.allActors.iterator(); a.hasNext();) b = a.next(),
              null == b || b.dead || b.recycled || (b.updateMatrix = !0);
            for (b = this.recycledActorsOfType.iterator(); b.hasNext();)
              for (var e = b.next(), f = 0; f < e.length;) a = e[f], ++f, null != a.currAnimation && a.currAnimation.framesUpdated(), a.updateMatrix = !0;
            a = this.g;
            a.font = a.defaultFont;
            a.font.fontScale != p.SCALE && (a.font.fontScale = p.SCALE, a.font = null, eb.fontCache.h[-1] = null, b = a.defaultFont, null != b && b != a.font && (a.font = b, a.font == a.defaultFont ? (a.fontData = eb.fontCache.h[-1], null == a.fontData && (a.fontData = a.font.font.getPreparedGlyphs(a.font.fontScale,
              0, !0), eb.fontCache.h[-1] = a.fontData)) : (a.fontData = eb.fontCache.h[a.font.ID], null == a.fontData && (a.fontData = a.font.font.getPreparedGlyphs(a.font.fontScale, 0, !1), eb.fontCache.h[a.font.ID] = a.fontData))));
            this.moveCamera(this.camera.realX, this.camera.realY)
          }
          p.unzoomedScaleX = p.screenScaleX = this.root.get_scaleX();
          p.unzoomedScaleY = p.screenScaleY = this.root.get_scaleY();
          p.screenOffsetX = this.root.get_x() | 0;
          p.screenOffsetY = this.root.get_y() | 0;
          null != this.stats && (this.stats.set_x(p.stage.stageWidth - this.stats.get_width()),
            this.stats.set_y(0));
          this.resetShaders();
          if (d && 0 < this.whenGameScaleChanged.length)
            for (this.whenGameScaleChanged._dispatchIndex = 0; this.whenGameScaleChanged._dispatchIndex < this.whenGameScaleChanged.length;) {
              try {
                this.whenGameScaleChanged.listeners[this.whenGameScaleChanged._dispatchIndex]()
              } catch (g) {
                if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
              }++this.whenGameScaleChanged._dispatchIndex
            }
          if (c && 0 < this.whenScreenSizeChanged.length)
            for (this.whenScreenSizeChanged._dispatchIndex = 0; this.whenScreenSizeChanged._dispatchIndex <
              this.whenScreenSizeChanged.length;) {
              try {
                this.whenScreenSizeChanged.listeners[this.whenScreenSizeChanged._dispatchIndex]()
              } catch (g) {
                if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
              }++this.whenScreenSizeChanged._dispatchIndex
            }
        },
        addShader: function(a) {
          if (wd.get_isSupported()) {
            a = a.basicShader;
            null != this.shaders && this.clearShaders();
            this.shaders = [a.model];
            for (a = a.multipassParent; null != a;) this.shaders.splice(0, 0, a.model), a = a.multipassParent;
            a = 0;
            for (var b = this.shaders; a < b.length;) {
              var c = b[a];
              ++a;
              this.shaderLayer.addChild(c)
            }
          }
        },
        clearShaders: function() {
          R.removeAllChildren(this.shaderLayer);
          p.stage.context3D.setRenderToBackBuffer();
          this.shaders = []
        },
        toggleShadersForHUD: function() {
          null != this.shaderLayer && null != this.hudLayer && null != this.root && this.root.swapChildren(this.shaderLayer, this.hudLayer)
        },
        resetShaders: function() {
          if (null != this.shaders)
            for (var a = 0, b = this.shaders; a < b.length;) {
              var c = b[a];
              ++a;
              c.rebuild()
            }
        },
        begin: function(a) {
          this.loadedAtlases = new Za;
          this.atlasesToLoad = new Za;
          this.atlasesToUnload =
            new Za;
          N.enable();
          N.define("iSHIFT", [16]);
          N.define("iCTRL", [17]);
          N.define("iCOMMAND", [15]);
          p.landscape = ka.landscape;
          var b = V.logicalWidth,
            c = V.logicalHeight;
          p.screenWidth = b | 0;
          p.screenHeight = c | 0;
          p.screenWidthHalf = b / 2 | 0;
          p.screenHeightHalf = c / 2 | 0;
          oc.get();
          Bb.get().loadScenes();
          this.g = new eb;
          p.started = !0;
          this.tileUpdated = !1;
          this.shakeTimer = 0;
          this.shakeIntensity = .01;
          this.isShaking = !1;
          this.enter = this.leave = null;
          p.cameraX = 0;
          this.acc = p.cameraY = 0;
          this.lastTime = Ja.getTimer();
          p.sceneWidth = b | 0;
          p.sceneHeight = c | 0;
          this.colorLayer = new Qe;
          this.colorLayer.set_name("Color Layer");
          this.root.addChild(this.colorLayer);
          this.master = new Z;
          this.master.set_name("Master");
          this.root.addChild(this.master);
          this.hudLayer = new Lc(-1, "__hud__", -1, 0, 0, 1, 10, null);
          this.hudLayer.set_name("HUD Layer");
          this.root.addChild(this.hudLayer);
          this.transitionLayer = new Z;
          this.transitionLayer.set_name("Transition Layer");
          this.root.addChild(this.transitionLayer);
          this.debugLayer = new Z;
          this.debugLayer.set_name("Debug Layer");
          this.root.addChild(this.debugLayer);
          wd.get_isSupported() && this.root.addChild(this.shaderLayer);
          this.root.addChild(this.root.maskLayer);
          this.actorsToCreateInNextScene = [];
          this.gameAttributes = new ua;
          this.savableAttributes = new ua;
          this.setStatsVisible(ka.showConsole);
          b = Bb.get().gameAttributes.h;
          b = Object.keys(b);
          c = b.length;
          for (var d = 0; d < c;) {
            var e = b[d++],
              f = Bb.get().gameAttributes.h[e];
            this.gameAttributes.h[e] = f
          }
          this.channels = [];
          this.channels.push(new Yb(this, 0));
          this.channels.push(new Yb(this, 1));
          this.channels.push(new Yb(this, 2));
          this.channels.push(new Yb(this,
            3));
          this.channels.push(new Yb(this, 4));
          this.channels.push(new Yb(this, 5));
          this.channels.push(new Yb(this, 6));
          this.channels.push(new Yb(this, 7));
          this.channels.push(new Yb(this, 8));
          this.channels.push(new Yb(this, 9));
          this.channels.push(new Yb(this, 10));
          this.channels.push(new Yb(this, 11));
          this.channels.push(new Yb(this, 12));
          this.channels.push(new Yb(this, 13));
          this.channels.push(new Yb(this, 14));
          this.channels.push(new Yb(this, 15));
          this.channels.push(new Yb(this, 16));
          this.channels.push(new Yb(this, 17));
          this.channels.push(new Yb(this, 18));
          this.channels.push(new Yb(this, 19));
          this.channels.push(new Yb(this, 20));
          this.channels.push(new Yb(this, 21));
          this.channels.push(new Yb(this, 22));
          this.channels.push(new Yb(this, 23));
          this.channels.push(new Yb(this, 24));
          this.channels.push(new Yb(this, 25));
          this.channels.push(new Yb(this, 26));
          this.channels.push(new Yb(this, 27));
          this.channels.push(new Yb(this, 28));
          this.channels.push(new Yb(this, 29));
          this.channels.push(new Yb(this, 30));
          this.channels.push(new Yb(this, 31));
          this.sceneToEnter = a;
          this.loadScene(a);
          this.sceneInitialized = !0
        },
        setStatsVisible: function(a) {
          a != (null != this.stats) && (a ? (this.stats = new Qg, p.stage.addChild(this.stats), this.stats.set_x(p.stage.stageWidth - this.stats.get_width()), this.stats.set_y(0)) : (p.stage.removeChild(this.stats), this.stats = null))
        },
        loadScene: function(a) {
          this.collisionPairs = new Be(32);
          p.preservePadding || (p.paddingTop = 0, p.paddingLeft = 0, p.paddingBottom = 0, p.paddingRight = 0);
          this.tasks = [];
          this.scene = Bb.get().scenes.h[a];
          if (-1 == a || null ==
            this.scene)
            if (this.scene = Bb.get().scenes.h[ka.initSceneID], null == this.scene) {
              p.stage.removeEventListener("enterFrame", r(this, this.onUpdate));
              return
            } this.scene.load();
          a = new Za;
          if (this.scene.retainsAtlases)
            for (var b = this.loadedAtlases.iterator(); b.hasNext();) {
              var c = b.next();
              a.h[c] = c
            } else {
              for (b = this.loadedAtlases.iterator(); b.hasNext();) c = b.next(), Bb.get().atlases.h[c].allScenes && (a.h[c] = c);
              c = 0;
              for (var d = this.scene.atlases; c < d.length;) b = d[c], ++c, a.h[b] = b
            }
          for (c = this.atlasesToLoad.iterator(); c.hasNext();) d =
            c.next(), a.h[d] = d;
          for (c = this.atlasesToUnload.iterator(); c.hasNext();) d = c.next(), a.remove(d);
          for (c = this.loadedAtlases.iterator(); c.hasNext();) d = c.next(), a.h.hasOwnProperty(d) || (oc.get().unloadAtlas(d), this.loadedAtlases.remove(d));
          for (c = a.iterator(); c.hasNext();) d = c.next(), this.loadedAtlases.h.hasOwnProperty(d) || (oc.get().loadAtlas(d), this.loadedAtlases.h[d] = d);
          this.atlasesToLoad = new Za;
          this.atlasesToUnload = new Za;
          p.sceneWidth = this.scene.sceneWidth;
          p.sceneHeight = this.scene.sceneHeight;
          this.behaviors =
            new Cj;
          this.groups = new Za;
          this.reverseGroups = new ua;
          c = 0;
          for (d = Bb.get().groups; c < d.length;) a = d[c], ++c, b = new zg(a.ID, a.name), this.groups.h[a.ID] = b, this.reverseGroups.h[a.name] = b, b.name = a.name;
          a = new zg(-2, "Regions");
          this.groups.h[-2] = a;
          this.reverseGroups.h.Regions = a;
          this.disableCollisionList = [];
          this.actorsOfType = new Za;
          this.recycledActorsOfType = new Za;
          this.regions = new Be(32);
          this.regions.reuseIterator = !0;
          this.terrainRegions = new Za;
          this.joints = new Za;
          this.dynamicTiles = new ua;
          this.animatedTiles = [];
          this.allActors =
            new Be(256);
          this.allActors.reuseIterator = !0;
          this.nextID = 0;
          this.whenKeyPressedEvents = new Sn;
          this.whenAnyKeyPressed = new Mc;
          this.whenAnyKeyReleased = new Mc;
          this.whenAnyGamepadPressed = new Mc;
          this.whenAnyGamepadReleased = new Mc;
          this.whenTypeGroupCreatedEvents = new pc;
          this.whenTypeGroupKilledEvents = new pc;
          this.whenTypeGroupPositionStateChangedEvents = new Za;
          this.whenCollidedEvents = new Za;
          this.whenSoundEndedEvents = new pc;
          this.whenChannelEndedEvents = new Za;
          this.nativeListeners = [];
          this.whenUpdated = new Mc;
          this.whenDrawing =
            new Mc;
          this.whenMousePressed = new Mc;
          this.whenMouseReleased = new Mc;
          this.whenMouseMoved = new Mc;
          this.whenMouseDragged = new Mc;
          this.whenPaused = new Mc;
          this.whenSwiped = new Mc;
          this.whenMTStarted = new Mc;
          this.whenMTDragged = new Mc;
          this.whenMTEnded = new Mc;
          this.whenFocusChanged = new Mc;
          this.whenFullscreenChanged = new Mc;
          this.whenScreenSizeChanged = new Mc;
          this.whenGameScaleChanged = new Mc;
          p.NO_PHYSICS || this.initPhysics();
          this.gravityX = this.scene.gravityX;
          this.gravityY = this.scene.gravityY;
          this.loadTerrain();
          this.loadRegions();
          this.loadTerrainRegions();
          this.loadActors();
          this.loadCamera();
          this.loadJoints();
          this.loadDeferredActors();
          p.initBehaviors(this.behaviors, this.scene.behaviorValues, this, this, !0);
          this.initActorScripts()
        },
        initPhysics: function() {
          var a = new C(this.scene.gravityX, this.scene.gravityY);
          this.world = new gc(a, !1);
          gc.m_continuousPhysics = !1;
          gc.m_warmStarting = !0;
          a = new wc;
          a.lowerBound.x = 0;
          a.lowerBound.y = 0;
          a.upperBound.x = p.screenWidth / p.physicsScale;
          a.upperBound.y = p.screenHeight / p.physicsScale;
          this.world.setScreenBounds(a);
          p.debugDrawer = new Ie;
          p.debugDrawer.setSprite(this.debugLayer);
          p.debugDrawer.setLineThickness(3);
          p.debugDrawer.setDrawScale(10 * p.SCALE);
          p.debugDrawer.setFillAlpha(0);
          p.debugDrawer.setFlags(Ie.e_shapeBit | Ie.e_jointBit);
          this.world.setDebugDraw(p.debugDrawer)
        },
        loadActors: function() {
          this.actorsToCreate = [];
          for (var a = this.scene.actors.iterator(); a.hasNext();) {
            var b = a.next();
            this.actorsToCreate.push(this.createActor(b, !0))
          }
          a = 0;
          for (b = this.interactiveLayers; a < b.length;) {
            var c = b[a];
            ++a;
            for (var d = 0, e = c.actorContainer.get_numChildren(); d <
              e;) {
              var f = d++,
                g = c.actorContainer.getChildAt(f);
              for (g = this.scene.actors.h[g.ID]; g.orderInLayer != f;) c.actorContainer.swapChildrenAt(f, g.orderInLayer), g = c.actorContainer.getChildAt(f), g = this.scene.actors.h[g.ID]
            }
          }
        },
        loadDeferredActors: function() {
          for (var a = 0, b = this.actorsToCreateInNextScene; a < b.length;) {
            var c = b[a];
            ++a;
            u.lastCreatedActor = this.createActorOfType(c.type, c.x, c.y, c.layer)
          }
          this.actorsToCreateInNextScene = []
        },
        initActorScripts: function() {
          for (var a = 0, b = this.actorsToCreate; a < b.length;) {
            var c = b[a];
            ++a;
            c.initScripts()
          }
          this.actorsToCreate = null
        },
        loadCamera: function() {
          this.camera = new wb(this, -1, 2, 0, 0, -1, 2, 2, null, null, null, null, !0, !1, !0, !1, null, !0, !1);
          this.camera.set_name("Camera");
          this.camera.isCamera = !0;
          p.cameraX = 0;
          p.cameraY = 0
        },
        loadRegions: function() {
          this.regions = new Be(32);
          this.regions.reuseIterator = !0;
          for (var a = this.scene.regions.iterator(); a.hasNext();) {
            var b = a.next(),
              c = new vd(this, b.x, b.y, b.shapes, b.simpleBounds);
            c.set_name(b.name);
            p.NO_PHYSICS || c.setXY(b.x + c.regionWidth / 2, b.y + c.regionHeight /
              2);
            c.ID = b.ID;
            this.addRegion(c)
          }
        },
        loadTerrainRegions: function() {
          this.terrainRegions = new Za;
          if (!p.NO_PHYSICS)
            for (var a = this.scene.terrainRegions.iterator(); a.hasNext();) {
              var b = a.next(),
                c = new Pg(this, b.x, b.y, b.shapes, b.groupID, b.fillColor);
              c.set_name(b.name);
              c.setX(p.toPixelUnits(b.x) + c.regionWidth / 2);
              c.setY(p.toPixelUnits(b.y) + c.regionHeight / 2);
              c.ID = b.ID;
              this.addTerrainRegion(c)
            }
        },
        loadJoints: function() {
          if (!p.NO_PHYSICS)
            for (var a = this.scene.joints.iterator(); a.hasNext();) {
              var b = a.next(),
                c = b.actor1,
                d =
                b.actor2,
                e = b.collideConnected;
              if (3 == b.type) {
                var f = this.joints;
                var g = b.ID;
                b = this.createStickJoint(this.getActor(c).body, this.getActor(d).body, b.ID, e);
                f.h[g] = b
              } else if (1 == b.type) {
                g = K.__cast(b, Oh);
                f = this.getActor(c).body.getLocalCenter().copy();
                f.x = p.toPixelUnits(f.x);
                f.y = p.toPixelUnits(f.y);
                c = this.getActor(c).body;
                d = -1 == d ? this.world.m_groundBody : this.getActor(d).body;
                var h = this.joints,
                  m = b.ID;
                b = this.createHingeJoint(c, d, f, b.ID, e, g.enableLimit, g.enableMotor, g.lowerAngle, g.upperAngle, g.maxMotorTorque,
                  -g.motorSpeed);
                h.h[m] = b
              } else if (2 == b.type || 7 == b.type) g = K.__cast(b, Ph), f = this.getActor(c).body.getLocalCenter().copy(), f.x = p.toPixelUnits(f.x), f.y = p.toPixelUnits(f.y), c = this.getActor(c).body, d = -1 == d ? this.world.m_groundBody : this.getActor(d).body, f = this.joints, h = b.ID, b = this.createSlidingJoint(c, d, g.localAxisA, b.ID, e, g.enableLimit, g.enableMotor, g.lowerTranslation, g.upperTranslation, g.maxMotorForce, g.motorSpeed), f.h[h] = b
            }
        },
        loadTerrain: function() {
          this.initLayers();
          for (var a = 0, b = this.scene.wireframes; a <
            b.length;) {
            var c = b[a];
            ++a;
            var d = null;
            p.NO_PHYSICS || (d = new wb(this, 1E8, 1, c.x, c.y, -1, c.width | 0, c.height | 0, null, new ua, null, null, !1, !0, !1, !1, c.shape));
            d.set_name("Terrain");
            d.typeID = -1;
            d.set_visible(!1);
            this.getGroup(1).addChild(d)
          }
        },
        initLayers: function() {
          this.setColorBackground(this.scene.colorBackground);
          this.animatedTiles = this.scene.animatedTiles;
          if (null != this.animatedTiles)
            for (var a = 0, b = this.animatedTiles; a < b.length;) {
              var c = b[a];
              ++a;
              c.currFrame = 0;
              c.currTime = 0;
              c.updateSource = !0
            }
          this.layers = this.scene.layers;
          this.layersToDraw = new Za;
          this.layersByName = new ua;
          this.interactiveLayers = [];
          this.backgroundLayers = [];
          var d = c = !1,
            e = 0,
            f = -1,
            g = {};
          if (0 == this.layers.mSize) {
            a = new Yd(0, this.scene, this.scene.sceneWidth / this.scene.tileWidth | 0, this.scene.sceneHeight / this.scene.tileHeight | 0);
            var h = new Lc(0, "default", 0, 1, 1, 1, 10, a);
            this.layers.set(h.ID, h)
          }
          for (h = this.layers.iterator(); h.hasNext();) a = h.next(), f = Math.max(f, a.order) | 0, g[a.order] = a, this.layersByName.h[a.layerName] = a, a instanceof Lc ? this.interactiveLayers.push(K.__cast(a,
            Lc)) : a instanceof ae && this.backgroundLayers.push(K.__cast(a, ae));
          a = 0;
          for (b = f + 1; a < b;) {
            h = a++;
            var m = f - h;
            h = g[h];
            h.order = m;
            this.layersToDraw.h[m] = h
          }
          a = 0;
          for (b = f + 1; a < b;) h = a++, h = this.layersToDraw.h[h], h instanceof ae ? (h = K.__cast(h, ae), h.load(), this.master.addChild(h)) : h instanceof Lc && (f = K.__cast(h, Lc), c || (c = !0, this.bottomLayer = f), d || e != Math.floor(this.interactiveLayers.length / 2) || (d = !0, this.middleLayer = f), this.master.addChild(f), this.topLayer = f, f.tiles.mountGrid(), ++e)
        },
        setColorBackground: function(a) {
          a.draw(this.colorLayer.get_graphics(),
            0, 0, p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0)
        },
        optimizePool: function() {
          for (var a = this.recycledActorsOfType.iterator(); a.hasNext();) {
            for (var b = a.next(), c = [], d = 0; d < b.length;) {
              var e = b[d];
              ++d;
              null != e && e.recycled && c.push(e)
            }
            for (d = 0; d < c.length;) e = c[d], ++d, da.remove(b, e), this.removeActor(e)
          }
        },
        cleanup: function() {
          null != p.debugDrawer && null != p.debugDrawer.m_sprite && p.debugDrawer.m_sprite.get_graphics().clear();
          for (var a = 0, b = this.interactiveLayers; a < b.length;) {
            var c = b[a];
            ++a;
            c.clear()
          }
          this.hudLayer.clear();
          R.removeAllChildren(this.master);
          this.behaviors.destroy();
          this.camera.destroy();
          this.camera = null;
          if (null != this.world) {
            a = this.world.getBodyList();
            for (b = this.world.getJointList(); null != b;) this.world.destroyJoint(b), b = b.getNext();
            for (; null != a;) this.world.destroyBody(a), a = a.getNext()
          }
          for (a = this.actorsOfType.iterator(); a.hasNext();) b = a.next(), b.length = 0;
          for (b = this.recycledActorsOfType.iterator(); b.hasNext();)
            for (c = b.next(), a = 0; a < c.length;) {
              var d = c[a];
              ++a;
              d.destroyed || d.destroy()
            }
          for (a = this.recycledActorsOfType.iterator(); a.hasNext();) b =
            a.next(), b.length = 0;
          for (d = this.allActors.iterator(); d.hasNext();) d.next().destroy();
          for (; 0 < ca.count(this.allActors);)
            for (a = this.allActors.keys(); a.hasNext();) b = a.next(), this.allActors.unset(b);
          this.scene.unload();
          this.nativeListeners = this.whenFocusChanged = this.whenMTEnded = this.whenMTDragged = this.whenMTStarted = this.whenSwiped = this.whenGameScaleChanged = this.whenScreenSizeChanged = this.whenFullscreenChanged = this.whenPaused = this.whenMouseDragged = this.whenMouseMoved = this.whenMouseReleased = this.whenMousePressed =
            this.whenDrawing = this.whenUpdated = this.whenChannelEndedEvents = this.whenSoundEndedEvents = this.whenCollidedEvents = this.whenTypeGroupPositionStateChangedEvents = this.whenTypeGroupKilledEvents = this.whenTypeGroupCreatedEvents = this.whenAnyGamepadReleased = this.whenAnyGamepadPressed = this.whenAnyKeyReleased = this.whenAnyKeyPressed = this.whenKeyPressedEvents = this.disableCollisionList = this.collisionPairs = this.tasks = this.scene = this.allActors = this.reverseGroups = this.groups = this.joints = this.terrainRegions = this.regions =
            this.animatedTiles = this.dynamicTiles = this.layersToDraw = this.backgroundLayers = this.interactiveLayers = this.layersByName = this.layers = this.recycledActorsOfType = this.actorsOfType = null;
          u.lastCreatedActor = null;
          u.lastCreatedJoint = null;
          u.lastCreatedRegion = null;
          u.lastCreatedTerrainRegion = null;
          N.update();
          this.world = null
        },
        switchScene: function(a, b, c) {
          if (!this.isTransitioning()) {
            null != b && b.isComplete() && b.reset();
            if (null == b || 0 == b.duration) b = new S(0);
            if (null == c || 0 == c.duration) c = new S(1);
            this.leave = b;
            this.enter =
              c;
            this.leave.isComplete() || this.leave.start();
            this.sceneToEnter = a
          }
        },
        enterScene: function() {
          this.enter.isComplete() || (this.enter.start(), null != this.leave && this.leave.cleanup());
          this.leave = null;
          this.sceneInitialized = !1;
          this.cleanup();
          this.loadScene(this.sceneToEnter);
          this.sceneInitialized = !0
        },
        isTransitioning: function() {
          return null != this.enter && this.enter.isActive() || null != this.leave && this.leave.isActive() ? !0 : !1
        },
        isTransitioningOut: function() {
          return null != this.leave && this.leave.isActive() ? !0 : !1
        },
        createActorInNextScene: function(a,
          b, c, d) {
          this.actorsToCreateInNextScene.push(new Tn(a, b, c, d))
        },
        createActor: function(a, b) {
          b = K.__cast(oc.get().resources.get(a.actorType.spriteID), ui);
          b = new wb(this, a.elementID, a.groupID, a.x, a.y, a.layerID, -1, -1, b, a.behaviorValues, a.actorType, p.NO_PHYSICS ? null : a.actorType.bodyDef, !1, !1, !1, !1, null, a.actorType.autoScale, a.actorType.ignoreGravity, a.actorType.physicsMode);
          if (0 != a.angle)
            if (0 != b.currOffset.x || 0 != b.currOffset.y) {
              var c = b.currOrigin.x | 0,
                d = b.currOrigin.y | 0;
              b.setOriginPoint(b.cacheWidth / 2 | 0, b.cacheHeight /
                2 | 0);
              b.setAngle(a.angle, !1);
              b.setOriginPoint(c, d)
            } else b.setAngle(a.angle, !1);
          if (1 != a.scaleX || 1 != a.scaleY) {
            var e = b.cacheWidth / 2 | 0,
              f = b.cacheHeight / 2 | 0;
            if (b.currOrigin.x != e || b.currOrigin.y != f) c = Math.sin(.01745329251994278 * a.angle), d = Math.cos(.01745329251994278 * a.angle), e = (b.currOrigin.x - e) * a.scaleX - b.currOffset.x, f = (b.currOrigin.y - f) * a.scaleY - b.currOffset.y, b.setX(b.getX(!1) + e * d - f * c), b.setY(b.getY(!1) + e * c + f * d);
            b.growTo(a.scaleX, a.scaleY, 0)
          }
          b.set_name(a.actorType.name);
          null == this.recycledActorsOfType.h[a.actorType.ID] &&
            (this.recycledActorsOfType.h[a.actorType.ID] = []);
          c = this.recycledActorsOfType.h[a.actorType.ID];
          c.push(b);
          2 != a.actorType.physicsMode && (c = this.groups.h[a.groupID], null != c && c.addChild(b));
          1E8 == a.elementID ? (this.nextID++, b.ID = this.nextID, this.allActors.set(b.ID, b)) : (this.allActors.set(b.ID, b), this.nextID = Math.max(b.ID, this.nextID) | 0);
          b.internalUpdate(0, !1);
          b.updateDrawingMatrix();
          null != a.actorType && -1 != a.actorType.ID && (c = this.actorsOfType.h[a.actorType.ID], null == c && (c = [], this.actorsOfType.h[a.actorType.ID] =
            c), null != c && c.push(b));
          return u.lastCreatedActor = b
        },
        removeActor: function(a) {
          this.allActors.unset(a.ID);
          this.removeActorFromLayer(a, a.layer);
          var b = this.groups,
            c = a.getGroupID();
          b.h[c].removeChild(a);
          a.destroy();
          null != a.type && -1 != a.typeID && (b = this.actorsOfType.h[a.typeID], null != b && da.remove(b, a))
        },
        removeActorFromLayer: function(a, b) {
          null != b && a.layer == b && (b == this.hudLayer && (0 == a.physicsMode && a.body.setAlwaysActive(a.alwaysSimulate), a.isHUD = !1, a.cachedLayer = null), b.actorContainer.contains(a) && (b.actorContainer.removeChild(a),
            a.layer = null))
        },
        moveActorToLayer: function(a, b) {
          if (a.layer != b && null != b) {
            if (null == a.layer || a.layer.scrollFactorX != b.scrollFactorX || a.layer.scrollFactorY != b.scrollFactorY) a.updateMatrix = !0;
            b == this.hudLayer && (0 == a.physicsMode && a.body.setAlwaysActive(!0), a.isHUD = !0, a.cachedLayer = a.layer);
            null != a.layer && this.removeActorFromLayer(a, a.layer);
            b.actorContainer.addChild(a);
            a.layer = b
          }
        },
        recycleActor: function(a) {
          if (null != a && !a.recycled) {
            var b = p.engine.whenTypeGroupKilledEvents,
              c = a.getType(),
              d = b.h[c.__id__];
            b = p.engine.whenTypeGroupKilledEvents;
            c = a.getGroup();
            b = b.h[c.__id__];
            if (0 < a.whenKilled.length)
              for (a.whenKilled._dispatchIndex = 0; a.whenKilled._dispatchIndex < a.whenKilled.length;) {
                try {
                  a.whenKilled.listeners[a.whenKilled._dispatchIndex]()
                } catch (e) {
                  if (pa.lastError = e, "string" != typeof F.caught(e).unwrap()) throw e;
                }++a.whenKilled._dispatchIndex
              }
            if (null != d && 0 < d.length)
              for (d._dispatchIndex = 0; d._dispatchIndex < d.length;) {
                try {
                  d.listeners[d._dispatchIndex](a)
                } catch (e) {
                  if (pa.lastError = e, "string" != typeof F.caught(e).unwrap()) throw e;
                }++d._dispatchIndex
              }
            if (null !=
              b && 0 < b.length)
              for (b._dispatchIndex = 0; b._dispatchIndex < b.length;) {
                try {
                  b.listeners[b._dispatchIndex](a)
                } catch (e) {
                  if (pa.lastError = e, "string" != typeof F.caught(e).unwrap()) throw e;
                }++b._dispatchIndex
              }
            a.isHUD && a.unanchorFromScreen();
            a.alwaysSimulate && a.makeSometimesSimulate(!1);
            a.firstMove = !1;
            a.setXY(1E6, 1E6, !1, !0);
            a.colX = 1E6;
            a.colY = 1E6;
            a.recycled = !0;
            a.killLeaveScreen = !1;
            a.lastScreenState = !1;
            a.lastSceneState = !1;
            a.cancelTweens();
            a.clearFilters();
            a.resetBlendMode();
            a.set_alpha(1);
            a.realScaleX = 1;
            a.realScaleY =
              1;
            a.switchToDefaultAnimation();
            a.disableActorDrawing();
            a.removeAttachedImages();
            if (0 == a.physicsMode && null != a.body)
              for (d = a.body.getContactList(); null != d;) p.engine.world.m_contactManager.m_contactListener.endContact(d.contact), d = d.next;
            a.removeAllListeners();
            a.resetListeners();
            this.removeActorFromLayer(a, a.layer);
            0 == a.physicsMode && (a.body.setActive(!1), a.body.setAwake(!1), a.body.setBullet(a.type.bodyDef.bullet), null != a.body.m_prev && (a.body.m_prev.m_next = a.body.m_next), null != a.body.m_next && (a.body.m_next.m_prev =
              a.body.m_prev), a.body == this.world.m_bodyList && (this.world.m_bodyList = a.body.m_next), a.body.m_prev = null, a.body.m_next = null, --this.world.m_bodyCount);
            a.xSpeed = 0;
            a.ySpeed = 0;
            a.rSpeed = 0;
            a.continuousCollision = !1;
            d = 0;
            for (b = this.tasks; d < b.length;) c = b[d], ++d, c.actor == a && this.removeTask(c);
            this.allActors.unset(a.ID)
          }
        },
        getRecycledActorOfType: function(a, b, c, d) {
          a = this.getRecycledActorOfTypeOnLayer(a, b, c, this.getLayerByOrder(d).ID);
          p.paused && (a.updateDrawingMatrix(), a.pause());
          return a
        },
        getRecycledActorOfTypeOnLayer: function(a,
          b, c, d) {
          var e = null;
          if (null == this.recycledActorsOfType.h[a.ID]) {
            var f = a.ID;
            this.recycledActorsOfType.h[f] = []
          }
          f = this.recycledActorsOfType.h[a.ID];
          if (null != f) {
            for (var g = 0; g < f.length;)
              if (e = f[g], ++g, null != e && e.recycled) {
                e.createTime = Ja.getTimer();
                this.allActors.set(e.ID, e);
                e.dead = !1;
                e.dying = !1;
                e.recycled = !1;
                e.killLeaveScreen = !1;
                e.switchToDefaultAnimation();
                e.customizedBehaviors ? (e.customizedBehaviors = !1, e.behaviors = new Cj, p.initBehaviors(e.behaviors, a.behaviorValues, e, this, !1)) : e.enableAllBehaviors();
                0 ==
                  e.physicsMode && (e.body.setActive(!0), e.body.setAwake(!0), e.body.m_prev = null, e.body.m_next = this.world.m_bodyList, null != this.world.m_bodyList && (this.world.m_bodyList.m_prev = e.body), this.world.m_bodyList = e.body, ++this.world.m_bodyCount);
                e.registry = new ua;
                e.enableActorDrawing();
                e.setXY(b, c, !1, !0);
                0 == e.physicsMode && (e.colX = b, e.colY = c);
                e.setAngle(0, !1);
                e.setIgnoreGravity(e.defaultGravity);
                e.set_alpha(1);
                e.realScaleX = 1;
                e.realScaleY = 1;
                null != e.bodyDef && (e.continuousCollision = e.bodyDef.bullet);
                e.updateDrawingMatrix(!0);
                this.moveActorToLayer(e, this.getLayerById(d));
                e.initScripts();
                a = this.whenTypeGroupCreatedEvents.h[a.__id__];
                b = this.whenTypeGroupCreatedEvents;
                f = e.getGroup();
                b = b.h[f.__id__];
                if (null != a && 0 < a.length)
                  for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
                    try {
                      a.listeners[a._dispatchIndex](e)
                    } catch (h) {
                      if (pa.lastError = h, "string" != typeof F.caught(h).unwrap()) throw h;
                    }++a._dispatchIndex
                  }
                if (null != b && 0 < b.length)
                  for (b._dispatchIndex = 0; b._dispatchIndex < b.length;) {
                    try {
                      b.listeners[b._dispatchIndex](e)
                    } catch (h) {
                      if (pa.lastError =
                        h, "string" != typeof F.caught(h).unwrap()) throw h;
                    }++b._dispatchIndex
                  }
                return e
              } e = this.createActorOfType(a, b, c, d)
          }
          return e
        },
        createActorOfType: function(a, b, c, d) {
          if (null == a) return null;
          b = new al(1E8, b | 0, c | 0, 1, 1, d, -1, 0, a.groupID, a.ID, null, !1);
          b = this.createActor(b, !0);
          b.initScripts();
          a = this.whenTypeGroupCreatedEvents.h[a.__id__];
          c = this.whenTypeGroupCreatedEvents;
          d = b.getGroup();
          c = c.h[d.__id__];
          if (null != a && 0 < a.length)
            for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
              try {
                a.listeners[a._dispatchIndex](b)
              } catch (e) {
                if (pa.lastError =
                  e, "string" != typeof F.caught(e).unwrap()) throw e;
              }++a._dispatchIndex
            }
          if (null != c && 0 < c.length)
            for (c._dispatchIndex = 0; c._dispatchIndex < c.length;) {
              try {
                c.listeners[c._dispatchIndex](b)
              } catch (e) {
                if (pa.lastError = e, "string" != typeof F.caught(e).unwrap()) throw e;
              }++c._dispatchIndex
            }
          return b
        },
        getTopLayer: function() {
          return this.topLayer.ID
        },
        getBottomLayer: function() {
          return this.bottomLayer.ID
        },
        getMiddleLayer: function() {
          return this.middleLayer.ID
        },
        update: function(a) {
          if (null != this.scene) {
            xb.update(a | 0);
            if (!p.NO_PHYSICS) {
              var b =
                this.world.getScreenBounds();
              b.lowerBound.x = (p.cameraX / p.SCALE - p.paddingLeft) / p.physicsScale;
              b.lowerBound.y = (p.cameraY / p.SCALE - p.paddingTop) / p.physicsScale;
              b.upperBound.x = b.lowerBound.x + (p.screenWidth + p.paddingRight + p.paddingLeft) / p.physicsScale;
              b.upperBound.y = b.lowerBound.y + (p.screenHeight + p.paddingBottom + p.paddingTop) / p.physicsScale
            }
            b = N.mouseX / p.SCALE | 0;
            var c = N.mouseY / p.SCALE | 0;
            if (N.mousePressed && (u.mpx = b, u.mpy = c, 0 < this.whenMousePressed.length))
              for (this.whenMousePressed._dispatchIndex = 0; this.whenMousePressed._dispatchIndex <
                this.whenMousePressed.length;) {
                try {
                  this.whenMousePressed.listeners[this.whenMousePressed._dispatchIndex]()
                } catch (g) {
                  if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
                }++this.whenMousePressed._dispatchIndex
              }
            if (N.mouseReleased && (u.mrx = b, u.mry = c, 0 < this.whenMouseReleased.length))
              for (this.whenMouseReleased._dispatchIndex = 0; this.whenMouseReleased._dispatchIndex < this.whenMouseReleased.length;) {
                try {
                  this.whenMouseReleased.listeners[this.whenMouseReleased._dispatchIndex]()
                } catch (g) {
                  if (pa.lastError =
                    g, "string" != typeof F.caught(g).unwrap()) throw g;
                }++this.whenMouseReleased._dispatchIndex
              }
            if (this.mx != b || this.my != c) {
              this.mx = b;
              this.my = c;
              if (0 < this.whenMouseMoved.length)
                for (this.whenMouseMoved._dispatchIndex = 0; this.whenMouseMoved._dispatchIndex < this.whenMouseMoved.length;) {
                  try {
                    this.whenMouseMoved.listeners[this.whenMouseMoved._dispatchIndex]()
                  } catch (g) {
                    if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
                  }++this.whenMouseMoved._dispatchIndex
                }
              if (N.mouseDown && !N.mousePressed && 0 < this.whenMouseDragged.length)
                for (this.whenMouseDragged._dispatchIndex =
                  0; this.whenMouseDragged._dispatchIndex < this.whenMouseDragged.length;) {
                  try {
                    this.whenMouseDragged.listeners[this.whenMouseDragged._dispatchIndex]()
                  } catch (g) {
                    if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
                  }++this.whenMouseDragged._dispatchIndex
                }
            }
            for (var d = 0; d < this.tasks.length;) b = this.tasks[d], b.done || b.update(p.STEP_SIZE), b.done && (da.remove(this.tasks, b), --d), ++d;
            if (0 < this.whenKeyPressedEvents.keys.length) {
              b = 0;
              for (c = this.whenKeyPressedEvents.keys.length; b < c;) {
                d = b++;
                var e = this.whenKeyPressedEvents.keys[d];
                d = N.pressed(e);
                var f = N.released(e);
                if (d || f)
                  if (e = this.whenKeyPressedEvents.map.get(e), 0 < e.length)
                    for (e._dispatchIndex = 0; e._dispatchIndex < e.length;) {
                      try {
                        e.listeners[e._dispatchIndex](d, f)
                      } catch (g) {
                        if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
                      }++e._dispatchIndex
                    }
              }
              this.keyPollOccurred = !0
            }
            if (0 < this.whenUpdated.length)
              for (this.whenUpdated._dispatchIndex = 0; this.whenUpdated._dispatchIndex < this.whenUpdated.length;) {
                try {
                  this.whenUpdated.listeners[this.whenUpdated._dispatchIndex](a)
                } catch (g) {
                  if (pa.lastError =
                    g, "string" != typeof F.caught(g).unwrap()) throw g;
                }++this.whenUpdated._dispatchIndex
              }
            p.NO_PHYSICS || (this.world.step(.01, 3, 3), this.world.clearForces(), p.DEBUG_DRAW && this.world.drawDebugData());
            if (0 != this.regions.mSize)
              for (b = this.regions.iterator(); b.hasNext();) c = b.next(), null != c && c.innerUpdate(a, !0);
            for (; 0 < this.disableCollisionList.length;) this.disableCollisionList.pop();
            if (0 != this.collisionPairs.mSize)
              for (b = this.collisionPairs.keys(); b.hasNext();) c = b.next(), this.collisionPairs.unset(c);
            ve.updateAll(a);
            if (0 != this.allActors.mSize)
              for (d = this.allActors.iterator(); d.hasNext();) b = d.next(), null == b || b.dead || b.recycled || (c = (0 != b.physicsMode || b.body.isActive()) && b.colX + b.cacheWidth * b.realScaleX >= p.cameraX / p.SCALE - p.paddingLeft && b.colY + b.cacheHeight * b.realScaleY >= p.cameraY / p.SCALE - p.paddingTop && b.colX < p.cameraX / p.SCALE + p.screenWidth + p.paddingRight && b.colY < p.cameraY / p.SCALE + p.screenHeight + p.paddingBottom, b.isOnScreenCache = c || b.isHUD, 0 == b.physicsMode && null != b.body ? b.killLeaveScreen && !c ? this.recycleActor(b) :
                (b.body.isActive() || b.alwaysSimulate || b.isHUD) && b.innerUpdate(a, !1) : 0 != b.physicsMode && (b.killLeaveScreen && !c ? this.recycleActor(b) : (c || b.alwaysSimulate || b.isHUD) && b.innerUpdate(a, !1)), b.dead && this.disableCollisionList.push(b));
            this.keyPollOccurred = !1;
            b = 0;
            for (c = this.disableCollisionList.length; b < c;) d = b++, d = this.disableCollisionList[d], null != d && (d.handlesCollisions = !1);
            b = 0;
            for (c = this.animatedTiles.length; b < c;) d = b++, d = this.animatedTiles[d], d.update(a), this.tileUpdated = this.tileUpdated || d.updateSource;
            null != this.leave && this.leave.isActive() ? this.leave.update(a) : null != this.enter && this.enter.isActive() && this.enter.update(a);
            for (b = this.layers.iterator(); b.hasNext();) b.next().updatePosition(p.cameraX, p.cameraY, a);
            !p.NO_PHYSICS && p.DEBUG_DRAW && (this.debugLayer.set_x(-p.cameraX), this.debugLayer.set_y(-p.cameraY));
            this.isShaking && (this.shakeTimer -= p.STEP_SIZE, 0 >= this.shakeTimer ? this.stopShakingScreen() : (a = -this.shakeIntensity * p.screenHeight + 2 * Math.random() * this.shakeIntensity * p.screenHeight, this.master.set_x((-this.shakeIntensity *
              p.screenWidth + 2 * Math.random() * this.shakeIntensity * p.screenWidth) * p.SCALE), this.master.set_y(a * p.SCALE)))
          }
        },
        onUpdate: function(a) {
          a = Ja.getTimer();
          var b = a - this.lastTime;
          200 <= b && (b = 200);
          this.acc += b;
          p.elapsedTime = b;
          p.totalElapsedTime += b | 0;
          null != this.leave ? (this.leave.isComplete() && (this.leave.deactivate(), this.enterScene()), this.postUpdate(a)) : (null != this.enter && this.enter.isComplete() && (this.enter.deactivate(), this.enter.cleanup(), this.enter = null), this.sceneInitialized && this.postUpdate(a))
        },
        postUpdate: function(a) {
          for (; this.acc >
            p.STEP_SIZE;) this.update(p.STEP_SIZE), this.acc -= p.STEP_SIZE, N.update();
          this.lastTime = a;
          if (0 != this.allActors.mSize)
            for (a = this.allActors.iterator(); a.hasNext();) {
              var b = a.next();
              null == b || 0 == b.physicsMode && null == b.body || (b.dead || b.dying ? this.removeActor(b) : b.updateMatrix || b.resetOrigin ? (b.updateDrawingMatrix(), b.updateMatrix = !1, b.resetOrigin = !1) : b.smoothMove && (b.drawX != b.realX || b.drawY != b.realY) && b.updateDrawingMatrix())
            }
          this.draw()
        },
        onFocus: function(a) {
          p.inFocus || (p.inFocus = !0, this.focusChanged(!1))
        },
        onFocusLost: function(a) {
          p.inFocus && (p.inFocus = !1, this.focusChanged(!0))
        },
        focusChanged: function(a) {
          if (null != this.whenFocusChanged && 0 < this.whenFocusChanged.length)
            for (this.whenFocusChanged._dispatchIndex = 0; this.whenFocusChanged._dispatchIndex < this.whenFocusChanged.length;) {
              try {
                this.whenFocusChanged.listeners[this.whenFocusChanged._dispatchIndex](a)
              } catch (b) {
                if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
              }++this.whenFocusChanged._dispatchIndex
            }
        },
        handleCollision: function(a, b) {
          var c = a.typeID,
            d = b.otherActor.typeID;
          if (p.NO_PHYSICS) {
            var e = 1E6 + b.thisActor.groupID;
            var f = 1E6 + b.otherActor.groupID
          } else {
            if (null != b.thisShape) {
              f = b.thisShape.groupID;
              if (-1E3 == f) {
                var g = b.thisShape.getBody();
                null != g && (f = g.getUserData().groupID)
              }
              e = 1E6 + f
            } else e = 1E6 + b.thisActor.groupID;
            null != b.otherShape ? (f = b.otherShape.groupID, -1E3 == f && (g = b.otherShape.getBody(), null != g && (f = g.getUserData().groupID)), f = 1E6 + f) : f = 1E6 + b.otherActor.groupID
          }
          if (null != this.collisionPairs) {
            g = a.ID;
            var h = this.collisionPairs.mH,
              m = h.mHash[73856093 *
                g & h.mMask];
            if (-1 == m) g = !1;
            else {
              var l = h.mData;
              if (l[m] == g) g = !0;
              else {
                h = !1;
                for (m = l[m + 2]; - 1 != m;) {
                  if (l[m] == g) {
                    h = !0;
                    break
                  }
                  m = l[m + 2]
                }
                g = h
              }
            }
            g || this.collisionPairs.set(a.ID, new Za);
            g = b.otherActor.ID;
            h = this.collisionPairs.mH;
            m = h.mHash[73856093 * g & h.mMask];
            if (-1 == m) g = !1;
            else if (l = h.mData, l[m] == g) g = !0;
            else {
              h = !1;
              for (m = l[m + 2]; - 1 != m;) {
                if (l[m] == g) {
                  h = !0;
                  break
                }
                m = l[m + 2]
              }
              g = h
            }
            g || this.collisionPairs.set(b.otherActor.ID, new Za);
            h = this.collisionPairs;
            g = a.ID;
            l = h.mH;
            m = l.mHash[73856093 * g & l.mMask];
            if (-1 == m) g = -2147483648;
            else if (l =
              l.mData, l[m] == g) g = l[m + 1];
            else {
              var y = -2147483648;
              for (m = l[m + 2]; - 1 != m;) {
                if (l[m] == g) {
                  y = l[m + 1];
                  break
                }
                m = l[m + 2]
              }
              g = y
            }
            if ((-2147483648 == g ? null : h.mVals[g]).h.hasOwnProperty(b.otherActor.ID)) g = !0;
            else {
              h = this.collisionPairs;
              g = b.otherActor.ID;
              l = h.mH;
              m = l.mHash[73856093 * g & l.mMask];
              if (-1 == m) g = -2147483648;
              else if (l = l.mData, l[m] == g) g = l[m + 1];
              else {
                y = -2147483648;
                for (m = l[m + 2]; - 1 != m;) {
                  if (l[m] == g) {
                    y = l[m + 1];
                    break
                  }
                  m = l[m + 2]
                }
                g = y
              }
              g = (-2147483648 == g ? null : h.mVals[g]).h.hasOwnProperty(a.ID)
            }
            if (g) return
          }
          if (-1 < c || -1 < d) {
            if (!b.otherCollidedWithTerrain &&
              this.whenCollidedEvents.h.hasOwnProperty(c) && this.whenCollidedEvents.h[c].h.hasOwnProperty(d)) {
              g = this.whenCollidedEvents.h[c].h[d];
              if (0 < g.length)
                for (g._dispatchIndex = 0; g._dispatchIndex < g.length;) {
                  try {
                    g.listeners[g._dispatchIndex](b)
                  } catch (n) {
                    if (pa.lastError = n, "string" != typeof F.caught(n).unwrap()) throw n;
                  }++g._dispatchIndex
                }
              0 == g.length && this.whenCollidedEvents.h[c].remove(d)
            }
            if (c != d && this.whenCollidedEvents.h.hasOwnProperty(d) && this.whenCollidedEvents.h[d].h.hasOwnProperty(c)) {
              g = this.whenCollidedEvents.h[d].h[c];
              h = b.switchData(nc.get());
              if (0 < g.length)
                for (g._dispatchIndex = 0; g._dispatchIndex < g.length;) {
                  try {
                    g.listeners[g._dispatchIndex](h)
                  } catch (n) {
                    if (pa.lastError = n, "string" != typeof F.caught(n).unwrap()) throw n;
                  }++g._dispatchIndex
                }
              0 == g.length && this.whenCollidedEvents.h[d].remove(c)
            }
          }
          if (0 < e && 0 < f) {
            if (this.whenCollidedEvents.h.hasOwnProperty(e) && this.whenCollidedEvents.h[e].h.hasOwnProperty(f)) {
              g = this.whenCollidedEvents.h[e].h[f];
              if (0 < g.length)
                for (g._dispatchIndex = 0; g._dispatchIndex < g.length;) {
                  try {
                    g.listeners[g._dispatchIndex](b)
                  } catch (n) {
                    if (pa.lastError =
                      n, "string" != typeof F.caught(n).unwrap()) throw n;
                  }++g._dispatchIndex
                }
              0 == g.length && this.whenCollidedEvents.h[e].remove(f)
            }
            if (e != f && this.whenCollidedEvents.h.hasOwnProperty(f) && this.whenCollidedEvents.h[f].h.hasOwnProperty(e)) {
              g = this.whenCollidedEvents.h[f].h[e];
              h = b.switchData(nc.get());
              if (0 < g.length)
                for (g._dispatchIndex = 0; g._dispatchIndex < g.length;) {
                  try {
                    g.listeners[g._dispatchIndex](h)
                  } catch (n) {
                    if (pa.lastError = n, "string" != typeof F.caught(n).unwrap()) throw n;
                  }++g._dispatchIndex
                }
              0 == g.length && this.whenCollidedEvents.h[f].remove(e)
            }
          }
          if (null !=
            this.collisionPairs) {
            h = this.collisionPairs;
            g = a.ID;
            l = h.mH;
            m = l.mHash[73856093 * g & l.mMask];
            if (-1 == m) g = -2147483648;
            else if (l = l.mData, l[m] == g) g = l[m + 1];
            else {
              y = -2147483648;
              for (m = l[m + 2]; - 1 != m;) {
                if (l[m] == g) {
                  y = l[m + 1];
                  break
                }
                m = l[m + 2]
              }
              g = y
            }(-2147483648 == g ? null : h.mVals[g]).h[b.otherActor.ID] = !1;
            h = this.collisionPairs;
            g = b.otherActor.ID;
            l = h.mH;
            m = l.mHash[73856093 * g & l.mMask];
            if (-1 == m) g = -2147483648;
            else if (l = l.mData, l[m] == g) g = l[m + 1];
            else {
              y = -2147483648;
              for (m = l[m + 2]; - 1 != m;) {
                if (l[m] == g) {
                  y = l[m + 1];
                  break
                }
                m = l[m + 2]
              }
              g = y
            }(-2147483648 ==
              g ? null : h.mVals[g]).h[a.ID] = !1
          }
        },
        soundFinished: function(a) {
          var b = K.__cast(this.channels[a], Yb);
          if (null != this.whenSoundEndedEvents) {
            var c = this.whenSoundEndedEvents.h[b.currentClip.__id__];
            b.currentSound = null;
            if (null != c && 0 < c.length)
              for (c._dispatchIndex = 0; c._dispatchIndex < c.length;) {
                try {
                  c.listeners[c._dispatchIndex]()
                } catch (d) {
                  if (pa.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
                }++c._dispatchIndex
              }
          } else b.currentSound = null;
          if (null != this.whenChannelEndedEvents && (a = this.whenChannelEndedEvents.h[a],
              null != a && 0 < a.length))
            for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
              try {
                a.listeners[a._dispatchIndex]()
              } catch (d) {
                if (pa.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
              }++a._dispatchIndex
            }
        },
        addTask: function(a) {
          this.tasks.push(a)
        },
        removeTask: function(a) {
          da.remove(this.tasks, a)
        },
        shakeScreen: function(a, b) {
          this.shakeTimer = p.MS_PER_SEC * b | 0;
          this.isShaking = !0;
          this.shakeIntensity = a
        },
        stopShakingScreen: function() {
          this.shakeTimer = 0;
          this.isShaking = !1;
          this.master.set_x(0);
          this.master.set_y(0)
        },
        cameraFollow: function(a,
          b, c) {
          this.moveCamera(a.colX + a.cacheWidth / 2, a.colY + a.cacheHeight / 2)
        },
        moveCamera: function(a, b) {
          this.camera.setLocation(a, b);
          p.cameraX = this.camera.realX - p.screenWidthHalf;
          p.cameraY = this.camera.realY - p.screenHeightHalf;
          p.limitCameraToScene && (p.cameraX = Math.max(0, Math.min(p.sceneWidth - p.screenWidth, p.cameraX)), p.cameraY = Math.max(0, Math.min(p.sceneHeight - p.screenHeight, p.cameraY)));
          p.cameraX *= p.SCALE;
          p.cameraY *= p.SCALE;
          1 != this.zoomMultiplier && this.isHUDZoomable && (this.hudLayer.set_x(-u.getScreenX()), this.hudLayer.set_y(-u.getScreenY()))
        },
        setZoom: function(a, b) {
          null == b && (b = !0);
          0 >= a || this.zoomMultiplier == a || (this.zoomMultiplier = a, this.root.set_scaleX(p.screenScaleX = a * p.unzoomedScaleX), this.root.set_scaleY(p.screenScaleY = a * p.unzoomedScaleY), b && (p.screenWidth = 1 / a * V.logicalWidth | 0, p.screenWidthHalf = p.screenWidth / 2 | 0, p.screenHeight = 1 / a * V.logicalHeight | 0, p.screenHeightHalf = p.screenHeight / 2 | 0, R.applyToAllChildren(this.root, function(a) {
            a instanceof Yd && K.__cast(a, Yd).expandBitmap()
          })), this.setColorBackground(this.scene.colorBackground), this.root.set_scrollRect(new ha(0,
            0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE)), this.moveCamera(this.camera.realX, this.camera.realY), this.isHUDZoomable || (this.hudLayer.set_scaleX(1 / a), this.hudLayer.set_scaleY(1 / a)))
        },
        pause: function() {
          if (!this.isTransitioning()) {
            p.paused = !0;
            if (0 != this.allActors.mSize)
              for (var a = this.allActors.keys(); a.hasNext();) {
                var b = a.next(),
                  c = this.allActors,
                  d = c.mH,
                  e = d.mHash[73856093 * b & d.mMask];
                if (-1 == e) b = -2147483648;
                else if (d = d.mData, d[e] == b) b = d[e + 1];
                else {
                  var f = -2147483648;
                  for (e = d[e + 2]; - 1 != e;) {
                    if (d[e] == b) {
                      f =
                        d[e + 1];
                      break
                    }
                    e = d[e + 2]
                  }
                  b = f
                }
                c = -2147483648 == b ? null : c.mVals[b];
                null != c && c.pause()
              }
            if (0 < this.whenPaused.length)
              for (this.whenPaused._dispatchIndex = 0; this.whenPaused._dispatchIndex < this.whenPaused.length;) {
                try {
                  this.whenPaused.listeners[this.whenPaused._dispatchIndex](!0)
                } catch (g) {
                  if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
                }++this.whenPaused._dispatchIndex
              }
          }
        },
        unpause: function() {
          p.paused = !1;
          if (0 != this.allActors.mSize)
            for (var a = this.allActors.keys(); a.hasNext();) {
              var b = a.next(),
                c = this.allActors,
                d = c.mH,
                e = d.mHash[73856093 * b & d.mMask];
              if (-1 == e) b = -2147483648;
              else if (d = d.mData, d[e] == b) b = d[e + 1];
              else {
                var f = -2147483648;
                for (e = d[e + 2]; - 1 != e;) {
                  if (d[e] == b) {
                    f = d[e + 1];
                    break
                  }
                  e = d[e + 2]
                }
                b = f
              }
              c = -2147483648 == b ? null : c.mVals[b];
              null != c && c.unpause()
            }
          if (0 < this.whenPaused.length)
            for (this.whenPaused._dispatchIndex = 0; this.whenPaused._dispatchIndex < this.whenPaused.length;) {
              try {
                this.whenPaused.listeners[this.whenPaused._dispatchIndex](!1)
              } catch (g) {
                if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
              }++this.whenPaused._dispatchIndex
            }
        },
        isPaused: function() {
          return p.paused
        },
        draw: function() {
          for (var a = 0, b = this.interactiveLayers; a < b.length;) {
            var c = b[a];
            ++a;
            c.overlay.get_graphics().clear()
          }
          this.hudLayer.overlay.get_graphics().clear();
          this.g.graphics = this.transitionLayer.get_graphics();
          this.g.graphics.clear();
          c = this.g;
          c.alpha = 1;
          c.strokeSize = 0;
          c.fillColor = 0;
          c.strokeColor = 0;
          c.font = c.defaultFont;
          if (0 != this.allActors.mSize)
            for (a = this.allActors.iterator(); a.hasNext();)
              if (b = a.next(), 0 < b.whenDrawing.length && null != b.layer) {
                this.g.graphics = b.layer.overlay.get_graphics();
                c = this.g;
                c.drawActor = !0;
                c.actor = b;
                if (b.smoothMove) {
                  var d = b.drawY - Math.floor(b.cacheHeight / 2) - b.currOffset.y;
                  c.x = (b.drawX - Math.floor(b.cacheWidth / 2) - b.currOffset.x) * c.scaleX;
                  c.y = d * c.scaleY
                } else c.x = b.colX * c.scaleX, c.y = b.colY * c.scaleY;
                c = this.g;
                c.alpha = 1;
                c.strokeSize = 0;
                c.fillColor = 0;
                c.strokeColor = 0;
                c.font = c.defaultFont;
                if (0 < b.whenDrawing.length)
                  for (b.whenDrawing._dispatchIndex = 0; b.whenDrawing._dispatchIndex < b.whenDrawing.length;) {
                    try {
                      b.whenDrawing.listeners[b.whenDrawing._dispatchIndex](this.g, 0, 0)
                    } catch (e) {
                      if (pa.lastError =
                        e, "string" != typeof F.caught(e).unwrap()) throw e;
                    }++b.whenDrawing._dispatchIndex
                  }
              } a = 0;
          for (b = this.interactiveLayers; a < b.length;)
            if (c = b[a], ++a, c.cameraMoved || this.tileUpdated) c.tiles.draw(p.cameraX * c.scrollFactorX | 0, p.cameraY * c.scrollFactorY | 0), c.cameraMoved = !1;
          this.tileUpdated = !1;
          this.g.graphics = this.transitionLayer.get_graphics();
          c = this.g;
          c.drawActor = !1;
          c.actor = null;
          c.x = 0;
          c.y = 0;
          c = this.g;
          c.alpha = 1;
          c.strokeSize = 0;
          c.fillColor = 0;
          c.strokeColor = 0;
          c.font = c.defaultFont;
          if (0 < this.whenDrawing.length)
            for (this.whenDrawing._dispatchIndex =
              0; this.whenDrawing._dispatchIndex < this.whenDrawing.length;) {
              try {
                this.whenDrawing.listeners[this.whenDrawing._dispatchIndex](this.g, 0, 0)
              } catch (e) {
                if (pa.lastError = e, "string" != typeof F.caught(e).unwrap()) throw e;
              }++this.whenDrawing._dispatchIndex
            }
          eb.visitStringCache();
          null != this.leave && this.leave.isActive() ? this.leave.draw(null) : null != this.enter && this.enter.isActive() && this.enter.draw(null);
          null != this.shaders && 0 < this.shaders.length && this.shaders[0].capture()
        },
        getValue: function(a, b) {
          return this.behaviors.getAttribute(a,
            b)
        },
        setValue: function(a, b, c) {
          this.behaviors.setAttribute(a, b, c)
        },
        say: function(a, b, c) {
          return this.behaviors.call2(a, b, c)
        },
        shout: function(a, b) {
          return this.behaviors.call(a, b)
        },
        getActor: function(a) {
          var b = this.allActors,
            c = b.mH,
            d = c.mHash[73856093 * a & c.mMask];
          if (-1 == d) a = -2147483648;
          else if (c = c.mData, c[d] == a) a = c[d + 1];
          else {
            var e = -2147483648;
            for (d = c[d + 2]; - 1 != d;) {
              if (c[d] == a) {
                e = c[d + 1];
                break
              }
              d = c[d + 2]
            }
            a = e
          }
          return -2147483648 == a ? null : b.mVals[a]
        },
        getActorsOfType: function(a) {
          return null == a ? [] : null != this.actorsOfType.h[a.ID] ?
            this.actorsOfType.h[a.ID] : []
        },
        getRecycledActorsOfType: function(a) {
          return this.recycledActorsOfType.h[a.ID]
        },
        getLayer: function(a, b) {
          return 0 == a ? this.getLayerById(M.parseInt(b)) : this.getLayerByName(b)
        },
        getLayerById: function(a, b) {
          null == b && (b = !0);
          if (-1 == a) return null;
          var c = p.engine.layers,
            d = c.mH,
            e = d.mHash[73856093 * a & d.mMask];
          if (-1 == e) a = -2147483648;
          else if (d = d.mData, d[e] == a) a = d[e + 1];
          else {
            var f = -2147483648;
            for (e = d[e + 2]; - 1 != e;) {
              if (d[e] == a) {
                f = d[e + 1];
                break
              }
              e = d[e + 2]
            }
            a = f
          }
          c = -2147483648 == a ? null : c.mVals[a];
          null ==
            c && b && (c = this.topLayer);
          return c
        },
        getLayerByName: function(a, b) {
          null == b && (b = !0);
          a = p.engine.layersByName.h[a];
          null == a && b && (a = this.topLayer);
          return a
        },
        getLayerByOrder: function(a) {
          switch (a) {
            case 0:
              return this.topLayer;
            case 1:
              return this.middleLayer;
            case 2:
              return this.bottomLayer;
            default:
              return this.topLayer
          }
        },
        sendToBack: function(a) {
          a.isHUD || this.moveActorToLayer(a, this.bottomLayer)
        },
        sendBackward: function(a) {
          if (!a.isHUD)
            for (var b = a.layer.order; this.layersToDraw.h.hasOwnProperty(--b);)
              if (this.layersToDraw.h[b] instanceof Lc) {
                this.moveActorToLayer(a, this.layersToDraw.h[b]);
                break
              }
        },
        bringToFront: function(a) {
          a.isHUD || this.moveActorToLayer(a, this.topLayer)
        },
        bringForward: function(a) {
          if (!a.isHUD)
            for (var b = a.layer.order; this.layersToDraw.h.hasOwnProperty(++b);)
              if (this.layersToDraw.h[b] instanceof Lc) {
                this.moveActorToLayer(a, this.layersToDraw.h[b]);
                break
              }
        },
        getNumberOfActorsWithinLayer: function(a) {
          return a instanceof Lc ? K.__cast(a, Lc).actorContainer.get_numChildren() : 0
        },
        getNumberOfLayers: function() {
          return this.master.get_numChildren()
        },
        getOrderOfLayer: function(a) {
          return a.order
        },
        moveLayerToOrder: function(a, b) {
          0 > b && (b = 0);
          b > this.master.get_numChildren() - 1 && (b = this.master.get_numChildren() - 1);
          a.order != b && (this.master.setChildIndex(a, b), this.refreshLayers())
        },
        getNextLayerID: function() {
          for (var a = -1, b = this.layers.iterator(); b.hasNext();) {
            var c = b.next();
            a = Math.max(a, c.ID) | 0
          }
          return a + 1
        },
        insertLayer: function(a, b) {
          this.master.addChildAt(a, b);
          a instanceof ae ? this.backgroundLayers.push(K.__cast(a, ae)) : a instanceof Lc && this.interactiveLayers.push(K.__cast(a,
            Lc));
          this.layers.set(a.ID, a);
          this.layersByName.h[a.layerName] = a;
          this.refreshLayers()
        },
        removeLayer: function(a) {
          this.master.removeChild(a);
          a instanceof ae ? da.remove(this.backgroundLayers, K.__cast(a, ae)) : a instanceof Lc && da.remove(this.interactiveLayers, K.__cast(a, Lc));
          this.layers.unset(a.ID);
          a = a.layerName;
          var b = this.layersByName;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          this.refreshLayers()
        },
        refreshLayers: function() {
          for (var a = !1, b = !1, c = 0, d = 0, e = this.master.get_numChildren(); d < e;) {
            var f =
              d++,
              g = K.__cast(this.master.getChildAt(f), Ag);
            this.layersToDraw.h[f] = g;
            g.order = f;
            g instanceof Lc && (a || (a = !0, this.bottomLayer = g), b || c != Math.floor(this.interactiveLayers.length / 2) || (b = !0, this.middleLayer = g), this.topLayer = g, ++c)
          }
        },
        getPhysicalWidth: function() {
          return this.physicalWidth
        },
        getPhysicalHeight: function() {
          return this.physicalHeight
        },
        enableGlobalSleeping: function() {
          this.world.m_allowSleep = !0
        },
        disableGlobalSleeping: function() {
          this.world.m_allowSleep = !1
        },
        getGroup: function(a, b) {
          return -1E3 == a && null !=
            b ? (a = this.groups, b = b.getGroupID(), a.h[b]) : this.groups.h[a]
        },
        getGroupByName: function(a) {
          a = this.reverseGroups.h[a];
          return null == a ? this.groups.h[3] : a
        },
        nextJointID: function() {
          for (var a = -1, b = this.joints.iterator(); b.hasNext();) {
            var c = b.next();
            null != c && (a = Math.max(a, c.ID) | 0)
          }
          return a + 1
        },
        addJoint: function(a) {
          var b = this.nextJointID();
          a.ID = b;
          this.joints.h[b] = a
        },
        getJoint: function(a) {
          return this.joints.h[a]
        },
        destroyJoint: function(a) {
          this.joints.remove(a.ID);
          this.world.destroyJoint(a)
        },
        createStickJoint: function(a,
          b, c, d, e, f) {
          null == f && (f = 0);
          null == e && (e = 0);
          null == d && (d = !1);
          null == c && (c = -1);
          var g = a.getLocalCenter(),
            h = b.getLocalCenter();
          0 == a.getType() && (g.x = a.getUserData().getPhysicsWidth() / 2, g.y = a.getUserData().getPhysicsHeight() / 2);
          0 == b.getType() && (h.x = b.getUserData().getPhysicsWidth() / 2, h.y = b.getUserData().getPhysicsHeight() / 2);
          g = a.getWorldPoint(g);
          h = b.getWorldPoint(h);
          var m = new Nh;
          m.initialize(a, b, g, h);
          m.collideConnected = d;
          m.dampingRatio = e;
          m.frequencyHz = f;
          a = this.world.createJoint(m); - 1 == c ? this.addJoint(a) : (this.joints.h[c] =
            a, a.ID = c);
          return K.__cast(a, si)
        },
        createCustomStickJoint: function(a, b, c, d, e, f) {
          b = new C(b, c);
          e = new C(e, f);
          b.x = p.toPhysicalUnits(b.x);
          b.y = p.toPhysicalUnits(b.y);
          e.x = p.toPhysicalUnits(e.x);
          e.y = p.toPhysicalUnits(e.y);
          b = a.getWorldPoint(b);
          e = d.getWorldPoint(e);
          f = new Nh;
          f.initialize(a, d, b, e);
          a = this.world.createJoint(f);
          this.addJoint(a);
          return K.__cast(a, si)
        },
        createHingeJoint: function(a, b, c, d, e, f, g, h, m, l, y) {
          null == y && (y = 0);
          null == l && (l = 0);
          null == m && (m = 0);
          null == h && (h = 0);
          null == g && (g = !1);
          null == f && (f = !1);
          null == e &&
            (e = !1);
          null == d && (d = -1);
          null == b && (b = this.world.m_groundBody);
          null == c && (c = a.getLocalCenter());
          var n = new Oh;
          n.bodyA = a;
          n.bodyB = b;
          c.x = p.toPhysicalUnits(c.x);
          c.y = p.toPhysicalUnits(c.y);
          n.localAnchorA = c;
          n.localAnchorB = b.getLocalPoint(a.getWorldPoint(c));
          n.collideConnected = e;
          n.enableLimit = f;
          n.enableMotor = g;
          n.lowerAngle = h;
          n.upperAngle = m;
          n.maxMotorTorque = l;
          n.motorSpeed = y;
          a = this.world.createJoint(n); - 1 == d ? this.addJoint(a) : (this.joints.h[d] = a, a.ID = d);
          return K.__cast(a, bg)
        },
        createSlidingJoint: function(a, b, c, d,
          e, f, g, h, m, l, y) {
          null == y && (y = 0);
          null == l && (l = 0);
          null == m && (m = 0);
          null == h && (h = 0);
          null == g && (g = !1);
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = -1);
          null == b && (b = this.world.m_groundBody);
          null == c && (c = new C(1, 0));
          c.normalize();
          var n = a.getWorldCenter(),
            k = b.getWorldCenter();
          0 == a.getType() && null != a.getUserData() && (n.x = a.getUserData().getPhysicsWidth() / 2, n.y = a.getUserData().getPhysicsHeight() / 2, n = a.getWorldPoint(n));
          0 == b.getType() && null != b.getUserData() && (k.x = b.getUserData().getPhysicsWidth() / 2, k.y = b.getUserData().getPhysicsHeight() /
            2, b.getWorldPoint(k));
          k = new Ph;
          k.initialize(a, b, n, c);
          k.collideConnected = e;
          k.enableLimit = f;
          k.enableMotor = g;
          k.lowerTranslation = p.toPhysicalUnits(h);
          k.upperTranslation = p.toPhysicalUnits(m);
          k.maxMotorForce = l;
          k.motorSpeed = p.toPhysicalUnits(y);
          a = this.world.createJoint(k); - 1 == d ? this.addJoint(a) : (this.joints.h[d] = a, a.ID = d);
          return K.__cast(a, Aj)
        },
        createRegion: function(a, b, c, d) {
          null == d && (d = !1);
          var e = [];
          e.push(c);
          c = new vd(this, a, b, e);
          d && c.setXY(a + c.regionWidth / 2, b + c.regionHeight / 2);
          this.addRegion(c);
          return c
        },
        createBoxRegion: function(a, b, c, d) {
          if (p.NO_PHYSICS) return a = new vd(this, a, b, [], new ha(0, 0, c, d)), this.addRegion(a), a;
          c = p.toPhysicalUnits(c);
          d = p.toPhysicalUnits(d);
          var e = new Lb;
          e.setAsBox(c / 2, d / 2);
          return this.createRegion(a, b, e, !0)
        },
        createCircularRegion: function(a, b, c) {
          if (p.NO_PHYSICS) return a = new vd(this, a, b, [], new ha(0, 0, 2 * c, 2 * c)), this.addRegion(a), a;
          c = p.toPhysicalUnits(c);
          var d = new Qc;
          d.m_radius = c;
          return this.createRegion(a, b, d, !0)
        },
        addRegion: function(a) {
          -1 == a.ID && (a.ID = this.nextRegionID());
          this.regions.set(a.ID,
            a);
          p.NO_PHYSICS && this.groups.h[-2].addChild(a)
        },
        removeRegion: function(a) {
          a = this.getRegion(a);
          this.regions.unset(a.ID);
          a.destroy();
          p.NO_PHYSICS && this.groups.h[-2].removeChild(a)
        },
        getRegion: function(a) {
          var b = this.regions,
            c = b.mH,
            d = c.mHash[73856093 * a & c.mMask];
          if (-1 == d) a = -2147483648;
          else if (c = c.mData, c[d] == a) a = c[d + 1];
          else {
            var e = -2147483648;
            for (d = c[d + 2]; - 1 != d;) {
              if (c[d] == a) {
                e = c[d + 1];
                break
              }
              d = c[d + 2]
            }
            a = e
          }
          return -2147483648 == a ? null : b.mVals[a]
        },
        getRegions: function() {
          return this.regions
        },
        nextRegionID: function() {
          for (var a = -1, b = this.regions.iterator(); b.hasNext();) {
            var c = b.next();
            null != c && (a = Math.max(a, c.ID) | 0)
          }
          return a + 1
        },
        isInRegion: function(a, b) {
          if (null != b) {
            var c = this.regions;
            var d = b.getID(),
              e = c.mH,
              f = e.mHash[73856093 * d & e.mMask];
            if (-1 == f) d = -2147483648;
            else if (e = e.mData, e[f] == d) d = e[f + 1];
            else {
              var g = -2147483648;
              for (f = e[f + 2]; - 1 != f;) {
                if (e[f] == d) {
                  g = e[f + 1];
                  break
                }
                f = e[f + 2]
              }
              d = g
            }
            c = null != (-2147483648 == d ? null : c.mVals[d])
          } else c = !1;
          return c ? b.containsActor(a) : !1
        },
        createTerrainRegion: function(a, b, c, d, e) {
          null == e && (e = 1);
          null == d && (d = !1);
          var f = [];
          f.push(c);
          c = new Pg(this, a, b, f, e);
          d && c.setXY(a + c.regionWidth / 2, b + c.regionHeight / 2);
          this.addTerrainRegion(c);
          return c
        },
        createBoxTerrainRegion: function(a, b, c, d, e) {
          null == e && (e = 1);
          c = p.toPhysicalUnits(c);
          d = p.toPhysicalUnits(d);
          var f = new Lb;
          f.setAsBox(c / 2, d / 2);
          return this.createTerrainRegion(a, b, f, !0, e)
        },
        createCircularTerrainRegion: function(a, b, c, d) {
          null == d && (d = 1);
          c = p.toPhysicalUnits(c);
          var e = new Qc;
          e.m_radius = c;
          return this.createTerrainRegion(a, b, e, !0, d)
        },
        addTerrainRegion: function(a) {
          -1 == a.ID &&
            (a.ID = this.nextTerrainRegionID());
          this.terrainRegions.h[a.ID] = a
        },
        removeTerrainRegion: function(a) {
          var b = this.getTerrainRegion(a);
          this.terrainRegions.remove(a);
          b.destroy()
        },
        getTerrainRegion: function(a) {
          return this.terrainRegions.h[a]
        },
        getTerrainRegions: function() {
          return this.terrainRegions
        },
        nextTerrainRegionID: function() {
          for (var a = -1, b = this.terrainRegions.iterator(); b.hasNext();) {
            var c = b.next();
            null != c && (a = Math.max(a, c.ID) | 0)
          }
          return a + 1
        },
        setGameAttribute: function(a, b) {
          this.gameAttributes.h[a] = b
        },
        getGameAttribute: function(a) {
          return this.gameAttributes.h[a]
        },
        restoreGameAttributes: function() {
          var a = oc.get().readGameMbs();
          a = we.readMap(a.getGameAttributes());
          this.gameAttributes.h = Object.create(null);
          for (var b = Object.keys(a.h), c = b.length, d = 0; d < c;) {
            var e = b[d++];
            this.gameAttributes.h[e] = a.h[e]
          }
        },
        setOffscreenTolerance: function(a, b, c, d) {
          p.paddingTop = a;
          p.paddingLeft = b;
          p.paddingBottom = c;
          p.paddingRight = d
        },
        setScrollFactor: function(a, b, c) {
          this.setLayerScrollFactor(this.getLayerById(a), b, c)
        },
        setLayerScrollFactor: function(a, b, c) {
          null == c && (c = b);
          a.scrollFactorX = b;
          a.scrollFactorY =
            c
        },
        __class__: p
      };
      var Un = function(a, b) {
        this.inputControlMap = a;
        this.getInputs = b
      };
      k["com.stencyl.InputMethod_Int"] = Un;
      Un.__name__ = "com.stencyl.InputMethod_Int";
      Un.prototype = {
        inputControlMap: null,
        getInputs: null,
        mapInputToControl: function(a, b) {
          this.inputControlMap.exists(a) || this.inputControlMap.set(a, []);
          for (var c = this.inputControlMap.get(a), d = 0; d < c.length;) {
            var e = c[d];
            ++d;
            e != b && (da.remove(this.getInputs(e), a), N.controlStateUpdated(e))
          } - 1 == this.getInputs(b).indexOf(a) && (this.getInputs(b).push(a), c.push(b),
            N.controlStateUpdated(b))
        },
        unmapInput: function(a) {
          var b = this.inputControlMap.get(a);
          if (null != b)
            for (var c = 0; c < b.length;) {
              var d = b[c];
              ++c;
              da.remove(this.getInputs(d), a);
              N.controlStateUpdated(d)
            }
          this.inputControlMap.remove(a)
        },
        addInputToControl: function(a, b) {
          -1 == this.getInputs(b).indexOf(a) && (this.getInputs(b).push(a), N.controlStateUpdated(b), this.inputControlMap.exists(a) || this.inputControlMap.set(a, []), this.inputControlMap.get(a).push(b))
        },
        removeInputFromControl: function(a, b) {
          if (-1 != this.getInputs(b).indexOf(a)) {
            da.remove(this.getInputs(b),
              a);
            N.controlStateUpdated(b);
            var c = this.inputControlMap.get(a);
            da.remove(c, b);
            0 == c.length && this.inputControlMap.remove(a)
          }
        },
        getInputsForControl: function(a) {
          return null != a ? this.getInputs(a) : null
        },
        removeAllInputsFromControl: function(a) {
          for (var b = this.getInputs(a); 0 < b.length;) {
            var c = b.pop(),
              d = this.inputControlMap.get(c);
            da.remove(d, a);
            0 == d.length && this.inputControlMap.remove(c)
          }
          N.controlStateUpdated(a)
        },
        __class__: Un
      };
      var N = function() {};
      k["com.stencyl.Input"] = N;
      N.__name__ = "com.stencyl.Input";
      N.resetStatics =
        function() {
          p.stage.removeEventListener("keyDown", N.onKeyDown);
          p.stage.removeEventListener("keyUp", N.onKeyUp);
          p.stage.removeEventListener("mouseDown", N.onMouseDown);
          p.stage.removeEventListener("mouseUp", N.onMouseUp);
          p.stage.removeEventListener("mouseWheel", N.onMouseWheel);
          p.stage.removeEventListener("rightMouseDown", N.onRightMouseDown);
          p.stage.removeEventListener("rightMouseUp", N.onRightMouseUp);
          p.stage.removeEventListener("middleMouseDown", N.onMiddleMouseDown);
          p.stage.removeEventListener("middleMouseUp",
            N.onMiddleMouseUp);
          xe.get_supportsTouchEvents() && (p.stage.removeEventListener("touchBegin", N.onTouchBegin), p.stage.removeEventListener("touchMove", N.onTouchMove), p.stage.removeEventListener("touchEnd", N.onTouchEnd));
          N._roxAgent.detach();
          p.engine.root.removeEventListener("rox_gesture_swipe", N.onSwipe);
          N.mouseX = 0;
          N.mouseY = 0;
          N.mouseDown = N.mousePressed = N.mouseReleased = N.mouseWheel = !1;
          N.rightMouseDown = N.rightMousePressed = N.rightMouseReleased = !1;
          N.middleMouseDown = N.middleMousePressed = N.middleMouseReleased = !1;
          N.mouseWheelDelta = 0;
          N.accelX = N.accelY = N.accelZ = 0;
          N.multiTouchPoints = null;
          N.numTouches = 0;
          N._swipeDirection = 0;
          N.swipedUp = N.swipedDown = N.swipedRight = N.swipedLeft = !1;
          N._roxAgent = null;
          N._enabled = !1;
          N._key = [];
          N._keyInput.inputControlMap = new Za;
          N._controlMap = new ua;
          N._controlsToReset = []
        };
      N.define = function(a, b) {
        if (null == N._controlMap.h[a]) {
          var c = N._controlMap,
            d = new bl(a);
          c.h[a] = d
        } else N.unmapControl(a);
        for (c = 0; c < b.length;) d = b[c], ++c, N.addKeyToControl(d, a)
      };
      N.mapKey = function(a, b) {
        N._keyInput.mapInputToControl(a,
          N._controlMap.h[b])
      };
      N.unmapKey = function(a) {
        N._keyInput.unmapInput(a)
      };
      N.addKeyToControl = function(a, b) {
        N._keyInput.addInputToControl(a, N._controlMap.h[b])
      };
      N.removeKeyFromControl = function(a, b) {
        N._keyInput.removeInputFromControl(a, N._controlMap.h[b])
      };
      N.getKeys = function(a) {
        return N._keyInput.getInputsForControl(N._controlMap.h[a])
      };
      N.mapJoystickButton = function(a, b) {};
      N.unmapJoystickButton = function(a) {};
      N.addJoystickButtonToControl = function(a, b) {};
      N.removeJoystickButtonFromControl = function(a, b) {};
      N.getJoystickButtons =
        function(a) {
          return null
        };
      N.unmapControl = function(a) {
        N._keyInput.removeAllInputsFromControl(N._controlMap.h[a])
      };
      N.unmapKeyboardFromControl = function(a) {
        N._keyInput.removeAllInputsFromControl(N._controlMap.h[a])
      };
      N.unmapJoystickFromControl = function(a) {};
      N.setJoySensitivity = function(a) {};
      N.saveJoystickConfig = function(a) {};
      N.loadJoystickConfig = function(a) {};
      N.clearJoystickConfig = function() {};
      N.loadInputConfig = function() {
        for (var a = Object.keys(ka.keys.h), b = a.length, c = 0; c < b;) {
          for (var d = a[c++], e = ka.keys.h[d],
              f = [], g = 0; g < e.length;) {
            var h = e[g];
            ++g;
            f.push(Ha.keyFromName(h))
          }
          e = f;
          f = new bl(d);
          N._controlMap.h[d] = f;
          for (d = 0; d < e.length;) g = e[d], ++d, N._keyInput.addInputToControl(g, f)
        }
      };
      N.check = function(a) {
        a = N._controlMap.h[a];
        return null != a ? a.down : !1
      };
      N.pressed = function(a) {
        a = N._controlMap.h[a];
        return null != a ? a.pressed : !1
      };
      N.released = function(a) {
        a = N._controlMap.h[a];
        return null != a ? a.released : !1
      };
      N.getButtonPressure = function(a) {
        a = N._controlMap.h[a];
        return null != a ? a.pressure : 0
      };
      N.simulateKeyPress = function(a) {
        N.controlPressed(N._controlMap.h[a],
          1)
      };
      N.simulateKeyRelease = function(a) {
        N.controlReleased(N._controlMap.h[a])
      };
      N.enableJoystick = function() {};
      N.enable = function() {
        N._enabled || null == p.stage || (p.stage.addEventListener("keyDown", N.onKeyDown, !1, 2), p.stage.addEventListener("keyUp", N.onKeyUp, !1, 2), p.stage.addEventListener("mouseDown", N.onMouseDown, !1, 2), p.stage.addEventListener("mouseUp", N.onMouseUp, !1, 2), p.stage.addEventListener("mouseWheel", N.onMouseWheel, !1, 2), p.stage.addEventListener("rightMouseDown", N.onRightMouseDown, !1, 2), p.stage.addEventListener("rightMouseUp",
          N.onRightMouseUp, !1, 2), p.stage.addEventListener("middleMouseDown", N.onMiddleMouseDown, !1, 2), p.stage.addEventListener("middleMouseUp", N.onMiddleMouseUp, !1, 2), xe.get_supportsTouchEvents() && (N.multiTouchPoints = new ua, xe.inputMode = 2, p.stage.addEventListener("touchBegin", N.onTouchBegin), p.stage.addEventListener("touchMove", N.onTouchMove), p.stage.addEventListener("touchEnd", N.onTouchEnd)), N._roxAgent = new hb(p.engine.root, 2), p.engine.root.addEventListener("rox_gesture_swipe", N.onSwipe), N._swipeDirection = -1, N.swipedLeft = !1, N.swipedRight = !1, N.swipedUp = !1, N.swipedDown = !1, N.mouseX = 0, N.mouseY = 0, N.accelX = 0, N.accelY = 0, N.accelZ = 0, N.numTouches = 0, N._enabled = !0)
      };
      N.update = function() {
        N.swipedLeft = !1;
        N.swipedRight = !1;
        N.swipedUp = !1;
        N.swipedDown = !1;
        if (-1 < N._swipeDirection) {
          switch (N._swipeDirection) {
            case 0:
              N.swipedLeft = !0;
              break;
            case 1:
              N.swipedRight = !0;
              break;
            case 2:
              N.swipedUp = !0;
              break;
            case 3:
              N.swipedDown = !0
          }
          if (0 < p.engine.whenSwiped.length)
            for (p.engine.whenSwiped._dispatchIndex = 0; p.engine.whenSwiped._dispatchIndex <
              p.engine.whenSwiped.length;) {
              try {
                p.engine.whenSwiped.listeners[p.engine.whenSwiped._dispatchIndex]()
              } catch (c) {
                if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
              }++p.engine.whenSwiped._dispatchIndex
            }
          N._swipeDirection = -1
        }
        N.mouseX = (p.stage.get_mouseX() - p.screenOffsetX) / p.screenScaleX;
        N.mouseY = (p.stage.get_mouseY() - p.screenOffsetY) / p.screenScaleY;
        for (var a = N._controlsToReset.length; 0 <= --a;) {
          var b = N._controlsToReset.pop();
          b.pressed = !1;
          b.released = !1
        }
        N.mousePressed && (N.mousePressed = !1);
        N.mouseReleased &&
          (N.mouseReleased = !1);
        N.rightMousePressed && (N.rightMousePressed = !1);
        N.rightMouseReleased && (N.rightMouseReleased = !1);
        N.middleMousePressed && (N.middleMousePressed = !1);
        N.middleMouseReleased && (N.middleMouseReleased = !1);
        N.mouseWheelDelta = 0
      };
      N.onSwipe = function(a) {
        a = K.__cast(a.extra, la);
        Math.abs(a.x) <= Math.abs(a.y) ? N._swipeDirection = 0 >= a.y ? 2 : 3 : Math.abs(a.x) > Math.abs(a.y) && (N._swipeDirection = 0 >= a.x ? 0 : 1)
      };
      N.controlsPressed = function(a, b) {
        if (null != a)
          for (var c = 0; c < a.length;) {
            var d = a[c];
            ++c;
            N.controlPressed(d, b)
          }
      };
      N.controlsReleased = function(a) {
        if (null != a)
          for (var b = 0; b < a.length;) {
            var c = a[b];
            ++b;
            N.controlReleased(c)
          }
      };
      N.controlPressed = function(a, b) {
        if (null != a)
          if (a.down) a.pressure = b;
          else if (a.down = !0, a.pressed = !0, a.pressure = b, N._controlsToReset.push(a), p.engine.keyPollOccurred && (a = p.engine.whenKeyPressedEvents.map.get(a.name), null != a && 0 < a.length))
          for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
            try {
              a.listeners[a._dispatchIndex](!0, !1)
            } catch (c) {
              if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
            }++a._dispatchIndex
          }
      };
      N.controlReleased = function(a) {
        if (null != a && a.down && (a.down = !1, a.released = !0, a.pressure = 0, N._controlsToReset.push(a), p.engine.keyPollOccurred && (a = p.engine.whenKeyPressedEvents.map.get(a.name), null != a && 0 < a.length)))
          for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
            try {
              a.listeners[a._dispatchIndex](!1, !0)
            } catch (b) {
              if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
            }++a._dispatchIndex
          }
      };
      N.controlStateUpdated = function(a) {
        for (var b = 0, c = 0, d = a.keys; c < d.length;) {
          var e = d[c];
          ++c;
          N._key[e] && (b = 1)
        }
        a.pressure = b;
        0 < b && !a.down ? N.controlPressed(a, b) : 0 == b && a.down && N.controlReleased(a)
      };
      N.onKeyDown = function(a) {
        var b = a.keyCode;
        if (!(7E3 < b)) {
          N._key[b] = !0;
          b = N._keyInput.inputControlMap.h[b];
          if (null != b)
            for (var c = 0; c < b.length;) {
              var d = b[c];
              ++c;
              N.controlPressed(d, 1)
            }
          if (0 < p.engine.whenAnyKeyPressed.length)
            for (p.engine.whenAnyKeyPressed._dispatchIndex = 0; p.engine.whenAnyKeyPressed._dispatchIndex < p.engine.whenAnyKeyPressed.length;) {
              try {
                p.engine.whenAnyKeyPressed.listeners[p.engine.whenAnyKeyPressed._dispatchIndex](a)
              } catch (e) {
                if (pa.lastError =
                  e, "string" != typeof F.caught(e).unwrap()) throw e;
              }++p.engine.whenAnyKeyPressed._dispatchIndex
            }
        }
      };
      N.onKeyUp = function(a) {
        var b = a.keyCode;
        if (!(7E3 < b)) {
          N._key[b] = !1;
          b = N._keyInput.inputControlMap.h[b];
          if (null != b)
            for (var c = 0; c < b.length;) {
              var d = b[c];
              ++c;
              N.controlReleased(d)
            }
          if (0 < p.engine.whenAnyKeyReleased.length)
            for (p.engine.whenAnyKeyReleased._dispatchIndex = 0; p.engine.whenAnyKeyReleased._dispatchIndex < p.engine.whenAnyKeyReleased.length;) {
              try {
                p.engine.whenAnyKeyReleased.listeners[p.engine.whenAnyKeyReleased._dispatchIndex](a)
              } catch (e) {
                if (pa.lastError =
                  e, "string" != typeof F.caught(e).unwrap()) throw e;
              }++p.engine.whenAnyKeyReleased._dispatchIndex
            }
        }
      };
      N.onMouseDown = function(a) {
        N.mouseX = (p.stage.get_mouseX() - p.screenOffsetX) / p.screenScaleX;
        N.mouseY = (p.stage.get_mouseY() - p.screenOffsetY) / p.screenScaleY;
        N.mouseDown || (N.mouseDown = !0, N.mousePressed = !0)
      };
      N.onMouseUp = function(a) {
        N.mouseX = (p.stage.get_mouseX() - p.screenOffsetX) / p.screenScaleX;
        N.mouseY = (p.stage.get_mouseY() - p.screenOffsetY) / p.screenScaleY;
        N.mouseDown = !1;
        N.mouseReleased = !0
      };
      N.onRightMouseDown =
        function(a) {
          N.rightMouseDown || (N.rightMouseDown = !0, N.rightMousePressed = !0)
        };
      N.onRightMouseUp = function(a) {
        N.rightMouseDown = !1;
        N.rightMouseReleased = !0
      };
      N.onMiddleMouseDown = function(a) {
        N.middleMouseDown || (N.middleMouseDown = !0, N.middleMousePressed = !0)
      };
      N.onMiddleMouseUp = function(a) {
        N.middleMouseDown = !1;
        N.middleMouseReleased = !0
      };
      N.onMouseWheel = function(a) {
        N.mouseWheel = !0;
        N.mouseWheelDelta = a.delta
      };
      N.onTouchBegin = function(a) {
        if (0 < p.engine.whenMTStarted.length)
          for (p.engine.whenMTStarted._dispatchIndex = 0; p.engine.whenMTStarted._dispatchIndex <
            p.engine.whenMTStarted.length;) {
            try {
              p.engine.whenMTStarted.listeners[p.engine.whenMTStarted._dispatchIndex](a)
            } catch (b) {
              if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
            }++p.engine.whenMTStarted._dispatchIndex
          }
        N.multiTouchPoints.h[null == a.touchPointID ? "null" : "" + a.touchPointID] = a;
        N.numTouches++
      };
      N.onTouchMove = function(a) {
        if (0 < p.engine.whenMTDragged.length)
          for (p.engine.whenMTDragged._dispatchIndex = 0; p.engine.whenMTDragged._dispatchIndex < p.engine.whenMTDragged.length;) {
            try {
              p.engine.whenMTDragged.listeners[p.engine.whenMTDragged._dispatchIndex](a)
            } catch (b) {
              if (pa.lastError =
                b, "string" != typeof F.caught(b).unwrap()) throw b;
            }++p.engine.whenMTDragged._dispatchIndex
          }
        N.multiTouchPoints.h[null == a.touchPointID ? "null" : "" + a.touchPointID] = a
      };
      N.onTouchEnd = function(a) {
        if (0 < p.engine.whenMTEnded.length)
          for (p.engine.whenMTEnded._dispatchIndex = 0; p.engine.whenMTEnded._dispatchIndex < p.engine.whenMTEnded.length;) {
            try {
              p.engine.whenMTEnded.listeners[p.engine.whenMTEnded._dispatchIndex](a)
            } catch (c) {
              if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
            }++p.engine.whenMTEnded._dispatchIndex
          }
        a =
          null == a.touchPointID ? "null" : "" + a.touchPointID;
        var b = N.multiTouchPoints;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
        N.numTouches--
      };
      var bl = function(a) {
        this.pressure = 0;
        this.name = a;
        this.keys = []
      };
      k["com.stencyl.Control"] = bl;
      bl.__name__ = "com.stencyl.Control";
      bl.prototype = {
        name: null,
        keys: null,
        pressed: null,
        released: null,
        down: null,
        pressure: null,
        __class__: bl
      };
      var vq = function(a, b) {
        this.inputControlMap = a;
        this.getInputs = b
      };
      k["com.stencyl.InputMethod"] = vq;
      vq.__name__ = "com.stencyl.InputMethod";
      vq.prototype = {
        inputControlMap: null,
        getInputs: null,
        mapInputToControl: function(a, b) {
          this.inputControlMap.exists(a) || this.inputControlMap.set(a, []);
          for (var c = this.inputControlMap.get(a), d = 0; d < c.length;) {
            var e = c[d];
            ++d;
            e != b && (da.remove(this.getInputs(e), a), N.controlStateUpdated(e))
          } - 1 == this.getInputs(b).indexOf(a) && (this.getInputs(b).push(a), c.push(b), N.controlStateUpdated(b))
        },
        unmapInput: function(a) {
          var b = this.inputControlMap.get(a);
          if (null != b)
            for (var c = 0; c < b.length;) {
              var d = b[c];
              ++c;
              da.remove(this.getInputs(d), a);
              N.controlStateUpdated(d)
            }
          this.inputControlMap.remove(a)
        },
        addInputToControl: function(a, b) {
          -1 == this.getInputs(b).indexOf(a) && (this.getInputs(b).push(a), N.controlStateUpdated(b), this.inputControlMap.exists(a) || this.inputControlMap.set(a, []), this.inputControlMap.get(a).push(b))
        },
        removeInputFromControl: function(a, b) {
          if (-1 != this.getInputs(b).indexOf(a)) {
            da.remove(this.getInputs(b), a);
            N.controlStateUpdated(b);
            var c = this.inputControlMap.get(a);
            da.remove(c, b);
            0 == c.length && this.inputControlMap.remove(a)
          }
        },
        getInputsForControl: function(a) {
          return null != a ? this.getInputs(a) : null
        },
        removeAllInputsFromControl: function(a) {
          for (var b = this.getInputs(a); 0 < b.length;) {
            var c = b.pop(),
              d = this.inputControlMap.get(c);
            da.remove(d, a);
            0 == d.length && this.inputControlMap.remove(c)
          }
          N.controlStateUpdated(a)
        },
        __class__: vq
      };
      var Ha = function() {};
      k["com.stencyl.Key"] = Ha;
      Ha.__name__ = "com.stencyl.Key";
      Ha.nameOfKey = function(a) {
        if (97 <= a && 122 >= a) return String.fromCodePoint(a);
        if (112 <= a && 126 >= a) return "F" + M.string(a - 111);
        if (96 <= a && 105 >= a) return "NUMPAD " +
          M.string(a - 96);
        switch (a) {
          case 8:
            return "BACKSPACE";
          case 9:
            return "TAB";
          case 13:
            return "ENTER";
          case 15:
            return "COMMAND";
          case 16:
            return "SHIFT";
          case 17:
            return "CONTROL";
          case 20:
            return "CAPS LOCK";
          case 27:
            return "ESCAPE";
          case 32:
            return "SPACE";
          case 33:
            return "PAGE UP";
          case 34:
            return "PAGE DOWN";
          case 35:
            return "END";
          case 36:
            return "HOME";
          case 37:
            return "LEFT";
          case 38:
            return "UP";
          case 39:
            return "RIGHT";
          case 40:
            return "DOWN";
          case 45:
            return "INSERT";
          case 46:
            return "DELETE";
          case 106:
            return "NUMPAD MULTIPLY";
          case 107:
            return "NUMPAD ADD";
          case 108:
            return "NUMPAD ENTER";
          case 109:
            return "NUMPAD SUBTRACT";
          case 110:
            return "NUMPAD DECIMAL";
          case 111:
            return "NUMPAD DIVIDE";
          default:
            return String.fromCodePoint(a)
        }
      };
      Ha.keyFromName = function(a) {
        return Ha.keyboardNameMap.h[a]
      };
      var la = function(a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b
      };
      k["openfl.geom.Point"] = la;
      la.__name__ = "openfl.geom.Point";
      la.distance = function(a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(c * c + a * a)
      };
      la.interpolate = function(a, b, c) {
        return new la(b.x + c * (a.x - b.x), b.y + c * (a.y -
          b.y))
      };
      la.polar = function(a, b) {
        return new la(a * Math.cos(b), a * Math.sin(b))
      };
      la.prototype = {
        x: null,
        y: null,
        add: function(a) {
          return new la(a.x + this.x, a.y + this.y)
        },
        clone: function() {
          return new la(this.x, this.y)
        },
        copyFrom: function(a) {
          this.x = a.x;
          this.y = a.y
        },
        equals: function(a) {
          return null != a && a.x == this.x ? a.y == this.y : !1
        },
        normalize: function(a) {
          if (0 != this.x || 0 != this.y) a /= Math.sqrt(this.x * this.x + this.y * this.y), this.x *= a, this.y *= a
        },
        offset: function(a, b) {
          this.x += a;
          this.y += b
        },
        setTo: function(a, b) {
          this.x = a;
          this.y = b
        },
        subtract: function(a) {
          return new la(this.x -
            a.x, this.y - a.y)
        },
        toString: function() {
          return "(x=" + this.x + ", y=" + this.y + ")"
        },
        __toLimeVector2: function() {
          null == la.__limeVector2 && (la.__limeVector2 = new be);
          var a = la.__limeVector2;
          a.x = this.x;
          a.y = this.y;
          return la.__limeVector2
        },
        get_length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        __class__: la,
        __properties__: {
          get_length: "get_length"
        }
      };
      var ha = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d
      };
      k["openfl.geom.Rectangle"] =
        ha;
      ha.__name__ = "openfl.geom.Rectangle";
      ha.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
          return new ha(this.x, this.y, this.width, this.height)
        },
        contains: function(a, b) {
          return a >= this.x && b >= this.y && a < this.get_right() ? b < this.get_bottom() : !1
        },
        containsPoint: function(a) {
          return this.contains(a.x, a.y)
        },
        containsRect: function(a) {
          return 0 >= a.width || 0 >= a.height ? a.x > this.x && a.y > this.y && a.get_right() < this.get_right() ? a.get_bottom() < this.get_bottom() : !1 : a.x >= this.x && a.y >= this.y && a.get_right() <= this.get_right() ?
            a.get_bottom() <= this.get_bottom() : !1
        },
        copyFrom: function(a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height
        },
        equals: function(a) {
          return a == this ? !0 : null != a && this.x == a.x && this.y == a.y && this.width == a.width ? this.height == a.height : !1
        },
        inflate: function(a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -= b;
          this.height += 2 * b
        },
        inflatePoint: function(a) {
          this.inflate(a.x, a.y)
        },
        intersection: function(a) {
          var b = this.x < a.x ? a.x : this.x,
            c = this.get_right() > a.get_right() ? a.get_right() : this.get_right();
          if (c <= b) return new ha;
          var d = this.y < a.y ? a.y : this.y;
          a = this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom();
          return a <= d ? new ha : new ha(b, d, c - b, a - d)
        },
        intersects: function(a) {
          var b = this.x < a.x ? a.x : this.x;
          if ((this.get_right() > a.get_right() ? a.get_right() : this.get_right()) <= b) return !1;
          b = this.y < a.y ? a.y : this.y;
          return (this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom()) > b
        },
        isEmpty: function() {
          return 0 >= this.width ? !0 : 0 >= this.height
        },
        offset: function(a, b) {
          this.x += a;
          this.y += b
        },
        offsetPoint: function(a) {
          this.x += a.x;
          this.y += a.y
        },
        setEmpty: function() {
          this.x = this.y = this.width = this.height = 0
        },
        setTo: function(a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d
        },
        toString: function() {
          return "(x=" + this.x + ", y=" + this.y + ", width=" + this.width + ", height=" + this.height + ")"
        },
        union: function(a) {
          if (0 == this.width || 0 == this.height) return a.clone();
          if (0 == a.width || 0 == a.height) return this.clone();
          var b = this.x > a.x ? a.x : this.x,
            c = this.get_right() < a.get_right() ? a.get_right() : this.get_right(),
            d = this.y > a.y ? a.y : this.y;
          a = this.get_bottom() < a.get_bottom() ?
            a.get_bottom() : this.get_bottom();
          return new ha(b, d, c - b, a - d)
        },
        __contract: function(a, b, c, d) {
          if (0 != this.width || 0 != this.height) {
            var e = 0,
              f = 0,
              g = 0,
              h = 0;
            this.x < a && (e = a - this.x);
            this.y < b && (f = b - this.y);
            this.get_right() > a + c && (g = a + c - this.get_right());
            this.get_bottom() > b + d && (h = b + d - this.get_bottom());
            this.x += e;
            this.y += f;
            this.width += g - e;
            this.height += h - f
          }
        },
        __expand: function(a, b, c, d) {
          if (0 == this.width && 0 == this.height) this.x = a, this.y = b, this.width = c, this.height = d;
          else {
            var e = this.get_right(),
              f = this.get_bottom();
            this.x >
              a && (this.x = a, this.width = e - a);
            this.y > b && (this.y = b, this.height = f - b);
            e < a + c && (this.width = a + c - this.x);
            f < b + d && (this.height = b + d - this.y)
          }
        },
        __toLimeRectangle: function() {
          null == ha.__limeRectangle && (ha.__limeRectangle = new Td);
          ha.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
          return ha.__limeRectangle
        },
        __transform: function(a, b) {
          var c = b.a * this.x + b.c * this.y,
            d = c,
            e = b.b * this.x + b.d * this.y,
            f = e,
            g = b.a * (this.x + this.width) + b.c * this.y,
            h = b.b * (this.x + this.width) + b.d * this.y;
          g < c && (c = g);
          h < e && (e = h);
          g > d && (d = g);
          h > f &&
            (f = h);
          g = b.a * (this.x + this.width) + b.c * (this.y + this.height);
          h = b.b * (this.x + this.width) + b.d * (this.y + this.height);
          g < c && (c = g);
          h < e && (e = h);
          g > d && (d = g);
          h > f && (f = h);
          g = b.a * this.x + b.c * (this.y + this.height);
          h = b.b * this.x + b.d * (this.y + this.height);
          g < c && (c = g);
          h < e && (e = h);
          g > d && (d = g);
          h > f && (f = h);
          a.setTo(c + b.tx, e + b.ty, d - c, f - e)
        },
        get_bottom: function() {
          return this.y + this.height
        },
        set_bottom: function(a) {
          this.height = a - this.y;
          return a
        },
        get_bottomRight: function() {
          return new la(this.x + this.width, this.y + this.height)
        },
        set_bottomRight: function(a) {
          this.width =
            a.x - this.x;
          this.height = a.y - this.y;
          return a.clone()
        },
        get_left: function() {
          return this.x
        },
        set_left: function(a) {
          this.width -= a - this.x;
          return this.x = a
        },
        get_right: function() {
          return this.x + this.width
        },
        set_right: function(a) {
          this.width = a - this.x;
          return a
        },
        get_size: function() {
          return new la(this.width, this.height)
        },
        set_size: function(a) {
          this.width = a.x;
          this.height = a.y;
          return a.clone()
        },
        get_top: function() {
          return this.y
        },
        set_top: function(a) {
          this.height -= a - this.y;
          return this.y = a
        },
        get_topLeft: function() {
          return new la(this.x,
            this.y)
        },
        set_topLeft: function(a) {
          this.x = a.x;
          this.y = a.y;
          return a.clone()
        },
        __class__: ha,
        __properties__: {
          set_topLeft: "set_topLeft",
          get_topLeft: "get_topLeft",
          set_top: "set_top",
          get_top: "get_top",
          set_size: "set_size",
          get_size: "get_size",
          set_right: "set_right",
          get_right: "get_right",
          set_left: "set_left",
          get_left: "get_left",
          set_bottomRight: "set_bottomRight",
          get_bottomRight: "get_bottomRight",
          set_bottom: "set_bottom",
          get_bottom: "get_bottom"
        }
      };
      var u = function() {
        this.checkProperties = this.scriptInit = !1;
        this.nameMap =
          new ua;
        this.propertyChangeEvents = new ua;
        this.equalityPairs = new pc;
        this.attributeTweens = new ua
      };
      k["com.stencyl.behavior.Script"] = u;
      u.__name__ = "com.stencyl.behavior.Script";
      u.resetStatics = function() {
        u.engine = null;
        u.lastCreatedActor = null;
        u.lastCreatedJoint = null;
        u.lastCreatedRegion = null;
        u.lastCreatedTerrainRegion = null;
        u.mpx = 0;
        u.mpy = 0;
        u.mrx = 0;
        u.mry = 0;
        u.imageApiAutoscale = !0
      };
      u.sameAs = function(a, b) {
        return a == b
      };
      u.sameAsAny = function(a, b, c) {
        return a != b ? a == c : !0
      };
      u.asBoolean = function(a) {
        return 1 == a ? !0 : "true" ==
          a ? !0 : !1
      };
      u.strCompare = function(a, b, c) {
        return 0 > c ? a < b : a > b
      };
      u.strCompareBefore = function(a, b) {
        return a < b
      };
      u.strCompareAfter = function(a, b) {
        return a > b
      };
      u.asNumber = function(a) {
        return null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a))
      };
      u.hasValue = function(a) {
        return u.isPrimitive(a) ? !0 : "string" == typeof a ? "" != K.__cast(a, String) : null != a
      };
      u.isPrimitive = function(a) {
        return "boolean" ==
          typeof a || "number" == typeof a || "number" == typeof a && (a | 0) === a ? !0 : !1
      };
      u.getDefaultValue = function(a) {
        return "boolean" == typeof a ? !1 : "number" == typeof a || "number" == typeof a && (a | 0) === a ? 0 : "string" == typeof a ? "" : null
      };
      u.getGroupByName = function(a) {
        return u.engine.getGroupByName(a)
      };
      u.getLastCreatedRegion = function() {
        return u.lastCreatedRegion
      };
      u.getAllRegions = function() {
        for (var a = [], b = u.engine.regions.iterator(); b.hasNext();) {
          var c = b.next();
          null != c && a.push(c)
        }
        return a
      };
      u.getRegion = function(a) {
        return u.engine.getRegion(a)
      };
      u.removeRegion = function(a) {
        u.engine.removeRegion(a)
      };
      u.createBoxRegion = function(a, b, c, d) {
        return u.lastCreatedRegion = u.engine.createBoxRegion(a, b, c, d)
      };
      u.createCircularRegion = function(a, b, c) {
        return u.lastCreatedRegion = u.engine.createCircularRegion(a, b, c)
      };
      u.isInRegion = function(a, b) {
        return u.engine.isInRegion(a, b)
      };
      u.getActorsInRegion = function(a) {
        var b = [];
        for (a = a.getContainedActors().iterator(); a.hasNext();) {
          var c = a.next();
          b.push(u.engine.getActor(c))
        }
        return b
      };
      u.sceneHasBehavior = function(a) {
        return u.engine.behaviors.hasBehavior(a)
      };
      u.enableBehaviorForScene = function(a) {
        u.engine.behaviors.enableBehavior(a)
      };
      u.disableBehaviorForScene = function(a) {
        u.engine.behaviors.disableBehavior(a)
      };
      u.isBehaviorEnabledForScene = function(a) {
        return u.engine.behaviors.isBehaviorEnabled(a)
      };
      u.getValueForScene = function(a, b) {
        return u.engine.getValue(a, b)
      };
      u.setValueForScene = function(a, b, c) {
        u.engine.setValue(a, b, c)
      };
      u.shoutToScene = function(a, b) {
        return u.engine.shout(a, b)
      };
      u.sayToScene = function(a, b, c) {
        return u.engine.say(a, b, c)
      };
      u.setGameAttribute = function(a,
        b) {
        u.engine.gameAttributes.h[a] = b
      };
      u.getGameAttribute = function(a) {
        return u.engine.getGameAttribute(a)
      };
      u.setSavable = function(a, b) {
        u.engine.savableAttributes.h[a] = b
      };
      u.runLater = function(a, b, c) {
        a = new cl(b, a | 0, !1, c);
        u.engine.addTask(a);
        return a
      };
      u.runPeriodically = function(a, b, c) {
        a = new cl(b, a | 0, !0, c);
        u.engine.addTask(a);
        return a
      };
      u.getStepSize = function() {
        return p.STEP_SIZE
      };
      u.getScene = function() {
        return u.engine.scene
      };
      u.getCurrentScene = function() {
        return u.getScene().ID
      };
      u.getIDForScene = function(a) {
        for (var b =
            Bb.get().scenes.iterator(); b.hasNext();) {
          var c = b.next();
          if (a == c.name) return c.ID
        }
        return 0
      };
      u.getCurrentSceneName = function() {
        return u.getScene().name
      };
      u.getSceneWidth = function() {
        return u.getScene().sceneWidth
      };
      u.getSceneHeight = function() {
        return u.getScene().sceneHeight
      };
      u.getTileWidth = function() {
        return u.getScene().tileWidth
      };
      u.getTileHeight = function() {
        return u.getScene().tileHeight
      };
      u.reloadCurrentScene = function(a, b) {
        u.engine.switchScene(u.getCurrentScene(), a, b)
      };
      u.switchScene = function(a, b, c) {
        u.engine.switchScene(a,
          b, c)
      };
      u.createPixelizeOut = function(a, b) {
        return new Dj(a, 1, 15)
      };
      u.createPixelizeIn = function(a, b) {
        return new Dj(a, 15, 1)
      };
      u.createBubblesOut = function(a, b) {
        null == b && (b = -16777216);
        return new Ej(S.OUT, a, 50, b)
      };
      u.createBubblesIn = function(a, b) {
        null == b && (b = -16777216);
        return new Ej(S.IN, a, 50, b)
      };
      u.createBlindsOut = function(a, b) {
        null == b && (b = -16777216);
        return new Fj(S.OUT, a, 10, b)
      };
      u.createBlindsIn = function(a, b) {
        null == b && (b = -16777216);
        return new Fj(S.IN, a, 10, b)
      };
      u.createRectangleOut = function(a, b) {
        null == b && (b = -16777216);
        return new Gj(S.OUT, a, b)
      };
      u.createRectangleIn = function(a, b) {
        null == b && (b = -16777216);
        return new Gj(S.IN, a, b)
      };
      u.createSlideTransition = function(a, b) {
        return new Te(u.engine.master, u.engine.colorLayer, a, b)
      };
      u.createSlideUpTransition = function(a) {
        return u.createSlideTransition(a, Te.SLIDE_UP)
      };
      u.createSlideDownTransition = function(a) {
        return u.createSlideTransition(a, Te.SLIDE_DOWN)
      };
      u.createSlideLeftTransition = function(a) {
        return u.createSlideTransition(a, Te.SLIDE_LEFT)
      };
      u.createSlideRightTransition = function(a) {
        return u.createSlideTransition(a,
          Te.SLIDE_RIGHT)
      };
      u.createCrossfadeTransition = function(a) {
        return new dl(u.engine.root, a)
      };
      u.createFadeOut = function(a, b) {
        null == b && (b = -16777216);
        return new el(a, b)
      };
      u.createFadeIn = function(a, b) {
        null == b && (b = -16777216);
        return new fl(a, b)
      };
      u.createCircleOut = function(a, b) {
        null == b && (b = -16777216);
        return new Hj(S.OUT, a, b)
      };
      u.createCircleIn = function(a, b) {
        null == b && (b = -16777216);
        return new Hj(S.IN, a, b)
      };
      u.setBlendModeForLayer = function(a, b) {
        a.set_blendMode(b);
        a instanceof Lc && K.__cast(a, Lc).tiles.set_blendMode(b)
      };
      u.showTileLayer = function(a) {
        a.set_alpha(1)
      };
      u.hideTileLayer = function(a) {
        a.set_alpha(0)
      };
      u.fadeTileLayerTo = function(a, b, c, d) {
        null == a.alphaTween && (a.alphaTween = (new he).doOnUpdate(function() {
          a.set_alpha(a.alphaTween.value)
        }));
        a.alphaTween.tween(a.get_alpha(), b, d, 1E3 * c | 0)
      };
      u.getTileLayerOpacity = function(a) {
        return 100 * a.get_alpha()
      };
      u.setDrawingLayer = function(a) {
        a instanceof Lc && (p.engine.g.graphics = a.overlay.get_graphics())
      };
      u.setDrawingLayerToActorLayer = function(a) {
        null != a && (p.engine.g.graphics = a.layer.overlay.get_graphics())
      };
      u.setDrawingLayerToSceneLayer = function() {
        p.engine.g.graphics = p.engine.transitionLayer.get_graphics()
      };
      u.getScreenX = function() {
        return p.cameraX / p.SCALE
      };
      u.getScreenY = function() {
        return p.cameraY / p.SCALE
      };
      u.getScreenXCenter = function() {
        return p.cameraX / p.SCALE + p.screenWidth / 2
      };
      u.getScreenYCenter = function() {
        return p.cameraY / p.SCALE + p.screenHeight / 2
      };
      u.getCamera = function() {
        return u.engine.camera
      };
      u.isCtrlDown = function() {
        return N.check("iCTRL") ? !0 : N.check("iCOMMAND")
      };
      u.isShiftDown = function() {
        return N.check("iSHIFT")
      };
      u.simulateKeyPress = function(a) {
        N.simulateKeyPress(a)
      };
      u.simulateKeyRelease = function(a) {
        N.simulateKeyRelease(a)
      };
      u.isKeyDown = function(a) {
        return N.check(a)
      };
      u.isKeyPressed = function(a) {
        return N.pressed(a)
      };
      u.isKeyReleased = function(a) {
        return N.released(a)
      };
      u.isMouseDown = function() {
        return N.mouseDown
      };
      u.isMousePressed = function() {
        return N.mousePressed
      };
      u.isMouseReleased = function() {
        return N.mouseReleased
      };
      u.getMouseX = function() {
        return N.mouseX / p.SCALE
      };
      u.getMouseY = function() {
        return N.mouseY / p.SCALE
      };
      u.getMouseWorldX =
        function() {
          return N.mouseX / p.SCALE + p.cameraX
        };
      u.getMouseWorldY = function() {
        return N.mouseY / p.SCALE + p.cameraY
      };
      u.getMousePressedX = function() {
        return u.mpx
      };
      u.getMousePressedY = function() {
        return u.mpy
      };
      u.getMouseReleasedX = function() {
        return u.mrx
      };
      u.getMouseReleasedY = function() {
        return u.mry
      };
      u.showCursor = function() {
        te.show()
      };
      u.hideCursor = function() {
        te.hide()
      };
      u.charFromCharCode = function(a) {
        return 32 > a || 126 < a && 160 > a ? "" : String.fromCodePoint(a)
      };
      u.getLastCreatedActor = function() {
        return u.lastCreatedActor
      };
      u.createActor = function(a, b, c, d) {
        a = u.engine.createActorOfType(a, b, c, d);
        return u.lastCreatedActor = a
      };
      u.createRecycledActor = function(a, b, c, d) {
        a = u.engine.getRecycledActorOfType(a, b, c, d);
        return u.lastCreatedActor = a
      };
      u.createRecycledActorOnLayer = function(a, b, c, d) {
        a = u.engine.getRecycledActorOfTypeOnLayer(a, b, c, d.ID);
        return u.lastCreatedActor = a
      };
      u.recycleActor = function(a) {
        u.engine.recycleActor(a)
      };
      u.createActorInNextScene = function(a, b, c, d) {
        u.engine.createActorInNextScene(a, b, c, d)
      };
      u.getActorTypeByName = function(a) {
        return oc.get().resourceMap.get(a)
      };
      u.getActorType = function(a) {
        return oc.get().resources.get(a)
      };
      u.getAllActorTypes = function() {
        return oc.get().getAllActorTypes()
      };
      u.getActorsOfType = function(a) {
        return u.engine.getActorsOfType(a)
      };
      u.getActor = function(a) {
        return u.engine.getActor(a)
      };
      u.getActorGroup = function(a) {
        return u.engine.getGroup(a)
      };
      u.setGravity = function(a, b) {
        u.engine.gravityX = a;
        u.engine.gravityY = b;
        null != u.engine.world && u.engine.world.setGravity(new C(a, b))
      };
      u.getGravity = function() {
        return null == u.engine.world ? (u.dummyVec.x = u.engine.gravityX,
          u.dummyVec.y = u.engine.gravityY, u.dummyVec) : u.engine.world.getGravity()
      };
      u.enableContinuousCollisions = function() {
        gc.m_continuousPhysics = !0
      };
      u.toPhysicalUnits = function(a) {
        return p.toPhysicalUnits(a)
      };
      u.toPixelUnits = function(a) {
        return p.toPixelUnits(a)
      };
      u.makeActorNotPassThroughTerrain = function(a) {
        p.NO_PHYSICS ? null != a && 1 == a.physicsMode && (a.continuousCollision = !0) : (gc.m_continuousPhysics = !0, null != a && 0 == a.physicsMode && a.body.setBullet(!0))
      };
      u.makeActorPassThroughTerrain = function(a) {
        if (p.NO_PHYSICS) null !=
          a && 1 == a.physicsMode && (a.continuousCollision = !1);
        else if (null != a && 0 == a.physicsMode) {
          a.body.setBullet(!1);
          a = !1;
          for (var b = u.engine.allActors.iterator(); b.hasNext();) {
            var c = b.next();
            if (null != c.body && c.body.isBullet()) {
              a = !0;
              break
            }
          }
          a || (gc.m_continuousPhysics = !1)
        }
      };
      u.mute = function() {};
      u.unmute = function() {};
      u.getSound = function(a) {
        return oc.get().resources.get(a)
      };
      u.getSoundByName = function(a) {
        return oc.get().resourceMap.get(a)
      };
      u.playSound = function(a) {
        if (null != a)
          for (var b = 0; 32 > b;) {
            var c = b++;
            c = u.engine.channels[c];
            if (null == c.currentSound) {
              c.playSound(a);
              break
            }
          }
      };
      u.loopSound = function(a) {
        if (null != a)
          for (var b = 0; 32 > b;) {
            var c = b++;
            c = u.engine.channels[c];
            if (null == c.currentSound) {
              c.loopSound(a);
              break
            }
          }
      };
      u.playSoundOnChannel = function(a, b) {
        u.engine.channels[b].playSound(a)
      };
      u.loopSoundOnChannel = function(a, b) {
        u.engine.channels[b].loopSound(a)
      };
      u.stopSoundOnChannel = function(a) {
        u.engine.channels[a].stopSound()
      };
      u.pauseSoundOnChannel = function(a) {
        u.engine.channels[a].setPause(!0)
      };
      u.resumeSoundOnChannel = function(a) {
        u.engine.channels[a].setPause(!1)
      };
      u.setVolumeForChannel = function(a, b) {
        u.engine.channels[b].setVolume(a)
      };
      u.setPanningForChannel = function(a, b) {
        u.engine.channels[b].setPanning(a)
      };
      u.stopAllSounds = function() {
        for (var a = 0; 32 > a;) {
          var b = a++;
          u.engine.channels[b].stopSound()
        }
      };
      u.setVolumeForAllSounds = function(a) {
        Yb.masterVolume = a;
        for (a = 0; 32 > a;) {
          var b = a++;
          b = u.engine.channels[b];
          b.setVolume(b.volume)
        }
      };
      u.fadeInSoundOnChannel = function(a, b) {
        u.engine.channels[a].fadeInSound(b)
      };
      u.fadeOutSoundOnChannel = function(a, b) {
        u.engine.channels[a].fadeOutSound(b)
      };
      u.fadeSoundOnChannel = function(a, b, c) {
        u.engine.channels[a].fadeSound(b, c / 100)
      };
      u.fadeInForAllSounds = function(a) {
        for (var b = 0; 32 > b;) {
          var c = b++;
          u.engine.channels[c].fadeInSound(a)
        }
      };
      u.fadeOutForAllSounds = function(a) {
        for (var b = 0; 32 > b;) {
          var c = b++;
          u.engine.channels[c].fadeOutSound(a)
        }
      };
      u.fadeForAllSounds = function(a, b) {
        for (var c = 0; 32 > c;) {
          var d = c++;
          u.engine.channels[d].fadeSound(a, b / 100)
        }
      };
      u.getPositionForChannel = function(a) {
        a = u.engine.channels[a];
        return null != a && null != a.currentSound ? a.paused ? a.position : a.currentSound.get_position() :
          0
      };
      u.setPositionForChannel = function(a, b) {
        a = u.engine.channels[a];
        null != a && null != a.currentSound && (a.paused ? a.position = b : a.looping ? a.loopSound(a.currentClip, b) : a.playSound(a.currentClip, b))
      };
      u.getSoundLengthForChannel = function(a) {
        a = u.engine.channels[a];
        return null != a && null != a.currentSource ? a.currentSource.get_length() : 0
      };
      u.getSoundLength = function(a) {
        return null != a && null != a.src ? a.src.get_length() : 0
      };
      u.setColorBackground = function(a, b) {
        null == b && (b = -2);
        u.engine.colorLayer.get_graphics().clear();
        a != Kf.TRANSPARENT &&
          (b == Kf.TRANSPARENT ? u.engine.setColorBackground(new Kf(a)) : u.engine.setColorBackground(new xi(a, b)))
      };
      u.setScrollSpeedForBackground = function(a, b, c) {
        if (null == a) {
          a = 0;
          for (var d = p.engine.backgroundLayers; a < d.length;) {
            var e = d[a];
            ++a;
            e.setScrollSpeed(b, c)
          }
        } else a instanceof ae && K.__cast(a, ae).setScrollSpeed(b, c)
      };
      u.setScrollFactorForLayer = function(a, b, c) {
        a instanceof ae ? K.__cast(a, ae).setScrollFactor(b, c) : a instanceof Lc && (a.scrollFactorX = b, a.scrollFactorY = c)
      };
      u.changeBackground = function(a, b) {
        b = oc.get().resourceMap.get(b);
        null != b && a instanceof ae && K.__cast(a, ae).reload(b.ID)
      };
      u.changeBackgroundImage = function(a, b) {
        null != b && a instanceof ae && K.__cast(a, ae).setImage(b)
      };
      u.addBackground = function(a, b, c) {
        a = oc.get().resourceMap.get(a);
        b = new ae(u.engine.getNextLayerID(), b, c, 0, 0, 1, 10, a.ID, !1);
        b.load();
        u.engine.insertLayer(b, c)
      };
      u.addBackgroundFromImage = function(a, b, c, d) {
        c = new ae(u.engine.getNextLayerID(), c, d, 0, 0, 1, 10, -1, !1);
        c.loadFromImg(a, b);
        u.engine.insertLayer(c, d)
      };
      u.addTileLayer = function(a, b) {
        var c = u.engine.scene.sceneWidth /
          u.engine.scene.tileWidth | 0,
          d = u.engine.scene.sceneHeight / u.engine.scene.tileHeight | 0,
          e = u.engine.getNextLayerID();
        c = new Yd(e, u.engine.scene, c, d);
        c.set_name(a);
        a = new Lc(e, a, b, 1, 1, 1, 10, c);
        u.engine.insertLayer(a, b)
      };
      u.newImage = function(a, b) {
        return u.imageApiAutoscale ? new wa(a * p.SCALE | 0, b * p.SCALE | 0, !0, 0) : new wa(a, b, !0, 0)
      };
      u.captureScreenshot = function() {
        var a = new wa(u.getStageWidth() | 0, u.getStageHeight() | 0);
        a.draw(Ja.get_current().stage, null, null, null, null, ka.antialias);
        return a
      };
      u.getImageForActor = function(a) {
        return a.getCurrentImage()
      };
      u.getExternalImage = function(a) {
        return Aa.getBitmapData("assets/data/" + a, !1)
      };
      u.loadImageFromURL = function(a, b) {
        var c = new Ij;
        c.contentLoaderInfo.addEventListener("complete", function(a) {
          a = K.__cast(K.__cast(a.currentTarget, eg).content, Ac).get_bitmapData();
          b(a)
        });
        c.load(new Sg(a))
      };
      u.getSubImage = function(a, b, c, d, e) {
        u.imageApiAutoscale && (b = b * p.SCALE | 0, c = c * p.SCALE | 0, d = d * p.SCALE | 0, e = e * p.SCALE | 0);
        if (null != a && 0 <= b && 0 <= c && 0 < d && 0 < e && b < a.width && c < a.height) {
          var f = new wa(d, e);
          u.dummyRect.x = b;
          u.dummyRect.y = c;
          u.dummyRect.width =
            d;
          u.dummyRect.height = e;
          u.dummyPoint.x = 0;
          u.dummyPoint.y = 0;
          f.copyPixels(a, u.dummyRect, u.dummyPoint);
          return f
        }
        return new wa(1, 1)
      };
      u.setOrderForImage = function(a, b) {
        null != a && null != a.parent && 0 <= b && b < a.parent.get_numChildren() && a.parent.setChildIndex(a, b)
      };
      u.getOrderForImage = function(a) {
        return null != a && null != a.parent ? a.parent.getChildIndex(a) : -1
      };
      u.bringImageBack = function(a) {
        null != a && null != a.parent && u.setOrderForImage(a, a.parent.getChildIndex(a) - 1)
      };
      u.bringImageForward = function(a) {
        null != a && null != a.parent &&
          u.setOrderForImage(a, a.parent.getChildIndex(a) + 1)
      };
      u.bringImageToBack = function(a) {
        null != a && null != a.parent && u.setOrderForImage(a, 0)
      };
      u.bringImageToFront = function(a) {
        null != a && null != a.parent && u.setOrderForImage(a, a.parent.get_numChildren() - 1)
      };
      u.attachImageToActor = function(a, b, c, d, e) {
        null == e && (e = 1);
        null != a && (null != a.parent && u.removeImage(a), 2 == e ? (b.addChild(a), b.setChildIndex(a, 0)) : b.addChild(a), a.cacheParentAnchor = b.cacheAnchor, a.set_imgX(c), a.set_imgY(d), a.set_smoothing(ka.antialias), b.attachedImages.push(a))
      };
      u.attachImageToHUD = function(a, b, c) {
        null != a && (null != a.parent && u.removeImage(a), u.engine.hudLayer.addChild(a), u.engine.hudLayer.attachedImages.push(a), a.set_imgX(b), a.set_imgY(c), a.set_smoothing(ka.antialias))
      };
      u.attachImageToLayer = function(a, b, c, d, e) {
        null == e && (e = 1);
        null != a && (null != a.parent && u.removeImage(a), 2 == e ? b.addChildAt(a, 0) : b.addChild(a), -1 == b.attachedImages.indexOf(a) && b.attachedImages.push(a), a.set_imgX(c), a.set_imgY(d), a.set_smoothing(ka.antialias))
      };
      u.removeImage = function(a) {
        null != a && (a.parent instanceof wb ? da.remove(K.__cast(a.parent, wb).attachedImages, a) : a.parent instanceof Lc && da.remove(K.__cast(a.parent, Lc).attachedImages, a), a.parent.removeChild(a))
      };
      u.resizeImage = function(a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = 1);
        null == b && (b = 1);
        var e = new Ea;
        e.scale(b, c);
        b = new wa(a.width * b | 0, a.height * c | 0, !0, 0);
        b.draw(a, e, null, null, null, d);
        return b
      };
      u.drawImageOnImage = function(a, b, c, d, e) {
        u.imageApiAutoscale && (c = c * p.SCALE | 0, d = d * p.SCALE | 0);
        if (null != a && null != b)
          if (u.dummyPoint.x = c, u.dummyPoint.y = d, 10 == e) b.copyPixels(a,
            a.rect, u.dummyPoint, null, null, !0);
          else {
            var f = new Ea;
            f.identity();
            f.translate(c, d);
            b.draw(a, f, null, e)
          }
      };
      u.drawTextOnImage = function(a, b, c, d, e) {
        u.imageApiAutoscale && (c = c * p.SCALE | 0, d = d * p.SCALE | 0);
        if (null != a) {
          var f = e.fontScale,
            g = eb.fontCache.h[e.ID];
          null == g && (g = e.font.getPreparedGlyphs(e.fontScale, 0, !1), eb.fontCache.h[e.ID] = g);
          e.font.render(a, g, b, 0, 1, c, d, f, 0)
        }
      };
      u.clearImagePartially = function(a, b, c, d, e) {
        u.imageApiAutoscale && (b = b * p.SCALE | 0, c = c * p.SCALE | 0, d = d * p.SCALE | 0, e = e * p.SCALE | 0);
        null != a && (u.dummyRect.x =
          b, u.dummyRect.y = c, u.dummyRect.width = d, u.dummyRect.height = e, a.fillRect(u.dummyRect, 0))
      };
      u.clearImage = function(a) {
        null != a && a.fillRect(a.rect, 0)
      };
      u.clearImageUsingMask = function(a, b, c, d) {
        u.imageApiAutoscale && (c = c * p.SCALE | 0, d = d * p.SCALE | 0);
        var e = b.width,
          f = b.height,
          g = 0,
          h = 0;
        0 > c ? (e = c > a.width - e ? a.width : e + c, g -= c, c = 0) : c > a.width - e && (e -= c - (a.width - e), c = a.width - e);
        0 > d ? (f = d > a.height - f ? a.height : f + d, h -= d, d = 0) : d > a.height - f && (f -= d - (a.height - f), d = a.height - f);
        if (!(0 >= e || 0 >= f)) {
          g = new ha(g, h, e, f);
          b = b.getPixels(g);
          c = new ha(c,
            d, e, f);
          d = a.getPixels(c);
          g = 0;
          for (e *= f; g < e;) {
            f = g++;
            b.position = 4 * f;
            d.position = 4 * f;
            h = b.readUnsignedByte();
            var m = d.readUnsignedByte();
            h = (256 - h) * m >> 8;
            d.position = 4 * f;
            d.writeByte(h)
          }
          b.position = 0;
          d.position = 0;
          a.setPixels(c, d)
        }
      };
      u.retainImageUsingMask = function(a, b, c, d) {
        u.imageApiAutoscale && (c = c * p.SCALE | 0, d = d * p.SCALE | 0);
        u.dummyPoint.x = c;
        u.dummyPoint.y = d;
        a.copyChannel(b, b.rect, u.dummyPoint, 8, 8)
      };
      u.fillImage = function(a, b) {
        null != a && a.fillRect(a.rect, -16777216 | b)
      };
      u.filterImage = function(a, b) {
        null != a && (u.dummyPoint.x =
          0, u.dummyPoint.y = 0, a.applyFilter(a, a.rect, u.dummyPoint, b))
      };
      u.imageSetPixel = function(a, b, c, d) {
        if (null != a)
          if (u.imageApiAutoscale && 1 != p.SCALE) {
            var e = (b + 1) * p.SCALE | 0,
              f = (c + 1) * p.SCALE | 0;
            b = b * p.SCALE | 0;
            for (c = c * p.SCALE | 0; b < e;)
              for (var g = b++, h = c, m = f; h < m;) {
                var l = h++;
                a.setPixel32(g, l, d | -16777216)
              }
          } else a.setPixel32(b, c, d | -16777216)
      };
      u.imageGetPixel = function(a, b, c) {
        return null != a ? (u.imageApiAutoscale && (b = b * p.SCALE | 0, c = c * p.SCALE | 0), a.getPixel(b, c)) : 0
      };
      u.imageSwapColor = function(a, b, c) {
        null != a && (u.dummyPoint.x = 0,
          u.dummyPoint.y = 0, a.threshold(a, a.rect, u.dummyPoint, "==", -16777216 | b, -16777216 | c, -1, !0))
      };
      u.flipImageHorizontal = function(a) {
        var b = new Ea;
        b.scale(-1, 1);
        b.translate(a.width, 0);
        var c = new wa(a.width, a.height, !0, 0);
        c.draw(a, b);
        u.dummyPoint.x = 0;
        u.dummyPoint.y = 0;
        a.copyPixels(c, c.rect, u.dummyPoint)
      };
      u.flipImageVertical = function(a) {
        var b = new Ea;
        b.scale(1, -1);
        b.translate(0, a.height);
        var c = new wa(a.width, a.height, !0, 0);
        c.draw(a, b);
        u.dummyPoint.x = 0;
        u.dummyPoint.y = 0;
        a.copyPixels(c, c.rect, u.dummyPoint)
      };
      u.setXForImage =
        function(a, b) {
          null != a && a.set_imgX(b)
        };
      u.setYForImage = function(a, b) {
        null != a && a.set_imgY(b)
      };
      u.fadeImageTo = function(a, b, c, d) {
        null == c && (c = 1);
        a.get_tweenProps().alpha.tween(a.get_alpha(), b, d, 1E3 * c | 0)
      };
      u.setOriginForImage = function(a, b, c) {
        a.setOrigin(b, c)
      };
      u.growImageTo = function(a, b, c, d, e) {
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 1);
        a.get_tweenProps().scaleXY.tween(a.get_scaleX(), b, a.get_scaleY(), c, e, 1E3 * d | 0)
      };
      u.spinImageTo = function(a, b, c, d) {
        null == c && (c = 1);
        a.get_tweenProps().angle.tween(a.get_rotation(),
          b, d, 1E3 * c | 0)
      };
      u.moveImageTo = function(a, b, c, d, e) {
        null == d && (d = 1);
        a.get_tweenProps().xy.tween(a.get_imgX(), b, a.get_imgY(), c, e, 1E3 * d | 0)
      };
      u.spinImageBy = function(a, b, c, d) {
        null == c && (c = 1);
        u.spinImageTo(a, a.get_rotation() + b, c, d)
      };
      u.moveImageBy = function(a, b, c, d, e) {
        null == d && (d = 1);
        u.moveImageTo(a, a.get_imgX() + b, a.get_imgY() + c, d, e)
      };
      u.setFilterForImage = function(a, b) {
        null != a && a.img.set_filters(a.get_filters().concat([b]))
      };
      u.clearFiltersForImage = function(a) {
        null != a && a.img.set_filters([])
      };
      u.imageToText = function(a) {
        var b =
          a.getPixels(a.rect);
        return a.width + ";" + a.height + ";" + u.toBase64(ib.ofData(Cb.toArrayBuffer(b)))
      };
      u.imageFromText = function(a) {
        var b = a.split(";");
        a = M.parseInt(b[0]);
        var c = M.parseInt(b[1]),
          d = u.fromBase64(b[2]);
        b = new sc(0);
        for (var e = 0, f = d.length; e < f;) {
          var g = e++;
          b.writeByte(d.b[g])
        }
        b.position = 0;
        b.__endian = 0;
        a = new wa(a, c, !0, 0);
        a.setPixels(a.rect, b);
        return a
      };
      u.toBase64 = function(a) {
        var b = ib.ofString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
        a = (new Jj(b)).encodeBytes(a).toString();
        b = a.length % 4;
        1 < b && (a += "=");
        2 == b && (a += "=");
        return a
      };
      u.fromBase64 = function(a) {
        var b = -1;
        "=" == a.charAt(a.length - 2) ? b = 2 : "=" == a.charAt(a.length - 1) && (b = 1); - 1 != b && (a = da.substr(a, 0, a.length - b));
        b = ib.ofString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
        return (new Jj(b)).decodeBytes(ib.ofString(a))
      };
      u.startShakingScreen = function(a, b) {
        null == b && (b = .5);
        null == a && (a = .05);
        u.engine.shakeScreen(a, b)
      };
      u.stopShakingScreen = function() {
        u.engine.stopShakingScreen()
      };
      u.getTopLayer = function() {
        return u.engine.getTopLayer()
      };
      u.getBottomLayer = function() {
        return u.engine.getBottomLayer()
      };
      u.getMiddleLayer = function() {
        return u.engine.getMiddleLayer()
      };
      u.getTileLayerAt = function(a) {
        return null != a && a instanceof Lc ? K.__cast(a, Lc).tiles : null
      };
      u.getTilesetIDByName = function(a) {
        a = oc.get().resourceMap.get(a);
        return a instanceof tf ? a.ID : -1
      };
      u.setTileAt = function(a, b, c, d, e) {
        null != c && c instanceof Lc && (u.removeTileAt(a, b, c), c = K.__cast(c, Lc).tiles, d = oc.get().resources.get(d).tiles[e], c.setTileAt(a, b, d), null == d || null == d.pixels || R.contains(u.engine.animatedTiles,
          d) || 1 < d.durations.length && u.engine.animatedTiles.push(d), u.engine.tileUpdated = !0)
      };
      u.tileExistsAt = function(a, b, c) {
        return null != u.getTileAt(a, b, c)
      };
      u.tileCollisionAt = function(a, b, c) {
        if (null == c) {
          c = 0;
          for (var d = u.engine.interactiveLayers; c < d.length;) {
            var e = d[c];
            ++c;
            e = e.tiles.getTileAt(a, b);
            if (null != e && -1 != e.collisionID) return !0
          }
          return !1
        }
        e = u.getTileAt(a, b, c);
        return null == e || -1 == e.collisionID ? !1 : !0
      };
      u.getTilePosition = function(a, b) {
        var c = u.engine.scene.tileHeight,
          d = u.engine.scene.tileWidth;
        return 0 == a ? Math.floor(b /
          d) : Math.floor(b / c)
      };
      u.getTileIDAt = function(a, b, c) {
        a = u.getTileAt(a, b, c);
        return null == a ? -1 : a.tileID
      };
      u.getTileColIDAt = function(a, b, c) {
        a = u.getTileAt(a, b, c);
        return null == a ? -1 : a.collisionID
      };
      u.getTileDataAt = function(a, b, c) {
        a = u.getTileAt(a, b, c);
        return null == a ? "" : a.metadata
      };
      u.getTilesetIDAt = function(a, b, c) {
        a = u.getTileAt(a, b, c);
        return null == a ? -1 : a.parent.ID
      };
      u.getTileAt = function(a, b, c) {
        c = u.getTileLayerAt(c);
        return null == c ? null : c.getTileAt(a, b)
      };
      u.removeTileAt = function(a, b, c) {
        if (null != c && c instanceof Lc) {
          var d =
            K.__cast(c, Lc).tiles,
            e = u.getTileAt(a, b, c);
          null != e && (p.NO_PHYSICS || -1 == e.collisionID ? -1 != e.collisionID && (c = b, e = a, null == e && (e = 0), null == c && (c = 0), d.grid.setTile(c, e, !1)) : (c = "ID-" + b * u.engine.scene.tileWidth + "-" + a * u.engine.scene.tileHeight + "-" + c.ID, e = u.engine.dynamicTiles.h[c], null != e && (u.engine.removeActor(e), e = u.engine.dynamicTiles, Object.prototype.hasOwnProperty.call(e.h, c) && delete e.h[c])), d.setTileAt(a, b, null), u.engine.tileUpdated = !0)
        }
      };
      u.getTileForCollision = function(a, b) {
        if (a.thisCollidedWithTile ||
          a.otherCollidedWithTile) {
          var c = Math.round(p.toPixelUnits(b.normalX)),
            d = Math.round(p.toPixelUnits(b.normalY)),
            e = Math.round(p.toPixelUnits(b.x));
          b = Math.round(p.toPixelUnits(b.y));
          a.thisCollidedWithTile && (c = -c, d = -d);
          0 > c && 0 == e % u.engine.scene.tileWidth && --e;
          0 > d && 0 == b % u.engine.scene.tileHeight && --b;
          e = u.getTilePosition(0, e);
          b = u.getTilePosition(1, b);
          a = 0;
          for (c = u.engine.interactiveLayers; a < c.length;)
            if (d = c[a], ++a, d = d.tiles.getTileAt(b, e), null != d && -1 != d.collisionID) return d
        }
        return null
      };
      u.getTileDataForCollision =
        function(a, b) {
          a = u.getTileForCollision(a, b);
          return null != a ? a.metadata : ""
        };
      u.getTilePositionForCollision = function(a, b, c) {
        if (b.thisCollidedWithTile || b.otherCollidedWithTile) {
          var d = Math.round(p.toPixelUnits(c.normalX)),
            e = Math.round(p.toPixelUnits(c.normalY)),
            f = Math.round(p.toPixelUnits(c.x));
          c = Math.round(p.toPixelUnits(c.y));
          b.thisCollidedWithTile && (d = -d, e = -e);
          0 > d && 0 == f % u.engine.scene.tileWidth && --f;
          0 > e && 0 == c % u.engine.scene.tileHeight && --c;
          f = u.getTilePosition(0, f);
          c = u.getTilePosition(1, c);
          return 0 == a ?
            f : c
        }
        return -1
      };
      u.createDynamicTile = function(a, b, c, d, e, f) {
        a = new wb(u.engine, 1E8, 1, b, c, d, e, f, null, null, null, null, !1, !0, !1, !1, a, !1, !1);
        a.set_name("Terrain");
        a.set_visible(!1);
        u.engine.dynamicTiles.h["ID-" + b + "-" + c + "-" + d] = a
      };
      u.getFont = function(a) {
        return oc.get().resources.get(a)
      };
      u.pause = function() {
        u.engine.pause()
      };
      u.unpause = function() {
        u.engine.unpause()
      };
      u.toggleFullScreen = function() {
        p.engine.toggleFullScreen()
      };
      u.pauseAll = function() {
        p.paused = !0
      };
      u.unpauseAll = function() {
        p.paused = !1
      };
      u.getScreenWidth =
        function() {
          return p.screenWidth
        };
      u.getScreenHeight = function() {
        return p.screenHeight
      };
      u.getStageWidth = function() {
        return p.stage.stageWidth
      };
      u.getStageHeight = function() {
        return p.stage.stageHeight
      };
      u.setOffscreenTolerance = function(a, b, c, d) {
        p.paddingTop = a;
        p.paddingLeft = b;
        p.paddingBottom = c;
        p.paddingRight = d
      };
      u.isTransitioning = function() {
        return u.engine.isTransitioning()
      };
      u.setTimeScale = function(a) {
        p.timeScale = a
      };
      u.randomFloat = function() {
        return Math.random()
      };
      u.randomFloatBetween = function(a, b) {
        return a <=
          b ? a + Math.random() * (b - a) : b + Math.random() * (a - b)
      };
      u.randomInt = function(a, b) {
        return a <= b ? a + Math.floor(Math.random() * (b - a + 1)) : b + Math.floor(Math.random() * (a - b + 1))
      };
      u.saveGame = function(a, b) {
        a = ed.getLocal(a, Ad.current.meta.h.localSavePath);
        for (var c = Object.keys(u.engine.gameAttributes.h), d = c.length, e = 0; e < d;) {
          var f = c[e++];
          0 != u.engine.savableAttributes.h[f] && R.saveToSharedObject(a, f, u.engine.gameAttributes.h[f])
        }
        R.flushSharedObject(a, b)
      };
      u.loadGame = function(a, b) {
        a = ed.getLocal(a, Ad.current.meta.h.localSavePath);
        for (var c = 0, d = Y.fields(a.data); c < d.length;) {
          var e = d[c];
          ++c;
          var f = u.engine.gameAttributes,
            g = R.loadFromSharedObject(a, e);
          f.h[e] = g
        }
        null != b && b(!0)
      };
      u.saveData = function(a, b, c, d) {
        a = ed.getLocal(a, Ad.current.meta.h.localSavePath);
        R.saveToSharedObject(a, b, c);
        R.flushSharedObject(a, d)
      };
      u.loadData = function(a, b, c) {
        a = ed.getLocal(a, Ad.current.meta.h.localSavePath);
        b = R.loadFromSharedObject(a, b);
        null != c && c(!0);
        return b
      };
      u.checkData = function(a, b) {
        a = ed.getLocal(a, Ad.current.meta.h.localSavePath);
        return null != Y.field(a.data,
          b)
      };
      u.defaultURLHandler = function(a) {
        new th(a.target)
      };
      u.openURLInBrowser = function(a) {
        Ja.getURL(new Sg(a))
      };
      u.visitURL = function(a, b) {
        null == b && (b = u.defaultURLHandler);
        try {
          var c = new Sg(a);
          c.method = "GET";
          (new th(c)).addEventListener("complete", b)
        } catch (d) {
          if (pa.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
        }
      };
      u.postToURL = function(a, b, c) {
        null == c && (c = u.defaultURLHandler);
        a = new Sg(a);
        a.method = "POST";
        null != b && (a.data = nr._new(b));
        try {
          var d = new th(a);
          d.addEventListener("complete", c);
          u.runLater(500,
            function(a) {
              d.close()
            })
        } catch (e) {
          if (pa.lastError = e, "string" != typeof F.caught(e).unwrap()) throw e;
        }
      };
      u.convertToPseudoUnicode = function(a) {
        var b = "";
        try {
          for (var c = 0, d = 0, e = a.length; d < e;) {
            c = d;
            var f = a.charCodeAt(d);
            d += 55296 <= f && 56319 >= f ? 2 : 1;
            var g = fg.codePointAt(a, c),
              h = g;
            if (128 > h) {
              var m = 65535 >= g ? String.fromCodePoint(g) : String.fromCodePoint((g >> 10) + 55232) + String.fromCodePoint(g & 1023 | 56320);
              b += m
            } else b += "~x" + W.hex(h, 4)
          }
        } catch (l) {
          return pa.lastError = l, a
        }
        return b
      };
      u.simpleTweet = function(a, b) {
        u.openURLInBrowser("http://twitter.com/home?status=" +
          encodeURIComponent(a + " " + b))
      };
      u.newgroundsShowAd = function() {};
      u.newgroundsSetMedalPosition = function(a, b) {};
      u.newgroundsUnlockMedal = function(a) {};
      u.newgroundsSubmitScore = function(a, b) {};
      u.newgroundsShowScore = function(a) {};
      u.newgroundsHelper = function(a) {};
      u.kongregateInitAPI = function() {};
      u.kongregateSubmitStat = function(a, b) {};
      u.kongregateIsGuest = function() {
        return !0
      };
      u.kongregateGetUsername = function() {
        return "Guest"
      };
      u.kongregateGetUserID = function() {
        return 0
      };
      u.loadAtlas = function(a) {
        u.engine.atlasesToLoad.h[a] =
          a
      };
      u.unloadAtlas = function(a) {
        u.engine.atlasesToUnload.h[a] = a
      };
      u.atlasIsLoaded = function(a) {
        a = Bb.get().atlases.h[a];
        return null != a ? a.active : !1
      };
      u.initGooglePlayGames = function() {};
      u.stopGooglePlayGames = function() {};
      u.getGPGConnectionInfo = function(a) {
        return !1
      };
      u.showGPGAchievements = function() {};
      u.showGPGLeaderboards = function() {};
      u.showGPGLeaderboard = function(a) {};
      u.showGPGQuests = function() {};
      u.unlockGPGAchievement = function(a) {};
      u.incrementGPGAchievement = function(a, b) {};
      u.submitGPGScore = function(a, b) {};
      u.updateGPGEvent = function(a, b) {};
      u.getCompletedGPGQuests = function() {
        return []
      };
      u.gameCenterInitialize = function() {};
      u.gameCenterIsAuthenticated = function() {
        return !1
      };
      u.gameCenterGetPlayerName = function() {
        return "None"
      };
      u.gameCenterGetPlayerID = function() {
        return "None"
      };
      u.gameCenterShowLeaderboard = function(a) {};
      u.gameCenterShowAchievements = function() {};
      u.gameCenterSubmitScore = function(a, b) {};
      u.gameCenterSubmitAchievement = function(a, b) {};
      u.gameCenterResetAchievements = function() {};
      u.gameCenterShowBanner = function(a,
        b) {};
      u.purchasesAreInitialized = function() {
        return !1
      };
      u.purchasesRestore = function() {};
      u.purchasesBuy = function(a) {};
      u.purchasesHasBought = function(a) {
        return !1
      };
      u.purchasesGetTitle = function(a) {
        return ""
      };
      u.purchasesGetDescription = function(a) {
        return ""
      };
      u.purchasesGetPrice = function(a) {
        return ""
      };
      u.purchasesRequestProductInfo = function(a) {};
      u.purchasesUse = function(a) {};
      u.purchasesGetQuantity = function(a) {
        return 0
      };
      u.showAlert = function(a, b) {};
      u.vibrate = function(a) {};
      u.showKeyboard = function() {};
      u.hideKeyboard =
        function() {};
      u.setKeyboardText = function(a) {};
      u.setIconBadgeNumber = function(a) {};
      u.enableDebugDrawing = function() {
        p.DEBUG_DRAW = !0;
        p.NO_PHYSICS || p.debugDrawer.m_sprite.get_graphics().clear()
      };
      u.disableDebugDrawing = function() {
        p.DEBUG_DRAW = !1;
        p.NO_PHYSICS || p.debugDrawer.m_sprite.get_graphics().clear()
      };
      u.gameURL = function() {
        return ""
      };
      u.exitGame = function() {};
      u.createGrayscaleFilter = function() {
        var a = [];
        a = a.concat([.5, .5, .5, 0, 0]);
        a = a.concat([.5, .5, .5, 0, 0]);
        a = a.concat([.5, .5, .5, 0, 0]);
        a = a.concat([0, 0, 0, 1, 0]);
        return new gg(a)
      };
      u.createSepiaFilter = function() {
        var a = [];
        a = a.concat([.34, .33, .33, 0, 30]);
        a = a.concat([.33, .34, .33, 0, 20]);
        a = a.concat([.33, .33, .34, 0, 0]);
        a = a.concat([0, 0, 0, 1, 0]);
        return new gg(a)
      };
      u.createNegativeFilter = function() {
        var a = [];
        a = a.concat([-1, 0, 0, 0, 255]);
        a = a.concat([0, -1, 0, 0, 255]);
        a = a.concat([0, 0, -1, 0, 255]);
        a = a.concat([0, 0, 0, 1, 0]);
        return new gg(a)
      };
      u.createTintFilter = function(a, b) {
        null == b && (b = 1);
        var c = new $a;
        c.colorize(a, b);
        return c.getFilter()
      };
      u.createHueFilter = function(a) {
        var b = new $a;
        b.adjustHue(a);
        b.adjustSaturation(1);
        return b.getFilter()
      };
      u.createSaturationFilter = function(a) {
        var b = new $a;
        b.adjustSaturation(a / 100);
        return b.getFilter()
      };
      u.createBrightnessFilter = function(a) {
        var b = new $a;
        b.adjustBrightness(a / 100);
        return b.getFilter()
      };
      u.prototype = {
        wrapper: null,
        propertyChangeEvents: null,
        equalityPairs: null,
        checkProperties: null,
        nameMap: null,
        attributeTweens: null,
        scriptInit: null,
        toInternalName: function(a) {
          if (null == this.nameMap) return a;
          var b = this.nameMap.h[a];
          return null == b ? a : b
        },
        forwardMessage: function(a) {},
        clearListeners: function() {
          this.propertyChangeEvents = new ua
        },
        internalGetGroup: function(a, b, c) {
          if (p.NO_PHYSICS) return b = K.__cast(c, nc), a == b.actorA ? u.engine.getGroup(b.groupA) : u.engine.getGroup(b.groupB);
          b = K.__cast(b, Hf);
          if (null == b) return K.__cast(a, wb).getGroup();
          a = b.groupID;
          return -1E3 == a && (b = b.getBody(), null != b) ? u.engine.getGroup(b.getUserData().groupID) : u.engine.getGroup(a)
        },
        init: function() {},
        addMobileKeyboardListener: function(a, b) {
          a = new yi(ld.TYPE_KEYBOARD, a, b);
          u.engine.nativeListeners.push(a)
        },
        addMobileAdListener: function(a, b) {
          a = new yi(ld.TYPE_ADS, a, b);
          u.engine.nativeListeners.push(a)
        },
        addGameCenterListener: function(a, b) {
          a = new yi(ld.TYPE_GAMECENTER, a, b);
          u.engine.nativeListeners.push(a)
        },
        addPurchaseListener: function(a, b) {
          a = new yi(ld.TYPE_PURCHASES, a, b);
          u.engine.nativeListeners.push(a)
        },
        addListener: function(a, b) {
          a.add(b);
          this instanceof Fa && K.__cast(this, Fa).actor.registerListener(a, b)
        },
        addListenerWithKey: function(a, b, c) {
          a.exists(b) || a.set(b, new Mc);
          a = a.get(b);
          a.add(c);
          this instanceof Fa &&
            K.__cast(this, Fa).actor.registerListener(a, c)
        },
        addListenerWithKey2: function(a, b, c, d) {
          if (!a.h.hasOwnProperty(b)) {
            var e = new Za;
            a.h[b] = e
          }
          if (!a.h[b].h.hasOwnProperty(c)) {
            var f = a.h[b];
            e = new Mc;
            f.h[c] = e
          }
          a = a.h[b].h[c];
          a.add(d);
          this instanceof Fa && K.__cast(this, Fa).actor.registerListener(a, d)
        },
        addWhenCreatedListener: function(a, b) {
          null != a && this.addListener(a.whenCreated, function() {
            b(null)
          })
        },
        addWhenKilledListener: function(a, b) {
          null != a && this.addListener(a.whenKilled, function() {
            b(null)
          })
        },
        addWhenUpdatedListener: function(a,
          b) {
          var c = this instanceof Fa;
          null == a && c && (a = K.__cast(this, Fa).actor);
          null != a ? (c = function(a) {
            b(a, null)
          }, this.addListener(a.whenUpdated, c)) : (c = function(a) {
            b(a, null)
          }, this.addListener(u.engine.whenUpdated, c))
        },
        addWhenDrawingListener: function(a, b) {
          var c = this instanceof Fa;
          null == a && c && (a = K.__cast(this, Fa).actor);
          null != a ? (c = function(a, c, f) {
            b(a, c, f, null)
          }, this.addListener(a.whenDrawing, c)) : (c = function(a, c, f) {
            b(a, c, f, null)
          }, this.addListener(u.engine.whenDrawing, c))
        },
        addActorEntersRegionListener: function(a,
          b) {
          null != a && this.addListener(a.whenActorEntered, function(a) {
            b(a, null)
          })
        },
        addActorExitsRegionListener: function(a, b) {
          null != a && this.addListener(a.whenActorExited, function(a) {
            b(a, null)
          })
        },
        addActorPositionListener: function(a, b) {
          null != a && this.addListener(a.whenPositionStateChanged, function(a, d, e, f) {
            b(a, d, e, f, null)
          })
        },
        addActorTypeGroupPositionListener: function(a, b) {
          this.addListenerWithKey(u.engine.whenTypeGroupPositionStateChangedEvents, a, function(a, d, e, f, g) {
            b(a, d, e, f, g, null)
          })
        },
        addSwipeListener: function(a) {
          this.addListener(u.engine.whenSwiped,
            function() {
              a(null)
            })
        },
        addMultiTouchStartListener: function(a) {
          this.addListener(u.engine.whenMTStarted, function(b) {
            a(b, null)
          })
        },
        addMultiTouchMoveListener: function(a) {
          this.addListener(u.engine.whenMTDragged, function(b) {
            a(b, null)
          })
        },
        addMultiTouchEndListener: function(a) {
          this.addListener(u.engine.whenMTEnded, function(b) {
            a(b, null)
          })
        },
        addKeyStateListener: function(a, b) {
          this.addListener(u.engine.whenKeyPressedEvents.getOrCreateEvent(a), function(a, d) {
            b(a, d, null)
          })
        },
        addAnyKeyPressedListener: function(a) {
          this.addListener(u.engine.whenAnyKeyPressed,
            function(b) {
              a(b, null)
            })
        },
        addAnyKeyReleasedListener: function(a) {
          this.addListener(u.engine.whenAnyKeyReleased, function(b) {
            a(b, null)
          })
        },
        addAnyGamepadPressedListener: function(a) {
          this.addListener(u.engine.whenAnyGamepadPressed, function(b) {
            a(b, null)
          })
        },
        addAnyGamepadReleasedListener: function(a) {
          this.addListener(u.engine.whenAnyGamepadReleased, function(b) {
            a(b, null)
          })
        },
        addMousePressedListener: function(a) {
          this.addListener(u.engine.whenMousePressed, function() {
            a(null)
          })
        },
        addMouseReleasedListener: function(a) {
          this.addListener(u.engine.whenMouseReleased,
            function() {
              a(null)
            })
        },
        addMouseMovedListener: function(a) {
          this.addListener(u.engine.whenMouseMoved, function() {
            a(null)
          })
        },
        addMouseDraggedListener: function(a) {
          this.addListener(u.engine.whenMouseDragged, function() {
            a(null)
          })
        },
        addMouseOverActorListener: function(a, b) {
          null != a && this.addListener(a.whenMousedOver, function(a) {
            b(a, null)
          })
        },
        addPropertyChangeListener: function(a, b, c) {
          var d = function() {
            c(null, null)
          };
          this.addListenerWithKey(this.propertyChangeEvents, a, d);
          null != b && this.addListenerWithKey(this.propertyChangeEvents,
            b, d);
          this.checkProperties = !0
        },
        propertyChanged: function(a) {
          if (this.checkProperties && (a = this.propertyChangeEvents.h[a], null != a && 0 < a.length))
            for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
              try {
                a.listeners[a._dispatchIndex]()
              } catch (b) {
                if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
              }++a._dispatchIndex
            }
        },
        addCollisionListener: function(a, b) {
          null != a && this.addListener(a.whenCollided, function(a) {
            b(a, null)
          })
        },
        addSceneCollisionListener: function(a, b, c) {
          this.addListenerWithKey2(u.engine.whenCollidedEvents,
            a, b,
            function(a) {
              c(a, null)
            })
        },
        addWhenTypeGroupCreatedListener: function(a, b) {
          this.addListenerWithKey(u.engine.whenTypeGroupCreatedEvents, a, function(a) {
            b(a, null)
          })
        },
        addWhenTypeGroupKilledListener: function(a, b) {
          this.addListenerWithKey(u.engine.whenTypeGroupKilledEvents, a, function(a) {
            b(a, null)
          })
        },
        addSoundListener: function(a, b) {
          a instanceof Qh ? this.addListenerWithKey(u.engine.whenSoundEndedEvents, a, function() {
            b(null)
          }) : this.addListenerWithKey(u.engine.whenChannelEndedEvents, a, function() {
            b(null)
          })
        },
        addFocusChangeListener: function(a) {
          this.addListener(u.engine.whenFocusChanged,
            function(b) {
              a(b, null)
            })
        },
        addPauseListener: function(a) {
          this.addListener(u.engine.whenPaused, function(b) {
            a(b, null)
          })
        },
        addFullscreenListener: function(a) {
          this.addListener(u.engine.whenFullscreenChanged, function() {
            a(null)
          })
        },
        addGameScaleListener: function(a) {
          this.addListener(u.engine.whenGameScaleChanged, function() {
            a(null)
          })
        },
        addScreenSizeListener: function(a) {
          this.addListener(u.engine.whenScreenSizeChanged, function() {
            a(null)
          })
        },
        disableThisBehavior: function() {
          u.engine.behaviors.disableBehavior(this.wrapper.name)
        },
        tweenNumber: function(a, b, c, d) {
          null == c && (c = 1);
          var e = this,
            f = this.attributeTweens.h[a];
          null == f && (f = new he, f.doOnUpdate(function() {
            e[a] = f.value
          }), this.attributeTweens.h[a] = f);
          f.tween(Y.field(this, a), b, d, 1E3 * c | 0)
        },
        abortTweenNumber: function(a) {
          a = this.attributeTweens.h[a];
          null != a && xb.cancel(a)
        },
        pauseTweens: function() {
          for (var a = this.attributeTweens.h, b = Object.keys(a), c = b.length, d = 0; d < c;) a[b[d++]].paused = !0
        },
        unpauseTweens: function() {
          for (var a = this.attributeTweens.h, b = Object.keys(a), c = b.length, d = 0; d < c;) a[b[d++]].paused = !1
        },
        __class__: u
      };
      var Fa = function(a) {
        u.call(this);
        this.actor = a
      };
      k["com.stencyl.behavior.ActorScript"] = Fa;
      Fa.__name__ = "com.stencyl.behavior.ActorScript";
      Fa.__super__ = u;
      Fa.prototype = t(u.prototype, {
        actor: null,
        getValue: function(a, b) {
          return this.actor.getValue(a, b)
        },
        setValue: function(a, b, c) {
          this.actor.setValue(a, b, c)
        },
        shout: function(a, b) {
          return this.actor.shout(a, b)
        },
        disableThisBehavior: function() {
          this.actor.disableBehavior(this.wrapper.name)
        },
        __class__: Fa
      });
      var wi = function(a, b, c, d, e, f, g) {
        this.ID = a;
        this.fieldName =
          b;
        this.fullName = c;
        this.type = e;
        this.value = d;
        this.realValue = null;
        this.hidden = g
      };
      k["com.stencyl.behavior.Attribute"] = wi;
      wi.__name__ = "com.stencyl.behavior.Attribute";
      wi.prototype = {
        ID: null,
        fieldName: null,
        fullName: null,
        type: null,
        defaultValue: null,
        value: null,
        realValue: null,
        hidden: null,
        getRealValue: function() {
          null == this.realValue && ("int" == this.type ? this.realValue = this.value : "float" == this.type || "number" == this.type ? this.realValue = this.value : "bool" == this.type || "boolean" == this.type ? this.realValue = this.value :
            "color" == this.type ? this.realValue = this.value : "sound" == this.type || "actortype" == this.type || "font" == this.type ? (this.realValue = -1 == this.value ? null : oc.get().resources.get(this.value), "font" != this.type || this.realValue instanceof Oe || (this.realValue = null), "sound" != this.type || this.realValue instanceof Qh || (this.realValue = null), "actortype" != this.type || this.realValue instanceof dg || (this.realValue = null)) : "actorgroup" == this.type ? this.realValue = this.value : "control" == this.type ? this.realValue = this.value : "animation" ==
            this.type ? this.realValue = this.value : "game-attribute" == this.type ? this.realValue = this.value : "scene" == this.type ? this.realValue = Bb.get().scenes.h[this.value] : "text" == this.type ? this.realValue = this.value : "list" == this.type ? (this.realValue = this.value, null == this.value && (this.realValue = [])) : "map" == this.type ? (this.realValue = this.value, null == this.value && (this.realValue = new ua)) : null != this.value && "actor" == this.type ? this.realValue = this.value : null != this.value && "joint" == this.type ? this.realValue = this.value : null !=
            this.value && "region" == this.type && (this.realValue = this.value));
          return this.realValue
        },
        __class__: wi
      };
      var $k = function(a, b, c, d, e, f, g, h, m, l) {
        this.isEvent = l;
        this.parent = a;
        this.engine = b;
        this.classname = e;
        if (null != b) try {
          this.cls = k[e]
        } catch (y) {
          if (pa.lastError = y, "string" != typeof F.caught(y).unwrap()) throw y;
        }
        this.enabled = f;
        this.drawable = g;
        this.ID = c;
        this.name = d;
        this.type = m;
        this.attributes = h
      };
      k["com.stencyl.behavior.Behavior"] = $k;
      $k.__name__ = "com.stencyl.behavior.Behavior";
      $k.prototype = {
        parent: null,
        engine: null,
        enabled: null,
        drawable: null,
        isEvent: null,
        ID: null,
        name: null,
        type: null,
        classname: null,
        cls: null,
        script: null,
        attributes: null,
        initScript: function(a) {
          null == a && (a = !1);
          if (null == this.cls) this.script = new kb;
          else {
            if ("actor" == this.type) {
              if (K.getClass(this.parent) == p) {
                this.script = new kb;
                return
              }
              this.script = Qb.createInstance(this.cls, [0, this.parent, null])
            } else {
              if (K.getClass(this.parent) == wb) {
                this.script = new kb;
                return
              }
              this.script = Qb.createInstance(this.cls, [0, null])
            }
            this.script.wrapper = this;
            this.initAttributes();
            if (!a) try {
              this.script.init(), this.script.scriptInit = !0
            } catch (b) {
              if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
            }
          }
        },
        initAttributes: function() {
          for (var a = this.attributes.h, b = Object.keys(a), c = b.length, d = 0; d < c;) {
            var e = a[b[d++]];
            try {
              if (!(e.hidden || "actor" == e.type && "actor" == e.fieldName && this.script instanceof Fa)) {
                var f = this.script.toInternalName(e.fieldName);
                if ("actor" == e.type || "joint" == e.type || "region" == e.type) {
                  var g = e.getRealValue();
                  "actor" == e.type ? this.script[f] = this.engine.getActor(g) :
                    "joint" != e.type && "region" == e.type && (this.script[f] = this.engine.getRegion(g))
                } else if ("actorgroup" == e.type) {
                  var h = e.getRealValue();
                  this.script[f] = this.engine.getGroup(h)
                } else {
                  var m = e.getRealValue();
                  if ("list" == e.type) {
                    e = null;
                    if (null != m) {
                      e = K.__cast(m, Array);
                      for (var l = [], y = 0; y < e.length;) {
                        var n = e[y];
                        ++y;
                        l.push(n)
                      }
                      e = l
                    } else e = [];
                    this.script[f] = e
                  } else if ("map" == e.type) {
                    e = null;
                    if (null != m) {
                      l = m;
                      e = new ua;
                      for (var p = l.keys(); p.hasNext();) {
                        var k = p.next(),
                          q = l.get(k);
                        e.h[k] = q
                      }
                    } else e = new ua;
                    this.script[f] = e
                  } else this.script[f] =
                    m
                }
              }
            } catch (fr) {
              if (pa.lastError = fr, "string" != typeof F.caught(fr).unwrap()) throw fr;
            }
          }
        },
        __class__: $k
      };
      var Kj = function(a, b) {
        this.behaviorID = a;
        this.values = b;
        this.enabled = !0
      };
      k["com.stencyl.behavior.BehaviorInstance"] = Kj;
      Kj.__name__ = "com.stencyl.behavior.BehaviorInstance";
      Kj.prototype = {
        behaviorID: null,
        values: null,
        enabled: null,
        __class__: Kj
      };
      var Cj = function() {
        this.behaviors = [];
        this.cache = new ua
      };
      k["com.stencyl.behavior.BehaviorManager"] = Cj;
      Cj.__name__ = "com.stencyl.behavior.BehaviorManager";
      Cj.prototype = {
        behaviors: null,
        cache: null,
        destroy: function() {
          this.cache = this.behaviors = null
        },
        add: function(a) {
          this.cache.h[a.name] = a;
          this.behaviors.push(a)
        },
        hasBehavior: function(a) {
          return null == this.cache ? !1 : null != this.cache.h[a]
        },
        enableBehavior: function(a) {
          if (this.hasBehavior(a)) {
            a = this.cache.h[a];
            if (null != a.script && !a.script.scriptInit) try {
              a.script.init(), a.script.scriptInit = !0
            } catch (b) {
              if (pa.lastError = b, "string" != typeof F.caught(b).unwrap()) throw b;
            }
            a.enabled = !0
          }
        },
        disableBehavior: function(a) {
          this.hasBehavior(a) && (this.cache.h[a].enabled = !1)
        },
        isBehaviorEnabled: function(a) {
          return this.hasBehavior(a) ? this.cache.h[a].enabled : !1
        },
        initScripts: function() {
          for (var a = 0, b = this.behaviors.length; a < b;) {
            var c = a++;
            c = this.behaviors[c];
            c.initScript(!c.enabled)
          }
        },
        getAttribute: function(a, b) {
          a = this.cache.h[a];
          if (null != a && null != a.script) {
            b = a.script.toInternalName(b);
            var c = Y.field(a.script, b);
            null != c || uh.hasField(a.script.wrapper.classname, b);
            return c
          }
          return null
        },
        setAttribute: function(a, b, c) {
          a = this.cache.h[a];
          null != a && null != a.script && uh.hasField(a.script.wrapper.classname,
            b) && (a.script[b] = c, a.script.propertyChanged(b))
        },
        call: function(a, b) {
          if (null == this.cache) return null;
          for (var c = null, d = 0, e = this.behaviors.length; d < e;) {
            var f = d++;
            f = this.behaviors[f];
            if (f.enabled && null != f.script) try {
              var g = Y.field(f.script, a);
              null != g ? c = g.apply(f.script, b) : f.script.forwardMessage(a)
            } catch (h) {
              if (pa.lastError = h, "string" == typeof F.caught(h).unwrap()) f.script.forwardMessage(a);
              else throw h;
            }
          }
          return c
        },
        call2: function(a, b, c) {
          if (null == this.cache) return null;
          var d = null;
          a = this.cache.h[a];
          if (null !=
            a) {
            if (!a.enabled || null == a.script) return d;
            try {
              var e = Y.field(a.script, b);
              null != e ? d = e.apply(a.script, c) : a.script.forwardMessage(b)
            } catch (f) {
              if (pa.lastError = f, "string" == typeof F.caught(f).unwrap()) a.script.forwardMessage(b);
              else throw f;
            }
          }
          return d
        },
        __class__: Cj
      };
      var uh = function() {};
      k["com.stencyl.behavior.ReflectionHelper"] = uh;
      uh.__name__ = "com.stencyl.behavior.ReflectionHelper";
      uh.getFieldMap = function(a) {
        var b = uh.fieldMaps.h[a];
        if (null == b) try {
          for (var c = Qb.getInstanceFields(k[a]), d = new ua, e = 0; e < c.length;) {
            var f =
              c[e];
            ++e;
            d.h[f] = !0
          }
          b = d;
          uh.fieldMaps.h[a] = b
        } catch (g) {
          if (pa.lastError = g, "string" != typeof F.caught(g).unwrap()) throw g;
        }
        return b
      };
      uh.hasField = function(a, b) {
        a = uh.getFieldMap(a);
        return null == a ? !1 : Object.prototype.hasOwnProperty.call(a.h, b)
      };
      var kb = function() {
        u.call(this)
      };
      k["com.stencyl.behavior.SceneScript"] = kb;
      kb.__name__ = "com.stencyl.behavior.SceneScript";
      kb.__super__ = u;
      kb.prototype = t(u.prototype, {
        __class__: kb
      });
      var cl = function(a, b, c, d) {
        this.toExecute = a;
        this.interval = b;
        this.repeats = c;
        this.actor = d;
        this.done = !1;
        this.timer = b
      };
      k["com.stencyl.behavior.TimedTask"] = cl;
      cl.__name__ = "com.stencyl.behavior.TimedTask";
      cl.prototype = {
        toExecute: null,
        interval: null,
        repeats: null,
        actor: null,
        timer: null,
        done: null,
        actorCreateTime: null,
        update: function(a) {
          null == this.actor || this.actor.isAlive() ? null == this.actor && p.engine.isPaused() || null != this.actor && this.actor.isPaused() || (this.timer -= a, 0 >= this.timer && (this.toExecute(this), this.done = !this.repeats, this.repeats && (this.timer += this.interval))) : this.done = !0
        },
        __class__: cl
      };
      var Mc =
        function() {
          this._dispatchIndex = -1;
          this.listeners = [];
          this.length = 0
        };
      k["com.stencyl.event.Event"] = Mc;
      Mc.__name__ = "com.stencyl.event.Event";
      Mc.prototype = {
        listeners: null,
        length: null,
        _dispatchIndex: null,
        add: function(a) {
          this.listeners.push(a);
          ++this.length
        },
        has: function(a) {
          for (var b = 0, c = this.listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.listeners.length; 0 <= --b;) Y.compareMethods(this.listeners[b], a) && (this.listeners.splice(b, 1), --this.length,
            this._dispatchIndex >= b && --this._dispatchIndex)
        },
        removeAll: function() {
          this.listeners.splice(0, this.length);
          this._dispatchIndex = this.length = 0
        },
        __class__: Mc
      };
      var or = function() {};
      k["com.stencyl.event.EventDispatcher"] = or;
      or.__name__ = "com.stencyl.event.EventDispatcher";
      var Sn = function() {
        this.keys = [];
        this.map = new ua
      };
      k["com.stencyl.event.EventMap_String_func_Bool_Bool_Void"] = Sn;
      Sn.__name__ = "com.stencyl.event.EventMap_String_func_Bool_Bool_Void";
      Sn.prototype = {
        keys: null,
        map: null,
        hasEvents: function() {
          return 0 <
            this.keys.length
        },
        getOrCreateEvent: function(a) {
          var b = this.map.get(a);
          null == b && (b = new Mc, this.map.set(a, b), this.keys.push(a));
          return b
        },
        getEvent: function(a) {
          return this.map.get(a)
        },
        __class__: Sn
      };
      var yi = function(a, b, c) {
        this.metaType = a;
        this.type = b;
        this.fn = c
      };
      k["com.stencyl.event.NativeListener"] = yi;
      yi.__name__ = "com.stencyl.event.NativeListener";
      yi.prototype = {
        metaType: null,
        type: null,
        fn: null,
        checkEvents: function(a) {
          a = a.eventTable.h[this.metaType];
          if (null != a)
            for (var b = 0; b < a.length;) {
              var c = a[b];
              ++b;
              c.type ==
                this.type && (this.metaType == ld.TYPE_ADS ? this.fn() : this.metaType == ld.TYPE_PURCHASES ? this.fn(c.data1) : this.metaType == ld.TYPE_GAMECENTER ? this.fn(c.data1) : this.metaType == ld.TYPE_KEYBOARD && this.fn(c.data1))
            }
        },
        __class__: yi
      };
      var Xc = function(a, b) {
        null == b && (b = "");
        this.type = a;
        this.data1 = b
      };
      k["com.stencyl.event.StencylEvent"] = Xc;
      Xc.__name__ = "com.stencyl.event.StencylEvent";
      Xc.prototype = {
        type: null,
        data1: null,
        __class__: Xc
      };
      var hb = function(a, b) {
        null == b && (b = 2);
        this.swipeTimeout = .1;
        this.longPressDelay = 1;
        var c = this;
        if (!hb.initialized) {
          hb.initialized = !0;
          var d = Ja.get_current().stage;
          hb.moveToleSqr = .008 * (new la(d.stageWidth, d.stageHeight)).get_length();
          hb.moveToleSqr *= hb.moveToleSqr;
          xe.get_supportsTouchEvents() && (xe.inputMode = 2)
        }
        this.owner = a;
        this.mode = b;
        a = xe.get_supportsTouchEvents();
        this.owner.mouseEnabled = !0;
        this.listenEvents = 1 == this.mode ? a ? hb.touchEvents : hb.mouseEvents : a ? hb.geTouchEvents : hb.geMouseEvents;
        this.handler = 1 == this.mode ? a ? r(this, this.convertTouch) : r(this, this.convertMouse) : a ? r(this, this.onTouch) : r(this,
          this.onMouse);
        a = 0;
        for (b = this.listenEvents; a < b.length;) d = b[a], ++a, this.owner.addEventListener(d, this.handler);
        3 == this.mode && Ja.get_current().stage.addEventListener("resize", function(a) {
          c.overlay = null
        });
        this.touchList = new bb;
        this.setReady()
      };
      k["com.stencyl.gestures.RoxGestureAgent"] = hb;
      hb.__name__ = "com.stencyl.gestures.RoxGestureAgent";
      hb.__properties__ = {
        get_multitouchSupported: "get_multitouchSupported"
      };
      hb.init = function() {
        if (!hb.initialized) {
          hb.initialized = !0;
          var a = Ja.get_current().stage;
          hb.moveToleSqr =
            .008 * (new la(a.stageWidth, a.stageHeight)).get_length();
          hb.moveToleSqr *= hb.moveToleSqr;
          xe.get_supportsTouchEvents() && (xe.inputMode = 2)
        }
      };
      hb.localOffset = function(a, b) {
        var c = a.parent.localToGlobal(new la(a.get_x(), a.get_y()));
        c.offset(b.x, b.y);
        c = a.parent.globalToLocal(c);
        c.offset(-a.get_x(), -a.get_y());
        return c
      };
      hb.get_multitouchSupported = function() {
        return xe.get_supportsTouchEvents() ? 1 < xe.maxTouchPoints : !1
      };
      hb.initTypeMap = function() {
        for (var a = new ua, b = 0, c = hb.MAP.length >> 1; b < c;) {
          var d = b++;
          a.h[hb.MAP[d <<
            1]] = hb.MAP[(d << 1) + 1]
        }
        return a
      };
      hb.prototype = {
        mode: null,
        longPressDelay: null,
        swipeTimeout: null,
        owner: null,
        touch0: null,
        touch1: null,
        touchList: null,
        listenEvents: null,
        handler: null,
        longPressTimer: null,
        tweener: null,
        overlay: null,
        state: null,
        detach: function() {
          null != this.tweener && (xb.cancel(this.tweener), this.tweener = null);
          this.setReady();
          for (var a = 0, b = this.listenEvents; a < b.length;) {
            var c = b[a];
            ++a;
            this.owner.removeEventListener(c, this.handler)
          }
          this.overlay = this.owner = null
        },
        getHandler: function(a) {
          null == a && (a =
            3);
          var b = r(this, this.handleEvent),
            c = a;
          return function(a) {
            b(c, a)
          }
        },
        startTweenXY: function(a, b, c, d) {
          var e = this;
          this.tweener = new Lf;
          this.tweener.tween(a.get_x(), c, a.get_y(), d, qa.linear, 1E3 * b | 0).doOnUpdate(function() {
            a.set_x(e.tweener.value1);
            a.set_y(e.tweener.value2)
          })
        },
        stopTween: function() {
          null != this.tweener && (xb.cancel(this.tweener), this.tweener = null)
        },
        handleEvent: function(a, b) {
          var c = b.target;
          if (c == this.owner) switch (b.type) {
            case "rox_gesture_pan":
              b = b.extra;
              var d = c.parent.localToGlobal(new la(c.get_x(),
                c.get_y()));
              d.offset(b.x, b.y);
              d = c.parent.globalToLocal(d);
              d.offset(-c.get_x(), -c.get_y());
              b = d;
              0 != (a & 1) && c.set_x(c.get_x() + b.x);
              0 != (a & 2) && c.set_y(c.get_y() + b.y);
              break;
            case "rox_gesture_pinch":
              d = b.extra;
              var e = c.parent.localToGlobal(new la(c.get_x(), c.get_y())),
                f = e.x - b.stageX;
              e = e.y - b.stageY;
              a = Math.atan2(e, f);
              f = (new la(f, e)).get_length();
              f = la.polar(f * d, a);
              f.offset(b.stageX, b.stageY);
              f = c.parent.globalToLocal(f);
              c.set_scaleX(c.get_scaleX() * d);
              c.set_scaleY(c.get_scaleY() * d);
              c.set_x(f.x);
              c.set_y(f.y);
              break;
            case "rox_gesture_rotation":
              a = b.extra;
              e = c.parent.localToGlobal(new la(c.get_x(), c.get_y()));
              f = e.x - b.stageX;
              e = e.y - b.stageY;
              d = Math.atan2(e, f);
              f = (new la(f, e)).get_length();
              f = la.polar(f, d + a);
              f.offset(b.stageX, b.stageY);
              f = c.parent.globalToLocal(f);
              c.set_rotation(c.get_rotation() + hb.R2D * a);
              c.set_x(f.x);
              c.set_y(f.y);
              break;
            case "rox_gesture_swipe":
              b = new la(2 * b.extra.x, 2 * b.extra.y);
              d = c.parent.localToGlobal(new la(c.get_x(), c.get_y()));
              d.offset(b.x, b.y);
              d = c.parent.globalToLocal(d);
              d.offset(-c.get_x(), -c.get_y());
              b = d;
              a = c.get_x() + b.x;
              b = c.get_y() + b.y;
              var g = this;
              this.tweener = new Lf;
              this.tweener.tween(c.get_x(), a, c.get_y(), b, qa.linear, 2E3).doOnUpdate(function() {
                c.set_x(g.tweener.value1);
                c.set_y(g.tweener.value2)
              })
          }
        },
        convertTouch: function(a) {
          this.owner.dispatchEvent(new ad(hb.typeMap.h[a.type], a.bubbles, a.cancelable, a.localX, a.localY, a.stageX, a.stageY, a.touchPointID, this))
        },
        convertMouse: function(a) {
          var b = a.type;
          ("mouseDown" == b || "mouseUp" == b || "click" == b || a.buttonDown) && this.owner.dispatchEvent(new ad(hb.typeMap.h[b],
            a.bubbles, a.cancelable, a.localX, a.localY, a.stageX, a.stageY, 0, this))
        },
        onTouch: function(a) {
          var b = a.touchPointID,
            c = null == this.touch0 || this.touch0.tid == b;
          (c || null != this.touch1 && this.touch1.tid == b || null != this.touch0 && null == this.touch1 && this.touch0.tid != b) && this.handleTouch(hb.typeMap.h[a.type], a, c, b)
        },
        onMouse: function(a) {
          var b = a.type;
          ("mouseDown" == b || "mouseUp" == b || a.buttonDown) && this.handleTouch(hb.typeMap.h[b], a, !0, 0)
        },
        handleTouch: function(a, b, c, d) {
          var e = new Vn(this.owner, b, d);
          d = c ? this.touch0 : this.touch1;
          if ("rox_touch_move" == a && null != d) {
            var f = d.sx - e.sx;
            var g = d.sy - e.sy;
            f = f * f + g * g < hb.moveToleSqr
          } else f = !1;
          if (f) return !1;
          d = !0;
          switch (this.state) {
            case 0:
              if (c && "rox_touch_begin" == a) {
                this.state = 1;
                this.touch0 = e;
                var h = r(this, this.sendLongPress);
                f = function() {
                  h(e)
                };
                this.longPressTimer = xb.timer(1E3 * this.longPressDelay | 0).doOnComplete(f);
                null != this.tweener && (xb.cancel(this.tweener), this.tweener = null);
                if (3 == this.mode)
                  for (c = Ja.get_current().stage, null == this.overlay && (this.overlay = new Z, this.overlay.set_name("overlay"),
                      this.overlay.get_graphics().beginFill(16777215, .00392156862745098), this.overlay.get_graphics().drawRect(0, 0, c.stageWidth, c.stageHeight)), c.addChild(this.overlay), c = 0, a = this.listenEvents; c < a.length;) f = a[c], ++c, this.overlay.addEventListener(f, this.handler)
              } else d = !1;
              break;
            case 1:
              c && "rox_touch_end" == a ? (this.owner.dispatchEvent(new ad("rox_gesture_tap", null, null, e.lx, e.ly, e.sx, e.sy, null, this)), this.setReady()) : c && "rox_touch_move" == a ? (c = new la(e.sx - this.touch0.sx, e.sy - this.touch0.sy), this.owner.dispatchEvent(new ad("rox_gesture_pan",
                null, null, e.lx, e.ly, e.sx, e.sy, null, this, c)), this.state = 4, null != this.touch0 && this.touchList.push(this.touch0), this.touch0 = e, null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null)) : c || "rox_touch_begin" != a ? d = !1 : (this.state = 2, this.touch1 = e, null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null));
              break;
            case 2:
              "rox_touch_end" == a ? (this.owner.dispatchEvent(new ad("rox_gesture_end", null, null, e.lx, e.ly, e.sx, e.sy, null, this)), this.setReady()) : "rox_touch_move" ==
                a ? (b = c ? this.touch1 : this.touch0, g = c ? this.touch0 : this.touch1, f = la.distance(e.spt, b.spt) / la.distance(g.spt, b.spt), a = Math.atan2(e.sy - b.sy, e.sx - b.sx) - Math.atan2(g.sy - b.sy, g.sx - b.sx), b = la.interpolate(b.lpt, g.lpt, .5), g = this.owner.localToGlobal(b), 1 != f && this.owner.dispatchEvent(new ad("rox_gesture_pinch", null, null, b.x, b.y, g.x, g.y, null, this, f)), 0 != a && this.owner.dispatchEvent(new ad("rox_gesture_rotation", null, null, b.x, b.y, g.x, g.y, null, this, a)), c ? this.touch0 = e : this.touch1 = e) : d = !1;
              break;
            case 4:
              if (c && "rox_touch_move" ==
                a) c = new la(e.sx - this.touch0.sx, e.sy - this.touch0.sy), this.owner.dispatchEvent(new ad("rox_gesture_pan", null, null, e.lx, e.ly, e.sx, e.sy, null, this, c)), this.state = 4, null != this.touch0 && this.touchList.push(this.touch0), this.touch0 = e, null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null);
              else if (c && ("rox_touch_end" == a || 3 != this.mode && "rox_touch_out" == a && b.target == this.owner)) {
                if (0 >= this.swipeTimeout || e.time - this.touch0.time < this.swipeTimeout) {
                  c = this.touchList.pop();
                  b = null;
                  for (a =
                    this.touchList.h; null != a;) {
                    f = a.item;
                    a = a.next;
                    if (.2 < c.time - f.time) break;
                    b = f
                  }
                  null != b && (g = c.sy - b.sy, f = c.sx - b.sx, a = Math.atan2(g, f), c = la.polar((new la(f, g)).get_length() / (c.time - b.time) * .25, a), this.owner.dispatchEvent(new ad("rox_gesture_swipe", null, null, e.lx, e.ly, e.sx, e.sy, null, this, c)))
                }
                this.setReady()
              } else c || "rox_touch_begin" != a ? d = !1 : (this.owner.dispatchEvent(new ad("rox_gesture_begin", null, null, e.lx, e.ly, e.sx, e.sy, null, this)), this.state = 2, this.touch1 = e, null != this.longPressTimer && (xb.cancel(this.longPressTimer),
                this.longPressTimer = null))
          }
          return d
        },
        sendLongPress: function(a) {
          this.owner.dispatchEvent(new ad("rox_gesture_long_press", null, null, a.lx, a.ly, a.sx, a.sy, null, this));
          this.setReady()
        },
        setReady: function() {
          this.state = 0;
          this.touch0 = this.touch1 = null;
          this.touchList.clear();
          null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null);
          if (null != this.overlay && 3 == this.mode) {
            for (var a = 0, b = this.listenEvents; a < b.length;) {
              var c = b[a];
              ++a;
              this.overlay.removeEventListener(c, this.handler)
            }
            Ja.get_current().stage.removeChild(this.overlay)
          }
        },
        setMove: function(a) {
          this.state = 4;
          null != this.touch0 && this.touchList.push(this.touch0);
          this.touch0 = a;
          null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null)
        },
        setTwoFingerMove: function(a) {
          this.state = 2;
          this.touch1 = a;
          null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null)
        },
        cancelLongPress: function() {
          null != this.longPressTimer && (xb.cancel(this.longPressTimer), this.longPressTimer = null)
        },
        __class__: hb
      };
      var Vn = function(a, b, c) {
        this.tid = c;
        this.sx = b.stageX;
        this.sy = b.stageY;
        this.spt = new la(this.sx, this.sy);
        this.lpt = a.globalToLocal(this.spt);
        this.lx = this.lpt.x;
        this.ly = this.lpt.y;
        this.time = (new Date).getTime() / 1E3
      };
      k["com.stencyl.gestures._RoxGestureAgent.TouchPoint"] = Vn;
      Vn.__name__ = "com.stencyl.gestures._RoxGestureAgent.TouchPoint";
      Vn.prototype = {
        tid: null,
        lx: null,
        ly: null,
        sx: null,
        sy: null,
        lpt: null,
        spt: null,
        time: null,
        distSqr: function(a) {
          var b = a.sx - this.sx;
          a = a.sy - this.sy;
          return b * b + a * a
        },
        __class__: Vn
      };
      var ma = function(a, b, c) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.type = a;
        this.bubbles = b;
        this.cancelable = c;
        this.eventPhase = 2
      };
      k["openfl.events.Event"] = ma;
      ma.__name__ = "openfl.events.Event";
      ma.prototype = {
        bubbles: null,
        cancelable: null,
        currentTarget: null,
        eventPhase: null,
        target: null,
        type: null,
        __isCanceled: null,
        __isCanceledNow: null,
        __preventDefault: null,
        clone: function() {
          var a = new ma(this.type, this.bubbles, this.cancelable);
          a.eventPhase = this.eventPhase;
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          return a
        },
        formatToString: function(a, b, c, d, e, f) {
          var g = [];
          null !=
            b && g.push(b);
          null != c && g.push(c);
          null != d && g.push(d);
          null != e && g.push(e);
          null != f && g.push(f);
          return r(this, this.__formatToString).apply(this, [a, g])
        },
        isDefaultPrevented: function() {
          return this.__preventDefault
        },
        preventDefault: function() {
          this.cancelable && (this.__preventDefault = !0)
        },
        stopImmediatePropagation: function() {
          this.__isCanceledNow = this.__isCanceled = !0
        },
        stopPropagation: function() {
          this.__isCanceled = !0
        },
        toString: function() {
          return this.__formatToString("Event", ["type", "bubbles", "cancelable"])
        },
        __formatToString: function(a,
          b) {
          a = "[" + a;
          for (var c, d = 0; d < b.length;) {
            var e = b[d];
            ++d;
            c = Y.field(this, e);
            a = "string" == typeof c ? a + (" " + e + '="' + M.string(c) + '"') : a + (" " + e + "=" + M.string(c))
          }
          return a + "]"
        },
        __init: function() {
          this.currentTarget = this.target = null;
          this.cancelable = this.bubbles = !1;
          this.eventPhase = 2;
          this.__preventDefault = this.__isCanceledNow = this.__isCanceled = !1
        },
        __class__: ma
      };
      var ad = function(a, b, c, d, e, f, g, h, m, l) {
        null == h && (h = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        ma.call(this, a, b, c);
        this.localX = d;
        this.localY = e;
        this.stageX = f;
        this.stageY =
          g;
        this.touchPointID = h;
        this.agent = m;
        this.extra = l
      };
      k["com.stencyl.gestures.RoxGestureEvent"] = ad;
      ad.__name__ = "com.stencyl.gestures.RoxGestureEvent";
      ad.__super__ = ma;
      ad.prototype = t(ma.prototype, {
        localX: null,
        localY: null,
        stageX: null,
        stageY: null,
        touchPointID: null,
        agent: null,
        extra: null,
        toString: function() {
          return this.type + "(" + this.touchPointID + "): local=(" + this.localX + "," + this.localY + "), stage=(" + this.stageX + "," + this.stageY + "), extra=" + (this.extra instanceof la ? "Point(" + M.string(this.extra.x) + "," + M.string(this.extra.y) +
            ")" : this.extra)
        },
        __class__: ad
      });
      var gl = function() {};
      k["com.stencyl.graphics.AbstractAnimation"] = gl;
      gl.__name__ = "com.stencyl.graphics.AbstractAnimation";
      gl.__isInterface__ = !0;
      gl.prototype = {
        update: null,
        getCurrentFrame: null,
        getNumFrames: null,
        setFrame: null,
        isFinished: null,
        activate: null,
        reset: null,
        draw: null,
        getFrameDurations: null,
        setFrameDurations: null,
        setFrameDuration: null,
        getCurrentImage: null,
        __class__: gl
      };
      var Ac = function(a, b, c) {
        null == c && (c = !1);
        ya.call(this);
        this.__drawableType = 2;
        this.__bitmapData = a;
        this.pixelSnapping = b;
        this.smoothing = c;
        null == b && (this.pixelSnapping = 1)
      };
      k["openfl.display.Bitmap"] = Ac;
      Ac.__name__ = "openfl.display.Bitmap";
      Ac.__super__ = ya;
      Ac.prototype = t(ya.prototype, {
        pixelSnapping: null,
        smoothing: null,
        __image: null,
        __bitmapData: null,
        __imageVersion: null,
        __enterFrame: function(a) {
          null == this.__bitmapData || null == this.__bitmapData.image || this.__bitmapData.image.version == this.__imageVersion || this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        __getBounds: function(a, b) {
          var c =
            ha.__pool.get();
          null != this.__bitmapData ? c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height) : c.setTo(0, 0, 0, 0);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ha.__pool.release(c)
        },
        __hitTest: function(a, b, c, d, e, f) {
          if (!f.get_visible() || this.__isMask || null == this.__bitmapData || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
          this.__getRenderTransform();
          var g = this.__renderTransform,
            h = g.a * g.d - g.b * g.c;
          c = 0 == h ? -g.tx : 1 / h * (g.c * (g.ty - b) + g.d * (a - g.tx));
          g = this.__renderTransform;
          h = g.a * g.d - g.b * g.c;
          a = 0 == h ? -g.ty : 1 / h * (g.a * (b - g.ty) + g.b * (g.tx - a));
          if (0 < c && 0 < a && c <= this.__bitmapData.width && a <= this.__bitmapData.height) {
            if (null != this.__scrollRect && !this.__scrollRect.contains(c, a)) return !1;
            null == d || e || d.push(f);
            return !0
          }
          return !1
        },
        __hitTestMask: function(a, b) {
          if (null == this.__bitmapData) return !1;
          this.__getRenderTransform();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            e = 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          a = 0 == d ? -c.ty : 1 / d * (c.a * (b - c.ty) +
            c.b * (c.tx - a));
          return 0 < e && 0 < a && e <= this.__bitmapData.width && a <= this.__bitmapData.height ? !0 : !1
        },
        get_bitmapData: function() {
          return this.__bitmapData
        },
        set_bitmapData: function(a) {
          this.__bitmapData = a;
          this.smoothing = !1;
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          this.__imageVersion = -1;
          return this.__bitmapData
        },
        set_height: function(a) {
          null != this.__bitmapData ? this.set_scaleY(a / this.__bitmapData.height) : this.set_scaleY(0);
          return a
        },
        set_width: function(a) {
          null != this.__bitmapData ? this.set_scaleX(a /
            this.__bitmapData.width) : this.set_scaleX(0);
          return a
        },
        __class__: Ac,
        __properties__: t(ya.prototype.__properties__, {
          set_bitmapData: "set_bitmapData",
          get_bitmapData: "get_bitmapData"
        })
      });
      var Lj = function(a) {
        Ac.call(this, a.frames[0]);
        this.model = a;
        this.set_x(Math.round(-a.frameWidth / 2 * p.SCALE));
        this.set_y(Math.round(-a.frameHeight / 2 * p.SCALE));
        this.frameIndex = this.timer = 0;
        this.individualDurations = !1;
        this.durations = a.durations;
        this.numFrames = this.durations.length;
        this.smoothing = ka.antialias;
        this.finished = 1 >=
          this.numFrames;
        null != this.filter ? (this.filteredFrames[this.frameIndex] || (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex], this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]);
        this.smoothing = ka.antialias
      };
      k["com.stencyl.graphics.BitmapAnimation"] = Lj;
      Lj.__name__ = "com.stencyl.graphics.BitmapAnimation";
      Lj.__interfaces__ = [gl];
      Lj.__super__ =
        Ac;
      Lj.prototype = t(Ac.prototype, {
        model: null,
        frameIndex: null,
        timer: null,
        finished: null,
        durations: null,
        individualDurations: null,
        frames: null,
        numFrames: null,
        filter: null,
        filteredFrames: null,
        update: function(a) {
          this.model.sync && this.model.looping ? (a = this.frameIndex, this.timer = this.model.sharedTimer, this.frameIndex = this.model.sharedFrameIndex, a != this.frameIndex && (null != this.filter ? (this.filteredFrames[this.frameIndex] || (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex],
            this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]), this.smoothing = ka.antialias)) : (this.timer += a, 0 < this.numFrames && this.timer > this.durations[this.frameIndex] && (a = this.frameIndex, this.timer -= this.durations[this.frameIndex], this.frameIndex++, this.frameIndex >= this.numFrames && (this.model.looping ? this.frameIndex = 0 : (this.finished = !0, this.frameIndex--)), a != this.frameIndex && (null != this.filter ? (this.filteredFrames[this.frameIndex] ||
            (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex], this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]), this.smoothing = ka.antialias)))
        },
        getCurrentFrame: function() {
          return this.frameIndex
        },
        getNumFrames: function() {
          return this.numFrames
        },
        setFrame: function(a) {
          if (0 > a || a >= this.numFrames) a = 0;
          a != this.frameIndex && (this.frameIndex = a, null != this.filter ?
            (this.filteredFrames[this.frameIndex] || (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex], this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]), this.smoothing = ka.antialias);
          this.timer = 0;
          this.finished = !1
        },
        isFinished: function() {
          return this.finished
        },
        reset: function() {
          this.frameIndex = this.timer = 0;
          this.finished = !1;
          null != this.filter ? (this.filteredFrames[this.frameIndex] ||
            (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex], this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]);
          this.smoothing = ka.antialias
        },
        updateBitmap: function() {
          null != this.filter ? (this.filteredFrames[this.frameIndex] || (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex], this.filter),
            this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]);
          this.smoothing = ka.antialias
        },
        set_filter: function(a) {
          this.filter = a;
          for (var b = [], c = 0, d = this.numFrames; c < d;) c++, b.push(!1);
          this.filteredFrames = b;
          b = [];
          c = 0;
          for (d = this.numFrames; c < d;) c++, b.push(null);
          this.frames = b;
          null != this.filter ? (this.filteredFrames[this.frameIndex] || (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex],
            this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]);
          this.smoothing = ka.antialias;
          return a
        },
        applyFilters: function(a, b, c) {
          null == a && (a = new wa(b.width, b.height));
          for (var d = 0; d < c.length;) {
            var e = c[d];
            ++d;
            b = e.__applyFilter(a, b, b.rect, R.zero)
          }
          return a
        },
        draw: function(a, b, c, d, e) {
          if (!ka.disposeImages || this.model.checkImageReadable()) {
            e = this.get_bitmapData();
            null == d && (d = 0);
            b *= a.scaleX;
            c *= a.scaleY;
            a.rect.x =
              0;
            a.rect.y = 0;
            a.rect.width = e.width;
            a.rect.height = e.height;
            a.drawActor ? null != a.actor && a.actor.isHUD ? (a.point.x = a.x + b, a.point.y = a.y + c) : (a.point.x = a.x + b - p.cameraX, a.point.y = a.y + c - p.cameraY) : (a.point.x = a.x + b, a.point.y = a.y + c);
            a.mtx.identity();
            a.mtx.rotate(d);
            a.mtx.translate(a.point.x, a.point.y);
            if (0 == d) 1 != a.alpha && (a.point2.x = 0, a.point2.y = 0, a.rect2.width = e.width, a.rect2.height = e.height, c = new wa(e.width, e.height, !0, a.toARGB(0, 255 * a.alpha | 0)), b = new wa(e.width, e.height, !0, 0), b.copyPixels(e, a.rect2, a.point2,
              c, null, !0), e = b), a.graphics.beginBitmapFill(e, a.mtx), a.graphics.drawRect(a.point.x, a.point.y, e.width, e.height);
            else {
              1 != a.alpha && (a.point2.x = 0, a.point2.y = 0, a.rect2.width = e.width, a.rect2.height = e.height, c = new wa(e.width, e.height, !0, a.toARGB(0, 255 * a.alpha | 0)), b = new wa(e.width, e.height, !0, 0), b.copyPixels(e, a.rect2, a.point2, c, null, !0), e = b);
              c = new wa(e.width + 2, e.height + 2, !0, 0);
              b = Math.sqrt(Math.pow(c.width, 2) + Math.pow(c.height, 2)) | 0;
              d = new ha(0, 0, e.width, e.height);
              var f = new la(1, 1);
              c.copyPixels(e, d, f);
              a.graphics.beginBitmapFill(c,
                a.mtx, !1, ka.antialias);
              a.graphics.drawRect(a.x - (b - e.width) / 2, a.y - (b - e.height) / 2, b, b)
            }
            a.graphics.endFill()
          }
        },
        getFrameDurations: function() {
          return this.durations
        },
        setFrameDurations: function(a) {
          if (null != this.durations) {
            for (var b = [], c = 0, d = this.durations.length; c < d;) c++, b.push(a);
            this.durations = b;
            this.individualDurations = !0
          }
        },
        setFrameDuration: function(a, b) {
          if (!this.individualDurations) {
            for (var c = [], d = 0, e = this.durations.length; d < e;) {
              var f = d++;
              c.push(this.durations[f])
            }
            this.durations = c;
            this.individualDurations = !0
          }
          0 <= a && a < this.durations.length && (this.durations[a] = b)
        },
        framesUpdated: function() {
          this.set_x(Math.round(-this.model.frameWidth / 2 * p.SCALE));
          this.set_y(Math.round(-this.model.frameHeight / 2 * p.SCALE));
          null != this.filter ? (this.filteredFrames[this.frameIndex] || (this.frames[this.frameIndex] = this.applyFilters(this.frames[this.frameIndex], this.model.frames[this.frameIndex], this.filter), this.filteredFrames[this.frameIndex] = !0), this.set_bitmapData(this.frames[this.frameIndex])) : this.set_bitmapData(this.model.frames[this.frameIndex]);
          this.smoothing = ka.antialias
        },
        getCurrentImage: function() {
          return ka.disposeImages && !this.model.checkImageReadable() ? ve.UNLOADED : this.get_bitmapData()
        },
        activate: function() {},
        __class__: Lj,
        __properties__: t(Ac.prototype.__properties__, {
          set_filter: "set_filter"
        })
      });
      var sh = function() {};
      k["com.stencyl.graphics.EngineScaleUpdateListener"] = sh;
      sh.__name__ = "com.stencyl.graphics.EngineScaleUpdateListener";
      sh.__isInterface__ = !0;
      sh.prototype = {
        updateScale: null,
        __class__: sh
      };
      var Ih = function(a) {
        this.cacheParentAnchor =
          R.zero;
        Z.call(this);
        this.img = a;
        this.offsetY = this.offsetX = 0;
        this.addChild(a)
      };
      k["com.stencyl.graphics.BitmapWrapper"] = Ih;
      Ih.__name__ = "com.stencyl.graphics.BitmapWrapper";
      Ih.__interfaces__ = [sh];
      Ih.__super__ = Z;
      Ih.prototype = t(Z.prototype, {
        img: null,
        offsetX: null,
        offsetY: null,
        cacheParentAnchor: null,
        smoothing: null,
        imgX: null,
        imgY: null,
        tweenProps: null,
        set_imgX: function(a) {
          this.set_x((a + this.offsetX) * p.SCALE - this.cacheParentAnchor.x);
          return this.imgX = a
        },
        get_imgX: function() {
          return this.imgX
        },
        set_imgY: function(a) {
          this.set_y((a +
            this.offsetY) * p.SCALE - this.cacheParentAnchor.y);
          return this.imgY = a
        },
        get_imgY: function() {
          return this.imgY
        },
        set_smoothing: function(a) {
          return this.img.smoothing = a
        },
        get_smoothing: function() {
          return this.img.smoothing
        },
        setOrigin: function(a, b) {
          this.set_x(this.get_x() + (a - this.offsetX) * p.SCALE);
          this.set_y(this.get_y() + (b - this.offsetY) * p.SCALE);
          this.offsetX = a;
          this.offsetY = b;
          this.img.set_x(-a * p.SCALE);
          this.img.set_y(-b * p.SCALE)
        },
        updateScale: function() {
          this.updatePosition()
        },
        updatePosition: function() {
          this.set_x((this.get_imgX() +
            this.offsetX) * p.SCALE - this.cacheParentAnchor.x);
          this.set_y((this.get_imgY() + this.offsetY) * p.SCALE - this.cacheParentAnchor.y)
        },
        get_tweenProps: function() {
          null == this.tweenProps && (this.tweenProps = new Wn(this));
          return this.tweenProps
        },
        __class__: Ih,
        __properties__: t(Z.prototype.__properties__, {
          get_tweenProps: "get_tweenProps",
          set_imgY: "set_imgY",
          get_imgY: "get_imgY",
          set_imgX: "set_imgX",
          get_imgX: "get_imgX",
          set_smoothing: "set_smoothing",
          get_smoothing: "get_smoothing"
        })
      });
      var Wn = function(a) {
        this.bmp = a;
        this.xy =
          (new Lf).doOnUpdate(r(this, this.onUpdateXY));
        this.angle = (new he).doOnUpdate(r(this, this.onUpdateAngle));
        this.alpha = (new he).doOnUpdate(r(this, this.onUpdateAlpha));
        this.scaleXY = (new Lf).doOnUpdate(r(this, this.onUpdateScaleXY))
      };
      k["com.stencyl.graphics.BitmapTweenProperties"] = Wn;
      Wn.__name__ = "com.stencyl.graphics.BitmapTweenProperties";
      Wn.prototype = {
        xy: null,
        angle: null,
        alpha: null,
        scaleXY: null,
        bmp: null,
        pause: function() {
          this.xy.paused = !0;
          this.angle.paused = !0;
          this.alpha.paused = !0;
          this.scaleXY.paused = !0
        },
        unpause: function() {
          this.xy.paused = !1;
          this.angle.paused = !1;
          this.alpha.paused = !1;
          this.scaleXY.paused = !1
        },
        cancel: function() {
          this.xy.active && xb.cancel(this.xy);
          this.angle.active && xb.cancel(this.angle);
          this.alpha.active && xb.cancel(this.alpha);
          this.scaleXY.active && xb.cancel(this.scaleXY)
        },
        onUpdateXY: function() {
          this.bmp.set_imgX(this.xy.value1);
          this.bmp.set_imgY(this.xy.value2)
        },
        onUpdateAngle: function() {
          this.bmp.set_rotation(this.angle.value)
        },
        onUpdateAlpha: function() {
          this.bmp.set_alpha(this.alpha.value)
        },
        onUpdateScaleXY: function() {
          this.bmp.set_scaleX(this.scaleXY.value1);
          this.bmp.set_scaleY(this.scaleXY.value2)
        },
        __class__: Wn
      };
      var hl = function() {};
      k["com.stencyl.graphics.BlendModes"] = hl;
      hl.__name__ = "com.stencyl.graphics.BlendModes";
      hl.get = function(a) {
        return hl.stringBlendMap.h[a]
      };
      var eb = function() {
        this.drawActor = !1;
        this.x = this.y = 0;
        this.scaleX = this.scaleY = p.SCALE;
        this.alpha = 1;
        this.blendMode = 10;
        this.strokeColor = this.fillColor = this.strokeSize = 0;
        this.rect = new ha;
        this.rect2 = new ha;
        this.point = new la;
        this.point2 =
          new la;
        this.data = [0, 0, 0];
        this.drawPoly = !1;
        this.firstY = this.firstX = this.pointCounter = 0;
        this.font = this.defaultFont = new Oe(-1, 0, "", !0);
        this.mtx = new Ea;
        null == eb.fontCache && (eb.fontCache = new Za);
        var a = eb.fontCache.h[-1];
        null == a && (a = this.font.font.getPreparedGlyphs(this.font.fontScale, 0, !0), eb.fontCache.h[-1] = a);
        this.fontData = a
      };
      k["com.stencyl.graphics.G"] = eb;
      eb.__name__ = "com.stencyl.graphics.G";
      eb.resetStatics = function() {
        eb.fontCache = null
      };
      eb.visitStringCache = function() {
        for (var a = eb.drawnStringCacheKeys.length; 0 <
          a--;) {
          var b = eb.drawnStringCache.h[eb.drawnStringCacheKeys[a]];
          --b.lifetime;
          if (0 == b.lifetime) {
            b.img.dispose();
            b = eb.drawnStringCacheKeys[a];
            var c = eb.drawnStringCache;
            Object.prototype.hasOwnProperty.call(c.h, b) && delete c.h[b];
            eb.drawnStringCacheKeys[a] = eb.drawnStringCacheKeys[eb.drawnStringCacheKeys.length - 1];
            eb.drawnStringCacheKeys.pop()
          }
        }
      };
      eb.prototype = {
        defaultFont: null,
        graphics: null,
        x: null,
        y: null,
        scaleX: null,
        scaleY: null,
        alpha: null,
        blendMode: null,
        strokeSize: null,
        fillColor: null,
        strokeColor: null,
        font: null,
        fontData: null,
        mtx: null,
        rect: null,
        rect2: null,
        point: null,
        point2: null,
        data: null,
        drawPoly: null,
        pointCounter: null,
        firstX: null,
        firstY: null,
        drawActor: null,
        actor: null,
        resetGraphicsSettings: function() {
          this.alpha = 1;
          this.strokeColor = this.fillColor = this.strokeSize = 0;
          this.font = this.defaultFont
        },
        setFont: function(a) {
          null != a && a != this.font && (this.font = a, this.font == this.defaultFont ? (this.fontData = eb.fontCache.h[-1], null == this.fontData && (this.fontData = this.font.font.getPreparedGlyphs(this.font.fontScale, 0, !0), eb.fontCache.h[-1] =
            this.fontData)) : (this.fontData = eb.fontCache.h[this.font.ID], null == this.fontData && (this.fontData = this.font.font.getPreparedGlyphs(this.font.fontScale, 0, !1), eb.fontCache.h[this.font.ID] = this.fontData)))
        },
        startGraphics: function() {
          !this.drawActor || null != this.actor && this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha)
        },
        endGraphics: function() {
          this.drawActor && !this.actor.isHUD && (this.x +=
            p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        translate: function(a, b) {
          this.x += a * this.scaleX;
          this.y += b * this.scaleY
        },
        moveTo: function(a, b) {
          if (this.drawActor) {
            if (null != this.actor) {
              var c = this.actor;
              this.drawActor = !0;
              this.actor = c;
              if (c.smoothMove) {
                var d = c.drawY - Math.floor(c.cacheHeight / 2) - c.currOffset.y;
                this.x = (c.drawX - Math.floor(c.cacheWidth / 2) - c.currOffset.x) * this.scaleX;
                this.y = d * this.scaleY
              } else this.x = c.colX * this.scaleX, this.y = c.colY * this.scaleY
            }
            this.x += a * this.scaleX;
            this.y += b * this.scaleY
          } else this.x =
            a * this.scaleX, this.y = b * this.scaleY
        },
        translateToScreen: function() {
          this.drawActor = !1;
          this.actor = null;
          this.y = this.x = 0
        },
        translateToActor: function(a) {
          this.drawActor = !0;
          this.actor = a;
          if (a.smoothMove) {
            var b = a.drawY - Math.floor(a.cacheHeight / 2) - a.currOffset.y;
            this.x = (a.drawX - Math.floor(a.cacheWidth / 2) - a.currOffset.x) * this.scaleX;
            this.y = b * this.scaleY
          } else this.x = a.colX * this.scaleX, this.y = a.colY * this.scaleY
        },
        getCacheKey: function(a, b, c) {
          return a + ":" + b.ID + ":" + c + ":" + p.SCALE + ":" + b.get_letterSpacing()
        },
        drawString: function(a,
          b, c) {
          if (null == this.font && (this.font = this.defaultFont, this.font.fontScale != p.SCALE)) {
            this.font.fontScale = p.SCALE;
            this.font = null;
            eb.fontCache.h[-1] = null;
            var d = this.defaultFont;
            null != d && d != this.font && (this.font = d, this.font == this.defaultFont ? (this.fontData = eb.fontCache.h[-1], null == this.fontData && (this.fontData = this.font.font.getPreparedGlyphs(this.font.fontScale, 0, !0), eb.fontCache.h[-1] = this.fontData)) : (this.fontData = eb.fontCache.h[this.font.ID], null == this.fontData && (this.fontData = this.font.font.getPreparedGlyphs(this.font.fontScale,
              0, !1), eb.fontCache.h[this.font.ID] = this.fontData)))
          }
          this.drawActor ? null != this.actor && this.actor.isHUD ? (b = this.x + b * this.scaleX, c = this.y + c * this.scaleY) : (b = this.x + b * this.scaleX - p.cameraX, c = this.y + c * this.scaleY - p.cameraY) : (b = this.x + b * this.scaleX, c = this.y + c * this.scaleY);
          this.mtx.identity();
          this.mtx.translate(b, c);
          d = null;
          var e = this.font;
          e = a + ":" + e.ID + ":" + this.alpha + ":" + p.SCALE + ":" + e.get_letterSpacing();
          if (Object.prototype.hasOwnProperty.call(eb.drawnStringCache.h, e)) a = eb.drawnStringCache.h[e], a.lifetime =
            5, d = a.img;
          else {
            var f = this.font.font.getTextWidth(a, this.font.fontScale),
              g = this.font.font.getFontHeight() * this.font.fontScale | 0;
            0 < f && 0 < g && (d = new wa(f, g, !0, 0), this.font.font.render(d, this.fontData, a, 0, this.alpha, 0, 0, this.font.fontScale, 0), a = new il, a.img = d, a.lifetime = 5, eb.drawnStringCache.h[e] = a, eb.drawnStringCacheKeys.push(e))
          }
          null != d && (this.graphics.beginBitmapFill(d, this.mtx, !1, ka.antialias), this.graphics.drawRect(b, c, d.width, d.height), this.graphics.endFill())
        },
        drawLine: function(a, b, c, d) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          d *= this.scaleY;
          !this.drawActor || null != this.actor && this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.moveTo(this.x + a, this.y + b);
          this.graphics.lineTo(this.x + c, this.y + d);
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        fillPixel: function(a, b) {
          !this.drawActor || null != this.actor && this.actor.isHUD ||
            (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.lineStyle();
          this.graphics.beginFill(this.fillColor, this.alpha);
          this.graphics.drawRect(this.x + (a * p.SCALE | 0), this.y + (b * p.SCALE | 0), p.SCALE | 0, p.SCALE | 0);
          this.graphics.endFill();
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        drawRect: function(a, b, c, d) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          d *= this.scaleY;
          !this.drawActor || null != this.actor && this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.drawRect(this.x + a, this.y + b, c, d);
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        fillRect: function(a, b, c, d) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          d *= this.scaleY;
          !this.drawActor || null != this.actor &&
            this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.beginFill(this.fillColor, this.alpha);
          this.graphics.drawRect(this.x + a, this.y + b, c, d);
          this.graphics.endFill();
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        drawRoundRect: function(a, b, c, d, e) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          d *= this.scaleY;
          !this.drawActor ||
            null != this.actor && this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.drawRoundRect(this.x + a, this.y + b, c, d, e, e);
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        fillRoundRect: function(a, b, c, d, e) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          d *= this.scaleY;
          !this.drawActor || null != this.actor && this.actor.isHUD || (this.x -=
            p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.beginFill(this.fillColor, this.alpha);
          this.graphics.drawRoundRect(this.x + a, this.y + b, c, d, e, e);
          this.graphics.endFill();
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        drawCircle: function(a, b, c) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          !this.drawActor || null != this.actor && this.actor.isHUD ||
            (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.drawCircle(this.x + a, this.y + b, c);
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        fillCircle: function(a, b, c) {
          a *= this.scaleX;
          b *= this.scaleY;
          c *= this.scaleX;
          !this.drawActor || null != this.actor && this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() :
            this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.beginFill(this.fillColor, this.alpha);
          this.graphics.drawCircle(this.x + a, this.y + b, c);
          this.graphics.endFill();
          this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY);
          this.graphics.lineStyle()
        },
        beginFillPolygon: function() {
          this.drawPoly = !1;
          !this.drawActor || null != this.actor && this.actor.isHUD || (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize *
            p.SCALE, this.strokeColor, this.alpha);
          this.graphics.moveTo(this.x, this.y);
          this.pointCounter = 0
        },
        endDrawingPolygon: function() {
          2 <= this.pointCounter && (this.drawPoly ? this.graphics.lineTo(this.x + this.firstX, this.y + this.firstY) : (this.graphics.lineTo(this.x + this.firstX, this.y + this.firstY), this.graphics.endFill()), this.drawActor && !this.actor.isHUD && (this.x += p.cameraX, this.y += p.cameraY), this.graphics.lineStyle())
        },
        beginDrawPolygon: function() {
          this.drawPoly = !0;
          !this.drawActor || null != this.actor && this.actor.isHUD ||
            (this.x -= p.cameraX, this.y -= p.cameraY);
          0 == this.strokeSize ? this.graphics.lineStyle() : this.graphics.lineStyle(this.strokeSize * p.SCALE, this.strokeColor, this.alpha);
          this.graphics.moveTo(this.x, this.y);
          this.pointCounter = 0
        },
        addPointToPolygon: function(a, b) {
          a *= this.scaleX;
          b *= this.scaleY;
          0 == this.pointCounter && (this.firstX = a, this.firstY = b, this.graphics.moveTo(this.x + a, this.y + b), this.drawPoly || this.graphics.beginFill(this.fillColor, this.alpha));
          this.pointCounter++;
          this.graphics.lineTo(this.x + a, this.y + b)
        },
        drawImage: function(a,
          b, c, d, e) {
          null == d && (d = 0);
          b *= this.scaleX;
          c *= this.scaleY;
          this.rect.x = 0;
          this.rect.y = 0;
          this.rect.width = a.width;
          this.rect.height = a.height;
          this.drawActor ? null != this.actor && this.actor.isHUD ? (this.point.x = this.x + b, this.point.y = this.y + c) : (this.point.x = this.x + b - p.cameraX, this.point.y = this.y + c - p.cameraY) : (this.point.x = this.x + b, this.point.y = this.y + c);
          this.mtx.identity();
          this.mtx.rotate(d);
          this.mtx.translate(this.point.x, this.point.y);
          0 == d ? (1 != this.alpha && (this.point2.x = 0, this.point2.y = 0, this.rect2.width = a.width,
            this.rect2.height = a.height, b = new wa(a.width, a.height, !0, this.toARGB(0, 255 * this.alpha | 0)), c = new wa(a.width, a.height, !0, 0), c.copyPixels(a, this.rect2, this.point2, b, null, !0), a = c), this.graphics.beginBitmapFill(a, this.mtx), this.graphics.drawRect(this.point.x, this.point.y, a.width, a.height)) : (1 != this.alpha && (this.point2.x = 0, this.point2.y = 0, this.rect2.width = a.width, this.rect2.height = a.height, b = new wa(a.width, a.height, !0, this.toARGB(0, 255 * this.alpha | 0)), c = new wa(a.width, a.height, !0, 0), c.copyPixels(a, this.rect2,
            this.point2, b, null, !0), a = c), b = new wa(a.width + 2, a.height + 2, !0, 0), c = Math.sqrt(Math.pow(b.width, 2) + Math.pow(b.height, 2)) | 0, d = new ha(0, 0, a.width, a.height), e = new la(1, 1), b.copyPixels(a, d, e), this.graphics.beginBitmapFill(b, this.mtx, !1, ka.antialias), this.graphics.drawRect(this.x - (c - a.width) / 2, this.y - (c - a.height) / 2, c, c));
          this.graphics.endFill()
        },
        toARGB: function(a, b) {
          return a + (b << 24)
        },
        resetFont: function() {
          this.font = this.defaultFont;
          if (this.font.fontScale != p.SCALE) {
            this.font.fontScale = p.SCALE;
            this.font = null;
            eb.fontCache.h[-1] = null;
            var a = this.defaultFont;
            null != a && a != this.font && (this.font = a, this.font == this.defaultFont ? (this.fontData = eb.fontCache.h[-1], null == this.fontData && (this.fontData = this.font.font.getPreparedGlyphs(this.font.fontScale, 0, !0), eb.fontCache.h[-1] = this.fontData)) : (this.fontData = eb.fontCache.h[this.font.ID], null == this.fontData && (this.fontData = this.font.font.getPreparedGlyphs(this.font.fontScale, 0, !1), eb.fontCache.h[this.font.ID] = this.fontData)))
          }
        },
        __class__: eb
      };
      var il = function() {};
      k["com.stencyl.graphics._G.TemporaryImage"] =
        il;
      il.__name__ = "com.stencyl.graphics._G.TemporaryImage";
      il.prototype = {
        lifetime: null,
        img: null,
        __class__: il
      };
      var md = function() {};
      k["com.stencyl.graphics.GLUtil"] = md;
      md.__name__ = "com.stencyl.graphics.GLUtil";
      md.initialize = function() {
        null == md.gl && (md.context = p.stage.window.context, md.context3D = p.stage.context3D, md.gl = cc.fromRenderContext(md.context), md.renderer = p.stage.__renderer, md.textureMaxSize = md.gl.getParameter(md.gl.MAX_TEXTURE_SIZE), md.textureMaxSize = md.textureMaxSize / 2 | 0, md.textureMaxSize > md.MAX_TEXTURE_CAP &&
          (md.textureMaxSize = md.MAX_TEXTURE_CAP), null == wa.__supportsBGRA && (new wa(1, 1, !0, 0)).getTexture(md.context3D))
      };
      md.uploadTexture = function(a, b) {
        a.getTexture(md.context3D);
        b && md.disposeSoftwareBuffer(a)
      };
      md.disposeSoftwareBuffer = function(a) {
        a.image = null;
        a.readable = !1;
        a.__surface = null;
        a.__vertexBuffer = null;
        a.__framebuffer = null;
        a.__framebufferContext = null
      };
      md.createNewTexture = function(a) {
        var b = md.context3D.createRectangleTexture(a, a, 1, !1);
        b.uploadFromTypedArray(null);
        var c = new wa(0, 0, !0, 0);
        c.__resize(a,
          a);
        c.readable = !1;
        c.__texture = b;
        c.__textureContext = md.context;
        c.__isValid = !0;
        c.image = null;
        return c
      };
      md.clearTexture = function(a) {
        a.__texture.uploadFromTypedArray(null)
      };
      var Kd = function(a) {
        this.value = a
      };
      k["com.stencyl.graphics.Scale"] = Kd;
      Kd.__name__ = "com.stencyl.graphics.Scale";
      Kd.fromString = function(a) {
        switch (a) {
          case "1.5x":
            return Kd._1_5X;
          case "1x":
            return Kd._1X;
          case "2x":
            return Kd._2X;
          case "3x":
            return Kd._3X;
          case "4x":
            return Kd._4X;
          default:
            return Kd._1X
        }
      };
      Kd.prototype = {
        value: null,
        toString: function() {
          return 1 ==
            this.value ? "1x" : 1.5 == this.value ? "1.5x" : 2 == this.value ? "2x" : 3 == this.value ? "3x" : 4 == this.value ? "4x" : ""
        },
        __class__: Kd
      };
      var Bj = {
          _new: function(a) {
            return a
          },
          fromString: function(a) {
            switch (a) {
              case "FULLSCREEN":
                return 1;
              case "NO_SCALING":
                return 0;
              case "SCALE_TO_FIT_FILL":
                return 4;
              case "SCALE_TO_FIT_FULLSCREEN":
                return 5;
              case "SCALE_TO_FIT_LETTERBOX":
                return 3;
              case "STRETCH_TO_FIT":
                return 2;
              default:
                return 0
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "NO_SCALING";
              case 1:
                return "FULLSCREEN";
              case 2:
                return "STRETCH_TO_FIT";
              case 3:
                return "SCALE_TO_FIT_LETTERBOX";
              case 4:
                return "SCALE_TO_FIT_FILL";
              case 5:
                return "SCALE_TO_FIT_FULLSCREEN";
              default:
                return "NO_SCALING"
            }
          }
        },
        hg = function() {
          this.xSpacing = this.ySpacing = this.lineHeight = this.baseline = 0;
          this.isDefault = !1;
          this._point = new la;
          this._matrix = new Ea;
          this._colorTransform = new Ec;
          this._glyphs = new Za;
          this._num_letters = 0
        };
      k["com.stencyl.graphics.fonts.BitmapFont"] = hg;
      hg.__name__ = "com.stencyl.graphics.fonts.BitmapFont";
      hg.store = function(a, b) {
        hg._storedFonts.h[a] = b
      };
      hg.fetch = function(a) {
        return hg._storedFonts.h[a]
      };
      hg.prototype = {
        _glyphs: null,
        _num_letters: null,
        _glyphString: null,
        _matrix: null,
        _colorTransform: null,
        _point: null,
        isDefault: null,
        xSpacing: null,
        ySpacing: null,
        lineHeight: null,
        baseline: null,
        loadAngelCode: function(a, b) {
          this.reset();
          if (null != a) {
            this._glyphString = "";
            var c = new ha,
              d = 0,
              e = null;
            for (b = b.elements(); b.hasNext();) {
              var f = b.next();
              if (f.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == f.nodeType ? "null" : sb.toString(f.nodeType)));
              if ("font" == f.nodeName)
                for (f = f.elements(); f.hasNext();) {
                  var g =
                    f.next();
                  if (g.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == g.nodeType ? "null" : sb.toString(g.nodeType)));
                  if ("info" == g.nodeName) {
                    var h = [];
                    var m = 0;
                    for (g = g.get("spacing").split(","); m < g.length;) {
                      var l = g[m];
                      ++m;
                      h.push(M.parseInt(l))
                    }
                    this.xSpacing = h[0];
                    this.ySpacing = h[1]
                  } else {
                    if (g.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == g.nodeType ? "null" : sb.toString(g.nodeType)));
                    if ("common" == g.nodeName) this.lineHeight = M.parseInt(g.get("lineHeight")),
                      this.baseline = M.parseInt(g.get("base"));
                    else {
                      if (g.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == g.nodeType ? "null" : sb.toString(g.nodeType)));
                      "chars" == g.nodeName && (e = g)
                    }
                  }
                }
            }
            if (null != e)
              for (b = e.elements(); b.hasNext();) {
                f = b.next();
                if (f.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == f.nodeType ? "null" : sb.toString(f.nodeType)));
                "char" == f.nodeName && (e = new Xn, e.xoffset = M.parseInt(f.get("xoffset")), e.yoffset = M.parseInt(f.get("yoffset")),
                  e.xadvance = M.parseInt(f.get("xadvance")), c.x = M.parseInt(f.get("x")), c.y = M.parseInt(f.get("y")), c.width = M.parseInt(f.get("width")), c.height = M.parseInt(f.get("height")), f = M.parseInt(f.get("id")), h = String.fromCodePoint(f), this._glyphString += h, " " != h && "" != h ? (e.bitmap = new wa(c.width | 0, c.height | 0, !0, 0), e.bitmap.copyPixels(a, c, hg.ZERO_POINT, null, null, !0)) : e.bitmap = null, h = this._glyphs.h[f], null != h && null != h.bitmap && h.bitmap.dispose(), this._glyphs.h[f] = e, this._num_letters++, ++d)
              }
          }
          return this
        },
        reset: function() {
          this.dispose();
          this._glyphs = new Za;
          this._num_letters = 0;
          this._glyphString = ""
        },
        prepareBitmapData: function(a, b) {
          for (var c = a.getPixel(0, 0), d = 0, e; d < a.height;) {
            var f = 0;
            for (e = 0; e < a.width;) {
              if ((a.getPixel(e, d) | 0) != c) {
                for (var g = e, h = d;
                  (a.getPixel(g, d) | 0) != c;) ++g;
                for (;
                  (a.getPixel(e, h) | 0) != c;) ++h;
                g -= e;
                h -= d;
                b.push(new ha(e, d, g, h));
                h > f && (f = h);
                e += g
              }++e
            }
            d += f + 1
          }
          b = a.clone();
          f = a.getPixel32(0, 0);
          for (d = 0; d < a.height;) {
            for (e = 0; e < a.width;) c = a.getPixel32(e, d), c == f && b.setPixel32(e, d, 0), ++e;
            ++d
          }
          return b
        },
        getPreparedGlyphs: function(a, b, c) {
          null ==
            c && (c = !0);
          var d = new Za;
          this._matrix.identity();
          this._matrix.scale(a, a);
          this._colorTransform.redOffset = 0;
          this._colorTransform.greenOffset = 0;
          this._colorTransform.blueOffset = 0;
          this._colorTransform.redMultiplier = .00392 * (b >> 16);
          this._colorTransform.greenMultiplier = .00392 * (b >> 8 & 255);
          this._colorTransform.blueMultiplier = .00392 * (b & 255);
          var e;
          b = this._glyphs;
          for (var f = b.keys(); f.hasNext();) {
            var g = f.next(),
              h = e = b.get(g);
            null != h.bitmap && (e = new wa(Math.floor(h.bitmap.width * a), Math.floor(h.bitmap.height * a), !0, 0),
              c ? e.draw(h.bitmap, this._matrix, this._colorTransform) : e.draw(h.bitmap, this._matrix), d.h[g] = e)
          }
          return d
        },
        dispose: function() {
          for (var a = this._glyphs.iterator(); a.hasNext();) {
            var b = a.next();
            null != b.bitmap && b.bitmap.dispose()
          }
          this._num_letters = 0;
          this._glyphs = null
        },
        render: function(a, b, c, d, e, f, g, h, m) {
          d = f;
          m = f = 0;
          for (var l = c.length; m < l;) {
            var y = m++;
            if (!(y < f)) {
              var n = da.cca(c, y);
              126 == n && "x" == c.charAt(y + 1) && (y = c.substring(y + 2, y + 6), n = M.parseInt("0x" + y), f += 5);
              y = this._glyphs.h[n];
              if (null != y) {
                this._point.x = d + y.xoffset *
                  h;
                this._point.y = g + y.yoffset * h;
                n = b.h[n];
                if (null != n)
                  if (1 == e && 1 == h) a.copyPixels(n, n.rect, this._point, null, null, !0);
                  else if (1 == h) {
                  var p = new Ec(1, 1, 1, e, 0, 0, 0, 0);
                  n = n.clone();
                  n.colorTransform(n.rect, p);
                  a.copyPixels(n, n.rect, this._point, null, null, !0)
                } else {
                  p = new Ea;
                  this.isDefault || p.scale(h, h);
                  p.translate(this._point.x, this._point.y);
                  var k = 1 == e ? null : new Ec(1, 1, 1, e, 0, 0, 0, 0);
                  a.draw(n, p, k, null, null)
                }
                d += (y.xadvance + this.xSpacing) * h
              }++f
            }
          }
        },
        toARGB: function(a, b) {
          return a + (b << 24)
        },
        getTextWidth: function(a, b) {
          null ==
            b && (b = 1);
          for (var c = 0, d = 0, e = a.length, f = 0; f < e;) {
            var g = f++;
            if (!(g < d)) {
              var h = da.cca(a, g);
              126 == h && "x" == a.charAt(g + 1) && (g = a.substring(g + 2, g + 6), h = M.parseInt("0x" + g), d += 5);
              g = this._glyphs.h[h];
              null != g && (c += g.xadvance);
              ++d
            }
          }
          1 < e && (c += (e - 1) * this.xSpacing);
          return c * b | 0
        },
        getFontHeight: function(a) {
          null == a && (a = 1);
          return this.lineHeight * a | 0
        },
        numLetters: null,
        get_numLetters: function() {
          return this._num_letters
        },
        containsCharacter: function(a) {
          return 0 <= this._glyphString.indexOf(a)
        },
        __class__: hg,
        __properties__: {
          get_numLetters: "get_numLetters"
        }
      };
      var Xn = function() {};
      k["com.stencyl.graphics.fonts.FontSymbol"] = Xn;
      Xn.__name__ = "com.stencyl.graphics.fonts.FontSymbol";
      Xn.prototype = {
        bitmap: null,
        xoffset: null,
        yoffset: null,
        xadvance: null,
        __class__: Xn
      };
      var jl = function(a) {
        this.cacheParentAnchor = R.zero;
        Z.call(this);
        this._text = "";
        this._color = 0;
        this._useColor = !0;
        this._outline = !1;
        this._outlineColor = 0;
        this._shadow = !1;
        this._shadowColor = 0;
        this._background = !1;
        this._backgroundColor = 16777215;
        this._alignment = 1;
        this._padding = 0;
        this._pendingTextChange = !1;
        this._fieldWidth =
          1;
        this._multiLine = !1;
        this._fontScale = 1;
        this._autoUpperCase = !1;
        this._wordWrap = this._fixedWidth = !0;
        this._alpha = 1;
        null == a || a == Oe.defaultFont ? (this._font = Oe.defaultFont, this._fontScale = p.SCALE) : this._font = a;
        this.updateGlyphs(!0, this._shadow, this._outline);
        this.bitmapData = new wa(1, 1, !0);
        this._bitmap = new Ac(this.bitmapData);
        this.addChild(this._bitmap);
        this._pendingTextChange = !0;
        this.update()
      };
      k["com.stencyl.graphics.fonts.Label"] = jl;
      jl.__name__ = "com.stencyl.graphics.fonts.Label";
      jl.__interfaces__ = [sh];
      jl.__super__ = Z;
      jl.prototype = t(Z.prototype, {
        _stencylFont: null,
        _font: null,
        _text: null,
        _color: null,
        _useColor: null,
        _outline: null,
        _outlineColor: null,
        _shadow: null,
        _shadowColor: null,
        _background: null,
        _backgroundColor: null,
        _alignment: null,
        _padding: null,
        _fontScale: null,
        _autoUpperCase: null,
        _wordWrap: null,
        _fixedWidth: null,
        _pendingTextChange: null,
        _fieldWidth: null,
        _multiLine: null,
        _alpha: null,
        labelX: null,
        labelY: null,
        bitmapData: null,
        _bitmap: null,
        _preparedTextGlyphs: null,
        _preparedShadowGlyphs: null,
        _preparedOutlineGlyphs: null,
        cacheParentAnchor: null,
        destroy: function() {
          this._font = this._stencylFont = null;
          this.removeChild(this._bitmap);
          this._bitmap = null;
          this.bitmapData.dispose();
          this.bitmapData = null;
          this.clearPreparedGlyphs(this._preparedTextGlyphs);
          this.clearPreparedGlyphs(this._preparedShadowGlyphs);
          this.clearPreparedGlyphs(this._preparedOutlineGlyphs)
        },
        get_text: function() {
          return this._text
        },
        set_text: function(a) {
          a.split("\\n").join("\n") != this._text && (this._text = a, this._text = this._text.split("\\n").join("\n"), this._autoUpperCase &&
            (this._text = this._text.toUpperCase()), this._pendingTextChange = !0, this.update());
          return this._text
        },
        updateBitmapData: function() {
          if (null != this._font) {
            var a = this._fieldWidth * p.SCALE | 0,
              b = this._padding * p.SCALE | 0,
              c = a,
              d = [],
              e = this._alignment,
              f = this._text.split("\n"),
              g = -1;
            this._multiLine || (f = [f[0]]);
            for (var h, m; ++g < f.length;)
              if (this._fixedWidth) {
                var l = !1;
                var y = f[g].split(" ");
                if (0 < y.length)
                  for (var n = 0, k = ""; !l;) {
                    m = y[n];
                    var q = k + m + " ",
                      u = !1;
                    if (this._wordWrap) this._font.getTextWidth(q, this._fontScale) > a ? ("" == k ?
                      y.splice(0, 1) : d.push(da.substr(k, 0, k.length - 1)), k = "", this._multiLine ? y.splice(0, n) : y.splice(0, y.length), n = 0, u = !0) : (k += m + " ", ++n);
                    else if (this._font.getTextWidth(q, this._fontScale) > a) {
                      var v = 0;
                      for (h = m.length; v < h;) q = k + m.charAt(v), this._font.getTextWidth(q, this._fontScale) > a ? (d.push(da.substr(k, 0, k.length - 1)), m = k = "", n = y.length, v = h, u = !0) : k += m.charAt(v), ++v
                    } else k += m + " ", ++n;
                    n >= y.length && (u || (l = da.substr(k, 0, k.length - 1), c = Math.floor(Math.max(c, this._font.getTextWidth(l, this._fontScale))), d.push(l)), l = !0)
                  } else d.push("")
              } else c =
                Math.floor(Math.max(c, this._font.getTextWidth(f[g], this._fontScale))), d.push(f[g]);
            c = c + 2 * b + (this._outline ? 2 : 0);
            f = Math.floor(2 * b + Math.max(1, d.length * this._font.lineHeight * this._fontScale + (this._shadow ? 1 : 0) + (this._outline ? 2 : 0)) + (1 <= d.length ? this._font.ySpacing * (d.length - 1) * this._fontScale : 0));
            null == this.bitmapData || c == this.bitmapData.width && f == this.bitmapData.height || (this.bitmapData.dispose(), this.bitmapData = null);
            null == this.bitmapData ? this.bitmapData = new wa(c, f, !this._background, this._backgroundColor) :
              this.bitmapData.fillRect(this.bitmapData.rect, this._backgroundColor);
            this.bitmapData.lock();
            for (g = f = 0; g < d.length;) {
              y = d[g];
              ++g;
              k = n = 0;
              3 == e && (n = this._fixedWidth ? Math.floor((a - this._font.getTextWidth(y, this._fontScale)) / 2) : Math.floor((c - this._font.getTextWidth(y, this._fontScale)) / 2));
              2 == e && (n = this._fixedWidth ? a - Math.floor(this._font.getTextWidth(y, this._fontScale)) : c - Math.floor(this._font.getTextWidth(y, this._fontScale)) - 2 * b);
              n += b;
              k += b + (f * (this._font.lineHeight + this._font.ySpacing) * this._fontScale | 0);
              if (this._outline) {
                for (l = 0; 3 > l;)
                  for (v = l++, h = 0; 3 > h;) m = h++, this._font.render(this.bitmapData, this._preparedOutlineGlyphs, y, this._outlineColor, this._alpha, n + m, k + v, this._fontScale);
                ++n;
                ++k
              }
              this._shadow && this._font.render(this.bitmapData, this._preparedShadowGlyphs, y, this._shadowColor, this._alpha, n + 1, k + 1, this._fontScale);
              this._font.render(this.bitmapData, this._preparedTextGlyphs, y, this._color, this._alpha, n, k, this._fontScale);
              ++f
            }
            this.bitmapData.unlock();
            this._pendingTextChange = !1
          }
        },
        update: function() {
          this._pendingTextChange &&
            (this.updateBitmapData(), this._bitmap.set_bitmapData(this.bitmapData))
        },
        get_background: function() {
          return this._background
        },
        set_background: function(a) {
          this._background != a && (this._background = a, this._pendingTextChange = !0, this.update());
          return a
        },
        get_backgroundColor: function() {
          return this._backgroundColor
        },
        set_backgroundColor: function(a) {
          this._backgroundColor != a && (this._backgroundColor = a, this._background && (this._pendingTextChange = !0, this.update()));
          return a
        },
        get_shadow: function() {
          return this._shadow
        },
        set_shadow: function(a) {
          this._shadow != a && (this._shadow = a, this._outline = !1, this.updateGlyphs(!1, this._shadow, !1), this._pendingTextChange = !0, this.update());
          return a
        },
        get_shadowColor: function() {
          return this._shadowColor
        },
        set_shadowColor: function(a) {
          this._shadowColor != a && (this._shadowColor = a, this.updateGlyphs(!1, this._shadow, !1), this._pendingTextChange = !0, this.update());
          return a
        },
        get_padding: function() {
          return this._padding
        },
        set_padding: function(a) {
          this._padding != a && (this._padding = a, this._pendingTextChange = !0, this.update());
          return a
        },
        get_color: function() {
          return this._color
        },
        set_color: function(a) {
          this._color != a && (this._color = a, this.updateGlyphs(!0, !1, !1), this._pendingTextChange = !0, this.update());
          return a
        },
        get_useColor: function() {
          return this._useColor
        },
        set_useColor: function(a) {
          this._useColor != a && (this._useColor = a, this.updateGlyphs(!0, !1, !1), this._pendingTextChange = !0, this.update());
          return a
        },
        setWidth: function(a) {
          1 > a && (a = 1);
          a != this._fieldWidth && (this._fieldWidth = a, this._pendingTextChange = !0, this.update());
          return a
        },
        get_alignment: function() {
          return this._alignment
        },
        set_alignment: function(a) {
          this._alignment != a && (this._alignment = a, this._pendingTextChange = !0, this.update());
          return a
        },
        get_multiLine: function() {
          return this._multiLine
        },
        set_multiLine: function(a) {
          this._multiLine != a && (this._multiLine = a, this._pendingTextChange = !0, this.update());
          return a
        },
        get_outline: function() {
          return this._outline
        },
        set_outline: function(a) {
          this._outline != a && (this._outline = a, this._shadow = !1, this.updateGlyphs(!1, !1, !0), this._pendingTextChange = !0, this.update());
          return a
        },
        get_outlineColor: function() {
          return this._outlineColor
        },
        set_outlineColor: function(a) {
          this._outlineColor != a && (this._outlineColor = a, this.updateGlyphs(!1, !1, this._outline), this._pendingTextChange = !0, this.update());
          return a
        },
        get_font: function() {
          return this._font
        },
        set_font: function(a) {
          this._font != a && (this._font = a, this.updateGlyphs(!0, this._shadow, this._outline), this._pendingTextChange = !0, this.update());
          return a
        },
        get_stencylFont: function() {
          return this._stencylFont
        },
        set_stencylFont: function(a) {
          this._stencylFont !=
            a && (this._stencylFont = a, null == a ? (this._font = Oe.defaultFont, this._fontScale = p.SCALE) : (this._font = a.font, this._fontScale = a.fontScale), this.updateGlyphs(!0, this._shadow, this._outline), this._pendingTextChange = !0, this.update());
          return a
        },
        setAlpha: function(a) {
          this._alpha != a && (this._alpha = a, this.set_alpha(this._alpha))
        },
        getAlpha: function() {
          return this._alpha
        },
        get_fontScale: function() {
          return this._fontScale
        },
        set_fontScale: function(a) {
          var b = Math.abs(a);
          b != this._fontScale && (this._fontScale = b, this.updateGlyphs(!0,
            this._shadow, this._outline), this._pendingTextChange = !0, this.update());
          return a
        },
        get_autoUpperCase: function() {
          return this._autoUpperCase
        },
        set_autoUpperCase: function(a) {
          this._autoUpperCase != a && (this._autoUpperCase = a) && this.set_text(this._text.toUpperCase());
          return this._autoUpperCase
        },
        get_wordWrap: function() {
          return this._wordWrap
        },
        set_wordWrap: function(a) {
          this._wordWrap != a && (this._wordWrap = a, this._pendingTextChange = !0, this.update());
          return this._wordWrap
        },
        get_fixedWidth: function() {
          return this._fixedWidth
        },
        set_fixedWidth: function(a) {
          this._fixedWidth != a && (this._fixedWidth = a, this._pendingTextChange = !0, this.update());
          return this._fixedWidth
        },
        set_labelX: function(a) {
          this.set_x(a * p.SCALE);
          return this.labelX = a
        },
        get_labelX: function() {
          return this.labelX
        },
        set_labelY: function(a) {
          this.set_y(a * p.SCALE);
          return this.labelY = a
        },
        get_labelY: function() {
          return this.labelY
        },
        updatePosition: function() {
          this.set_x(this.get_labelX() * p.SCALE - this.cacheParentAnchor.x);
          this.set_y(this.get_labelY() * p.SCALE - this.cacheParentAnchor.y)
        },
        updateScale: function() {
          this.updatePosition();
          null != this._stencylFont ? this.set_font(this._stencylFont.font) : this._font == Oe.defaultFont && this.set_fontScale(p.SCALE)
        },
        updateGlyphs: function(a, b, c) {
          null == c && (c = !1);
          null == b && (b = !1);
          null == a && (a = !1);
          a && (this.clearPreparedGlyphs(this._preparedTextGlyphs), this._preparedTextGlyphs = this._font.getPreparedGlyphs(this._fontScale, this._color, this._useColor));
          b && (this.clearPreparedGlyphs(this._preparedShadowGlyphs), this._preparedShadowGlyphs = this._font.getPreparedGlyphs(this._fontScale,
            this._shadowColor));
          c && (this.clearPreparedGlyphs(this._preparedOutlineGlyphs), this._preparedOutlineGlyphs = this._font.getPreparedGlyphs(this._fontScale, this._outlineColor))
        },
        clearPreparedGlyphs: function(a) {
          if (null != a)
            for (a = a.iterator(); a.hasNext();) {
              var b = a.next();
              null != b && b.dispose()
            }
        },
        __class__: jl,
        __properties__: t(Z.prototype.__properties__, {
          set_fixedWidth: "set_fixedWidth",
          get_fixedWidth: "get_fixedWidth",
          set_wordWrap: "set_wordWrap",
          get_wordWrap: "get_wordWrap",
          set_autoUpperCase: "set_autoUpperCase",
          get_autoUpperCase: "get_autoUpperCase",
          set_fontScale: "set_fontScale",
          get_fontScale: "get_fontScale",
          set_stencylFont: "set_stencylFont",
          get_stencylFont: "get_stencylFont",
          set_font: "set_font",
          get_font: "get_font",
          set_outlineColor: "set_outlineColor",
          get_outlineColor: "get_outlineColor",
          set_outline: "set_outline",
          get_outline: "get_outline",
          set_multiLine: "set_multiLine",
          get_multiLine: "get_multiLine",
          set_alignment: "set_alignment",
          get_alignment: "get_alignment",
          set_useColor: "set_useColor",
          get_useColor: "get_useColor",
          set_color: "set_color",
          get_color: "get_color",
          set_padding: "set_padding",
          get_padding: "get_padding",
          set_shadowColor: "set_shadowColor",
          get_shadowColor: "get_shadowColor",
          set_shadow: "set_shadow",
          get_shadow: "get_shadow",
          set_backgroundColor: "set_backgroundColor",
          get_backgroundColor: "get_backgroundColor",
          set_background: "set_background",
          get_background: "get_background",
          set_text: "set_text",
          get_text: "get_text",
          set_labelY: "set_labelY",
          get_labelY: "get_labelY",
          set_labelX: "set_labelX",
          get_labelX: "get_labelX"
        })
      });
      var Yn =
        function() {};
      k["com.stencyl.graphics.fonts.TextAlign"] = Yn;
      Yn.__name__ = "com.stencyl.graphics.fonts.TextAlign";
      var nd = function() {};
      k["com.stencyl.graphics.shaders.BasicShader"] = nd;
      nd.__name__ = "com.stencyl.graphics.shaders.BasicShader";
      nd.prototype = {
        multipassParent: null,
        multipassTarget: null,
        model: null,
        setProperty: function(a, b) {
          this.model.setUniform(a, b)
        },
        getProperty: function(a) {
          return this.model.getUniform(a)
        },
        tweenProperty: function(a, b, c, d) {
          null == c && (c = 1);
          this.model.tweenUniform(a, b, c, d)
        },
        enable: function() {
          p.engine.addShader(this.model)
        },
        disable: function() {
          p.engine.clearShaders()
        },
        setTimeScale: function(a) {
          this.model.timeScale = a
        },
        combine: function(a) {
          this.multipassTarget = a;
          a.multipassParent = this;
          return a
        },
        __class__: nd
      };
      var Zn = function(a, b, c, d, e, f, g, h, m) {
        null == m && (m = .0075);
        null == h && (h = .009);
        null == g && (g = .012);
        null == f && (f = .6);
        null == e && (e = .4);
        null == d && (d = 3);
        null == c && (c = 4);
        null == b && (b = .004);
        null == a && (a = .25);
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform vec2 uResolution;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tuniform float currPixelWeight;\n\t\t\tuniform float neighborPixelWeight;\n\t\t\tuniform float lowThreshold;\n\t\t\tuniform float mediumThreshold;\n\t\t\tuniform float lowMultiplier;\n\t\t\tuniform float mediumMultiplier;\n\t\t\tuniform float highMultiplier;\n\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\tvec2 q1 = vTexCoord;\n\t\t\t\tvec4 oricol = texture2D(uImage0, vec2(q1.x, q1.y));\n\t\t\t\tvec3 col;\n\t\t\t\t\n\t\t\t\tfor(int i = -3; i < 3; i++) \n\t\t\t\t{\n\t\t\t\t\tfor(int j = -3; j < 3; j++) \n\t\t\t\t\t{\n\t\t\t\t\t\tsum += texture2D(uImage0, vec2(j, i) * neighborPixelWeight + vec2(q1.x, q1.y)) * currPixelWeight;\n\t\t\t\t\t}\n\t\t\t   \t}\n\t\t\t \n\t\t\t  \tif(oricol.r < lowThreshold) \n\t\t\t  \t{\n\t\t\t\t\tgl_FragColor = sum * sum * lowMultiplier + oricol;\n\t\t\t  \t} \n\t\t\t  \n\t\t\t  \telse \n\t\t\t  \t{\n\t\t\t\t\tif(oricol.r < mediumThreshold) \n\t\t\t\t\t{\n\t\t\t\t\t\tgl_FragColor = sum * sum * mediumMultiplier + oricol;\n\t\t\t\t   \t} \n\t\t\t\t   \t\n\t\t\t\t   \telse \n\t\t\t\t   \t{\n\t\t\t\t\t\tgl_FragColor = sum * sum * highMultiplier + oricol;\n\t\t\t\t   \t}\n\t\t\t   }\n\t\t\t}\n\t\t",
          !0);
        this.setProperty("currPixelWeight", a);
        this.setProperty("neighborPixelWeight", b);
        this.setProperty("sampleX", c);
        this.setProperty("sampleY", d);
        this.setProperty("lowThreshold", e);
        this.setProperty("mediumThreshold", f);
        this.setProperty("lowMultiplier", g);
        this.setProperty("mediumMultiplier", h);
        this.setProperty("highMultiplier", m)
      };
      k["com.stencyl.graphics.shaders.BloomShader"] = Zn;
      Zn.__name__ = "com.stencyl.graphics.shaders.BloomShader";
      Zn.__super__ = nd;
      Zn.prototype = t(nd.prototype, {
        __class__: Zn
      });
      var $n =
        function(a, b, c) {
          null == c && (c = 1);
          null == b && (b = 1);
          null == a && (a = 2);
          this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\t//in attributes from our vertex shader\n\t\t\tvarying vec2 vTexCoord;\n\t\t\t\n\t\t\t//declare uniforms\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform vec2 uResolution;\n\t\t\t\n\t\t\tuniform float radius;\n\t\t\tuniform float dirx;\n\t\t\tuniform float diry;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\t//this will be our RGBA sum\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\n\t\t\t\t//our original texcoord for this fragment\n\t\t\t\tvec2 tc = vTexCoord;\n\t\t\t\n\t\t\t\t//the amount to blur, i.e. how far off center to sample from\n\t\t\t\t//1.0 -> blur by one pixel\n\t\t\t\t//2.0 -> blur by two pixels, etc.\n\t\t\t\tfloat blur = radius / uResolution.x;\n\t\t\t\n\t\t\t\t//the direction of our blur\n\t\t\t\t//(1.0, 0.0) -> x-axis blur\n\t\t\t\t//(0.0, 1.0) -> y-axis blur\n\t\t\t\tfloat hstep = dirx;\n\t\t\t\tfloat vstep = diry;\n\t\t\t\n\t\t\t\t//apply blurring, using a 9-tap filter with predefined gaussian weights\n\t\t\t\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 4.0*blur*hstep, tc.y - 4.0*blur*vstep)) * 0.0162162162;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 3.0*blur*hstep, tc.y - 3.0*blur*vstep)) * 0.0540540541;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 2.0*blur*hstep, tc.y - 2.0*blur*vstep)) * 0.1216216216;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 1.0*blur*hstep, tc.y - 1.0*blur*vstep)) * 0.1945945946;\n\t\t\t\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x, tc.y)) * 0.2270270270;\n\t\t\t\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 1.0*blur*hstep, tc.y + 1.0*blur*vstep)) * 0.1945945946;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 2.0*blur*hstep, tc.y + 2.0*blur*vstep)) * 0.1216216216;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 3.0*blur*hstep, tc.y + 3.0*blur*vstep)) * 0.0540540541;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 4.0*blur*hstep, tc.y + 4.0*blur*vstep)) * 0.0162162162;\n\t\t\t\n\t\t\t\t//discard alpha for our simple demo, multiply by vertex color and return\n\t\t\t\tgl_FragColor = vec4(sum.rgb, 1.0);\n\t\t\t}\n\t\t",
            !0);
          this.setRadius(a);
          this.setDirectionX(b);
          this.setDirectionY(c)
        };
      k["com.stencyl.graphics.shaders.BlurShader"] = $n;
      $n.__name__ = "com.stencyl.graphics.shaders.BlurShader";
      $n.__super__ = nd;
      $n.prototype = t(nd.prototype, {
        setRadius: function(a) {
          this.setProperty("radius", a)
        },
        setDirectionX: function(a) {
          this.setProperty("dirx", a)
        },
        setDirectionY: function(a) {
          this.setProperty("diry", a)
        },
        __class__: $n
      });
      var Rh = function(a, b, c) {
        null == c && (c = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform float contrast;\n\t\t\tuniform float brightness;\n\t\t\tuniform float saturation;\n\n\t\t\tvec3 _mix(vec3 a, vec3 b, float amount) \n\t\t\t{ \n\t\t\t\treturn vec3(a.x * (1.0 - amount) + b.x * amount, a.y * (1.0 - amount) + b.y * amount, a.z * (1.0 - amount) + b.z * amount); \n\t\t\t}\n\n\t\t\tvoid main() \n\t\t\t{\n\t\t\t\tvec3 color = texture2D(uImage0, vTexCoord).rgb;\n\t\t\t\tconst vec3 luminanceCoefficient = vec3(0.2125, 0.7154, 0.0721);\n\t\t\t\tvec3 avgLuminance = vec3(0.5, 0.5, 0.5);\n\t\t\n\t\t\t\tvec3 brtColor = vec3(color.x * brightness, color.y * brightness, color.z * brightness);\n\t\t\t\tvec3 intensity = vec3(dot(brtColor, luminanceCoefficient));\n\t\t\t\tvec3 satColor = _mix(intensity, brtColor, saturation);\n\t\t\t\tvec3 conColor = _mix(avgLuminance, satColor, contrast);\n\t\t\n\t\t\t\tgl_FragColor = vec4(conColor, 1);\n\t\t\t}\n\t\t",
          !0);
        this.setContrast(a);
        this.setBrightness(b);
        this.setSaturation(c)
      };
      k["com.stencyl.graphics.shaders.CSBShader"] = Rh;
      Rh.__name__ = "com.stencyl.graphics.shaders.CSBShader";
      Rh.create = function(a, b) {
        null == b && (b = 1);
        null == a && (a = "contrast");
        return "contrast" == a ? new Rh(b, 1, 1) : "saturation" == a ? new Rh(1, 1, b) : new Rh(1, b, 1)
      };
      Rh.__super__ = nd;
      Rh.prototype = t(nd.prototype, {
        setContrast: function(a) {
          this.setProperty("contrast", a)
        },
        setBrightness: function(a) {
          this.setProperty("brightness", a)
        },
        setSaturation: function(a) {
          this.setProperty("saturation",
            a)
        },
        __class__: Rh
      });
      var ao = function(a) {
        this.model = new wd(this, "assets/data/" + a)
      };
      k["com.stencyl.graphics.shaders.ExternalShader"] = ao;
      ao.__name__ = "com.stencyl.graphics.shaders.ExternalShader";
      ao.__super__ = nd;
      ao.prototype = t(nd.prototype, {
        __class__: ao
      });
      var bo = function(a, b, c, d, e) {
        null == e && (e = 1);
        null == d && (d = 1.6);
        null == c && (c = .6);
        null == b && (b = !1);
        null == a && (a = .05);
        this.model = new wd(this, "\n\t\t\t/*\n\t\t\t\tFilm Grain post-process shader v1.1\n\t\t\t\tMartins Upitis (martinsh) devlog-martinsh.blogspot.com\n\t\t\t*/\n\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tuniform sampler2D uImage0; //rendered scene sampler\n\t\t\tuniform vec2 uResolution; //scene sampler resolution\n\t\t\tuniform float uTime;\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\t\n\t\t\tconst float permTexUnit = 1.0/256.0;        // Perm texture texel-size\n\t\t\tconst float permTexUnitHalf = 0.5/256.0;    // Half perm texture texel-size\n\t\t\t\n\t\t\tfloat width;\n\t\t\tfloat height;\n\t\t\t\n\t\t\tuniform float grainamount; //grain amount\n\t\t\tuniform float colored; //colored noise?\n\t\t\tuniform float coloramount;\n\t\t\tuniform float grainsize; //grain particle size (1.5 - 2.5)\n\t\t\tuniform float lumamount; //\n\t\t\t\n\t\t\t//a random texture generator, but you can also use a pre-computed perturbation texture\n\t\t\tvec4 rnm(in vec2 tc)\n\t\t\t{\n\t\t\t\tfloat noise =  sin(dot(tc + vec2(uTime,uTime),vec2(12.9898,78.233))) * 43758.5453;\n\t\t\t\n\t\t\t\tfloat noiseR =  fract(noise)*2.0-1.0;\n\t\t\t\tfloat noiseG =  fract(noise*1.2154)*2.0-1.0;\n\t\t\t\tfloat noiseB =  fract(noise*1.3453)*2.0-1.0;\n\t\t\t\tfloat noiseA =  fract(noise*1.3647)*2.0-1.0;\n\t\t\t\n\t\t\t\treturn vec4(noiseR,noiseG,noiseB,noiseA);\n\t\t\t}\n\t\t\t\n\t\t\tfloat fade(in float t) {\n\t\t\t\treturn t*t*t*(t*(t*6.0-15.0)+10.0);\n\t\t\t}\n\t\t\t\n\t\t\tfloat pnoise3D(in vec3 p)\n\t\t\t{\n\t\t\t\tvec3 pi = permTexUnit*floor(p)+permTexUnitHalf; // Integer part, scaled so +1 moves permTexUnit texel\n\t\t\t\t// and offset 1/2 texel to sample texel centers\n\t\t\t\tvec3 pf = fract(p);     // Fractional part for interpolation\n\t\t\t\n\t\t\t\t// Noise contributions from (x=0, y=0), z=0 and z=1\n\t\t\t\tfloat perm00 = rnm(pi.xy).a ;\n\t\t\t\tvec3  grad000 = rnm(vec2(perm00, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n000 = dot(grad000, pf);\n\t\t\t\tvec3  grad001 = rnm(vec2(perm00, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n001 = dot(grad001, pf - vec3(0.0, 0.0, 1.0));\n\t\t\t\n\t\t\t\t// Noise contributions from (x=0, y=1), z=0 and z=1\n\t\t\t\tfloat perm01 = rnm(pi.xy + vec2(0.0, permTexUnit)).a ;\n\t\t\t\tvec3  grad010 = rnm(vec2(perm01, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n010 = dot(grad010, pf - vec3(0.0, 1.0, 0.0));\n\t\t\t\tvec3  grad011 = rnm(vec2(perm01, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n011 = dot(grad011, pf - vec3(0.0, 1.0, 1.0));\n\t\t\t\n\t\t\t\t// Noise contributions from (x=1, y=0), z=0 and z=1\n\t\t\t\tfloat perm10 = rnm(pi.xy + vec2(permTexUnit, 0.0)).a ;\n\t\t\t\tvec3  grad100 = rnm(vec2(perm10, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n100 = dot(grad100, pf - vec3(1.0, 0.0, 0.0));\n\t\t\t\tvec3  grad101 = rnm(vec2(perm10, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n101 = dot(grad101, pf - vec3(1.0, 0.0, 1.0));\n\t\t\t\n\t\t\t\t// Noise contributions from (x=1, y=1), z=0 and z=1\n\t\t\t\tfloat perm11 = rnm(pi.xy + vec2(permTexUnit, permTexUnit)).a ;\n\t\t\t\tvec3  grad110 = rnm(vec2(perm11, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n110 = dot(grad110, pf - vec3(1.0, 1.0, 0.0));\n\t\t\t\tvec3  grad111 = rnm(vec2(perm11, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n111 = dot(grad111, pf - vec3(1.0, 1.0, 1.0));\n\t\t\t\n\t\t\t\t// Blend contributions along x\n\t\t\t\tvec4 n_x = mix(vec4(n000, n001, n010, n011), vec4(n100, n101, n110, n111), fade(pf.x));\n\t\t\t\n\t\t\t\t// Blend contributions along y\n\t\t\t\tvec2 n_xy = mix(n_x.xy, n_x.zw, fade(pf.y));\n\t\t\t\n\t\t\t\t// Blend contributions along z\n\t\t\t\tfloat n_xyz = mix(n_xy.x, n_xy.y, fade(pf.z));\n\t\t\t\n\t\t\t\t// We're done, return the final noise value.\n\t\t\t\treturn n_xyz;\n\t\t\t}\n\t\t\t\n\t\t\t//2d coordinate orientation thing\n\t\t\tvec2 coordRot(in vec2 tc, in float angle)\n\t\t\t{\n\t\t\t\tfloat aspect = width/height;\n\t\t\t\tfloat rotX = ((tc.x*2.0-1.0)*aspect*cos(angle)) - ((tc.y*2.0-1.0)*sin(angle));\n\t\t\t\tfloat rotY = ((tc.y*2.0-1.0)*cos(angle)) + ((tc.x*2.0-1.0)*aspect*sin(angle));\n\t\t\t\trotX = ((rotX/aspect)*0.5+0.5);\n\t\t\t\trotY = rotY*0.5+0.5;\n\t\t\t\treturn vec2(rotX,rotY);\n\t\t\t}\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\twidth = uResolution.x;\n\t\t\t\theight = uResolution.y;\n\t\t\t\t\n\t\t\t\tvec2 texCoord = vTexCoord.st;\n\t\t\t\n\t\t\t\tvec3 rotOffset = vec3(1.425,3.892,5.835); //rotation offset values\n\t\t\t\tvec2 rotCoordsR = coordRot(texCoord, uTime + rotOffset.x);\n\t\t\t\tvec3 noise = vec3(pnoise3D(vec3(rotCoordsR*vec2(width/grainsize,height/grainsize),0.0)));\n\t\t\t\n\t\t\t\tif (colored == 1.0)\n\t\t\t\t{\n\t\t\t\t\tvec2 rotCoordsG = coordRot(texCoord, uTime + rotOffset.y);\n\t\t\t\t\tvec2 rotCoordsB = coordRot(texCoord, uTime + rotOffset.z);\n\t\t\t\t\tnoise.g = mix(noise.r,pnoise3D(vec3(rotCoordsG*vec2(width/grainsize,height/grainsize),1.0)),coloramount);\n\t\t\t\t\tnoise.b = mix(noise.r,pnoise3D(vec3(rotCoordsB*vec2(width/grainsize,height/grainsize),2.0)),coloramount);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvec3 col = texture2D(uImage0, texCoord).rgb;\n\t\t\t\n\t\t\t\t//noisiness response curve based on scene luminance\n\t\t\t\tvec3 lumcoeff = vec3(0.299,0.587,0.114);\n\t\t\t\tfloat luminance = mix(0.0,dot(col, lumcoeff),lumamount);\n\t\t\t\tfloat lum = smoothstep(0.2,0.0,luminance);\n\t\t\t\tlum += luminance;\n\t\t\t\n\t\t\t\n\t\t\t\tnoise = mix(noise,vec3(0.0),pow(lum,4.0));\n\t\t\t\tcol = col+noise*grainamount;\n\t\t\t\n\t\t\t\tgl_FragColor =  vec4(col,1.0);\n\t\t\t}\n\t\t",
          !0);
        this.setGrainAmount(a);
        this.setColorAmount(c);
        this.setGrainSize(d);
        this.setLuminance(e);
        b ? this.enableColor() : this.disableColor()
      };
      k["com.stencyl.graphics.shaders.GrainShader"] = bo;
      bo.__name__ = "com.stencyl.graphics.shaders.GrainShader";
      bo.__super__ = nd;
      bo.prototype = t(nd.prototype, {
        enableColor: function() {
          this.setProperty("colored", 1)
        },
        disableColor: function() {
          this.setProperty("colored", 0)
        },
        setGrainAmount: function(a) {
          this.setProperty("grainamount", a)
        },
        setColorAmount: function(a) {
          this.setProperty("coloramount",
            a)
        },
        setGrainSize: function(a) {
          this.setProperty("grainsize", a)
        },
        setLuminance: function(a) {
          this.setProperty("lumamount", a)
        },
        __class__: bo
      });
      var co = function() {
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 color = texture2D(uImage0, vTexCoord);\n\t\t\t\tfloat gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n\t\t\t\tgl_FragColor = vec4(gray, gray, gray, 1.0);\n\t\t\t}\n\t\t",
          !0)
      };
      k["com.stencyl.graphics.shaders.GrayscaleShader"] = co;
      co.__name__ = "com.stencyl.graphics.shaders.GrayscaleShader";
      co.__super__ = nd;
      co.prototype = t(nd.prototype, {
        __class__: co
      });
      var eo = function(a, b) {
        null == b && (b = !0);
        null == a && (a = 0);
        b && (a *= Math.PI / 180);
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tuniform float hue;\n\t\t\tconst mat3 rgb2yiq = mat3(0.299, 0.587, 0.114, 0.595716, -0.274453, -0.321263, 0.211456, -0.522591, 0.311135);\n\t\t\tconst mat3 yiq2rgb = mat3(1.0, 0.9563, 0.6210, 1.0, -0.2721, -0.6474, 1.0, -1.1070, 1.7046);\n\n\t\t\tvoid main() \n\t\t\t{\n\t\t\t\tvec3 color = texture2D(uImage0, vTexCoord).rgb;\n\t\t\t\tvec3 yColor = rgb2yiq * color; \n\n\t\t\t\tfloat originalHue = atan(yColor.b, yColor.g);\n\t\t\t\tfloat finalHue = originalHue + hue;\n\t\t\t\tfloat chroma = sqrt(yColor.b * yColor.b + yColor.g * yColor.g);\n\t\t\t\t\n\t\t\t\tvec3 yFinalColor = vec3(yColor.r, chroma * cos(finalHue), chroma * sin(finalHue));\n\t\t\t\tgl_FragColor = vec4(yiq2rgb * yFinalColor, 1.0);\n\t\t\t}\n\t\t",
          !0);
        this.setHue(a, !1)
      };
      k["com.stencyl.graphics.shaders.HueShader"] = eo;
      eo.__name__ = "com.stencyl.graphics.shaders.HueShader";
      eo.__super__ = nd;
      eo.prototype = t(nd.prototype, {
        setHue: function(a, b) {
          null == b && (b = !0);
          b && (a *= Math.PI / 180);
          this.setProperty("hue", a)
        },
        __class__: eo
      });
      var fo = function(a) {
        this.model = new wd(this, a, !0)
      };
      k["com.stencyl.graphics.shaders.InlineShader"] = fo;
      fo.__name__ = "com.stencyl.graphics.shaders.InlineShader";
      fo.__super__ = nd;
      fo.prototype = t(nd.prototype, {
        __class__: fo
      });
      var go = function() {
        this.model =
          new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 color = texture2D(uImage0, vTexCoord);\n\t\t\t\tgl_FragColor = vec4(vec3(1.0, 1.0, 1.0) - color.rgb, color.a);\n\t\t\t}\n\t\t", !0)
      };
      k["com.stencyl.graphics.shaders.InvertShader"] = go;
      go.__name__ = "com.stencyl.graphics.shaders.InvertShader";
      go.__super__ = nd;
      go.prototype = t(nd.prototype, {
        __class__: go
      });
      var wd = function(a, b, c) {
        null == c && (c = !1);
        this.timeScale = 1;
        this.time = 0;
        ya.call(this);
        this.__drawableType = 3;
        this.basicShader = a;
        this.gl = p.stage.__renderer.gl;
        this.uniforms = new ua;
        this.changedUniforms = [];
        this.uniformTweens = new ua;
        this.rebuild();
        this.gl.checkFramebufferStatus(36160);
        this.buffer = this.gl.createBuffer();
        this.gl.bindBuffer(34962, this.buffer);
        a = [-1, -1, 0, 0, 1, -1, 1, 0, -1, 1, 0, 1, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1];
        a = null != a ? new Float32Array(a) : null;
        cc.bufferData(this.gl, 34962, a, 35044);
        this.gl.bindBuffer(34962,
          null);
        if (c) this.fullScreenShader = new Mj([{
          src: "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}",
          fragment: !1
        }, {
          src: b,
          fragment: !0
        }]);
        else if (6 < b.length && ".glslx" == da.substr(b, -6, null)) {
          c = ia.parse(Aa.getText(b)).firstElement();
          if (c.nodeType != ia.Document && c.nodeType != ia.Element) throw F.thrown("Invalid nodeType " + (null ==
            c.nodeType ? "null" : sb.toString(c.nodeType)));
          b = Br.resolve(c, "vertex") ? pr.get_innerData(qr.resolve(c, "vertex")) : "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}";
          c = pr.get_innerData(qr.resolve(c, "fragment"));
          this.fullScreenShader = new Mj([{
            src: b,
            fragment: !1
          }, {
            src: c,
            fragment: !0
          }])
        } else b = Aa.getText(b), this.fullScreenShader =
          new Mj([{
            src: "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}",
            fragment: !1
          }, {
            src: b,
            fragment: !0
          }]);
        this.imageUniform = q.context.getUniformLocation(this.fullScreenShader.program, "uImage0");
        this.timeUniform = q.context.getUniformLocation(this.fullScreenShader.program, "uTime");
        this.resolutionUniform = q.context.getUniformLocation(this.fullScreenShader.program,
          "uResolution");
        this.resolutionUsUniform = q.context.getUniformLocation(this.fullScreenShader.program, "uResolutionUs");
        this.vertexSlot = q.context.getAttribLocation(this.fullScreenShader.program, "aVertex");
        this.texCoordSlot = q.context.getAttribLocation(this.fullScreenShader.program, "aTexCoord");
        this.addEventListener("renderOpenGL", r(this, this.renderGL))
      };
      k["com.stencyl.graphics.shaders.PostProcess"] = wd;
      wd.__name__ = "com.stencyl.graphics.shaders.PostProcess";
      wd.__properties__ = {
        get_vertices: "get_vertices",
        get_isSupported: "get_isSupported"
      };
      wd.get_isSupported = function() {
        return !1
      };
      wd.get_vertices = function() {
        return [-1, -1, 0, 0, 1, -1, 1, 0, -1, 1, 0, 1, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]
      };
      wd.__super__ = ya;
      wd.prototype = t(ya.prototype, {
        __added: null,
        __initialized: null,
        gl: null,
        __enterFrame: function(a) {
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        renderGL: function(a) {
          var b = a.renderer;
          if (null != this.stage && this.__renderable) {
            a = p.stage;
            var c = a.context3D;
            b.__setBlendMode(null);
            null == this.basicShader.multipassTarget ?
              c.setRenderToBackBuffer() : c.setRenderToTexture(this.basicShader.multipassTarget.model.texture);
            c.clear();
            this.time += p.elapsedTime * this.timeScale;
            q.context.useProgram(this.fullScreenShader.program);
            this.gl.enableVertexAttribArray(this.vertexSlot);
            this.gl.enableVertexAttribArray(this.texCoordSlot);
            this.gl.activeTexture(33984);
            this.gl.bindTexture(3553, this.texture.__getTexture());
            "opengl" == a.window.context.type && this.gl.enable(3553);
            this.gl.bindBuffer(34962, this.buffer);
            this.gl.vertexAttribPointer(this.vertexSlot,
              2, 5126, !1, 16, 0);
            this.gl.vertexAttribPointer(this.texCoordSlot, 2, 5126, !1, 16, 8);
            this.gl.uniform1i(this.imageUniform, 0);
            this.gl.uniform1f(this.timeUniform, this.time);
            this.gl.uniform2f(this.resolutionUniform, a.stageWidth | 0, a.stageHeight | 0);
            this.gl.uniform2f(this.resolutionUsUniform, a.stageWidth / (p.SCALE * p.screenScaleX) | 0, a.stageHeight / (p.SCALE * p.screenScaleY) | 0);
            for (b = this.changedUniforms.length; 0 < b--;) {
              var d = this.changedUniforms.pop();
              if (d.value instanceof Array) {
                if (0 != d.value.length) {
                  var e = this.gl,
                    f = d.id;
                  d = d.value;
                  d = null != d ? new Float32Array(d) : null;
                  e.uniform1fv(f, d)
                }
              } else this.gl.uniform1f(d.id, d.value)
            }
            this.gl.drawArrays(4, 0, 6);
            this.gl.bindBuffer(34962, null);
            "opengl" == a.window.context.type && this.gl.disable(3553);
            this.gl.bindTexture(3553, null);
            this.gl.disableVertexAttribArray(this.vertexSlot);
            this.gl.disableVertexAttribArray(this.texCoordSlot);
            c.__contextState.program = null;
            c.__flushGLProgram();
            c.__contextState.__currentGLElementArrayBuffer = null
          }
        },
        setUniform: function(a, b) {
          if (Object.prototype.hasOwnProperty.call(this.uniforms.h,
              a)) a = this.uniforms.h[a], a.value = b, this.changedUniforms.push(a);
          else {
            var c = q.context.getUniformLocation(this.fullScreenShader.program, a);
            c != wd.UNIFORM_NOT_FOUND && (b = {
              id: c,
              value: b
            }, this.uniforms.h[a] = b, this.changedUniforms.push(b))
          }
        },
        getUniform: function(a) {
          return Object.prototype.hasOwnProperty.call(this.uniforms.h, a) ? this.uniforms.h[a].value : -1
        },
        tweenUniform: function(a, b, c, d) {
          null == c && (c = 1);
          var e = this;
          if (Object.prototype.hasOwnProperty.call(this.uniforms.h, a)) {
            var f = this.uniforms.h[a],
              g = this.uniformTweens.h[a];
            null == g && (g = new he, g.doOnUpdate(function() {
              f.value = g.value;
              e.changedUniforms.push(f)
            }), this.uniformTweens.h[a] = g);
            g.tween(f.value, b, d, 1E3 * c | 0)
          }
        },
        rebuild: function() {
          null != this.texture && this.texture.dispose();
          this.texture = p.stage.context3D.createRectangleTexture(V.windowWidth | 0, V.windowHeight | 0, 1, !0);
          this.texture.__context.__bindGLTexture2D(this.texture.__textureID);
          this.texture.__setSamplerState(new Tg);
          cc.texImage2D(this.gl, this.texture.__textureTarget, 0, this.texture.__internalFormat, this.texture.__width,
            this.texture.__height, 0, this.gl.RGB, this.gl.UNSIGNED_BYTE, null);
          this.texture.__context.__bindGLTexture2D(null)
        },
        createTexture: function(a, b) {
          this.texture = p.stage.context3D.createRectangleTexture(a, b, 1, !0);
          this.texture.__context.__bindGLTexture2D(this.texture.__textureID);
          this.texture.__setSamplerState(new Tg);
          cc.texImage2D(this.gl, this.texture.__textureTarget, 0, this.texture.__internalFormat, this.texture.__width, this.texture.__height, 0, this.gl.RGB, this.gl.UNSIGNED_BYTE, null);
          this.texture.__context.__bindGLTexture2D(null)
        },
        capture: function() {
          p.stage.context3D.setRenderToTexture(this.texture);
          var a = this.texture.__getGLFramebuffer(!1, 0, 0);
          this.gl.bindFramebuffer(36160, a);
          this.gl.clear(16640);
          null != p.stage && null != p.stage.__renderer && (p.stage.__renderer.__cleared = !0)
        },
        texture: null,
        fullScreenShader: null,
        buffer: null,
        basicShader: null,
        time: null,
        timeScale: null,
        vertexSlot: null,
        texCoordSlot: null,
        imageUniform: null,
        resolutionUniform: null,
        resolutionUsUniform: null,
        timeUniform: null,
        uniforms: null,
        changedUniforms: null,
        uniformTweens: null,
        __class__: wd
      });
      var ho = function(a) {
        null == a && (a = 1);
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform vec2 uResolution;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tuniform float scale;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\tif (mod(floor(vTexCoord.y * uResolution.y / scale), 2.0) == 0.0)\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\telse\n\t\t\t\t\tgl_FragColor = texture2D(uImage0, vTexCoord);\n\t\t\t}\n\t\t",
          !0);
        this.setScale(a)
      };
      k["com.stencyl.graphics.shaders.ScanlineShader"] = ho;
      ho.__name__ = "com.stencyl.graphics.shaders.ScanlineShader";
      ho.__super__ = nd;
      ho.prototype = t(nd.prototype, {
        setScale: function(a) {
          this.setProperty("scale", a)
        },
        __class__: ho
      });
      var io = function() {
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 color = texture2D(uImage0, vTexCoord);\n\t\t\t\tgl_FragColor.r = dot(color, vec4(0.393,0.769,0.189,0));\n\t\t\t\tgl_FragColor.g = dot(color, vec4(0.349,0.686,0.168,0));\n\t\t\t\tgl_FragColor.b = dot(color, vec4(0.272,0.534,0.131,0));\n\t\t\t\tgl_FragColor.a = color.a;\n\t\t\t}\n\t\t",
          !0)
      };
      k["com.stencyl.graphics.shaders.SepiaShader"] = io;
      io.__name__ = "com.stencyl.graphics.shaders.SepiaShader";
      io.__super__ = nd;
      io.prototype = t(nd.prototype, {
        __class__: io
      });
      var Mj = function(a) {
        this.program = q.context.createProgram();
        for (var b = 0; b < a.length;) {
          var c = a[b];
          ++b;
          c = this.compile(c.src, c.fragment ? 35632 : 35633);
          if (null == c) return;
          q.context.attachShader(this.program, c);
          q.context.deleteShader(c)
        }
        q.context.linkProgram(this.program);
        q.context.getProgramParameter(this.program, 35714)
      };
      k["com.stencyl.graphics.shaders.Shader"] =
        Mj;
      Mj.__name__ = "com.stencyl.graphics.shaders.Shader";
      Mj.prototype = {
        compile: function(a, b) {
          b = q.context.createShader(b);
          q.context.shaderSource(b, a);
          q.context.compileShader(b);
          return 0 == q.context.getShaderParameter(b, 35713) ? null : b
        },
        attribute: function(a) {
          return q.context.getAttribLocation(this.program, a)
        },
        uniform: function(a) {
          return q.context.getUniformLocation(this.program, a)
        },
        bind: function() {
          q.context.useProgram(this.program)
        },
        program: null,
        __class__: Mj
      };
      var jo = function(a) {
        null == a && (a = 2);
        this.model = new wd(this,
          "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform vec2 uResolution;\n\t\t\t\n\t\t\tuniform float amount;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\t//this will be our RGBA sum\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\t\n\t\t\t\t//our original texcoord for this fragment\n\t\t\t\tvec2 tc = vTexCoord;\n\t\t\t\t\n\t\t\t\tfloat reach = 1.0 / uResolution.x;\n\n\t\t\t\t//current pixel\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x, tc.y));\n\t\t\t\t\n\t\t\t\t//sharpen\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x + 1.0 * reach, tc.y))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x - 1.0 * reach, tc.y))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x, tc.y + 1.0 * reach))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x, tc.y - 1.0 * reach))) * amount;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(sum.rgb, 1.0);\n\t\t\t}\n\t\t",
          !0);
        this.setAmount(a)
      };
      k["com.stencyl.graphics.shaders.SharpenShader"] = jo;
      jo.__name__ = "com.stencyl.graphics.shaders.SharpenShader";
      jo.__super__ = nd;
      jo.prototype = t(nd.prototype, {
        setAmount: function(a) {
          this.setProperty("amount", a)
        },
        __class__: jo
      });
      var ko = function(a, b) {
        null == b && (b = 1);
        this.model = new wd(this, "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform float amount;\n\t\t\tuniform float red;\n\t\t\tuniform float green;\n\t\t\tuniform float blue;\n\n\t\t\tvec3 _mix(vec3 a, vec3 b, float amount) \n\t\t\t{ \n\t\t\t\treturn vec3(a.x * (1.0 - amount) + b.x * amount, a.y * (1.0 - amount) + b.y * amount, a.z * (1.0 - amount) + b.z * amount); \n\t\t\t}\n\n\t\t\tvoid main() \n\t\t\t{\n\t\t\t\tvec3 color = texture2D(uImage0, vTexCoord).rgb;\n\t\t\t\tvec3 endColor = _mix(color, vec3(red, green, blue), amount);\n\t\t\t\tgl_FragColor = vec4(endColor.x, endColor.y, endColor.z, 1);\n\t\t\t}\n\t\t",
          !0);
        this.setColor(a);
        this.setAmount(b)
      };
      k["com.stencyl.graphics.shaders.TintShader"] = ko;
      ko.__name__ = "com.stencyl.graphics.shaders.TintShader";
      ko.__super__ = nd;
      ko.prototype = t(nd.prototype, {
        setAmount: function(a) {
          this.setProperty("amount", a)
        },
        setColor: function(a) {
          this.setProperty("red", (a >> 16 & 255) / 255);
          this.setProperty("green", (a >> 8 & 255) / 255);
          this.setProperty("blue", (a & 255) / 255)
        },
        __class__: ko
      });
      var Fj = function(a, b, c, d) {
        null == c && (c = 10);
        S.call(this, b);
        this.color = d;
        this.direction = a;
        this.numBlinds = c;
        a == S.IN ?
          (this.beginBlindWidth = p.screenWidth * p.SCALE / c, this.endBlindWidth = 0) : a == S.OUT ? (this.beginBlindWidth = 0, this.endBlindWidth = p.screenWidth * p.SCALE / c) : this.complete = !0
      };
      k["com.stencyl.graphics.transitions.BlindsTransition"] = Fj;
      Fj.__name__ = "com.stencyl.graphics.transitions.BlindsTransition";
      Fj.__super__ = S;
      Fj.prototype = t(S.prototype, {
        color: null,
        numBlinds: null,
        blindWidth: null,
        beginBlindWidth: null,
        endBlindWidth: null,
        blindRect: null,
        rect: null,
        graphics: null,
        start: function() {
          this.active = !0;
          this.blindRect = new ha(0,
            0, this.beginBlindWidth, p.screenHeight * p.SCALE);
          this.blindWidth = new he;
          this.rect = new Qe;
          this.graphics = this.rect.get_graphics();
          this.direction == S.IN && (this.graphics.beginFill(this.color), this.graphics.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE), this.graphics.endFill());
          p.engine.transitionLayer.addChild(this.rect);
          this.blindWidth.tween(this.beginBlindWidth, this.endBlindWidth, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
        },
        draw: function(a) {
          this.graphics.clear();
          this.graphics.beginFill(this.color);
          this.blindRect.x = 0;
          this.blindRect.width = this.blindWidth.value;
          this.direction == S.IN && (this.blindRect.x += p.screenWidth * p.SCALE / this.numBlinds - this.blindWidth.value);
          a = 0;
          for (var b = this.numBlinds; a < b;) a++, this.graphics.drawRect(this.blindRect.x, this.blindRect.y, this.blindRect.width, this.blindRect.height), this.blindRect.x += p.screenWidth * p.SCALE / this.numBlinds;
          this.graphics.endFill()
        },
        cleanup: function() {
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect), this.rect = null)
        },
        __class__: Fj
      });
      var Ej =
        function(a, b, c, d) {
          null == d && (d = -16777216);
          null == c && (c = 50);
          S.call(this, b);
          this.color = d;
          this.direction = a;
          this.numBubbles = c
        };
      k["com.stencyl.graphics.transitions.BubblesTransition"] = Ej;
      Ej.__name__ = "com.stencyl.graphics.transitions.BubblesTransition";
      Ej.__super__ = S;
      Ej.prototype = t(S.prototype, {
        color: null,
        numBubbles: null,
        radius: null,
        beginRadius: null,
        endRadius: null,
        rect: null,
        graphics: null,
        drawBitmap: null,
        bubblePositions: null,
        bubbleRect: null,
        screenWidth: null,
        screenHeight: null,
        start: function() {
          this.active = !0;
          this.rect = new Qe;
          this.graphics = this.rect.get_graphics();
          this.screenWidth = p.screenWidth * p.SCALE | 0;
          this.screenHeight = p.screenHeight * p.SCALE | 0;
          this.direction == S.IN && (this.graphics.beginFill(this.color), this.graphics.drawRect(0, 0, this.screenWidth, this.screenHeight), this.graphics.endFill());
          this.drawBitmap = new wa(this.screenWidth, this.screenHeight);
          var a = this.screenWidth / this.screenHeight,
            b = Math.sqrt(this.numBubbles / a) | 0,
            c = this.screenHeight / b;
          a = Math.ceil(b * a | 0);
          b = Math.ceil(b);
          var d = a * c - this.screenWidth |
            0,
            e = new ha(-d / 2, -(b * c - this.screenHeight | 0) / 2, c, c);
          this.bubblePositions = [];
          for (var f = 0; f < b;) {
            f++;
            for (var g = 0, h = a; g < h;) g++, this.bubblePositions.push(new la(e.x + Math.floor(Math.random() * (c + 1)), e.y + Math.floor(Math.random() * (c + 1)))), e.x += c;
            e.x = -d / 2;
            e.y += c
          }
          this.beginRadius = 0;
          this.endRadius = Math.ceil(la.distance(new la(0, 0), new la(c, c)));
          this.radius = new he;
          p.engine.transitionLayer.addChild(this.rect);
          this.radius.tween(this.beginRadius, this.endRadius, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
        },
        draw: function(a) {
          this.graphics.clear();
          if (this.direction == S.IN) {
            this.drawBitmap.draw(p.engine.colorLayer);
            this.drawBitmap.draw(p.engine.master);
            this.graphics.beginFill(this.color);
            this.graphics.drawRect(0, 0, this.screenWidth, this.screenHeight);
            this.graphics.endFill();
            a = 0;
            for (var b = this.bubblePositions; a < b.length;) {
              var c = b[a];
              ++a;
              this.graphics.beginBitmapFill(this.drawBitmap);
              this.graphics.drawCircle(c.x, c.y, this.radius.value);
              this.graphics.endFill()
            }
          } else if (this.direction == S.OUT)
            for (a = 0, b = this.bubblePositions; a <
              b.length;) c = b[a], ++a, this.graphics.beginFill(this.color), this.graphics.drawCircle(c.x, c.y, this.radius.value), this.graphics.endFill()
        },
        cleanup: function() {
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect), this.rect = null)
        },
        __class__: Ej
      });
      var Hj = function(a, b, c) {
        null == c && (c = -16777216);
        S.call(this, b);
        this.color = c;
        this.direction = a;
        a == S.IN ? (this.beginRadius = 0, this.endRadius = Math.ceil(la.distance(new la(0, 0), new la(p.screenWidthHalf * p.SCALE, p.screenHeightHalf * p.SCALE))) | 0) : a == S.OUT && (this.beginRadius =
          Math.ceil(la.distance(new la(0, 0), new la(p.screenWidthHalf * p.SCALE, p.screenHeightHalf * p.SCALE))) | 0, this.endRadius = 0)
      };
      k["com.stencyl.graphics.transitions.CircleTransition"] = Hj;
      Hj.__name__ = "com.stencyl.graphics.transitions.CircleTransition";
      Hj.__super__ = S;
      Hj.prototype = t(S.prototype, {
        color: null,
        radius: null,
        beginRadius: null,
        endRadius: null,
        circleImg: null,
        s: null,
        start: function() {
          this.active = !0;
          this.s = new Qe;
          this.circleImg = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.radius = new he;
          if (this.direction ==
            S.IN) {
            var a = this.s.get_graphics();
            a.beginFill(this.color);
            a.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE);
            a.endFill()
          }
          p.engine.transitionLayer.addChild(this.s);
          this.radius.tween(this.beginRadius, this.endRadius, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
        },
        draw: function(a) {
          this.s.get_graphics().clear();
          this.s.get_graphics().beginFill(this.color);
          this.s.get_graphics().drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE);
          this.s.get_graphics().endFill();
          this.circleImg.draw(p.engine.colorLayer);
          this.circleImg.draw(p.engine.master);
          this.s.get_graphics().beginBitmapFill(this.circleImg);
          this.s.get_graphics().drawCircle(p.screenWidthHalf * p.SCALE, p.screenHeightHalf * p.SCALE, this.radius.value);
          this.s.get_graphics().endFill()
        },
        cleanup: function() {
          null != this.s && (p.engine.transitionLayer.removeChild(this.s), this.s = null)
        },
        __class__: Hj
      });
      var dl = function(a, b) {
        S.call(this, b);
        this.oldImg = a
      };
      k["com.stencyl.graphics.transitions.CrossfadeTransition"] = dl;
      dl.__name__ = "com.stencyl.graphics.transitions.CrossfadeTransition";
      dl.__super__ = S;
      dl.prototype = t(S.prototype, {
        oldImg: null,
        bitmap: null,
        rect: null,
        rectAlpha: null,
        start: function() {
          this.active = !0;
          this.bitmap = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.bitmap.draw(this.oldImg);
          this.rect = new Qe;
          var a = this.rect.get_graphics();
          a.beginBitmapFill(this.bitmap);
          a.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE);
          a.endFill();
          p.engine.transitionLayer.addChild(this.rect);
          this.rectAlpha = new he;
          this.rectAlpha.tween(1, 0, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this,
            this.stop))
        },
        update: function(a) {
          this.rect.set_alpha(this.rectAlpha.value)
        },
        draw: function(a) {},
        cleanup: function() {
          this.bitmap = this.oldImg = null;
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect), this.rect = null)
        },
        __class__: dl
      });
      var fl = function(a, b) {
        null == b && (b = -16777216);
        S.call(this, a);
        this.color = b;
        this.direction = S.IN
      };
      k["com.stencyl.graphics.transitions.FadeInTransition"] = fl;
      fl.__name__ = "com.stencyl.graphics.transitions.FadeInTransition";
      fl.__super__ = S;
      fl.prototype = t(S.prototype, {
        color: null,
        rect: null,
        rectAlpha: null,
        start: function() {
          this.active = !0;
          this.rect = new Qe;
          var a = this.rect.get_graphics();
          a.beginFill(this.color);
          a.drawRect(0, 0, p.screenWidth * p.SCALE + 4, p.screenHeight * p.SCALE + 4);
          a.endFill();
          a.drawCircle(1, 1, 1);
          p.engine.transitionLayer.addChild(this.rect);
          this.rectAlpha = new he;
          this.rectAlpha.tween(1, 0, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
        },
        update: function(a) {
          this.rect.set_alpha(this.rectAlpha.value)
        },
        cleanup: function() {
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect),
            this.rect = null)
        },
        __class__: fl
      });
      var el = function(a, b) {
        null == b && (b = -16777216);
        S.call(this, a);
        this.color = b;
        this.direction = S.IN
      };
      k["com.stencyl.graphics.transitions.FadeOutTransition"] = el;
      el.__name__ = "com.stencyl.graphics.transitions.FadeOutTransition";
      el.__super__ = S;
      el.prototype = t(S.prototype, {
        color: null,
        rect: null,
        rectAlpha: null,
        start: function() {
          this.active = !0;
          this.rect = new Qe;
          this.rect.set_alpha(0);
          var a = this.rect.get_graphics();
          a.beginFill(this.color);
          a.drawRect(0, 0, p.screenWidth * p.SCALE + 4, p.screenHeight *
            p.SCALE + 4);
          a.endFill();
          a.drawCircle(1, 1, 1);
          p.engine.transitionLayer.addChild(this.rect);
          this.rectAlpha = new he;
          this.rectAlpha.tween(0, 1, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
        },
        update: function(a) {
          this.rect.set_alpha(this.rectAlpha.value)
        },
        cleanup: function() {
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect), this.rect = null)
        },
        __class__: el
      });
      var Dj = function(a, b, c) {
        S.call(this, a);
        this.beginPixelSize = b;
        this.endPixelSize = c
      };
      k["com.stencyl.graphics.transitions.PixelizeTransition"] =
        Dj;
      Dj.__name__ = "com.stencyl.graphics.transitions.PixelizeTransition";
      Dj.__super__ = S;
      Dj.prototype = t(S.prototype, {
        pixelSizeTween: null,
        beginPixelSize: null,
        endPixelSize: null,
        srcImg: null,
        displayImg: null,
        displayBitmap: null,
        c: null,
        r: null,
        xOverflow: null,
        yOverflow: null,
        pixelRect: null,
        halfSize: null,
        start: function() {
          this.active = !0;
          this.srcImg = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.displayImg = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.pixelRect = new ha(0, 0, 0, 0);
          p.engine.transitionLayer.addChild(this.displayBitmap =
            new Ac(this.displayImg));
          this.pixelSizeTween = new he;
          this.pixelSizeTween.tween(this.beginPixelSize, this.endPixelSize, qa.linear, 1E3 * this.duration | 0).doOnComplete(r(this, this.stop))
        },
        draw: function(a) {
          a = this.pixelSizeTween.value | 0;
          if (1 == a) this.displayImg.draw(p.engine.colorLayer), this.displayImg.draw(p.engine.master);
          else {
            this.srcImg.draw(p.engine.colorLayer);
            this.srcImg.draw(p.engine.master);
            this.c = Math.ceil(p.screenWidth * p.SCALE / a);
            this.r = Math.ceil(p.screenHeight * p.SCALE / a);
            this.xOverflow = this.c * a -
              p.screenWidth * p.SCALE | 0;
            this.yOverflow = this.r * a - p.screenHeight * p.SCALE | 0;
            this.pixelRect.x = -this.xOverflow / 2;
            this.pixelRect.y = -this.yOverflow / 2;
            this.pixelRect.height = this.pixelRect.width = a;
            this.halfSize = a / 2 | 0;
            this.displayImg.lock();
            for (var b = 0, c = this.r; b < c;) {
              b++;
              for (var d = 0, e = this.c; d < e;) {
                d++;
                var f = this.srcImg.getPixel32(this.pixelRect.x + this.halfSize | 0, this.pixelRect.y + this.halfSize | 0);
                for (var g = this.pixelRect.x | 0, h = this.pixelRect.x + this.pixelRect.width | 0; g < h;)
                  for (var m = g++, l = this.pixelRect.y | 0, y =
                      this.pixelRect.y + this.pixelRect.height | 0; l < y;) {
                    var n = l++;
                    this.displayImg.setPixel32(m, n, f)
                  }
                this.pixelRect.x += a
              }
              this.pixelRect.x = -this.xOverflow / 2;
              this.pixelRect.y += a
            }
            this.displayImg.unlock()
          }
        },
        cleanup: function() {
          null != this.displayBitmap && p.engine.transitionLayer.removeChild(this.displayBitmap)
        },
        __class__: Dj
      });
      var Gj = function(a, b, c) {
        S.call(this, b);
        this.color = c;
        this.direction = a;
        a == S.IN ? (this.beginHeight = this.beginWidth = 0, this.endWidth = p.screenWidth * p.SCALE | 0, this.endHeight = p.screenHeight * p.SCALE | 0) :
          a == S.OUT ? (this.beginWidth = p.screenWidth * p.SCALE | 0, this.beginHeight = p.screenHeight * p.SCALE | 0, this.endHeight = this.endWidth = 0) : this.complete = !0
      };
      k["com.stencyl.graphics.transitions.RectangleTransition"] = Gj;
      Gj.__name__ = "com.stencyl.graphics.transitions.RectangleTransition";
      Gj.__super__ = S;
      Gj.prototype = t(S.prototype, {
        rectangleImg: null,
        graphics: null,
        color: null,
        size: null,
        beginWidth: null,
        endWidth: null,
        beginHeight: null,
        endHeight: null,
        rect: null,
        start: function() {
          this.active = !0;
          this.size = new Lf;
          this.rectangleImg =
            new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.rect = new Qe;
          this.graphics = this.rect.get_graphics();
          this.direction == S.IN && (this.graphics.beginFill(this.color), this.graphics.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE), this.graphics.endFill());
          p.engine.transitionLayer.addChild(this.rect);
          this.size.onComplete = r(this, this.stop);
          this.size.tween(this.beginWidth, this.endWidth, this.beginHeight, this.endHeight, qa.linear, 1E3 * this.duration | 0)
        },
        draw: function(a) {
          this.graphics.clear();
          this.graphics.beginFill(this.color);
          this.graphics.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE);
          this.graphics.endFill();
          this.rectangleImg.draw(p.engine.colorLayer);
          this.rectangleImg.draw(p.engine.master);
          this.graphics.beginBitmapFill(this.rectangleImg);
          this.graphics.drawRect((p.screenWidth * p.SCALE - this.size.value1) / 2, (p.screenHeight * p.SCALE - this.size.value2) / 2, this.size.value1, this.size.value2);
          this.graphics.endFill()
        },
        cleanup: function() {
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect),
            this.rect = null)
        },
        __class__: Gj
      });
      var Te = function(a, b, c, d) {
        S.call(this, c);
        this.sceneSpr = a;
        this.sceneCol = b;
        this.oldSceneMatrix = new Ea;
        this.newSceneMatrix = new Ea;
        this.ty = this.tx = 0;
        d == Te.SLIDE_UP ? (this.newSceneMatrix.ty = -p.screenHeight * p.SCALE, this.ty = p.screenHeight * p.SCALE) : d == Te.SLIDE_DOWN ? (this.newSceneMatrix.ty = p.screenHeight * p.SCALE, this.ty = -p.screenHeight * p.SCALE) : d == Te.SLIDE_LEFT ? (this.newSceneMatrix.tx = -p.screenWidth * p.SCALE, this.tx = p.screenWidth * p.SCALE) : d == Te.SLIDE_RIGHT ? (this.newSceneMatrix.tx =
          p.screenWidth * p.SCALE, this.tx = -p.screenWidth * p.SCALE) : this.complete = !0
      };
      k["com.stencyl.graphics.transitions.SlideTransition"] = Te;
      Te.__name__ = "com.stencyl.graphics.transitions.SlideTransition";
      Te.__super__ = S;
      Te.prototype = t(S.prototype, {
        sceneSpr: null,
        sceneCol: null,
        oldBitmap: null,
        newBitmap: null,
        drawBitmap: null,
        graphics: null,
        oldSceneMatrix: null,
        newSceneMatrix: null,
        osm_xy: null,
        nsm_xy: null,
        tx: null,
        ty: null,
        rect: null,
        start: function() {
          this.active = !0;
          this.oldBitmap = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight *
            p.SCALE | 0);
          this.oldBitmap.draw(this.sceneCol);
          this.oldBitmap.draw(this.sceneSpr);
          this.newBitmap = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.drawBitmap = new wa(p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
          this.rect = new Qe;
          this.graphics = this.rect.get_graphics();
          this.graphics.beginBitmapFill(this.oldBitmap);
          this.graphics.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE);
          this.graphics.endFill();
          p.engine.transitionLayer.addChild(this.rect);
          this.osm_xy = new Lf;
          this.nsm_xy =
            new Lf;
          this.osm_xy.tween(this.oldSceneMatrix.tx, this.tx, this.oldSceneMatrix.ty, this.ty, qa.linear, 1E3 * this.duration | 0);
          this.nsm_xy.tween(this.newSceneMatrix.tx, 0, this.newSceneMatrix.ty, 0, qa.linear, 1E3 * this.duration | 0);
          this.nsm_xy.doOnComplete(r(this, this.stop))
        },
        update: function(a) {
          this.oldSceneMatrix.tx = this.osm_xy.value1;
          this.oldSceneMatrix.ty = this.osm_xy.value2;
          this.newSceneMatrix.tx = this.nsm_xy.value1;
          this.newSceneMatrix.ty = this.nsm_xy.value2
        },
        draw: function(a) {
          this.graphics.clear();
          this.newBitmap.draw(this.sceneCol);
          this.newBitmap.draw(this.sceneSpr);
          this.drawBitmap.draw(this.newBitmap, this.newSceneMatrix);
          this.drawBitmap.draw(this.oldBitmap, this.oldSceneMatrix);
          this.graphics.beginBitmapFill(this.drawBitmap);
          this.graphics.drawRect(0, 0, p.screenWidth * p.SCALE, p.screenHeight * p.SCALE);
          this.graphics.endFill()
        },
        cleanup: function() {
          this.sceneSpr = null;
          null != this.rect && (p.engine.transitionLayer.removeChild(this.rect), this.rect = null)
        },
        __class__: Te
      });
      var Ug = function() {};
      k["com.stencyl.io.AbstractReader"] = Ug;
      Ug.__name__ = "com.stencyl.io.AbstractReader";
      Ug.__isInterface__ = !0;
      Ug.prototype = {
        accepts: null,
        read: null,
        __class__: Ug
      };
      var Xk = function() {};
      k["com.stencyl.io.ActorTypeReader"] = Xk;
      Xk.__name__ = "com.stencyl.io.ActorTypeReader";
      Xk.__interfaces__ = [Ug];
      Xk.prototype = {
        accepts: function(a) {
          return a == Pa.MBS_ACTOR_TYPE.getName()
        },
        read: function(a) {
          var b = a.getId(),
            c = a.getAtlasID(),
            d = a.getName(),
            e = new ri;
          e.fixedRotation = a.getFixedRotation();
          switch (a.getBodyType()) {
            case 0:
              var f = ra.b2_staticBody;
              break;
            case 1:
              f = ra.b2_kinematicBody;
              break;
            default:
              f = ra.b2_dynamicBody
          }
          e.type =
            f;
          e.linearDamping = a.getLinearDamping();
          e.angularDamping = a.getAngularDamping();
          e.friction = a.getFriction();
          e.bounciness = a.getRestitution();
          e.mass = a.getMass();
          e.aMass = a.getInertia();
          e.active = !0;
          e.bullet = !1;
          e.allowSleep = !1;
          e.awake = !0;
          e.ignoreGravity = a.getIgnoreGravity();
          e.bullet = a.getContinuous();
          f = a.getSprite();
          var g = a.getGroupID(),
            h = a.getPhysicsMode(),
            m = a.getAutoScale(),
            l = a.getPausable(),
            y = e.ignoreGravity || e.type == ra.b2_staticBody || e.type == ra.b2_kinematicBody,
            n = we.readBehaviors(a.getSnippets());
          a = a.getEventSnippetID();
          if (-1 < a) {
            var p = new Kj(a, new ua);
            n.h["" + a] = p
          }
          return new dg(b, c, d, g, f, n, e, h, m, l, y)
        },
        __class__: Xk
      };
      var we = function() {};
      k["com.stencyl.io.AttributeValues"] = we;
      we.__name__ = "com.stencyl.io.AttributeValues";
      we.readBehaviors = function(a) {
        for (var b = new ua, c = 0, d = a.length(); c < d;) {
          c++;
          var e = a.getNextObject();
          if (e.getEnabled()) {
            var f = e.getId();
            e = we.readBehaviorProperties(e.getProperties());
            e = new Kj(f, e);
            b.h["" + f] = e
          }
        }
        return b
      };
      we.readBehaviorProperties = function(a) {
        for (var b = new ua, c = 0, d = a.length(); c < d;) {
          c++;
          var e =
            a.getNextObject(),
            f = e.getId(),
            g = e.getType();
          e = we.readAttribute(g, e);
          b.h["" + f] = e
        }
        return b
      };
      we.readAttribute = function(a, b) {
        switch (a) {
          case "list":
            return we.readList(b.getValue());
          case "map":
            return we.readMap(b.getValue());
          default:
            return b.getValue()
        }
      };
      we.readAttributeDef = function(a, b) {
        switch (a) {
          case "list":
            return we.readList(b.getDefaultValue());
          case "map":
            return we.readMap(b.getDefaultValue());
          default:
            return b.getDefaultValue()
        }
      };
      we.readList = function(a) {
        if (null == a) return null;
        for (var b = [], c = 0, d = a.length(); c <
          d;) {
          var e = c++;
          b[e] = a.readObject()
        }
        return b
      };
      we.readMap = function(a) {
        if (null == a) return null;
        for (var b = new ua, c = 0, d = a.length(); c < d;) {
          c++;
          var e = a.getNextObject(),
            f = e.getKey();
          e = e.getValue();
          if (e instanceof vh) {
            for (var g = [], h = 0, m = e.length(); h < m;) h++, g.push(e.readObject());
            e = g
          } else e instanceof Ta && (e = we.readMap(e));
          b.h[f] = e
        }
        return b
      };
      var Uk = function() {};
      k["com.stencyl.io.BackgroundReader"] = Uk;
      Uk.__name__ = "com.stencyl.io.BackgroundReader";
      Uk.__interfaces__ = [Ug];
      Uk.prototype = {
        accepts: function(a) {
          return a ==
            ub.MBS_BACKGROUND.getName()
        },
        read: function(a) {
          var b = a.getId(),
            c = a.getAtlasID(),
            d = a.getName(),
            e = a.getXVelocity(),
            f = a.getYVelocity(),
            g = a.getXParallaxFactor(),
            h = a.getYParallaxFactor(),
            m = [];
          if (0 < a.getNumFrames())
            for (var l = a.getDurations(), y = 0, n = l.length(); y < n;) y++, m.push(l.readInt());
          a = a.getRepeats();
          return 0 != e || 0 != f ? new wh(b, c, d, m, g, h, a, e, f) : new Bg(b, c, d, m, g, h, a)
        },
        __class__: Uk
      };
      var vi = function() {};
      k["com.stencyl.io.BehaviorReader"] = vi;
      vi.__name__ = "com.stencyl.io.BehaviorReader";
      vi.readBehavior = function(a) {
        var b =
          a.getId(),
          c = a.getName(),
          d = a.getClassname(),
          e = a.getAttachedEvent(),
          f = new ua,
          g = a.getType();
        a = a.getAttributes();
        for (var h = 0, m = a.length(); h < m;) {
          h++;
          var l = a.getNextObject(),
            y = "" + l.getId();
          l = vi.readAttribute(l, e);
          f.h[y] = l
        }
        return new $k(null, null, b, c, d, !0, !0, f, g, e)
      };
      vi.readAttribute = function(a, b) {
        var c = a.getId(),
          d = a.getName(),
          e = a.getFullname();
        b = b || a.getHidden();
        var f = a.getType();
        a = we.readAttributeDef(f, a);
        return new wi(c, d, e, a, f, null, b)
      };
      vi.prototype = {
        __class__: vi
      };
      var Zk = function() {};
      k["com.stencyl.io.FontReader"] =
        Zk;
      Zk.__name__ = "com.stencyl.io.FontReader";
      Zk.__interfaces__ = [Ug];
      Zk.prototype = {
        accepts: function(a) {
          return a == hc.MBS_FONT.getName()
        },
        read: function(a) {
          return new Oe(a.getId(), a.getAtlasID(), a.getName(), !1)
        },
        __class__: Zk
      };
      var Bd = function() {};
      k["com.stencyl.io.ShapeReader"] = Bd;
      Bd.__name__ = "com.stencyl.io.ShapeReader";
      Bd.readPoint = function(a) {
        return new la(a.getX(), a.getY())
      };
      Bd.readPoints = function(a) {
        for (var b = Array(a.length()), c = 0, d = a.length(); c < d;) {
          var e = c++,
            f = a.getNextObject();
          b[e] = new la(f.getX(),
            f.getY())
        }
        return b
      };
      Bd.createCircle = function(a, b, c, d, e) {
        null == e && (e = -1);
        null == d && (d = -1);
        var f = 2 * a,
          g = new Qc;
        g.m_radius = p.toPhysicalUnits(a);
        g.m_p.x = p.toPhysicalUnits(b - (d - f) / 2);
        g.m_p.y = p.toPhysicalUnits(c - (e - f) / 2);
        return g
      };
      Bd.createPolygon = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        var e = [];
        var f = b.length;
        var g = 0;
        c = -c / 2 | 0;
        d = -d / 2 | 0;
        if ("MbsPolygon" == a || "MbsPolyRegion" == a) {
          for (g = 0; g < f;) {
            var h = b[g];
            a = p.toPhysicalUnits(h.x + c);
            h = p.toPhysicalUnits(h.y + d);
            e[g] = new C(a, h);
            ++g
          }
          Bd.EnsureCorrectVertexDirection(e);
          return Lb.asArray(e, e.length)
        }
        if ("MbsWireframe" == a) {
          for (; g < f;) h = b[g], e.push(new C(p.toPhysicalUnits(h.x), p.toPhysicalUnits(h.y))), ++g;
          b = Bd.getWidth(e);
          f = Bd.getHeight(e);
          g = [];
          c = 0;
          for (d = e.length + 1; c < d;) {
            var m = c++;
            a = new ug(e[m % e.length], e[(m + 1) % e.length]);
            g.push(a);
            a.m_hasVertex0 = !0;
            a.m_hasVertex3 = !0;
            h = e[(m - 1) % e.length];
            m = e[(m + 2) % e.length];
            null == h && (h = e[e.length - 1]);
            null == m && (m = e[0]);
            a.m_v0 = h;
            a.m_v3 = m
          }
          e = new Za;
          e.h[0] = g;
          e.h[1] = b;
          e.h[2] = f;
          return e
        }
        return null
      };
      Bd.CheckVertexDirection = function(a) {
        if (2 <
          a.length) {
          for (var b = 0, c = 0; 0 == b && c < a.length - 2;) b = a[c].winding(a[c + 1], a[c + 2]), ++c;
          if (0 > b) return !1
        }
        return !0
      };
      Bd.EnsureCorrectVertexDirection = function(a) {
        return Bd.CheckVertexDirection(a) ? !0 : (Bd.ReverseVertices(a), !1)
      };
      Bd.ReverseVertices = function(a) {
        for (var b = 0, c = a.length - 1, d; c > b;) d = a[b].x, a[b].x = a[c].x, a[c].x = d, d = a[b].y, a[b].y = a[c].y, a[c].y = d, ++b, --c
      };
      Bd.getWidth = function(a) {
        for (var b = 1E7, c = 0, d = 0; d < a.length;) {
          var e = a[d];
          ++d;
          b = Math.min(b, e.x);
          c = Math.max(c, e.x)
        }
        return c - b
      };
      Bd.getHeight = function(a) {
        for (var b =
            1E7, c = 0, d = 0; d < a.length;) {
          var e = a[d];
          ++d;
          b = Math.min(b, e.y);
          c = Math.max(c, e.y)
        }
        return c - b
      };
      var Vk = function() {};
      k["com.stencyl.io.SoundReader"] = Vk;
      Vk.__name__ = "com.stencyl.io.SoundReader";
      Vk.__interfaces__ = [Ug];
      Vk.prototype = {
        accepts: function(a) {
          return a == xc.MBS_MUSIC.getName()
        },
        read: function(a) {
          var b = a.getStream(),
            c = a.getLoop(),
            d = a.getPan(),
            e = a.getVolume(),
            f = a.getType();
          return new Qh(a.getId(), a.getName(), b, c, d, e, f, a.getAtlasID())
        },
        __class__: Vk
      };
      var Yk = function() {};
      k["com.stencyl.io.SpriteReader"] = Yk;
      Yk.__name__ = "com.stencyl.io.SpriteReader";
      Yk.__interfaces__ = [Ug];
      Yk.prototype = {
        accepts: function(a) {
          return a == vc.MBS_SPRITE.getName()
        },
        read: function(a) {
          var b = a.getDefaultAnimation(),
            c = a.getReadableImages();
          b = new ui(a.getId(), a.getAtlasID(), a.getName(), b, c);
          a = a.getAnimations();
          c = 0;
          for (var d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject();
            e = this.readAnimation(e, b);
            b.animations.h[e.animID] = e
          }
          return b
        },
        readAnimation: function(a, b) {
          for (var c = a.getId(), d = a.getName(), e = a.getWidth(), f = a.getHeight(), g = a.getOriginX(),
              h = a.getOriginY(), m = a.getNumFrames(), l = a.getAcross(), y = a.getDown(), n = this.readSimpleShapes(a, e / l | 0, f / y | 0), p = this.readShapes(a, e / l | 0, f / y | 0), k = a.getLoop(), q = a.getSync(), u = [], v = a.getDurations(), T = 0, ja = v.length(); T < ja;) a = T++, u[a] = v.readInt(), u[a] = Math.floor(u[a] / 10), u[a] *= 10;
          return new ve(c, d, b, n, p, k, q, e, f, g, h, u, m, l, y)
        },
        readSimpleShapes: function(a, b, c) {
          b = new Za;
          a = a.getShapes();
          c = 0;
          for (var d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject(),
              f = e.getId(),
              g = e.getGroupID(),
              h = e.getSensor();
            e = e.getShape();
            if (e instanceof Yc && (e = e.getPoints(), 4 == e.length())) {
              for (var m = e.getNextObject(), l = 0, y = 1E7, n = 1E7, p = 0, k = 0, q = m.getX() | 0, u = m.getY() | 0; l < e.length();) y = Math.min(y, m.getX()) | 0, n = Math.min(n, m.getY()) | 0, p = Math.max(p, m.getX()) | 0, k = Math.max(k, m.getY()) | 0, ++l, l < e.length() && (m = e.getNextObject());
              g = new od(p - y, k - n, q, u, !h, g);
              b.h[f] = g
            }
          }
          return b
        },
        readShapes: function(a, b, c) {
          var d = new Za;
          a = a.getShapes();
          for (var e = 0, f = a.length(); e < f;) {
            e++;
            var g = a.getNextObject(),
              h = g.getId();
            g.getGroupID();
            var m = g.getSensor(),
              l = g.getShape();
            if (l instanceof Ld) l = Bd.createCircle(l.getRadius(), l.getPosition().getX(), l.getPosition().getY(), b, c);
            else {
              var y = l;
              l = Bd.createPolygon(l.getMbsType().getName(), Bd.readPoints(y.getPoints()).slice(0), b, c)
            }
            y = new If;
            y.shape = l;
            y.density = g.getDensity();
            y.friction = g.getFriction();
            y.restitution = g.getRestitution();
            y.isSensor = m;
            y.groupID = g.getGroupID();
            d.h[h] = y
          }
          return d
        },
        __class__: Yk
      };
      var Wk = function() {};
      k["com.stencyl.io.TilesetReader"] = Wk;
      Wk.__name__ = "com.stencyl.io.TilesetReader";
      Wk.__interfaces__ = [Ug];
      Wk.prototype = {
        accepts: function(a) {
          return a ==
            ic.MBS_TILESET.getName()
        },
        read: function(a) {
          var b = a.getAcross(),
            c = a.getDown(),
            d = a.getTileWidth(),
            e = a.getTileHeight(),
            f = a.getReadableImages(),
            g = [];
          b = new tf(a.getId(), a.getAtlasID(), a.getName(), b, c, d, e, f, g);
          a = a.getTiles();
          c = 0;
          for (d = a.length(); c < d;) c++, e = a.getNextObject(), g[e.getId()] = this.readTile(e, b);
          b.isAtlasActive() && b.loadGraphics();
          return b
        },
        readTile: function(a, b) {
          for (var c = a.getId(), d = a.getCollision(), e = a.getMetadata(), f = a.getFrames(), g = [], h = 0, m = a.getDurations(), l = 0, y = m.length(); l < y;) l++, g[h] =
            m.readInt(), g[h] = Math.floor(g[h] / 10), g[h] *= 10, ++h;
          h = null; - 1 != a.getAutotile() && (l = Bb.get().autotileFormats, y = a.getAutotile(), h = l.h[y]);
          m = null;
          if (0 != a.getAutotileMerge().length())
            for (m = new Za, a = a.getAutotileMerge(), l = 0, y = a.length(); l < y;) {
              l++;
              var n = a.readInt();
              m.h[n] = n
            }
          return new Rc(c, d, e, f, g, h, m, b)
        },
        __class__: Wk
      };
      var mb = function(a) {
        this.data = a
      };
      k["mbs.core.MbsObject"] = mb;
      mb.__name__ = "mbs.core.MbsObject";
      mb.prototype = {
        data: null,
        address: null,
        getMbs: function() {
          return this.data
        },
        getAddress: function() {
          return this.address
        },
        setAddress: function(a) {
          this.address = a
        },
        getMbsType: function() {
          throw F.thrown("Must override getMbsType in MbsObject subclasses");
        },
        __class__: mb
      };
      var tb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.MbsResource"] = tb;
      tb.__name__ = "com.stencyl.io.mbs.MbsResource";
      tb.initializeType = function() {
        null == tb.MBS_RESOURCE && (tb.MBS_RESOURCE = new zb("MbsResource"), tb.MBS_RESOURCE.setInstantiator(function(a) {
          return new tb(a)
        }), tb.atlasID = tb.MBS_RESOURCE.createField("atlasID", H.INTEGER), tb.description = tb.MBS_RESOURCE.createField("description",
          H.STRING), tb.id = tb.MBS_RESOURCE.createField("id", H.INTEGER), tb.$name = tb.MBS_RESOURCE.createField("name", H.STRING))
      };
      tb.new_MbsResource_list = function(a) {
        return new Ta(a, tb.MBS_RESOURCE, new tb(a))
      };
      tb.__super__ = mb;
      tb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return tb.MBS_RESOURCE
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(tb.MBS_RESOURCE.getSize()))
        },
        getAtlasID: function() {
          return this.data.readInt(this.address + tb.atlasID.address)
        },
        setAtlasID: function(a) {
          this.data.writeInt(this.address +
            tb.atlasID.address, a)
        },
        getDescription: function() {
          return this.data.readString(this.address + tb.description.address)
        },
        setDescription: function(a) {
          this.data.writeString(this.address + tb.description.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + tb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + tb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + tb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + tb.$name.address, a)
        },
        __class__: tb
      });
      var ub = function(a) {
        this.data = a;
        this._durations = new Mf(a)
      };
      k["com.stencyl.io.mbs.MbsBackground"] = ub;
      ub.__name__ = "com.stencyl.io.mbs.MbsBackground";
      ub.initializeType = function() {
        null == ub.MBS_BACKGROUND && (tb.initializeType(), ub.MBS_BACKGROUND = new zb("MbsBackground"), ub.MBS_BACKGROUND.setInstantiator(function(a) {
          return new ub(a)
        }), ub.MBS_BACKGROUND.inherit(tb.MBS_RESOURCE), ub.readableImages = ub.MBS_BACKGROUND.createField("readableImages", H.BOOLEAN), ub.durations = ub.MBS_BACKGROUND.createField("durations",
          H.LIST), ub.height = ub.MBS_BACKGROUND.createField("height", H.INTEGER), ub.numFrames = ub.MBS_BACKGROUND.createField("numFrames", H.INTEGER), ub.repeats = ub.MBS_BACKGROUND.createField("repeats", H.BOOLEAN), ub.resized = ub.MBS_BACKGROUND.createField("resized", H.BOOLEAN), ub.width = ub.MBS_BACKGROUND.createField("width", H.INTEGER), ub.xParallaxFactor = ub.MBS_BACKGROUND.createField("xParallaxFactor", H.FLOAT), ub.xVelocity = ub.MBS_BACKGROUND.createField("xVelocity", H.FLOAT), ub.yParallaxFactor = ub.MBS_BACKGROUND.createField("yParallaxFactor",
          H.FLOAT), ub.yVelocity = ub.MBS_BACKGROUND.createField("yVelocity", H.FLOAT))
      };
      ub.new_MbsBackground_list = function(a) {
        return new Ta(a, ub.MBS_BACKGROUND, new ub(a))
      };
      ub.__super__ = tb;
      ub.prototype = t(tb.prototype, {
        getMbsType: function() {
          return ub.MBS_BACKGROUND
        },
        _durations: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(ub.MBS_BACKGROUND.getSize()))
        },
        getReadableImages: function() {
          return this.data.readBool(this.address + ub.readableImages.address)
        },
        setReadableImages: function(a) {
          this.data.writeBool(this.address +
            ub.readableImages.address, a)
        },
        getDurations: function() {
          this._durations.setAddress(this.data.readInt(this.address + ub.durations.address));
          return this._durations
        },
        createDurations: function(a) {
          this._durations.allocateNew(a);
          this.data.writeInt(this.address + ub.durations.address, this._durations.getAddress());
          return this._durations
        },
        getHeight: function() {
          return this.data.readInt(this.address + ub.height.address)
        },
        setHeight: function(a) {
          this.data.writeInt(this.address + ub.height.address, a)
        },
        getNumFrames: function() {
          return this.data.readInt(this.address +
            ub.numFrames.address)
        },
        setNumFrames: function(a) {
          this.data.writeInt(this.address + ub.numFrames.address, a)
        },
        getRepeats: function() {
          return this.data.readBool(this.address + ub.repeats.address)
        },
        setRepeats: function(a) {
          this.data.writeBool(this.address + ub.repeats.address, a)
        },
        getResized: function() {
          return this.data.readBool(this.address + ub.resized.address)
        },
        setResized: function(a) {
          this.data.writeBool(this.address + ub.resized.address, a)
        },
        getWidth: function() {
          return this.data.readInt(this.address + ub.width.address)
        },
        setWidth: function(a) {
          this.data.writeInt(this.address + ub.width.address, a)
        },
        getXParallaxFactor: function() {
          return this.data.readFloat(this.address + ub.xParallaxFactor.address)
        },
        setXParallaxFactor: function(a) {
          this.data.writeFloat(this.address + ub.xParallaxFactor.address, a)
        },
        getXVelocity: function() {
          return this.data.readFloat(this.address + ub.xVelocity.address)
        },
        setXVelocity: function(a) {
          this.data.writeFloat(this.address + ub.xVelocity.address, a)
        },
        getYParallaxFactor: function() {
          return this.data.readFloat(this.address +
            ub.yParallaxFactor.address)
        },
        setYParallaxFactor: function(a) {
          this.data.writeFloat(this.address + ub.yParallaxFactor.address, a)
        },
        getYVelocity: function() {
          return this.data.readFloat(this.address + ub.yVelocity.address)
        },
        setYVelocity: function(a) {
          this.data.writeFloat(this.address + ub.yVelocity.address, a)
        },
        __class__: ub
      });
      var Cd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.MbsBlank"] = Cd;
      Cd.__name__ = "com.stencyl.io.mbs.MbsBlank";
      Cd.initializeType = function() {
        null == Cd.MBS_BLANK && (Cd.MBS_BLANK = new zb("MbsBlank"),
          Cd.MBS_BLANK.setInstantiator(function(a) {
            return new Cd(a)
          }), Cd.$name = Cd.MBS_BLANK.createField("name", H.STRING), Cd.type = Cd.MBS_BLANK.createField("type", H.STRING))
      };
      Cd.new_MbsBlank_list = function(a) {
        return new Ta(a, Cd.MBS_BLANK, new Cd(a))
      };
      Cd.__super__ = mb;
      Cd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Cd.MBS_BLANK
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Cd.MBS_BLANK.getSize()))
        },
        getName: function() {
          return this.data.readString(this.address + Cd.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address +
            Cd.$name.address, a)
        },
        getType: function() {
          return this.data.readString(this.address + Cd.type.address)
        },
        setType: function(a) {
          this.data.writeString(this.address + Cd.type.address, a)
        },
        __class__: Cd
      });
      var Gb = function(a) {
        this.data = a;
        this._blanks = new Ta(a, Cd.MBS_BLANK, new Cd(a))
      };
      k["com.stencyl.io.mbs.MbsCustomBlock"] = Gb;
      Gb.__name__ = "com.stencyl.io.mbs.MbsCustomBlock";
      Gb.initializeType = function() {
        null == Gb.MBS_CUSTOM_BLOCK && (tb.initializeType(), Gb.MBS_CUSTOM_BLOCK = new zb("MbsCustomBlock"), Gb.MBS_CUSTOM_BLOCK.setInstantiator(function(a) {
            return new Gb(a)
          }),
          Gb.MBS_CUSTOM_BLOCK.inherit(tb.MBS_RESOURCE), Gb.blocktag = Gb.MBS_CUSTOM_BLOCK.createField("blocktag", H.STRING), Gb.blocktype = Gb.MBS_CUSTOM_BLOCK.createField("blocktype", H.STRING), Gb.code = Gb.MBS_CUSTOM_BLOCK.createField("code", H.STRING), Gb.global = Gb.MBS_CUSTOM_BLOCK.createField("global", H.BOOLEAN), Gb.gui = Gb.MBS_CUSTOM_BLOCK.createField("gui", H.STRING), Gb.message = Gb.MBS_CUSTOM_BLOCK.createField("message", H.STRING), Gb.returnType = Gb.MBS_CUSTOM_BLOCK.createField("returnType", H.STRING), Gb.snippetID = Gb.MBS_CUSTOM_BLOCK.createField("snippetID",
            H.INTEGER), Gb.blanks = Gb.MBS_CUSTOM_BLOCK.createField("blanks", H.LIST))
      };
      Gb.new_MbsCustomBlock_list = function(a) {
        return new Ta(a, Gb.MBS_CUSTOM_BLOCK, new Gb(a))
      };
      Gb.__super__ = tb;
      Gb.prototype = t(tb.prototype, {
        getMbsType: function() {
          return Gb.MBS_CUSTOM_BLOCK
        },
        _blanks: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Gb.MBS_CUSTOM_BLOCK.getSize()))
        },
        getBlocktag: function() {
          return this.data.readString(this.address + Gb.blocktag.address)
        },
        setBlocktag: function(a) {
          this.data.writeString(this.address +
            Gb.blocktag.address, a)
        },
        getBlocktype: function() {
          return this.data.readString(this.address + Gb.blocktype.address)
        },
        setBlocktype: function(a) {
          this.data.writeString(this.address + Gb.blocktype.address, a)
        },
        getCode: function() {
          return this.data.readString(this.address + Gb.code.address)
        },
        setCode: function(a) {
          this.data.writeString(this.address + Gb.code.address, a)
        },
        getGlobal: function() {
          return this.data.readBool(this.address + Gb.global.address)
        },
        setGlobal: function(a) {
          this.data.writeBool(this.address + Gb.global.address,
            a)
        },
        getGui: function() {
          return this.data.readString(this.address + Gb.gui.address)
        },
        setGui: function(a) {
          this.data.writeString(this.address + Gb.gui.address, a)
        },
        getMessage: function() {
          return this.data.readString(this.address + Gb.message.address)
        },
        setMessage: function(a) {
          this.data.writeString(this.address + Gb.message.address, a)
        },
        getReturnType: function() {
          return this.data.readString(this.address + Gb.returnType.address)
        },
        setReturnType: function(a) {
          this.data.writeString(this.address + Gb.returnType.address, a)
        },
        getSnippetID: function() {
          return this.data.readInt(this.address +
            Gb.snippetID.address)
        },
        setSnippetID: function(a) {
          this.data.writeInt(this.address + Gb.snippetID.address, a)
        },
        getBlanks: function() {
          this._blanks.setAddress(this.data.readInt(this.address + Gb.blanks.address));
          return this._blanks
        },
        createBlanks: function(a) {
          this._blanks.allocateNew(a);
          this.data.writeInt(this.address + Gb.blanks.address, this._blanks.getAddress());
          return this._blanks
        },
        __class__: Gb
      });
      var hc = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.MbsFont"] = hc;
      hc.__name__ = "com.stencyl.io.mbs.MbsFont";
      hc.initializeType =
        function() {
          null == hc.MBS_FONT && (tb.initializeType(), hc.MBS_FONT = new zb("MbsFont"), hc.MBS_FONT.setInstantiator(function(a) {
            return new hc(a)
          }), hc.MBS_FONT.inherit(tb.MBS_RESOURCE), hc.alphabet = hc.MBS_FONT.createField("alphabet", H.STRING), hc.readableImages = hc.MBS_FONT.createField("readableImages", H.BOOLEAN), hc.height = hc.MBS_FONT.createField("height", H.INTEGER), hc.offsets = hc.MBS_FONT.createField("offsets", H.STRING), hc.prerendered = hc.MBS_FONT.createField("prerendered", H.BOOLEAN), hc.rowHeight = hc.MBS_FONT.createField("rowHeight",
            H.INTEGER))
        };
      hc.new_MbsFont_list = function(a) {
        return new Ta(a, hc.MBS_FONT, new hc(a))
      };
      hc.__super__ = tb;
      hc.prototype = t(tb.prototype, {
        getMbsType: function() {
          return hc.MBS_FONT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(hc.MBS_FONT.getSize()))
        },
        getAlphabet: function() {
          return this.data.readString(this.address + hc.alphabet.address)
        },
        setAlphabet: function(a) {
          this.data.writeString(this.address + hc.alphabet.address, a)
        },
        getReadableImages: function() {
          return this.data.readBool(this.address + hc.readableImages.address)
        },
        setReadableImages: function(a) {
          this.data.writeBool(this.address + hc.readableImages.address, a)
        },
        getHeight: function() {
          return this.data.readInt(this.address + hc.height.address)
        },
        setHeight: function(a) {
          this.data.writeInt(this.address + hc.height.address, a)
        },
        getOffsets: function() {
          return this.data.readString(this.address + hc.offsets.address)
        },
        setOffsets: function(a) {
          this.data.writeString(this.address + hc.offsets.address, a)
        },
        getPrerendered: function() {
          return this.data.readBool(this.address + hc.prerendered.address)
        },
        setPrerendered: function(a) {
          this.data.writeBool(this.address + hc.prerendered.address, a)
        },
        getRowHeight: function() {
          return this.data.readInt(this.address + hc.rowHeight.address)
        },
        setRowHeight: function(a) {
          this.data.writeInt(this.address + hc.rowHeight.address, a)
        },
        __class__: hc
      });
      var xc = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.MbsMusic"] = xc;
      xc.__name__ = "com.stencyl.io.mbs.MbsMusic";
      xc.initializeType = function() {
        null == xc.MBS_MUSIC && (tb.initializeType(), xc.MBS_MUSIC = new zb("MbsMusic"), xc.MBS_MUSIC.setInstantiator(function(a) {
            return new xc(a)
          }),
          xc.MBS_MUSIC.inherit(tb.MBS_RESOURCE), xc.loop = xc.MBS_MUSIC.createField("loop", H.BOOLEAN), xc.pan = xc.MBS_MUSIC.createField("pan", H.INTEGER), xc.stream = xc.MBS_MUSIC.createField("stream", H.BOOLEAN), xc.type = xc.MBS_MUSIC.createField("type", H.STRING), xc.volume = xc.MBS_MUSIC.createField("volume", H.INTEGER))
      };
      xc.new_MbsMusic_list = function(a) {
        return new Ta(a, xc.MBS_MUSIC, new xc(a))
      };
      xc.__super__ = tb;
      xc.prototype = t(tb.prototype, {
        getMbsType: function() {
          return xc.MBS_MUSIC
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(xc.MBS_MUSIC.getSize()))
        },
        getLoop: function() {
          return this.data.readBool(this.address + xc.loop.address)
        },
        setLoop: function(a) {
          this.data.writeBool(this.address + xc.loop.address, a)
        },
        getPan: function() {
          return this.data.readInt(this.address + xc.pan.address)
        },
        setPan: function(a) {
          this.data.writeInt(this.address + xc.pan.address, a)
        },
        getStream: function() {
          return this.data.readBool(this.address + xc.stream.address)
        },
        setStream: function(a) {
          this.data.writeBool(this.address + xc.stream.address, a)
        },
        getType: function() {
          return this.data.readString(this.address +
            xc.type.address)
        },
        setType: function(a) {
          this.data.writeString(this.address + xc.type.address, a)
        },
        getVolume: function() {
          return this.data.readInt(this.address + xc.volume.address)
        },
        setVolume: function(a) {
          this.data.writeInt(this.address + xc.volume.address, a)
        },
        __class__: xc
      });
      var uf = function(a, b) {
        this.name = a;
        this.size = b
      };
      k["mbs.core.MbsType"] = uf;
      uf.__name__ = "mbs.core.MbsType";
      uf.prototype = {
        name: null,
        size: null,
        getName: function() {
          return this.name
        },
        getSize: function() {
          return this.size
        },
        toString: function() {
          return "MbsType [name=" +
            this.getName() + "]"
        },
        createInstance: function(a) {
          throw F.thrown("Can't create an instance of type " + this.name);
        },
        __class__: uf
      };
      var H = function() {};
      k["mbs.core.MbsTypes"] = H;
      H.__name__ = "mbs.core.MbsTypes";
      var yc = function(a) {
        this.data = a
      };
      k["mbs.core.header.MbsHeader"] = yc;
      yc.__name__ = "mbs.core.header.MbsHeader";
      yc.initializeType = function() {
        null == yc.MBS_HEADER && (yc.MBS_HEADER = new zb("MbsHeader"), yc.MBS_HEADER.setInstantiator(function(a) {
            return new yc(a)
          }), yc.version = yc.MBS_HEADER.createField("version", H.INTEGER),
          yc.typeTableHash = yc.MBS_HEADER.createField("typeTableHash", H.INTEGER), yc.typeTablePointer = yc.MBS_HEADER.createField("typeTablePointer", H.INTEGER), yc.stringTablePointer = yc.MBS_HEADER.createField("stringTablePointer", H.INTEGER), yc.root = yc.MBS_HEADER.createField("root", H.DYNAMIC))
      };
      yc.new_MbsHeader_list = function(a) {
        return new Ta(a, yc.MBS_HEADER, new yc(a))
      };
      yc.__super__ = mb;
      yc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return yc.MBS_HEADER
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(yc.MBS_HEADER.getSize()))
        },
        getVersion: function() {
          return this.data.readInt(this.address + yc.version.address)
        },
        setVersion: function(a) {
          this.data.writeInt(this.address + yc.version.address, a)
        },
        getTypeTableHash: function() {
          return this.data.readInt(this.address + yc.typeTableHash.address)
        },
        setTypeTableHash: function(a) {
          this.data.writeInt(this.address + yc.typeTableHash.address, a)
        },
        getTypeTablePointer: function() {
          return this.data.readInt(this.address + yc.typeTablePointer.address)
        },
        setTypeTablePointer: function(a) {
          this.data.writeInt(this.address +
            yc.typeTablePointer.address, a)
        },
        getStringTablePointer: function() {
          return this.data.readInt(this.address + yc.stringTablePointer.address)
        },
        setStringTablePointer: function(a) {
          this.data.writeInt(this.address + yc.stringTablePointer.address, a)
        },
        getRoot: function() {
          return ie.readDynamic(this.data, this.address + yc.root.address)
        },
        setRoot: function(a) {
          ie.writeDynamic(this.data, this.address + yc.root.address, a)
        },
        __class__: yc
      });
      var zb = function(a) {
        uf.call(this, a, 0);
        this.fields = []
      };
      k["mbs.core.ComposedType"] = zb;
      zb.__name__ =
        "mbs.core.ComposedType";
      zb.__super__ = uf;
      zb.prototype = t(uf.prototype, {
        parent: null,
        fields: null,
        inherit: function(a) {
          this.parent = a;
          this.size = a.getSize()
        },
        createField: function(a, b) {
          a = new zi(a, b, this.size);
          this.fields.push(a);
          this.size += b.getSize();
          return a
        },
        getParent: function() {
          return this.parent
        },
        getFields: function() {
          return this.fields
        },
        instantiator: null,
        setInstantiator: function(a) {
          this.instantiator = a
        },
        createInstance: function(a) {
          return null != this.instantiator ? this.instantiator(a) : uf.prototype.createInstance.call(this,
            a)
        },
        createList: function(a) {
          return new Ta(a, this, this.createInstance(a))
        },
        __class__: zb
      });
      var Sc = function(a) {
        this.data = a
      };
      k["mbs.core.header.MbsTypeInfo"] = Sc;
      Sc.__name__ = "mbs.core.header.MbsTypeInfo";
      Sc.initializeType = function() {
        null == Sc.MBS_TYPE_INFO && (Sc.MBS_TYPE_INFO = new zb("MbsTypeInfo"), Sc.MBS_TYPE_INFO.setInstantiator(function(a) {
          return new Sc(a)
        }), Sc.$name = Sc.MBS_TYPE_INFO.createField("name", H.STRING), Sc.parent = Sc.MBS_TYPE_INFO.createField("parent", H.STRING), Sc.fieldsPointer = Sc.MBS_TYPE_INFO.createField("fieldsPointer",
          H.INTEGER), Sc.size = Sc.MBS_TYPE_INFO.createField("size", H.INTEGER))
      };
      Sc.new_MbsTypeInfo_list = function(a) {
        return new Ta(a, Sc.MBS_TYPE_INFO, new Sc(a))
      };
      Sc.__super__ = mb;
      Sc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Sc.MBS_TYPE_INFO
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Sc.MBS_TYPE_INFO.getSize()))
        },
        getName: function() {
          return this.data.readString(this.address + Sc.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Sc.$name.address, a)
        },
        getParent: function() {
          return this.data.readString(this.address +
            Sc.parent.address)
        },
        setParent: function(a) {
          this.data.writeString(this.address + Sc.parent.address, a)
        },
        getFieldsPointer: function() {
          return this.data.readInt(this.address + Sc.fieldsPointer.address)
        },
        setFieldsPointer: function(a) {
          this.data.writeInt(this.address + Sc.fieldsPointer.address, a)
        },
        getSize: function() {
          return this.data.readInt(this.address + Sc.size.address)
        },
        setSize: function(a) {
          this.data.writeInt(this.address + Sc.size.address, a)
        },
        __class__: Sc
      });
      var fd = function(a) {
        this.data = a
      };
      k["mbs.core.header.MbsFieldInfo"] =
        fd;
      fd.__name__ = "mbs.core.header.MbsFieldInfo";
      fd.initializeType = function() {
        null == fd.MBS_FIELD_INFO && (fd.MBS_FIELD_INFO = new zb("MbsFieldInfo"), fd.MBS_FIELD_INFO.setInstantiator(function(a) {
          return new fd(a)
        }), fd.$name = fd.MBS_FIELD_INFO.createField("name", H.STRING), fd.type = fd.MBS_FIELD_INFO.createField("type", H.STRING), fd.fieldAddress = fd.MBS_FIELD_INFO.createField("fieldAddress", H.INTEGER))
      };
      fd.new_MbsFieldInfo_list = function(a) {
        return new Ta(a, fd.MBS_FIELD_INFO, new fd(a))
      };
      fd.__super__ = mb;
      fd.prototype =
        t(mb.prototype, {
          getMbsType: function() {
            return fd.MBS_FIELD_INFO
          },
          allocateNew: function() {
            this.setAddress(this.data.allocate(fd.MBS_FIELD_INFO.getSize()))
          },
          getName: function() {
            return this.data.readString(this.address + fd.$name.address)
          },
          setName: function(a) {
            this.data.writeString(this.address + fd.$name.address, a)
          },
          getType: function() {
            return this.data.readString(this.address + fd.type.address)
          },
          setType: function(a) {
            this.data.writeString(this.address + fd.type.address, a)
          },
          getFieldAddress: function() {
            return this.data.readInt(this.address +
              fd.fieldAddress.address)
          },
          setFieldAddress: function(a) {
            this.data.writeInt(this.address + fd.fieldAddress.address, a)
          },
          __class__: fd
        });
      var Sh = function() {
        this.types = Sh.basicTypes.slice();
        this.typecodes = new pc;
        this.addTypes();
        for (var a = 0, b = 0, c = this.types; b < c.length;) {
          var d = c[b];
          ++b;
          this.typecodes.set(d, a++)
        }
      };
      k["mbs.core.MbsTypedefSet"] = Sh;
      Sh.__name__ = "mbs.core.MbsTypedefSet";
      Sh.prototype = {
        types: null,
        typecodes: null,
        getTypes: function() {
          return this.types
        },
        addTypes: function() {},
        getHash: function() {
          return 0
        },
        getTypecode: function(a) {
          return this.typecodes.h[a.__id__]
        },
        getType: function(a) {
          return this.types[a]
        },
        __class__: Sh
      };
      var lf = function() {
        Sh.call(this)
      };
      k["com.stencyl.io.mbs.Typedefs"] = lf;
      lf.__name__ = "com.stencyl.io.mbs.Typedefs";
      lf.get = function() {
        null == lf.instance && (lf.instance = new lf);
        return lf.instance
      };
      lf.__super__ = Sh;
      lf.prototype = t(Sh.prototype, {
        addTypes: function() {
          tb.initializeType();
          this.types.push(tb.MBS_RESOURCE);
          ub.initializeType();
          this.types.push(ub.MBS_BACKGROUND);
          Gb.initializeType();
          this.types.push(Gb.MBS_CUSTOM_BLOCK);
          Cd.initializeType();
          this.types.push(Cd.MBS_BLANK);
          hc.initializeType();
          this.types.push(hc.MBS_FONT);
          xc.initializeType();
          this.types.push(xc.MBS_MUSIC);
          Pa.initializeType();
          this.types.push(Pa.MBS_ACTOR_TYPE);
          vc.initializeType();
          this.types.push(vc.MBS_SPRITE);
          fb.initializeType();
          this.types.push(fb.MBS_ANIMATION);
          Rb.initializeType();
          this.types.push(Rb.MBS_ANIM_SHAPE);
          tc.initializeType();
          this.types.push(tc.MBS_GAME);
          Nc.initializeType();
          this.types.push(Nc.MBS_ATLAS);
          Dd.initializeType();
          this.types.push(Dd.MBS_COLLISION_SHAPE);
          Ed.initializeType();
          this.types.push(Ed.MBS_COLLISION_GROUP);
          Fd.initializeType();
          this.types.push(Fd.MBS_COLLISION_PAIR);
          rd.initializeType();
          this.types.push(rd.MBS_SCENE_HEADER);
          ic.initializeType();
          this.types.push(ic.MBS_TILESET);
          Sb.initializeType();
          this.types.push(Sb.MBS_TILE);
          na.initializeType();
          this.types.push(na.MBS_SCENE);
          gb.initializeType();
          this.types.push(gb.MBS_ACTOR_INSTANCE);
          je.initializeType();
          this.types.push(je.MBS_COLOR_BACKGROUND);
          Gd.initializeType();
          this.types.push(Gd.MBS_GRADIENT_BACKGROUND);
          pb.initializeType();
          this.types.push(pb.MBS_LAYER);
          ke.initializeType();
          this.types.push(ke.MBS_INTERACTIVE_LAYER);
          Hd.initializeType();
          this.types.push(Hd.MBS_IMAGE_BACKGROUND);
          Wb.initializeType();
          this.types.push(Wb.MBS_JOINT);
          Id.initializeType();
          this.types.push(Id.MBS_STICK_JOINT);
          jc.initializeType();
          this.types.push(jc.MBS_HINGE_JOINT);
          Tb.initializeType();
          this.types.push(Tb.MBS_SLIDING_JOINT);
          Zb.initializeType();
          this.types.push(Zb.MBS_REGION);
          ce.initializeType();
          this.types.push(ce.MBS_TERRAIN_REGION);
          uc.initializeType();
          this.types.push(uc.MBS_POINT);
          Ud.initializeType();
          this.types.push(Ud.MBS_SHAPE);
          Ld.initializeType();
          this.types.push(Ld.MBS_CIRCLE);
          Yc.initializeType();
          this.types.push(Yc.MBS_POLYGON);
          xd.initializeType();
          this.types.push(xd.MBS_POLY_REGION);
          le.initializeType();
          this.types.push(le.MBS_WIREFRAME);
          jb.initializeType();
          this.types.push(jb.MBS_SNIPPET_DEF);
          Eb.initializeType();
          this.types.push(Eb.MBS_ATTRIBUTE_DEF);
          gd.initializeType();
          this.types.push(gd.MBS_BLOCK);
          kc.initializeType();
          this.types.push(kc.MBS_EVENT);
          Oc.initializeType();
          this.types.push(Oc.MBS_SNIPPET);
          hd.initializeType();
          this.types.push(hd.MBS_ATTRIBUTE);
          Jd.initializeType();
          this.types.push(Jd.MBS_MAP_ELEMENT);
          lc.initializeType();
          this.types.push(lc.MBS_AUTOTILE_FORMAT);
          id.initializeType();
          this.types.push(id.MBS_CORNERS)
        },
        getHash: function() {
          return -1349349184
        },
        __class__: lf
      });
      var Pa = function(a) {
        this.data = a;
        this._snippets = new Ta(a, Oc.MBS_SNIPPET, new Oc(a))
      };
      k["com.stencyl.io.mbs.actortype.MbsActorType"] = Pa;
      Pa.__name__ = "com.stencyl.io.mbs.actortype.MbsActorType";
      Pa.initializeType = function() {
        null == Pa.MBS_ACTOR_TYPE && (tb.initializeType(), Pa.MBS_ACTOR_TYPE = new zb("MbsActorType"), Pa.MBS_ACTOR_TYPE.setInstantiator(function(a) {
            return new Pa(a)
          }), Pa.MBS_ACTOR_TYPE.inherit(tb.MBS_RESOURCE), Pa.angularDamping = Pa.MBS_ACTOR_TYPE.createField("angularDamping", H.FLOAT), Pa.autoScale = Pa.MBS_ACTOR_TYPE.createField("autoScale", H.BOOLEAN), Pa.bodyType = Pa.MBS_ACTOR_TYPE.createField("bodyType", H.INTEGER), Pa.continuous = Pa.MBS_ACTOR_TYPE.createField("continuous", H.BOOLEAN), Pa.eventSnippetID =
          Pa.MBS_ACTOR_TYPE.createField("eventSnippetID", H.INTEGER), Pa.fixedRotation = Pa.MBS_ACTOR_TYPE.createField("fixedRotation", H.BOOLEAN), Pa.friction = Pa.MBS_ACTOR_TYPE.createField("friction", H.FLOAT), Pa.groupID = Pa.MBS_ACTOR_TYPE.createField("groupID", H.INTEGER), Pa.ignoreGravity = Pa.MBS_ACTOR_TYPE.createField("ignoreGravity", H.BOOLEAN), Pa.inertia = Pa.MBS_ACTOR_TYPE.createField("inertia", H.FLOAT), Pa.linearDamping = Pa.MBS_ACTOR_TYPE.createField("linearDamping", H.FLOAT), Pa.mass = Pa.MBS_ACTOR_TYPE.createField("mass",
            H.FLOAT), Pa.pausable = Pa.MBS_ACTOR_TYPE.createField("pausable", H.BOOLEAN), Pa.physicsMode = Pa.MBS_ACTOR_TYPE.createField("physicsMode", H.INTEGER), Pa.restitution = Pa.MBS_ACTOR_TYPE.createField("restitution", H.FLOAT), Pa.sprite = Pa.MBS_ACTOR_TYPE.createField("sprite", H.INTEGER), Pa.isStatic = Pa.MBS_ACTOR_TYPE.createField("isStatic", H.BOOLEAN), Pa.snippets = Pa.MBS_ACTOR_TYPE.createField("snippets", H.LIST))
      };
      Pa.new_MbsActorType_list = function(a) {
        return new Ta(a, Pa.MBS_ACTOR_TYPE, new Pa(a))
      };
      Pa.__super__ = tb;
      Pa.prototype =
        t(tb.prototype, {
          getMbsType: function() {
            return Pa.MBS_ACTOR_TYPE
          },
          _snippets: null,
          allocateNew: function() {
            this.setAddress(this.data.allocate(Pa.MBS_ACTOR_TYPE.getSize()))
          },
          getAngularDamping: function() {
            return this.data.readFloat(this.address + Pa.angularDamping.address)
          },
          setAngularDamping: function(a) {
            this.data.writeFloat(this.address + Pa.angularDamping.address, a)
          },
          getAutoScale: function() {
            return this.data.readBool(this.address + Pa.autoScale.address)
          },
          setAutoScale: function(a) {
            this.data.writeBool(this.address +
              Pa.autoScale.address, a)
          },
          getBodyType: function() {
            return this.data.readInt(this.address + Pa.bodyType.address)
          },
          setBodyType: function(a) {
            this.data.writeInt(this.address + Pa.bodyType.address, a)
          },
          getContinuous: function() {
            return this.data.readBool(this.address + Pa.continuous.address)
          },
          setContinuous: function(a) {
            this.data.writeBool(this.address + Pa.continuous.address, a)
          },
          getEventSnippetID: function() {
            return this.data.readInt(this.address + Pa.eventSnippetID.address)
          },
          setEventSnippetID: function(a) {
            this.data.writeInt(this.address +
              Pa.eventSnippetID.address, a)
          },
          getFixedRotation: function() {
            return this.data.readBool(this.address + Pa.fixedRotation.address)
          },
          setFixedRotation: function(a) {
            this.data.writeBool(this.address + Pa.fixedRotation.address, a)
          },
          getFriction: function() {
            return this.data.readFloat(this.address + Pa.friction.address)
          },
          setFriction: function(a) {
            this.data.writeFloat(this.address + Pa.friction.address, a)
          },
          getGroupID: function() {
            return this.data.readInt(this.address + Pa.groupID.address)
          },
          setGroupID: function(a) {
            this.data.writeInt(this.address +
              Pa.groupID.address, a)
          },
          getIgnoreGravity: function() {
            return this.data.readBool(this.address + Pa.ignoreGravity.address)
          },
          setIgnoreGravity: function(a) {
            this.data.writeBool(this.address + Pa.ignoreGravity.address, a)
          },
          getInertia: function() {
            return this.data.readFloat(this.address + Pa.inertia.address)
          },
          setInertia: function(a) {
            this.data.writeFloat(this.address + Pa.inertia.address, a)
          },
          getLinearDamping: function() {
            return this.data.readFloat(this.address + Pa.linearDamping.address)
          },
          setLinearDamping: function(a) {
            this.data.writeFloat(this.address +
              Pa.linearDamping.address, a)
          },
          getMass: function() {
            return this.data.readFloat(this.address + Pa.mass.address)
          },
          setMass: function(a) {
            this.data.writeFloat(this.address + Pa.mass.address, a)
          },
          getPausable: function() {
            return this.data.readBool(this.address + Pa.pausable.address)
          },
          setPausable: function(a) {
            this.data.writeBool(this.address + Pa.pausable.address, a)
          },
          getPhysicsMode: function() {
            return this.data.readInt(this.address + Pa.physicsMode.address)
          },
          setPhysicsMode: function(a) {
            this.data.writeInt(this.address + Pa.physicsMode.address,
              a)
          },
          getRestitution: function() {
            return this.data.readFloat(this.address + Pa.restitution.address)
          },
          setRestitution: function(a) {
            this.data.writeFloat(this.address + Pa.restitution.address, a)
          },
          getSprite: function() {
            return this.data.readInt(this.address + Pa.sprite.address)
          },
          setSprite: function(a) {
            this.data.writeInt(this.address + Pa.sprite.address, a)
          },
          getIsStatic: function() {
            return this.data.readBool(this.address + Pa.isStatic.address)
          },
          setIsStatic: function(a) {
            this.data.writeBool(this.address + Pa.isStatic.address, a)
          },
          getSnippets: function() {
            this._snippets.setAddress(this.data.readInt(this.address + Pa.snippets.address));
            return this._snippets
          },
          createSnippets: function(a) {
            this._snippets.allocateNew(a);
            this.data.writeInt(this.address + Pa.snippets.address, this._snippets.getAddress());
            return this._snippets
          },
          __class__: Pa
        });
      var Rb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.actortype.MbsAnimShape"] = Rb;
      Rb.__name__ = "com.stencyl.io.mbs.actortype.MbsAnimShape";
      Rb.initializeType = function() {
        null == Rb.MBS_ANIM_SHAPE && (Rb.MBS_ANIM_SHAPE =
          new zb("MbsAnimShape"), Rb.MBS_ANIM_SHAPE.setInstantiator(function(a) {
            return new Rb(a)
          }), Rb.shape = Rb.MBS_ANIM_SHAPE.createField("shape", H.DYNAMIC), Rb.density = Rb.MBS_ANIM_SHAPE.createField("density", H.FLOAT), Rb.friction = Rb.MBS_ANIM_SHAPE.createField("friction", H.FLOAT), Rb.groupID = Rb.MBS_ANIM_SHAPE.createField("groupID", H.INTEGER), Rb.id = Rb.MBS_ANIM_SHAPE.createField("id", H.INTEGER), Rb.$name = Rb.MBS_ANIM_SHAPE.createField("name", H.STRING), Rb.restitution = Rb.MBS_ANIM_SHAPE.createField("restitution", H.FLOAT),
          Rb.sensor = Rb.MBS_ANIM_SHAPE.createField("sensor", H.BOOLEAN))
      };
      Rb.new_MbsAnimShape_list = function(a) {
        return new Ta(a, Rb.MBS_ANIM_SHAPE, new Rb(a))
      };
      Rb.__super__ = mb;
      Rb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Rb.MBS_ANIM_SHAPE
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Rb.MBS_ANIM_SHAPE.getSize()))
        },
        getShape: function() {
          return ie.readDynamic(this.data, this.address + Rb.shape.address)
        },
        setShape: function(a) {
          ie.writeDynamic(this.data, this.address + Rb.shape.address, a)
        },
        getDensity: function() {
          return this.data.readFloat(this.address +
            Rb.density.address)
        },
        setDensity: function(a) {
          this.data.writeFloat(this.address + Rb.density.address, a)
        },
        getFriction: function() {
          return this.data.readFloat(this.address + Rb.friction.address)
        },
        setFriction: function(a) {
          this.data.writeFloat(this.address + Rb.friction.address, a)
        },
        getGroupID: function() {
          return this.data.readInt(this.address + Rb.groupID.address)
        },
        setGroupID: function(a) {
          this.data.writeInt(this.address + Rb.groupID.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + Rb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address +
            Rb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + Rb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Rb.$name.address, a)
        },
        getRestitution: function() {
          return this.data.readFloat(this.address + Rb.restitution.address)
        },
        setRestitution: function(a) {
          this.data.writeFloat(this.address + Rb.restitution.address, a)
        },
        getSensor: function() {
          return this.data.readBool(this.address + Rb.sensor.address)
        },
        setSensor: function(a) {
          this.data.writeBool(this.address + Rb.sensor.address,
            a)
        },
        __class__: Rb
      });
      var fb = function(a) {
        this.data = a;
        this._durations = new Mf(a);
        this._shapes = new Ta(a, Rb.MBS_ANIM_SHAPE, new Rb(a))
      };
      k["com.stencyl.io.mbs.actortype.MbsAnimation"] = fb;
      fb.__name__ = "com.stencyl.io.mbs.actortype.MbsAnimation";
      fb.initializeType = function() {
        null == fb.MBS_ANIMATION && (fb.MBS_ANIMATION = new zb("MbsAnimation"), fb.MBS_ANIMATION.setInstantiator(function(a) {
            return new fb(a)
          }), fb.across = fb.MBS_ANIMATION.createField("across", H.INTEGER), fb.down = fb.MBS_ANIMATION.createField("down", H.INTEGER),
          fb.durations = fb.MBS_ANIMATION.createField("durations", H.LIST), fb.height = fb.MBS_ANIMATION.createField("height", H.INTEGER), fb.id = fb.MBS_ANIMATION.createField("id", H.INTEGER), fb.loop = fb.MBS_ANIMATION.createField("loop", H.BOOLEAN), fb.$name = fb.MBS_ANIMATION.createField("name", H.STRING), fb.numFrames = fb.MBS_ANIMATION.createField("numFrames", H.INTEGER), fb.originX = fb.MBS_ANIMATION.createField("originX", H.INTEGER), fb.originY = fb.MBS_ANIMATION.createField("originY", H.INTEGER), fb.sync = fb.MBS_ANIMATION.createField("sync",
            H.BOOLEAN), fb.version = fb.MBS_ANIMATION.createField("version", H.INTEGER), fb.width = fb.MBS_ANIMATION.createField("width", H.INTEGER), fb.shapes = fb.MBS_ANIMATION.createField("shapes", H.LIST))
      };
      fb.new_MbsAnimation_list = function(a) {
        return new Ta(a, fb.MBS_ANIMATION, new fb(a))
      };
      fb.__super__ = mb;
      fb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return fb.MBS_ANIMATION
        },
        _durations: null,
        _shapes: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(fb.MBS_ANIMATION.getSize()))
        },
        getAcross: function() {
          return this.data.readInt(this.address +
            fb.across.address)
        },
        setAcross: function(a) {
          this.data.writeInt(this.address + fb.across.address, a)
        },
        getDown: function() {
          return this.data.readInt(this.address + fb.down.address)
        },
        setDown: function(a) {
          this.data.writeInt(this.address + fb.down.address, a)
        },
        getDurations: function() {
          this._durations.setAddress(this.data.readInt(this.address + fb.durations.address));
          return this._durations
        },
        createDurations: function(a) {
          this._durations.allocateNew(a);
          this.data.writeInt(this.address + fb.durations.address, this._durations.getAddress());
          return this._durations
        },
        getHeight: function() {
          return this.data.readInt(this.address + fb.height.address)
        },
        setHeight: function(a) {
          this.data.writeInt(this.address + fb.height.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + fb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + fb.id.address, a)
        },
        getLoop: function() {
          return this.data.readBool(this.address + fb.loop.address)
        },
        setLoop: function(a) {
          this.data.writeBool(this.address + fb.loop.address, a)
        },
        getName: function() {
          return this.data.readString(this.address +
            fb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + fb.$name.address, a)
        },
        getNumFrames: function() {
          return this.data.readInt(this.address + fb.numFrames.address)
        },
        setNumFrames: function(a) {
          this.data.writeInt(this.address + fb.numFrames.address, a)
        },
        getOriginX: function() {
          return this.data.readInt(this.address + fb.originX.address)
        },
        setOriginX: function(a) {
          this.data.writeInt(this.address + fb.originX.address, a)
        },
        getOriginY: function() {
          return this.data.readInt(this.address + fb.originY.address)
        },
        setOriginY: function(a) {
          this.data.writeInt(this.address + fb.originY.address, a)
        },
        getSync: function() {
          return this.data.readBool(this.address + fb.sync.address)
        },
        setSync: function(a) {
          this.data.writeBool(this.address + fb.sync.address, a)
        },
        getVersion: function() {
          return this.data.readInt(this.address + fb.version.address)
        },
        setVersion: function(a) {
          this.data.writeInt(this.address + fb.version.address, a)
        },
        getWidth: function() {
          return this.data.readInt(this.address + fb.width.address)
        },
        setWidth: function(a) {
          this.data.writeInt(this.address +
            fb.width.address, a)
        },
        getShapes: function() {
          this._shapes.setAddress(this.data.readInt(this.address + fb.shapes.address));
          return this._shapes
        },
        createShapes: function(a) {
          this._shapes.allocateNew(a);
          this.data.writeInt(this.address + fb.shapes.address, this._shapes.getAddress());
          return this._shapes
        },
        __class__: fb
      });
      var vc = function(a) {
        this.data = a;
        this._animations = new Ta(a, fb.MBS_ANIMATION, new fb(a))
      };
      k["com.stencyl.io.mbs.actortype.MbsSprite"] = vc;
      vc.__name__ = "com.stencyl.io.mbs.actortype.MbsSprite";
      vc.initializeType =
        function() {
          null == vc.MBS_SPRITE && (tb.initializeType(), vc.MBS_SPRITE = new zb("MbsSprite"), vc.MBS_SPRITE.setInstantiator(function(a) {
            return new vc(a)
          }), vc.MBS_SPRITE.inherit(tb.MBS_RESOURCE), vc.defaultAnimation = vc.MBS_SPRITE.createField("defaultAnimation", H.INTEGER), vc.readableImages = vc.MBS_SPRITE.createField("readableImages", H.BOOLEAN), vc.height = vc.MBS_SPRITE.createField("height", H.INTEGER), vc.width = vc.MBS_SPRITE.createField("width", H.INTEGER), vc.animations = vc.MBS_SPRITE.createField("animations", H.LIST))
        };
      vc.new_MbsSprite_list = function(a) {
        return new Ta(a, vc.MBS_SPRITE, new vc(a))
      };
      vc.__super__ = tb;
      vc.prototype = t(tb.prototype, {
        getMbsType: function() {
          return vc.MBS_SPRITE
        },
        _animations: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(vc.MBS_SPRITE.getSize()))
        },
        getDefaultAnimation: function() {
          return this.data.readInt(this.address + vc.defaultAnimation.address)
        },
        setDefaultAnimation: function(a) {
          this.data.writeInt(this.address + vc.defaultAnimation.address, a)
        },
        getReadableImages: function() {
          return this.data.readBool(this.address +
            vc.readableImages.address)
        },
        setReadableImages: function(a) {
          this.data.writeBool(this.address + vc.readableImages.address, a)
        },
        getHeight: function() {
          return this.data.readInt(this.address + vc.height.address)
        },
        setHeight: function(a) {
          this.data.writeInt(this.address + vc.height.address, a)
        },
        getWidth: function() {
          return this.data.readInt(this.address + vc.width.address)
        },
        setWidth: function(a) {
          this.data.writeInt(this.address + vc.width.address, a)
        },
        getAnimations: function() {
          this._animations.setAddress(this.data.readInt(this.address +
            vc.animations.address));
          return this._animations
        },
        createAnimations: function(a) {
          this._animations.allocateNew(a);
          this.data.writeInt(this.address + vc.animations.address, this._animations.getAddress());
          return this._animations
        },
        __class__: vc
      });
      var Nc = function(a) {
        this.data = a;
        this._members = new Mf(a)
      };
      k["com.stencyl.io.mbs.game.MbsAtlas"] = Nc;
      Nc.__name__ = "com.stencyl.io.mbs.game.MbsAtlas";
      Nc.initializeType = function() {
        null == Nc.MBS_ATLAS && (Nc.MBS_ATLAS = new zb("MbsAtlas"), Nc.MBS_ATLAS.setInstantiator(function(a) {
            return new Nc(a)
          }),
          Nc.id = Nc.MBS_ATLAS.createField("id", H.INTEGER), Nc.$name = Nc.MBS_ATLAS.createField("name", H.STRING), Nc.members = Nc.MBS_ATLAS.createField("members", H.LIST), Nc.allScenes = Nc.MBS_ATLAS.createField("allScenes", H.BOOLEAN))
      };
      Nc.new_MbsAtlas_list = function(a) {
        return new Ta(a, Nc.MBS_ATLAS, new Nc(a))
      };
      Nc.__super__ = mb;
      Nc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Nc.MBS_ATLAS
        },
        _members: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Nc.MBS_ATLAS.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address +
            Nc.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + Nc.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + Nc.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Nc.$name.address, a)
        },
        getMembers: function() {
          this._members.setAddress(this.data.readInt(this.address + Nc.members.address));
          return this._members
        },
        createMembers: function(a) {
          this._members.allocateNew(a);
          this.data.writeInt(this.address + Nc.members.address, this._members.getAddress());
          return this._members
        },
        getAllScenes: function() {
          return this.data.readBool(this.address + Nc.allScenes.address)
        },
        setAllScenes: function(a) {
          this.data.writeBool(this.address + Nc.allScenes.address, a)
        },
        __class__: Nc
      });
      var Ed = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.game.MbsCollisionGroup"] = Ed;
      Ed.__name__ = "com.stencyl.io.mbs.game.MbsCollisionGroup";
      Ed.initializeType = function() {
        null == Ed.MBS_COLLISION_GROUP && (Ed.MBS_COLLISION_GROUP = new zb("MbsCollisionGroup"), Ed.MBS_COLLISION_GROUP.setInstantiator(function(a) {
            return new Ed(a)
          }),
          Ed.id = Ed.MBS_COLLISION_GROUP.createField("id", H.INTEGER), Ed.$name = Ed.MBS_COLLISION_GROUP.createField("name", H.STRING))
      };
      Ed.new_MbsCollisionGroup_list = function(a) {
        return new Ta(a, Ed.MBS_COLLISION_GROUP, new Ed(a))
      };
      Ed.__super__ = mb;
      Ed.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Ed.MBS_COLLISION_GROUP
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Ed.MBS_COLLISION_GROUP.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + Ed.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address +
            Ed.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + Ed.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Ed.$name.address, a)
        },
        __class__: Ed
      });
      var Fd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.game.MbsCollisionPair"] = Fd;
      Fd.__name__ = "com.stencyl.io.mbs.game.MbsCollisionPair";
      Fd.initializeType = function() {
        null == Fd.MBS_COLLISION_PAIR && (Fd.MBS_COLLISION_PAIR = new zb("MbsCollisionPair"), Fd.MBS_COLLISION_PAIR.setInstantiator(function(a) {
            return new Fd(a)
          }),
          Fd.group1 = Fd.MBS_COLLISION_PAIR.createField("group1", H.INTEGER), Fd.group2 = Fd.MBS_COLLISION_PAIR.createField("group2", H.INTEGER))
      };
      Fd.new_MbsCollisionPair_list = function(a) {
        return new Ta(a, Fd.MBS_COLLISION_PAIR, new Fd(a))
      };
      Fd.__super__ = mb;
      Fd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Fd.MBS_COLLISION_PAIR
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Fd.MBS_COLLISION_PAIR.getSize()))
        },
        getGroup1: function() {
          return this.data.readInt(this.address + Fd.group1.address)
        },
        setGroup1: function(a) {
          this.data.writeInt(this.address +
            Fd.group1.address, a)
        },
        getGroup2: function() {
          return this.data.readInt(this.address + Fd.group2.address)
        },
        setGroup2: function(a) {
          this.data.writeInt(this.address + Fd.group2.address, a)
        },
        __class__: Fd
      });
      var Dd = function(a) {
        this.data = a;
        this._points = new Ta(a, uc.MBS_POINT, new uc(a))
      };
      k["com.stencyl.io.mbs.game.MbsCollisionShape"] = Dd;
      Dd.__name__ = "com.stencyl.io.mbs.game.MbsCollisionShape";
      Dd.initializeType = function() {
        null == Dd.MBS_COLLISION_SHAPE && (Dd.MBS_COLLISION_SHAPE = new zb("MbsCollisionShape"), Dd.MBS_COLLISION_SHAPE.setInstantiator(function(a) {
            return new Dd(a)
          }),
          Dd.id = Dd.MBS_COLLISION_SHAPE.createField("id", H.INTEGER), Dd.points = Dd.MBS_COLLISION_SHAPE.createField("points", H.LIST))
      };
      Dd.new_MbsCollisionShape_list = function(a) {
        return new Ta(a, Dd.MBS_COLLISION_SHAPE, new Dd(a))
      };
      Dd.__super__ = mb;
      Dd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Dd.MBS_COLLISION_SHAPE
        },
        _points: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Dd.MBS_COLLISION_SHAPE.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + Dd.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address +
            Dd.id.address, a)
        },
        getPoints: function() {
          this._points.setAddress(this.data.readInt(this.address + Dd.points.address));
          return this._points
        },
        createPoints: function(a) {
          this._points.allocateNew(a);
          this.data.writeInt(this.address + Dd.points.address, this._points.getAddress());
          return this._points
        },
        __class__: Dd
      });
      var tc = function(a) {
        this.data = a;
        this._shapes = new Ta(a, Dd.MBS_COLLISION_SHAPE, new Dd(a));
        this._atlases = new Ta(a, Nc.MBS_ATLAS, new Nc(a));
        this._autotileFormats = new Ta(a, lc.MBS_AUTOTILE_FORMAT, new lc(a));
        this._groups =
          new Ta(a, Ed.MBS_COLLISION_GROUP, new Ed(a));
        this._cgroups = new Ta(a, Fd.MBS_COLLISION_PAIR, new Fd(a));
        this._gameAttributes = new Ta(a, Jd.MBS_MAP_ELEMENT, new Jd(a))
      };
      k["com.stencyl.io.mbs.game.MbsGame"] = tc;
      tc.__name__ = "com.stencyl.io.mbs.game.MbsGame";
      tc.initializeType = function() {
        null == tc.MBS_GAME && (tc.MBS_GAME = new zb("MbsGame"), tc.MBS_GAME.setInstantiator(function(a) {
            return new tc(a)
          }), tc.shapes = tc.MBS_GAME.createField("shapes", H.LIST), tc.atlases = tc.MBS_GAME.createField("atlases", H.LIST), tc.autotileFormats =
          tc.MBS_GAME.createField("autotileFormats", H.LIST), tc.groups = tc.MBS_GAME.createField("groups", H.LIST), tc.cgroups = tc.MBS_GAME.createField("cgroups", H.LIST), tc.gameAttributes = tc.MBS_GAME.createField("gameAttributes", H.LIST))
      };
      tc.new_MbsGame_list = function(a) {
        return new Ta(a, tc.MBS_GAME, new tc(a))
      };
      tc.__super__ = mb;
      tc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return tc.MBS_GAME
        },
        _shapes: null,
        _atlases: null,
        _autotileFormats: null,
        _groups: null,
        _cgroups: null,
        _gameAttributes: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(tc.MBS_GAME.getSize()))
        },
        getShapes: function() {
          this._shapes.setAddress(this.data.readInt(this.address + tc.shapes.address));
          return this._shapes
        },
        createShapes: function(a) {
          this._shapes.allocateNew(a);
          this.data.writeInt(this.address + tc.shapes.address, this._shapes.getAddress());
          return this._shapes
        },
        getAtlases: function() {
          this._atlases.setAddress(this.data.readInt(this.address + tc.atlases.address));
          return this._atlases
        },
        createAtlases: function(a) {
          this._atlases.allocateNew(a);
          this.data.writeInt(this.address + tc.atlases.address, this._atlases.getAddress());
          return this._atlases
        },
        getAutotileFormats: function() {
          this._autotileFormats.setAddress(this.data.readInt(this.address + tc.autotileFormats.address));
          return this._autotileFormats
        },
        createAutotileFormats: function(a) {
          this._autotileFormats.allocateNew(a);
          this.data.writeInt(this.address + tc.autotileFormats.address, this._autotileFormats.getAddress());
          return this._autotileFormats
        },
        getGroups: function() {
          this._groups.setAddress(this.data.readInt(this.address + tc.groups.address));
          return this._groups
        },
        createGroups: function(a) {
          this._groups.allocateNew(a);
          this.data.writeInt(this.address + tc.groups.address, this._groups.getAddress());
          return this._groups
        },
        getCgroups: function() {
          this._cgroups.setAddress(this.data.readInt(this.address + tc.cgroups.address));
          return this._cgroups
        },
        createCgroups: function(a) {
          this._cgroups.allocateNew(a);
          this.data.writeInt(this.address + tc.cgroups.address, this._cgroups.getAddress());
          return this._cgroups
        },
        getGameAttributes: function() {
          this._gameAttributes.setAddress(this.data.readInt(this.address + tc.gameAttributes.address));
          return this._gameAttributes
        },
        createGameAttributes: function(a) {
          this._gameAttributes.allocateNew(a);
          this.data.writeInt(this.address + tc.gameAttributes.address, this._gameAttributes.getAddress());
          return this._gameAttributes
        },
        __class__: tc
      });
      var lc = function(a) {
        this.data = a;
        this._corners = new Ta(a, id.MBS_CORNERS, new id(a));
        this._flags = new Mf(a)
      };
      k["com.stencyl.io.mbs.game.autotile.MbsAutotileFormat"] = lc;
      lc.__name__ = "com.stencyl.io.mbs.game.autotile.MbsAutotileFormat";
      lc.initializeType = function() {
        null == lc.MBS_AUTOTILE_FORMAT && (lc.MBS_AUTOTILE_FORMAT =
          new zb("MbsAutotileFormat"), lc.MBS_AUTOTILE_FORMAT.setInstantiator(function(a) {
            return new lc(a)
          }), lc.id = lc.MBS_AUTOTILE_FORMAT.createField("id", H.INTEGER), lc.$name = lc.MBS_AUTOTILE_FORMAT.createField("name", H.STRING), lc.across = lc.MBS_AUTOTILE_FORMAT.createField("across", H.INTEGER), lc.down = lc.MBS_AUTOTILE_FORMAT.createField("down", H.INTEGER), lc.corners = lc.MBS_AUTOTILE_FORMAT.createField("corners", H.LIST), lc.flags = lc.MBS_AUTOTILE_FORMAT.createField("flags", H.LIST))
      };
      lc.new_MbsAutotileFormat_list = function(a) {
        return new Ta(a,
          lc.MBS_AUTOTILE_FORMAT, new lc(a))
      };
      lc.__super__ = mb;
      lc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return lc.MBS_AUTOTILE_FORMAT
        },
        _corners: null,
        _flags: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(lc.MBS_AUTOTILE_FORMAT.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + lc.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + lc.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + lc.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address +
            lc.$name.address, a)
        },
        getAcross: function() {
          return this.data.readInt(this.address + lc.across.address)
        },
        setAcross: function(a) {
          this.data.writeInt(this.address + lc.across.address, a)
        },
        getDown: function() {
          return this.data.readInt(this.address + lc.down.address)
        },
        setDown: function(a) {
          this.data.writeInt(this.address + lc.down.address, a)
        },
        getCorners: function() {
          this._corners.setAddress(this.data.readInt(this.address + lc.corners.address));
          return this._corners
        },
        createCorners: function(a) {
          this._corners.allocateNew(a);
          this.data.writeInt(this.address +
            lc.corners.address, this._corners.getAddress());
          return this._corners
        },
        getFlags: function() {
          this._flags.setAddress(this.data.readInt(this.address + lc.flags.address));
          return this._flags
        },
        createFlags: function(a) {
          this._flags.allocateNew(a);
          this.data.writeInt(this.address + lc.flags.address, this._flags.getAddress());
          return this._flags
        },
        __class__: lc
      });
      var id = function(a) {
        this.data = a;
        this._topLeft = new uc(a);
        this._topRight = new uc(a);
        this._bottomLeft = new uc(a);
        this._bottomRight = new uc(a)
      };
      k["com.stencyl.io.mbs.game.autotile.MbsCorners"] =
        id;
      id.__name__ = "com.stencyl.io.mbs.game.autotile.MbsCorners";
      id.initializeType = function() {
        null == id.MBS_CORNERS && (id.MBS_CORNERS = new zb("MbsCorners"), id.MBS_CORNERS.setInstantiator(function(a) {
          return new id(a)
        }), id.topLeft = id.MBS_CORNERS.createField("topLeft", uc.MBS_POINT), id.topRight = id.MBS_CORNERS.createField("topRight", uc.MBS_POINT), id.bottomLeft = id.MBS_CORNERS.createField("bottomLeft", uc.MBS_POINT), id.bottomRight = id.MBS_CORNERS.createField("bottomRight", uc.MBS_POINT))
      };
      id.new_MbsCorners_list = function(a) {
        return new Ta(a,
          id.MBS_CORNERS, new id(a))
      };
      id.__super__ = mb;
      id.prototype = t(mb.prototype, {
        getMbsType: function() {
          return id.MBS_CORNERS
        },
        _topLeft: null,
        _topRight: null,
        _bottomLeft: null,
        _bottomRight: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(id.MBS_CORNERS.getSize()))
        },
        getTopLeft: function() {
          this._topLeft.setAddress(this.address + id.topLeft.address);
          return this._topLeft
        },
        getTopRight: function() {
          this._topRight.setAddress(this.address + id.topRight.address);
          return this._topRight
        },
        getBottomLeft: function() {
          this._bottomLeft.setAddress(this.address +
            id.bottomLeft.address);
          return this._bottomLeft
        },
        getBottomRight: function() {
          this._bottomRight.setAddress(this.address + id.bottomRight.address);
          return this._bottomRight
        },
        __class__: id
      });
      var gb = function(a) {
        this.data = a;
        this._snippets = new Ta(a, Oc.MBS_SNIPPET, new Oc(a))
      };
      k["com.stencyl.io.mbs.scene.MbsActorInstance"] = gb;
      gb.__name__ = "com.stencyl.io.mbs.scene.MbsActorInstance";
      gb.initializeType = function() {
        null == gb.MBS_ACTOR_INSTANCE && (gb.MBS_ACTOR_INSTANCE = new zb("MbsActorInstance"), gb.MBS_ACTOR_INSTANCE.setInstantiator(function(a) {
            return new gb(a)
          }),
          gb.angle = gb.MBS_ACTOR_INSTANCE.createField("angle", H.FLOAT), gb.aid = gb.MBS_ACTOR_INSTANCE.createField("aid", H.INTEGER), gb.customized = gb.MBS_ACTOR_INSTANCE.createField("customized", H.BOOLEAN), gb.groupID = gb.MBS_ACTOR_INSTANCE.createField("groupID", H.INTEGER), gb.id = gb.MBS_ACTOR_INSTANCE.createField("id", H.INTEGER), gb.$name = gb.MBS_ACTOR_INSTANCE.createField("name", H.STRING), gb.scaleX = gb.MBS_ACTOR_INSTANCE.createField("scaleX", H.FLOAT), gb.scaleY = gb.MBS_ACTOR_INSTANCE.createField("scaleY", H.FLOAT), gb.x =
          gb.MBS_ACTOR_INSTANCE.createField("x", H.INTEGER), gb.y = gb.MBS_ACTOR_INSTANCE.createField("y", H.INTEGER), gb.z = gb.MBS_ACTOR_INSTANCE.createField("z", H.INTEGER), gb.orderInLayer = gb.MBS_ACTOR_INSTANCE.createField("orderInLayer", H.INTEGER), gb.snippets = gb.MBS_ACTOR_INSTANCE.createField("snippets", H.LIST))
      };
      gb.new_MbsActorInstance_list = function(a) {
        return new Ta(a, gb.MBS_ACTOR_INSTANCE, new gb(a))
      };
      gb.__super__ = mb;
      gb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return gb.MBS_ACTOR_INSTANCE
        },
        _snippets: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(gb.MBS_ACTOR_INSTANCE.getSize()))
        },
        getAngle: function() {
          return this.data.readFloat(this.address + gb.angle.address)
        },
        setAngle: function(a) {
          this.data.writeFloat(this.address + gb.angle.address, a)
        },
        getAid: function() {
          return this.data.readInt(this.address + gb.aid.address)
        },
        setAid: function(a) {
          this.data.writeInt(this.address + gb.aid.address, a)
        },
        getCustomized: function() {
          return this.data.readBool(this.address + gb.customized.address)
        },
        setCustomized: function(a) {
          this.data.writeBool(this.address +
            gb.customized.address, a)
        },
        getGroupID: function() {
          return this.data.readInt(this.address + gb.groupID.address)
        },
        setGroupID: function(a) {
          this.data.writeInt(this.address + gb.groupID.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + gb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + gb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + gb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + gb.$name.address, a)
        },
        getScaleX: function() {
          return this.data.readFloat(this.address +
            gb.scaleX.address)
        },
        setScaleX: function(a) {
          this.data.writeFloat(this.address + gb.scaleX.address, a)
        },
        getScaleY: function() {
          return this.data.readFloat(this.address + gb.scaleY.address)
        },
        setScaleY: function(a) {
          this.data.writeFloat(this.address + gb.scaleY.address, a)
        },
        getX: function() {
          return this.data.readInt(this.address + gb.x.address)
        },
        setX: function(a) {
          this.data.writeInt(this.address + gb.x.address, a)
        },
        getY: function() {
          return this.data.readInt(this.address + gb.y.address)
        },
        setY: function(a) {
          this.data.writeInt(this.address +
            gb.y.address, a)
        },
        getZ: function() {
          return this.data.readInt(this.address + gb.z.address)
        },
        setZ: function(a) {
          this.data.writeInt(this.address + gb.z.address, a)
        },
        getOrderInLayer: function() {
          return this.data.readInt(this.address + gb.orderInLayer.address)
        },
        setOrderInLayer: function(a) {
          this.data.writeInt(this.address + gb.orderInLayer.address, a)
        },
        getSnippets: function() {
          this._snippets.setAddress(this.data.readInt(this.address + gb.snippets.address));
          return this._snippets
        },
        createSnippets: function(a) {
          this._snippets.allocateNew(a);
          this.data.writeInt(this.address + gb.snippets.address, this._snippets.getAddress());
          return this._snippets
        },
        __class__: gb
      });
      var na = function(a) {
        this.data = a;
        this._actorInstances = new Ta(a, gb.MBS_ACTOR_INSTANCE, new gb(a));
        this._atlasMembers = new Mf(a);
        this._layers = new vh(a);
        this._joints = new vh(a);
        this._regions = new Ta(a, Zb.MBS_REGION, new Zb(a));
        this._snippets = new Ta(a, Oc.MBS_SNIPPET, new Oc(a));
        this._terrain = new Ta(a, le.MBS_WIREFRAME, new le(a));
        this._terrainRegions = new Ta(a, ce.MBS_TERRAIN_REGION, new ce(a))
      };
      k["com.stencyl.io.mbs.scene.MbsScene"] = na;
      na.__name__ = "com.stencyl.io.mbs.scene.MbsScene";
      na.initializeType = function() {
        null == na.MBS_SCENE && (na.MBS_SCENE = new zb("MbsScene"), na.MBS_SCENE.setInstantiator(function(a) {
            return new na(a)
          }), na.retainAtlases = na.MBS_SCENE.createField("retainAtlases", H.BOOLEAN), na.depth = na.MBS_SCENE.createField("depth", H.INTEGER), na.description = na.MBS_SCENE.createField("description", H.STRING), na.eventSnippetID = na.MBS_SCENE.createField("eventSnippetID", H.INTEGER), na.extendedHeight =
          na.MBS_SCENE.createField("extendedHeight", H.INTEGER), na.extendedWidth = na.MBS_SCENE.createField("extendedWidth", H.INTEGER), na.extendedX = na.MBS_SCENE.createField("extendedX", H.INTEGER), na.extendedY = na.MBS_SCENE.createField("extendedY", H.INTEGER), na.format = na.MBS_SCENE.createField("format", H.STRING), na.gravityX = na.MBS_SCENE.createField("gravityX", H.FLOAT), na.gravityY = na.MBS_SCENE.createField("gravityY", H.FLOAT), na.height = na.MBS_SCENE.createField("height", H.INTEGER), na.id = na.MBS_SCENE.createField("id",
            H.INTEGER), na.$name = na.MBS_SCENE.createField("name", H.STRING), na.revision = na.MBS_SCENE.createField("revision", H.STRING), na.savecount = na.MBS_SCENE.createField("savecount", H.INTEGER), na.tileDepth = na.MBS_SCENE.createField("tileDepth", H.INTEGER), na.tileHeight = na.MBS_SCENE.createField("tileHeight", H.INTEGER), na.tileWidth = na.MBS_SCENE.createField("tileWidth", H.INTEGER), na.type = na.MBS_SCENE.createField("type", H.STRING), na.width = na.MBS_SCENE.createField("width", H.INTEGER), na.actorInstances = na.MBS_SCENE.createField("actorInstances",
            H.LIST), na.atlasMembers = na.MBS_SCENE.createField("atlasMembers", H.LIST), na.layers = na.MBS_SCENE.createField("layers", H.LIST), na.joints = na.MBS_SCENE.createField("joints", H.LIST), na.regions = na.MBS_SCENE.createField("regions", H.LIST), na.snippets = na.MBS_SCENE.createField("snippets", H.LIST), na.terrain = na.MBS_SCENE.createField("terrain", H.LIST), na.terrainRegions = na.MBS_SCENE.createField("terrainRegions", H.LIST))
      };
      na.new_MbsScene_list = function(a) {
        return new Ta(a, na.MBS_SCENE, new na(a))
      };
      na.__super__ = mb;
      na.prototype =
        t(mb.prototype, {
          getMbsType: function() {
            return na.MBS_SCENE
          },
          _actorInstances: null,
          _atlasMembers: null,
          _layers: null,
          _joints: null,
          _regions: null,
          _snippets: null,
          _terrain: null,
          _terrainRegions: null,
          allocateNew: function() {
            this.setAddress(this.data.allocate(na.MBS_SCENE.getSize()))
          },
          getRetainAtlases: function() {
            return this.data.readBool(this.address + na.retainAtlases.address)
          },
          setRetainAtlases: function(a) {
            this.data.writeBool(this.address + na.retainAtlases.address, a)
          },
          getDepth: function() {
            return this.data.readInt(this.address +
              na.depth.address)
          },
          setDepth: function(a) {
            this.data.writeInt(this.address + na.depth.address, a)
          },
          getDescription: function() {
            return this.data.readString(this.address + na.description.address)
          },
          setDescription: function(a) {
            this.data.writeString(this.address + na.description.address, a)
          },
          getEventSnippetID: function() {
            return this.data.readInt(this.address + na.eventSnippetID.address)
          },
          setEventSnippetID: function(a) {
            this.data.writeInt(this.address + na.eventSnippetID.address, a)
          },
          getExtendedHeight: function() {
            return this.data.readInt(this.address +
              na.extendedHeight.address)
          },
          setExtendedHeight: function(a) {
            this.data.writeInt(this.address + na.extendedHeight.address, a)
          },
          getExtendedWidth: function() {
            return this.data.readInt(this.address + na.extendedWidth.address)
          },
          setExtendedWidth: function(a) {
            this.data.writeInt(this.address + na.extendedWidth.address, a)
          },
          getExtendedX: function() {
            return this.data.readInt(this.address + na.extendedX.address)
          },
          setExtendedX: function(a) {
            this.data.writeInt(this.address + na.extendedX.address, a)
          },
          getExtendedY: function() {
            return this.data.readInt(this.address +
              na.extendedY.address)
          },
          setExtendedY: function(a) {
            this.data.writeInt(this.address + na.extendedY.address, a)
          },
          getFormat: function() {
            return this.data.readString(this.address + na.format.address)
          },
          setFormat: function(a) {
            this.data.writeString(this.address + na.format.address, a)
          },
          getGravityX: function() {
            return this.data.readFloat(this.address + na.gravityX.address)
          },
          setGravityX: function(a) {
            this.data.writeFloat(this.address + na.gravityX.address, a)
          },
          getGravityY: function() {
            return this.data.readFloat(this.address + na.gravityY.address)
          },
          setGravityY: function(a) {
            this.data.writeFloat(this.address + na.gravityY.address, a)
          },
          getHeight: function() {
            return this.data.readInt(this.address + na.height.address)
          },
          setHeight: function(a) {
            this.data.writeInt(this.address + na.height.address, a)
          },
          getId: function() {
            return this.data.readInt(this.address + na.id.address)
          },
          setId: function(a) {
            this.data.writeInt(this.address + na.id.address, a)
          },
          getName: function() {
            return this.data.readString(this.address + na.$name.address)
          },
          setName: function(a) {
            this.data.writeString(this.address +
              na.$name.address, a)
          },
          getRevision: function() {
            return this.data.readString(this.address + na.revision.address)
          },
          setRevision: function(a) {
            this.data.writeString(this.address + na.revision.address, a)
          },
          getSavecount: function() {
            return this.data.readInt(this.address + na.savecount.address)
          },
          setSavecount: function(a) {
            this.data.writeInt(this.address + na.savecount.address, a)
          },
          getTileDepth: function() {
            return this.data.readInt(this.address + na.tileDepth.address)
          },
          setTileDepth: function(a) {
            this.data.writeInt(this.address + na.tileDepth.address,
              a)
          },
          getTileHeight: function() {
            return this.data.readInt(this.address + na.tileHeight.address)
          },
          setTileHeight: function(a) {
            this.data.writeInt(this.address + na.tileHeight.address, a)
          },
          getTileWidth: function() {
            return this.data.readInt(this.address + na.tileWidth.address)
          },
          setTileWidth: function(a) {
            this.data.writeInt(this.address + na.tileWidth.address, a)
          },
          getType: function() {
            return this.data.readString(this.address + na.type.address)
          },
          setType: function(a) {
            this.data.writeString(this.address + na.type.address, a)
          },
          getWidth: function() {
            return this.data.readInt(this.address +
              na.width.address)
          },
          setWidth: function(a) {
            this.data.writeInt(this.address + na.width.address, a)
          },
          getActorInstances: function() {
            this._actorInstances.setAddress(this.data.readInt(this.address + na.actorInstances.address));
            return this._actorInstances
          },
          createActorInstances: function(a) {
            this._actorInstances.allocateNew(a);
            this.data.writeInt(this.address + na.actorInstances.address, this._actorInstances.getAddress());
            return this._actorInstances
          },
          getAtlasMembers: function() {
            this._atlasMembers.setAddress(this.data.readInt(this.address +
              na.atlasMembers.address));
            return this._atlasMembers
          },
          createAtlasMembers: function(a) {
            this._atlasMembers.allocateNew(a);
            this.data.writeInt(this.address + na.atlasMembers.address, this._atlasMembers.getAddress());
            return this._atlasMembers
          },
          getLayers: function() {
            this._layers.setAddress(this.data.readInt(this.address + na.layers.address));
            return this._layers
          },
          createLayers: function(a) {
            this._layers.allocateNew(a);
            this.data.writeInt(this.address + na.layers.address, this._layers.getAddress());
            return this._layers
          },
          getJoints: function() {
            this._joints.setAddress(this.data.readInt(this.address + na.joints.address));
            return this._joints
          },
          createJoints: function(a) {
            this._joints.allocateNew(a);
            this.data.writeInt(this.address + na.joints.address, this._joints.getAddress());
            return this._joints
          },
          getRegions: function() {
            this._regions.setAddress(this.data.readInt(this.address + na.regions.address));
            return this._regions
          },
          createRegions: function(a) {
            this._regions.allocateNew(a);
            this.data.writeInt(this.address + na.regions.address, this._regions.getAddress());
            return this._regions
          },
          getSnippets: function() {
            this._snippets.setAddress(this.data.readInt(this.address + na.snippets.address));
            return this._snippets
          },
          createSnippets: function(a) {
            this._snippets.allocateNew(a);
            this.data.writeInt(this.address + na.snippets.address, this._snippets.getAddress());
            return this._snippets
          },
          getTerrain: function() {
            this._terrain.setAddress(this.data.readInt(this.address + na.terrain.address));
            return this._terrain
          },
          createTerrain: function(a) {
            this._terrain.allocateNew(a);
            this.data.writeInt(this.address +
              na.terrain.address, this._terrain.getAddress());
            return this._terrain
          },
          getTerrainRegions: function() {
            this._terrainRegions.setAddress(this.data.readInt(this.address + na.terrainRegions.address));
            return this._terrainRegions
          },
          createTerrainRegions: function(a) {
            this._terrainRegions.allocateNew(a);
            this.data.writeInt(this.address + na.terrainRegions.address, this._terrainRegions.getAddress());
            return this._terrainRegions
          },
          __class__: na
        });
      var rd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.MbsSceneHeader"] =
        rd;
      rd.__name__ = "com.stencyl.io.mbs.scene.MbsSceneHeader";
      rd.initializeType = function() {
        null == rd.MBS_SCENE_HEADER && (rd.MBS_SCENE_HEADER = new zb("MbsSceneHeader"), rd.MBS_SCENE_HEADER.setInstantiator(function(a) {
          return new rd(a)
        }), rd.id = rd.MBS_SCENE_HEADER.createField("id", H.INTEGER), rd.$name = rd.MBS_SCENE_HEADER.createField("name", H.STRING), rd.description = rd.MBS_SCENE_HEADER.createField("description", H.STRING))
      };
      rd.new_MbsSceneHeader_list = function(a) {
        return new Ta(a, rd.MBS_SCENE_HEADER, new rd(a))
      };
      rd.__super__ =
        mb;
      rd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return rd.MBS_SCENE_HEADER
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(rd.MBS_SCENE_HEADER.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + rd.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + rd.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + rd.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + rd.$name.address, a)
        },
        getDescription: function() {
          return this.data.readString(this.address +
            rd.description.address)
        },
        setDescription: function(a) {
          this.data.writeString(this.address + rd.description.address, a)
        },
        __class__: rd
      });
      var Sb = function(a) {
        this.data = a;
        this._durations = new Mf(a);
        this._autotileMerge = new Mf(a)
      };
      k["com.stencyl.io.mbs.scene.MbsTile"] = Sb;
      Sb.__name__ = "com.stencyl.io.mbs.scene.MbsTile";
      Sb.initializeType = function() {
        null == Sb.MBS_TILE && (Sb.MBS_TILE = new zb("MbsTile"), Sb.MBS_TILE.setInstantiator(function(a) {
            return new Sb(a)
          }), Sb.collision = Sb.MBS_TILE.createField("collision", H.INTEGER),
          Sb.metadata = Sb.MBS_TILE.createField("metadata", H.STRING), Sb.durations = Sb.MBS_TILE.createField("durations", H.LIST), Sb.frames = Sb.MBS_TILE.createField("frames", H.INTEGER), Sb.id = Sb.MBS_TILE.createField("id", H.INTEGER), Sb.order = Sb.MBS_TILE.createField("order", H.INTEGER), Sb.autotile = Sb.MBS_TILE.createField("autotile", H.INTEGER), Sb.autotileMerge = Sb.MBS_TILE.createField("autotileMerge", H.LIST))
      };
      Sb.new_MbsTile_list = function(a) {
        return new Ta(a, Sb.MBS_TILE, new Sb(a))
      };
      Sb.__super__ = mb;
      Sb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Sb.MBS_TILE
        },
        _durations: null,
        _autotileMerge: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Sb.MBS_TILE.getSize()))
        },
        getCollision: function() {
          return this.data.readInt(this.address + Sb.collision.address)
        },
        setCollision: function(a) {
          this.data.writeInt(this.address + Sb.collision.address, a)
        },
        getMetadata: function() {
          return this.data.readString(this.address + Sb.metadata.address)
        },
        setMetadata: function(a) {
          this.data.writeString(this.address + Sb.metadata.address, a)
        },
        getDurations: function() {
          this._durations.setAddress(this.data.readInt(this.address +
            Sb.durations.address));
          return this._durations
        },
        createDurations: function(a) {
          this._durations.allocateNew(a);
          this.data.writeInt(this.address + Sb.durations.address, this._durations.getAddress());
          return this._durations
        },
        getFrames: function() {
          return this.data.readInt(this.address + Sb.frames.address)
        },
        setFrames: function(a) {
          this.data.writeInt(this.address + Sb.frames.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + Sb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + Sb.id.address,
            a)
        },
        getOrder: function() {
          return this.data.readInt(this.address + Sb.order.address)
        },
        setOrder: function(a) {
          this.data.writeInt(this.address + Sb.order.address, a)
        },
        getAutotile: function() {
          return this.data.readInt(this.address + Sb.autotile.address)
        },
        setAutotile: function(a) {
          this.data.writeInt(this.address + Sb.autotile.address, a)
        },
        getAutotileMerge: function() {
          this._autotileMerge.setAddress(this.data.readInt(this.address + Sb.autotileMerge.address));
          return this._autotileMerge
        },
        createAutotileMerge: function(a) {
          this._autotileMerge.allocateNew(a);
          this.data.writeInt(this.address + Sb.autotileMerge.address, this._autotileMerge.getAddress());
          return this._autotileMerge
        },
        __class__: Sb
      });
      var ic = function(a) {
        this.data = a;
        this._tiles = new Ta(a, Sb.MBS_TILE, new Sb(a))
      };
      k["com.stencyl.io.mbs.scene.MbsTileset"] = ic;
      ic.__name__ = "com.stencyl.io.mbs.scene.MbsTileset";
      ic.initializeType = function() {
        null == ic.MBS_TILESET && (tb.initializeType(), ic.MBS_TILESET = new zb("MbsTileset"), ic.MBS_TILESET.setInstantiator(function(a) {
            return new ic(a)
          }), ic.MBS_TILESET.inherit(tb.MBS_RESOURCE),
          ic.across = ic.MBS_TILESET.createField("across", H.INTEGER), ic.down = ic.MBS_TILESET.createField("down", H.INTEGER), ic.readableImages = ic.MBS_TILESET.createField("readableImages", H.BOOLEAN), ic.tileWidth = ic.MBS_TILESET.createField("tileWidth", H.INTEGER), ic.tileHeight = ic.MBS_TILESET.createField("tileHeight", H.INTEGER), ic.tiles = ic.MBS_TILESET.createField("tiles", H.LIST))
      };
      ic.new_MbsTileset_list = function(a) {
        return new Ta(a, ic.MBS_TILESET, new ic(a))
      };
      ic.__super__ = tb;
      ic.prototype = t(tb.prototype, {
        getMbsType: function() {
          return ic.MBS_TILESET
        },
        _tiles: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(ic.MBS_TILESET.getSize()))
        },
        getAcross: function() {
          return this.data.readInt(this.address + ic.across.address)
        },
        setAcross: function(a) {
          this.data.writeInt(this.address + ic.across.address, a)
        },
        getDown: function() {
          return this.data.readInt(this.address + ic.down.address)
        },
        setDown: function(a) {
          this.data.writeInt(this.address + ic.down.address, a)
        },
        getReadableImages: function() {
          return this.data.readBool(this.address + ic.readableImages.address)
        },
        setReadableImages: function(a) {
          this.data.writeBool(this.address +
            ic.readableImages.address, a)
        },
        getTileWidth: function() {
          return this.data.readInt(this.address + ic.tileWidth.address)
        },
        setTileWidth: function(a) {
          this.data.writeInt(this.address + ic.tileWidth.address, a)
        },
        getTileHeight: function() {
          return this.data.readInt(this.address + ic.tileHeight.address)
        },
        setTileHeight: function(a) {
          this.data.writeInt(this.address + ic.tileHeight.address, a)
        },
        getTiles: function() {
          this._tiles.setAddress(this.data.readInt(this.address + ic.tiles.address));
          return this._tiles
        },
        createTiles: function(a) {
          this._tiles.allocateNew(a);
          this.data.writeInt(this.address + ic.tiles.address, this._tiles.getAddress());
          return this._tiles
        },
        __class__: ic
      });
      var je = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.layers.MbsColorBackground"] = je;
      je.__name__ = "com.stencyl.io.mbs.scene.layers.MbsColorBackground";
      je.initializeType = function() {
        null == je.MBS_COLOR_BACKGROUND && (je.MBS_COLOR_BACKGROUND = new zb("MbsColorBackground"), je.MBS_COLOR_BACKGROUND.setInstantiator(function(a) {
          return new je(a)
        }), je.color = je.MBS_COLOR_BACKGROUND.createField("color",
          H.INTEGER))
      };
      je.new_MbsColorBackground_list = function(a) {
        return new Ta(a, je.MBS_COLOR_BACKGROUND, new je(a))
      };
      je.__super__ = mb;
      je.prototype = t(mb.prototype, {
        getMbsType: function() {
          return je.MBS_COLOR_BACKGROUND
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(je.MBS_COLOR_BACKGROUND.getSize()))
        },
        getColor: function() {
          return this.data.readInt(this.address + je.color.address)
        },
        setColor: function(a) {
          this.data.writeInt(this.address + je.color.address, a)
        },
        __class__: je
      });
      var Gd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.layers.MbsGradientBackground"] =
        Gd;
      Gd.__name__ = "com.stencyl.io.mbs.scene.layers.MbsGradientBackground";
      Gd.initializeType = function() {
        null == Gd.MBS_GRADIENT_BACKGROUND && (Gd.MBS_GRADIENT_BACKGROUND = new zb("MbsGradientBackground"), Gd.MBS_GRADIENT_BACKGROUND.setInstantiator(function(a) {
          return new Gd(a)
        }), Gd.color1 = Gd.MBS_GRADIENT_BACKGROUND.createField("color1", H.INTEGER), Gd.color2 = Gd.MBS_GRADIENT_BACKGROUND.createField("color2", H.INTEGER))
      };
      Gd.new_MbsGradientBackground_list = function(a) {
        return new Ta(a, Gd.MBS_GRADIENT_BACKGROUND, new Gd(a))
      };
      Gd.__super__ = mb;
      Gd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Gd.MBS_GRADIENT_BACKGROUND
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Gd.MBS_GRADIENT_BACKGROUND.getSize()))
        },
        getColor1: function() {
          return this.data.readInt(this.address + Gd.color1.address)
        },
        setColor1: function(a) {
          this.data.writeInt(this.address + Gd.color1.address, a)
        },
        getColor2: function() {
          return this.data.readInt(this.address + Gd.color2.address)
        },
        setColor2: function(a) {
          this.data.writeInt(this.address + Gd.color2.address,
            a)
        },
        __class__: Gd
      });
      var pb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.layers.MbsLayer"] = pb;
      pb.__name__ = "com.stencyl.io.mbs.scene.layers.MbsLayer";
      pb.initializeType = function() {
        null == pb.MBS_LAYER && (pb.MBS_LAYER = new zb("MbsLayer"), pb.MBS_LAYER.setInstantiator(function(a) {
            return new pb(a)
          }), pb.id = pb.MBS_LAYER.createField("id", H.INTEGER), pb.$name = pb.MBS_LAYER.createField("name", H.STRING), pb.order = pb.MBS_LAYER.createField("order", H.INTEGER), pb.opacity = pb.MBS_LAYER.createField("opacity", H.INTEGER),
          pb.blendmode = pb.MBS_LAYER.createField("blendmode", H.STRING), pb.scrollFactorX = pb.MBS_LAYER.createField("scrollFactorX", H.FLOAT), pb.scrollFactorY = pb.MBS_LAYER.createField("scrollFactorY", H.FLOAT), pb.visible = pb.MBS_LAYER.createField("visible", H.BOOLEAN), pb.locked = pb.MBS_LAYER.createField("locked", H.BOOLEAN))
      };
      pb.new_MbsLayer_list = function(a) {
        return new Ta(a, pb.MBS_LAYER, new pb(a))
      };
      pb.__super__ = mb;
      pb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return pb.MBS_LAYER
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(pb.MBS_LAYER.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + pb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + pb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + pb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + pb.$name.address, a)
        },
        getOrder: function() {
          return this.data.readInt(this.address + pb.order.address)
        },
        setOrder: function(a) {
          this.data.writeInt(this.address + pb.order.address, a)
        },
        getOpacity: function() {
          return this.data.readInt(this.address +
            pb.opacity.address)
        },
        setOpacity: function(a) {
          this.data.writeInt(this.address + pb.opacity.address, a)
        },
        getBlendmode: function() {
          return this.data.readString(this.address + pb.blendmode.address)
        },
        setBlendmode: function(a) {
          this.data.writeString(this.address + pb.blendmode.address, a)
        },
        getScrollFactorX: function() {
          return this.data.readFloat(this.address + pb.scrollFactorX.address)
        },
        setScrollFactorX: function(a) {
          this.data.writeFloat(this.address + pb.scrollFactorX.address, a)
        },
        getScrollFactorY: function() {
          return this.data.readFloat(this.address +
            pb.scrollFactorY.address)
        },
        setScrollFactorY: function(a) {
          this.data.writeFloat(this.address + pb.scrollFactorY.address, a)
        },
        getVisible: function() {
          return this.data.readBool(this.address + pb.visible.address)
        },
        setVisible: function(a) {
          this.data.writeBool(this.address + pb.visible.address, a)
        },
        getLocked: function() {
          return this.data.readBool(this.address + pb.locked.address)
        },
        setLocked: function(a) {
          this.data.writeBool(this.address + pb.locked.address, a)
        },
        __class__: pb
      });
      var Hd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.layers.MbsImageBackground"] =
        Hd;
      Hd.__name__ = "com.stencyl.io.mbs.scene.layers.MbsImageBackground";
      Hd.initializeType = function() {
        null == Hd.MBS_IMAGE_BACKGROUND && (pb.initializeType(), Hd.MBS_IMAGE_BACKGROUND = new zb("MbsImageBackground"), Hd.MBS_IMAGE_BACKGROUND.setInstantiator(function(a) {
          return new Hd(a)
        }), Hd.MBS_IMAGE_BACKGROUND.inherit(pb.MBS_LAYER), Hd.resourceID = Hd.MBS_IMAGE_BACKGROUND.createField("resourceID", H.INTEGER), Hd.customScroll = Hd.MBS_IMAGE_BACKGROUND.createField("customScroll", H.BOOLEAN))
      };
      Hd.new_MbsImageBackground_list =
        function(a) {
          return new Ta(a, Hd.MBS_IMAGE_BACKGROUND, new Hd(a))
        };
      Hd.__super__ = pb;
      Hd.prototype = t(pb.prototype, {
        getMbsType: function() {
          return Hd.MBS_IMAGE_BACKGROUND
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Hd.MBS_IMAGE_BACKGROUND.getSize()))
        },
        getResourceID: function() {
          return this.data.readInt(this.address + Hd.resourceID.address)
        },
        setResourceID: function(a) {
          this.data.writeInt(this.address + Hd.resourceID.address, a)
        },
        getCustomScroll: function() {
          return this.data.readBool(this.address + Hd.customScroll.address)
        },
        setCustomScroll: function(a) {
          this.data.writeBool(this.address + Hd.customScroll.address, a)
        },
        __class__: Hd
      });
      var ke = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.layers.MbsInteractiveLayer"] = ke;
      ke.__name__ = "com.stencyl.io.mbs.scene.layers.MbsInteractiveLayer";
      ke.initializeType = function() {
        null == ke.MBS_INTERACTIVE_LAYER && (pb.initializeType(), ke.MBS_INTERACTIVE_LAYER = new zb("MbsInteractiveLayer"), ke.MBS_INTERACTIVE_LAYER.setInstantiator(function(a) {
            return new ke(a)
          }), ke.MBS_INTERACTIVE_LAYER.inherit(pb.MBS_LAYER),
          ke.color = ke.MBS_INTERACTIVE_LAYER.createField("color", H.INTEGER))
      };
      ke.new_MbsInteractiveLayer_list = function(a) {
        return new Ta(a, ke.MBS_INTERACTIVE_LAYER, new ke(a))
      };
      ke.__super__ = pb;
      ke.prototype = t(pb.prototype, {
        getMbsType: function() {
          return ke.MBS_INTERACTIVE_LAYER
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(ke.MBS_INTERACTIVE_LAYER.getSize()))
        },
        getColor: function() {
          return this.data.readInt(this.address + ke.color.address)
        },
        setColor: function(a) {
          this.data.writeInt(this.address + ke.color.address,
            a)
        },
        __class__: ke
      });
      var Wb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.physics.MbsJoint"] = Wb;
      Wb.__name__ = "com.stencyl.io.mbs.scene.physics.MbsJoint";
      Wb.initializeType = function() {
        null == Wb.MBS_JOINT && (Wb.MBS_JOINT = new zb("MbsJoint"), Wb.MBS_JOINT.setInstantiator(function(a) {
            return new Wb(a)
          }), Wb.id = Wb.MBS_JOINT.createField("id", H.INTEGER), Wb.$name = Wb.MBS_JOINT.createField("name", H.STRING), Wb.actor1 = Wb.MBS_JOINT.createField("actor1", H.INTEGER), Wb.actor2 = Wb.MBS_JOINT.createField("actor2", H.INTEGER),
          Wb.collide = Wb.MBS_JOINT.createField("collide", H.BOOLEAN))
      };
      Wb.new_MbsJoint_list = function(a) {
        return new Ta(a, Wb.MBS_JOINT, new Wb(a))
      };
      Wb.__super__ = mb;
      Wb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Wb.MBS_JOINT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Wb.MBS_JOINT.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + Wb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + Wb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address +
            Wb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Wb.$name.address, a)
        },
        getActor1: function() {
          return this.data.readInt(this.address + Wb.actor1.address)
        },
        setActor1: function(a) {
          this.data.writeInt(this.address + Wb.actor1.address, a)
        },
        getActor2: function() {
          return this.data.readInt(this.address + Wb.actor2.address)
        },
        setActor2: function(a) {
          this.data.writeInt(this.address + Wb.actor2.address, a)
        },
        getCollide: function() {
          return this.data.readBool(this.address + Wb.collide.address)
        },
        setCollide: function(a) {
          this.data.writeBool(this.address +
            Wb.collide.address, a)
        },
        __class__: Wb
      });
      var jc = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.physics.MbsHingeJoint"] = jc;
      jc.__name__ = "com.stencyl.io.mbs.scene.physics.MbsHingeJoint";
      jc.initializeType = function() {
        null == jc.MBS_HINGE_JOINT && (Wb.initializeType(), jc.MBS_HINGE_JOINT = new zb("MbsHingeJoint"), jc.MBS_HINGE_JOINT.setInstantiator(function(a) {
          return new jc(a)
        }), jc.MBS_HINGE_JOINT.inherit(Wb.MBS_JOINT), jc.limit = jc.MBS_HINGE_JOINT.createField("limit", H.BOOLEAN), jc.motor = jc.MBS_HINGE_JOINT.createField("motor",
          H.BOOLEAN), jc.lower = jc.MBS_HINGE_JOINT.createField("lower", H.FLOAT), jc.upper = jc.MBS_HINGE_JOINT.createField("upper", H.FLOAT), jc.torque = jc.MBS_HINGE_JOINT.createField("torque", H.FLOAT), jc.speed = jc.MBS_HINGE_JOINT.createField("speed", H.FLOAT))
      };
      jc.new_MbsHingeJoint_list = function(a) {
        return new Ta(a, jc.MBS_HINGE_JOINT, new jc(a))
      };
      jc.__super__ = Wb;
      jc.prototype = t(Wb.prototype, {
        getMbsType: function() {
          return jc.MBS_HINGE_JOINT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(jc.MBS_HINGE_JOINT.getSize()))
        },
        getLimit: function() {
          return this.data.readBool(this.address + jc.limit.address)
        },
        setLimit: function(a) {
          this.data.writeBool(this.address + jc.limit.address, a)
        },
        getMotor: function() {
          return this.data.readBool(this.address + jc.motor.address)
        },
        setMotor: function(a) {
          this.data.writeBool(this.address + jc.motor.address, a)
        },
        getLower: function() {
          return this.data.readFloat(this.address + jc.lower.address)
        },
        setLower: function(a) {
          this.data.writeFloat(this.address + jc.lower.address, a)
        },
        getUpper: function() {
          return this.data.readFloat(this.address +
            jc.upper.address)
        },
        setUpper: function(a) {
          this.data.writeFloat(this.address + jc.upper.address, a)
        },
        getTorque: function() {
          return this.data.readFloat(this.address + jc.torque.address)
        },
        setTorque: function(a) {
          this.data.writeFloat(this.address + jc.torque.address, a)
        },
        getSpeed: function() {
          return this.data.readFloat(this.address + jc.speed.address)
        },
        setSpeed: function(a) {
          this.data.writeFloat(this.address + jc.speed.address, a)
        },
        __class__: jc
      });
      var Zb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.physics.MbsRegion"] =
        Zb;
      Zb.__name__ = "com.stencyl.io.mbs.scene.physics.MbsRegion";
      Zb.initializeType = function() {
        null == Zb.MBS_REGION && (Zb.MBS_REGION = new zb("MbsRegion"), Zb.MBS_REGION.setInstantiator(function(a) {
          return new Zb(a)
        }), Zb.color = Zb.MBS_REGION.createField("color", H.INTEGER), Zb.id = Zb.MBS_REGION.createField("id", H.INTEGER), Zb.$name = Zb.MBS_REGION.createField("name", H.STRING), Zb.shape = Zb.MBS_REGION.createField("shape", H.DYNAMIC), Zb.x = Zb.MBS_REGION.createField("x", H.INTEGER), Zb.y = Zb.MBS_REGION.createField("y", H.INTEGER))
      };
      Zb.new_MbsRegion_list = function(a) {
        return new Ta(a, Zb.MBS_REGION, new Zb(a))
      };
      Zb.__super__ = mb;
      Zb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Zb.MBS_REGION
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Zb.MBS_REGION.getSize()))
        },
        getColor: function() {
          return this.data.readInt(this.address + Zb.color.address)
        },
        setColor: function(a) {
          this.data.writeInt(this.address + Zb.color.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + Zb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address +
            Zb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + Zb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Zb.$name.address, a)
        },
        getShape: function() {
          return ie.readDynamic(this.data, this.address + Zb.shape.address)
        },
        setShape: function(a) {
          ie.writeDynamic(this.data, this.address + Zb.shape.address, a)
        },
        getX: function() {
          return this.data.readInt(this.address + Zb.x.address)
        },
        setX: function(a) {
          this.data.writeInt(this.address + Zb.x.address, a)
        },
        getY: function() {
          return this.data.readInt(this.address +
            Zb.y.address)
        },
        setY: function(a) {
          this.data.writeInt(this.address + Zb.y.address, a)
        },
        __class__: Zb
      });
      var Tb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.physics.MbsSlidingJoint"] = Tb;
      Tb.__name__ = "com.stencyl.io.mbs.scene.physics.MbsSlidingJoint";
      Tb.initializeType = function() {
        null == Tb.MBS_SLIDING_JOINT && (Wb.initializeType(), Tb.MBS_SLIDING_JOINT = new zb("MbsSlidingJoint"), Tb.MBS_SLIDING_JOINT.setInstantiator(function(a) {
          return new Tb(a)
        }), Tb.MBS_SLIDING_JOINT.inherit(Wb.MBS_JOINT), Tb.limit = Tb.MBS_SLIDING_JOINT.createField("limit",
          H.BOOLEAN), Tb.motor = Tb.MBS_SLIDING_JOINT.createField("motor", H.BOOLEAN), Tb.lower = Tb.MBS_SLIDING_JOINT.createField("lower", H.FLOAT), Tb.upper = Tb.MBS_SLIDING_JOINT.createField("upper", H.FLOAT), Tb.force = Tb.MBS_SLIDING_JOINT.createField("force", H.FLOAT), Tb.speed = Tb.MBS_SLIDING_JOINT.createField("speed", H.FLOAT), Tb.x = Tb.MBS_SLIDING_JOINT.createField("x", H.FLOAT), Tb.y = Tb.MBS_SLIDING_JOINT.createField("y", H.FLOAT))
      };
      Tb.new_MbsSlidingJoint_list = function(a) {
        return new Ta(a, Tb.MBS_SLIDING_JOINT, new Tb(a))
      };
      Tb.__super__ = Wb;
      Tb.prototype = t(Wb.prototype, {
        getMbsType: function() {
          return Tb.MBS_SLIDING_JOINT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Tb.MBS_SLIDING_JOINT.getSize()))
        },
        getLimit: function() {
          return this.data.readBool(this.address + Tb.limit.address)
        },
        setLimit: function(a) {
          this.data.writeBool(this.address + Tb.limit.address, a)
        },
        getMotor: function() {
          return this.data.readBool(this.address + Tb.motor.address)
        },
        setMotor: function(a) {
          this.data.writeBool(this.address + Tb.motor.address, a)
        },
        getLower: function() {
          return this.data.readFloat(this.address +
            Tb.lower.address)
        },
        setLower: function(a) {
          this.data.writeFloat(this.address + Tb.lower.address, a)
        },
        getUpper: function() {
          return this.data.readFloat(this.address + Tb.upper.address)
        },
        setUpper: function(a) {
          this.data.writeFloat(this.address + Tb.upper.address, a)
        },
        getForce: function() {
          return this.data.readFloat(this.address + Tb.force.address)
        },
        setForce: function(a) {
          this.data.writeFloat(this.address + Tb.force.address, a)
        },
        getSpeed: function() {
          return this.data.readFloat(this.address + Tb.speed.address)
        },
        setSpeed: function(a) {
          this.data.writeFloat(this.address +
            Tb.speed.address, a)
        },
        getX: function() {
          return this.data.readFloat(this.address + Tb.x.address)
        },
        setX: function(a) {
          this.data.writeFloat(this.address + Tb.x.address, a)
        },
        getY: function() {
          return this.data.readFloat(this.address + Tb.y.address)
        },
        setY: function(a) {
          this.data.writeFloat(this.address + Tb.y.address, a)
        },
        __class__: Tb
      });
      var Id = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.physics.MbsStickJoint"] = Id;
      Id.__name__ = "com.stencyl.io.mbs.scene.physics.MbsStickJoint";
      Id.initializeType = function() {
        null == Id.MBS_STICK_JOINT &&
          (Wb.initializeType(), Id.MBS_STICK_JOINT = new zb("MbsStickJoint"), Id.MBS_STICK_JOINT.setInstantiator(function(a) {
            return new Id(a)
          }), Id.MBS_STICK_JOINT.inherit(Wb.MBS_JOINT), Id.damping = Id.MBS_STICK_JOINT.createField("damping", H.FLOAT), Id.frequency = Id.MBS_STICK_JOINT.createField("frequency", H.FLOAT))
      };
      Id.new_MbsStickJoint_list = function(a) {
        return new Ta(a, Id.MBS_STICK_JOINT, new Id(a))
      };
      Id.__super__ = Wb;
      Id.prototype = t(Wb.prototype, {
        getMbsType: function() {
          return Id.MBS_STICK_JOINT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Id.MBS_STICK_JOINT.getSize()))
        },
        getDamping: function() {
          return this.data.readFloat(this.address + Id.damping.address)
        },
        setDamping: function(a) {
          this.data.writeFloat(this.address + Id.damping.address, a)
        },
        getFrequency: function() {
          return this.data.readFloat(this.address + Id.frequency.address)
        },
        setFrequency: function(a) {
          this.data.writeFloat(this.address + Id.frequency.address, a)
        },
        __class__: Id
      });
      var ce = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.scene.physics.MbsTerrainRegion"] = ce;
      ce.__name__ = "com.stencyl.io.mbs.scene.physics.MbsTerrainRegion";
      ce.initializeType = function() {
        null == ce.MBS_TERRAIN_REGION && (Zb.initializeType(), ce.MBS_TERRAIN_REGION = new zb("MbsTerrainRegion"), ce.MBS_TERRAIN_REGION.setInstantiator(function(a) {
          return new ce(a)
        }), ce.MBS_TERRAIN_REGION.inherit(Zb.MBS_REGION), ce.groupID = ce.MBS_TERRAIN_REGION.createField("groupID", H.INTEGER))
      };
      ce.new_MbsTerrainRegion_list = function(a) {
        return new Ta(a, ce.MBS_TERRAIN_REGION, new ce(a))
      };
      ce.__super__ = Zb;
      ce.prototype = t(Zb.prototype, {
        getMbsType: function() {
          return ce.MBS_TERRAIN_REGION
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(ce.MBS_TERRAIN_REGION.getSize()))
        },
        getGroupID: function() {
          return this.data.readInt(this.address + ce.groupID.address)
        },
        setGroupID: function(a) {
          this.data.writeInt(this.address + ce.groupID.address, a)
        },
        __class__: ce
      });
      var Ud = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.shape.MbsShape"] = Ud;
      Ud.__name__ = "com.stencyl.io.mbs.shape.MbsShape";
      Ud.initializeType = function() {
        null == Ud.MBS_SHAPE && (Ud.MBS_SHAPE = new zb("MbsShape"), Ud.MBS_SHAPE.setInstantiator(function(a) {
          return new Ud(a)
        }))
      };
      Ud.new_MbsShape_list = function(a) {
        return new Ta(a, Ud.MBS_SHAPE,
          new Ud(a))
      };
      Ud.__super__ = mb;
      Ud.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Ud.MBS_SHAPE
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Ud.MBS_SHAPE.getSize()))
        },
        __class__: Ud
      });
      var Ld = function(a) {
        this.data = a;
        this._position = new uc(a)
      };
      k["com.stencyl.io.mbs.shape.MbsCircle"] = Ld;
      Ld.__name__ = "com.stencyl.io.mbs.shape.MbsCircle";
      Ld.initializeType = function() {
        null == Ld.MBS_CIRCLE && (Ud.initializeType(), Ld.MBS_CIRCLE = new zb("MbsCircle"), Ld.MBS_CIRCLE.setInstantiator(function(a) {
            return new Ld(a)
          }),
          Ld.MBS_CIRCLE.inherit(Ud.MBS_SHAPE), Ld.position = Ld.MBS_CIRCLE.createField("position", uc.MBS_POINT), Ld.radius = Ld.MBS_CIRCLE.createField("radius", H.FLOAT))
      };
      Ld.new_MbsCircle_list = function(a) {
        return new Ta(a, Ld.MBS_CIRCLE, new Ld(a))
      };
      Ld.__super__ = Ud;
      Ld.prototype = t(Ud.prototype, {
        getMbsType: function() {
          return Ld.MBS_CIRCLE
        },
        _position: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Ld.MBS_CIRCLE.getSize()))
        },
        getPosition: function() {
          this._position.setAddress(this.address + Ld.position.address);
          return this._position
        },
        getRadius: function() {
          return this.data.readFloat(this.address + Ld.radius.address)
        },
        setRadius: function(a) {
          this.data.writeFloat(this.address + Ld.radius.address, a)
        },
        __class__: Ld
      });
      var uc = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.shape.MbsPoint"] = uc;
      uc.__name__ = "com.stencyl.io.mbs.shape.MbsPoint";
      uc.initializeType = function() {
        null == uc.MBS_POINT && (uc.MBS_POINT = new zb("MbsPoint"), uc.MBS_POINT.setInstantiator(function(a) {
            return new uc(a)
          }), uc.x = uc.MBS_POINT.createField("x", H.FLOAT),
          uc.y = uc.MBS_POINT.createField("y", H.FLOAT))
      };
      uc.new_MbsPoint_list = function(a) {
        return new Ta(a, uc.MBS_POINT, new uc(a))
      };
      uc.__super__ = mb;
      uc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return uc.MBS_POINT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(uc.MBS_POINT.getSize()))
        },
        getX: function() {
          return this.data.readFloat(this.address + uc.x.address)
        },
        setX: function(a) {
          this.data.writeFloat(this.address + uc.x.address, a)
        },
        getY: function() {
          return this.data.readFloat(this.address + uc.y.address)
        },
        setY: function(a) {
          this.data.writeFloat(this.address + uc.y.address, a)
        },
        __class__: uc
      });
      var Yc = function(a) {
        this.data = a;
        this._points = new Ta(a, uc.MBS_POINT, new uc(a))
      };
      k["com.stencyl.io.mbs.shape.MbsPolygon"] = Yc;
      Yc.__name__ = "com.stencyl.io.mbs.shape.MbsPolygon";
      Yc.initializeType = function() {
        null == Yc.MBS_POLYGON && (Ud.initializeType(), Yc.MBS_POLYGON = new zb("MbsPolygon"), Yc.MBS_POLYGON.setInstantiator(function(a) {
          return new Yc(a)
        }), Yc.MBS_POLYGON.inherit(Ud.MBS_SHAPE), Yc.points = Yc.MBS_POLYGON.createField("points",
          H.LIST))
      };
      Yc.new_MbsPolygon_list = function(a) {
        return new Ta(a, Yc.MBS_POLYGON, new Yc(a))
      };
      Yc.__super__ = Ud;
      Yc.prototype = t(Ud.prototype, {
        getMbsType: function() {
          return Yc.MBS_POLYGON
        },
        _points: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Yc.MBS_POLYGON.getSize()))
        },
        getPoints: function() {
          this._points.setAddress(this.data.readInt(this.address + Yc.points.address));
          return this._points
        },
        createPoints: function(a) {
          this._points.allocateNew(a);
          this.data.writeInt(this.address + Yc.points.address, this._points.getAddress());
          return this._points
        },
        __class__: Yc
      });
      var xd = function(a) {
        Yc.call(this, a)
      };
      k["com.stencyl.io.mbs.shape.MbsPolyRegion"] = xd;
      xd.__name__ = "com.stencyl.io.mbs.shape.MbsPolyRegion";
      xd.initializeType = function() {
        null == xd.MBS_POLY_REGION && (Yc.initializeType(), xd.MBS_POLY_REGION = new zb("MbsPolyRegion"), xd.MBS_POLY_REGION.setInstantiator(function(a) {
          return new xd(a)
        }), xd.MBS_POLY_REGION.inherit(Yc.MBS_POLYGON), xd.width = xd.MBS_POLY_REGION.createField("width", H.INTEGER), xd.height = xd.MBS_POLY_REGION.createField("height",
          H.INTEGER))
      };
      xd.new_MbsPolyRegion_list = function(a) {
        return new Ta(a, xd.MBS_POLY_REGION, new xd(a))
      };
      xd.__super__ = Yc;
      xd.prototype = t(Yc.prototype, {
        getMbsType: function() {
          return xd.MBS_POLY_REGION
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(xd.MBS_POLY_REGION.getSize()))
        },
        getWidth: function() {
          return this.data.readInt(this.address + xd.width.address)
        },
        setWidth: function(a) {
          this.data.writeInt(this.address + xd.width.address, a)
        },
        getHeight: function() {
          return this.data.readInt(this.address + xd.height.address)
        },
        setHeight: function(a) {
          this.data.writeInt(this.address + xd.height.address, a)
        },
        __class__: xd
      });
      var le = function(a) {
        Yc.call(this, a);
        this._position = new uc(a)
      };
      k["com.stencyl.io.mbs.shape.MbsWireframe"] = le;
      le.__name__ = "com.stencyl.io.mbs.shape.MbsWireframe";
      le.initializeType = function() {
        null == le.MBS_WIREFRAME && (Yc.initializeType(), le.MBS_WIREFRAME = new zb("MbsWireframe"), le.MBS_WIREFRAME.setInstantiator(function(a) {
          return new le(a)
        }), le.MBS_WIREFRAME.inherit(Yc.MBS_POLYGON), le.position = le.MBS_WIREFRAME.createField("position",
          uc.MBS_POINT))
      };
      le.new_MbsWireframe_list = function(a) {
        return new Ta(a, le.MBS_WIREFRAME, new le(a))
      };
      le.__super__ = Yc;
      le.prototype = t(Yc.prototype, {
        getMbsType: function() {
          return le.MBS_WIREFRAME
        },
        _position: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(le.MBS_WIREFRAME.getSize()))
        },
        getPosition: function() {
          this._position.setAddress(this.address + le.position.address);
          return this._position
        },
        __class__: le
      });
      var hd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.snippet.MbsAttribute"] = hd;
      hd.__name__ =
        "com.stencyl.io.mbs.snippet.MbsAttribute";
      hd.initializeType = function() {
        null == hd.MBS_ATTRIBUTE && (hd.MBS_ATTRIBUTE = new zb("MbsAttribute"), hd.MBS_ATTRIBUTE.setInstantiator(function(a) {
          return new hd(a)
        }), hd.id = hd.MBS_ATTRIBUTE.createField("id", H.INTEGER), hd.type = hd.MBS_ATTRIBUTE.createField("type", H.STRING), hd.value = hd.MBS_ATTRIBUTE.createField("value", H.DYNAMIC))
      };
      hd.new_MbsAttribute_list = function(a) {
        return new Ta(a, hd.MBS_ATTRIBUTE, new hd(a))
      };
      hd.__super__ = mb;
      hd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return hd.MBS_ATTRIBUTE
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(hd.MBS_ATTRIBUTE.getSize()))
        },
        getId: function() {
          return this.data.readInt(this.address + hd.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + hd.id.address, a)
        },
        getType: function() {
          return this.data.readString(this.address + hd.type.address)
        },
        setType: function(a) {
          this.data.writeString(this.address + hd.type.address, a)
        },
        getValue: function() {
          return ie.readDynamic(this.data, this.address + hd.value.address)
        },
        setValue: function(a) {
          ie.writeDynamic(this.data,
            this.address + hd.value.address, a)
        },
        __class__: hd
      });
      var Eb = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.snippet.MbsAttributeDef"] = Eb;
      Eb.__name__ = "com.stencyl.io.mbs.snippet.MbsAttributeDef";
      Eb.initializeType = function() {
        null == Eb.MBS_ATTRIBUTE_DEF && (Eb.MBS_ATTRIBUTE_DEF = new zb("MbsAttributeDef"), Eb.MBS_ATTRIBUTE_DEF.setInstantiator(function(a) {
            return new Eb(a)
          }), Eb.type = Eb.MBS_ATTRIBUTE_DEF.createField("type", H.STRING), Eb.defaultValue = Eb.MBS_ATTRIBUTE_DEF.createField("defaultValue", H.DYNAMIC), Eb.description =
          Eb.MBS_ATTRIBUTE_DEF.createField("description", H.STRING), Eb.dropdown = Eb.MBS_ATTRIBUTE_DEF.createField("dropdown", H.STRING), Eb.fullname = Eb.MBS_ATTRIBUTE_DEF.createField("fullname", H.STRING), Eb.hidden = Eb.MBS_ATTRIBUTE_DEF.createField("hidden", H.BOOLEAN), Eb.id = Eb.MBS_ATTRIBUTE_DEF.createField("id", H.INTEGER), Eb.$name = Eb.MBS_ATTRIBUTE_DEF.createField("name", H.STRING), Eb.order = Eb.MBS_ATTRIBUTE_DEF.createField("order", H.INTEGER))
      };
      Eb.new_MbsAttributeDef_list = function(a) {
        return new Ta(a, Eb.MBS_ATTRIBUTE_DEF,
          new Eb(a))
      };
      Eb.__super__ = mb;
      Eb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Eb.MBS_ATTRIBUTE_DEF
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Eb.MBS_ATTRIBUTE_DEF.getSize()))
        },
        getType: function() {
          return this.data.readString(this.address + Eb.type.address)
        },
        setType: function(a) {
          this.data.writeString(this.address + Eb.type.address, a)
        },
        getDefaultValue: function() {
          return ie.readDynamic(this.data, this.address + Eb.defaultValue.address)
        },
        setDefaultValue: function(a) {
          ie.writeDynamic(this.data,
            this.address + Eb.defaultValue.address, a)
        },
        getDescription: function() {
          return this.data.readString(this.address + Eb.description.address)
        },
        setDescription: function(a) {
          this.data.writeString(this.address + Eb.description.address, a)
        },
        getDropdown: function() {
          return this.data.readString(this.address + Eb.dropdown.address)
        },
        setDropdown: function(a) {
          this.data.writeString(this.address + Eb.dropdown.address, a)
        },
        getFullname: function() {
          return this.data.readString(this.address + Eb.fullname.address)
        },
        setFullname: function(a) {
          this.data.writeString(this.address +
            Eb.fullname.address, a)
        },
        getHidden: function() {
          return this.data.readBool(this.address + Eb.hidden.address)
        },
        setHidden: function(a) {
          this.data.writeBool(this.address + Eb.hidden.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + Eb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + Eb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address + Eb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + Eb.$name.address, a)
        },
        getOrder: function() {
          return this.data.readInt(this.address +
            Eb.order.address)
        },
        setOrder: function(a) {
          this.data.writeInt(this.address + Eb.order.address, a)
        },
        __class__: Eb
      });
      var gd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.snippet.MbsBlock"] = gd;
      gd.__name__ = "com.stencyl.io.mbs.snippet.MbsBlock";
      gd.initializeType = function() {
        null == gd.MBS_BLOCK && (gd.MBS_BLOCK = new zb("MbsBlock"), gd.MBS_BLOCK.setInstantiator(function(a) {
          return new gd(a)
        }), gd.type = gd.MBS_BLOCK.createField("type", H.STRING), gd.id = gd.MBS_BLOCK.createField("id", H.INTEGER), gd.blockID = gd.MBS_BLOCK.createField("blockID",
          H.INTEGER))
      };
      gd.new_MbsBlock_list = function(a) {
        return new Ta(a, gd.MBS_BLOCK, new gd(a))
      };
      gd.__super__ = mb;
      gd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return gd.MBS_BLOCK
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(gd.MBS_BLOCK.getSize()))
        },
        getType: function() {
          return this.data.readString(this.address + gd.type.address)
        },
        setType: function(a) {
          this.data.writeString(this.address + gd.type.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + gd.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address +
            gd.id.address, a)
        },
        getBlockID: function() {
          return this.data.readInt(this.address + gd.blockID.address)
        },
        setBlockID: function(a) {
          this.data.writeInt(this.address + gd.blockID.address, a)
        },
        __class__: gd
      });
      var kc = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.snippet.MbsEvent"] = kc;
      kc.__name__ = "com.stencyl.io.mbs.snippet.MbsEvent";
      kc.initializeType = function() {
        null == kc.MBS_EVENT && (kc.MBS_EVENT = new zb("MbsEvent"), kc.MBS_EVENT.setInstantiator(function(a) {
          return new kc(a)
        }), kc.displayName = kc.MBS_EVENT.createField("displayName",
          H.STRING), kc.enabled = kc.MBS_EVENT.createField("enabled", H.BOOLEAN), kc.id = kc.MBS_EVENT.createField("id", H.INTEGER), kc.$name = kc.MBS_EVENT.createField("name", H.STRING), kc.order = kc.MBS_EVENT.createField("order", H.INTEGER), kc.repeats = kc.MBS_EVENT.createField("repeats", H.BOOLEAN))
      };
      kc.new_MbsEvent_list = function(a) {
        return new Ta(a, kc.MBS_EVENT, new kc(a))
      };
      kc.__super__ = mb;
      kc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return kc.MBS_EVENT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(kc.MBS_EVENT.getSize()))
        },
        getDisplayName: function() {
          return this.data.readString(this.address + kc.displayName.address)
        },
        setDisplayName: function(a) {
          this.data.writeString(this.address + kc.displayName.address, a)
        },
        getEnabled: function() {
          return this.data.readBool(this.address + kc.enabled.address)
        },
        setEnabled: function(a) {
          this.data.writeBool(this.address + kc.enabled.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + kc.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + kc.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address +
            kc.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + kc.$name.address, a)
        },
        getOrder: function() {
          return this.data.readInt(this.address + kc.order.address)
        },
        setOrder: function(a) {
          this.data.writeInt(this.address + kc.order.address, a)
        },
        getRepeats: function() {
          return this.data.readBool(this.address + kc.repeats.address)
        },
        setRepeats: function(a) {
          this.data.writeBool(this.address + kc.repeats.address, a)
        },
        __class__: kc
      });
      var Jd = function(a) {
        this.data = a
      };
      k["com.stencyl.io.mbs.snippet.MbsMapElement"] = Jd;
      Jd.__name__ = "com.stencyl.io.mbs.snippet.MbsMapElement";
      Jd.initializeType = function() {
        null == Jd.MBS_MAP_ELEMENT && (Jd.MBS_MAP_ELEMENT = new zb("MbsMapElement"), Jd.MBS_MAP_ELEMENT.setInstantiator(function(a) {
          return new Jd(a)
        }), Jd.key = Jd.MBS_MAP_ELEMENT.createField("key", H.STRING), Jd.value = Jd.MBS_MAP_ELEMENT.createField("value", H.DYNAMIC))
      };
      Jd.new_MbsMapElement_list = function(a) {
        return new Ta(a, Jd.MBS_MAP_ELEMENT, new Jd(a))
      };
      Jd.__super__ = mb;
      Jd.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Jd.MBS_MAP_ELEMENT
        },
        allocateNew: function() {
          this.setAddress(this.data.allocate(Jd.MBS_MAP_ELEMENT.getSize()))
        },
        getKey: function() {
          return this.data.readString(this.address + Jd.key.address)
        },
        setKey: function(a) {
          this.data.writeString(this.address + Jd.key.address, a)
        },
        getValue: function() {
          return ie.readDynamic(this.data, this.address + Jd.value.address)
        },
        setValue: function(a) {
          ie.writeDynamic(this.data, this.address + Jd.value.address, a)
        },
        __class__: Jd
      });
      var Oc = function(a) {
        this.data = a;
        this._properties = new Ta(a, hd.MBS_ATTRIBUTE, new hd(a))
      };
      k["com.stencyl.io.mbs.snippet.MbsSnippet"] = Oc;
      Oc.__name__ = "com.stencyl.io.mbs.snippet.MbsSnippet";
      Oc.initializeType = function() {
        null == Oc.MBS_SNIPPET && (Oc.MBS_SNIPPET = new zb("MbsSnippet"), Oc.MBS_SNIPPET.setInstantiator(function(a) {
          return new Oc(a)
        }), Oc.enabled = Oc.MBS_SNIPPET.createField("enabled", H.BOOLEAN), Oc.id = Oc.MBS_SNIPPET.createField("id", H.INTEGER), Oc.properties = Oc.MBS_SNIPPET.createField("properties", H.LIST))
      };
      Oc.new_MbsSnippet_list = function(a) {
        return new Ta(a, Oc.MBS_SNIPPET, new Oc(a))
      };
      Oc.__super__ =
        mb;
      Oc.prototype = t(mb.prototype, {
        getMbsType: function() {
          return Oc.MBS_SNIPPET
        },
        _properties: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(Oc.MBS_SNIPPET.getSize()))
        },
        getEnabled: function() {
          return this.data.readBool(this.address + Oc.enabled.address)
        },
        setEnabled: function(a) {
          this.data.writeBool(this.address + Oc.enabled.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + Oc.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + Oc.id.address, a)
        },
        getProperties: function() {
          this._properties.setAddress(this.data.readInt(this.address +
            Oc.properties.address));
          return this._properties
        },
        createProperties: function(a) {
          this._properties.allocateNew(a);
          this.data.writeInt(this.address + Oc.properties.address, this._properties.getAddress());
          return this._properties
        },
        __class__: Oc
      });
      var jb = function(a) {
        this.data = a;
        this._attributes = new Ta(a, Eb.MBS_ATTRIBUTE_DEF, new Eb(a));
        this._blocks = new Ta(a, gd.MBS_BLOCK, new gd(a));
        this._events = new Ta(a, kc.MBS_EVENT, new kc(a))
      };
      k["com.stencyl.io.mbs.snippet.MbsSnippetDef"] = jb;
      jb.__name__ = "com.stencyl.io.mbs.snippet.MbsSnippetDef";
      jb.initializeType = function() {
        null == jb.MBS_SNIPPET_DEF && (jb.MBS_SNIPPET_DEF = new zb("MbsSnippetDef"), jb.MBS_SNIPPET_DEF.setInstantiator(function(a) {
            return new jb(a)
          }), jb.attachedEvent = jb.MBS_SNIPPET_DEF.createField("attachedEvent", H.BOOLEAN), jb.actorID = jb.MBS_SNIPPET_DEF.createField("actorID", H.INTEGER), jb.classname = jb.MBS_SNIPPET_DEF.createField("classname", H.STRING), jb.description = jb.MBS_SNIPPET_DEF.createField("description", H.STRING), jb.design = jb.MBS_SNIPPET_DEF.createField("design", H.BOOLEAN), jb.drawOrder =
          jb.MBS_SNIPPET_DEF.createField("drawOrder", H.INTEGER), jb.id = jb.MBS_SNIPPET_DEF.createField("id", H.INTEGER), jb.$name = jb.MBS_SNIPPET_DEF.createField("name", H.STRING), jb.packageName = jb.MBS_SNIPPET_DEF.createField("packageName", H.STRING), jb.sceneID = jb.MBS_SNIPPET_DEF.createField("sceneID", H.INTEGER), jb.type = jb.MBS_SNIPPET_DEF.createField("type", H.STRING), jb.attributes = jb.MBS_SNIPPET_DEF.createField("attributes", H.LIST), jb.blocks = jb.MBS_SNIPPET_DEF.createField("blocks", H.LIST), jb.events = jb.MBS_SNIPPET_DEF.createField("events",
            H.LIST))
      };
      jb.new_MbsSnippetDef_list = function(a) {
        return new Ta(a, jb.MBS_SNIPPET_DEF, new jb(a))
      };
      jb.__super__ = mb;
      jb.prototype = t(mb.prototype, {
        getMbsType: function() {
          return jb.MBS_SNIPPET_DEF
        },
        _attributes: null,
        _blocks: null,
        _events: null,
        allocateNew: function() {
          this.setAddress(this.data.allocate(jb.MBS_SNIPPET_DEF.getSize()))
        },
        getAttachedEvent: function() {
          return this.data.readBool(this.address + jb.attachedEvent.address)
        },
        setAttachedEvent: function(a) {
          this.data.writeBool(this.address + jb.attachedEvent.address,
            a)
        },
        getActorID: function() {
          return this.data.readInt(this.address + jb.actorID.address)
        },
        setActorID: function(a) {
          this.data.writeInt(this.address + jb.actorID.address, a)
        },
        getClassname: function() {
          return this.data.readString(this.address + jb.classname.address)
        },
        setClassname: function(a) {
          this.data.writeString(this.address + jb.classname.address, a)
        },
        getDescription: function() {
          return this.data.readString(this.address + jb.description.address)
        },
        setDescription: function(a) {
          this.data.writeString(this.address + jb.description.address,
            a)
        },
        getDesign: function() {
          return this.data.readBool(this.address + jb.design.address)
        },
        setDesign: function(a) {
          this.data.writeBool(this.address + jb.design.address, a)
        },
        getDrawOrder: function() {
          return this.data.readInt(this.address + jb.drawOrder.address)
        },
        setDrawOrder: function(a) {
          this.data.writeInt(this.address + jb.drawOrder.address, a)
        },
        getId: function() {
          return this.data.readInt(this.address + jb.id.address)
        },
        setId: function(a) {
          this.data.writeInt(this.address + jb.id.address, a)
        },
        getName: function() {
          return this.data.readString(this.address +
            jb.$name.address)
        },
        setName: function(a) {
          this.data.writeString(this.address + jb.$name.address, a)
        },
        getPackageName: function() {
          return this.data.readString(this.address + jb.packageName.address)
        },
        setPackageName: function(a) {
          this.data.writeString(this.address + jb.packageName.address, a)
        },
        getSceneID: function() {
          return this.data.readInt(this.address + jb.sceneID.address)
        },
        setSceneID: function(a) {
          this.data.writeInt(this.address + jb.sceneID.address, a)
        },
        getType: function() {
          return this.data.readString(this.address + jb.type.address)
        },
        setType: function(a) {
          this.data.writeString(this.address + jb.type.address, a)
        },
        getAttributes: function() {
          this._attributes.setAddress(this.data.readInt(this.address + jb.attributes.address));
          return this._attributes
        },
        createAttributes: function(a) {
          this._attributes.allocateNew(a);
          this.data.writeInt(this.address + jb.attributes.address, this._attributes.getAddress());
          return this._attributes
        },
        getBlocks: function() {
          this._blocks.setAddress(this.data.readInt(this.address + jb.blocks.address));
          return this._blocks
        },
        createBlocks: function(a) {
          this._blocks.allocateNew(a);
          this.data.writeInt(this.address + jb.blocks.address, this._blocks.getAddress());
          return this._blocks
        },
        getEvents: function() {
          this._events.setAddress(this.data.readInt(this.address + jb.events.address));
          return this._events
        },
        createEvents: function(a) {
          this._events.allocateNew(a);
          this.data.writeInt(this.address + jb.events.address, this._events.getAddress());
          return this._events
        },
        __class__: jb
      });
      var wb = function(a, b, c, d, e, f, g, h, m, l, y, n, k, q, u, v, Ng, T, ja, t) {
        null == t && (t = 0);
        null == ja && (ja = !1);
        null == T && (T = !0);
        null == v && (v = !1);
        null == u && (u = !1);
        null == q && (q = !1);
        null == k && (k = !1);
        null == h && (h = 32);
        null == g && (g = 32);
        null == f && (f = -1);
        null == e && (e = 0);
        null == d && (d = 0);
        this.customizedBehaviors = !1;
        this.maxMove = 99999;
        this.minMove = 3;
        this.moveXDistance = this.moveYDistance = 0;
        this.moveMultiplier = .33;
        this.drawX = this.drawY = 0;
        this.smoothMove = this.firstMove = this.snapOnSet = !1;
        this.attachedImages = null;
        Z.call(this);
        p.NO_PHYSICS && 0 == t && (this.physicsMode = t = 1);
        this.dummy = new C;
        this.zero = new C(0, 0);
        this._point = R.point;
        this._moveX = this._moveY = 0;
        this.HITBOX =
          new ig;
        this.set_shape(this.HITBOX);
        this instanceof vd && p.NO_PHYSICS && (Ng = this.HITBOX = new od(g | 0, h | 0, 0, 0, !1, -2), this.set_shape(Ng));
        this.set_x(0);
        this.set_y(0);
        this.set_rotation(0);
        this.realAngle = this.realY = this.realX = 0;
        this.realScaleY = this.realScaleX = 1;
        this.collidable = !0;
        this.solid = !k;
        this.updateMatrix = !0;
        this.colY = this.colX = 0;
        this.lastScale = new la(1, 1);
        this.lastY = this.lastX = -1E3;
        this.lastAngle = 0;
        this.tweenProps = new lo;
        this.tweenProps.xy.doOnUpdate(r(this, this.updateTweenXY));
        this.tweenProps.angle.doOnUpdate(r(this,
          this.updateTweenAngle));
        this.tweenProps.alpha.doOnUpdate(r(this, this.updateTweenAlpha));
        this.tweenProps.realScaleXY.doOnUpdate(r(this, this.updateTweenScaleXY));
        this.transformPoint = new la(0, 0);
        this.transformMatrix = new Ea;
        this.drawMatrix = new Ea;
        this.currOrigin = new la(0, 0);
        this.currOffset = new la(0, 0);
        this.registry = new ua;
        this.attachedImages = [];
        this.physicsMode = t;
        this.autoScale = T;
        this.mouseState = this.rSpeed = this.ySpeed = this.xSpeed = 0;
        this.isTerrainRegion = this.isRegion = this.isCamera = this.isOnScreenCache =
          this.lastSceneState = this.lastScreenState = !1;
        this.drawActor = !0;
        this.fixedRotation = this.continuousCollision = this.isHUD = this.alwaysSimulate = this.killLeaveScreen = !1;
        this.defaultGravity = this.ignoreGravity = ja;
        this.resetOrigin = !0;
        this.allListeners = new Za;
        this.allEventReferences = [];
        this.whenCreated = new Mc;
        this.whenUpdated = new Mc;
        this.whenDrawing = new Mc;
        this.whenKilled = new Mc;
        this.whenMousedOver = new Mc;
        this.whenPositionStateChanged = new Mc;
        this.whenCollided = new Mc;
        this.destroyed = this.paused = this.recycled = !1;
        this.set_name("Unknown");
        this.ID = b;
        this.groupID = c;
        this.typeID = null != y ? y.ID : -1;
        this.engine = a;
        this.collidedList = [];
        this.collisions = new Be(16);
        this.simpleCollisions = new Be(16);
        this.contacts = new Be(16);
        this.regionContacts = new Be(16);
        this.collisions.reuseIterator = !0;
        this.simpleCollisions.reuseIterator = !0;
        this.contacts.reuseIterator = !0;
        this.regionContacts.reuseIterator = !0;
        this.collisionsCount = this.contactCount = 0;
        this.handlesCollisions = !0;
        this.behaviors = new Cj;
        this.currAnimationName = "";
        this.animationMap =
          new ua;
        this.shapeMap = new ua;
        this.originMap = new ua;
        this.sprite = m;
        this.type = y;
        if (null != m)
          for (b = m.animations.iterator(); b.hasNext();) T = b.next(), this.addAnim(T), T.animID == m.defaultAnimation && (this.defaultAnim = T.animName);
        null == wb.recycledAnimation && (wb.recycledAnimation = new ve(-1, "recyclingDefault", null, null, null, !1, !1, 1, 1, 0, 0, [10], 1, 1, 1));
        this.addAnim(wb.recycledAnimation);
        if (null != n && 0 == t) n.bullet && (gc.m_continuousPhysics = !0), n.groupID = c, this.initFromBody(n), c = new Lb, c.setAsBox(1, 1), this.body.createFixture2(c,
          .1), this.md = new vj, this.md.mass = n.mass, this.md.I = n.aMass, this.md.center.x = 0, this.md.center.y = 0, this.body.setMassData(this.md), this.bodyScale = new la(1, 1);
        else {
          if (null == Ng || Qb.typeof(Ng) == ec.TFloat) Ng = wb.createBox(g, h);
          null != n && (this.continuousCollision = n.bullet);
          this instanceof vd && (k = !0, v = !1);
          this instanceof Pg && (v = !1);
          null != Ng && Ng instanceof ig ? (this.set_shape(Ng), this.isTerrain = !0) : 0 == t && this.initBody(c, k, q, u, v, Ng)
        }
        this.cacheAnchor = new la(0, 0);
        this.switchToDefaultAnimation();
        null != m ? this.setLocation(d,
          e) : null != Ng && Ng instanceof ig ? (d = new Ac(new wa(1, 1, !0, 0)), d.set_x(g), d.set_y(h), this.addChild(d), this.cacheWidth = this.set_width(g), this.cacheHeight = this.set_height(h)) : 0 == t && this.body.setPosition(new C(p.toPhysicalUnits(d), p.toPhysicalUnits(e)));
        null != l ? this.customizedBehaviors = !0 : null != y && (l = y.behaviorValues); - 1 != f && a.moveActorToLayer(this, a.getLayerById(f));
        p.initBehaviors(this.behaviors, l, this, a, !1)
      };
      k["com.stencyl.models.Actor"] = wb;
      wb.__name__ = "com.stencyl.models.Actor";
      wb.resetStatics = function() {
        wb.lastCollided =
          null;
        wb.manifold = new uj
      };
      wb.createBox = function(a, b) {
        var c = new Lb;
        c.setAsBox(p.toPhysicalUnits(a / 2), p.toPhysicalUnits(b / 2));
        return c
      };
      wb.scaleShape = function(a, b, c) {
        if (a instanceof Qc) a.m_radius *= c;
        else if (a instanceof Lb) {
          for (var d = a.m_vertices, e = [], f = 0; f < d.length;) {
            var g = d[f];
            ++f;
            g.subtract(b);
            g.multiply(c);
            g.add(b);
            e.push(g)
          }
          a.setAsArray(e)
        }
      };
      wb.__super__ = Z;
      wb.prototype = t(Z.prototype, {
        engine: null,
        createTime: null,
        ID: null,
        groupID: null,
        cachedLayer: null,
        layer: null,
        typeID: null,
        type: null,
        recycled: null,
        paused: null,
        isRegion: null,
        isTerrainRegion: null,
        isTerrain: null,
        destroyed: null,
        drawActor: null,
        isHUD: null,
        alwaysSimulate: null,
        isCamera: null,
        killLeaveScreen: null,
        physicsMode: null,
        autoScale: null,
        dead: null,
        dying: null,
        fixedRotation: null,
        ignoreGravity: null,
        defaultGravity: null,
        collidable: null,
        solid: null,
        resetOrigin: null,
        realX: null,
        realY: null,
        realAngle: null,
        realScaleX: null,
        realScaleY: null,
        lastX: null,
        lastY: null,
        lastAngle: null,
        lastScale: null,
        colX: null,
        colY: null,
        xSpeed: null,
        ySpeed: null,
        rSpeed: null,
        continuousCollision: null,
        tweenProps: null,
        cacheWidth: null,
        cacheHeight: null,
        currAnimation: null,
        currAnimationName: null,
        animationMap: null,
        bitmapFilters: null,
        sprite: null,
        shapeMap: null,
        originMap: null,
        defaultAnim: null,
        currOrigin: null,
        currOffset: null,
        cacheAnchor: null,
        transformObj: null,
        transformPoint: null,
        transformMatrix: null,
        updateMatrix: null,
        drawMatrix: null,
        label: null,
        attachedImages: null,
        smoothMove: null,
        firstMove: null,
        snapOnSet: null,
        drawX: null,
        drawY: null,
        moveMultiplier: null,
        moveXDistance: null,
        moveYDistance: null,
        minMove: null,
        maxMove: null,
        behaviors: null,
        customizedBehaviors: null,
        registry: null,
        allListeners: null,
        allEventReferences: null,
        whenCreated: null,
        whenUpdated: null,
        whenDrawing: null,
        whenKilled: null,
        whenMousedOver: null,
        whenPositionStateChanged: null,
        whenCollided: null,
        mouseState: null,
        lastScreenState: null,
        lastSceneState: null,
        isOnScreenCache: null,
        body: null,
        bodyDef: null,
        md: null,
        bodyScale: null,
        handlesCollisions: null,
        contacts: null,
        regionContacts: null,
        collisions: null,
        dummy: null,
        zero: null,
        destroy: function() {
          if (!this.destroyed) {
            this.destroyed = !0;
            for (var a = this.animationMap.h, b = Object.keys(a), c = b.length, d = 0; d < c;) a[b[d++]].set_visible(!1);
            R.removeAllChildren(this);
            if (null != this.body && 0 == this.physicsMode) {
              for (a = this.body.getContactList(); null != a;) p.engine.world.m_contactManager.m_contactListener.endContact(a.contact), a = a.next;
              p.engine.world.destroyBody(this.body)
            }
            this.cancelTweens();
            this.regionContacts = this.contacts = this.sprite = this.body = this.currOrigin = this.currOffset = this.currAnimation = this.animationMap = this.defaultAnim = this.originMap =
              this.shapeMap = wb.lastCollided = null;
            this.collisionsCount = this.contactCount = 0;
            this.registry = this.allEventReferences = this.allListeners = this.whenCollided = this.whenPositionStateChanged = this.whenMousedOver = this.whenKilled = this.whenDrawing = this.whenUpdated = this.whenCreated = this.transformMatrix = this.transformPoint = null;
            for (a = this.collisions.keys(); a.hasNext();) {
              c = a.next();
              b = this.collisions;
              var e = b.mH;
              d = e.mHash[73856093 * c & e.mMask];
              if (-1 == d) c = -2147483648;
              else if (e = e.mData, e[d] == c) c = e[d + 1];
              else {
                var f = -2147483648;
                for (d = e[d + 2]; - 1 != d;) {
                  if (e[d] == c) {
                    f = e[d + 1];
                    break
                  }
                  d = e[d + 2]
                }
                c = f
              }
              for (b = -2147483648 == c ? null : b.mVals[c]; 0 < b.points.length;) Sd.free(b.points.pop())
            }
            this.simpleCollisions = this.collisions = null;
            null != this.bodyDef && (this.bodyDef = this.bodyDef.userData = null);
            this.behaviors.destroy()
          }
        },
        resetListeners: function() {
          for (var a = this.allListeners.keys(); a.hasNext();) {
            var b = a.next();
            this.allListeners.remove(b)
          }
          for (; 0 < this.allEventReferences.length;) this.allEventReferences.pop();
          0 < this.whenUpdated.length && this.whenUpdated.removeAll();
          0 < this.whenDrawing.length && this.whenDrawing.removeAll();
          0 < this.whenKilled.length && this.whenKilled.removeAll();
          0 < this.whenMousedOver.length && this.whenMousedOver.removeAll();
          0 < this.whenPositionStateChanged.length && this.whenPositionStateChanged.removeAll();
          0 < this.whenCollided.length && this.whenCollided.removeAll()
        },
        defaultHitbox: null,
        defaultMasklist: null,
        addAnim: function(a) {
          var b = 0 == this.physicsMode ? a.physicsShapes : a.simpleShapes;
          if (null != b) {
            var c = [];
            if (1 == this.physicsMode)
              for (b = b.iterator(); b.hasNext();) {
                var d =
                  b.next();
                d instanceof od && 0 != this.physicsMode && (d = K.__cast(d, od).clone(), d.assignTo(this));
                c.push(d)
              } else if (2 != this.physicsMode)
                for (b = b.iterator(); b.hasNext();) d = b.next(), c.push(d);
            0 != this.physicsMode ? (b = this.shapeMap, d = a.animName, c = new Ai(c, this), b.h[d] = c) : this.shapeMap.h[a.animName] = c
          }
          b = this.animationMap;
          d = a.animName;
          c = new Lj(a);
          b.h[d] = c;
          b = this.originMap;
          d = a.animName;
          c = new C(a.originX, a.originY);
          b.h[d] = c
        },
        reloadAnimationGraphics: function(a) {
          if (-1 == a) {
            for (a = this.sprite.animations.iterator(); a.hasNext();) {
              var b =
                a.next();
              b = this.animationMap.h[b.animName];
              b.framesUpdated()
            }
            this.updateChildrenPositions()
          } else a = this.sprite.animations.h[a], b = this.animationMap.h[a.animName], b.framesUpdated(), b == this.currAnimation && this.updateChildrenPositions()
        },
        initScripts: function() {
          if (2 == this.physicsMode) this.handlesCollisions = !1;
          else if (this.handlesCollisions = !0, this.behaviors.initScripts(), 0 < this.whenCreated.length)
            for (this.whenCreated._dispatchIndex = 0; this.whenCreated._dispatchIndex < this.whenCreated.length;) {
              try {
                this.whenCreated.listeners[this.whenCreated._dispatchIndex]()
              } catch (a) {
                if (pa.lastError =
                  a, "string" != typeof F.caught(a).unwrap()) throw a;
              }++this.whenCreated._dispatchIndex
            }
        },
        initFromBody: function(a) {
          a.allowSleep = !1;
          a.userData = this;
          this.bodyDef = a;
          this.body = p.engine.world.createBody(a)
        },
        initBody: function(a, b, c, d, e, f) {
          var g = new ri;
          g.groupID = a;
          a = this.get_x();
          g.position.x = p.toPhysicalUnits(a);
          a = this.get_y();
          g.position.y = p.toPhysicalUnits(a);
          g.angle = 0;
          g.fixedRotation = !e;
          g.allowSleep = !1;
          g.type = c ? ra.b2_staticBody : d ? ra.b2_kinematicBody : ra.b2_dynamicBody;
          if (f instanceof Array)
            for (g.userData = this,
              this.body = p.engine.world.createBody(g), b = K.__cast(f, Array), f = 0; f < b.length;) d = b[f], ++f, c = new If, c.shape = d, c.friction = 1, c.density = .1, c.restitution = 0, c.isSensor = !1, c.groupID = 1, c.userData = this, this.body.createFixture(c);
          else c = new If, c.shape = f, c.friction = 1, c.density = .1, c.restitution = 0, c.isSensor = b, c.groupID = -1E3, c.userData = this, g.userData = this, this.body = p.engine.world.createBody(g), this.body.createFixture(c);
          this.bodyDef = g
        },
        addAnimation: function(a, b) {
          this.animationMap.h[a] = b
        },
        getAnimation: function() {
          return this.currAnimationName
        },
        setAnimation: function(a) {
          this.switchAnimation(a)
        },
        switchToDefaultAnimation: function() {
          null != this.defaultAnim && (this.switchAnimation(this.defaultAnim, this.defaultShapeChanged()), this.setCurrentFrame(0))
        },
        isAnimationPlaying: function() {
          return !this.currAnimation.isFinished()
        },
        getCurrentFrame: function() {
          return this.currAnimation.getCurrentFrame()
        },
        setCurrentFrame: function(a) {
          this.currAnimation.setFrame(a)
        },
        getNumFrames: function() {
          return this.currAnimation.getNumFrames()
        },
        defaultShapeChanged: function() {
          if (0 !=
            this.physicsMode) return !0;
          var a = this.shapeMap.h[this.defaultAnim];
          if (null == this.getBody() || null == this.getBody().getFixtureList() || null == this.getBody().getFixtureList().getShape()) {
            if (null != a && 0 < a.length) return !0
          } else {
            if (null == a || 0 == a.length || 1 < a.length) return !0;
            var b = a[0];
            if (null == b) return !0;
            var c = this.getBody().getFixtureList();
            a = this.getBody().getFixtureList().getShape();
            var d = b.shape;
            if (c.groupID == b.groupID && this.getBody().getFixtureList().isSensor() == b.isSensor && K.getClass(a) == K.getClass(d))
              if (K.getClass(a) ==
                Lb) {
                if (a.m_vertexCount != d.m_vertexCount) return !0;
                b = 0;
                for (c = a.m_vertexCount; b < c;) {
                  var e = b++;
                  if (a.m_vertices[e].x != d.m_vertices[e].x || a.m_vertices[e].y != d.m_vertices[e].y) return !0
                }
              } else {
                if (K.getClass(a) == Qc && (a.m_radius != d.m_radius || a.m_p.x != d.m_p.x || a.m_p.y != d.m_p.y)) return !0
              }
            else return !0
          }
          return !1
        },
        switchAnimation: function(a, b) {
          null == b && (b = !1);
          if (a != this.currAnimationName || b) {
            var c = this.animationMap.h[a];
            if (null != c) {
              null != this.currAnimation && this.removeChild(this.currAnimation);
              if (null != this.body &&
                0 == this.physicsMode && !b) {
                var d = this.shapeMap.h[this.currAnimationName],
                  e = this.shapeMap.h[a];
                if (null == d || null == e) b = !0;
                else if (d.length != e.length || 1 < d.length) b = !0;
                else {
                  var f = d[0],
                    g = e[0];
                  if (null == f || null == g) b = !0;
                  else if (e = f.shape, d = g.shape, f.isSensor != g.isSensor) b = !0;
                  else if (f.groupID != g.groupID) b = !0;
                  else if (K.getClass(e) == K.getClass(d))
                    if (K.getClass(e) == Lb)
                      if (e.m_vertexCount != d.m_vertexCount) b = !0;
                      else
                        for (f = 0, g = e.m_vertexCount; f < g;) {
                          var h = f++;
                          if (e.m_vertices[h].x != d.m_vertices[h].x) {
                            b = !0;
                            break
                          } else if (e.m_vertices[h].y !=
                            d.m_vertices[h].y) {
                            b = !0;
                            break
                          }
                        } else K.getClass(e) != Qc || e.m_radius == d.m_radius && e.m_p.x == d.m_p.x && e.m_p.y == d.m_p.y || (b = !0);
                  else b = !0
                }
              }
              this.currAnimationName = a;
              this.currAnimation = c;
              this.currAnimation.set_filter(this.bitmapFilters);
              this.currAnimation.set_visible(this.drawActor);
              this.addChild(c);
              c = this.originMap.h[a];
              e = this.currAnimation.get_width() / p.SCALE / 2 - c.x;
              d = this.currAnimation.get_height() / p.SCALE / 2 - c.y;
              if (null != this.body && b && 0 == this.physicsMode) {
                b = [];
                for (f = this.body.getContactList(); null != f;) f.other.getUserData() instanceof
                vd && f.contact.isTouching() && b.push(f.other.getUserData()), p.engine.world.m_contactManager.m_contactListener.endContact(f.contact), f = f.next;
                for (f = this.collisions.keys(); f.hasNext();) {
                  g = f.next();
                  var m = this.collisions,
                    l = m.mH;
                  h = l.mHash[73856093 * g & l.mMask];
                  if (-1 == h) h = -2147483648;
                  else if (l = l.mData, l[h] == g) h = l[h + 1];
                  else {
                    var y = -2147483648;
                    for (h = l[h + 2]; - 1 != h;) {
                      if (l[h] == g) {
                        y = l[h + 1];
                        break
                      }
                      h = l[h + 2]
                    }
                    h = y
                  }
                  for (h = -2147483648 == h ? null : m.mVals[h]; 0 < h.points.length;) Sd.free(h.points.pop());
                  this.collisions.unset(g)
                }
                this.collisions =
                  new Be(16);
                this.simpleCollisions = new Be(16);
                this.contacts = new Be(16);
                this.regionContacts = new Be(16);
                this.collisions.reuseIterator = !0;
                this.simpleCollisions.reuseIterator = !0;
                this.contacts.reuseIterator = !0;
                this.regionContacts.reuseIterator = !0;
                for (this.collisionsCount = this.contactCount = 0; 0 < this.body.m_fixtureCount;) this.body.DestroyFixture(this.body.getFixtureList());
                f = 0;
                for (g = K.__cast(this.shapeMap.h[a], Array); f < g.length;) {
                  h = g[f];
                  ++f;
                  a = new If;
                  1.79769313486231E308 > this.bodyDef.friction && (a.friction = this.bodyDef.friction,
                    a.restitution = this.bodyDef.bounciness, 0 < this.bodyDef.mass && (a.density = .1));
                  a.density = h.density;
                  a.isSensor = h.isSensor;
                  a.groupID = h.groupID;
                  a.shape = h.shape;
                  if (null != c)
                    if (this.body.origin.x = p.toPhysicalUnits(-c.x), this.body.origin.y = p.toPhysicalUnits(-c.y), h.shape instanceof Lb) {
                      l = new af;
                      h = h.shape;
                      y = new Lb;
                      y.setAsArray(h.m_vertices, h.m_vertices.length);
                      var n = y.m_vertices,
                        k = y.m_normals;
                      m = l.position;
                      h = p.toPhysicalUnits(e);
                      var q = p.toPhysicalUnits(d);
                      null == q && (q = 0);
                      null == h && (h = 0);
                      m.x = h;
                      m.y = q;
                      l.R.setAngle(0);
                      m = 0;
                      for (q = y.m_vertexCount; m < q;) h = m++, n[h] = l.multiply(n[h]), k[h] = l.R.multiplyV(k[h]);
                      y.setAsArray(n, n.length);
                      y.m_normals = k;
                      a.shape = y
                    } else h.shape instanceof Qc && (m = h.shape, h = new Qc, h.setRadius(m.getRadius()), l = m.m_p.x, y = p.toPhysicalUnits(e), h.m_p.x = l + y, m = m.m_p.y, l = p.toPhysicalUnits(d), h.m_p.y = m + l, a.shape = h);
                  this.body.createFixture(a).SetUserData(this)
                }
                if (null != this.body.getFixtureList())
                  for (this.bodyScale.x = 1, this.bodyScale.y = 1, f = 0; f < b.length;) e = b[f], ++f, d = this.body.getFixtureList().m_aabb, e.getBody().getFixtureList().m_aabb.testOverlap(d) &&
                    e.addActor(this);
                null != this.md && this.body.setMassData(this.md)
              } else null != this.shapeMap.h[a] && 1 == this.physicsMode && (this.set_shape(this.shapeMap.h[a]), this.HITBOX = this._mask);
              this.cacheWidth = this.currAnimation.get_width() / p.SCALE;
              this.cacheHeight = this.currAnimation.get_height() / p.SCALE;
              null != this.body && (this.body.size.x = p.toPhysicalUnits(this.cacheWidth), this.body.size.y = p.toPhysicalUnits(this.cacheHeight));
              0 == this.physicsMode && (this.realX = this.getX(!1), this.realY = this.getY(!1), this.updateBodyScale());
              null != c && this.setOriginPoint(c.x | 0, c.y | 0);
              this.updateChildrenPositions();
              this.updateMatrix = !0;
              m = this.currAnimation;
              m.timer = 0;
              m.frameIndex = 0;
              m.finished = !1;
              null != m.filter ? (m.filteredFrames[m.frameIndex] || (m.frames[m.frameIndex] = m.applyFilters(m.frames[m.frameIndex], m.model.frames[m.frameIndex], m.filter), m.filteredFrames[m.frameIndex] = !0), m.set_bitmapData(m.frames[m.frameIndex])) : m.set_bitmapData(m.model.frames[m.frameIndex]);
              m.smoothing = ka.antialias
            }
          }
        },
        updateChildrenPositions: function() {
          var a = null !=
            this.currAnimation ? new la(-this.currAnimation.get_x(), -this.currAnimation.get_y()) : new la(0, 0);
          if (!a.equals(this.cacheAnchor)) {
            this.cacheAnchor.copyFrom(a);
            a = 0;
            for (var b = this.attachedImages; a < b.length;) {
              var c = b[a];
              ++a;
              c.updatePosition()
            }
            null != this.label && this.label.updatePosition()
          }
        },
        removeAttachedImages: function() {
          for (var a = 0, b = this.attachedImages; a < b.length;) {
            var c = b[a];
            ++a;
            c.cacheParentAnchor = R.zero;
            this.removeChild(c)
          }
          this.attachedImages = []
        },
        update: function(a) {
          this.innerUpdate(a, !0)
        },
        innerUpdate: function(a,
          b) {
          if (!(this.paused || this.isCamera || this.dying || this.dead || this.destroyed || b && (this.isHUD || this.alwaysSimulate))) {
            if (0 < this.whenMousedOver.length)
              if (this.isMouseOver()) {
                if (0 >= this.mouseState) {
                  if (this.mouseState = 1, 0 < this.whenMousedOver.length)
                    for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                      try {
                        this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                      } catch (ja) {
                        if (pa.lastError = ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                      }++this.whenMousedOver._dispatchIndex
                    }
                } else this.mouseState = 2;
                if (N.mousePressed) {
                  if (this.mouseState = 3, 0 < this.whenMousedOver.length)
                    for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                      try {
                        this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                      } catch (ja) {
                        if (pa.lastError = ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                      }++this.whenMousedOver._dispatchIndex
                    }
                } else if (N.mouseDown && (this.mouseState = 4, 0 < this.whenMousedOver.length))
                  for (this.whenMousedOver._dispatchIndex =
                    0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                    try {
                      this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                    } catch (ja) {
                      if (pa.lastError = ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                    }++this.whenMousedOver._dispatchIndex
                  }
                if (N.mouseReleased && (this.mouseState = 5, 0 < this.whenMousedOver.length))
                  for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                    try {
                      this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                    } catch (ja) {
                      if (pa.lastError =
                        ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                    }++this.whenMousedOver._dispatchIndex
                  }
              } else if (0 < this.mouseState) {
              if (this.mouseState = -1, 0 < this.whenMousedOver.length)
                for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                  try {
                    this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                  } catch (ja) {
                    if (pa.lastError = ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                  }++this.whenMousedOver._dispatchIndex
                }
            } else - 1 == this.mouseState &&
              (this.mouseState = 0);
            b = this.type.ID;
            var c = 1E6 + this.groupID,
              d = this.engine.whenCollidedEvents,
              e = this.engine.whenTypeGroupPositionStateChangedEvents;
            if (0 == this.physicsMode && (0 < this.whenCollided.length || null != d.h[b] || null != d.h[c])) {
              if (0 < this.contactCount)
                for (var f = 0, g, h = this.contacts.iterator(); h.hasNext();) {
                  g = h.next();
                  var m = g.key;
                  var l = this.collisions.mH;
                  var y = l.mHash[73856093 * m & l.mMask];
                  if (-1 == y) y = !1;
                  else if (l = l.mData, l[y] == m) y = !0;
                  else {
                    var n = !1;
                    for (y = l[y + 2]; - 1 != y;) {
                      if (l[y] == m) {
                        n = !0;
                        break
                      }
                      y = l[y + 2]
                    }
                    y =
                      n
                  }
                  if (y) {
                    y = this.collisions;
                    n = y.mH;
                    l = n.mHash[73856093 * m & n.mMask];
                    if (-1 == l) m = -2147483648;
                    else if (n = n.mData, n[l] == m) m = n[l + 1];
                    else {
                      var p = -2147483648;
                      for (l = n[l + 2]; - 1 != l;) {
                        if (n[l] == m) {
                          p = n[l + 1];
                          break
                        }
                        l = n[l + 2]
                      }
                      m = p
                    }
                    m = -2147483648 == m ? null : y.mVals[m];
                    g.getWorldManifold(wb.manifold);
                    y = 0;
                    for (l = wb.manifold.m_points; y < l.length;) n = l[y], ++y, 0 != n.x && 0 != n.y && (g = m.points[f], null == g ? m.points[f] = Sd.get(n.x, n.y, wb.manifold.m_normal.x, wb.manifold.m_normal.y) : (g = m.points[f], g.x = n.x, g.y = n.y, g.normalX = wb.manifold.m_normal.x,
                      g.normalY = wb.manifold.m_normal.y), ++f);
                    for (; m.points.length > f;) Sd.free(m.points.pop());
                    f = 0
                  } else {
                    var k = g.getFixtureA().getUserData(),
                      q = g.getFixtureB().getUserData();
                    k == this ? (y = q, l = g.getFixtureB(), n = g.getFixtureA()) : (y = k, l = g.getFixtureA(), n = g.getFixtureB());
                    p = new nc;
                    p.otherActor = y;
                    p.otherShape = l;
                    p.thisActor = this;
                    p.thisShape = n;
                    p.actorA = k;
                    p.actorB = q;
                    g.getWorldManifold(wb.manifold);
                    this.collisions.set(m, p);
                    this.collisionsCount++;
                    m = this.getBody();
                    k = y.getBody();
                    q = g.getFixtureA().getBody();
                    for (var u = g.getFixtureB().getBody(),
                        v = 0, T = wb.manifold.m_points; v < T.length;)(g = T[v], ++v, 0 == g.x || 0 == g.y || n.isSensor()) ? n.isSensor() && (null != y && (p.thisCollidedWithActor = p.thisCollidedWithActor || 1 != y.groupID && -2 != y.groupID && !y.isTerrainRegion, p.thisCollidedWithTerrain = p.thisCollidedWithTerrain || y.isTerrainRegion, p.thisCollidedWithTile = p.thisCollidedWithTile || 1 == y.groupID), p.otherCollidedWithActor = p.otherCollidedWithActor || 1 != this.groupID && -2 != this.groupID && !this.isTerrainRegion, p.otherCollidedWithTerrain = p.otherCollidedWithTerrain || this.isTerrainRegion,
                      p.otherCollidedWithTile = p.otherCollidedWithTile || 1 == this.groupID, p.thisCollidedWithSensor = p.thisCollidedWithSensor || l.isSensor(), p.otherCollidedWithSensor = p.otherCollidedWithSensor || n.isSensor()) : (g = Sd.get(g.x, g.y, wb.manifold.m_normal.x, wb.manifold.m_normal.y), p.points.push(g), q == m ? (p.thisFromBottom = p.thisFromBottom || 0 < g.normalY, p.thisFromTop = p.thisFromTop || 0 > g.normalY, p.thisFromLeft = p.thisFromLeft || 0 > g.normalX, p.thisFromRight = p.thisFromRight || 0 < g.normalX) : u == m && (p.thisFromBottom = p.thisFromBottom ||
                        0 > g.normalY, p.thisFromTop = p.thisFromTop || 0 < g.normalY, p.thisFromLeft = p.thisFromLeft || 0 < g.normalX, p.thisFromRight = p.thisFromRight || 0 > g.normalX), q == k ? (p.otherFromBottom = p.otherFromBottom || 0 < g.normalY, p.otherFromTop = p.otherFromTop || 0 > g.normalY, p.otherFromLeft = p.otherFromLeft || 0 > g.normalX, p.otherFromRight = p.otherFromRight || 0 < g.normalX) : u == k && (p.otherFromBottom = p.otherFromBottom || 0 > g.normalY, p.otherFromTop = p.otherFromTop || 0 < g.normalY, p.otherFromLeft = p.otherFromLeft || 0 < g.normalX, p.otherFromRight = p.otherFromRight ||
                        0 > g.normalX), null != y && (p.thisCollidedWithActor = p.thisCollidedWithActor || 1 != y.groupID && -2 != y.groupID && !y.isTerrainRegion, p.thisCollidedWithTerrain = p.thisCollidedWithTerrain || y.isTerrainRegion, p.thisCollidedWithTile = p.thisCollidedWithTile || 1 == y.groupID), p.otherCollidedWithActor = p.otherCollidedWithActor || 1 != this.groupID && -2 != this.groupID && !this.isTerrainRegion, p.otherCollidedWithTerrain = p.otherCollidedWithTerrain || this.isTerrainRegion, p.otherCollidedWithTile = p.otherCollidedWithTile || 1 == this.groupID,
                      p.thisCollidedWithSensor = p.thisCollidedWithSensor || l.isSensor(), p.otherCollidedWithSensor = p.otherCollidedWithSensor || n.isSensor())
                  }
                }
              if (0 < this.collisionsCount)
                for (f = this.collisions.iterator(); f.hasNext();)
                  if (h = f.next(), null != h && null != h.thisActor && null != h.otherActor && h.thisActor.handlesCollisions && h.otherActor.handlesCollisions) {
                    wb.lastCollided = h.otherActor;
                    if (0 < this.whenCollided.length)
                      for (this.whenCollided._dispatchIndex = 0; this.whenCollided._dispatchIndex < this.whenCollided.length;) {
                        try {
                          this.whenCollided.listeners[this.whenCollided._dispatchIndex](h)
                        } catch (ja) {
                          if (pa.lastError =
                            ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                        }++this.whenCollided._dispatchIndex
                      }
                    this.engine.handleCollision(this, h)
                  }
            }
            this.internalUpdate(a, !0);
            1 == this.physicsMode && ((0 < this.whenCollided.length || null != d.h[b] || null != d.h[c]) && this.handleCollisionsSimple(), this.disposeRemovedCollisionInfo());
            if (2 != this.physicsMode && 0 < this.whenUpdated.length)
              for (this.whenUpdated._dispatchIndex = 0; this.whenUpdated._dispatchIndex < this.whenUpdated.length;) {
                try {
                  this.whenUpdated.listeners[this.whenUpdated._dispatchIndex](a)
                } catch (ja) {
                  if (pa.lastError =
                    ja, "string" != typeof F.caught(ja).unwrap()) throw ja;
                }++this.whenUpdated._dispatchIndex
              }(0 < this.whenPositionStateChanged.length || null != e.h[b] || null != e.h[c]) && this.checkScreenState();
            null != this.label && this.label.setAlpha(this.get_alpha())
          }
        },
        internalUpdate: function(a, b) {
          if (!this.paused) {
            if (0 != this.physicsMode) {
              1 != this.physicsMode || this.ignoreGravity || this.isHUD || (this.xSpeed += a * this.engine.gravityX * .001, this.ySpeed += a * this.engine.gravityY * .001);
              if (0 != this.xSpeed || 0 != this.ySpeed) this.resetReal(this.realX,
                this.realY), this.moveActorBy(10 / p.STEP_SIZE * this.xSpeed * a * .01, 10 / p.STEP_SIZE * this.ySpeed * a * .01, !1);
              0 != this.rSpeed && (this.realAngle += a * this.rSpeed * .001);
              this.fixedRotation && (this.rSpeed = this.realAngle = 0)
            } else {
              var c = this.body.getPosition();
              this.realX = c.x * p.physicsScale;
              this.realY = c.y * p.physicsScale;
              this.resetReal(this.realX, this.realY);
              this.realAngle = 57.29577951308402 * this.body.getAngle()
            }
            if (this.lastX != this.realX || this.lastY != this.realY || this.lastAngle != this.realAngle || this.lastScale.x != this.realScaleX ||
              this.lastScale.y != this.realScaleY) this.updateMatrix = !0;
            this.lastX = this.realX;
            this.lastY = this.realY;
            this.lastAngle = this.realAngle;
            this.lastScale.x = this.realScaleX;
            this.lastScale.y = this.realScaleY;
            b && null != this.currAnimation && (b = this.currAnimation, b.model.sync && b.model.looping ? (a = b.frameIndex, b.timer = b.model.sharedTimer, b.frameIndex = b.model.sharedFrameIndex, a != b.frameIndex && (null != b.filter ? (b.filteredFrames[b.frameIndex] || (b.frames[b.frameIndex] = b.applyFilters(b.frames[b.frameIndex], b.model.frames[b.frameIndex],
              b.filter), b.filteredFrames[b.frameIndex] = !0), b.set_bitmapData(b.frames[b.frameIndex])) : b.set_bitmapData(b.model.frames[b.frameIndex]), b.smoothing = ka.antialias)) : (b.timer += a, 0 < b.numFrames && b.timer > b.durations[b.frameIndex] && (a = b.frameIndex, b.timer -= b.durations[b.frameIndex], b.frameIndex++, b.frameIndex >= b.numFrames && (b.model.looping ? b.frameIndex = 0 : (b.finished = !0, b.frameIndex--)), a != b.frameIndex && (null != b.filter ? (b.filteredFrames[b.frameIndex] || (b.frames[b.frameIndex] = b.applyFilters(b.frames[b.frameIndex],
              b.model.frames[b.frameIndex], b.filter), b.filteredFrames[b.frameIndex] = !0), b.set_bitmapData(b.frames[b.frameIndex])) : b.set_bitmapData(b.model.frames[b.frameIndex]), b.smoothing = ka.antialias))))
          }
        },
        updateDrawingMatrix: function(a) {
          null == a && (a = !1);
          if (!this.paused || a) this.smoothMove ? (this.firstMove || (this.drawX = this.realX, this.drawY = this.realY, this.firstMove = !0), this.moveXDistance = this.realX - this.drawX, this.moveYDistance = this.realY - this.drawY, this.drawX = this.moveXDistance > this.minMove ? this.moveXDistance *
              this.moveMultiplier > this.minMove ? this.moveXDistance > this.maxMove ? this.realX : this.drawX + this.moveXDistance * this.moveMultiplier : this.drawX + this.minMove : this.moveXDistance < -1 * this.minMove ? this.moveXDistance * this.moveMultiplier < -1 * this.minMove ? this.moveXDistance < -1 * this.maxMove ? this.realX : this.drawX + this.moveXDistance * this.moveMultiplier : this.drawX - this.minMove : this.realX, this.drawY = this.moveYDistance > this.minMove ? this.moveYDistance * this.moveMultiplier > this.minMove ? this.moveYDistance > this.maxMove ? this.realY :
              this.drawY + this.moveYDistance * this.moveMultiplier : this.drawY + this.minMove : this.moveYDistance < -1 * this.minMove ? this.moveYDistance * this.moveMultiplier < -1 * this.minMove ? this.moveYDistance < -1 * this.maxMove ? this.realY : this.drawY + this.moveYDistance * this.moveMultiplier : this.drawY - this.minMove : this.realY) : 0 != this.physicsMode ? (this.drawX = this.realX, this.drawY = this.realY) : (a = this.body.getPosition(), this.drawX = a.x * p.physicsScale, this.drawY = a.y * p.physicsScale), this.transformPoint.x = (this.currOrigin.x - this.cacheWidth /
              2) * p.SCALE, this.transformPoint.y = (this.currOrigin.y - this.cacheHeight / 2) * p.SCALE, this.transformMatrix.identity(), this.transformMatrix.translate(-this.transformPoint.x, -this.transformPoint.y), this.transformMatrix.scale(this.realScaleX, this.realScaleY), 0 != this.realAngle && this.transformMatrix.rotate(.01745329251994278 * this.realAngle), ka.pixelsnap ? this.transformMatrix.translate(Math.round(this.drawX) * p.SCALE, Math.round(this.drawY) * p.SCALE) : this.transformMatrix.translate(this.drawX * p.SCALE, this.drawY * p.SCALE),
            null == this.transformObj && (this.transformObj = this.get_transform()), this.transformObj.set_matrix(this.transformMatrix)
        },
        updateTweenAlpha: function() {
          this.set_alpha(this.tweenProps.alpha.value)
        },
        updateTweenScaleXY: function() {
          this.realScaleX = this.tweenProps.realScaleXY.value1;
          this.realScaleY = this.tweenProps.realScaleXY.value2;
          this.updateBodyScale()
        },
        updateTweenAngle: function() {
          this.setAngle(this.tweenProps.angle.value, !1)
        },
        updateTweenXY: function() {
          0 == this.physicsMode ? this.setXY(this.tweenProps.xy.value1,
            this.tweenProps.xy.value2) : (this.moveActorBy(this.tweenProps.xy.value1 - this.getX(!1), this.tweenProps.xy.value2 - this.getY(!1), !1), this.updateMatrix = !0);
          this.tweenProps.xy.finished && null != this.currOffset && this.resetReal(this.realX, this.realY)
        },
        updateBodyScale: function() {
          this.autoScale && 0 == this.physicsMode && null != this.body && this.bodyDef.type != ra.b2_staticBody && 0 != this.realScaleX && 0 != this.realScaleY && this.scaleBody(this.realScaleX, this.realScaleY)
        },
        scaleBody: function(a, b) {
          for (var c = [], d = this.body.getFixtureList(); null !=
            d;) c.push(d), d = d.getNext();
          for (d = 0; d < c.length;) {
            var e = c[d];
            ++d;
            var f = e.getShape();
            e = this.body.getLocalCenter();
            if (f instanceof Qc) {
              var g = f,
                h = 1 / this.bodyScale.x * a,
                m = 1 / this.bodyScale.y * b,
                l = g.m_p;
              l.subtract(e);
              l.x *= h;
              l.y *= m;
              g.m_p = e.copy();
              g.m_p.add(l);
              f.m_radius *= Math.abs(h)
            } else if (f instanceof Lb) {
              g = f.m_vertices;
              h = [];
              m = 0 < this.bodyScale.x && 0 > a || 0 > this.bodyScale.x && 0 < a;
              l = 0 < this.bodyScale.y && 0 > b || 0 > this.bodyScale.y && 0 < b;
              for (var y = 0; y < g.length;) {
                var n = g[y];
                ++y;
                n.subtract(e);
                n.x = 1 / Math.abs(this.bodyScale.x) *
                  n.x * Math.abs(a);
                n.y = 1 / Math.abs(this.bodyScale.y) * n.y * Math.abs(b);
                m && (n.x = -n.x);
                l && (n.y = -n.y);
                var k = e.copy();
                k.add(n);
                h.push(k)
              }
              m && l || !m && !l || h.reverse();
              f.setAsArray(h, h.length)
            }
          }
          this.bodyScale.x = a;
          this.bodyScale.y = b;
          this.body.size.x = p.toPhysicalUnits(this.cacheWidth * a);
          this.body.size.y = p.toPhysicalUnits(this.cacheHeight * b)
        },
        checkScreenState: function() {
          var a = this.isOnScreen(),
            b = a || this.isInScene(),
            c = !this.lastScreenState && a,
            d = !this.lastSceneState && b,
            e = this.lastScreenState && !a,
            f = this.lastSceneState &&
            !b;
          if (0 < this.whenPositionStateChanged.length)
            for (this.whenPositionStateChanged._dispatchIndex = 0; this.whenPositionStateChanged._dispatchIndex < this.whenPositionStateChanged.length;) {
              try {
                this.whenPositionStateChanged.listeners[this.whenPositionStateChanged._dispatchIndex](c, e, d, f)
              } catch (m) {
                if (pa.lastError = m, "string" != typeof F.caught(m).unwrap()) throw m;
              }++this.whenPositionStateChanged._dispatchIndex
            }
          var g = this.engine.whenTypeGroupPositionStateChangedEvents.h[this.groupID + 1E6],
            h = this.engine.whenTypeGroupPositionStateChangedEvents.h[this.typeID];
          if (null != g && 0 < g.length)
            for (g._dispatchIndex = 0; g._dispatchIndex < g.length;) {
              try {
                g.listeners[g._dispatchIndex](this, c, e, d, f)
              } catch (m) {
                if (pa.lastError = m, "string" != typeof F.caught(m).unwrap()) throw m;
              }++g._dispatchIndex
            }
          if (null != h && 0 < h.length)
            for (h._dispatchIndex = 0; h._dispatchIndex < h.length;) {
              try {
                h.listeners[h._dispatchIndex](this, c, e, d, f)
              } catch (m) {
                if (pa.lastError = m, "string" != typeof F.caught(m).unwrap()) throw m;
              }++h._dispatchIndex
            }
          this.lastScreenState = a;
          this.lastSceneState = b
        },
        contactCount: null,
        collisionsCount: null,
        handleCollisions: function() {
          if (0 < this.contactCount)
            for (var a = 0, b, c = this.contacts.iterator(); c.hasNext();) {
              b = c.next();
              var d = b.key;
              var e = this.collisions.mH;
              var f = e.mHash[73856093 * d & e.mMask];
              if (-1 == f) f = !1;
              else if (e = e.mData, e[f] == d) f = !0;
              else {
                var g = !1;
                for (f = e[f + 2]; - 1 != f;) {
                  if (e[f] == d) {
                    g = !0;
                    break
                  }
                  f = e[f + 2]
                }
                f = g
              }
              if (f) {
                f = this.collisions;
                g = f.mH;
                e = g.mHash[73856093 * d & g.mMask];
                if (-1 == e) d = -2147483648;
                else if (g = g.mData, g[e] == d) d = g[e + 1];
                else {
                  var h = -2147483648;
                  for (e = g[e + 2]; - 1 != e;) {
                    if (g[e] == d) {
                      h = g[e + 1];
                      break
                    }
                    e = g[e + 2]
                  }
                  d =
                    h
                }
                d = -2147483648 == d ? null : f.mVals[d];
                b.getWorldManifold(wb.manifold);
                f = 0;
                for (e = wb.manifold.m_points; f < e.length;) g = e[f], ++f, 0 != g.x && 0 != g.y && (b = d.points[a], null == b ? d.points[a] = Sd.get(g.x, g.y, wb.manifold.m_normal.x, wb.manifold.m_normal.y) : (b = d.points[a], b.x = g.x, b.y = g.y, b.normalX = wb.manifold.m_normal.x, b.normalY = wb.manifold.m_normal.y), ++a);
                for (; d.points.length > a;) Sd.free(d.points.pop());
                a = 0
              } else {
                var m = b.getFixtureA().getUserData(),
                  l = b.getFixtureB().getUserData();
                m == this ? (f = l, e = b.getFixtureB(), g = b.getFixtureA()) :
                  (f = m, e = b.getFixtureA(), g = b.getFixtureB());
                h = new nc;
                h.otherActor = f;
                h.otherShape = e;
                h.thisActor = this;
                h.thisShape = g;
                h.actorA = m;
                h.actorB = l;
                b.getWorldManifold(wb.manifold);
                this.collisions.set(d, h);
                this.collisionsCount++;
                d = this.getBody();
                m = f.getBody();
                l = b.getFixtureA().getBody();
                for (var y = b.getFixtureB().getBody(), n = 0, p = wb.manifold.m_points; n < p.length;)(b = p[n], ++n, 0 == b.x || 0 == b.y || g.isSensor()) ? g.isSensor() && (null != f && (h.thisCollidedWithActor = h.thisCollidedWithActor || 1 != f.groupID && -2 != f.groupID && !f.isTerrainRegion,
                    h.thisCollidedWithTerrain = h.thisCollidedWithTerrain || f.isTerrainRegion, h.thisCollidedWithTile = h.thisCollidedWithTile || 1 == f.groupID), h.otherCollidedWithActor = h.otherCollidedWithActor || 1 != this.groupID && -2 != this.groupID && !this.isTerrainRegion, h.otherCollidedWithTerrain = h.otherCollidedWithTerrain || this.isTerrainRegion, h.otherCollidedWithTile = h.otherCollidedWithTile || 1 == this.groupID, h.thisCollidedWithSensor = h.thisCollidedWithSensor || e.isSensor(), h.otherCollidedWithSensor = h.otherCollidedWithSensor || g.isSensor()) :
                  (b = Sd.get(b.x, b.y, wb.manifold.m_normal.x, wb.manifold.m_normal.y), h.points.push(b), l == d ? (h.thisFromBottom = h.thisFromBottom || 0 < b.normalY, h.thisFromTop = h.thisFromTop || 0 > b.normalY, h.thisFromLeft = h.thisFromLeft || 0 > b.normalX, h.thisFromRight = h.thisFromRight || 0 < b.normalX) : y == d && (h.thisFromBottom = h.thisFromBottom || 0 > b.normalY, h.thisFromTop = h.thisFromTop || 0 < b.normalY, h.thisFromLeft = h.thisFromLeft || 0 < b.normalX, h.thisFromRight = h.thisFromRight || 0 > b.normalX), l == m ? (h.otherFromBottom = h.otherFromBottom || 0 < b.normalY,
                    h.otherFromTop = h.otherFromTop || 0 > b.normalY, h.otherFromLeft = h.otherFromLeft || 0 > b.normalX, h.otherFromRight = h.otherFromRight || 0 < b.normalX) : y == m && (h.otherFromBottom = h.otherFromBottom || 0 > b.normalY, h.otherFromTop = h.otherFromTop || 0 < b.normalY, h.otherFromLeft = h.otherFromLeft || 0 < b.normalX, h.otherFromRight = h.otherFromRight || 0 > b.normalX), null != f && (h.thisCollidedWithActor = h.thisCollidedWithActor || 1 != f.groupID && -2 != f.groupID && !f.isTerrainRegion, h.thisCollidedWithTerrain = h.thisCollidedWithTerrain || f.isTerrainRegion,
                    h.thisCollidedWithTile = h.thisCollidedWithTile || 1 == f.groupID), h.otherCollidedWithActor = h.otherCollidedWithActor || 1 != this.groupID && -2 != this.groupID && !this.isTerrainRegion, h.otherCollidedWithTerrain = h.otherCollidedWithTerrain || this.isTerrainRegion, h.otherCollidedWithTile = h.otherCollidedWithTile || 1 == this.groupID, h.thisCollidedWithSensor = h.thisCollidedWithSensor || e.isSensor(), h.otherCollidedWithSensor = h.otherCollidedWithSensor || g.isSensor())
              }
            }
          if (0 < this.collisionsCount)
            for (a = this.collisions.iterator(); a.hasNext();)
              if (c =
                a.next(), null != c && null != c.thisActor && null != c.otherActor && c.thisActor.handlesCollisions && c.otherActor.handlesCollisions) {
                wb.lastCollided = c.otherActor;
                if (0 < this.whenCollided.length)
                  for (this.whenCollided._dispatchIndex = 0; this.whenCollided._dispatchIndex < this.whenCollided.length;) {
                    try {
                      this.whenCollided.listeners[this.whenCollided._dispatchIndex](c)
                    } catch (He) {
                      if (pa.lastError = He, "string" != typeof F.caught(He).unwrap()) throw He;
                    }++this.whenCollided._dispatchIndex
                  }
                this.engine.handleCollision(this, c)
              }
        },
        addContact: function(a) {
          null !=
            this.contacts && (this.contacts.set(a.key, a), this.contactCount++)
        },
        removeContact: function(a) {
          if (null != this.collisions) {
            var b = this.collisions,
              c = a.key,
              d = b.mH,
              e = d.mHash[73856093 * c & d.mMask];
            if (-1 == e) c = -2147483648;
            else if (d = d.mData, d[e] == c) c = d[e + 1];
            else {
              var f = -2147483648;
              for (e = d[e + 2]; - 1 != e;) {
                if (d[e] == c) {
                  f = d[e + 1];
                  break
                }
                e = d[e + 2]
              }
              c = f
            }
            d = -2147483648 == c ? null : b.mVals[c];
            if (null != d)
              for (this.collisions.unset(a.key), this.collisionsCount--; 0 < d.points.length;) Sd.free(d.points.pop())
          }
          null != this.contacts && this.contacts.unset(a.key) &&
            this.contactCount--
        },
        addRegionContact: function(a) {
          null != this.regionContacts && this.regionContacts.set(a.key, a)
        },
        removeRegionContact: function(a) {
          null != this.regionContacts && this.regionContacts.unset(a.key)
        },
        getID: function() {
          return this.ID
        },
        getName: function() {
          return this.get_name()
        },
        getGroupID: function() {
          return 0 != this.physicsMode ? this.groupID : this.body.groupID
        },
        getLayerID: function() {
          return this.layer.ID
        },
        getLayer: function() {
          return this.layer
        },
        getLayerName: function() {
          return this.layer.layerName
        },
        getLayerOrder: function() {
          return this.layer.order
        },
        getType: function() {
          return this.type
        },
        isPausable: function() {
          return this.getType().pausable
        },
        isPaused: function() {
          return this.paused
        },
        pause: function() {
          if (this.isPausable()) {
            this.tweenProps.pause();
            for (var a = 0, b = this.behaviors.behaviors; a < b.length;) {
              var c = b[a];
              ++a;
              null != c.script && c.script.pauseTweens()
            }
            this.paused = !0;
            0 == this.physicsMode && this.body.setPaused(!0)
          }
        },
        unpause: function() {
          if (this.isPausable()) {
            this.tweenProps.unpause();
            for (var a = 0, b = this.behaviors.behaviors; a < b.length;) {
              var c = b[a];
              ++a;
              null !=
                c.script && c.script.unpauseTweens()
            }
            this.paused = !1;
            0 == this.physicsMode && this.body.setPaused(!1)
          }
        },
        getGroup: function() {
          var a = this.engine.groups,
            b = this.getGroupID();
          return a.h[b]
        },
        getIsRegion: function() {
          return this.isRegion
        },
        getIsTerrainRegion: function() {
          return this.isTerrainRegion
        },
        moveToLayer: function(a) {
          !this.isHUD && a instanceof Lc && this.engine.moveActorToLayer(this, a)
        },
        bringToFront: function() {
          this.isHUD || (this.engine.bringToFront(this), this.moveToTop())
        },
        bringForward: function() {
          this.isHUD || this.engine.bringForward(this)
        },
        sendToBack: function() {
          this.isHUD || (this.engine.sendToBack(this), this.moveToBottom())
        },
        sendBackward: function() {
          this.isHUD || this.engine.sendBackward(this)
        },
        moveToBottom: function() {
          this.parent.setChildIndex(this, 0)
        },
        moveToTop: function() {
          this.parent.setChildIndex(this, this.parent.get_numChildren() - 1)
        },
        moveDown: function() {
          var a = this.parent.getChildIndex(this);
          0 < a && this.parent.setChildIndex(this, a - 1)
        },
        moveUp: function() {
          var a = this.parent.getChildIndex(this),
            b = this.parent.get_numChildren() - 1;
          a < b && this.parent.setChildIndex(this,
            a + 1)
        },
        getZIndex: function() {
          return this.parent.getChildIndex(this)
        },
        setZIndex: function(a) {
          var b = this.parent.get_numChildren() - 1;
          a > b && (a = b);
          0 > a && (a = 0);
          this.parent.setChildIndex(this, a)
        },
        enableSmoothMotion: function() {
          this.smoothMove = !0
        },
        getX: function(a) {
          null == a && (a = !0);
          var b = -1;
          p.NO_PHYSICS || (this.isRegion || this.isTerrainRegion ? b = p.toPixelUnits(this.body.getPosition().x) - this.cacheWidth / 2 : 0 == this.physicsMode && (b = this.body.getPosition().x * p.physicsScale - Math.floor(this.cacheWidth / 2) - this.currOffset.x));
          if (p.NO_PHYSICS || 0 != this.physicsMode) b = this.realX - Math.floor(this.cacheWidth / 2) - this.currOffset.x;
          return a ? Math.round(b) : b
        },
        getY: function(a) {
          null == a && (a = !0);
          var b = -1;
          p.NO_PHYSICS || (this.isRegion || this.isTerrainRegion ? b = p.toPixelUnits(this.body.getPosition().y) - this.cacheHeight / 2 : 0 == this.physicsMode && (b = this.body.getPosition().y * p.physicsScale - Math.floor(this.cacheHeight / 2) - this.currOffset.y));
          if (p.NO_PHYSICS || 0 != this.physicsMode) b = this.realY - Math.floor(this.cacheHeight / 2) - this.currOffset.y;
          return a ?
            Math.round(b) : b
        },
        getXCenter: function() {
          return 0 == this.physicsMode ? Math.round(p.toPixelUnits(this.body.getWorldCenter().x) - this.currOffset.x) : this.realX - this.currOffset.x
        },
        getYCenter: function() {
          return 0 == this.physicsMode ? Math.round(p.toPixelUnits(this.body.getWorldCenter().y) - this.currOffset.y) : this.realY - this.currOffset.y
        },
        getScreenX: function() {
          return this.isHUD ? this.getX(!0) : this.getX(!0) - p.cameraX / p.SCALE
        },
        getScreenY: function() {
          return this.isHUD ? this.getY(!0) : this.getY(!0) - p.cameraY / p.SCALE
        },
        setX: function(a,
          b, c) {
          null == c && (c = !1);
          null == b && (b = !1);
          1 == this.physicsMode ? (b = c || !this.continuousCollision, null == b && (b = !0), this.moveActorBy(a + Math.floor(this.cacheWidth / 2) + this.currOffset.x - this.realX, this.realY - this.realY, b, !1)) : 2 == this.physicsMode ? this.resetReal(a + Math.floor(this.cacheWidth / 2) + this.currOffset.x, this.realY) : (this.dummy.x = this.isRegion || this.isTerrainRegion ? p.toPhysicalUnits(a) : p.toPhysicalUnits(a + Math.floor(this.cacheWidth / 2) + this.currOffset.x), this.dummy.y = this.body.getPosition().y, this.body.setPosition(this.dummy),
            b && this.body.setLinearVelocity(this.zero));
          this.snapOnSet && (this.drawX = this.realX, this.drawY = this.realY);
          this.updateMatrix = !0
        },
        setY: function(a, b, c) {
          null == c && (c = !1);
          null == b && (b = !1);
          1 == this.physicsMode ? (b = c || !this.continuousCollision, null == b && (b = !0), this.moveActorBy(this.realX - this.realX, a + Math.floor(this.cacheHeight / 2) + this.currOffset.y - this.realY, b, !1)) : 2 == this.physicsMode ? this.resetReal(this.realX, a + Math.floor(this.cacheHeight / 2) + this.currOffset.y) : (this.dummy.y = this.isRegion || this.isTerrainRegion ?
            p.toPhysicalUnits(a) : p.toPhysicalUnits(a + Math.floor(this.cacheHeight / 2) + this.currOffset.y), this.dummy.x = this.body.getPosition().x, this.body.setPosition(this.dummy), b && this.body.setLinearVelocity(this.zero));
          this.snapOnSet && (this.drawX = this.realX, this.drawY = this.realY);
          this.updateMatrix = !0
        },
        setXY: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !1);
          1 == this.physicsMode ? (c = d || !this.continuousCollision, null == c && (c = !0), this.moveActorBy(a + Math.floor(this.cacheWidth / 2) + this.currOffset.x - this.realX, b + Math.floor(this.cacheHeight /
            2) + this.currOffset.y - this.realY, c, !1), 0 == this.colX && 0 == this.colY && this.resetReal(this.realX, this.realY)) : 2 == this.physicsMode ? this.resetReal(a + Math.floor(this.cacheWidth / 2) + this.currOffset.x, b + Math.floor(this.cacheHeight / 2) + this.currOffset.y) : (this.isRegion || this.isTerrainRegion ? (this.dummy.x = p.toPhysicalUnits(a), this.dummy.y = p.toPhysicalUnits(b)) : (this.dummy.x = p.toPhysicalUnits(a + Math.floor(this.cacheWidth / 2) + this.currOffset.x), this.dummy.y = p.toPhysicalUnits(b + Math.floor(this.cacheHeight / 2) + this.currOffset.y)),
            this.body.setPosition(this.dummy), c && this.body.setLinearVelocity(this.zero));
          this.snapOnSet && (this.drawX = this.realX, this.drawY = this.realY);
          this.updateMatrix = !0
        },
        setXCenter: function(a) {
          this.setX(a - this.getWidth() / 2)
        },
        setYCenter: function(a) {
          this.setY(a - this.getHeight() / 2)
        },
        setScreenX: function(a) {
          this.isHUD ? this.setX(a) : this.setX(a + p.cameraX / p.SCALE)
        },
        setScreenY: function(a) {
          this.isHUD ? this.setY(a) : this.setY(a + p.cameraY / p.SCALE)
        },
        follow: function(a) {
          if (null != a)
            if (0 != this.physicsMode) {
              var b = a.getXCenter();
              a = a.getYCenter();
              this.moveActorBy(b - this.realX, a - this.realY, !0, !1)
            } else this.body.setPosition(a.body.getWorldCenter())
        },
        followWithOffset: function(a, b, c) {
          0 != this.physicsMode ? (b = a.getXCenter() + b, c = a.getYCenter() + c, this.moveActorBy(b - this.realX, c - this.realY, !0, !1)) : (a = a.body.getWorldCenter(), a.x += p.toPhysicalUnits(b), a.y += p.toPhysicalUnits(c), this.body.setPosition(a))
        },
        setOriginPoint: function(a, b) {
          var c = 0 == this.physicsMode ? this.body.getPosition() : new C(p.toPhysicalUnits(this.realX), p.toPhysicalUnits(this.realY));
          var d = new C(this.currOffset.x, this.currOffset.y),
            e = this.getAngle(),
            f = a - this.cacheWidth / 2 | 0,
            g = b - this.cacheHeight / 2 | 0;
          if (null != this.currOrigin && ((this.currOffset.x | 0) != f || (this.currOffset.y | 0) != g) && 0 != (57.29577951308402 * e | 0)) {
            var h = e + Math.atan2(-this.currOffset.y, -this.currOffset.x);
            e += Math.atan2(-g, -f);
            var m = Math.sqrt(Math.pow(this.currOffset.x, 2) + Math.pow(this.currOffset.y, 2)),
              l = Math.sqrt(Math.pow(f, 2) + Math.pow(g, 2)),
              y = Math.round(this.currOrigin.y + Math.sin(h) * m),
              n = Math.round(b + Math.sin(e) * l);
            c.x +=
              p.toPhysicalUnits(Math.round(this.currOrigin.x + Math.cos(h) * m) - Math.round(a + Math.cos(e) * l));
            c.y += p.toPhysicalUnits(y - n)
          }
          this.currOrigin.x = a;
          this.currOrigin.y = b;
          this.currOffset.x = f;
          this.currOffset.y = g;
          d.x = this.currOffset.x - d.x;
          d.y = this.currOffset.y - d.y;
          c.x += p.toPhysicalUnits(d.x);
          c.y += p.toPhysicalUnits(d.y);
          0 == this.physicsMode ? this.body.setPosition(c) : (this.realX = p.toPixelUnits(c.x), this.realY = p.toPixelUnits(c.y));
          this.resetOrigin = !0
        },
        getXVelocity: function() {
          return 0 != this.physicsMode ? this.xSpeed : this.body.getLinearVelocity().x
        },
        getYVelocity: function() {
          return 0 != this.physicsMode ? this.ySpeed : this.body.getLinearVelocity().y
        },
        setXVelocity: function(a) {
          if (0 != this.physicsMode) this.xSpeed = a;
          else {
            var b = this.body.getLinearVelocity();
            b.x = a;
            this.body.setLinearVelocity(b);
            this.body.setAwake(!0)
          }
        },
        setYVelocity: function(a) {
          if (0 != this.physicsMode) this.ySpeed = a;
          else {
            var b = this.body.getLinearVelocity();
            b.y = a;
            this.body.setLinearVelocity(b);
            this.body.setAwake(!0)
          }
        },
        setVelocity: function(a, b) {
          this.setXVelocity(b * Math.cos(.01745329251994278 * a));
          this.setYVelocity(b * Math.sin(.01745329251994278 * a))
        },
        accelerateX: function(a) {
          this.setXVelocity(this.getXVelocity() + a)
        },
        accelerateY: function(a) {
          this.setYVelocity(this.getYVelocity() + a)
        },
        accelerate: function(a, b) {
          this.setXVelocity(this.getXVelocity() + b * Math.cos(.01745329251994278 * a));
          this.setYVelocity(this.getYVelocity() + b * Math.sin(.01745329251994278 * a))
        },
        getAngle: function() {
          return 0 != this.physicsMode ? .01745329251994278 * this.realAngle : this.body.getAngle()
        },
        getAngleInDegrees: function() {
          return 0 != this.physicsMode ?
            this.realAngle : 57.29577951308402 * this.body.getAngle()
        },
        setAngle: function(a, b) {
          null == b && (b = !0);
          b ? 0 != this.physicsMode ? this.realAngle = 57.29577951308402 * a : this.body.setAngle(a) : 0 != this.physicsMode ? this.realAngle = a : this.body.setAngle(.01745329251994278 * a);
          this.updateMatrix = !0
        },
        rotate: function(a, b) {
          null == b && (b = !0);
          b ? 0 != this.physicsMode ? this.realAngle += 57.29577951308402 * a : this.body.setAngle(this.body.getAngle() + a) : 0 != this.physicsMode ? this.realAngle += a : this.body.setAngle(this.body.getAngle() + .01745329251994278 *
            a)
        },
        getAngularVelocity: function() {
          return 0 != this.physicsMode ? .01745329251994278 * this.rSpeed : this.body.getAngularVelocity()
        },
        setAngularVelocity: function(a) {
          0 != this.physicsMode ? this.rSpeed = 57.29577951308402 * a : (this.body.setAngularVelocity(a), this.body.setAwake(!0))
        },
        changeAngularVelocity: function(a) {
          0 != this.physicsMode ? this.rSpeed += 57.29577951308402 * a : (this.body.setAngularVelocity(this.body.getAngularVelocity() + a), this.body.setAwake(!0))
        },
        push: function(a, b, c) {
          if (0 != this.physicsMode) this.dummy.x = a, this.dummy.y =
            b, this.dummy.normalize(), this.accelerateX(this.dummy.x * c * .01), this.accelerateY(this.dummy.y * c * .01);
          else if (0 != a || 0 != b) this.dummy.x = a, this.dummy.y = b, this.dummy.normalize(), this.dummy.multiply(c), this.body.applyForce(this.dummy, this.body.getWorldCenter())
        },
        pushInDirection: function(a, b) {
          this.push(Math.cos(.01745329251994278 * a), Math.sin(.01745329251994278 * a), b)
        },
        applyImpulse: function(a, b, c) {
          if (0 != this.physicsMode) this.dummy.x = a, this.dummy.y = b, this.dummy.normalize(), this.accelerateX(this.dummy.x * c), this.accelerateY(this.dummy.y *
            c);
          else if (0 != a || 0 != b) this.dummy.x = a, this.dummy.y = b, this.dummy.normalize(), this.dummy.multiply(c), this.body.applyImpulse(this.dummy, this.body.getWorldCenter())
        },
        applyImpulseInDirection: function(a, b) {
          this.applyImpulse(Math.cos(.01745329251994278 * a), Math.sin(.01745329251994278 * a), b)
        },
        applyTorque: function(a) {
          0 != this.physicsMode ? this.fixedRotation || (this.rSpeed -= a) : (this.body.applyTorque(a), this.body.setAwake(!0))
        },
        getWidth: function() {
          return this.cacheWidth
        },
        getHeight: function() {
          return this.cacheHeight
        },
        getPhysicsWidth: function() {
          return this.cacheWidth / p.physicsScale
        },
        getPhysicsHeight: function() {
          return this.cacheHeight / p.physicsScale
        },
        getBody: function() {
          return this.body
        },
        enableRotation: function() {
          0 != this.physicsMode ? this.fixedRotation = !1 : this.body.setFixedRotation(!1)
        },
        disableRotation: function() {
          0 != this.physicsMode ? this.fixedRotation = !0 : this.body.setFixedRotation(!0)
        },
        setIgnoreGravity: function(a) {
          this.ignoreGravity = a;
          0 == this.physicsMode && this.body.setIgnoreGravity(a)
        },
        ignoresGravity: function() {
          return 0 !=
            this.physicsMode ? this.ignoreGravity : this.body.isIgnoringGravity()
        },
        getFriction: function() {
          return 0 == this.physicsMode && null != this.body.m_fixtureList ? this.body.m_fixtureList.m_friction : 0
        },
        getBounciness: function() {
          return 0 == this.physicsMode && null != this.body.m_fixtureList ? this.body.m_fixtureList.m_restitution : 0
        },
        getMass: function() {
          return 0 == this.physicsMode ? this.md.mass : 0
        },
        getAngularMass: function() {
          return 0 == this.physicsMode ? this.md.I : 0
        },
        getLinearDamping: function() {
          return 0 == this.physicsMode ? this.body.getLinearDamping() :
            0
        },
        getAngularDamping: function() {
          return 0 == this.physicsMode ? this.body.getAngularDamping() : 0
        },
        setFriction: function(a) {
          0 == this.physicsMode && this.body.setFriction(a)
        },
        setBounciness: function(a) {
          0 == this.physicsMode && this.body.setBounciness(a)
        },
        setMass: function(a) {
          0 == this.physicsMode && (this.md.mass = a, this.body.setMassData(this.md))
        },
        setAngularMass: function(a) {
          0 == this.physicsMode && (this.md.I = a, this.body.setMassData(this.md))
        },
        setLinearDamping: function(a) {
          0 == this.physicsMode && this.body.setLinearDamping(a)
        },
        setAngularDamping: function(a) {
          0 == this.physicsMode && this.body.setAngularDamping(a)
        },
        isMouseOver: function() {
          if (this.isHUD) {
            var a = (N.mouseX - p.engine.hudLayer.get_x()) / p.SCALE;
            var b = (N.mouseY - p.engine.hudLayer.get_y()) / p.SCALE
          } else a = (N.mouseX + p.cameraX * this.layer.scrollFactorX) / p.SCALE, b = (N.mouseY + p.cameraY * this.layer.scrollFactorY) / p.SCALE;
          var c = Math.abs(this.realScaleX),
            d = Math.abs(this.realScaleY),
            e = this.currOrigin.x * (c - 1),
            f = (this.cacheWidth - this.currOrigin.x) * (c - 1),
            g = this.currOrigin.y * (d - 1),
            h = (this.cacheHeight -
              this.currOrigin.y) * (d - 1);
          0 == this.physicsMode || this.currOrigin.x == this.cacheWidth / 2 && this.currOrigin.y == this.cacheHeight / 2 || this.resetReal(this.realX, this.realY);
          var m = this.colX - e,
            l = this.colY - g;
          if (0 != this.get_rotation()) {
            c = m + this.currOrigin.x * c;
            d = l + this.currOrigin.y * d;
            a -= c;
            b -= d;
            var y = .01745329251994278 * this.get_rotation();
            d = d - a * Math.sin(y) + b * Math.cos(y);
            a = c + a * Math.cos(y) + b * Math.sin(y);
            b = d
          }
          return this.isHUD && !p.engine.isHUDZoomable ? a >= m / p.engine.zoomMultiplier && b >= l / p.engine.zoomMultiplier && a < (m + this.cacheWidth +
            e + f) / p.engine.zoomMultiplier ? b < (l + this.cacheHeight + g + h) / p.engine.zoomMultiplier : !1 : a >= m && b >= l && a < m + this.cacheWidth + e + f ? b < l + this.cacheHeight + g + h : !1
        },
        isMouseHover: function() {
          return this.isMouseOver() ? !N.mouseDown : !1
        },
        isMouseDown: function() {
          return this.isMouseOver() ? N.mouseDown : !1
        },
        isMousePressed: function() {
          return this.isMouseOver() ? N.mousePressed : !1
        },
        isMouseReleased: function() {
          return this.isMouseOver() ? N.mouseReleased : !1
        },
        cancelTweens: function() {
          this.tweenProps.cancel()
        },
        fadeTo: function(a, b, c) {
          null ==
            b && (b = 1);
          this.tweenProps.alpha.tween(this.get_alpha(), a, c, 1E3 * b | 0)
        },
        growTo: function(a, b, c, d) {
          null == c && (c = 1);
          null == b && (b = 1);
          null == a && (a = 1);
          this.tweenProps.realScaleXY.tween(this.realScaleX, a, this.realScaleY, b, d, 1E3 * c | 0)
        },
        spinTo: function(a, b, c) {
          null == b && (b = 1);
          this.tweenProps.angle.tween(this.getAngleInDegrees(), a, c, 1E3 * b | 0)
        },
        moveTo: function(a, b, c, d) {
          null == c && (c = 1);
          this.tweenProps.xy.tween(this.getX(!1), a, this.getY(!1), b, d, 1E3 * c | 0)
        },
        spinBy: function(a, b, c) {
          null == b && (b = 1);
          this.spinTo(this.getAngleInDegrees() +
            a, b, c)
        },
        moveBy: function(a, b, c, d) {
          null == c && (c = 1);
          this.moveTo(this.getX(!1) + a, this.getY(!1) + b, c, d)
        },
        drawImage: function(a) {
          if (null != this.currAnimation) {
            var b = 0,
              c = 0;
            0 < this.realAngle && (this.drawMatrix.identity(), this.transformPoint.x = -(this.cacheWidth / 2) * p.SCALE, this.transformPoint.y = -(this.cacheHeight / 2) * p.SCALE, this.drawMatrix.translate(-this.transformPoint.x, -this.transformPoint.y), this.drawMatrix.scale(this.realScaleX, this.realScaleY), this.drawMatrix.rotate(.01745329251994278 * this.realAngle), this.drawMatrix.translate(this.colX *
              p.SCALE, this.colY * p.SCALE), b += this.transformMatrix.tx - this.drawMatrix.tx, c += this.transformMatrix.ty - this.drawMatrix.ty);
            var d = this.currAnimation.get_visible();
            this.currAnimation.set_visible(!0);
            var e = this.currAnimation,
              f = .01745329251994278 * this.realAngle;
            if (!ka.disposeImages || e.model.checkImageReadable()) {
              e = e.get_bitmapData();
              null == f && (f = 0);
              b *= a.scaleX;
              c *= a.scaleY;
              a.rect.x = 0;
              a.rect.y = 0;
              a.rect.width = e.width;
              a.rect.height = e.height;
              a.drawActor ? null != a.actor && a.actor.isHUD ? (a.point.x = a.x + b, a.point.y =
                a.y + c) : (a.point.x = a.x + b - p.cameraX, a.point.y = a.y + c - p.cameraY) : (a.point.x = a.x + b, a.point.y = a.y + c);
              a.mtx.identity();
              a.mtx.rotate(f);
              a.mtx.translate(a.point.x, a.point.y);
              if (0 == f) 1 != a.alpha && (a.point2.x = 0, a.point2.y = 0, a.rect2.width = e.width, a.rect2.height = e.height, c = new wa(e.width, e.height, !0, a.toARGB(0, 255 * a.alpha | 0)), b = new wa(e.width, e.height, !0, 0), b.copyPixels(e, a.rect2, a.point2, c, null, !0), e = b), a.graphics.beginBitmapFill(e, a.mtx), a.graphics.drawRect(a.point.x, a.point.y, e.width, e.height);
              else {
                1 != a.alpha &&
                  (a.point2.x = 0, a.point2.y = 0, a.rect2.width = e.width, a.rect2.height = e.height, c = new wa(e.width, e.height, !0, a.toARGB(0, 255 * a.alpha | 0)), b = new wa(e.width, e.height, !0, 0), b.copyPixels(e, a.rect2, a.point2, c, null, !0), e = b);
                c = new wa(e.width + 2, e.height + 2, !0, 0);
                b = Math.sqrt(Math.pow(c.width, 2) + Math.pow(c.height, 2)) | 0;
                f = new ha(0, 0, e.width, e.height);
                var g = new la(1, 1);
                c.copyPixels(e, f, g);
                a.graphics.beginBitmapFill(c, a.mtx, !1, ka.antialias);
                a.graphics.drawRect(a.x - (b - e.width) / 2, a.y - (b - e.height) / 2, b, b)
              }
              a.graphics.endFill()
            }
            this.currAnimation.set_visible(d)
          }
        },
        getCurrentImage: function() {
          return this.currAnimation.getCurrentImage()
        },
        enableActorDrawing: function() {
          this.drawActor = !0;
          null != this.currAnimation && this.currAnimation.set_visible(!0)
        },
        disableActorDrawing: function() {
          this.drawActor = !1;
          null != this.currAnimation && this.currAnimation.set_visible(!1)
        },
        drawsImage: function() {
          return this.drawActor
        },
        setFilter: function(a) {
          null == this.bitmapFilters && (this.bitmapFilters = []);
          this.bitmapFilters = this.bitmapFilters.concat(a);
          null != this.currAnimation && this.currAnimation.set_filter(this.bitmapFilters)
        },
        clearFilters: function() {
          this.bitmapFilters = null;
          null != this.currAnimation && this.currAnimation.set_filter(null)
        },
        setBlendMode: function(a) {
          this.set_blendMode(a)
        },
        resetBlendMode: function() {
          this.set_blendMode(10)
        },
        addBehavior: function(a) {
          null != this.behaviors && this.behaviors.add(a)
        },
        hasBehavior: function(a) {
          return null != this.behaviors ? this.behaviors.hasBehavior(a) : !1
        },
        enableBehavior: function(a) {
          null != this.behaviors && this.behaviors.enableBehavior(a)
        },
        disableBehavior: function(a) {
          null != this.behaviors && this.behaviors.disableBehavior(a)
        },
        isBehaviorEnabled: function(a) {
          return null != this.behaviors ? this.behaviors.isBehaviorEnabled(a) : !1
        },
        enableAllBehaviors: function() {
          if (null != this.behaviors)
            for (var a = 0, b = this.behaviors.behaviors; a < b.length;) {
              var c = b[a];
              ++a;
              c.enabled = !0
            }
        },
        getValue: function(a, b) {
          return this.behaviors.getAttribute(a, b)
        },
        setValue: function(a, b, c) {
          this.behaviors.setAttribute(a, b, c)
        },
        shout: function(a, b) {
          return this.behaviors.call(a, b)
        },
        say: function(a, b, c) {
          return this.behaviors.call2(a, b, c)
        },
        setActorValue: function(a, b) {
          null !=
            this.registry && (this.registry.h[a] = b)
        },
        getActorValue: function(a) {
          return null == this.registry ? null : this.registry.h[a]
        },
        hasActorValue: function(a) {
          return null == this.registry ? null : null != this.registry.h[a]
        },
        registerListener: function(a, b) {
          var c = R.indexOf(this.allEventReferences, a); - 1 != c ? a = this.allListeners.h[c] : (this.allEventReferences.push(a), c = this.allEventReferences.length - 1, a = [], this.allListeners.h[c] = a);
          a.push(b)
        },
        removeAllListeners: function() {
          for (var a = 0, b = this.allEventReferences.length; a < b;) {
            var c =
              a++,
              d = this.allEventReferences[c];
            if (null != d && (c = K.__cast(this.allListeners.h[c], Array), null != c))
              for (var e = 0, f = c.length; e < f;) {
                var g = e++;
                d.remove(c[g])
              }
          }
          this.allEventReferences.length = 0
        },
        anchorToScreen: function() {
          this.isHUD || this.engine.moveActorToLayer(this, this.engine.hudLayer)
        },
        unanchorFromScreen: function() {
          this.isHUD && this.engine.moveActorToLayer(this, this.cachedLayer)
        },
        isAnchoredToScreen: function() {
          return this.isHUD
        },
        makeAlwaysSimulate: function(a) {
          null == a && (a = !0);
          this.alwaysSimulate || (0 == this.physicsMode &&
            a && (this.body.setAlwaysActive(!0), this.body.setActive(!0)), this.alwaysSimulate = !0)
        },
        makeSometimesSimulate: function(a) {
          null == a && (a = !0);
          this.alwaysSimulate && (0 == this.physicsMode && a && (this.body.setAlwaysActive(!1), this.body.setActive(!1)), this.alwaysSimulate = !1)
        },
        alwaysSimulates: function() {
          return this.alwaysSimulate
        },
        die: function() {
          this.dying = !0;
          var a = this.engine.whenTypeGroupKilledEvents,
            b = this.getType(),
            c = a.h[b.__id__];
          a = this.engine.whenTypeGroupKilledEvents;
          b = this.getGroup();
          a = a.h[b.__id__];
          if (0 <
            this.whenKilled.length)
            for (this.whenKilled._dispatchIndex = 0; this.whenKilled._dispatchIndex < this.whenKilled.length;) {
              try {
                this.whenKilled.listeners[this.whenKilled._dispatchIndex]()
              } catch (d) {
                if (pa.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
              }++this.whenKilled._dispatchIndex
            }
          if (null != c && 0 < c.length)
            for (c._dispatchIndex = 0; c._dispatchIndex < c.length;) {
              try {
                c.listeners[c._dispatchIndex](this)
              } catch (d) {
                if (pa.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
              }++c._dispatchIndex
            }
          if (null !=
            a && 0 < a.length)
            for (a._dispatchIndex = 0; a._dispatchIndex < a.length;) {
              try {
                a.listeners[a._dispatchIndex](this)
              } catch (d) {
                if (pa.lastError = d, "string" != typeof F.caught(d).unwrap()) throw d;
              }++a._dispatchIndex
            }
          this.removeAllListeners()
        },
        isDying: function() {
          return this.dying
        },
        isAlive: function() {
          return !(this.dead || this.dying || this.recycled)
        },
        isOnScreen: function() {
          var a = p.cameraX / p.SCALE,
            b = p.cameraY / p.SCALE,
            c = p.paddingLeft,
            d = p.paddingTop,
            e = p.paddingRight,
            f = p.paddingBottom;
          return (0 != this.physicsMode || this.body.isActive()) &&
            this.getX(!0) + this.cacheWidth * this.realScaleX >= a - c && this.getY(!0) + this.cacheHeight * this.realScaleY >= b - d && this.getX(!0) < a + p.screenWidth + e ? this.getY(!0) < b + p.screenHeight + f : !1
        },
        isInScene: function() {
          return (0 != this.physicsMode || this.body.isActive()) && 0 <= this.getX(!0) + this.cacheWidth * this.realScaleX && 0 <= this.getY(!0) + this.cacheHeight * this.realScaleY && this.getX(!0) < p.sceneWidth ? this.getY(!0) < p.sceneHeight : !1
        },
        getLastCollidedActor: function() {
          return wb.lastCollided
        },
        killSelfAfterLeavingScreen: function() {
          this.killLeaveScreen = !0
        },
        toString: function() {
          return null == this.get_name() ? "Unknown Actor " + this.ID : "[Actor " + this.ID + "," + this.get_name() + "]"
        },
        addRectangularShape: function(a, b, c, d) {
          if (0 == this.physicsMode) {
            var e = new Lb,
              f = [];
            a = p.toPhysicalUnits(a - Math.floor(this.cacheWidth / 2) - this.currOffset.x);
            b = p.toPhysicalUnits(b - Math.floor(this.cacheHeight / 2) - this.currOffset.y);
            c = p.toPhysicalUnits(c);
            d = p.toPhysicalUnits(d);
            f.push(new C(a, b));
            f.push(new C(a + c, b));
            f.push(new C(a + c, b + d));
            f.push(new C(a, b + d));
            e.setAsVector(f);
            this.createFixture(e).SetUserData(this)
          }
        },
        addCircularShape: function(a, b, c) {
          if (0 == this.physicsMode) {
            var d = new Qc;
            d.m_radius = p.toPhysicalUnits(c);
            d.m_p.x = p.toPhysicalUnits(a);
            d.m_p.y = p.toPhysicalUnits(b);
            this.createFixture(d).SetUserData(this)
          }
        },
        addVertex: function(a, b, c) {
          b = p.toPhysicalUnits(b - Math.floor(this.cacheWidth / 2) - this.currOffset.x);
          c = p.toPhysicalUnits(c - Math.floor(this.cacheHeight / 2) - this.currOffset.y);
          a.push(new C(b, c))
        },
        addPolygonalShape: function(a) {
          if (0 == this.physicsMode) {
            var b = new Lb;
            b.setAsArray(a);
            this.createFixture(b).SetUserData(this)
          }
        },
        createFixture: function(a) {
          var b = new If;
          b.shape = a;
          b.density = .1 * this.bodyDef.mass;
          b.friction = this.bodyDef.friction;
          b.restitution = this.bodyDef.bounciness;
          return this.body.createFixture(b)
        },
        getLastCreatedFixture: function() {
          return 0 == this.physicsMode ? this.body.getFixtureList() : null
        },
        setLocation: function(a, b) {
          this.realX = a;
          this.realY = b;
          this.setXY(a, b, !1, !0)
        },
        get_shape: function() {
          return this._mask
        },
        set_shape: function(a) {
          if (this._mask == a) return a;
          null != this._mask && this._mask.assignTo(null);
          this._mask = a;
          null !=
            a && this._mask.assignTo(this);
          return this._mask
        },
        collide: function(a, b, c) {
          a = this.engine.getGroup(a);
          this._x = this.realX;
          this._y = this.realY;
          this.resetReal(b, c);
          if (null == this._mask) {
            b = 0;
            for (c = a.list; b < c.length;)
              if (a = c[b], ++b, !a.recycled && this.colX + this.cacheWidth >= a.colX && this.colY + this.cacheHeight >= a.colY && this.colX <= a.colX + a.cacheWidth && this.colY <= a.colY + a.cacheHeight && a.collidable && a != this && (null == a._mask || a._mask.collide(this.HITBOX))) return this.colMask = a._mask, this.resetReal(this._x, this._y), a;
            this.resetReal(this._x,
              this._y);
            return null
          }
          b = 0;
          for (c = a.list; b < c.length;)
            if (a = c[b], ++b, !a.recycled && this.colX + this.cacheWidth >= a.colX && this.colY + this.cacheHeight >= a.colY && this.colX <= a.colX + a.cacheWidth && this.colY <= a.colY + a.cacheHeight && a.collidable && a != this && this._mask.collide(null != a._mask ? a._mask : a.HITBOX)) return this.colMask = null != a._mask ? a._mask : a.HITBOX, this.resetReal(this._x, this._y), a;
          this.resetReal(this._x, this._y);
          return null
        },
        collideTypes: function(a, b, c) {
          for (var d = this.collidedList.length, e, f = 0; f < a.length;) e =
            a[f], ++f, -2 != e && this.collideInto(e, b, c, this.collidedList);
          return this.collidedList.length > d ? this.collidedList[this.collidedList.length - 1] : null
        },
        collideWith: function(a, b, c) {
          this._x = this.realX;
          this._y = this.realY;
          this.resetReal(b, c);
          if (this.colX + this.cacheWidth >= a.colX && this.colY + this.cacheHeight >= a.colY && this.colX <= a.colX + a.cacheWidth && this.colY <= a.colY + a.cacheHeight && this.collidable && a.collidable) {
            if (null == this._mask) {
              if (null == a._mask || a._mask.collide(this.HITBOX)) return this.resetReal(this._x, this._y),
                a;
              this.resetReal(this._x, this._y);
              return null
            }
            if (this._mask.collide(null != a._mask ? a._mask : a.HITBOX)) return this.resetReal(this._x, this._y), a
          }
          this.resetReal(this._x, this._y);
          return null
        },
        collideInto: function(a, b, c, d) {
          a = this.engine.getGroup(a);
          this._x = this.realX;
          this._y = this.realY;
          this.resetReal(b, c);
          b = d.length;
          if (null == this._mask)
            for (c = 0, a = a.list; c < a.length;) {
              var e = a[c];
              ++c;
              e.recycled || this.colX + this.cacheWidth >= e.colX && this.colY + this.cacheHeight >= e.colY && this.colX <= e.colX + e.cacheWidth && this.colY <=
                e.colY + e.cacheHeight && e.collidable && e != this && (null == e._mask || e._mask.collide(this.HITBOX)) && (R.contains(d, e) || (d[b++] = e))
            } else
              for (c = 0, a = a.list; c < a.length;) e = a[c], ++c, this.colX + this.cacheWidth >= e.colX && this.colY + this.cacheHeight >= e.colY && this.colX <= e.colX + e.cacheWidth && this.colY <= e.colY + e.cacheHeight && e.collidable && e != this && this._mask.collide(null != e._mask ? e._mask : e.HITBOX) && (R.contains(d, e) || (d[b++] = e));
          this.resetReal(this._x, this._y)
        },
        clearCollisionInfoList: function() {
          if (0 < this.collisionsCount)
            for (var a =
                this.simpleCollisions.iterator(); a.hasNext();) {
              var b = a.next();
              b.remove = !0;
              null != b.linkedCollision && (b.linkedCollision.remove = !0)
            }
        },
        disposeRemovedCollisionInfo: function() {
          if (0 < this.collisionsCount) {
            for (var a = -1, b = this.simpleCollisions.keys(); b.hasNext();) {
              var c = b.next(),
                d = this.simpleCollisions,
                e = d.mH,
                f = e.mHash[73856093 * c & e.mMask];
              if (-1 == f) f = -2147483648;
              else if (e = e.mData, e[f] == c) f = e[f + 1];
              else {
                var g = -2147483648;
                for (f = e[f + 2]; - 1 != f;) {
                  if (e[f] == c) {
                    g = e[f + 1];
                    break
                  }
                  f = e[f + 2]
                }
                f = g
              }(-2147483648 == f ? null : d.mVals[f]).remove ?
                this.simpleCollisions.unset(c) : c > a && (a = c)
            }
            this.collisionsCount = a + 1
          }
        },
        clearCollidedList: function() {
          for (; 0 < this.collidedList.length;) this.collidedList.pop();
          this.listChecked = 0
        },
        addCollision: function(a) {
          var b = this.alreadyCollided(a);
          if (-1 != b) {
            var c = this.simpleCollisions,
              d = c.mH,
              e = d.mHash[73856093 * b & d.mMask];
            if (-1 == e) e = -2147483648;
            else if (d = d.mData, d[e] == b) e = d[e + 1];
            else {
              var f = -2147483648;
              for (e = d[e + 2]; - 1 != e;) {
                if (d[e] == b) {
                  f = d[e + 1];
                  break
                }
                e = d[e + 2]
              }
              e = f
            }
            c = -2147483648 == e ? null : c.mVals[e];
            a.switchData(c.linkedCollision);
            a.linkedCollision.remove = !1;
            a.remove = !1;
            nc.recycle(c);
            this.simpleCollisions.unset(b);
            this.simpleCollisions.set(b, a);
            return a
          }
          this.simpleCollisions.unset(this.collisionsCount);
          this.simpleCollisions.set(this.collisionsCount, a);
          this.collisionsCount++;
          return a
        },
        alreadyCollided: function(a) {
          for (var b = this.simpleCollisions.keys(); b.hasNext();) {
            var c = b.next(),
              d = this.simpleCollisions,
              e = d.mH,
              f = e.mHash[73856093 * c & e.mMask];
            if (-1 == f) f = -2147483648;
            else if (e = e.mData, e[f] == c) f = e[f + 1];
            else {
              var g = -2147483648;
              for (f =
                e[f + 2]; - 1 != f;) {
                if (e[f] == c) {
                  g = e[f + 1];
                  break
                }
                f = e[f + 2]
              }
              f = g
            }
            d = -2147483648 == f ? null : d.mVals[f];
            if (null != d && (d.maskA == a.maskA && d.maskB == a.maskB || d.maskA == a.maskB && d.maskB == a.maskA))
              if (d.solidCollision)
                if (1 == d.maskA.groupID || 1 == d.maskB.groupID) {
                  if (d.thisFromLeft || d.thisFromRight)
                    if (a.thisFromLeft || a.thisFromRight) return c;
                  if (d.thisFromTop || d.thisFromBottom)
                    if (a.thisFromTop || a.thisFromBottom) return c
                } else return c;
            else return c
          }
          return -1
        },
        resetReal: function(a, b) {
          this.realX = a;
          this.realY = b;
          this.colX = this.realX -
            Math.floor(this.cacheWidth / 2) - this.currOffset.x;
          this.colY = this.realY - Math.floor(this.cacheHeight / 2) - this.currOffset.y
        },
        adjustByWidth: function(a) {
          if (null != this._mask && null != this._mask.lastCheckedMask && this._mask.lastCheckedMask instanceof od) {
            var b = this._mask.lastCheckedMask;
            return a ? this.cacheWidth / 2 - (this.cacheWidth - (b._x + b._width)) : this.cacheWidth / 2 - b._x
          }
          return this.cacheWidth / 2
        },
        adjustByHeight: function(a) {
          if (null != this._mask && null != this._mask.lastCheckedMask && this._mask.lastCheckedMask instanceof od) {
            var b = this._mask.lastCheckedMask;
            return a ? this.cacheHeight / 2 - (this.cacheHeight - (b._y + b._height)) : this.cacheHeight / 2 - b._y
          }
          return this.cacheHeight / 2
        },
        getAllCollisionInfo: function(a, b) {
          for (var c = null; this.listChecked < this.collidedList.length;) {
            var d = nc.get();
            this.colMask = this.collidedList[this.listChecked]._mask;
            this.fillCollisionInfo(d, this.collidedList[this.listChecked], a, b);
            this.addCollision(d);
            if (null == d.linkedCollision) {
              var e = nc.get();
              d.switchData(e);
              this.collidedList[this.listChecked].addCollision(e)
            }
            d.solidCollision &&
              (c = d);
            this.listChecked++
          }
          return c
        },
        moveActorBy: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          if (0 != a || 0 != b) {
            this.clearCollisionInfoList();
            if (!c && this.collidable && null != this.HITBOX.collideTypes) {
              c = this.HITBOX.collideTypes;
              if (0 != a) {
                var e = 0 < a ? Math.ceil(this.realX + a) : Math.floor(this.realX + a);
                this.clearCollidedList();
                if (d || null != this.collideTypes(c, e, this.realY))
                  for (this.clearCollidedList(); 0 != a;) {
                    var f = 1 <= a || -1 >= a ? 1 : Math.abs(a);
                    f = 0 < a ? f : -f;
                    e = 0 < f ? Math.ceil(this.realX + f) : Math.floor(this.realX + f);
                    var g =
                      this.collide(-2, e, this.realY);
                    null != g && K.__cast(g, vd).addActor(this);
                    g = this.collideTypes(c, e, this.realY);
                    if (null != g && (e = this.getAllCollisionInfo(f, 0), null != e)) {
                      this.xSpeed = 0;
                      e.useBounds && (this.realX = 0 < f ? e.bounds.x - Math.ceil(this.adjustByWidth(!0)) : e.bounds.x + e.bounds.width + Math.floor(this.adjustByWidth(!1)));
                      break
                    }
                    this.realX += f;
                    a -= f
                  } else this.realX += a
              }
              if (0 != b)
                if (e = 0 < b ? Math.ceil(this.realY + b) : Math.floor(this.realY + b), this.clearCollidedList(), d || null != this.collideTypes(c, this.realX, e))
                  for (this.clearCollidedList(); 0 !=
                    b;) {
                    f = 1 <= b || -1 >= b ? 1 : Math.abs(b);
                    f = 0 < b ? f : -f;
                    e = 0 < f ? Math.ceil(this.realY + f) : Math.floor(this.realY + f);
                    g = this.collide(-2, this.realX, e);
                    null != g && K.__cast(g, vd).addActor(this);
                    g = this.collideTypes(c, this.realX, e);
                    if (null != g && (e = this.getAllCollisionInfo(0, f), null != e)) {
                      this.ySpeed = 0;
                      e.useBounds && (this.realY = 0 < f ? e.bounds.y - Math.ceil(this.adjustByHeight(!0)) : e.bounds.y + e.bounds.height + Math.floor(this.adjustByHeight(!1)));
                      break
                    }
                    this.realY += f;
                    b -= f
                  } else this.realY += b
            } else this.realX += a, this.realY += b;
            this.resetReal(this.realX,
              this.realY)
          }
        },
        moveActorTo: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          this.moveActorBy(a - this.realX, b - this.realY, c, d)
        },
        moveActorTowards: function(a, b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = !0);
          this._point.x = a - this.realX;
          this._point.y = b - this.realY;
          this._point.normalize(c);
          this.moveActorBy(this._point.x, this._point.y, d, e)
        },
        moveCollideX: function(a, b) {},
        moveCollideY: function(a, b) {},
        fillCollisionInfo: function(a, b, c, d) {
          if (b instanceof vd) b.addActor(this);
          else {
            a.thisActor = a.actorA = this;
            a.otherActor = a.actorB =
              b;
            a.maskA = this._mask;
            a.maskB = this.colMask;
            a.solidCollision = this._mask.solid && this.colMask.solid;
            a.groupA = this._mask.lastCheckedMask.groupID;
            a.groupB = this._mask.lastCheckedMask.lastColID;
            var e = nc.collisionResponses,
              f = this.getGroupID();
            e = e.h[f];
            var g = !1,
              h = !1;
            null != e ? (f = b.getGroupID(), f = null != e.h[f]) : f = !1;
            f && (f = b.getGroupID(), "sensor" == e.h[f] ? (a.solidCollision = !1, g = !0) : h = a.solidCollision = !0);
            null != this.colMask && (a.useBounds = !0, a.bounds.x = this.colMask.lastBounds.x, a.bounds.y = this.colMask.lastBounds.y,
              a.bounds.width = this.colMask.lastBounds.width, a.bounds.height = this.colMask.lastBounds.height);
            0 != c && (1E8 == b.ID ? (a.thisFromLeft = 0 > c, a.thisFromRight = 0 < c) : (a.thisFromLeft = b.colX < this.colX, a.thisFromRight = b.colX > this.colX), a.otherFromLeft = !a.thisFromLeft, a.otherFromRight = !a.thisFromRight, a.thisFromTop = a.otherFromTop = !1, a.thisFromBottom = a.otherFromBottom = !1);
            0 != d && (1E8 == b.ID ? (a.thisFromTop = 0 > d, a.thisFromBottom = 0 < d) : (a.thisFromTop = b.colY < this.colY, a.thisFromBottom = b.colY > this.colY), a.otherFromTop = !a.thisFromTop,
              a.otherFromBottom = !a.thisFromBottom, a.thisFromLeft = a.otherFromLeft = !1, a.thisFromRight = a.otherFromRight = !1);
            a.thisCollidedWithActor = !0;
            a.thisCollidedWithTile = 1E8 == b.ID;
            a.thisCollidedWithSensor = null != a ? g || !h && !a.maskB.solid : !1;
            a.thisCollidedWithTerrain = !1;
            a.otherCollidedWithActor = !0;
            a.otherCollidedWithTile = 1E8 == b.ID;
            a.otherCollidedWithSensor = null != a ? !a.maskA.solid : !1;
            a.otherCollidedWithTerrain = !1
          }
        },
        handleCollisionsSimple: function() {
          if (0 < this.collisionsCount)
            for (var a = this.simpleCollisions.iterator(); a.hasNext();) {
              var b =
                a.next();
              if (null != b && 1 != b.remove) {
                wb.lastCollided = b.otherActor;
                if (0 < this.whenCollided.length)
                  for (this.whenCollided._dispatchIndex = 0; this.whenCollided._dispatchIndex < this.whenCollided.length;) {
                    try {
                      this.whenCollided.listeners[this.whenCollided._dispatchIndex](b)
                    } catch (c) {
                      if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
                    }++this.whenCollided._dispatchIndex
                  }
                this.engine.handleCollision(this, b)
              }
            }
        },
        HITBOX: null,
        _mask: null,
        colMask: null,
        _x: null,
        _y: null,
        _moveX: null,
        _moveY: null,
        _point: null,
        simpleCollisions: null,
        collidedList: null,
        listChecked: null,
        __class__: wb,
        __properties__: t(Z.prototype.__properties__, {
          set_shape: "set_shape",
          get_shape: "get_shape"
        })
      });
      var mo = function(a, b, c, d) {
        this.ID = a;
        this.name = b;
        this.allScenes = c;
        this.members = d;
        this.active = !0
      };
      k["com.stencyl.models.Atlas"] = mo;
      mo.__name__ = "com.stencyl.models.Atlas";
      mo.prototype = {
        ID: null,
        name: null,
        allScenes: null,
        active: null,
        members: null,
        __class__: mo
      };
      var Th = function() {};
      k["com.stencyl.models.Background"] = Th;
      Th.__name__ = "com.stencyl.models.Background";
      Th.__isInterface__ = !0;
      Th.prototype = {
        update: null,
        draw: null,
        __class__: Th
      };
      var kl = function(a, b) {
        this.group1 = a;
        this.group2 = b
      };
      k["com.stencyl.models.CollisionGroupDef"] = kl;
      kl.__name__ = "com.stencyl.models.CollisionGroupDef";
      kl.prototype = {
        group1: null,
        group2: null,
        __class__: kl
      };
      var pd = function(a, b, c) {
        this.ID = a;
        this.atlasID = c;
        this.name = b;
        this.sID = a + "," + b
      };
      k["com.stencyl.models.Resource"] = pd;
      pd.__name__ = "com.stencyl.models.Resource";
      pd.prototype = {
        ID: null,
        atlasID: null,
        name: null,
        sID: null,
        toString: function() {
          return this.sID
        },
        isAtlasActive: function() {
          var a =
            Bb.get().atlases.h[this.atlasID];
          return null == a ? !1 : a.active
        },
        loadGraphics: function() {},
        unloadGraphics: function() {},
        reloadGraphics: function(a) {
          this.unloadGraphics();
          this.loadGraphics()
        },
        __class__: pd
      };
      var Oe = function(a, b, c, d) {
        pd.call(this, a, c, b);
        this.isDefault = d;
        this.isAtlasActive() && this.loadGraphics()
      };
      k["com.stencyl.models.Font"] = Oe;
      Oe.__name__ = "com.stencyl.models.Font";
      Oe.resetStatics = function() {
        Oe.defaultFont = null
      };
      Oe.__super__ = pd;
      Oe.prototype = t(pd.prototype, {
        font: null,
        fontScale: null,
        isDefault: null,
        graphicsLoaded: null,
        getHeight: function() {
          return null != this.font ? this.font.getFontHeight(this.fontScale) : 0
        },
        getTextWidth: function(a) {
          return null != this.font ? this.font.getTextWidth(a, this.fontScale) : 0
        },
        loadGraphics: function() {
          if (!this.graphicsLoaded) {
            if (this.isDefault) {
              var a = Aa.getText("assets/graphics/default-font.fnt");
              a = ia.parse(a);
              Oe.defaultFont = this.font = (new hg).loadAngelCode(Aa.getBitmapData("assets/graphics/default-font.png"), a);
              this.fontScale = p.SCALE;
              Oe.defaultFont.isDefault = !0
            } else {
              a = Aa.getText("assets/graphics/" +
                p.IMG_BASE + "/font-" + this.ID + ".fnt");
              a = ia.parse(a);
              var b = Aa.getBitmapData("assets/graphics/" + p.IMG_BASE + "/font-" + this.ID + ".png", !1);
              this.font = (new hg).loadAngelCode(b, a);
              this.fontScale = 1
            }
            this.graphicsLoaded = !0
          }
        },
        unloadGraphics: function() {
          this.graphicsLoaded && (this.font = Oe.defaultFont, this.fontScale = 1, this.graphicsLoaded = !1)
        },
        reloadGraphics: function(a) {
          pd.prototype.reloadGraphics.call(this, a);
          a = p.engine.g;
          if (null != eb.fontCache && eb.fontCache.h.hasOwnProperty(this.ID)) {
            var b = eb.fontCache,
              c = this.ID,
              d =
              this.font.getPreparedGlyphs(this.fontScale, 0, this.isDefault);
            b.h[c] = d
          }
          a.font == this && (a.fontData = eb.fontCache.h[this.ID])
        },
        get_letterSpacing: function() {
          return this.font.xSpacing
        },
        set_letterSpacing: function(a) {
          return this.font.xSpacing = a
        },
        get_lineSpacing: function() {
          return this.font.ySpacing
        },
        set_lineSpacing: function(a) {
          return this.font.ySpacing = a
        },
        isBitmapFont: function(a) {
          null == a && (a = Aa.getText("assets/graphics/" + p.IMG_BASE + "/font-" + this.ID + ".fnt"), a = ia.parse(a));
          for (a = a.elements(); a.hasNext();) {
            var b =
              a.next();
            if (b.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == b.nodeType ? "null" : sb.toString(b.nodeType)));
            if ("font" == b.nodeName)
              for (b = b.elements(); b.hasNext();) {
                var c = b.next();
                if (c.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == c.nodeType ? "null" : sb.toString(c.nodeType)));
                if ("info" == c.nodeName)
                  for (c = c.attributes(); c.hasNext();)
                    if ("lspace" == c.next()) return !0
              }
          }
          return !1
        },
        __class__: Oe,
        __properties__: {
          set_lineSpacing: "set_lineSpacing",
          get_lineSpacing: "get_lineSpacing",
          set_letterSpacing: "set_letterSpacing",
          get_letterSpacing: "get_letterSpacing"
        }
      });
      var Bb = function() {
        var a = oc.get().gameMbs.getRoot();
        this.shapes = this.readShapes(a);
        this.atlases = this.readAtlases(a);
        this.autotileFormats = this.readAutotileFormats(a);
        this.groups = this.readGroups(a);
        this.groups.push(new xh(-2, "Regions"));
        this.groups.push(new xh(0, "Players"));
        this.groups.push(new xh(1, "Terrain"));
        this.groups.push(new xh(2, "Doodads"));
        this.groups.push(new xh(3, "Actors"));
        this.groupsCollidesWith =
          new Za;
        this.collisionGroups = this.readCollisionGroups(a);
        Bb.collisionMap = [];
        for (var b = 0, c = 0, d = this.groups; c < d.length;) {
          var e = d[c];
          ++c;
          b = Math.max(e.ID | 0, b) | 0
        }++b;
        c = 0;
        for (d = b; c < d;) {
          e = c++;
          Bb.collisionMap.push([]);
          for (var f = 0, g = b; f < g;) f++, Bb.collisionMap[e].push(!1)
        }
        if (p.NO_PHYSICS)
          for (c = 0, d = this.groups; c < d.length;) e = d[c], ++c, this.collisionGroups.push(new kl(e.ID, -2));
        c = 0;
        for (d = this.collisionGroups; c < d.length;) {
          e = d[c];
          ++c;
          b = e.group1;
          e = e.group2;
          this.groupsCollidesWith.h.hasOwnProperty(b) || (this.groupsCollidesWith.h[b] = []);
          this.groupsCollidesWith.h.hasOwnProperty(e) || (this.groupsCollidesWith.h[e] = []);
          if (!p.NO_PHYSICS || 0 <= b && 0 <= e) Bb.collisionMap[b][e] = !0, Bb.collisionMap[e][b] = !0;
          this.groupsCollidesWith.h[b].push(e);
          this.groupsCollidesWith.h[e].push(b)
        }
        this.gameAttributes = Bb.readGameAttributes(a);
        oc.get().gameMbs = null
      };
      k["com.stencyl.models.GameModel"] = Bb;
      Bb.__name__ = "com.stencyl.models.GameModel";
      Bb.resetStatics = function() {
        Bb.instance = null;
        Bb.collisionMap = null
      };
      Bb.get = function() {
        null == Bb.instance && (Bb.instance = new Bb);
        return Bb.instance
      };
      Bb.readGameAttributes = function(a) {
        return we.readMap(a.getGameAttributes())
      };
      Bb.prototype = {
        groups: null,
        groupsCollidesWith: null,
        collisionGroups: null,
        gameAttributes: null,
        shapes: null,
        atlases: null,
        scenes: null,
        autotileFormats: null,
        loadScenes: function() {
          this.scenes = new Za;
          for (var a = oc.get().sceneListMbs.getRoot(), b = 0, c = a.length(); b < c;) {
            b++;
            var d = a.getNextObject(),
              e = d.getId(),
              f = this.scenes;
            d = new ll(e, d.getName());
            f.h[e] = d
          }
          oc.get().sceneListMbs = null
        },
        readShapes: function(a) {
          var b = new Za;
          a = a.getShapes();
          for (var c = 0, d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject(),
              f = e.getPoints(),
              g = [],
              h = 0;
            for (f = Bd.readPoints(f); h < f.length;) {
              var m = f[h];
              ++h;
              g.push(new C(3.1 * m.x, 3.1 * m.y))
            }
            Bd.EnsureCorrectVertexDirection(g);
            h = new Lb;
            h.setAsArray(g, g.length);
            e = e.getId();
            b.h[e] = h
          }
          return b
        },
        readAtlases: function(a) {
          var b = new Za;
          a = a.getAtlases();
          for (var c = 0, d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject(),
              f = e.getId(),
              g = e.getName(),
              h = e.getAllScenes();
            e = e.getMembers();
            for (var m = [], l = 0, y = e.length(); l < y;) l++, m.push(e.readInt());
            g = new mo(f, g, h, m);
            b.h[f] = g
          }
          return b
        },
        readAutotileFormats: function(a) {
          var b = new Za;
          a = a.getAutotileFormats();
          for (var c = 0, d = a.length(); c < d;) {
            c++;
            for (var e = a.getNextObject(), f = e.getName(), g = e.getId(), h = e.getAcross(), m = e.getDown(), l = [], y = [], n = e.getCorners(), p = 0, k = n.length(); p < k;) {
              p++;
              var q = n.getNextObject(),
                u = q.getTopLeft();
              u = new la(u.getX(), u.getY());
              var v = q.getTopRight();
              v = new la(v.getX(), v.getY());
              var T = q.getBottomLeft();
              T = new la(T.getX(), T.getY());
              q = q.getBottomRight();
              y.push(new no(u, v, T, new la(q.getX(),
                q.getY())))
            }
            e = e.getFlags();
            n = 0;
            for (p = e.length(); n < p;) k = n++, l[k] = y[e.readInt()];
            f = new oo(f, g, h, m, l);
            b.h[g] = f
          }
          return b
        },
        readGroups: function(a) {
          var b = [];
          a = a.getGroups();
          for (var c = 0, d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject();
            b.push(new xh(e.getId(), e.getName()))
          }
          return b
        },
        readCollisionGroups: function(a) {
          var b = [];
          a = a.getCgroups();
          for (var c = 0, d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject();
            b.push(new kl(e.getGroup1(), e.getGroup2()))
          }
          return b
        },
        __class__: Bb
      };
      var xh = function(a, b) {
        this.ID = a;
        this.name = b
      };
      k["com.stencyl.models.GroupDef"] = xh;
      xh.__name__ = "com.stencyl.models.GroupDef";
      xh.prototype = {
        ID: null,
        name: null,
        __class__: xh
      };
      var Ia = function() {
        this.isPressed = !1;
        this.outerAlphaWhenReleased = this.outerAlphaWhenPressed = this.innerAlphaWhenReleased = this.innerAlphaWhenPressed = 1;
        this.outerImage = this.innerImage = null;
        this.hideWhenReleased = !1;
        this.joystickDistance = this.joystickDirection = this.joystickDefaultDirection = this.joystickType = 0;
        Z.call(this)
      };
      k["com.stencyl.models.Joystick"] = Ia;
      Ia.__name__ = "com.stencyl.models.Joystick";
      Ia.resetStatics = function() {
        Ia.joystickMap = null;
        Ia.fixedCenter = 0;
        Ia.showWherePressed = 1;
        Ia.viewOffsetX = Ia.viewOffsetY = 0;
        Ia.initialized = !1
      };
      Ia.addJoystick = function(a, b, c, d, e, f, g, h, m) {
        null == m && (m = !1);
        null == h && (h = 0);
        null == g && (g = 0);
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 0);
        null != Ia.joystickMap && Ia.joystickMap.h.hasOwnProperty(a) && Ia.removeJoystick(a);
        var l = Object.create(Ia.prototype);
        l.start();
        l.id = a;
        l.joystickTouchID = -1;
        l.joystickDistance = 0;
        l.joystickDirection = 0;
        l.joystickDefaultDirection = 0;
        l.joystickType =
          d;
        l.center = new la(b * p.SCALE, c * p.SCALE);
        Ia.joystickMap.h[a] = l;
        Ia.setJoystickImage(a, !0, "outer-joystick");
        Ia.setJoystickImage(a, !1, "inner-joystick");
        l.outerAlphaWhenPressed = 1;
        l.outerAlphaWhenReleased = 1;
        l.innerAlphaWhenPressed = 1;
        l.innerAlphaWhenReleased = 1;
        l.joystickType == Ia.showWherePressed && (l.joystickBounds = new ha(e * p.SCALE + Ia.viewOffsetX, f * p.SCALE + Ia.viewOffsetY, g * p.SCALE, h * p.SCALE));
        m && (l.hideWhenReleased = !0, l.outerImage.set_visible(!1), l.innerImage.set_visible(!1))
      };
      Ia.removeJoystick = function(a) {
        if (Ia.joystickMap.h.hasOwnProperty(a)) {
          var b =
            Ia.joystickMap.h[a],
            c = p.engine.root;
          Ia.joystickMap.remove(a);
          c.removeChild(b.outerImage);
          c.removeChild(b.innerImage)
        }
      };
      Ia.getJoystickDisDir = function(a, b) {
        null == b && (b = !0);
        var c = 0;
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], c = b ? a.joystickDistance : a.joystickDirection);
        return c
      };
      Ia.setJoystickCenter = function(a, b, c) {
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], a.center = new la(b * p.SCALE, c * p.SCALE), a.outerImage.set_x(a.center.x - .5 * a.outerImage.get_width()), a.outerImage.set_y(a.center.y -
          .5 * a.outerImage.get_height()), a.innerImage.set_x(a.center.x - .5 * a.innerImage.get_width()), a.innerImage.set_y(a.center.y - .5 * a.innerImage.get_height()))
      };
      Ia.getJoystickCenter = function(a, b) {
        null == b && (b = !0);
        var c = 0;
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], c = (b ? a.center.x : a.center.y) / p.SCALE);
        return c
      };
      Ia.setJoystickRadius = function(a, b, c) {
        null == b && (b = !0);
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], b && a.outerRadius != c * p.SCALE ? a.outerRadius = c * p.SCALE : a.innerRadius != c * p.SCALE &&
          (a.innerRadius = c * p.SCALE))
      };
      Ia.getJoystickRadius = function(a, b) {
        null == b && (b = !0);
        var c = 0;
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], c = (b ? a.innerRadius : a.outerRadius) / p.SCALE);
        return c
      };
      Ia.alwaysHideRJ = function(a) {
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], a.hideWhenReleased = !0, a.outerImage.set_visible(!1), a.innerImage.set_visible(!1))
      };
      Ia.setDefaultDirection = function(a, b) {
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], a.joystickDefaultDirection = b, a.joystickDirection =
          b)
      };
      Ia.isJoystickPressed = function(a) {
        return Ia.joystickMap.h.hasOwnProperty(a) ? Ia.joystickMap.h[a].isPressed : !1
      };
      Ia.setTouchRegionForRJ = function(a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], a.joystickType == Ia.showWherePressed && (a.joystickBounds = new ha(b * p.SCALE + Ia.viewOffsetX, c * p.SCALE + Ia.viewOffsetY, d * p.SCALE, e * p.SCALE)))
      };
      Ia.getTouchRegionPropertyForRJ = function(a, b) {
        return Ia.joystickMap.h.hasOwnProperty(a) && (a =
          Ia.joystickMap.h[a], a.joystickType == Ia.showWherePressed) ? 1 == b ? a.joystickBounds.x - Ia.viewOffsetX : 2 == b ? a.joystickBounds.y - Ia.viewOffsetY : 3 == b ? a.joystickBounds.width / p.SCALE : a.joystickBounds.height / p.SCALE : 0
      };
      Ia.setJoystickImage = function(a, b, c) {
        if (Ia.joystickMap.h.hasOwnProperty(a)) {
          a = Ia.joystickMap.h[a];
          var d = p.engine.root;
          c = 1 == p.SCALE ? Aa.getBitmapData("assets/data/" + c + ".png") : 1.5 == p.SCALE ? Aa.getBitmapData("assets/data/" + c + "@1.5x.png") : 2 == p.SCALE ? Aa.getBitmapData("assets/data/" + c + "@2x.png") : Aa.getBitmapData("assets/data/" +
            c + "@4x.png");
          b ? (null != a.outerImage && d.removeChild(a.outerImage), a.outerImage = new Ac(c), a.outerImage.set_x(a.center.x - .5 * a.outerImage.get_width()), a.outerImage.set_y(a.center.y - .5 * a.outerImage.get_height()), d.addChild(a.outerImage), a.outerRadius = .5 * a.outerImage.get_width()) : (null != a.innerImage && d.removeChild(a.innerImage), a.innerImage = new Ac(c), a.innerImage.set_x(a.center.x - .5 * a.innerImage.get_width()), a.innerImage.set_y(a.center.y - .5 * a.innerImage.get_height()), d.addChild(a.innerImage), a.innerRadius =
            a.outerRadius - .5 * a.innerImage.get_width())
        }
      };
      Ia.setJoystickAlpha = function(a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = 1);
        null == b && (b = !0);
        Ia.joystickMap.h.hasOwnProperty(a) && (a = Ia.joystickMap.h[a], b ? d ? (a.outerAlphaWhenReleased = c, a.outerImage.set_alpha(c)) : a.outerAlphaWhenPressed = c : d ? (a.innerAlphaWhenReleased = c, a.innerImage.set_alpha(c)) : a.innerAlphaWhenPressed = c)
      };
      Ia.__super__ = Z;
      Ia.prototype = t(Z.prototype, {
        center: null,
        outerRadius: null,
        innerRadius: null,
        joystickBounds: null,
        joystickTouchID: null,
        id: null,
        joystickDistance: null,
        joystickDirection: null,
        joystickDefaultDirection: null,
        joystickType: null,
        hideWhenReleased: null,
        outerImage: null,
        innerImage: null,
        outerAlphaWhenReleased: null,
        outerAlphaWhenPressed: null,
        innerAlphaWhenReleased: null,
        innerAlphaWhenPressed: null,
        isPressed: null,
        start: function() {
          Ia.initialized || (Ia.initialized = !0, Ia.joystickMap = new Za, Ia.viewOffsetX = p.screenOffsetX, Ia.viewOffsetY = p.screenOffsetY);
          xe.get_supportsTouchEvents() ? (p.stage.addEventListener("touchBegin", r(this, this.onTouchBegin)), p.stage.addEventListener("touchMove",
            r(this, this.onTouchMove)), p.stage.addEventListener("touchEnd", r(this, this.onTouchEnd)), xe.inputMode = 2) : (p.stage.addEventListener("mouseDown", r(this, this.onMouseDown)), p.stage.addEventListener("mouseMove", r(this, this.onMouseMove)), p.stage.addEventListener("mouseUp", r(this, this.onMouseUp)))
        },
        stop: function() {
          xe.get_supportsTouchEvents() ? (p.stage.removeEventListener("touchBegin", r(this, this.onTouchBegin)), p.stage.removeEventListener("touchMove", r(this, this.onTouchMove)), p.stage.removeEventListener("touchEnd",
            r(this, this.onTouchEnd))) : (p.stage.removeEventListener("mouseDown", r(this, this.onMouseDown)), p.stage.removeEventListener("mouseMove", r(this, this.onMouseMove)), p.stage.removeEventListener("mouseUp", r(this, this.onMouseUp)));
          Ia.joystickMap = null
        },
        onTouchBegin: function(a) {
          this.onBegin(a.stageX, a.stageY, a.touchPointID)
        },
        onTouchMove: function(a) {
          this.onMove(a.stageX, a.stageY, a.touchPointID)
        },
        onTouchEnd: function(a) {
          this.onEnd(a.stageX, a.stageY, a.touchPointID)
        },
        onMouseDown: function(a) {
          this.onBegin(a.stageX,
            a.stageY, 0)
        },
        onMouseMove: function(a) {
          this.onMove(a.stageX, a.stageY, 0)
        },
        onMouseUp: function(a) {
          this.onEnd(a.stageX, a.stageY, 0)
        },
        onBegin: function(a, b, c) {
          if (-1 == this.joystickTouchID)
            if (a /= p.screenScaleX, b /= p.screenScaleY, this.outerImage.set_alpha(this.outerAlphaWhenPressed), this.innerImage.set_alpha(this.innerAlphaWhenPressed), this.joystickType == Ia.fixedCenter) {
              var d = Math.sqrt(Math.pow(this.center.x + Ia.viewOffsetX - a, 2) + Math.pow(this.center.y + Ia.viewOffsetY - b, 2)),
                e = Math.atan2(this.center.y + Ia.viewOffsetY -
                  b, this.center.x + Ia.viewOffsetX - a);
              d > this.outerRadius || (d > this.outerRadius - this.innerRadius ? (d = this.outerRadius - this.innerRadius, this.innerImage.set_x(this.center.x - Math.cos(e) * (this.outerRadius - this.innerRadius) - .5 * this.innerImage.get_width()), this.innerImage.set_y(this.center.y - Math.sin(e) * (this.outerRadius - this.innerRadius) - .5 * this.innerImage.get_height())) : (this.innerImage.set_x(a - Ia.viewOffsetX - .5 * this.innerImage.get_width()), this.innerImage.set_y(b - Ia.viewOffsetY - .5 * this.innerImage.get_height())),
                this.isPressed = !0, this.joystickTouchID = c, this.joystickDistance = d / (this.outerRadius - this.innerRadius), this.joystickDirection = 180 * e / 3.1415926535 + 180)
            } else this.joystickType != Ia.showWherePressed || a < this.joystickBounds.x || a > this.joystickBounds.x + this.joystickBounds.width || b < this.joystickBounds.y || b > this.joystickBounds.y + this.joystickBounds.height || (this.isPressed = !0, this.center.x = a - Ia.viewOffsetX, this.center.y = b - Ia.viewOffsetY, this.outerImage.set_x(this.center.x - .5 * this.outerImage.get_width()), this.outerImage.set_y(this.center.y -
              .5 * this.outerImage.get_height()), this.innerImage.set_x(this.center.x - .5 * this.innerImage.get_width()), this.innerImage.set_y(this.center.y - .5 * this.innerImage.get_height()), this.hideWhenReleased && (this.outerImage.set_visible(!0), this.innerImage.set_visible(!0)), this.joystickTouchID = c)
        },
        onMove: function(a, b, c) {
          if (c == this.joystickTouchID) {
            a /= p.screenScaleX;
            b /= p.screenScaleY;
            c = Math.sqrt(Math.pow(this.center.x + Ia.viewOffsetX - a, 2) + Math.pow(this.center.y + Ia.viewOffsetY - b, 2));
            var d = Math.atan2(this.center.y +
              Ia.viewOffsetY - b, this.center.x + Ia.viewOffsetX - a);
            c > this.outerRadius - this.innerRadius ? (c = this.outerRadius - this.innerRadius, this.innerImage.set_x(this.center.x - Math.cos(d) * (this.outerRadius - this.innerRadius) - .5 * this.innerImage.get_width()), this.innerImage.set_y(this.center.y - Math.sin(d) * (this.outerRadius - this.innerRadius) - .5 * this.innerImage.get_height())) : (this.innerImage.set_x(a - Ia.viewOffsetX - .5 * this.innerImage.get_width()), this.innerImage.set_y(b - Ia.viewOffsetY - .5 * this.innerImage.get_height()));
            this.joystickDistance = c / (this.outerRadius - this.innerRadius);
            this.joystickDirection = 180 * d / 3.1415926535 + 180
          }
        },
        onEnd: function(a, b, c) {
          c == this.joystickTouchID && (this.joystickTouchID = -1, this.isPressed = !1, this.outerImage.set_alpha(this.outerAlphaWhenReleased), this.innerImage.set_alpha(this.innerAlphaWhenReleased), a = this.outerImage.get_x(), this.center.x = a + this.outerRadius, a = this.outerImage.get_y(), this.center.y = a + this.outerRadius, this.innerImage.set_x(this.center.x - .5 * this.innerImage.get_width()), this.innerImage.set_y(this.center.y -
            .5 * this.innerImage.get_height()), this.hideWhenReleased && (this.outerImage.set_visible(!1), this.innerImage.set_visible(!1)), this.joystickDistance = 0, this.joystickDirection = this.joystickDefaultDirection)
        },
        __class__: Ia
      });
      var Qn = {
          _new: function(a) {
            return a
          },
          fromInt: function(a) {
            return Qn._new(a)
          },
          fromString: function(a) {
            switch (a) {
              case "MINIMAL_PHYSICS":
                return 2;
              case "NORMAL_PHYSICS":
                return 0;
              case "SIMPLE_PHYSICS":
                return 1;
              default:
                return 0
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "NORMAL_PHYSICS";
              case 1:
                return "SIMPLE_PHYSICS";
              case 2:
                return "MINIMAL_PHYSICS";
              default:
                return "NORMAL_PHYSICS"
            }
          }
        },
        vd = function(a, b, c, d, e) {
          wb.call(this, a, -1, -2, b, c, -1, p.NO_PHYSICS ? e.width : 1, p.NO_PHYSICS ? e.height : 1, null, null, null, null, !1, !1, !1, !1, p.NO_PHYSICS ? null : d[0], p.NO_PHYSICS);
          this.isRegion = this.alwaysSimulate = !0;
          this.solid = this.isTerrainRegion = !1;
          this.set_name("Region");
          this.simpleBounds = e;
          this.copy = d[0];
          this.containedActors = new Za;
          this.whenActorEntered = new Mc;
          this.whenActorExited = new Mc;
          this.justAdded = [];
          this.justRemoved = [];
          p.NO_PHYSICS || (this.body.setSleepingAllowed(!0),
            this.body.setAwake(!1), this.body.setIgnoreGravity(!0));
          a = 0;
          var f = 0;
          if (p.NO_PHYSICS) {
            var g = e.width;
            e = e.height;
            this.cacheWidth = this.originalWidth = this.regionWidth = Math.round(Math.abs(a - g));
            this.cacheHeight = this.originalHeight = this.regionHeight = Math.round(Math.abs(f - e));
            this.currOffset.x = -(this.cacheWidth / 2);
            this.currOffset.y = -(this.cacheHeight / 2);
            this.resetReal(b, c)
          } else if (d[0] instanceof Lb) {
            this.isCircle = !1;
            b = new af;
            b.setIdentity();
            c = new wc;
            K.__cast(d[0], Lb).computeAABB(c, b);
            a = c.lowerBound.x;
            g = c.upperBound.x;
            f = c.lowerBound.y;
            e = c.upperBound.y;
            for (var h = 0, m = d.length; h < m;) {
              var l = h++,
                y = new If;
              y.isSensor = !0;
              y.userData = this;
              y.shape = d[l];
              y.friction = 1;
              y.density = .1;
              y.restitution = 0;
              y.groupID = -1E3;
              this.body.createFixture(y);
              K.__cast(d[l], Lb).computeAABB(c, b);
              a = Math.min(a, c.lowerBound.x);
              g = Math.max(g, c.upperBound.x);
              f = Math.min(f, c.lowerBound.y);
              e = Math.max(e, c.upperBound.y)
            }
            this.cacheWidth = this.originalWidth = this.regionWidth = Math.round(p.toPixelUnits(Math.abs(a - g)));
            this.cacheHeight = this.originalHeight = this.regionHeight =
              Math.round(p.toPixelUnits(Math.abs(f - e)))
          } else d[0] instanceof Qc && (this.isCircle = !0, this.cacheWidth = this.originalWidth = this.regionWidth = p.toPixelUnits(2 * K.__cast(d[0], Qc).m_radius), this.cacheHeight = this.originalHeight = this.regionHeight = p.toPixelUnits(2 * K.__cast(d[0], Qc).m_radius))
        };
      k["com.stencyl.models.Region"] = vd;
      vd.__name__ = "com.stencyl.models.Region";
      vd.__super__ = wb;
      vd.prototype = t(wb.prototype, {
        isCircle: null,
        containedActors: null,
        copy: null,
        simpleBounds: null,
        regionWidth: null,
        regionHeight: null,
        originalWidth: null,
        originalHeight: null,
        whenActorEntered: null,
        whenActorExited: null,
        justAdded: null,
        justRemoved: null,
        containsActor: function(a) {
          return null != a ? this.containedActors.h.hasOwnProperty(a.ID) : !1
        },
        getContainedActors: function() {
          return this.containedActors
        },
        addActor: function(a) {
          if (null != a && -1 != a.ID && !this.containedActors.h.hasOwnProperty(a.ID)) {
            this.containedActors.h[a.ID] = a.ID;
            var b = R.indexOf(this.justRemoved, a); - 1 == b ? this.justAdded.push(a) : this.justRemoved.splice(b, 1)
          }
        },
        removeActor: function(a) {
          null != a && -1 != a.ID &&
            -1 == R.indexOf(this.justRemoved, a) && (this.containedActors.remove(a.ID), this.justRemoved.push(a))
        },
        follow: function(a) {
          var b = a.realY + a.cacheHeight / 2;
          this.setX(a.realX + a.cacheWidth / 2);
          this.setY(b)
        },
        resetSize: function() {
          this.setRegionSize(this.originalWidth, this.originalHeight)
        },
        setRegionDiameter: function(a) {
          this.setRegionSize(a, a)
        },
        setRegionSize: function(a, b) {
          var c = this.regionWidth,
            d = this.regionHeight;
          a = p.toPhysicalUnits(a);
          b = p.toPhysicalUnits(b);
          if (this.isCircle) {
            var e = new Qc;
            e.m_radius = a / 2
          } else e = new Lb,
            e.setAsBox(a / 2, b / 2);
          var f = new If;
          f.isSensor = !0;
          f.userData = this;
          f.shape = e;
          f.groupID = -1E3;
          if (null != this.body && null != this.body.getFixtureList()) {
            for (; 0 < this.body.m_fixtureCount;) this.body.DestroyFixture(this.body.getFixtureList());
            this.body.createFixture(f);
            this.cacheWidth = this.regionWidth = p.toPixelUnits(a);
            this.cacheHeight = this.regionHeight = p.toPixelUnits(b)
          }
          a = this.regionWidth - c;
          d = this.regionHeight - d;
          this.setLocation(this.getX() + a / 2, this.getY() + d / 2)
        },
        setLocation: function(a, b) {
          this.setX(a + this.regionWidth /
            2);
          this.setY(b + this.regionHeight / 2)
        },
        getWidth: function() {
          return this.regionWidth
        },
        getHeight: function() {
          return this.regionHeight
        },
        isMouseOver: function() {
          var a = (N.mouseX + p.cameraX) / p.SCALE,
            b = (N.mouseY + p.cameraY) / p.SCALE,
            c = this.getX(),
            d = this.getY();
          return a >= c && b >= d && a < c + this.regionWidth ? b < d + this.regionHeight : !1
        },
        innerUpdate: function(a, b) {
          this.clearCollisionInfoList();
          if (p.NO_PHYSICS)
            for (a = this.containedActors.iterator(); a.hasNext();) b = a.next(), b = p.engine.getActor(b), null == this.HITBOX || null == b || this.HITBOX.collide(b.HITBOX) ||
              this.removeActor(b);
          for (; null != this.justAdded && 0 < this.justAdded.length;)
            if (b = K.__cast(this.justAdded.pop(), wb), 0 < this.whenActorEntered.length)
              for (this.whenActorEntered._dispatchIndex = 0; this.whenActorEntered._dispatchIndex < this.whenActorEntered.length;) {
                try {
                  this.whenActorEntered.listeners[this.whenActorEntered._dispatchIndex](b)
                } catch (c) {
                  if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
                }++this.whenActorEntered._dispatchIndex
              }
          for (; null != this.justRemoved && 0 < this.justRemoved.length;)
            if (b =
              K.__cast(this.justRemoved.pop(), wb), 0 < this.whenActorExited.length)
              for (this.whenActorExited._dispatchIndex = 0; this.whenActorExited._dispatchIndex < this.whenActorExited.length;) {
                try {
                  this.whenActorExited.listeners[this.whenActorExited._dispatchIndex](b)
                } catch (c) {
                  if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
                }++this.whenActorExited._dispatchIndex
              }
          if (null != this.whenMousedOver && 0 < this.whenMousedOver.length)
            if (this.isMouseOver()) {
              if (0 >= this.mouseState) {
                if (this.mouseState = 1, 0 < this.whenMousedOver.length)
                  for (this.whenMousedOver._dispatchIndex =
                    0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                    try {
                      this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                    } catch (c) {
                      if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
                    }++this.whenMousedOver._dispatchIndex
                  }
              } else this.mouseState = 2;
              if (N.mousePressed) {
                if (this.mouseState = 3, 0 < this.whenMousedOver.length)
                  for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                    try {
                      this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                    } catch (c) {
                      if (pa.lastError =
                        c, "string" != typeof F.caught(c).unwrap()) throw c;
                    }++this.whenMousedOver._dispatchIndex
                  }
              } else if (N.mouseDown && (this.mouseState = 4, 0 < this.whenMousedOver.length))
                for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                  try {
                    this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                  } catch (c) {
                    if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
                  }++this.whenMousedOver._dispatchIndex
                }
              if (N.mouseReleased && (this.mouseState = 5, 0 <
                  this.whenMousedOver.length))
                for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                  try {
                    this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                  } catch (c) {
                    if (pa.lastError = c, "string" != typeof F.caught(c).unwrap()) throw c;
                  }++this.whenMousedOver._dispatchIndex
                }
            } else if (0 < this.mouseState) {
            if (this.mouseState = -1, 0 < this.whenMousedOver.length)
              for (this.whenMousedOver._dispatchIndex = 0; this.whenMousedOver._dispatchIndex < this.whenMousedOver.length;) {
                try {
                  this.whenMousedOver.listeners[this.whenMousedOver._dispatchIndex](this.mouseState)
                } catch (c) {
                  if (pa.lastError =
                    c, "string" != typeof F.caught(c).unwrap()) throw c;
                }++this.whenMousedOver._dispatchIndex
              }
          } else - 1 == this.mouseState && (this.mouseState = 0)
        },
        __class__: vd
      });
      var ll = function(a, b) {
        this.currW = this.currH = 0;
        this.ID = a;
        this.name = b
      };
      k["com.stencyl.models.Scene"] = ll;
      ll.__name__ = "com.stencyl.models.Scene";
      ll.prototype = {
        ID: null,
        name: null,
        sceneWidth: null,
        sceneHeight: null,
        tileWidth: null,
        tileHeight: null,
        gravityX: null,
        gravityY: null,
        eventID: null,
        colorBackground: null,
        layers: null,
        actors: null,
        behaviorValues: null,
        atlases: null,
        retainsAtlases: null,
        wireframes: null,
        joints: null,
        regions: null,
        terrainRegions: null,
        animatedTiles: null,
        load: function() {
          var a = new Rg(lf.get(), !1, !0);
          a.readData(Cb.toBytes(Aa.getBytes("assets/data/scene-" + this.ID + ".mbs")));
          a = a.getRoot();
          var b = a.getDepth();
          this.sceneWidth = a.getWidth();
          this.sceneHeight = a.getHeight();
          this.tileWidth = a.getTileWidth();
          this.tileHeight = a.getTileHeight();
          this.gravityX = a.getGravityX();
          this.gravityY = a.getGravityY();
          this.animatedTiles = [];
          this.actors = this.readActors(a.getActorInstances());
          this.behaviorValues = we.readBehaviors(a.getSnippets());
          var c = a.getEventSnippetID();
          if (-1 < c) {
            var d = this.behaviorValues,
              e = new Kj(c, new ua);
            d.h["" + c] = e
          }
          this.joints = this.readJoints(a.getJoints());
          this.regions = this.readRegions(a.getRegions());
          this.terrainRegions = this.readTerrainRegions(a.getTerrainRegions());
          this.wireframes = this.readWireframes(a.getTerrain());
          c = Aa.getBytes("assets/data/scene-" + this.ID + ".scn");
          c.__endian = 0;
          b = this.readRawLayers(c, b);
          this.layers = this.readAllLayers(a.getLayers(), b);
          this.atlases =
            (this.retainsAtlases = a.getRetainAtlases()) ? [] : this.readAtlases(a.getAtlasMembers())
        },
        unload: function() {
          this.animatedTiles = this.terrainRegions = this.regions = this.joints = this.wireframes = this.layers = this.behaviorValues = this.actors = this.colorBackground = null
        },
        readRegions: function(a) {
          for (var b = new Za, c = 0, d = a.length(); c < d;) {
            c++;
            var e = this.readRegion(a.getNextObject());
            b.h[e.ID] = e
          }
          return b
        },
        readRegion: function(a) {
          var b = a.getId(),
            c = a.getName(),
            d = a.getX(),
            e = a.getY();
          this.shapeList = [];
          var f = a.getShape();
          if (f instanceof xd) {
            a = this.currW = f.getWidth();
            var g = this.currH = f.getHeight();
            f = f.getPoints();
            p.NO_PHYSICS ? b = new Bi(this.shapeList, b, c, d, e, 0, new ha(0, 0, a, g)) : (a = Bd.readPoints(f).slice(0), (new Hc(a)).decompose(r(this, this.addPolygonRegion)), b = new Bi(this.shapeList, b, c, d, e))
          } else g = f.getRadius(), p.NO_PHYSICS ? b = new Bi(this.shapeList, b, c, d, e, 0, new ha(0, 0, 2 * g, 2 * g)) : (a = new Qc, a.m_radius = p.toPhysicalUnits(g), this.shapeList[0] = a, b = new Bi(this.shapeList, b, c, d, e));
          return b
        },
        shapeList: null,
        currW: null,
        currH: null,
        addPolygonRegion: function(a) {
          a =
            K.__cast(Bd.createPolygon("MbsPolyRegion", a.points, this.currW, this.currH), Lb);
          this.shapeList.push(a)
        },
        addPolygonTerrain: function(a) {
          a = K.__cast(Bd.createPolygon("MbsPolyRegion", a.points, this.currW, this.currH), Lb);
          this.shapeList.push(a)
        },
        readTerrainRegions: function(a) {
          for (var b = new Za, c = 0, d = a.length(); c < d;) {
            c++;
            var e = this.readTerrainRegion(a.getNextObject());
            b.h[e.ID] = e
          }
          return b
        },
        readTerrainRegion: function(a) {
          var b = a.getId(),
            c = a.getName(),
            d = a.getGroupID(),
            e = p.toPhysicalUnits(a.getX()),
            f = p.toPhysicalUnits(a.getY()),
            g = a.getColor();
          this.shapeList = [];
          a = a.getShape();
          if (a instanceof xd) this.currW = a.getWidth(), this.currH = a.getHeight(), a = Bd.readPoints(a.getPoints()).slice(0), (new Hc(a)).decompose(r(this, this.addPolygonTerrain));
          else {
            var h = a.getRadius();
            a = new Qc;
            a.m_radius = p.toPhysicalUnits(h);
            this.shapeList[0] = a
          }
          return new po(this.shapeList, b, c, e, f, d, g)
        },
        readJoints: function(a) {
          for (var b = new Za, c = 0, d = a.length(); c < d;) {
            c++;
            var e = this.readJoint(a.readObject());
            b.h[e.ID] = e
          }
          return b
        },
        readJoint: function(a) {
          var b = a.getId(),
            c = a.getActor1(),
            d = a.getActor2(),
            e = a.getCollide();
          if (a instanceof Id) {
            var f = new Nh;
            f.ID = b;
            f.actor1 = c;
            f.actor2 = d;
            f.localAnchorA = null;
            f.localAnchorB = null;
            f.collideConnected = e;
            f.dampingRatio = a.getDamping();
            f.frequencyHz = a.getFrequency();
            return f
          }
          return a instanceof jc ? (f = new Oh, f.ID = b, f.actor1 = c, f.actor2 = d, f.localAnchorA = null, f.localAnchorB = null, f.collideConnected = e, f.enableLimit = a.getLimit(), f.enableMotor = a.getMotor(), f.lowerAngle = a.getLower(), f.upperAngle = a.getUpper(), f.maxMotorTorque = a.getTorque(),
            f.motorSpeed = a.getSpeed(), f) : a instanceof Tb ? (f = new Ph, f.ID = b, f.actor1 = c, f.actor2 = d, f.localAnchorA = null, f.localAnchorB = null, f.collideConnected = e, f.enableLimit = a.getLimit(), f.enableMotor = a.getMotor(), f.lowerTranslation = a.getLower(), f.upperTranslation = a.getUpper(), f.maxMotorForce = a.getForce(), f.motorSpeed = a.getSpeed(), f.localAxisA.x = a.getX(), f.localAxisA.y = a.getY(), f) : null
        },
        readAllLayers: function(a, b) {
          var c = new Be(16);
          c.reuseIterator = !0;
          for (var d = 0, e = a.length(); d < e;) {
            d++;
            var f = a.readObject();
            if (f instanceof je || f instanceof Gd) this.colorBackground = this.readColorBackground(f);
            else {
              var g = f,
                h = g.getId(),
                m = g.getName(),
                l = g.getOrder(),
                y = g.getScrollFactorX(),
                n = g.getScrollFactorY(),
                p = g.getOpacity() / 100;
              g = hl.get(g.getBlendmode());
              if (f instanceof ke) {
                var k = b.mH;
                f = k.mHash[73856093 * h & k.mMask];
                if (-1 == f) f = -2147483648;
                else if (k = k.mData, k[f] == h) f = k[f + 1];
                else {
                  var q = -2147483648;
                  for (f = k[f + 2]; - 1 != f;) {
                    if (k[f] == h) {
                      q = k[f + 1];
                      break
                    }
                    f = k[f + 2]
                  }
                  f = q
                }
                f = -2147483648 == f ? null : b.mVals[f];
                null == f && (f = new Yd(h, this, Math.floor(this.sceneWidth /
                  this.tileWidth) | 0, Math.floor(this.sceneHeight / this.tileHeight) | 0));
                f.set_name(m);
                h = new Lc(h, m, l, y, n, p, g, f);
                c.set(h.ID, h)
              } else f instanceof Hd && (k = f, f = k.getResourceID(), k = k.getCustomScroll(), h = new ae(h, m, l, y, n, p, g, f, k), c.set(h.ID, h))
            }
          }
          return c
        },
        readColorBackground: function(a) {
          if (a instanceof je) {
            var b = a.getColor();
            return new Kf(b)
          }
          return a instanceof Gd ? (b = a.getColor1(), a = a.getColor2(), new xi(b, a)) : null
        },
        readRawLayers: function(a, b) {
          var c = new Be(16);
          c.reuseIterator = !0;
          var d = [];
          if (null != a) {
            for (var e =
                0, f = b; e < f;) {
              var g = e++;
              d[g] = a.readInt()
            }
            e = 0;
            for (f = b; e < f;) g = e++, b = this.readRawLayer(a, d[g]), c.set(b.layerID, b)
          }
          return c
        },
        readRawLayer: function(a, b) {
          var c = Math.floor(this.sceneWidth / this.tileWidth) | 0,
            d = Math.floor(this.sceneHeight / this.tileHeight) | 0,
            e = a.readInt();
          b -= 4;
          a.readInt();
          b -= 4;
          d = new Yd(e, this, c, d);
          var f = e = 0;
          b = b / 8 | 0;
          var g = new ml(this.sceneWidth, this.sceneHeight, this.tileWidth, this.tileHeight);
          d.grid = g;
          for (var h = 0; h < b;) {
            h++;
            var m = a.readShort(),
              l = a.readShort(),
              y = a.readShort(),
              n = a.readShort(),
              p = null; -
            1 != l && (p = oc.get().resources.get(l));
            0 > m && (m = Math.abs(m + 1) | 0);
            for (l = 0; l < n;) {
              l++;
              if (null == p || 0 > y) d.setTileAt(e, f, null, !1);
              else {
                var k = p.tiles[y];
                if (null == k) d.setTileAt(e, f, null, !1);
                else if (d.setTileAt(e, f, k, !1), d.autotileData[e][f] = m, 0 <= k.collisionID && g.setTile(f, e, !0), 1 < k.durations.length) {
                  for (var q = !1, u = 0, v = this.animatedTiles; u < v.length && !(q = v[u], ++u, q = q == k););
                  q || this.animatedTiles.push(k)
                }
              }++f;
              f >= c && (f = 0, ++e)
            }
          }
          return d
        },
        readAtlases: function(a) {
          for (var b = [], c = 0, d = a.length(); c < d;) {
            c++;
            var e = a.readInt();
            Bb.get().atlases.h[e].allScenes || b.push(e)
          }
          return b
        },
        readWireframes: function(a) {
          if (p.NO_PHYSICS) return [];
          for (var b = [], c = 0, d = a.length(); c < d;) {
            c++;
            var e = a.getNextObject(),
              f = e.getPosition();
            f = new la(f.getX(), f.getY());
            e = Bd.readPoints(e.getPoints()).slice(0);
            e = Bd.createPolygon("MbsWireframe", e);
            b.push(new qo(f.x, f.y, e.h[1], e.h[2], e.h[0], null))
          }
          return b
        },
        readActors: function(a) {
          for (var b = new Za, c = 0, d = a.length(); c < d;) {
            c++;
            var e = this.readActorInstance(a.getNextObject());
            null != e && (b.h[e.elementID] = e)
          }
          return b
        },
        readActorInstance: function(a) {
          var b = a.getAid(),
            c = a.getX(),
            d = a.getY(),
            e = a.getScaleX(),
            f = a.getScaleY(),
            g = a.getZ(),
            h = a.getOrderInLayer(),
            m = a.getAngle() | 0,
            l = a.getGroupID(),
            y = a.getId(),
            n = a.getCustomized(),
            p = null;
          n && (p = we.readBehaviors(a.getSnippets()));
          if (0 == e || 0 == f) f = e = 1;
          n || (p = null);
          if (null == oc.get().resources.get(y)) return null;
          a = new al(b, c, d, e, f, g, h, m, l, y, p, n);
          null != a.actorType && (a.groupID = a.actorType.groupID);
          return a
        },
        getID: function() {
          return this.ID
        },
        __class__: ll
      };
      var Qh = function(a, b, c, d, e, f, g, h) {
        pd.call(this,
          a, b, -1);
        this.streaming = c;
        this.looping = d;
        this.panning = e;
        this.volume = f;
        this.ext = g;
        this.atlasID = h;
        this.ext = "ogg";
        a = Bb.get().atlases.h[h];
        null != a && a.active && this.loadGraphics()
      };
      k["com.stencyl.models.Sound"] = Qh;
      Qh.__name__ = "com.stencyl.models.Sound";
      Qh.__super__ = pd;
      Qh.prototype = t(pd.prototype, {
        streaming: null,
        looping: null,
        panning: null,
        volume: null,
        ext: null,
        src: null,
        loadGraphics: function() {
          this.src = Aa.getSound("assets/" + (this.streaming ? "music" : "sfx") + "/sound-" + this.ID + "." + this.ext, !1)
        },
        unloadGraphics: function() {
          this.streaming ||
            (null != this.src && (this.stopInstances(), this.src.close()), this.src = null)
        },
        play: function(a, b) {
          null == b && (b = 0);
          this.streaming && null == this.src && (this.src = this.getStreamingSource());
          return null == this.src ? null : this.src.play(b)
        },
        loop: function(a, b) {
          null == b && (b = 0);
          this.streaming && null == this.src && (this.src = this.getStreamingSource());
          return null == this.src ? null : this.src.play(b, 1E8)
        },
        getStreamingSource: function() {
          return Aa.getSound("assets/music/sound-" + this.ID + "." + this.ext, !1)
        },
        stopInstances: function() {
          for (var a =
              0; 32 > a;) {
            var b = a++;
            b = p.engine.channels[b];
            b.currentSource == this.src && b.stopSound()
          }
        },
        __class__: Qh
      });
      var Yb = function(a, b) {
        this.paused = !1;
        this.currentClip = this.currentSound = null;
        this.looping = !1;
        this.volume = 1;
        this.position = this.panning = 0;
        this.channelNum = b;
        this.engine = a;
        this.transform = new mf;
        this.tweenVolume = new he;
        this.tweenVolume.doOnUpdate(r(this, this.tweenUpdated))
      };
      k["com.stencyl.models.SoundChannel"] = Yb;
      Yb.__name__ = "com.stencyl.models.SoundChannel";
      Yb.resetStatics = function() {
        Yb.muted = !1;
        Yb.masterVolume =
          1
      };
      Yb.prototype = {
        currentSource: null,
        currentSound: null,
        currentClip: null,
        volume: null,
        panning: null,
        channelNum: null,
        looping: null,
        paused: null,
        position: null,
        engine: null,
        transform: null,
        tweenVolume: null,
        playSound: function(a, b) {
          null == b && (b = 0);
          null != this.currentSound && (this.currentSound.stop(), this.paused = !1);
          if (null != a) {
            a.volume = this.volume * Yb.masterVolume;
            this.currentClip = a;
            this.currentSound = a.play(this.channelNum, b);
            if (null == this.currentSound) return this.currentClip = null;
            this.setVolume(this.volume);
            this.setPanning(this.panning);
            this.currentSound.addEventListener("soundComplete", r(this, this.stopped))
          }
          null != a && (this.currentSource = a.src);
          this.looping = !1;
          return this.currentSound
        },
        loopSound: function(a, b) {
          null == b && (b = 0);
          null != this.currentSound && this.currentSound.stop();
          if (null != a) {
            a.volume = this.volume * Yb.masterVolume;
            this.currentClip = a;
            this.currentSound = a.play(this.channelNum, b);
            if (null == this.currentSound) return this.currentClip = null;
            this.setVolume(this.volume);
            this.setPanning(this.panning);
            this.currentSound.addEventListener("soundComplete",
              r(this, this.looped))
          }
          null != a && (this.currentSource = a.src);
          this.looping = !0;
          return this.currentSound
        },
        setPause: function(a) {
          null != this.currentSound && (a ? (this.currentSound.removeEventListener("soundComplete", r(this, this.looped)), this.position = this.currentSound.get_position(), this.currentSound.stop(), this.paused = !0) : null != this.currentSource && this.paused && (this.currentSound = this.currentClip.play(this.channelNum, this.position), this.currentSound.set_soundTransform(this.transform), this.currentSound.addEventListener("soundComplete",
            r(this, this.stopped)), this.looping && this.currentSound.addEventListener("soundComplete", r(this, this.looped)), this.paused = !1))
        },
        looped: function(a) {
          null != this.currentSound && this.currentSound.removeEventListener("soundComplete", r(this, this.looped));
          this.loopSound(this.currentClip)
        },
        stopped: function(a) {
          null != this.currentSound && this.currentSound.removeEventListener("soundComplete", r(this, this.stopped));
          p.engine.soundFinished(this.channelNum)
        },
        stopSound: function() {
          null != this.currentSound && (this.currentSound.stop(),
            this.position = 0, this.currentSound = this.currentSource = null, this.paused = !1)
        },
        tweenUpdated: function() {
          this.setVolume(this.tweenVolume.value)
        },
        fadeInSound: function(a) {
          null != this.currentSound && this.tweenVolume.tween(this.transform.volume, 1, qa.linear, 1E3 * a | 0)
        },
        fadeOutSound: function(a) {
          null != this.currentSound && this.tweenVolume.tween(this.transform.volume, 0, qa.linear, 1E3 * a | 0)
        },
        fadeSound: function(a, b) {
          null != this.currentSound && this.tweenVolume.tween(this.transform.volume, b, qa.linear, 1E3 * a | 0)
        },
        setVolume: function(a) {
          this.volume =
            a;
          null != this.currentSound && (this.transform.volume = a * Yb.masterVolume, this.currentSound.set_soundTransform(this.transform))
        },
        setPanning: function(a) {
          this.panning = a;
          null != this.currentSound && (this.transform.pan = a, this.currentSound.set_soundTransform(this.transform))
        },
        __class__: Yb
      };
      var Pg = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        wb.call(this, a, -1, e, b, c, -1, 1, 1, null, null, null, null, !1, !0, !1, !1, d[0]);
        0 == f && (c = b = a = 0, null == c && (c = 0), null == b && (b = 0), null == a && (a = 0), f = a << 16 | b << 8 | c);
        this.fillColor = f;
        this.alwaysSimulate = !0;
        this.isRegion = !1;
        this.isTerrainRegion = !0;
        this.copy = d[0];
        this.body.setSleepingAllowed(!0);
        this.body.setAwake(!1);
        this.body.setIgnoreGravity(!0);
        if (d[0] instanceof Lb) {
          this.isCircle = !1;
          var g = new af;
          g.setIdentity();
          var h = new wc;
          K.__cast(d[0], Lb).computeAABB(h, g);
          a = h.lowerBound.x;
          b = h.upperBound.x;
          c = h.lowerBound.y;
          f = h.upperBound.y;
          for (var m = 0, l = d.length; m < l;) {
            var y = m++,
              n = new If;
            n.isSensor = !1;
            n.userData = this;
            n.shape = d[y];
            n.friction = 1;
            n.density = .1;
            n.restitution = 0;
            n.groupID = e;
            this.body.createFixture(n);
            K.__cast(d[y], Lb).computeAABB(h, g);
            a = Math.min(a, h.lowerBound.x);
            b = Math.max(b, h.upperBound.x);
            c = Math.min(c, h.lowerBound.y);
            f = Math.max(f, h.upperBound.y)
          }
          this.originalWidth = this.regionWidth = Math.round(p.toPixelUnits(Math.abs(a - b)));
          this.originalHeight = this.regionHeight = Math.round(p.toPixelUnits(Math.abs(c - f)))
        } else d[0] instanceof Qc && (this.isCircle = !0, this.originalWidth = this.regionWidth = p.toPixelUnits(2 * K.__cast(d[0], Qc).m_radius), this.originalHeight = this.regionHeight = p.toPixelUnits(2 * K.__cast(d[0],
          Qc).m_radius))
      };
      k["com.stencyl.models.Terrain"] = Pg;
      Pg.__name__ = "com.stencyl.models.Terrain";
      Pg.__super__ = wb;
      Pg.prototype = t(wb.prototype, {
        isCircle: null,
        fillColor: null,
        copy: null,
        originalWidth: null,
        originalHeight: null,
        regionWidth: null,
        regionHeight: null,
        follow: function(a) {
          var b = a.realY + a.cacheHeight / 2;
          this.setX(a.realX + a.cacheWidth / 2);
          this.setY(b)
        },
        resetSize: function() {
          this.setRegionSize(this.originalWidth, this.originalHeight)
        },
        setRegionDiameter: function(a) {
          this.setRegionSize(a, a)
        },
        setRegionSize: function(a,
          b) {
          var c = this.regionWidth,
            d = this.regionHeight;
          a = p.toPhysicalUnits(a);
          b = p.toPhysicalUnits(b);
          if (this.isCircle) {
            var e = new Qc;
            e.m_radius = a / 2
          } else e = new Lb, e.setAsBox(a / 2, b / 2);
          var f = new If;
          f.isSensor = !0;
          f.userData = this;
          f.shape = e;
          if (null != this.body && null != this.body.getFixtureList()) {
            for (; 0 < this.body.m_fixtureCount;) this.body.DestroyFixture(this.body.getFixtureList());
            this.body.createFixture(f);
            this.regionWidth = p.toPixelUnits(a);
            this.regionHeight = p.toPixelUnits(b)
          }
          a = this.regionWidth - c;
          d = this.regionHeight -
            d;
          this.setLocation(this.getX() + a / 2, this.getY() + d / 2)
        },
        setLocation: function(a, b) {
          this.setX(a + this.regionWidth / 2);
          this.setY(b + this.regionHeight / 2)
        },
        getWidth: function() {
          return this.regionWidth
        },
        getHeight: function() {
          return this.regionHeight
        },
        getFillColor: function() {
          return this.fillColor
        },
        __class__: Pg
      });
      var lo = function() {
        this.xy = new Lf;
        this.angle = new he;
        this.alpha = new he;
        this.realScaleXY = new Lf
      };
      k["com.stencyl.models.actor.ActorTweenProperties"] = lo;
      lo.__name__ = "com.stencyl.models.actor.ActorTweenProperties";
      lo.prototype = {
        xy: null,
        angle: null,
        alpha: null,
        realScaleXY: null,
        pause: function() {
          this.xy.paused = !0;
          this.angle.paused = !0;
          this.alpha.paused = !0;
          this.realScaleXY.paused = !0
        },
        unpause: function() {
          this.xy.paused = !1;
          this.angle.paused = !1;
          this.alpha.paused = !1;
          this.realScaleXY.paused = !1
        },
        cancel: function() {
          this.xy.active && xb.cancel(this.xy);
          this.angle.active && xb.cancel(this.angle);
          this.alpha.active && xb.cancel(this.alpha);
          this.realScaleXY.active && xb.cancel(this.realScaleXY)
        },
        __class__: lo
      };
      var dg = function(a, b, c, d, e,
        f, g, h, m, l, y) {
        pd.call(this, a, c, b);
        this.groupID = d;
        this.spriteID = e;
        this.behaviorValues = f;
        this.bodyDef = g;
        this.physicsMode = h;
        this.autoScale = m;
        this.pausable = l;
        this.ignoreGravity = y
      };
      k["com.stencyl.models.actor.ActorType"] = dg;
      dg.__name__ = "com.stencyl.models.actor.ActorType";
      dg.__super__ = pd;
      dg.prototype = t(pd.prototype, {
        groupID: null,
        spriteID: null,
        behaviorValues: null,
        bodyDef: null,
        physicsMode: null,
        autoScale: null,
        pausable: null,
        ignoreGravity: null,
        toString: function() {
          return this.name
        },
        loadGraphics: function() {
          oc.get().resources.get(this.spriteID).loadGraphics()
        },
        unloadGraphics: function() {
          oc.get().resources.get(this.spriteID).unloadGraphics()
        },
        __class__: dg
      });
      var ve = function(a, b, c, d, e, f, g, h, m, l, y, n, p, k, q) {
        this.sharedTimer = this.sharedFrameIndex = 0;
        this.animID = a;
        this.animName = b;
        this.parent = c;
        this.simpleShapes = d;
        this.physicsShapes = e;
        this.looping = f;
        this.sync = g;
        this.durations = n;
        null == ve.UNLOADED && (ve.UNLOADED = new wa(1, 1));
        a = [];
        for (b = 0; b < p;) b++, a.push(ve.UNLOADED);
        this.frames = a;
        this.frameWidth = h / k | 0;
        this.frameHeight = m / q | 0;
        this.imgWidth = h;
        this.imgHeight = m;
        this.frameCount =
          p;
        this.framesAcross = k;
        this.framesDown = q;
        this.originX = l;
        this.originY = y;
        null == c ? this.frames = [ve.UNLOADED] : (c = Bb.get().atlases.h[c.atlasID], null != c && c.active && this.loadGraphics(), 1 < p && f && ve.allAnimations.push(this))
      };
      k["com.stencyl.models.actor.Animation"] = ve;
      ve.__name__ = "com.stencyl.models.actor.Animation";
      ve.resetStatics = function() {
        ve.allAnimations = []
      };
      ve.updateAll = function(a) {
        for (var b = 0, c = ve.allAnimations; b < c.length;) {
          var d = c[b];
          ++b;
          d.sharedTimer += a;
          1 < d.frameCount && d.sharedTimer > d.durations[d.sharedFrameIndex] &&
            (d.sharedTimer -= d.durations[d.sharedFrameIndex], d.sharedFrameIndex++, d.sharedFrameIndex >= d.frameCount && (d.looping ? d.sharedFrameIndex = 0 : d.sharedFrameIndex--))
        }
      };
      ve.prototype = {
        animID: null,
        animName: null,
        parent: null,
        simpleShapes: null,
        physicsShapes: null,
        looping: null,
        sync: null,
        durations: null,
        frames: null,
        frameWidth: null,
        frameHeight: null,
        originX: null,
        originY: null,
        sharedTimer: null,
        sharedFrameIndex: null,
        imgWidth: null,
        imgHeight: null,
        frameCount: null,
        framesAcross: null,
        framesDown: null,
        graphicsLoaded: null,
        loadGraphics: function() {
          if (!this.graphicsLoaded) {
            var a =
              Aa.getBitmapData("assets/graphics/" + p.IMG_BASE + "/sprite-" + this.parent.ID + "-" + this.animID + ".png", !1);
            null == a.rect && (a = null);
            if (null == a) {
              var b = [],
                c = 0;
              for (a = this.frameCount; c < a;) c++, b.push(ve.UNLOADED);
              this.frames = b
            } else {
              if (1 == this.frameCount) this.frames[0] = a;
              else {
                var d = this.frameWidth * p.SCALE | 0,
                  e = this.frameHeight * p.SCALE | 0,
                  f = new la(0, 0);
                b = 0;
                for (c = this.frameCount; b < c;) {
                  var g = b++;
                  var h = new ha(g % this.framesAcross * d, Math.floor(g / this.framesAcross) * e, d, e),
                    m = new wa(d, e, !0, 0);
                  m.copyPixels(a, h, f);
                  this.frames[g] =
                    m
                }
                a.dispose()
              }
              if (ka.disposeImages && null != this.parent && !this.parent.readableImages)
                for (b = 0, c = this.frames; b < c.length;) a = c[b], ++b, md.uploadTexture(a, !0);
              this.graphicsLoaded = !0
            }
          }
        },
        unloadGraphics: function() {
          if (this.graphicsLoaded) {
            for (var a = 0, b = this.frameCount; a < b;) {
              var c = a++;
              this.frames[c].readable && this.frames[c].dispose();
              this.frames[c] = ve.UNLOADED
            }
            this.graphicsLoaded = !1
          }
        },
        checkImageReadable: function() {
          return this.frames[0].readable ? !0 : !1
        },
        update: function(a) {
          this.sharedTimer += a;
          1 < this.frameCount && this.sharedTimer >
            this.durations[this.sharedFrameIndex] && (this.sharedTimer -= this.durations[this.sharedFrameIndex], this.sharedFrameIndex++, this.sharedFrameIndex >= this.frameCount && (this.looping ? this.sharedFrameIndex = 0 : this.sharedFrameIndex--))
        },
        __class__: ve
      };
      var nc = function() {
        this.points = [];
        this.bounds = new ha;
        this.clear()
      };
      k["com.stencyl.models.actor.Collision"] = nc;
      nc.__name__ = "com.stencyl.models.actor.Collision";
      nc.resetStatics = function() {
        nc.recycledCollisions = [];
        nc.collisionResponses = new Za
      };
      nc.addResponse = function(a,
        b, c) {
        var d = -1,
          e = -1;
        a instanceof dg ? d = a.groupID : a instanceof zg && (d = a.ID);
        b instanceof dg ? e = b.groupID : b instanceof zg && (e = b.ID);
        null == nc.collisionResponses.h[d] && (a = nc.collisionResponses, b = new Za, a.h[d] = b);
        null == nc.collisionResponses.h[e] && (a = nc.collisionResponses, b = new Za, a.h[e] = b);
        nc.collisionResponses.h[d].h[e] = c;
        nc.collisionResponses.h[e].h[d] = c
      };
      nc.preSolve = function(a, b) {
        b = a.getFixtureA().getBody().groupID;
        var c = a.getFixtureB().getBody().groupID;
        null != nc.collisionResponses.h[b] && "sensor" == nc.collisionResponses.h[b].h[c] &&
          a.setEnabled(!1)
      };
      nc.get = function() {
        return 0 < nc.recycledCollisions.length ? nc.recycledCollisions.pop() : new nc
      };
      nc.recycle = function(a) {
        a.clear();
        nc.recycledCollisions.push(a)
      };
      nc.prototype = {
        thisFromTop: null,
        thisFromLeft: null,
        thisFromBottom: null,
        thisFromRight: null,
        thisCollidedWithActor: null,
        thisCollidedWithTile: null,
        thisCollidedWithSensor: null,
        thisCollidedWithTerrain: null,
        otherFromTop: null,
        otherFromLeft: null,
        otherFromBottom: null,
        otherFromRight: null,
        otherCollidedWithActor: null,
        otherCollidedWithTile: null,
        otherCollidedWithSensor: null,
        otherCollidedWithTerrain: null,
        points: null,
        thisActor: null,
        otherActor: null,
        thisShape: null,
        otherShape: null,
        actorA: null,
        actorB: null,
        maskA: null,
        maskB: null,
        groupA: null,
        groupB: null,
        bounds: null,
        useBounds: null,
        remove: null,
        solidCollision: null,
        linkedCollision: null,
        clear: function() {
          for (; 0 < this.points.length;) this.points.pop();
          this.remove = this.solidCollision = this.useBounds = this.otherCollidedWithTerrain = this.otherCollidedWithSensor = this.otherCollidedWithTile = this.otherCollidedWithActor =
            this.otherFromRight = this.otherFromBottom = this.otherFromLeft = this.otherFromTop = this.thisCollidedWithTerrain = this.thisCollidedWithSensor = this.thisCollidedWithTile = this.thisCollidedWithActor = this.thisFromRight = this.thisFromBottom = this.thisFromLeft = this.thisFromTop = !1;
          this.linkedCollision = this.maskA = this.maskB = this.actorB = this.actorA = this.otherShape = this.thisShape = this.otherActor = this.thisActor = null;
          this.bounds.setEmpty()
        },
        switchData: function(a) {
          if (null == a) return null;
          a.thisActor = this.otherActor;
          a.thisShape =
            this.otherShape;
          a.thisFromTop = this.otherFromTop;
          a.thisFromLeft = this.otherFromLeft;
          a.thisFromBottom = this.otherFromBottom;
          a.thisFromRight = this.otherFromRight;
          a.thisCollidedWithActor = this.otherCollidedWithActor;
          a.thisCollidedWithTile = this.otherCollidedWithTile;
          a.thisCollidedWithSensor = this.otherCollidedWithSensor;
          a.thisCollidedWithTerrain = this.otherCollidedWithTerrain;
          a.otherActor = this.thisActor;
          a.otherShape = this.thisShape;
          a.otherFromTop = this.thisFromTop;
          a.otherFromLeft = this.thisFromLeft;
          a.otherFromBottom =
            this.thisFromBottom;
          a.otherFromRight = this.thisFromRight;
          a.otherCollidedWithActor = this.thisCollidedWithActor;
          a.otherCollidedWithTile = this.thisCollidedWithTile;
          a.otherCollidedWithSensor = this.thisCollidedWithSensor;
          a.otherCollidedWithTerrain = this.thisCollidedWithTerrain;
          a.actorA = this.actorA;
          a.actorB = this.actorB;
          a.points = this.points;
          a.useBounds = this.useBounds;
          a.maskA = this.maskA;
          a.maskB = this.maskB;
          a.solidCollision = this.solidCollision;
          a.groupA = this.groupA;
          a.groupB = this.groupB;
          a.linkedCollision = this;
          return this.linkedCollision =
            a
        },
        __class__: nc
      };
      var Sd = function(a, b, c, d) {
        this.x = a;
        this.y = b;
        this.normalX = c;
        this.normalY = d
      };
      k["com.stencyl.models.actor.CollisionPoint"] = Sd;
      Sd.__name__ = "com.stencyl.models.actor.CollisionPoint";
      Sd.resetStatics = function() {
        Sd.freedCollisionPoints = []
      };
      Sd.get = function(a, b, c, d) {
        if (0 < Sd.freedCollisionPoints.length) {
          var e = Sd.freedCollisionPoints.pop();
          e.x = a;
          e.y = b;
          e.normalX = c;
          e.normalY = d;
          return e
        }
        return new Sd(a, b, c, d)
      };
      Sd.free = function(a) {
        Sd.freedCollisionPoints.push(a)
      };
      Sd.prototype = {
        x: null,
        y: null,
        normalX: null,
        normalY: null,
        __class__: Sd
      };
      var zg = function(a, b) {
        this.name = b;
        this.ID = a;
        this.sID = "[Group " + a + "," + b + "]";
        this.list = []
      };
      k["com.stencyl.models.actor.Group"] = zg;
      zg.__name__ = "com.stencyl.models.actor.Group";
      zg.prototype = {
        list: null,
        name: null,
        ID: null,
        sID: null,
        addChild: function(a) {
          this.list.push(a)
        },
        removeChild: function(a) {},
        toString: function() {
          return this.sID
        },
        __class__: zg
      };
      var ui = function(a, b, c, d, e) {
        pd.call(this, a, c, b);
        this.defaultAnimation = d;
        this.readableImages = e;
        this.animations = new Za
      };
      k["com.stencyl.models.actor.Sprite"] =
        ui;
      ui.__name__ = "com.stencyl.models.actor.Sprite";
      ui.__super__ = pd;
      ui.prototype = t(pd.prototype, {
        defaultAnimation: null,
        animations: null,
        readableImages: null,
        loadGraphics: function() {
          for (var a = this.animations.iterator(); a.hasNext();) a.next().loadGraphics()
        },
        unloadGraphics: function() {
          for (var a = this.animations.iterator(); a.hasNext();) a.next().unloadGraphics()
        },
        reloadGraphics: function(a) {
          -1 == a ? (this.unloadGraphics(), this.loadGraphics()) : (this.animations.h[a].unloadGraphics(), this.animations.h[a].loadGraphics());
          for (var b = p.engine.allActors.iterator(); b.hasNext();) {
            var c = b.next();
            null == c || c.dead || c.recycled || c.type.spriteID == this.ID && c.reloadAnimationGraphics(a)
          }
        },
        get_width: function() {
          var a = this.animations.h[this.defaultAnimation];
          return a.imgWidth / a.framesAcross | 0
        },
        get_height: function() {
          var a = this.animations.h[this.defaultAnimation];
          return a.imgHeight / a.framesDown | 0
        },
        __class__: ui,
        __properties__: {
          get_height: "get_height",
          get_width: "get_width"
        }
      });
      var Kf = function(a) {
        pd.call(this, 0, "Color Background", -1);
        this.bgColor =
          a;
        a == Kf.WHITE && (this.bgColor = 16777215)
      };
      k["com.stencyl.models.background.ColorBackground"] = Kf;
      Kf.__name__ = "com.stencyl.models.background.ColorBackground";
      Kf.__interfaces__ = [Th];
      Kf.__super__ = pd;
      Kf.prototype = t(pd.prototype, {
        bgColor: null,
        update: function() {},
        draw: function(a, b, c, d, e) {
          this.bgColor != Kf.TRANSPARENT && (a.clear(), a.beginFill(this.bgColor), a.drawRect(0, 0, d, e), a.endFill(), a.drawCircle(1, 1, 1))
        },
        __class__: Kf
      });
      var xi = function(a, b) {
        pd.call(this, 0, "Gradient Background", -1);
        this.topColor = a;
        this.bottomColor =
          b
      };
      k["com.stencyl.models.background.GradientBackground"] = xi;
      xi.__name__ = "com.stencyl.models.background.GradientBackground";
      xi.__interfaces__ = [Th];
      xi.__super__ = pd;
      xi.prototype = t(pd.prototype, {
        topColor: null,
        bottomColor: null,
        update: function() {},
        draw: function(a, b, c, d, e) {
          b = [this.topColor, this.bottomColor];
          c = new Ea;
          c.createGradientBox(d, e, Math.PI / 2, 0, 0);
          a.clear();
          var f = new wa(1, 1);
          a.beginBitmapFill(f);
          a.endFill();
          a.beginGradientFill(0, b, [100, 100], [0, 255], c, 0);
          a.drawRect(0, 0, d, e);
          a.endFill()
        },
        __class__: xi
      });
      var Bg = function(a, b, c, d, e, f, g) {
        pd.call(this, a, c, b);
        this.parallaxX = e;
        this.parallaxY = f;
        this.durations = d;
        this.repeats = g;
        this.currFrame = this.currTime = 0;
        this.isAtlasActive() && this.loadGraphics();
        this.repeated = !1
      };
      k["com.stencyl.models.background.ImageBackground"] = Bg;
      Bg.__name__ = "com.stencyl.models.background.ImageBackground";
      Bg.__interfaces__ = [Th];
      Bg.__super__ = pd;
      Bg.prototype = t(pd.prototype, {
        currFrame: null,
        currTime: null,
        img: null,
        frames: null,
        durations: null,
        parallaxX: null,
        parallaxY: null,
        repeats: null,
        repeated: null,
        graphicsLoaded: null,
        update: function() {},
        draw: function(a, b, c, d, e) {},
        drawRepeated: function(a, b, c) {
          a = this.img.width;
          var d = this.img.height,
            e = new ha(0, 0, a, d);
          if (!(a >= b && d >= c)) {
            a < b && (b += (a | 0) - b % (a | 0));
            d < c && (c += (d | 0) - c % (d | 0));
            var f = new wa(Math.max(b, a) | 0, Math.max(c, d) | 0),
              g = 0;
            for (c = (c / d | 0) + 1; g < c;)
              for (var h = g++, m = 0, l = (b / a | 0) + 1; m < l;) {
                var y = m++;
                f.copyPixels(this.img, e, new la(y * a, h * d))
              }
            this.img = f
          }
          this.repeated = !0
        },
        loadGraphics: function() {
          if (!this.graphicsLoaded) {
            var a = [],
              b = this.durations.length;
            if (0 < b)
              for (var c =
                  0; c < b;) {
                var d = c++;
                a.push(Aa.getBitmapData("assets/graphics/" + p.IMG_BASE + "/background-" + this.ID + "-" + d + ".png", !1))
              } else a.push(Aa.getBitmapData("assets/graphics/" + p.IMG_BASE + "/background-" + this.ID + "-0.png", !1));
            this.frames = [];
            c = 0;
            for (b = a.length; c < b;) d = c++, this.repeats ? (this.img = a[d], this.drawRepeated(null, p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0), this.frames.push(this.img)) : this.frames.push(a[d]);
            this.img = this.frames[0];
            this.graphicsLoaded = !0
          }
        },
        unloadGraphics: function() {
          if (this.graphicsLoaded) {
            this.img =
              new wa(1, 1);
            this.currFrame = 0;
            this.repeated = !1;
            this.frames = [];
            for (var a = 0, b = this.durations; a < b.length;) ++a, this.frames.push(this.img);
            this.graphicsLoaded = !1
          }
        },
        reloadGraphics: function(a) {
          pd.prototype.reloadGraphics.call(this, a);
          a = 0;
          for (var b = p.engine.backgroundLayers; a < b.length;) {
            var c = b[a];
            ++a;
            c.model == this && c.reload(c.resourceID)
          }
        },
        __class__: Bg
      });
      var wh = function(a, b, c, d, e, f, g, h, m) {
        Bg.call(this, a, b, c, d, e, f, g);
        this.xVelocity = h;
        this.yVelocity = m
      };
      k["com.stencyl.models.background.ScrollingBackground"] =
        wh;
      wh.__name__ = "com.stencyl.models.background.ScrollingBackground";
      wh.__interfaces__ = [Th];
      wh.__super__ = Bg;
      wh.prototype = t(Bg.prototype, {
        xVelocity: null,
        yVelocity: null,
        update: function() {},
        draw: function(a, b, c, d, e) {},
        __class__: wh
      });
      var Cf = function() {
        this.reset()
      };
      k["com.stencyl.models.collision.CollisionInfo"] = Cf;
      Cf.__name__ = "com.stencyl.models.collision.CollisionInfo";
      Cf.resetStatics = function() {
        Cf.infoArray = []
      };
      Cf.getCollisionInfo = function() {
        return 0 < Cf.infoArray.length ? Cf.infoArray.pop() : new Cf
      };
      Cf.recycle =
        function(a) {
          Cf.infoArray.push(a)
        };
      Cf.prototype = {
        max: null,
        min: null,
        maskA: null,
        maskB: null,
        solidCollision: null,
        reset: function() {
          this.max = this.min = 0;
          this.maskA = this.maskB = null;
          this.solidCollision = !0
        },
        __class__: Cf
      };
      var ig = function() {
        this.collideTypes = [];
        this.solid = !0;
        this._class = K.getClass(this).__name__;
        var a = this._check = new ua,
          b = ig.__name__;
        a.h[b] = r(this, this.collideMask);
        a = this._check;
        b = Ai.__name__;
        a.h[b] = r(this, this.collideMasklist);
        this.lastBounds = new ha;
        this.lastColID = -1
      };
      k["com.stencyl.models.collision.Mask"] =
        ig;
      ig.__name__ = "com.stencyl.models.collision.Mask";
      ig.prototype = {
        parent: null,
        groupID: null,
        list: null,
        lastBounds: null,
        lastCheckedMask: null,
        lastColID: null,
        solid: null,
        collideTypes: null,
        collide: function(a) {
          if (null == this.parent) throw F.thrown("Mask must be attached to a parent Entity");
          var b = this._check.h[a._class];
          if (null != b) return b(a);
          b = a._check.h[this._class];
          return null != b ? b(this) : !1
        },
        collideMask: function(a) {
          return this.parent.colX + this.parent.cacheWidth > a.parent.colX && this.parent.colY + this.parent.cacheHeight >
            a.parent.colY && this.parent.colX < a.parent.colX + a.parent.cacheWidth && this.parent.colY < a.parent.colY + a.parent.cacheHeight ? (this.lastBounds.x = this.parent.colX, this.lastBounds.y = this.parent.colY, this.lastBounds.width = this.parent.cacheWidth, this.lastBounds.height = this.parent.cacheHeight, this.lastCheckedMask = this, !0) : !1
        },
        collideMasklist: function(a) {
          return a.collide(this)
        },
        assignTo: function(a) {
          this.parent = a;
          null != a && this.update()
        },
        debugDraw: function(a, b, c) {},
        update: function() {},
        projectMask: function(a, b) {
          var c = -9999999999,
            d = 9999999999,
            e = -this.parent.currOffset.x * a.x - this.parent.currOffset.y * a.y;
          e < d && (d = e);
          e > c && (c = e);
          e = (-this.parent.currOffset.x + this.parent.cacheWidth) * a.x - this.parent.currOffset.y * a.y;
          e < d && (d = e);
          e > c && (c = e);
          e = -this.parent.currOffset.x * a.x + (-this.parent.currOffset.y + this.parent.cacheHeight) * a.y;
          e < d && (d = e);
          e > c && (c = e);
          e = (-this.parent.currOffset.x + this.parent.cacheWidth) * a.x + (-this.parent.currOffset.y + this.parent.cacheHeight) * a.y;
          e < d && (d = e);
          e > c && (c = e);
          b.min = d;
          b.max = c
        },
        _class: null,
        _check: null,
        __class__: ig
      };
      var od = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = !0);
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 1);
        null == a && (a = 1);
        ig.call(this);
        this.lastBounds.width = this._width = a;
        this.lastBounds.height = this._height = b;
        this._x = c;
        this._y = d;
        this.solid = e;
        this.groupID = f;
        this._check.h[od.__name__] = r(this, this.collideHitbox)
      };
      k["com.stencyl.models.collision.Hitbox"] = od;
      od.__name__ = "com.stencyl.models.collision.Hitbox";
      od.__super__ = ig;
      od.prototype = t(ig.prototype, {
        clone: function() {
          return new od(this._width,
            this._height, this._x, this._y, this.solid, this.groupID)
        },
        collideMask: function(a) {
          return this.parent.colX + this._x + this._width > a.parent.colX && this.parent.colY + this._y + this._height > a.parent.colY && this.parent.colX + this._x < a.parent.colX + a.parent.cacheWidth && this.parent.colY + this._y < a.parent.colY + a.parent.cacheHeight ? (this.lastBounds.x = this.parent.colX + this.parent.cacheWidth, this.lastBounds.y = this.parent.colY + this.parent.cacheHeight, this.lastBounds.width = this.parent.cacheWidth, this.lastBounds.height = this.parent.cacheHeight,
            this.lastCheckedMask = this, !0) : !1
        },
        collideHitbox: function(a) {
          return this.parent.colX + this._x + this._width > a.parent.colX + a._x && this.parent.colY + this._y + this._height > a.parent.colY + a._y && this.parent.colX + this._x < a.parent.colX + a._x + a._width && this.parent.colY + this._y < a.parent.colY + a._y + a._height ? (this.lastBounds.x = this.parent.colX + this._x, this.lastBounds.y = this.parent.colY + this._y, this.lastBounds.width = this._width, this.lastBounds.height = this._height, this.lastCheckedMask = this, !0) : !1
        },
        get_x: function() {
          return this._x
        },
        set_x: function(a) {
          if (this._x == a) return a;
          this._x = a;
          null != this.list ? this.list.update() : null != this.parent && this.update();
          return this._x
        },
        get_y: function() {
          return this._y
        },
        set_y: function(a) {
          if (this._y == a) return a;
          this._y = a;
          null != this.list ? this.list.update() : null != this.parent && this.update();
          return this._y
        },
        get_width: function() {
          return this._width
        },
        set_width: function(a) {
          if (this._width == a) return a;
          this._width = a;
          null != this.list ? this.list.update() : null != this.parent && this.update();
          return this._width
        },
        get_height: function() {
          return this._height
        },
        set_height: function(a) {
          if (this._height == a) return a;
          this._height = a;
          null != this.list ? this.list.update() : null != this.parent && this.update();
          return this._height
        },
        update: function() {
          null != this.parent && null != this.list && this.list.update()
        },
        _width: null,
        _height: null,
        _x: null,
        _y: null,
        __class__: od,
        __properties__: {
          set_height: "set_height",
          get_height: "get_height",
          set_width: "set_width",
          get_width: "get_width",
          set_y: "set_y",
          get_y: "get_y",
          set_x: "set_x",
          get_x: "get_x"
        }
      });
      var ml = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e &&
          (e = 0);
        od.call(this);
        if (0 == a || 0 == b || 0 == c || 0 == d) throw F.thrown("Illegal Grid, sizes cannot be 0.");
        this._rect = R.rect;
        this._point = R.point;
        this._point2 = R.point2;
        this.columns = a / c | 0;
        this.rows = b / d | 0;
        this._tile = new ha(0, 0, c, d);
        this._x = e;
        this._y = f;
        this._width = a;
        this._height = b;
        this.usePositions = !1;
        this.groupID = 1;
        a = this._check;
        b = ig.__name__;
        a.h[b] = r(this, this.collideMask);
        a = this._check;
        b = od.__name__;
        a.h[b] = r(this, this.collideHitbox);
        a = this._check;
        b = Nj.__name__;
        a.h[b] = r(this, this.collidePixelmask);
        this.data = [];
        a = 0;
        for (b = this.rows; a < b;) a++, this.data.push([])
      };
      k["com.stencyl.models.collision.Grid"] = ml;
      ml.__name__ = "com.stencyl.models.collision.Grid";
      ml.__super__ = od;
      ml.prototype = t(od.prototype, {
        usePositions: null,
        setTile: function(a, b, c) {
          null == c && (c = !0);
          null == b && (b = 0);
          null == a && (a = 0);
          0 > a || a > this.columns - 1 || 0 > b || b > this.rows - 1 || (this.usePositions && (a = a / this._tile.width | 0, b = b / this._tile.height | 0), this.data[b][a] = c)
        },
        clearTile: function(a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          this.setTile(a, b, !1)
        },
        checkTile: function(a,
          b) {
          return 0 > a || a > this.columns - 1 || 0 > b || b > this.rows - 1 ? !1 : !0
        },
        getTile: function(a, b) {
          null == b && (b = 0);
          null == a && (a = 0);
          if (0 > a || a > this.columns - 1 || 0 > b || b > this.rows - 1) return !1;
          this.usePositions && (a = a / this._tile.width | 0, b = b / this._tile.height | 0);
          return this.data[b][a]
        },
        setRect: function(a, b, c, d, e) {
          null == e && (e = !0);
          null == d && (d = 1);
          null == c && (c = 1);
          null == b && (b = 0);
          null == a && (a = 0);
          this.usePositions && (a = a / this._tile.width | 0, b = b / this._tile.height | 0, c = c / this._tile.width | 0, d = d / this._tile.height | 0);
          var f = b;
          for (b += d; f < b;) {
            d =
              f++;
            for (var g = a, h = a + c; g < h;) {
              var m = g++;
              this.setTile(m, d, e)
            }
          }
        },
        clearRect: function(a, b, c, d) {
          null == d && (d = 1);
          null == c && (c = 1);
          null == b && (b = 0);
          null == a && (a = 0);
          this.setRect(a, b, c, d, !1)
        },
        get_tileWidth: function() {
          return this._tile.width | 0
        },
        get_tileHeight: function() {
          return this._tile.height | 0
        },
        columns: null,
        rows: null,
        data: null,
        collideMask: function(a) {
          this._rect.x = a.parent.colX - this.parent.colX;
          this._rect.y = a.parent.colY - this.parent.colY;
          var b = ((this._rect.x + a.parent.cacheWidth - 1) / this._tile.width | 0) + 1,
            c = this._rect.x /
            this._tile.width | 0,
            d = this._rect.y / this._tile.height | 0;
          for (a = ((this._rect.y + a.parent.cacheHeight - 1) / this._tile.height | 0) + 1; d < a;)
            for (var e = d++, f = c, g = b; f < g;) {
              var h = f++;
              if (this.getTile(h, e)) return !0
            }
          return !1
        },
        collideHitbox: function(a) {
          this._rect.x = a.parent.colX + a._x;
          this._rect.y = a.parent.colY + a._y;
          for (var b = ((this._rect.x + a._width - 1) / this._tile.width | 0) + 1, c = this._rect.x / this._tile.width | 0, d = this._rect.y / this._tile.height | 0, e = ((this._rect.y + a._height - 1) / this._tile.height | 0) + 1; d < e;)
            for (var f = d++, g = c, h =
                b; g < h;) {
              var m = g++;
              if (this.getTile(m, f)) return this.lastBounds.x = m * this._tile.width, this.lastBounds.y = f * this._tile.height, this.lastBounds.width = this._tile.width, this.lastBounds.height = this._tile.height, a.lastColID = this.groupID, !0
            }
          return !1
        },
        collidePixelmask: function(a) {
          return !1
        },
        squareProjection: function(a, b) {
          a.x < a.y ? (b.x = a.x, b.y = a.y) : (b.y = a.x, b.x = a.y)
        },
        _tile: null,
        _rect: null,
        _point: null,
        _point2: null,
        __class__: ml,
        __properties__: t(od.prototype.__properties__, {
          get_tileHeight: "get_tileHeight",
          get_tileWidth: "get_tileWidth"
        })
      });
      var Ai = function(a, b) {
        this._count = 0;
        od.call(this);
        this._masks = [];
        this._temp = [];
        this.solid = !1;
        this.parent = b;
        for (var c = 0; c < a.length;) b = a[c], ++c, this.add(b)
      };
      k["com.stencyl.models.collision.Masklist"] = Ai;
      Ai.__name__ = "com.stencyl.models.collision.Masklist";
      Ai.__super__ = od;
      Ai.prototype = t(od.prototype, {
        collide: function(a) {
          for (var b, c = 0, d = this._masks; c < d.length;)
            if (b = d[c], ++c, b.groupID = -1E3 == b.groupID ? b.parent.groupID : b.groupID, (a instanceof Ai || -2 == a.groupID || Bb.collisionMap[b.groupID][a.groupID]) && b.collide(a)) return this.lastBounds.x =
              b.lastBounds.x, this.lastBounds.y = b.lastBounds.y, this.lastBounds.width = b.lastBounds.width, this.lastBounds.height = b.lastBounds.height, this.lastCheckedMask = b, this.lastColID = a.groupID, !0;
          return !1
        },
        collideMasklist: function(a) {
          for (var b, c, d = 0, e = this._masks; d < e.length;) {
            b = e[d];
            ++d;
            b.groupID = -1E3 == b.groupID ? b.parent.groupID : b.groupID;
            for (var f = 0, g = a._masks; f < g.length;)
              if (c = g[f], ++f, c.groupID = -1E3 == c.groupID ? c.parent.groupID : c.groupID, b.collide(c)) return a.lastBounds.x = c.lastBounds.x, a.lastBounds.y = c.lastBounds.y,
                a.lastBounds.width = c.lastBounds.width, a.lastBounds.height = c.lastBounds.height, a.lastCheckedMask = c, a.lastColID = b.groupID, !0
          }
          return !0
        },
        add: function(a) {
          this._masks[this._count++] = a;
          a.list = this;
          a.parent = this.parent;
          this.solid = this.solid || a.solid;
          this.update();
          a.groupID = -1E3 == a.groupID ? this.parent.groupID : a.groupID;
          var b = Bb.get().groupsCollidesWith.h[a.groupID];
          if (null != b)
            for (var c = 0; c < b.length;) {
              var d = b[c];
              ++c;
              R.contains(this.collideTypes, d) || this.collideTypes.push(d)
            }
          return a
        },
        remove: function(a) {
          if (0 >
            ca.indexOf(this._masks, a)) return a;
          this._temp.length = 0;
          for (var b, c = 0, d = this._masks; c < d.length;) b = d[c], ++c, b == a ? (a.list = null, a.parent = null, this._count--, this.update()) : this._temp[this._temp.length] = b;
          b = this._masks;
          this._masks = this._temp;
          this._temp = b;
          return a
        },
        removeAt: function(a) {
          null == a && (a = 0);
          this._temp.length = 0;
          var b = this._masks.length;
          for (a %= b; 0 < b--;) b == a ? (this._masks[a].list = null, this._count--, this.update()) : this._temp[this._temp.length] = this._masks[a];
          a = this._masks;
          this._masks = this._temp;
          this._temp =
            a
        },
        removeAll: function() {
          for (var a, b = 0, c = this._masks; b < c.length;) a = c[b], ++b, a.list = null;
          this._count = 0;
          this._masks.length = 0;
          this._temp.length = 0;
          this.update()
        },
        getMask: function(a) {
          null == a && (a = 0);
          return this._masks[a % this._masks.length]
        },
        assignTo: function(a) {
          for (var b = 0, c = this._masks; b < c.length;) {
            var d = c[b];
            ++b;
            d.parent = a
          }
          od.prototype.assignTo.call(this, a)
        },
        update: function() {
          for (var a = 1E5, b = 1E5, c = 0, d = 0, e, f = this._count; 0 < f--;) e = K.__cast(this._masks[f], od), null != e && (e._x < b && (b = e._x), e._y < a && (a = e._y), e._x +
            e._width > c && (c = e._x + e._width), e._y + e._height > d && (d = e._y + e._height));
          this._x = b;
          this._y = a;
          this._width = c - b;
          this._height = d - a;
          od.prototype.update.call(this)
        },
        count: null,
        get_count: function() {
          return this._count
        },
        _masks: null,
        _temp: null,
        _count: null,
        __class__: Ai,
        __properties__: t(od.prototype.__properties__, {
          get_count: "get_count"
        })
      });
      var Nj = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        od.call(this);
        a instanceof wa && (this._data = a);
        if (null == this._data) throw F.thrown("Invalid Pixelmask source image.");
        this.threshold =
          1;
        this._rect = R.rect;
        this._point = R.point;
        this._point2 = R.point2;
        this._width = this.get_data().width;
        this._height = this.get_data().height;
        this._x = b;
        this._y = c;
        a = this._check;
        b = ig.__name__;
        a.h[b] = r(this, this.collideMask);
        a = this._check;
        b = Nj.__name__;
        a.h[b] = r(this, this.collidePixelmask);
        a = this._check;
        b = od.__name__;
        a.h[b] = r(this, this.collideHitbox)
      };
      k["com.stencyl.models.collision.Pixelmask"] = Nj;
      Nj.__name__ = "com.stencyl.models.collision.Pixelmask";
      Nj.__super__ = od;
      Nj.prototype = t(od.prototype, {
        threshold: null,
        collideMask: function(a) {
          this._point.x =
            this.parent.colX + this._x;
          this._point.y = this.parent.colY + this._y;
          this._rect.x = a.parent.colX;
          this._rect.y = a.parent.colY;
          this._rect.width = a.parent.cacheWidth;
          this._rect.height = a.parent.cacheHeight;
          return !1
        },
        collideHitbox: function(a) {
          this._point.x = this.parent.colX + this._x;
          this._point.y = this.parent.colY + this._y;
          this._rect.x = a.parent.colX + a._x;
          this._rect.y = a.parent.colY + a._y;
          this._rect.width = a._width;
          this._rect.height = a._height;
          return !1
        },
        collidePixelmask: function(a) {
          this._point.x = this.parent.colX + this._x;
          this._point.y = this.parent.colY + this._y;
          this._point2.x = a.parent.colX + a._x;
          this._point2.y = a.parent.colY + a._y;
          return !1
        },
        get_data: function() {
          return this._data
        },
        set_data: function(a) {
          this._data = a;
          this._width = a.width;
          this._height = a.height;
          this.update();
          return this._data
        },
        _data: null,
        _rect: null,
        _point: null,
        _point2: null,
        __class__: Nj,
        __properties__: t(od.prototype.__properties__, {
          set_data: "set_data",
          get_data: "get_data"
        })
      });
      var al = function(a, b, c, d, e, f, g, h, m, l, y, n) {
        this.elementID = a;
        this.x = b;
        this.y = c;
        this.scaleX =
          d;
        this.scaleY = e;
        this.layerID = f;
        this.orderInLayer = g;
        this.angle = h;
        this.groupID = m;
        this.actorID = l;
        this.behaviorValues = y;
        this.isCustomized = n;
        this.actorType = K.__cast(oc.get().resources.get(l), dg)
      };
      k["com.stencyl.models.scene.ActorInstance"] = al;
      al.__name__ = "com.stencyl.models.scene.ActorInstance";
      al.prototype = {
        elementID: null,
        x: null,
        y: null,
        scaleX: null,
        scaleY: null,
        layerID: null,
        orderInLayer: null,
        angle: null,
        groupID: null,
        actorID: null,
        isCustomized: null,
        behaviorValues: null,
        actorType: null,
        __class__: al
      };
      var Ke = function() {};
      k["com.stencyl.models.scene.Autotile"] = Ke;
      Ke.__name__ = "com.stencyl.models.scene.Autotile";
      var oo = function(a, b, c, d, e) {
        this.animIndex = [];
        this.defaultAnimationIndex = 0;
        this.name = a;
        this.id = b;
        this.tilesAcross = c;
        this.tilesDown = d;
        a = 0;
        b = new pc;
        c = 0;
        for (d = 256; c < d;) {
          var f = c++;
          null != b.h.__keys__[e[f].__id__] ? this.animIndex[f] = b.h[e[f].__id__] : (this.animIndex[f] = a, b.set(e[f], a), ++a)
        }
        this.defaultAnimationIndex = this.animIndex[255];
        this.autotileArrayLength = a;
        this.animCorners = [];
        c = 0;
        for (d = 256; c < d;) f = c++, this.animCorners[this.animIndex[f]] =
          e[f]
      };
      k["com.stencyl.models.scene.AutotileFormat"] = oo;
      oo.__name__ = "com.stencyl.models.scene.AutotileFormat";
      oo.prototype = {
        autotileArrayLength: null,
        defaultAnimationIndex: null,
        name: null,
        id: null,
        tilesAcross: null,
        tilesDown: null,
        animIndex: null,
        animCorners: null,
        __class__: oo
      };
      var no = function(a, b, c, d) {
        this.tl = a;
        this.tr = b;
        this.bl = c;
        this.br = d
      };
      k["com.stencyl.models.scene.Corners"] = no;
      no.__name__ = "com.stencyl.models.scene.Corners";
      no.prototype = {
        tl: null,
        tr: null,
        bl: null,
        br: null,
        toString: function() {
          return "TL: " +
            M.string(this.tl) + ", TR: " + M.string(this.tr) + ", BL: " + M.string(this.bl) + ", BR: " + M.string(this.br)
        },
        __class__: no
      };
      var Tn = function(a, b, c, d) {
        this.type = a;
        this.x = b;
        this.y = c;
        this.layer = d
      };
      k["com.stencyl.models.scene.DeferredActor"] = Tn;
      Tn.__name__ = "com.stencyl.models.scene.DeferredActor";
      Tn.prototype = {
        type: null,
        x: null,
        y: null,
        layer: null,
        __class__: Tn
      };
      var Ag = function(a, b, c, d, e, f, g) {
        Z.call(this);
        this.ID = a;
        this.set_name(b);
        this.layerName = b;
        this.order = c;
        this.scrollFactorX = d;
        this.scrollFactorY = e;
        this.set_alpha(f);
        this.set_blendMode(g)
      };
      k["com.stencyl.models.scene.layers.RegularLayer"] = Ag;
      Ag.__name__ = "com.stencyl.models.scene.layers.RegularLayer";
      Ag.__super__ = Z;
      Ag.prototype = t(Z.prototype, {
        ID: null,
        layerName: null,
        order: null,
        scrollFactorX: null,
        scrollFactorY: null,
        opacity: null,
        alphaTween: null,
        updatePosition: function(a, b, c) {},
        __class__: Ag
      });
      var Lc = function(a, b, c, d, e, f, g, h) {
        this.cameraOldX = this.cameraOldY = -1;
        this.cameraMoved = !0;
        Ag.call(this, a, b, c, d, e, f, g);
        this.tiles = h;
        null != this.tiles && (this.tiles.set_name(b + " - TileLayer"),
          this.tiles.set_blendMode(g));
        this.actorContainer = new Z;
        this.actorContainer.set_name(b + " - ActorLayer");
        this.overlay = new Z;
        this.overlay.set_name(b + " - Overlay");
        null != this.tiles && this.addChild(this.tiles);
        this.addChild(this.actorContainer);
        this.addChild(this.overlay);
        this.attachedImages = []
      };
      k["com.stencyl.models.scene.Layer"] = Lc;
      Lc.__name__ = "com.stencyl.models.scene.Layer";
      Lc.__super__ = Ag;
      Lc.prototype = t(Ag.prototype, {
        tiles: null,
        actorContainer: null,
        overlay: null,
        attachedImages: null,
        cameraMoved: null,
        cameraOldX: null,
        cameraOldY: null,
        updatePosition: function(a, b, c) {
          if (ka.pixelsnap) {
            c = a * this.scrollFactorX | 0;
            var d = b * this.scrollFactorY | 0;
            a = Math.round(a);
            b = Math.round(b);
            this.set_x(-(a * this.scrollFactorX | 0));
            this.set_y(-(b * this.scrollFactorY | 0));
            var e = c / (p.engine.scene.tileWidth * p.SCALE) | 0;
            var f = d / (p.engine.scene.tileHeight * p.SCALE) | 0
          } else c = a * this.scrollFactorX, d = b * this.scrollFactorY, this.set_x(-a * this.scrollFactorX), this.set_y(-b * this.scrollFactorY), e = c / (p.engine.scene.tileWidth * p.SCALE), f = d / (p.engine.scene.tileHeight *
            p.SCALE);
          this.tiles.setPosition(c, d);
          this.overlay.set_x(a);
          this.overlay.set_y(b);
          this.cameraMoved = this.cameraMoved || this.cameraOldX != e || this.cameraOldY != f;
          this.cameraOldX = e;
          this.cameraOldY = f
        },
        clear: function() {
          for (var a = 0, b = this.attachedImages; a < b.length;) {
            var c = b[a];
            ++a;
            this.removeChild(c)
          }
          this.attachedImages = [];
          R.removeAllChildren(this.actorContainer);
          this.overlay.get_graphics().clear();
          null != this.tiles && this.tiles.clear()
        },
        __class__: Lc
      });
      var Bi = function(a, b, c, d, e, f, g) {
        null == f && (f = 0);
        this.x = d;
        this.y =
          e;
        this.shapes = a;
        this.shape = this.shapes[0];
        this.ID = b;
        this.name = c;
        this.shapeID = f;
        this.simpleBounds = g
      };
      k["com.stencyl.models.scene.RegionDef"] = Bi;
      Bi.__name__ = "com.stencyl.models.scene.RegionDef";
      Bi.prototype = {
        x: null,
        y: null,
        shape: null,
        shapes: null,
        ID: null,
        name: null,
        shapeID: null,
        simpleBounds: null,
        __class__: Bi
      };
      var Nf = function(a, b, c, d, e, f, g) {
        null == g && (g = !0);
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 0);
        Z.call(this);
        this.curStep = 0;
        this.running = !0;
        this.repeats = g;
        this.image1 = new Ac(a);
        this.addChild(this.image1);
        this.cacheWidth = this.image1.get_width();
        this.cacheHeight = this.image1.get_height();
        g && (this.image2 = new Ac(a), this.image2.set_x(this.image1.get_x() - this.cacheWidth), this.addChild(this.image2), this.image3 = new Ac(a), this.image3.set_x(this.image1.get_x() + this.cacheWidth), this.addChild(this.image3), this.image4 = new Ac(a), this.image4.set_x(this.image1.get_x() - this.cacheWidth), this.image4.set_y(this.image1.get_y() - this.cacheHeight), this.addChild(this.image4), this.image5 = new Ac(a), this.image5.set_y(this.image1.get_y() -
          this.cacheHeight), this.addChild(this.image5), this.image6 = new Ac(a), this.image6.set_x(this.image1.get_x() + this.cacheWidth), this.image6.set_y(this.image1.get_y() - this.cacheHeight), this.addChild(this.image6), this.image7 = new Ac(a), this.image7.set_x(this.image1.get_x() - this.cacheWidth), this.image7.set_y(this.image1.get_y() + this.cacheHeight), this.addChild(this.image7), this.image8 = new Ac(a), this.image8.set_y(this.image1.get_y() + this.cacheHeight), this.addChild(this.image8), this.image9 = new Ac(a), this.image9.set_x(this.image1.get_x() +
          this.cacheWidth), this.image9.set_y(this.image1.get_y() + this.cacheHeight), this.addChild(this.image9));
        this.yPos = this.xPos = this.yP = this.xP = 0;
        this.xVelocity = b;
        this.yVelocity = c;
        this.parallaxX = d;
        this.parallaxY = e;
        this.scrolling = 0 != b || 0 != c;
        this.parallax = 0 != d || 0 != e;
        this.backgroundID = f
      };
      k["com.stencyl.models.scene.ScrollingBitmap"] = Nf;
      Nf.__name__ = "com.stencyl.models.scene.ScrollingBitmap";
      Nf.__super__ = Z;
      Nf.prototype = t(Z.prototype, {
        image1: null,
        image2: null,
        image3: null,
        image4: null,
        image5: null,
        image6: null,
        image7: null,
        image8: null,
        image9: null,
        speed: null,
        curStep: null,
        running: null,
        parallax: null,
        scrolling: null,
        cacheWidth: null,
        cacheHeight: null,
        xP: null,
        yP: null,
        xPos: null,
        yPos: null,
        xVelocity: null,
        yVelocity: null,
        parallaxX: null,
        parallaxY: null,
        backgroundID: null,
        repeats: null,
        update: function(a, b, c) {
          c = !1;
          this.parallax ? (this.xPos = -(a * this.parallaxX | 0), this.yPos = -(b * this.parallaxY | 0), c = !0) : this.running ? this.yPos = this.xPos = 0 : (this.xPos = this.xP, this.yPos = this.yP);
          if (this.scrolling && this.running) {
            a = this.cacheWidth;
            b = this.cacheHeight;
            this.xP += this.xVelocity / 10 * p.SCALE;
            this.yP += this.yVelocity / 10 * p.SCALE;
            if (this.repeats) {
              if (this.xP < -a || this.xP > a) this.xP = 0;
              if (this.yP < -b || this.yP > b) this.yP = 0
            }
            this.xPos += Math.floor(this.xP);
            this.yPos += Math.floor(this.yP);
            this.curStep += 1;
            1 <= this.curStep && (c = !0, this.curStep -= Math.floor(this.curStep))
          }
          c && this.resetPositions()
        },
        resetPositions: function() {
          this.cacheWidth = this.image1.get_width();
          this.cacheHeight = this.image1.get_height();
          this.repeats && (this.xPos < -this.cacheWidth && (this.xPos %= this.cacheWidth),
            this.yPos < -this.cacheHeight && (this.yPos %= this.cacheHeight));
          this.image1.set_x(this.xPos);
          this.image1.set_y(this.yPos);
          this.repeats && (this.image2.set_x(this.xPos - this.cacheWidth), this.image2.set_y(this.yPos), this.image3.set_x(this.xPos + this.cacheWidth), this.image3.set_y(this.yPos), this.image4.set_x(this.xPos - this.cacheWidth), this.image4.set_y(this.yPos - this.cacheHeight), this.image5.set_x(this.xPos), this.image5.set_y(this.yPos - this.cacheHeight), this.image6.set_x(this.xPos + this.cacheWidth), this.image6.set_y(this.yPos -
            this.cacheHeight), this.image7.set_x(this.xPos - this.cacheWidth), this.image7.set_y(this.yPos + this.cacheHeight), this.image8.set_x(this.xPos), this.image8.set_y(this.yPos + this.cacheHeight), this.image9.set_x(this.xPos + this.cacheWidth), this.image9.set_y(this.yPos + this.cacheHeight))
        },
        start: function() {
          this.running = !0
        },
        stop: function() {
          this.running = !1
        },
        __class__: Nf
      });
      var po = function(a, b, c, d, e, f, g) {
        null == g && (g = 0);
        null == f && (f = 0);
        this.x = d;
        this.y = e;
        this.shapes = a;
        this.shape = this.shapes[0];
        this.ID = b;
        this.name = c;
        this.groupID =
          f;
        0 == this.fillColor && (c = b = a = 0, null == c && (c = 0), null == b && (b = 0), null == a && (a = 0), this.fillColor = a << 16 | b << 8 | c);
        this.fillColor = g
      };
      k["com.stencyl.models.scene.TerrainDef"] = po;
      po.__name__ = "com.stencyl.models.scene.TerrainDef";
      po.prototype = {
        x: null,
        y: null,
        shape: null,
        shapes: null,
        ID: null,
        name: null,
        groupID: null,
        fillColor: null,
        __class__: po
      };
      var Rc = function(a, b, c, d, e, f, g, h) {
        this.tileID = a;
        this.collisionID = b;
        this.metadata = c;
        this.frameIndex = d;
        this.durations = e;
        this.parent = h;
        var m = Bb.get().atlases.h[h.atlasID];
        if (null !=
          f) {
          this.autotileFormat = f;
          this.autotileMergeSet = g;
          g = [];
          var l = 0;
          for (f = f.autotileArrayLength; l < f;) l++, g.push(new Rc(a, b, c, d, e, null, null, h));
          this.autotiles = g
        }
        null != m && m.active && this.loadGraphics();
        this.currTime = this.currFrame = 0;
        this.updateSource = !1
      };
      k["com.stencyl.models.scene.Tile"] = Rc;
      Rc.__name__ = "com.stencyl.models.scene.Tile";
      Rc.prototype = {
        tileID: null,
        collisionID: null,
        metadata: null,
        frameIndex: null,
        parent: null,
        autotileFormat: null,
        autotiles: null,
        autotileMergeSet: null,
        pixels: null,
        durations: null,
        frames: null,
        currFrame: null,
        currTime: null,
        updateSource: null,
        data: null,
        update: function(a) {
          1 == this.durations.length || p.paused || (this.currTime += Math.floor(a), this.currTime > (this.durations[this.currFrame] | 0) && (this.currTime -= this.durations[this.currFrame] | 0, this.currFrame + 1 < this.durations.length ? this.currFrame++ : this.currFrame = 0, this.updateSource = !0))
        },
        getSource: function(a, b) {
          return new ha(this.currFrame * a * p.SCALE, 0, a * p.SCALE, b * p.SCALE)
        },
        loadGraphics: function() {
          var a = null;
          if (1 < this.durations.length || null != this.autotileFormat) a =
            Aa.getBitmapData("assets/graphics/" + p.IMG_BASE + "/tileset-" + this.parent.ID + "-" + this.tileID + ".png", !1);
          if (null != this.autotileFormat) {
            var b = 0,
              c = 0;
            for (a = this.createAutotileAnimations(a, this.autotileFormat); c < a.length;) {
              var d = a[c];
              ++c;
              this.autotiles[b++].loadAnimationPixels(d)
            }
          } else this.loadAnimationPixels(a)
        },
        unloadGraphics: function() {
          this.data = this.pixels = null;
          if (null != this.autotiles)
            for (var a = 0, b = this.autotiles; a < b.length;) {
              var c = b[a];
              ++a;
              c.pixels = null;
              c.data = null
            }
        },
        loadAnimationPixels: function(a) {
          null !=
            a && (this.pixels = a)
        },
        createAutotileAnimations: function(a, b) {
          var c = [],
            d = this.durations.length,
            e = a.width / d / b.tilesAcross | 0,
            f = a.height / b.tilesDown | 0,
            g = e / 2 | 0,
            h = f / 2 | 0;
          Rc.dummyRect.width = g;
          Rc.dummyRect.height = h;
          for (var m = 0, l = b.animCorners; m < l.length;) {
            var y = l[m];
            ++m;
            for (var n = new wa(e * d, f), p = function(a, b) {
                return function(c, d) {
                  a[0](b[0], c, d)
                }
              }([r(n, n.copyPixels)], [a]), k = 0, q = d; k < q;) {
              var u = k++,
                v = e * b.tilesAcross * u;
              u *= e;
              var T = y.tl;
              Rc.dummyRect.x = v + T.x * Rc.dummyRect.width;
              Rc.dummyRect.y = T.y * Rc.dummyRect.height;
              p(Rc.dummyRect, new la(u, 0));
              T = y.tr;
              Rc.dummyRect.x = v + T.x * Rc.dummyRect.width;
              Rc.dummyRect.y = T.y * Rc.dummyRect.height;
              p(Rc.dummyRect, new la(u + g, 0));
              T = y.br;
              Rc.dummyRect.x = v + T.x * Rc.dummyRect.width;
              Rc.dummyRect.y = T.y * Rc.dummyRect.height;
              p(Rc.dummyRect, new la(u + g, h));
              T = y.bl;
              Rc.dummyRect.x = v + T.x * Rc.dummyRect.width;
              Rc.dummyRect.y = T.y * Rc.dummyRect.height;
              p(Rc.dummyRect, new la(u, h))
            }
            c.push(n)
          }
          return c
        },
        sourceRect: function(a, b) {
          Rc.dummyRect.x = b + a.x * Rc.dummyRect.width;
          Rc.dummyRect.y = a.y * Rc.dummyRect.height;
          return Rc.dummyRect
        },
        __class__: Rc
      };
      var Yd = function(a, b, c, d) {
        Z.call(this);
        this.layerID = a;
        this.scene = b;
        this.numRows = d;
        this.numCols = c;
        this.clear();
        this.flashPoint = new la
      };
      k["com.stencyl.models.scene.TileLayer"] = Yd;
      Yd.__name__ = "com.stencyl.models.scene.TileLayer";
      Yd.__interfaces__ = [sh];
      Yd.resetStatics = function() {
        Yd.cacheSource = new Za
      };
      Yd.__super__ = Z;
      Yd.prototype = t(Z.prototype, {
        layerID: null,
        rows: null,
        autotileData: null,
        grid: null,
        scene: null,
        numRows: null,
        numCols: null,
        bitmapData: null,
        flashPoint: null,
        noTiles: null,
        initBitmap: function() {
          if (!this.noTiles) {
            this.bitmapData =
              new wa(p.screenWidth * p.SCALE + this.scene.tileWidth * p.SCALE | 0, p.screenHeight * p.SCALE + this.scene.tileHeight * p.SCALE | 0, !0, 0);
            var a = new Ac(this.bitmapData);
            a.smoothing = ka.antialias;
            this.addChild(a)
          }
        },
        clearBitmap: function() {
          for (; 0 < this.get_numChildren();) this.removeChildAt(0);
          null != this.bitmapData && this.bitmapData.dispose();
          this.bitmapData = null
        },
        clear: function() {
          null != this.bitmapData && this.clearBitmap();
          this.noTiles = !0;
          this.rows = [];
          this.autotileData = [];
          for (var a = 0, b = this.numRows; a < b;) {
            var c = a++;
            this.rows[c] = [];
            this.autotileData[c] = [];
            for (var d = 0, e = this.numCols; d < e;) {
              var f = d++;
              this.rows[c][f] = null;
              this.autotileData[c][f] = 0
            }
          }
        },
        setPosition: function(a, b) {
          this.set_x(a - a % (this.scene.tileWidth * p.SCALE));
          this.set_y(b - b % (this.scene.tileHeight * p.SCALE))
        },
        mountGrid: function() {
          if (null != this.grid) {
            var a = new wb(p.engine, 1E8, 1, 0, 0, -1, this.grid.get_width(), this.grid.get_height(), null, new ua, null, null, !1, !0, !1, !1, this.grid, p.NO_PHYSICS);
            a.set_name("Terrain");
            a.typeID = -1;
            a.set_visible(!1);
            a.ignoreGravity = !0;
            p.engine.getGroup(1).addChild(a)
          }
        },
        setTileAt: function(a, b, c, d) {
          null == d && (d = !0);
          if (!(0 > b || 0 > a || b >= this.numCols || a >= this.numRows)) {
            this.noTiles && null != c && (this.noTiles = !1, null == this.bitmapData && this.initBitmap());
            var e = this.rows[a][b];
            d && (d = null != e && null != e.autotiles || null != c && null != c.autotiles);
            this.rows[a][b] = c;
            this.autotileData[a][b] = 0;
            d && this.updateAutotilesNear(a, b)
          }
        },
        getTileAt: function(a, b) {
          return 0 > b || 0 > a || b >= this.numCols || a >= this.numRows ? null : this.rows[a][b]
        },
        updateAutotilesNear: function(a, b) {
          var c = a - 1;
          for (a += 2; c < a;)
            for (var d =
                c++, e = b - 1, f = b + 2; e < f;) {
              var g = e++;
              0 > g || 0 > d || g >= this.numCols || d >= this.numRows || this.updateAutotile(d, g)
            }
        },
        updateAutotile: function(a, b) {
          var c = this.rows[a][b];
          if (null != c && null != c.autotiles) {
            for (var d = 0, e = Yd.autotileFlagPointMap.keys(); e.hasNext();) {
              var f = e.next(),
                g = Yd.autotileFlagPointMap.h[f],
                h = b + g.x | 0;
              g = a + g.y | 0;
              0 > h || 0 > g || h >= this.numCols || g >= this.numRows || this.rows[g][h] == c || (d |= f)
            }
            this.autotileData[a][b] = c.autotileFormat.animIndex[d]
          }
        },
        draw: function(a, b) {
          if (!this.noTiles && null != this.bitmapData) {
            this.bitmapData.fillRect(this.bitmapData.rect,
              0);
            a = Math.floor(a);
            b = Math.floor(b);
            var c = this.numRows,
              d = this.scene.tileWidth,
              e = this.scene.tileHeight;
            a = a / p.SCALE / d | 0;
            var f = b / p.SCALE / e | 0;
            b = 2 + a + (p.screenWidth / d | 0);
            var g = 2 + f + (p.screenHeight / e | 0);
            b = Math.min(b, this.numCols) | 0;
            g = Math.min(g, c) | 0;
            for (var h = c = 0; f < g;) {
              for (var m = a; m < b;) {
                var l = this.getTileAt(f, m);
                if (null != l && l.parent.graphicsLoaded) {
                  if (null == Yd.cacheSource.h[1E6 * l.parent.ID + l.tileID] || l.updateSource)
                    if (l.updateSource = !1, null == l.pixels && null == l.autotiles) {
                      var y = Yd.cacheSource,
                        n = 1E6 * l.parent.ID +
                        l.tileID,
                        k = l.parent.getImageSourceForTile(l.tileID, d, e);
                      y.h[n] = k
                    } else y = Yd.cacheSource, n = 1E6 * l.parent.ID + l.tileID, k = l.getSource(d, e), y.h[n] = k;
                  y = Yd.cacheSource.h[1E6 * l.parent.ID + l.tileID];
                  null != y && (null != l.autotiles && (l = l.autotiles[this.autotileData[f][m]]), l = null == l.pixels ? l.parent.pixels : l.pixels, this.flashPoint.x = c * p.SCALE, this.flashPoint.y = h * p.SCALE, null != l && this.bitmapData.copyPixels(l, y, this.flashPoint, null, null, !0))
                }++m;
                c += d
              }
              c = 0;
              h += e;
              ++f
            }
          }
        },
        updateScale: function() {
          this.clearBitmap();
          this.initBitmap()
        },
        expandBitmap: function() {
          if (!this.noTiles) {
            var a = p.screenHeight * p.SCALE + this.scene.tileHeight * p.SCALE | 0;
            if (this.bitmapData.width < (p.screenWidth * p.SCALE + this.scene.tileWidth * p.SCALE | 0) || this.bitmapData.height < a) this.clearBitmap(), this.initBitmap()
          }
        },
        __class__: Yd
      });
      var tf = function(a, b, c, d, e, f, g, h, m) {
        pd.call(this, a, c, b);
        this.framesAcross = d;
        this.framesDown = e;
        this.tileWidth = f;
        this.tileHeight = g;
        this.readableImages = h;
        this.tiles = m
      };
      k["com.stencyl.models.scene.Tileset"] = tf;
      tf.__name__ = "com.stencyl.models.scene.Tileset";
      tf.__super__ = pd;
      tf.prototype = t(pd.prototype, {
        framesAcross: null,
        framesDown: null,
        tileWidth: null,
        tileHeight: null,
        tiles: null,
        readableImages: null,
        pixels: null,
        graphicsLoaded: null,
        getImageSourceForTile: function(a, b, c) {
          a = this.tiles[a];
          if (null == a) tf.temp.x = 0, tf.temp.y = 0;
          else {
            var d = Math.floor(a.frameIndex / this.framesAcross);
            tf.temp.x = Math.floor(a.frameIndex % this.framesAcross) * b * p.SCALE;
            tf.temp.y = d * c * p.SCALE
          }
          tf.temp.width = b * p.SCALE;
          tf.temp.height = c * p.SCALE;
          return tf.temp.clone()
        },
        loadGraphics: function() {
          if (!this.graphicsLoaded) {
            this.pixels =
              Aa.getBitmapData("assets/graphics/" + p.IMG_BASE + "/tileset-" + this.ID + ".png", !1);
            for (var a = 0, b = this.tiles; a < b.length;) {
              var c = b[a];
              ++a;
              null != c && c.loadGraphics()
            }
            this.graphicsLoaded = !0
          }
        },
        unloadGraphics: function() {
          if (this.graphicsLoaded) {
            this.pixels.readable && this.pixels.dispose();
            this.pixels = null;
            for (var a = 0, b = this.tiles; a < b.length;) {
              var c = b[a];
              ++a;
              null != c && c.unloadGraphics()
            }
            this.graphicsLoaded = !1
          }
        },
        reloadGraphics: function(a) {
          if (-1 == a) {
            this.unloadGraphics();
            this.loadGraphics();
            a = 0;
            for (var b = this.tiles; a <
              b.length;) {
              var c = b[a];
              ++a;
              null != c && (c.updateSource = !0)
            }
          } else a = this.tiles[a], null != a && (a.unloadGraphics(), a.loadGraphics());
          p.engine.tileUpdated = !0
        },
        convertPixels: function(a) {
          for (var b = this.tileWidth * p.SCALE | 0, c = this.tileHeight * p.SCALE | 0, d = a.width / b | 0, e = a.height / c | 0, f = new wa(a.width + 2 * d | 0, a.height + 2 * e | 0, !0, 0), g, h, m, l, y = 0; y < e;) {
            for (g = 0; g < d;) h = g * b + 2 * g + 1 | 0, m = y * c + 2 * y + 1 | 0, l = new ha(g * b, y * c, b, c), h = new la(h, m), f.copyPixels(a, l, h), ++g;
            ++y
          }
          for (y = 0; y < e;) {
            for (g = 0; g < d;) {
              h = g * b + 2 * g + 1 | 0;
              m = y * c + 2 * y + 1 | 0;
              for (a = 0; a < b;) l =
                f.getPixel32(h + a, m), f.setPixel32(h + a, m - 1, l), l = f.getPixel32(h + a, m + c - 1), f.setPixel32(h + a, m + c, l), ++a;
              for (a = 0; a < c;) l = f.getPixel32(h, m + a), f.setPixel32(h - 1, m + a, l), l = f.getPixel32(h + b - 1, m + a), f.setPixel32(h + b, m + a, l), ++a;
              ++g
            }++y
          }
          return f
        },
        __class__: tf
      });
      var qo = function(a, b, c, d, e, f) {
        this.x = a;
        this.y = b;
        this.width = c;
        this.height = d;
        this.shape = e;
        this.shape2 = f
      };
      k["com.stencyl.models.scene.Wireframe"] = qo;
      qo.__name__ = "com.stencyl.models.scene.Wireframe";
      qo.prototype = {
        x: null,
        y: null,
        shape: null,
        shape2: null,
        width: null,
        height: null,
        __class__: qo
      };
      var ae = function(a, b, c, d, e, f, g, h, m) {
        Ag.call(this, a, b, c, d, e, f, g);
        this.resourceID = h;
        this.customScroll = m;
        this.model = K.__cast(oc.get().resources.get(h), Bg)
      };
      k["com.stencyl.models.scene.layers.BackgroundLayer"] = ae;
      ae.__name__ = "com.stencyl.models.scene.layers.BackgroundLayer";
      ae.__super__ = Ag;
      ae.prototype = t(Ag.prototype, {
        model: null,
        bitmap: null,
        resourceID: null,
        customScroll: null,
        isAnimated: null,
        frameCount: null,
        currIndex: null,
        currTime: null,
        cacheIndex: null,
        cacheWidth: null,
        cacheHeight: null,
        bgChild: null,
        load: function() {
          if (null != this.model && null != this.model.img) {
            this.bitmap = new Ac(this.model.img, 1, !0);
            this.bitmap.smoothing = ka.antialias;
            this.currTime = this.currIndex = 0;
            this.isAnimated = 1 < this.model.frames.length;
            this.frameCount = this.model.frames.length;
            this.model.repeats && !this.model.repeated && this.model.drawRepeated(this, p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0);
            var a = 0,
              b = 0;
            if (this.customScroll) a = this.scrollFactorX, b = this.scrollFactorY;
            else if (this.model.repeats) a = this.model.parallaxX, b = this.model.parallaxY;
            else {
              var c = this.model.img.width,
                d = this.model.img.height,
                e = p.screenWidth * p.SCALE | 0,
                f = p.screenHeight * p.SCALE | 0,
                g = p.sceneWidth * p.SCALE | 0,
                h = p.sceneHeight * p.SCALE | 0;
              c > e && c < g && (a = 1 - (g - c) / (g - e));
              d > f && d < h && (b = 1 - (h - d) / (h - f))
            }
            this.model instanceof wh ? (c = K.__cast(this.model, wh), a = new Nf(this.model.img, c.xVelocity, c.yVelocity, a, b, this.resourceID, this.model.repeats), this.addChild(this.bgChild = a)) : this.model.repeats ? (a = new Nf(this.model.img, 0, 0, a, b, this.resourceID), this.addChild(this.bgChild = a)) : (this.cacheWidth =
              this.model.img.width, this.cacheHeight = this.model.img.height, this.scrollFactorX = a, this.scrollFactorY = b, this.addChild(this.bgChild = this.bitmap))
          }
        },
        loadFromImg: function(a, b) {
          this.model = new wh(-1, -1, "", [100], 0, 0, b, 0, 0);
          this.model.img = a;
          this.model.frames = [a];
          this.load()
        },
        setScrollFactor: function(a, b) {
          this.scrollFactorX = a;
          this.scrollFactorY = b;
          if (this.bgChild instanceof Nf) {
            var c = K.__cast(this.bgChild, Nf);
            c.parallaxX = a;
            c.parallaxY = b;
            c.parallax = 0 != a || 0 != b
          }
        },
        setScrollSpeed: function(a, b) {
          if (this.bgChild instanceof Nf) {
            var c = K.__cast(this.bgChild, Nf);
            c.xVelocity = a;
            c.yVelocity = b;
            c.scrolling = 0 != a || 0 != b
          }
        },
        reload: function(a) {
          null != this.bgChild && (this.removeChild(this.bgChild), this.bgChild = null);
          this.resourceID = a;
          this.model = K.__cast(oc.get().resources.get(this.resourceID), Bg);
          this.load()
        },
        setImage: function(a) {
          this.bitmap.set_bitmapData(a);
          this.currTime = this.currIndex = 0;
          this.isAnimated = 1 < this.model.frames.length;
          this.frameCount = this.model.frames.length
        },
        updateAnimation: function(a) {
          this.currTime += a;
          null != this.model &&
            this.currTime >= this.model.durations[this.currIndex] && (this.currTime = 0, this.currIndex++, this.currIndex >= this.frameCount && (this.currIndex = 0), this.bgChild instanceof Nf ? (this.cacheIndex = this.currIndex, this.model.repeats && this.model.drawRepeated(this, p.screenWidth * p.SCALE | 0, p.screenHeight * p.SCALE | 0), this.currIndex = this.cacheIndex, a = this.bgChild.image1, a.set_bitmapData(this.model.frames[this.currIndex]), this.model.repeats && (a = this.bgChild.image2, a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image3,
              a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image4, a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image5, a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image6, a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image7, a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image8, a.set_bitmapData(this.model.frames[this.currIndex]), a = this.bgChild.image9, a.set_bitmapData(this.model.frames[this.currIndex]))) : this.bitmap.set_bitmapData(this.model.frames[this.currIndex]))
        },
        updatePosition: function(a, b, c) {
          this.bgChild instanceof Nf ? K.__cast(this.bgChild, Nf).update(a, b, c) : (this.set_x(-(a * this.scrollFactorX | 0)), this.set_y(-(b * this.scrollFactorY | 0)));
          this.isAnimated && this.updateAnimation(c)
        },
        getBitmap: function() {
          return this.bgChild
        },
        __class__: ae
      });
      var Tc = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.a = a;
        this.r = b;
        this.g = c;
        this.b = d
      };
      k["com.stencyl.utils.ARGB"] = Tc;
      Tc.__name__ = "com.stencyl.utils.ARGB";
      Tc.setARGBi = function(a, b, c, d) {
        return (a &
          255) << 24 | (b & 255) << 16 | (c & 255) << 8 | d & 255
      };
      Tc.setARGBf = function(a, b, c, d) {
        a = 255 * (0 > a ? 0 : 1 < a ? 1 : a);
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        c = 255 * (0 > c ? 0 : 1 < c ? 1 : c);
        d = 255 * (0 > d ? 0 : 1 < d ? 1 : d);
        return (((0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0) & 255) << 24 | (((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) & 255) << 16 | (((0 < c ? c + .5 : 0 > c ? c - .5 : 0) | 0) & 255) << 8 | ((0 < d ? d + .5 : 0 > d ? d - .5 : 0) | 0) & 255
      };
      Tc.toARGB = function(a) {
        return new Tc(.00392156862745098 * (a >>> 24), .00392156862745098 * (a >>> 16 & 255), .00392156862745098 * (a >>> 8 & 255), .00392156862745098 * (a & 255))
      };
      Tc.getRGB = function(a) {
        return a & 16777215
      };
      Tc.setRGB =
        function(a, b, c, d) {
          return b << 16 | c << 8 | d | a & -16777216
        };
      Tc.getA = function(a) {
        return a >>> 24
      };
      Tc.getAf = function(a) {
        return .00392156862745098 * (a >>> 24)
      };
      Tc.getR = function(a) {
        return a >>> 16 & 255
      };
      Tc.getRf = function(a) {
        return .00392156862745098 * (a >>> 16 & 255)
      };
      Tc.getG = function(a) {
        return a >>> 8 & 255
      };
      Tc.getGf = function(a) {
        return .00392156862745098 * (a >>> 8 & 255)
      };
      Tc.getB = function(a) {
        return a & 255
      };
      Tc.getBf = function(a) {
        return .00392156862745098 * (a & 255)
      };
      Tc.setA = function(a, b) {
        return b << 24 | a & 16777215
      };
      Tc.setAf = function(a, b) {
        b = 255 *
          (0 > b ? 0 : 1 < b ? 1 : b);
        return ((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) << 24 | a & 16777215
      };
      Tc.setR = function(a, b) {
        return (b & 255) << 16 | a & -16711681
      };
      Tc.setRf = function(a, b) {
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        return (((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) & 255) << 16 | a & -16711681
      };
      Tc.setG = function(a, b) {
        return b << 8 | a & -65281
      };
      Tc.setGf = function(a, b) {
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        return ((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) << 8 | a & -65281
      };
      Tc.setB = function(a, b) {
        return b | a & -256
      };
      Tc.setBf = function(a, b) {
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        return (0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0 | a & -256
      };
      Tc.prototype = {
        a: null,
        r: null,
        g: null,
        b: null,
        set: function(a, b, c, d) {
          this.a = a;
          this.r = b;
          this.g = c;
          this.b = d
        },
        lerp: function(a, b, c) {
          c.a = this.a + (a.a - this.a) * b;
          c.r = this.r + (a.r - this.r) * b;
          c.g = this.g + (a.g - this.g) * b;
          c.b = this.b + (a.b - this.b) * b
        },
        getA8: function() {
          var a = 255 * this.a;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        getR8: function() {
          var a = 255 * this.r;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        getG8: function() {
          var a = 255 * this.g;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        getB8: function() {
          var a = 255 * this.b;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        get24: function() {
          var a = 255 * this.r,
            b = 255 * this.g,
            c = 255 * this.b;
          return ((0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0) << 16 | ((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) << 8 | (0 < c ? c + .5 : 0 > c ? c - .5 : 0) | 0
        },
        set24: function(a, b, c) {
          this.a = this.a;
          this.r = .00392156862745098 * (a & 255);
          this.g = .00392156862745098 * (b & 255);
          this.b = .00392156862745098 * (c & 255)
        },
        get32: function() {
          var a = 255 * this.a,
            b = 255 * this.r,
            c = 255 * this.g,
            d = 255 * this.b;
          return ((0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0) << 24 | ((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) << 16 | ((0 < c ? c + .5 : 0 > c ? c - .5 : 0) | 0) << 8 | (0 < d ? d + .5 : 0 > d ? d - .5 : 0) | 0
        },
        set32: function(a, b, c, d) {
          this.a = .00392156862745098 * (a & 255);
          this.r = .00392156862745098 *
            (b & 255);
          this.g = .00392156862745098 * (c & 255);
          this.b = .00392156862745098 * (d & 255)
        },
        copy: function(a) {
          a.a = this.a;
          a.r = this.r;
          a.g = this.g;
          a.b = this.b;
          return a
        },
        __class__: Tc
      };
      var Uh = O["com.stencyl.utils.ColorDeficiencyTypes"] = {
        __ename__: "com.stencyl.utils.ColorDeficiencyTypes",
        __constructs__: null,
        Protanopia: {
          _hx_name: "Protanopia",
          _hx_index: 0,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Protanomaly: {
          _hx_name: "Protanomaly",
          _hx_index: 1,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Deuteranopia: {
          _hx_name: "Deuteranopia",
          _hx_index: 2,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Deuteranomaly: {
          _hx_name: "Deuteranomaly",
          _hx_index: 3,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Tritanopia: {
          _hx_name: "Tritanopia",
          _hx_index: 4,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Tritanomaly: {
          _hx_name: "Tritanomaly",
          _hx_index: 5,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Achromatopsia: {
          _hx_name: "Achromatopsia",
          _hx_index: 6,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        },
        Achromatomaly: {
          _hx_name: "Achromatomaly",
          _hx_index: 7,
          __enum__: "com.stencyl.utils.ColorDeficiencyTypes",
          toString: v
        }
      };
      Uh.__constructs__ = [Uh.Protanopia, Uh.Protanomaly, Uh.Deuteranopia, Uh.Deuteranomaly, Uh.Tritanopia, Uh.Tritanomaly, Uh.Achromatopsia, Uh.Achromatomaly];
      var $a = function() {
        this.identity();
        this.matrix = []
      };
      k["com.stencyl.utils.ColorMatrix"] = $a;
      $a.__name__ = "com.stencyl.utils.ColorMatrix";
      $a.mulMatrixMatrix = function(a, b, c) {
        var d = a.m11,
          e = a.m12,
          f = a.m13,
          g = a.m14;
        c.m11 = a.m11 * b.m11 + a.m12 * b.m21 +
          a.m13 * b.m31 + a.m14 * b.m41;
        c.m12 = d * b.m12 + a.m12 * b.m22 + a.m13 * b.m32 + a.m14 * b.m42;
        c.m13 = d * b.m13 + e * b.m23 + a.m13 * b.m33 + a.m14 * b.m43;
        c.m14 = d * b.m14 + e * b.m24 + f * b.m34 + a.m14 * b.m44;
        c.m15 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
        d = a.m21;
        e = a.m22;
        f = a.m23;
        g = a.m24;
        c.m21 = a.m21 * b.m11 + a.m22 * b.m21 + a.m23 * b.m31 + a.m24 * b.m41;
        c.m22 = d * b.m12 + a.m22 * b.m22 + a.m23 * b.m32 + a.m24 * b.m42;
        c.m23 = d * b.m13 + e * b.m23 + a.m23 * b.m33 + a.m24 * b.m43;
        c.m24 = d * b.m14 + e * b.m24 + f * b.m34 + a.m24 * b.m44;
        c.m25 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
        d = a.m31;
        e = a.m32;
        f = a.m33;
        g = a.m34;
        c.m31 = a.m31 *
          b.m11 + a.m32 * b.m21 + a.m33 * b.m31 + a.m34 * b.m41;
        c.m32 = d * b.m12 + a.m32 * b.m22 + a.m33 * b.m32 + a.m34 * b.m42;
        c.m33 = d * b.m13 + e * b.m23 + a.m33 * b.m33 + a.m34 * b.m43;
        c.m34 = d * b.m14 + e * b.m24 + f * b.m34 + a.m34 * b.m44;
        c.m35 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
        d = a.m41;
        e = a.m42;
        f = a.m43;
        g = a.m44;
        c.m41 = a.m41 * b.m11 + a.m42 * b.m21 + a.m43 * b.m31 + a.m44 * b.m41;
        c.m42 = d * b.m12 + a.m42 * b.m22 + a.m43 * b.m32 + a.m44 * b.m42;
        c.m43 = d * b.m13 + e * b.m23 + a.m43 * b.m33 + a.m44 * b.m43;
        c.m44 = d * b.m14 + e * b.m24 + f * b.m34 + a.m44 * b.m44;
        c.m45 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
        return c
      };
      $a.blendMatrixMatrix =
        function(a, b, c, d) {
          var e = 1 - d;
          c.m11 = e * a.m11 + d * b.m11;
          c.m12 = e * a.m12 + d * b.m12;
          c.m13 = e * a.m13 + d * b.m13;
          c.m14 = e * a.m14 + d * b.m14;
          c.m15 = e * a.m15 + d * b.m15;
          c.m21 = e * a.m21 + d * b.m21;
          c.m22 = e * a.m22 + d * b.m22;
          c.m23 = e * a.m23 + d * b.m23;
          c.m24 = e * a.m24 + d * b.m24;
          c.m25 = e * a.m25 + d * b.m25;
          c.m31 = e * a.m31 + d * b.m31;
          c.m32 = e * a.m32 + d * b.m32;
          c.m33 = e * a.m33 + d * b.m33;
          c.m34 = e * a.m34 + d * b.m34;
          c.m35 = e * a.m35 + d * b.m35;
          c.m41 = e * a.m41 + d * b.m41;
          c.m42 = e * a.m42 + d * b.m42;
          c.m43 = e * a.m43 + d * b.m43;
          c.m44 = e * a.m44 + d * b.m44;
          c.m45 = e * a.m45 + d * b.m45;
          return c
        };
      $a.prototype = {
        m11: null,
        m12: null,
        m13: null,
        m14: null,
        m15: null,
        m21: null,
        m22: null,
        m23: null,
        m24: null,
        m25: null,
        m31: null,
        m32: null,
        m33: null,
        m34: null,
        m35: null,
        m41: null,
        m42: null,
        m43: null,
        m44: null,
        m45: null,
        matrix: null,
        preHue: null,
        postHue: null,
        hueInitialized: null,
        getFilter: function() {
          var a = this.matrix;
          a[0] = this.m11;
          a[1] = this.m12;
          a[2] = this.m13;
          a[3] = this.m14;
          a[4] = this.m15;
          a[5] = this.m21;
          a[6] = this.m22;
          a[7] = this.m23;
          a[8] = this.m24;
          a[9] = this.m25;
          a[10] = this.m31;
          a[11] = this.m32;
          a[12] = this.m33;
          a[13] = this.m34;
          a[14] = this.m35;
          a[15] = this.m41;
          a[16] =
            this.m42;
          a[17] = this.m43;
          a[18] = this.m44;
          a[19] = this.m45;
          return new gg(this.matrix)
        },
        identity: function() {
          this.m11 = 1;
          this.m21 = this.m15 = this.m14 = this.m13 = this.m12 = 0;
          this.m22 = 1;
          this.m32 = this.m31 = this.m25 = this.m24 = this.m23 = 0;
          this.m33 = 1;
          this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
          this.m44 = 1;
          this.m45 = 0;
          return this
        },
        invert: function() {
          var a = this.m11,
            b = this.m12,
            c = this.m13,
            d = this.m14;
          this.m11 = -1 * this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * a + -1 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * a + 0 * b + -1 * this.m13 +
            0 * this.m14;
          this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
          this.m15 = 255 * a + 255 * b + 255 * c + 0 * d;
          a = this.m21;
          b = this.m22;
          c = this.m23;
          d = this.m24;
          this.m21 = -1 * this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * a + -1 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * a + 0 * b + -1 * this.m23 + 0 * this.m24;
          this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
          this.m25 = 255 * a + 255 * b + 255 * c + 0 * d;
          a = this.m31;
          b = this.m32;
          c = this.m33;
          d = this.m34;
          this.m31 = -1 * this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * a + -1 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * a + 0 * b + -1 * this.m33 + 0 * this.m34;
          this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
          this.m35 = 255 * a + 255 * b + 255 * c + 0 * d;
          a = this.m41;
          b = this.m42;
          c = this.m43;
          d = this.m44;
          this.m41 = -1 * this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * a + -1 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * a + 0 * b + -1 * this.m43 + 0 * this.m44;
          this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
          this.m45 = 255 * a + 255 * b + 255 * c + 0 * d;
          return this
        },
        adjustSaturation: function(a) {
          var b = 1 - a,
            c = b * $a.LUMA_R,
            d = b * $a.LUMA_G;
          b *= $a.LUMA_B;
          var e = c + a,
            f = d + a;
          a = b + a;
          var g = this.m11,
            h = this.m12,
            m = this.m13,
            l = this.m14;
          this.m11 = this.m11 * e + this.m12 * c +
            this.m13 * c + 0 * this.m14;
          this.m12 = g * d + this.m12 * f + this.m13 * d + 0 * this.m14;
          this.m13 = g * b + h * b + this.m13 * a + 0 * this.m14;
          this.m14 = 0 * g + 0 * h + 0 * m + this.m14;
          this.m15 = 0 * g + 0 * h + 0 * m + 0 * l;
          g = this.m21;
          h = this.m22;
          m = this.m23;
          l = this.m24;
          this.m21 = this.m21 * e + this.m22 * c + this.m23 * c + 0 * this.m24;
          this.m22 = g * d + this.m22 * f + this.m23 * d + 0 * this.m24;
          this.m23 = g * b + h * b + this.m23 * a + 0 * this.m24;
          this.m24 = 0 * g + 0 * h + 0 * m + this.m24;
          this.m25 = 0 * g + 0 * h + 0 * m + 0 * l;
          g = this.m31;
          h = this.m32;
          m = this.m33;
          l = this.m34;
          this.m31 = this.m31 * e + this.m32 * c + this.m33 * c + 0 * this.m34;
          this.m32 =
            g * d + this.m32 * f + this.m33 * d + 0 * this.m34;
          this.m33 = g * b + h * b + this.m33 * a + 0 * this.m34;
          this.m34 = 0 * g + 0 * h + 0 * m + this.m34;
          this.m35 = 0 * g + 0 * h + 0 * m + 0 * l;
          g = this.m41;
          h = this.m42;
          m = this.m43;
          l = this.m44;
          this.m41 = this.m41 * e + this.m42 * c + this.m43 * c + 0 * this.m44;
          this.m42 = g * d + this.m42 * f + this.m43 * d + 0 * this.m44;
          this.m43 = g * b + h * b + this.m43 * a + 0 * this.m44;
          this.m44 = 0 * g + 0 * h + 0 * m + this.m44;
          this.m45 = 0 * g + 0 * h + 0 * m + 0 * l;
          return this
        },
        adjustBrightness: function(a) {
          this.adjustBrightnessRGB(a, a, a);
          return this
        },
        adjustBrightnessRGB: function(a, b, c) {
          a *= 255;
          b *=
            255;
          c *= 255;
          var d = this.m11,
            e = this.m12,
            f = this.m13,
            g = this.m14;
          this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * d + this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * d + 0 * e + this.m13 + 0 * this.m14;
          this.m14 = 0 * d + 0 * e + 0 * f + this.m14;
          this.m15 = d * a + e * b + f * c + 0 * g;
          d = this.m21;
          e = this.m22;
          f = this.m23;
          g = this.m24;
          this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * d + this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * d + 0 * e + this.m23 + 0 * this.m24;
          this.m24 = 0 * d + 0 * e + 0 * f + this.m24;
          this.m25 = d * a + e * b + f * c + 0 * g;
          d = this.m31;
          e = this.m32;
          f =
            this.m33;
          g = this.m34;
          this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * d + this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * d + 0 * e + this.m33 + 0 * this.m34;
          this.m34 = 0 * d + 0 * e + 0 * f + this.m34;
          this.m35 = d * a + e * b + f * c + 0 * g;
          d = this.m41;
          e = this.m42;
          f = this.m43;
          g = this.m44;
          this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * d + this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * d + 0 * e + this.m43 + 0 * this.m44;
          this.m44 = 0 * d + 0 * e + 0 * f + this.m44;
          this.m45 = d * a + e * b + f * c + 0 * g;
          return this
        },
        adjustContrast: function(a) {
          this.adjustContrastRGB(a,
            a, a);
          return this
        },
        adjustContrastRGB: function(a, b, c) {
          a += 1;
          b += 1;
          c += 1;
          var d = 128 * (1 - a),
            e = 128 * (1 - b),
            f = 128 * (1 - c),
            g = this.m11,
            h = this.m12,
            m = this.m13,
            l = this.m14;
          this.m11 = this.m11 * a + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * g + this.m12 * b + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * g + 0 * h + this.m13 * c + 0 * this.m14;
          this.m14 = 0 * g + 0 * h + 0 * m + this.m14;
          this.m15 = g * d + h * e + m * f + 0 * l;
          g = this.m21;
          h = this.m22;
          m = this.m23;
          l = this.m24;
          this.m21 = this.m21 * a + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * g + this.m22 * b + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * g + 0 *
            h + this.m23 * c + 0 * this.m24;
          this.m24 = 0 * g + 0 * h + 0 * m + this.m24;
          this.m25 = g * d + h * e + m * f + 0 * l;
          g = this.m31;
          h = this.m32;
          m = this.m33;
          l = this.m34;
          this.m31 = this.m31 * a + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * g + this.m32 * b + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * g + 0 * h + this.m33 * c + 0 * this.m34;
          this.m34 = 0 * g + 0 * h + 0 * m + this.m34;
          this.m35 = g * d + h * e + m * f + 0 * l;
          g = this.m41;
          h = this.m42;
          m = this.m43;
          l = this.m44;
          this.m41 = this.m41 * a + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * g + this.m42 * b + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * g + 0 * h + this.m43 * c + 0 * this.m44;
          this.m44 =
            0 * g + 0 * h + 0 * m + this.m44;
          this.m45 = g * d + h * e + m * f + 0 * l;
          return this
        },
        adjustHue: function(a) {
          a *= .01745329251994278;
          var b = Math.cos(a),
            c = Math.sin(a);
          a = $a.LUMA_R + b * (1 - $a.LUMA_R) + c * -$a.LUMA_R;
          var d = $a.LUMA_G + b * -$a.LUMA_G + c * -$a.LUMA_G,
            e = $a.LUMA_B + b * -$a.LUMA_B + c * (1 - $a.LUMA_B),
            f = $a.LUMA_R + b * -$a.LUMA_R + .143 * c,
            g = $a.LUMA_G + b * (1 - $a.LUMA_G) + .14 * c,
            h = $a.LUMA_B + b * -$a.LUMA_B + -.283 * c,
            m = $a.LUMA_R + b * -$a.LUMA_R + c * -(1 - $a.LUMA_R),
            l = $a.LUMA_G + b * -$a.LUMA_G + c * $a.LUMA_G;
          b = $a.LUMA_B + b * (1 - $a.LUMA_B) + c * $a.LUMA_B;
          c = this.m11;
          var y = this.m12,
            n = this.m13,
            p = this.m14;
          this.m11 = this.m11 * a + this.m12 * f + this.m13 * m + 0 * this.m14;
          this.m12 = c * d + this.m12 * g + this.m13 * l + 0 * this.m14;
          this.m13 = c * e + y * h + this.m13 * b + 0 * this.m14;
          this.m14 = 0 * c + 0 * y + 0 * n + this.m14;
          this.m15 = 0 * c + 0 * y + 0 * n + 0 * p;
          c = this.m21;
          y = this.m22;
          n = this.m23;
          p = this.m24;
          this.m21 = this.m21 * a + this.m22 * f + this.m23 * m + 0 * this.m24;
          this.m22 = c * d + this.m22 * g + this.m23 * l + 0 * this.m24;
          this.m23 = c * e + y * h + this.m23 * b + 0 * this.m24;
          this.m24 = 0 * c + 0 * y + 0 * n + this.m24;
          this.m25 = 0 * c + 0 * y + 0 * n + 0 * p;
          c = this.m31;
          y = this.m32;
          n = this.m33;
          p = this.m34;
          this.m31 =
            this.m31 * a + this.m32 * f + this.m33 * m + 0 * this.m34;
          this.m32 = c * d + this.m32 * g + this.m33 * l + 0 * this.m34;
          this.m33 = c * e + y * h + this.m33 * b + 0 * this.m34;
          this.m34 = 0 * c + 0 * y + 0 * n + this.m34;
          this.m35 = 0 * c + 0 * y + 0 * n + 0 * p;
          c = this.m41;
          y = this.m42;
          n = this.m43;
          p = this.m44;
          this.m41 = this.m41 * a + this.m42 * f + this.m43 * m + 0 * this.m44;
          this.m42 = c * d + this.m42 * g + this.m43 * l + 0 * this.m44;
          this.m43 = c * e + y * h + this.m43 * b + 0 * this.m44;
          this.m44 = 0 * c + 0 * y + 0 * n + this.m44;
          this.m45 = 0 * c + 0 * y + 0 * n + 0 * p;
          return this
        },
        luminance2Alpha: function() {
          var a = $a.LUMA_R,
            b = $a.LUMA_G,
            c = $a.LUMA_B,
            d = this.m11,
            e = this.m12,
            f = this.m13,
            g = this.m14;
          this.m11 = 0 * this.m11 + 0 * this.m12 + 0 * this.m13 + this.m14 * a;
          this.m12 = 0 * d + 0 * this.m12 + 0 * this.m13 + this.m14 * b;
          this.m13 = 0 * d + 0 * e + 0 * this.m13 + this.m14 * c;
          this.m14 = 0 * d + 0 * e + 0 * f + 0 * this.m14;
          this.m15 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m21;
          e = this.m22;
          f = this.m23;
          g = this.m24;
          this.m21 = 0 * this.m21 + 0 * this.m22 + 0 * this.m23 + this.m24 * a;
          this.m22 = 0 * d + 0 * this.m22 + 0 * this.m23 + this.m24 * b;
          this.m23 = 0 * d + 0 * e + 0 * this.m23 + this.m24 * c;
          this.m24 = 0 * d + 0 * e + 0 * f + 0 * this.m24;
          this.m25 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m31;
          e = this.m32;
          f = this.m33;
          g = this.m34;
          this.m31 = 0 * this.m31 + 0 * this.m32 + 0 * this.m33 + this.m34 * a;
          this.m32 = 0 * d + 0 * this.m32 + 0 * this.m33 + this.m34 * b;
          this.m33 = 0 * d + 0 * e + 0 * this.m33 + this.m34 * c;
          this.m34 = 0 * d + 0 * e + 0 * f + 0 * this.m34;
          this.m35 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m41;
          e = this.m42;
          f = this.m43;
          g = this.m44;
          this.m41 = 0 * this.m41 + 0 * this.m42 + 0 * this.m43 + this.m44 * a;
          this.m42 = 0 * d + 0 * this.m42 + 0 * this.m43 + this.m44 * b;
          this.m43 = 0 * d + 0 * e + 0 * this.m43 + this.m44 * c;
          this.m44 = 0 * d + 0 * e + 0 * f + 0 * this.m44;
          this.m45 = 255 * d + 255 * e + 255 * f + 0 * g;
          return this
        },
        adjustAlphaContrast: function(a) {
          a +=
            1;
          var b = 128 * (1 - a),
            c = this.m11,
            d = this.m12,
            e = this.m13,
            f = this.m14;
          this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * c + this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * c + 0 * d + this.m13 + 0 * this.m14;
          this.m14 = 0 * c + 0 * d + 0 * e + this.m14 * a;
          this.m15 = 0 * c + 0 * d + 0 * e + f * b;
          c = this.m21;
          d = this.m22;
          e = this.m23;
          f = this.m24;
          this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * c + this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * c + 0 * d + this.m23 + 0 * this.m24;
          this.m24 = 0 * c + 0 * d + 0 * e + this.m24 * a;
          this.m25 = 0 * c + 0 * d + 0 * e + f * b;
          c = this.m31;
          d = this.m32;
          e = this.m33;
          f = this.m34;
          this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * c + this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * c + 0 * d + this.m33 + 0 * this.m34;
          this.m34 = 0 * c + 0 * d + 0 * e + this.m34 * a;
          this.m35 = 0 * c + 0 * d + 0 * e + f * b;
          c = this.m41;
          d = this.m42;
          e = this.m43;
          f = this.m44;
          this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * c + this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * c + 0 * d + this.m43 + 0 * this.m44;
          this.m44 = 0 * c + 0 * d + 0 * e + this.m44 * a;
          this.m45 = 0 * c + 0 * d + 0 * e + f * b;
          return this
        },
        colorize: function(a, b) {
          null == b && (b = 1);
          var c =
            .00392156862745098 * (a >>> 16 & 255),
            d = .00392156862745098 * (a >>> 8 & 255),
            e = .00392156862745098 * (a & 255),
            f = 1 - b;
          a = f + b * c * $a.LUMA_R;
          var g = b * c * $a.LUMA_G;
          c = b * c * $a.LUMA_B;
          var h = b * d * $a.LUMA_R,
            m = f + b * d * $a.LUMA_G;
          d = b * d * $a.LUMA_B;
          var l = b * e * $a.LUMA_R,
            y = b * e * $a.LUMA_G;
          b = f + b * e * $a.LUMA_B;
          e = this.m11;
          f = this.m12;
          var n = this.m13,
            p = this.m14;
          this.m11 = this.m11 * a + this.m12 * h + this.m13 * l + 0 * this.m14;
          this.m12 = e * g + this.m12 * m + this.m13 * y + 0 * this.m14;
          this.m13 = e * c + f * d + this.m13 * b + 0 * this.m14;
          this.m14 = 0 * e + 0 * f + 0 * n + this.m14;
          this.m15 = 0 * e + 0 * f + 0 * n + 0 *
            p;
          e = this.m21;
          f = this.m22;
          n = this.m23;
          p = this.m24;
          this.m21 = this.m21 * a + this.m22 * h + this.m23 * l + 0 * this.m24;
          this.m22 = e * g + this.m22 * m + this.m23 * y + 0 * this.m24;
          this.m23 = e * c + f * d + this.m23 * b + 0 * this.m24;
          this.m24 = 0 * e + 0 * f + 0 * n + this.m24;
          this.m25 = 0 * e + 0 * f + 0 * n + 0 * p;
          e = this.m31;
          f = this.m32;
          n = this.m33;
          p = this.m34;
          this.m31 = this.m31 * a + this.m32 * h + this.m33 * l + 0 * this.m34;
          this.m32 = e * g + this.m32 * m + this.m33 * y + 0 * this.m34;
          this.m33 = e * c + f * d + this.m33 * b + 0 * this.m34;
          this.m34 = 0 * e + 0 * f + 0 * n + this.m34;
          this.m35 = 0 * e + 0 * f + 0 * n + 0 * p;
          e = this.m41;
          f = this.m42;
          n = this.m43;
          p = this.m44;
          this.m41 = this.m41 * a + this.m42 * h + this.m43 * l + 0 * this.m44;
          this.m42 = e * g + this.m42 * m + this.m43 * y + 0 * this.m44;
          this.m43 = e * c + f * d + this.m43 * b + 0 * this.m44;
          this.m44 = 0 * e + 0 * f + 0 * n + this.m44;
          this.m45 = 0 * e + 0 * f + 0 * n + 0 * p;
          return this
        },
        rotateHue: function(a) {
          if (!this.hueInitialized) {
            this.hueInitialized = !0;
            this.preHue = new $a;
            this.preHue.rotateRed(45);
            this.preHue.rotateGreen(-39.182655);
            var b = [];
            b[0] = $a.LUMA_R2;
            b[1] = $a.LUMA_G2;
            b[2] = $a.LUMA_B2;
            b[3] = 1;
            this.preHue.transformVector(b);
            var c = b[0] / b[2];
            b = b[1] / b[2];
            this.preHue.shearBlue(c,
              b);
            this.postHue = new $a;
            this.postHue.shearBlue(-c, -b);
            this.postHue.rotateGreen(39.182655);
            this.postHue.rotateRed(-45)
          }
          c = this.preHue;
          b = this.m11;
          var d = this.m12,
            e = this.m13,
            f = this.m14;
          this.m11 = this.m11 * c.m11 + this.m12 * c.m21 + this.m13 * c.m31 + this.m14 * c.m41;
          this.m12 = b * c.m12 + this.m12 * c.m22 + this.m13 * c.m32 + this.m14 * c.m42;
          this.m13 = b * c.m13 + d * c.m23 + this.m13 * c.m33 + this.m14 * c.m43;
          this.m14 = b * c.m14 + d * c.m24 + e * c.m34 + this.m14 * c.m44;
          this.m15 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          b = this.m21;
          d = this.m22;
          e = this.m23;
          f = this.m24;
          this.m21 =
            this.m21 * c.m11 + this.m22 * c.m21 + this.m23 * c.m31 + this.m24 * c.m41;
          this.m22 = b * c.m12 + this.m22 * c.m22 + this.m23 * c.m32 + this.m24 * c.m42;
          this.m23 = b * c.m13 + d * c.m23 + this.m23 * c.m33 + this.m24 * c.m43;
          this.m24 = b * c.m14 + d * c.m24 + e * c.m34 + this.m24 * c.m44;
          this.m25 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          b = this.m31;
          d = this.m32;
          e = this.m33;
          f = this.m34;
          this.m31 = this.m31 * c.m11 + this.m32 * c.m21 + this.m33 * c.m31 + this.m34 * c.m41;
          this.m32 = b * c.m12 + this.m32 * c.m22 + this.m33 * c.m32 + this.m34 * c.m42;
          this.m33 = b * c.m13 + d * c.m23 + this.m33 * c.m33 + this.m34 * c.m43;
          this.m34 =
            b * c.m14 + d * c.m24 + e * c.m34 + this.m34 * c.m44;
          this.m35 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          b = this.m41;
          d = this.m42;
          e = this.m43;
          f = this.m44;
          this.m41 = this.m41 * c.m11 + this.m42 * c.m21 + this.m43 * c.m31 + this.m44 * c.m41;
          this.m42 = b * c.m12 + this.m42 * c.m22 + this.m43 * c.m32 + this.m44 * c.m42;
          this.m43 = b * c.m13 + d * c.m23 + this.m43 * c.m33 + this.m44 * c.m43;
          this.m44 = b * c.m14 + d * c.m24 + e * c.m34 + this.m44 * c.m44;
          this.m45 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          this.rotateBlue(a);
          c = this.postHue;
          b = this.m11;
          d = this.m12;
          e = this.m13;
          f = this.m14;
          this.m11 = this.m11 * c.m11 +
            this.m12 * c.m21 + this.m13 * c.m31 + this.m14 * c.m41;
          this.m12 = b * c.m12 + this.m12 * c.m22 + this.m13 * c.m32 + this.m14 * c.m42;
          this.m13 = b * c.m13 + d * c.m23 + this.m13 * c.m33 + this.m14 * c.m43;
          this.m14 = b * c.m14 + d * c.m24 + e * c.m34 + this.m14 * c.m44;
          this.m15 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          b = this.m21;
          d = this.m22;
          e = this.m23;
          f = this.m24;
          this.m21 = this.m21 * c.m11 + this.m22 * c.m21 + this.m23 * c.m31 + this.m24 * c.m41;
          this.m22 = b * c.m12 + this.m22 * c.m22 + this.m23 * c.m32 + this.m24 * c.m42;
          this.m23 = b * c.m13 + d * c.m23 + this.m23 * c.m33 + this.m24 * c.m43;
          this.m24 = b * c.m14 + d * c.m24 +
            e * c.m34 + this.m24 * c.m44;
          this.m25 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          b = this.m31;
          d = this.m32;
          e = this.m33;
          f = this.m34;
          this.m31 = this.m31 * c.m11 + this.m32 * c.m21 + this.m33 * c.m31 + this.m34 * c.m41;
          this.m32 = b * c.m12 + this.m32 * c.m22 + this.m33 * c.m32 + this.m34 * c.m42;
          this.m33 = b * c.m13 + d * c.m23 + this.m33 * c.m33 + this.m34 * c.m43;
          this.m34 = b * c.m14 + d * c.m24 + e * c.m34 + this.m34 * c.m44;
          this.m35 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          b = this.m41;
          d = this.m42;
          e = this.m43;
          f = this.m44;
          this.m41 = this.m41 * c.m11 + this.m42 * c.m21 + this.m43 * c.m31 + this.m44 * c.m41;
          this.m42 =
            b * c.m12 + this.m42 * c.m22 + this.m43 * c.m32 + this.m44 * c.m42;
          this.m43 = b * c.m13 + d * c.m23 + this.m43 * c.m33 + this.m44 * c.m43;
          this.m44 = b * c.m14 + d * c.m24 + e * c.m34 + this.m44 * c.m44;
          this.m45 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
          return this
        },
        setChannels: function(a, b, c, d) {
          null == d && (d = 8);
          null == c && (c = 4);
          null == b && (b = 2);
          null == a && (a = 1);
          var e = (1 == (a & 1) ? 1 : 0) + (2 == (a & 2) ? 1 : 0) + (4 == (a & 4) ? 1 : 0) + (8 == (a & 8) ? 1 : 0);
          0 < e && (e = 1 / e);
          var f = (1 == (b & 1) ? 1 : 0) + (2 == (b & 2) ? 1 : 0) + (4 == (b & 4) ? 1 : 0) + (8 == (b & 8) ? 1 : 0);
          0 < f && (f = 1 / f);
          var g = (1 == (c & 1) ? 1 : 0) + (2 == (c & 2) ? 1 : 0) + (4 == (c &
            4) ? 1 : 0) + (8 == (c & 8) ? 1 : 0);
          0 < g && (g = 1 / g);
          var h = (1 == (d & 1) ? 1 : 0) + (2 == (d & 2) ? 1 : 0) + (4 == (d & 4) ? 1 : 0) + (8 == (d & 8) ? 1 : 0);
          0 < h && (h = 1 / h);
          var m = 1 == (a & 1) ? e : 0,
            l = 2 == (a & 2) ? e : 0,
            y = 4 == (a & 4) ? e : 0;
          a = 8 == (a & 8) ? e : 0;
          e = 1 == (b & 1) ? f : 0;
          var n = 2 == (b & 2) ? f : 0,
            p = 4 == (b & 4) ? f : 0;
          b = 8 == (b & 8) ? f : 0;
          f = 1 == (c & 1) ? g : 0;
          var k = 2 == (c & 2) ? g : 0,
            q = 4 == (c & 4) ? g : 0;
          c = 8 == (c & 8) ? g : 0;
          g = 1 == (d & 1) ? h : 0;
          var u = 2 == (d & 2) ? h : 0,
            v = 4 == (d & 4) ? h : 0;
          d = 8 == (d & 8) ? h : 0;
          h = this.m11;
          var T = this.m12,
            ja = this.m13,
            r = this.m14;
          this.m11 = this.m11 * m + this.m12 * e + this.m13 * f + this.m14 * g;
          this.m12 = h * l + this.m12 * n + this.m13 *
            k + this.m14 * u;
          this.m13 = h * y + T * p + this.m13 * q + this.m14 * v;
          this.m14 = h * a + T * b + ja * c + this.m14 * d;
          this.m15 = 0 * h + 0 * T + 0 * ja + 0 * r;
          h = this.m21;
          T = this.m22;
          ja = this.m23;
          r = this.m24;
          this.m21 = this.m21 * m + this.m22 * e + this.m23 * f + this.m24 * g;
          this.m22 = h * l + this.m22 * n + this.m23 * k + this.m24 * u;
          this.m23 = h * y + T * p + this.m23 * q + this.m24 * v;
          this.m24 = h * a + T * b + ja * c + this.m24 * d;
          this.m25 = 0 * h + 0 * T + 0 * ja + 0 * r;
          h = this.m31;
          T = this.m32;
          ja = this.m33;
          r = this.m34;
          this.m31 = this.m31 * m + this.m32 * e + this.m33 * f + this.m34 * g;
          this.m32 = h * l + this.m32 * n + this.m33 * k + this.m34 * u;
          this.m33 =
            h * y + T * p + this.m33 * q + this.m34 * v;
          this.m34 = h * a + T * b + ja * c + this.m34 * d;
          this.m35 = 0 * h + 0 * T + 0 * ja + 0 * r;
          h = this.m41;
          T = this.m42;
          ja = this.m43;
          r = this.m44;
          this.m41 = this.m41 * m + this.m42 * e + this.m43 * f + this.m44 * g;
          this.m42 = h * l + this.m42 * n + this.m43 * k + this.m44 * u;
          this.m43 = h * y + T * p + this.m43 * q + this.m44 * v;
          this.m44 = h * a + T * b + ja * c + this.m44 * d;
          this.m45 = 0 * h + 0 * T + 0 * ja + 0 * r;
          return this
        },
        average: function(a, b, c) {
          null == c && (c = .33333333);
          null == b && (b = .33333333);
          null == a && (a = .33333333);
          var d = this.m11,
            e = this.m12,
            f = this.m13,
            g = this.m14;
          this.m11 = this.m11 *
            a + this.m12 * a + this.m13 * a + 0 * this.m14;
          this.m12 = d * b + this.m12 * b + this.m13 * b + 0 * this.m14;
          this.m13 = d * c + e * c + this.m13 * c + 0 * this.m14;
          this.m14 = 0 * d + 0 * e + 0 * f + this.m14;
          this.m15 = 0 * d + 0 * e + 0 * f + 0 * g;
          d = this.m21;
          e = this.m22;
          f = this.m23;
          g = this.m24;
          this.m21 = this.m21 * a + this.m22 * a + this.m23 * a + 0 * this.m24;
          this.m22 = d * b + this.m22 * b + this.m23 * b + 0 * this.m24;
          this.m23 = d * c + e * c + this.m23 * c + 0 * this.m24;
          this.m24 = 0 * d + 0 * e + 0 * f + this.m24;
          this.m25 = 0 * d + 0 * e + 0 * f + 0 * g;
          d = this.m31;
          e = this.m32;
          f = this.m33;
          g = this.m34;
          this.m31 = this.m31 * a + this.m32 * a + this.m33 * a + 0 * this.m34;
          this.m32 = d * b + this.m32 * b + this.m33 * b + 0 * this.m34;
          this.m33 = d * c + e * c + this.m33 * c + 0 * this.m34;
          this.m34 = 0 * d + 0 * e + 0 * f + this.m34;
          this.m35 = 0 * d + 0 * e + 0 * f + 0 * g;
          d = this.m41;
          e = this.m42;
          f = this.m43;
          g = this.m44;
          this.m41 = this.m41 * a + this.m42 * a + this.m43 * a + 0 * this.m44;
          this.m42 = d * b + this.m42 * b + this.m43 * b + 0 * this.m44;
          this.m43 = d * c + e * c + this.m43 * c + 0 * this.m44;
          this.m44 = 0 * d + 0 * e + 0 * f + this.m44;
          this.m45 = 0 * d + 0 * e + 0 * f + 0 * g;
          return this
        },
        threshold: function(a, b) {
          null == b && (b = 256);
          var c = $a.LUMA_R * b,
            d = $a.LUMA_G * b,
            e = $a.LUMA_B * b,
            f = -b * a,
            g = $a.LUMA_R * b,
            h = $a.LUMA_G *
            b,
            m = $a.LUMA_B * b,
            l = -b * a,
            y = $a.LUMA_R * b,
            n = $a.LUMA_G * b,
            p = $a.LUMA_B * b;
          a *= -b;
          b = this.m11;
          var k = this.m12,
            q = this.m13,
            u = this.m14;
          this.m11 = this.m11 * c + this.m12 * g + this.m13 * y + 0 * this.m14;
          this.m12 = b * d + this.m12 * h + this.m13 * n + 0 * this.m14;
          this.m13 = b * e + k * m + this.m13 * p + 0 * this.m14;
          this.m14 = 0 * b + 0 * k + 0 * q + this.m14;
          this.m15 = b * f + k * l + q * a + 0 * u;
          b = this.m21;
          k = this.m22;
          q = this.m23;
          u = this.m24;
          this.m21 = this.m21 * c + this.m22 * g + this.m23 * y + 0 * this.m24;
          this.m22 = b * d + this.m22 * h + this.m23 * n + 0 * this.m24;
          this.m23 = b * e + k * m + this.m23 * p + 0 * this.m24;
          this.m24 =
            0 * b + 0 * k + 0 * q + this.m24;
          this.m25 = b * f + k * l + q * a + 0 * u;
          b = this.m31;
          k = this.m32;
          q = this.m33;
          u = this.m34;
          this.m31 = this.m31 * c + this.m32 * g + this.m33 * y + 0 * this.m34;
          this.m32 = b * d + this.m32 * h + this.m33 * n + 0 * this.m34;
          this.m33 = b * e + k * m + this.m33 * p + 0 * this.m34;
          this.m34 = 0 * b + 0 * k + 0 * q + this.m34;
          this.m35 = b * f + k * l + q * a + 0 * u;
          b = this.m41;
          k = this.m42;
          q = this.m43;
          u = this.m44;
          this.m41 = this.m41 * c + this.m42 * g + this.m43 * y + 0 * this.m44;
          this.m42 = b * d + this.m42 * h + this.m43 * n + 0 * this.m44;
          this.m43 = b * e + k * m + this.m43 * p + 0 * this.m44;
          this.m44 = 0 * b + 0 * k + 0 * q + this.m44;
          this.m45 =
            b * f + k * l + q * a + 0 * u;
          return this
        },
        desaturate: function() {
          var a = $a.LUMA_R,
            b = $a.LUMA_G,
            c = $a.LUMA_B,
            d = $a.LUMA_R,
            e = $a.LUMA_G,
            f = $a.LUMA_B,
            g = $a.LUMA_R,
            h = $a.LUMA_G,
            m = $a.LUMA_B,
            l = this.m11,
            y = this.m12,
            n = this.m13,
            p = this.m14;
          this.m11 = this.m11 * a + this.m12 * d + this.m13 * g + 0 * this.m14;
          this.m12 = l * b + this.m12 * e + this.m13 * h + 0 * this.m14;
          this.m13 = l * c + y * f + this.m13 * m + 0 * this.m14;
          this.m14 = 0 * l + 0 * y + 0 * n + this.m14;
          this.m15 = 0 * l + 0 * y + 0 * n + 0 * p;
          l = this.m21;
          y = this.m22;
          n = this.m23;
          p = this.m24;
          this.m21 = this.m21 * a + this.m22 * d + this.m23 * g + 0 * this.m24;
          this.m22 =
            l * b + this.m22 * e + this.m23 * h + 0 * this.m24;
          this.m23 = l * c + y * f + this.m23 * m + 0 * this.m24;
          this.m24 = 0 * l + 0 * y + 0 * n + this.m24;
          this.m25 = 0 * l + 0 * y + 0 * n + 0 * p;
          l = this.m31;
          y = this.m32;
          n = this.m33;
          p = this.m34;
          this.m31 = this.m31 * a + this.m32 * d + this.m33 * g + 0 * this.m34;
          this.m32 = l * b + this.m32 * e + this.m33 * h + 0 * this.m34;
          this.m33 = l * c + y * f + this.m33 * m + 0 * this.m34;
          this.m34 = 0 * l + 0 * y + 0 * n + this.m34;
          this.m35 = 0 * l + 0 * y + 0 * n + 0 * p;
          l = this.m41;
          y = this.m42;
          n = this.m43;
          p = this.m44;
          this.m41 = this.m41 * a + this.m42 * d + this.m43 * g + 0 * this.m44;
          this.m42 = l * b + this.m42 * e + this.m43 * h + 0 *
            this.m44;
          this.m43 = l * c + y * f + this.m43 * m + 0 * this.m44;
          this.m44 = 0 * l + 0 * y + 0 * n + this.m44;
          this.m45 = 0 * l + 0 * y + 0 * n + 0 * p;
          return this
        },
        setMultiplicators: function(a, b, c, d) {
          null == d && (d = 1);
          null == c && (c = 1);
          null == b && (b = 1);
          null == a && (a = 1);
          var e = this.m11,
            f = this.m12,
            g = this.m13,
            h = this.m14;
          this.m11 = this.m11 * a + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * e + this.m12 * b + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * e + 0 * f + this.m13 * c + 0 * this.m14;
          this.m14 = 0 * e + 0 * f + 0 * g + this.m14 * d;
          this.m15 = 0 * e + 0 * f + 0 * g + 0 * h;
          e = this.m21;
          f = this.m22;
          g = this.m23;
          h = this.m24;
          this.m21 =
            this.m21 * a + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * e + this.m22 * b + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * e + 0 * f + this.m23 * c + 0 * this.m24;
          this.m24 = 0 * e + 0 * f + 0 * g + this.m24 * d;
          this.m25 = 0 * e + 0 * f + 0 * g + 0 * h;
          e = this.m31;
          f = this.m32;
          g = this.m33;
          h = this.m34;
          this.m31 = this.m31 * a + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * e + this.m32 * b + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * e + 0 * f + this.m33 * c + 0 * this.m34;
          this.m34 = 0 * e + 0 * f + 0 * g + this.m34 * d;
          this.m35 = 0 * e + 0 * f + 0 * g + 0 * h;
          e = this.m41;
          f = this.m42;
          g = this.m43;
          h = this.m44;
          this.m41 = this.m41 * a + 0 * this.m42 + 0 *
            this.m43 + 0 * this.m44;
          this.m42 = 0 * e + this.m42 * b + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * e + 0 * f + this.m43 * c + 0 * this.m44;
          this.m44 = 0 * e + 0 * f + 0 * g + this.m44 * d;
          this.m45 = 0 * e + 0 * f + 0 * g + 0 * h;
          return this
        },
        clearChannels: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !1);
          null == b && (b = !1);
          null == a && (a = !1);
          a && (this.m11 = this.m12 = this.m13 = this.m14 = this.m15 = 0);
          b && (this.m21 = this.m22 = this.m23 = this.m24 = this.m25 = 0);
          c && (this.m31 = this.m32 = this.m33 = this.m34 = this.m35 = 0);
          d && (this.m41 = this.m42 = this.m43 = this.m44 = this.m45 = 0);
          return this
        },
        thresholdAlpha: function(a,
          b) {
          null == b && (b = 256);
          a *= -b;
          var c = this.m11,
            d = this.m12,
            e = this.m13,
            f = this.m14;
          this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * c + this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * c + 0 * d + this.m13 + 0 * this.m14;
          this.m14 = 0 * c + 0 * d + 0 * e + this.m14 * b;
          this.m15 = 0 * c + 0 * d + 0 * e + f * a;
          c = this.m21;
          d = this.m22;
          e = this.m23;
          f = this.m24;
          this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * c + this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * c + 0 * d + this.m23 + 0 * this.m24;
          this.m24 = 0 * c + 0 * d + 0 * e + this.m24 * b;
          this.m25 = 0 * c + 0 * d + 0 * e + f * a;
          c = this.m31;
          d = this.m32;
          e = this.m33;
          f = this.m34;
          this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * c + this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * c + 0 * d + this.m33 + 0 * this.m34;
          this.m34 = 0 * c + 0 * d + 0 * e + this.m34 * b;
          this.m35 = 0 * c + 0 * d + 0 * e + f * a;
          c = this.m41;
          d = this.m42;
          e = this.m43;
          f = this.m44;
          this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * c + this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * c + 0 * d + this.m43 + 0 * this.m44;
          this.m44 = 0 * c + 0 * d + 0 * e + this.m44 * b;
          this.m45 = 0 * c + 0 * d + 0 * e + f * a;
          return this
        },
        averageRGB2Alpha: function() {
          var a =
            $a.INV3,
            b = $a.INV3,
            c = $a.INV3,
            d = this.m11,
            e = this.m12,
            f = this.m13,
            g = this.m14;
          this.m11 = 0 * this.m11 + 0 * this.m12 + 0 * this.m13 + this.m14 * a;
          this.m12 = 0 * d + 0 * this.m12 + 0 * this.m13 + this.m14 * b;
          this.m13 = 0 * d + 0 * e + 0 * this.m13 + this.m14 * c;
          this.m14 = 0 * d + 0 * e + 0 * f + 0 * this.m14;
          this.m15 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m21;
          e = this.m22;
          f = this.m23;
          g = this.m24;
          this.m21 = 0 * this.m21 + 0 * this.m22 + 0 * this.m23 + this.m24 * a;
          this.m22 = 0 * d + 0 * this.m22 + 0 * this.m23 + this.m24 * b;
          this.m23 = 0 * d + 0 * e + 0 * this.m23 + this.m24 * c;
          this.m24 = 0 * d + 0 * e + 0 * f + 0 * this.m24;
          this.m25 = 255 * d +
            255 * e + 255 * f + 0 * g;
          d = this.m31;
          e = this.m32;
          f = this.m33;
          g = this.m34;
          this.m31 = 0 * this.m31 + 0 * this.m32 + 0 * this.m33 + this.m34 * a;
          this.m32 = 0 * d + 0 * this.m32 + 0 * this.m33 + this.m34 * b;
          this.m33 = 0 * d + 0 * e + 0 * this.m33 + this.m34 * c;
          this.m34 = 0 * d + 0 * e + 0 * f + 0 * this.m34;
          this.m35 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m41;
          e = this.m42;
          f = this.m43;
          g = this.m44;
          this.m41 = 0 * this.m41 + 0 * this.m42 + 0 * this.m43 + this.m44 * a;
          this.m42 = 0 * d + 0 * this.m42 + 0 * this.m43 + this.m44 * b;
          this.m43 = 0 * d + 0 * e + 0 * this.m43 + this.m44 * c;
          this.m44 = 0 * d + 0 * e + 0 * f + 0 * this.m44;
          this.m45 = 255 * d + 255 * e + 255 * f +
            0 * g;
          return this
        },
        invertAlpha: function() {
          var a = this.m11,
            b = this.m12,
            c = this.m13,
            d = this.m14;
          this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * a + this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * a + 0 * b + this.m13 + 0 * this.m14;
          this.m14 = 0 * a + 0 * b + 0 * c + -1 * this.m14;
          this.m15 = 0 * a + 0 * b + 0 * c + 255 * d;
          a = this.m21;
          b = this.m22;
          c = this.m23;
          d = this.m24;
          this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * a + this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * a + 0 * b + this.m23 + 0 * this.m24;
          this.m24 = 0 * a + 0 * b + 0 * c + -1 * this.m24;
          this.m25 = 0 * a +
            0 * b + 0 * c + 255 * d;
          a = this.m31;
          b = this.m32;
          c = this.m33;
          d = this.m34;
          this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * a + this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * a + 0 * b + this.m33 + 0 * this.m34;
          this.m34 = 0 * a + 0 * b + 0 * c + -1 * this.m34;
          this.m35 = 0 * a + 0 * b + 0 * c + 255 * d;
          a = this.m41;
          b = this.m42;
          c = this.m43;
          d = this.m44;
          this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * a + this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * a + 0 * b + this.m43 + 0 * this.m44;
          this.m44 = 0 * a + 0 * b + 0 * c + -1 * this.m44;
          this.m45 = 0 * a + 0 * b + 0 * c + 255 * d;
          return this
        },
        rgb2Alpha: function(a,
          b, c) {
          var d = this.m11,
            e = this.m12,
            f = this.m13,
            g = this.m14;
          this.m11 = 0 * this.m11 + 0 * this.m12 + 0 * this.m13 + this.m14 * a;
          this.m12 = 0 * d + 0 * this.m12 + 0 * this.m13 + this.m14 * b;
          this.m13 = 0 * d + 0 * e + 0 * this.m13 + this.m14 * c;
          this.m14 = 0 * d + 0 * e + 0 * f + 0 * this.m14;
          this.m15 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m21;
          e = this.m22;
          f = this.m23;
          g = this.m24;
          this.m21 = 0 * this.m21 + 0 * this.m22 + 0 * this.m23 + this.m24 * a;
          this.m22 = 0 * d + 0 * this.m22 + 0 * this.m23 + this.m24 * b;
          this.m23 = 0 * d + 0 * e + 0 * this.m23 + this.m24 * c;
          this.m24 = 0 * d + 0 * e + 0 * f + 0 * this.m24;
          this.m25 = 255 * d + 255 * e + 255 * f + 0 * g;
          d =
            this.m31;
          e = this.m32;
          f = this.m33;
          g = this.m34;
          this.m31 = 0 * this.m31 + 0 * this.m32 + 0 * this.m33 + this.m34 * a;
          this.m32 = 0 * d + 0 * this.m32 + 0 * this.m33 + this.m34 * b;
          this.m33 = 0 * d + 0 * e + 0 * this.m33 + this.m34 * c;
          this.m34 = 0 * d + 0 * e + 0 * f + 0 * this.m34;
          this.m35 = 255 * d + 255 * e + 255 * f + 0 * g;
          d = this.m41;
          e = this.m42;
          f = this.m43;
          g = this.m44;
          this.m41 = 0 * this.m41 + 0 * this.m42 + 0 * this.m43 + this.m44 * a;
          this.m42 = 0 * d + 0 * this.m42 + 0 * this.m43 + this.m44 * b;
          this.m43 = 0 * d + 0 * e + 0 * this.m43 + this.m44 * c;
          this.m44 = 0 * d + 0 * e + 0 * f + 0 * this.m44;
          this.m45 = 255 * d + 255 * e + 255 * f + 0 * g;
          return this
        },
        setAlpha: function(a) {
          var b = this.m11,
            c = this.m12,
            d = this.m13,
            e = this.m14;
          this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0 * b + this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m13 = 0 * b + 0 * c + this.m13 + 0 * this.m14;
          this.m14 = 0 * b + 0 * c + 0 * d + this.m14 * a;
          this.m15 = 0 * b + 0 * c + 0 * d + 0 * e;
          b = this.m21;
          c = this.m22;
          d = this.m23;
          e = this.m24;
          this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0 * b + this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m23 = 0 * b + 0 * c + this.m23 + 0 * this.m24;
          this.m24 = 0 * b + 0 * c + 0 * d + this.m24 * a;
          this.m25 = 0 * b + 0 * c + 0 * d + 0 * e;
          b = this.m31;
          c = this.m32;
          d = this.m33;
          e = this.m34;
          this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0 * b + this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m33 = 0 * b + 0 * c + this.m33 + 0 * this.m34;
          this.m34 = 0 * b + 0 * c + 0 * d + this.m34 * a;
          this.m35 = 0 * b + 0 * c + 0 * d + 0 * e;
          b = this.m41;
          c = this.m42;
          d = this.m43;
          e = this.m44;
          this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0 * b + this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m43 = 0 * b + 0 * c + this.m43 + 0 * this.m44;
          this.m44 = 0 * b + 0 * c + 0 * d + this.m44 * a;
          this.m45 = 0 * b + 0 * c + 0 * d + 0 * e;
          return this
        },
        rotateRed: function(a) {
          a *= .01745329251994278;
          var b = Math.cos(a);
          a = Math.cos(a);
          this.m11 = 1;
          this.m21 = this.m15 = this.m14 = this.m13 = this.m12 = 0;
          this.m22 = b;
          this.m23 = -a;
          this.m31 = this.m25 = this.m24 = 0;
          this.m32 = a;
          this.m33 = b;
          this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
          this.m44 = 1;
          this.m45 = 0;
          return this
        },
        rotateGreen: function(a) {
          a *= .01745329251994278;
          var b = Math.cos(a);
          a = Math.cos(a);
          this.m11 = b;
          this.m12 = 0;
          this.m13 = a;
          this.m21 = this.m15 = this.m14 = 0;
          this.m22 = 1;
          this.m25 = this.m24 = this.m23 = 0;
          this.m31 = -a;
          this.m32 = 0;
          this.m33 = b;
          this.m43 = this.m42 = this.m41 = this.m35 = this.m34 =
            0;
          this.m44 = 1;
          this.m45 = 0;
          return this
        },
        rotateBlue: function(a) {
          a *= .01745329251994278;
          var b = Math.cos(a);
          a = Math.cos(a);
          this.m11 = b;
          this.m12 = -a;
          this.m15 = this.m14 = this.m13 = 0;
          this.m21 = a;
          this.m22 = b;
          this.m32 = this.m31 = this.m25 = this.m24 = this.m23 = 0;
          this.m33 = 1;
          this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
          this.m44 = 1;
          this.m45 = 0;
          return this
        },
        shearRed: function(a, b) {
          this.m11 = 1;
          this.m12 = a;
          this.m13 = b;
          this.m21 = this.m15 = this.m14 = 0;
          this.m22 = 1;
          this.m32 = this.m31 = this.m25 = this.m24 = this.m23 = 0;
          this.m33 = 1;
          this.m43 = this.m42 = this.m41 =
            this.m35 = this.m34 = 0;
          this.m44 = 1;
          this.m45 = 0;
          return this
        },
        shearGreen: function(a, b) {
          this.m11 = 1;
          this.m15 = this.m14 = this.m13 = this.m12 = 0;
          this.m21 = a;
          this.m22 = 1;
          this.m23 = b;
          this.m32 = this.m31 = this.m25 = this.m24 = 0;
          this.m33 = 1;
          this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
          this.m44 = 1;
          this.m45 = 0;
          return this
        },
        shearBlue: function(a, b) {
          this.m11 = 1;
          this.m21 = this.m15 = this.m14 = this.m13 = this.m12 = 0;
          this.m22 = 1;
          this.m25 = this.m24 = this.m23 = 0;
          this.m31 = a;
          this.m32 = b;
          this.m33 = 1;
          this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
          this.m44 =
            1;
          this.m45 = 0;
          return this
        },
        applyColorDeficiency: function(a) {
          switch (a._hx_index) {
            case 0:
              a = this.m11;
              var b = this.m12,
                c = this.m13,
                d = this.m14;
              this.m11 = .567 * this.m11 + .558 * this.m12 + 0 * this.m13 + 0 * this.m14;
              this.m12 = .433 * a + .442 * this.m12 + .242 * this.m13 + 0 * this.m14;
              this.m13 = 0 * a + 0 * b + .758 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 = .567 * this.m21 + .558 * this.m22 + 0 * this.m23 + 0 * this.m24;
              this.m22 = .433 * a + .442 * this.m22 + .242 * this.m23 + 0 * this.m24;
              this.m23 = 0 * a + 0 * b + .758 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .567 * this.m31 + .558 * this.m32 + 0 * this.m33 + 0 * this.m34;
              this.m32 = .433 * a + .442 * this.m32 + .242 * this.m33 + 0 * this.m34;
              this.m33 = 0 * a + 0 * b + .758 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .567 * this.m41 + .558 * this.m42 + 0 * this.m43 + 0 * this.m44;
              this.m42 = .433 * a + .442 * this.m42 + .242 * this.m43 + 0 *
                this.m44;
              this.m43 = 0 * a + 0 * b + .758 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 1:
              a = this.m11;
              b = this.m12;
              c = this.m13;
              d = this.m14;
              this.m11 = .817 * this.m11 + .333 * this.m12 + 0 * this.m13 + 0 * this.m14;
              this.m12 = .183 * a + .667 * this.m12 + .125 * this.m13 + 0 * this.m14;
              this.m13 = 0 * a + 0 * b + .875 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 = .817 * this.m21 + .333 * this.m22 + 0 * this.m23 + 0 * this.m24;
              this.m22 = .183 * a + .667 * this.m22 +
                .125 * this.m23 + 0 * this.m24;
              this.m23 = 0 * a + 0 * b + .875 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .817 * this.m31 + .333 * this.m32 + 0 * this.m33 + 0 * this.m34;
              this.m32 = .183 * a + .667 * this.m32 + .125 * this.m33 + 0 * this.m34;
              this.m33 = 0 * a + 0 * b + .875 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .817 * this.m41 + .333 * this.m42 + 0 * this.m43 + 0 * this.m44;
              this.m42 = .183 * a + .667 *
                this.m42 + .125 * this.m43 + 0 * this.m44;
              this.m43 = 0 * a + 0 * b + .875 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 2:
              a = this.m11;
              b = this.m12;
              c = this.m13;
              d = this.m14;
              this.m11 = .625 * this.m11 + .7 * this.m12 + 0 * this.m13 + 0 * this.m14;
              this.m12 = .375 * a + .3 * this.m12 + .3 * this.m13 + 0 * this.m14;
              this.m13 = 0 * a + 0 * b + .7 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 = .625 * this.m21 + .7 * this.m22 + 0 * this.m23 + 0 * this.m24;
              this.m22 =
                .375 * a + .3 * this.m22 + .3 * this.m23 + 0 * this.m24;
              this.m23 = 0 * a + 0 * b + .7 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .625 * this.m31 + .7 * this.m32 + 0 * this.m33 + 0 * this.m34;
              this.m32 = .375 * a + .3 * this.m32 + .3 * this.m33 + 0 * this.m34;
              this.m33 = 0 * a + 0 * b + .7 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .625 * this.m41 + .7 * this.m42 + 0 * this.m43 + 0 * this.m44;
              this.m42 = .375 * a +
                .3 * this.m42 + .3 * this.m43 + 0 * this.m44;
              this.m43 = 0 * a + 0 * b + .7 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 3:
              a = this.m11;
              b = this.m12;
              c = this.m13;
              d = this.m14;
              this.m11 = .8 * this.m11 + .258 * this.m12 + 0 * this.m13 + 0 * this.m14;
              this.m12 = .2 * a + .742 * this.m12 + .142 * this.m13 + 0 * this.m14;
              this.m13 = 0 * a + 0 * b + .858 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 = .8 * this.m21 + .258 * this.m22 + 0 * this.m23 + 0 * this.m24;
              this.m22 =
                .2 * a + .742 * this.m22 + .142 * this.m23 + 0 * this.m24;
              this.m23 = 0 * a + 0 * b + .858 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .8 * this.m31 + .258 * this.m32 + 0 * this.m33 + 0 * this.m34;
              this.m32 = .2 * a + .742 * this.m32 + .142 * this.m33 + 0 * this.m34;
              this.m33 = 0 * a + 0 * b + .858 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .8 * this.m41 + .258 * this.m42 + 0 * this.m43 + 0 * this.m44;
              this.m42 =
                .2 * a + .742 * this.m42 + .142 * this.m43 + 0 * this.m44;
              this.m43 = 0 * a + 0 * b + .858 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 4:
              a = this.m11;
              b = this.m12;
              c = this.m13;
              d = this.m14;
              this.m11 = .95 * this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
              this.m12 = .05 * a + .433 * this.m12 + .475 * this.m13 + 0 * this.m14;
              this.m13 = 0 * a + .567 * b + .525 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 = .95 * this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
              this.m22 = .05 * a + .433 * this.m22 + .475 * this.m23 + 0 * this.m24;
              this.m23 = 0 * a + .567 * b + .525 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .95 * this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
              this.m32 = .05 * a + .433 * this.m32 + .475 * this.m33 + 0 * this.m34;
              this.m33 = 0 * a + .567 * b + .525 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .95 * this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
              this.m42 = .05 * a + .433 * this.m42 + .475 * this.m43 + 0 * this.m44;
              this.m43 = 0 * a + .567 * b + .525 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 5:
              a = this.m11;
              b = this.m12;
              c = this.m13;
              d = this.m14;
              this.m11 = .967 * this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
              this.m12 = .033 * a + .733 * this.m12 + .183 * this.m13 + 0 * this.m14;
              this.m13 = 0 * a + .267 * b + .817 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 = .967 * this.m21 + 0 * this.m22 + 0 *
                this.m23 + 0 * this.m24;
              this.m22 = .033 * a + .733 * this.m22 + .183 * this.m23 + 0 * this.m24;
              this.m23 = 0 * a + .267 * b + .817 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .967 * this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
              this.m32 = .033 * a + .733 * this.m32 + .183 * this.m33 + 0 * this.m34;
              this.m33 = 0 * a + .267 * b + .817 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .967 * this.m41 + 0 * this.m42 +
                0 * this.m43 + 0 * this.m44;
              this.m42 = .033 * a + .733 * this.m42 + .183 * this.m43 + 0 * this.m44;
              this.m43 = 0 * a + .267 * b + .817 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 6:
              a = this.m11;
              b = this.m12;
              c = this.m13;
              d = this.m14;
              this.m11 = .299 * this.m11 + .299 * this.m12 + .299 * this.m13 + 0 * this.m14;
              this.m12 = .587 * a + .587 * this.m12 + .587 * this.m13 + 0 * this.m14;
              this.m13 = .114 * a + .114 * b + .114 * this.m13 + 0 * this.m14;
              this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
              this.m15 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m21;
              b = this.m22;
              c = this.m23;
              d = this.m24;
              this.m21 =
                .299 * this.m21 + .299 * this.m22 + .299 * this.m23 + 0 * this.m24;
              this.m22 = .587 * a + .587 * this.m22 + .587 * this.m23 + 0 * this.m24;
              this.m23 = .114 * a + .114 * b + .114 * this.m23 + 0 * this.m24;
              this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
              this.m25 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m31;
              b = this.m32;
              c = this.m33;
              d = this.m34;
              this.m31 = .299 * this.m31 + .299 * this.m32 + .299 * this.m33 + 0 * this.m34;
              this.m32 = .587 * a + .587 * this.m32 + .587 * this.m33 + 0 * this.m34;
              this.m33 = .114 * a + .114 * b + .114 * this.m33 + 0 * this.m34;
              this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
              this.m35 = 0 * a + 0 * b + 0 * c + 0 * d;
              a = this.m41;
              b = this.m42;
              c = this.m43;
              d = this.m44;
              this.m41 = .299 * this.m41 + .299 * this.m42 + .299 * this.m43 + 0 * this.m44;
              this.m42 = .587 * a + .587 * this.m42 + .587 * this.m43 + 0 * this.m44;
              this.m43 = .114 * a + .114 * b + .114 * this.m43 + 0 * this.m44;
              this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
              this.m45 = 0 * a + 0 * b + 0 * c + 0 * d;
              break;
            case 7:
              a = this.m11, b = this.m12, c = this.m13, d = this.m14, this.m11 = .618 * this.m11 + .163 * this.m12 + .163 * this.m13 + 0 * this.m14, this.m12 = .32 * a + .775 * this.m12 + .32 * this.m13 + 0 * this.m14, this.m13 = .062 * a + .062 * b + .516 * this.m13 + 0 * this.m14, this.m14 = 0 * a + 0 * b + 0 * c + this.m14, this.m15 = 0 * a + 0 * b + 0 * c +
                0 * d, a = this.m21, b = this.m22, c = this.m23, d = this.m24, this.m21 = .618 * this.m21 + .163 * this.m22 + .163 * this.m23 + 0 * this.m24, this.m22 = .32 * a + .775 * this.m22 + .32 * this.m23 + 0 * this.m24, this.m23 = .062 * a + .062 * b + .516 * this.m23 + 0 * this.m24, this.m24 = 0 * a + 0 * b + 0 * c + this.m24, this.m25 = 0 * a + 0 * b + 0 * c + 0 * d, a = this.m31, b = this.m32, c = this.m33, d = this.m34, this.m31 = .618 * this.m31 + .163 * this.m32 + .163 * this.m33 + 0 * this.m34, this.m32 = .32 * a + .775 * this.m32 + .32 * this.m33 + 0 * this.m34, this.m33 = .062 * a + .062 * b + .516 * this.m33 + 0 * this.m34, this.m34 = 0 * a + 0 * b + 0 * c + this.m34,
                this.m35 = 0 * a + 0 * b + 0 * c + 0 * d, a = this.m41, b = this.m42, c = this.m43, d = this.m44, this.m41 = .618 * this.m41 + .163 * this.m42 + .163 * this.m43 + 0 * this.m44, this.m42 = .32 * a + .775 * this.m42 + .32 * this.m43 + 0 * this.m44, this.m43 = .062 * a + .062 * b + .516 * this.m43 + 0 * this.m44, this.m44 = 0 * a + 0 * b + 0 * c + this.m44, this.m45 = 0 * a + 0 * b + 0 * c + 0 * d
          }
          return this
        },
        applyMatrix: function(a, b) {
          var c = a.a,
            d = a.r,
            e = a.g,
            f = a.b;
          a = R.clamp(.5 + d * this.m41 + e * this.m42 + f * this.m43 + c * this.m44 + this.m45 | 0, 0, 255);
          var g = R.clamp(.5 + d * this.m11 + e * this.m12 + f * this.m13 + c * this.m14 + this.m15 | 0,
              0, 255),
            h = R.clamp(.5 + d * this.m21 + e * this.m22 + f * this.m23 + c * this.m24 + this.m25 | 0, 0, 255);
          c = R.clamp(.5 + d * this.m31 + e * this.m32 + f * this.m33 + c * this.m34 + this.m35 | 0, 0, 255);
          b.a = a;
          b.r = g;
          b.g = h;
          b.b = c;
          return b
        },
        transformVector: function(a) {
          var b = a[0],
            c = a[1],
            d = a[2],
            e = a[3],
            f = b * this.m21 + c * this.m22 + d * this.m23 + e * this.m24 + this.m25,
            g = b * this.m31 + c * this.m32 + d * this.m33 + e * this.m34 + this.m35,
            h = b * this.m41 + c * this.m42 + d * this.m43 + e * this.m44 + this.m45;
          a[0] = b * this.m11 + c * this.m12 + d * this.m13 + e * this.m14 + this.m15;
          a[1] = f;
          a[2] = g;
          a[3] = h;
          return a
        },
        initHue: function() {
          if (!this.hueInitialized) {
            this.hueInitialized = !0;
            this.preHue = new $a;
            this.preHue.rotateRed(45);
            this.preHue.rotateGreen(-39.182655);
            var a = [];
            a[0] = $a.LUMA_R2;
            a[1] = $a.LUMA_G2;
            a[2] = $a.LUMA_B2;
            a[3] = 1;
            this.preHue.transformVector(a);
            var b = a[0] / a[2];
            a = a[1] / a[2];
            this.preHue.shearBlue(b, a);
            this.postHue = new $a;
            this.postHue.shearBlue(-b, -a);
            this.postHue.rotateGreen(39.182655);
            this.postHue.rotateRed(-45)
          }
        },
        toArray: function(a) {
          a[0] = this.m11;
          a[1] = this.m12;
          a[2] = this.m13;
          a[3] = this.m14;
          a[4] = this.m15;
          a[5] = this.m21;
          a[6] = this.m22;
          a[7] = this.m23;
          a[8] = this.m24;
          a[9] = this.m25;
          a[10] = this.m31;
          a[11] = this.m32;
          a[12] = this.m33;
          a[13] = this.m34;
          a[14] = this.m35;
          a[15] = this.m41;
          a[16] = this.m42;
          a[17] = this.m43;
          a[18] = this.m44;
          a[19] = this.m45;
          return a
        },
        set: function(a, b, c, d, e, f, g, h, m, l, y, n, p, k, q, u, v, T, r, t) {
          this.m11 = a;
          this.m12 = b;
          this.m13 = c;
          this.m14 = d;
          this.m15 = e;
          this.m21 = f;
          this.m22 = g;
          this.m23 = h;
          this.m24 = m;
          this.m25 = l;
          this.m31 = y;
          this.m32 = n;
          this.m33 = p;
          this.m34 = k;
          this.m35 = q;
          this.m41 = u;
          this.m42 = v;
          this.m43 = T;
          this.m44 = r;
          this.m45 =
            t
        },
        mul: function(a, b, c, d, e, f, g, h, m, l, y, n, p, k, q, u, v, T, r, t) {
          var Ge = this.m11,
            He = this.m12,
            ja = this.m13,
            sj = this.m14;
          this.m11 = this.m11 * a + this.m12 * f + this.m13 * y + this.m14 * u;
          this.m12 = Ge * b + this.m12 * g + this.m13 * n + this.m14 * v;
          this.m13 = Ge * c + He * h + this.m13 * p + this.m14 * T;
          this.m14 = Ge * d + He * m + ja * k + this.m14 * r;
          this.m15 = Ge * e + He * l + ja * q + sj * t;
          Ge = this.m21;
          He = this.m22;
          ja = this.m23;
          sj = this.m24;
          this.m21 = this.m21 * a + this.m22 * f + this.m23 * y + this.m24 * u;
          this.m22 = Ge * b + this.m22 * g + this.m23 * n + this.m24 * v;
          this.m23 = Ge * c + He * h + this.m23 * p + this.m24 *
            T;
          this.m24 = Ge * d + He * m + ja * k + this.m24 * r;
          this.m25 = Ge * e + He * l + ja * q + sj * t;
          Ge = this.m31;
          He = this.m32;
          ja = this.m33;
          sj = this.m34;
          this.m31 = this.m31 * a + this.m32 * f + this.m33 * y + this.m34 * u;
          this.m32 = Ge * b + this.m32 * g + this.m33 * n + this.m34 * v;
          this.m33 = Ge * c + He * h + this.m33 * p + this.m34 * T;
          this.m34 = Ge * d + He * m + ja * k + this.m34 * r;
          this.m35 = Ge * e + He * l + ja * q + sj * t;
          Ge = this.m41;
          He = this.m42;
          ja = this.m43;
          sj = this.m44;
          this.m41 = this.m41 * a + this.m42 * f + this.m43 * y + this.m44 * u;
          this.m42 = Ge * b + this.m42 * g + this.m43 * n + this.m44 * v;
          this.m43 = Ge * c + He * h + this.m43 * p + this.m44 *
            T;
          this.m44 = Ge * d + He * m + ja * k + this.m44 * r;
          this.m45 = Ge * e + He * l + ja * q + sj * t
        },
        __class__: $a
      };
      var rr = function() {};
      k["com.stencyl.utils.HaxeDefines"] = rr;
      rr.__name__ = "com.stencyl.utils.HaxeDefines";
      var Tk = function(a, b) {
        this.map = a;
        this.initializer = b
      };
      k["com.stencyl.utils.LazyIntMap"] = Tk;
      Tk.__name__ = "com.stencyl.utils.LazyIntMap";
      Tk.prototype = {
        map: null,
        initializer: null,
        get: function(a) {
          var b = this.map.h[a];
          null == b && (b = this.initializer(a), this.map.h[a] = b);
          return b
        },
        set: function(a, b) {
          this.map.h[a] = b
        },
        exists: function(a) {
          return this.map.h.hasOwnProperty(a)
        },
        remove: function(a) {
          return this.map.remove(a)
        },
        keys: function() {
          return this.map.keys()
        },
        iterator: function() {
          return this.map.iterator()
        },
        __class__: Tk
      };
      var Rn = function(a, b) {
        this.map = a;
        this.initializer = b
      };
      k["com.stencyl.utils.LazyStringMap"] = Rn;
      Rn.__name__ = "com.stencyl.utils.LazyStringMap";
      Rn.prototype = {
        map: null,
        initializer: null,
        get: function(a) {
          var b = this.map.h[a];
          null == b && (b = this.initializer(a), this.map.h[a] = b);
          return b
        },
        set: function(a, b) {
          this.map.h[a] = b
        },
        exists: function(a) {
          return Object.prototype.hasOwnProperty.call(this.map.h,
            a)
        },
        remove: function(a) {
          var b = this.map;
          return Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], !0) : !1
        },
        keys: function() {
          return new qj(this.map.h)
        },
        iterator: function() {
          return new Ci(this.map.h)
        },
        __class__: Rn
      };
      var ro = function() {};
      k["com.stencyl.utils.Mathematics"] = ro;
      ro.__name__ = "com.stencyl.utils.Mathematics";
      ro.round = function(a) {
        return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
      };
      ro.clamp = function(a, b, c) {
        return a < b ? b : a > c ? c : a
      };
      ro.fclamp = function(a, b, c) {
        return a < b ? b : a > c ? c : a
      };
      var Hc = function(a) {
        this.points = a;
        this.combineClosePoints();
        this.combineColinearPoints();
        this.makeCCW()
      };
      k["com.stencyl.utils.PolyDecompBayazit"] = Hc;
      Hc.__name__ = "com.stencyl.utils.PolyDecompBayazit";
      Hc.area = function(a, b, c) {
        return (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y)
      };
      Hc.right = function(a, b, c) {
        return 0 > Hc.area(a, b, c)
      };
      Hc.rightOn = function(a, b, c) {
        return 0 >= Hc.area(a, b, c)
      };
      Hc.left = function(a, b, c) {
        return 0 < Hc.area(a, b, c)
      };
      Hc.leftOn = function(a, b, c) {
        return 0 <= Hc.area(a, b, c)
      };
      Hc.sqdist = function(a, b) {
        var c = b.x - a.x;
        a = b.y - a.y;
        return c * c + a * a
      };
      Hc.getIntersection = function(a,
        b, c, d) {
        var e = b.y - a.y;
        b = a.x - b.x;
        a = e * a.x + b * a.y;
        var f = d.y - c.y;
        d = c.x - d.x;
        c = f * c.x + d * c.y;
        var g = e * d - f * b;
        return Math.abs(g) > Number.MIN_VALUE ? new la((d * a - b * c) / g, (e * c - f * a) / g) : null
      };
      Hc.prototype = {
        combineColinearPoints: function() {
          for (var a = [], b = 0, c = this.points.length; b < c;) {
            var d = b++,
              e = this.at(d - 1),
              f = this.at(d);
            d = this.at(d + 1);
            null != Hc.getIntersection(e, f, f, d) && a.push(f)
          }
          this.points = a
        },
        points: null,
        combineClosePoints: function() {
          for (var a = [], b = 0, c = this.points.length; b < c;) {
            var d = b++,
              e = this.at(d);
            d = this.at(d + 1);
            Hc.sqdist(e,
              d) > Number.MIN_VALUE && a.push(e)
          }
          this.points = a
        },
        at: function(a) {
          var b = this.points.length;
          return this.points[(a + b) % b]
        },
        isReflex: function(a) {
          return Hc.right(this.at(a - 1), this.at(a), this.at(a + 1))
        },
        polyFromRange: function(a, b) {
          return a < b ? new Hc(this.points.slice(a, b + 1)) : new Hc(this.points.slice(a).concat(this.points.slice(0, b + 1)))
        },
        decompose: function(a) {
          if (!(3 > this.points.length)) {
            for (var b = 0, c = this.points.length; b < c;) {
              var d = b++;
              if (this.isReflex(d)) {
                var e = Number.MAX_VALUE,
                  f = null;
                b = 0;
                for (var g = Number.MAX_VALUE,
                    h = null, m = c = 0, l = this.points.length; m < l;) {
                  var y = m++;
                  if (Hc.left(this.at(d - 1), this.at(d), this.at(y)) && Hc.rightOn(this.at(d - 1), this.at(d), this.at(y - 1))) {
                    var n = Hc.getIntersection(this.at(d - 1), this.at(d), this.at(y), this.at(y - 1));
                    if (Hc.right(this.at(d + 1), this.at(d), n)) {
                      var p = Hc.sqdist(this.at(d), n);
                      p < g && (g = p, h = n, c = y)
                    }
                  }
                  Hc.left(this.at(d + 1), this.at(d), this.at(y + 1)) && Hc.rightOn(this.at(d + 1), this.at(d), this.at(y)) && (n = Hc.getIntersection(this.at(d + 1), this.at(d), this.at(y), this.at(y + 1)), Hc.left(this.at(d - 1), this.at(d),
                    n) && (p = Hc.sqdist(this.at(d), n), p < e && (e = p, f = n, b = y)))
                }
                if (c == (b + 1) % this.points.length) e = new la(.5 * (h.x + f.x), .5 * (h.y + f.y)), f = this.polyFromRange(d, b), f.points.push(e), d = d < b ? this.polyFromRange(c, d) : this.polyFromRange(0, d), d.points.push(e);
                else {
                  c > b && (b += this.points.length);
                  e = 0;
                  for (f = Number.MAX_VALUE; c <= b;) Hc.leftOn(this.at(d - 1), this.at(d), this.at(c)) && Hc.rightOn(this.at(d + 1), this.at(d), this.at(c)) && (g = Hc.sqdist(this.at(d), this.at(c)), g < f && (f = g, this.at(c), e = c % this.points.length)), ++c;
                  f = this.polyFromRange(d,
                    e);
                  d = this.polyFromRange(e, d)
                }
                f.points.length < d.points.length ? (f.decompose(a), d.decompose(a)) : (d.decompose(a), f.decompose(a));
                return
              }
            }
            3 <= this.points.length && a(this)
          }
        },
        makeCCW: function() {
          for (var a = 0, b = 1, c = this.points.length; b < c;) {
            var d = b++;
            if (this.at(d).y < this.at(a).y || this.at(d).y == this.at(a).y && this.at(d).x > this.at(a).x) a = d
          }
          Hc.left(this.at(a - 1), this.at(a), this.at(a + 1)) || this.points.reverse()
        },
        __class__: Hc
      };
      var Md = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.r = a;
        this.g = b;
        this.b =
          c
      };
      k["com.stencyl.utils.RGB"] = Md;
      Md.__name__ = "com.stencyl.utils.RGB";
      Md.setRGBi = function(a, b, c) {
        return (a & 255) << 16 | (b & 255) << 8 | c & 255
      };
      Md.setRGBf = function(a, b, c) {
        a = 255 * (0 > a ? 0 : 1 < a ? 1 : a);
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        c = 255 * (0 > c ? 0 : 1 < c ? 1 : c);
        return (((0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0) & 255) << 16 | (((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) & 255) << 8 | ((0 < c ? c + .5 : 0 > c ? c - .5 : 0) | 0) & 255
      };
      Md.getR = function(a) {
        return a >>> 16 & 255
      };
      Md.getRf = function(a) {
        return .00392156862745098 * (a >>> 16 & 255)
      };
      Md.getG = function(a) {
        return a >>> 8 & 255
      };
      Md.getGf = function(a) {
        return .00392156862745098 *
          (a >>> 8 & 255)
      };
      Md.getB = function(a) {
        return a & 255
      };
      Md.getBf = function(a) {
        return .00392156862745098 * (a & 255)
      };
      Md.setR = function(a, b) {
        return (b & 255) << 16 | a & -16711681
      };
      Md.setRf = function(a, b) {
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        return (((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) & 255) << 16 | a & -16711681
      };
      Md.setG = function(a, b) {
        return (b & 255) << 8 | a & -65281
      };
      Md.setGf = function(a, b) {
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        return (((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) & 255) << 8 | a & -65281
      };
      Md.setB = function(a, b) {
        return b & 255 | a & -256
      };
      Md.setBf = function(a, b) {
        b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
        return ((0 < b ? b +
          .5 : 0 > b ? b - .5 : 0) | 0) & 255 | a & -256
      };
      Md.prototype = {
        r: null,
        g: null,
        b: null,
        set: function(a, b, c) {
          this.r = a;
          this.g = b;
          this.b = c
        },
        lerp: function(a, b, c) {
          b.r = this.r + (a.r - this.r) * c;
          b.g = this.g + (a.g - this.g) * c;
          b.b = this.b + (a.b - this.b) * c
        },
        getR8: function() {
          var a = 255 * this.r;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        getG8: function() {
          var a = 255 * this.g;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        getB8: function() {
          var a = 255 * this.b;
          return (0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0
        },
        get24: function() {
          var a = 255 * this.r,
            b = 255 * this.g,
            c = 255 * this.b;
          return ((0 < a ? a + .5 : 0 > a ? a - .5 : 0) | 0) <<
            16 | ((0 < b ? b + .5 : 0 > b ? b - .5 : 0) | 0) << 8 | (0 < c ? c + .5 : 0 > c ? c - .5 : 0) | 0
        },
        set24: function(a, b, c) {
          this.r = .00392156862745098 * (a & 255);
          this.g = .00392156862745098 * (b & 255);
          this.b = .00392156862745098 * (c & 255)
        },
        copy: function(a) {
          a.r = this.r;
          a.g = this.g;
          a.b = this.b;
          return a
        },
        __class__: Md
      };
      var mf = function(a, b) {
        null == b && (b = 0);
        null == a && (a = 1);
        this.volume = a;
        this.pan = b;
        this.rightToRight = this.rightToLeft = this.leftToRight = this.leftToLeft = 0
      };
      k["openfl.media.SoundTransform"] = mf;
      mf.__name__ = "openfl.media.SoundTransform";
      mf.prototype = {
        leftToLeft: null,
        leftToRight: null,
        pan: null,
        rightToLeft: null,
        rightToRight: null,
        volume: null,
        clone: function() {
          return new mf(this.volume, this.pan)
        },
        __class__: mf
      };
      var ua = function() {
        this.h = Object.create(null)
      };
      k["haxe.ds.StringMap"] = ua;
      ua.__name__ = "haxe.ds.StringMap";
      ua.__interfaces__ = [kd];
      ua.stringify = function(a) {
        var b = "{",
          c = !0,
          d;
        for (d in a) c ? c = !1 : b += ",", b += d + " => " + M.string(a[d]);
        return b + "}"
      };
      ua.prototype = {
        h: null,
        exists: function(a) {
          return Object.prototype.hasOwnProperty.call(this.h, a)
        },
        get: function(a) {
          return this.h[a]
        },
        set: function(a, b) {
          this.h[a] = b
        },
        remove: function(a) {
          return Object.prototype.hasOwnProperty.call(this.h, a) ? (delete this.h[a], !0) : !1
        },
        keys: function() {
          return new qj(this.h)
        },
        iterator: function() {
          return new Ci(this.h)
        },
        keyValueIterator: function() {
          return new so(this.h)
        },
        __class__: ua
      };
      var Za = function() {
        this.h = {}
      };
      k["haxe.ds.IntMap"] = Za;
      Za.__name__ = "haxe.ds.IntMap";
      Za.__interfaces__ = [kd];
      Za.prototype = {
        h: null,
        set: function(a, b) {
          this.h[a] = b
        },
        get: function(a) {
          return this.h[a]
        },
        exists: function(a) {
          return this.h.hasOwnProperty(a)
        },
        remove: function(a) {
          if (!this.h.hasOwnProperty(a)) return !1;
          delete this.h[a];
          return !0
        },
        keys: function() {
          var a = [],
            b;
          for (b in this.h) this.h.hasOwnProperty(b) && a.push(b | 0);
          return new Ne(a)
        },
        iterator: function() {
          return {
            ref: this.h,
            it: this.keys(),
            hasNext: function() {
              return this.it.hasNext()
            },
            next: function() {
              var a = this.it.next();
              return this.ref[a]
            }
          }
        },
        keyValueIterator: function() {
          return new jh(this)
        },
        __class__: Za
      };
      var Vh = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b &&
          (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = e;
        this.ty = f
      };
      k["lime.math.Matrix3"] = Vh;
      Vh.__name__ = "lime.math.Matrix3";
      Vh.prototype = {
        a: null,
        b: null,
        c: null,
        d: null,
        tx: null,
        ty: null,
        clone: function() {
          return new Vh(this.a, this.b, this.c, this.d, this.tx, this.ty)
        },
        concat: function(a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty * a.d + a.ty;
          this.tx = b
        },
        copyColumnFrom: function(a,
          b) {
          if (2 < a) throw F.thrown("Column " + a + " out of bounds (2)");
          0 == a ? (this.a = b.x, this.b = b.y) : 1 == a ? (this.c = b.x, this.d = b.y) : (this.tx = b.x, this.ty = b.y)
        },
        copyColumnTo: function(a, b) {
          if (2 < a) throw F.thrown("Column " + a + " out of bounds (2)");
          0 == a ? (b.x = this.a, b.y = this.b, b.z = 0) : 1 == a ? (b.x = this.c, b.y = this.d, b.z = 0) : (b.x = this.tx, b.y = this.ty, b.z = 1)
        },
        copyFrom: function(a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty
        },
        copyRowFrom: function(a, b) {
          if (2 < a) throw F.thrown("Row " + a + " out of bounds (2)");
          0 == a ? (this.a = b.x, this.c = b.y, this.tx = b.z) : 1 == a && (this.b = b.x, this.d = b.y, this.ty = b.z)
        },
        copyRowTo: function(a, b) {
          if (2 < a) throw F.thrown("Row " + a + " out of bounds (2)");
          0 == a ? (b.x = this.a, b.y = this.c, b.z = this.tx) : 1 == a ? (b.x = this.b, b.y = this.d, b.z = this.ty) : (b.x = 0, b.y = 0, b.z = 1)
        },
        createBox: function(a, b, c, d, e) {
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          if (0 != c) {
            var f = Math.cos(c);
            c = Math.sin(c);
            this.a = f * a;
            this.b = c * b;
            this.c = -c * a;
            this.d = f * b
          } else this.a = a, this.c = this.b = 0, this.d = b;
          this.tx = d;
          this.ty = e
        },
        createGradientBox: function(a,
          b, c, d, e) {
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          this.a = a / 1638.4;
          this.d = b / 1638.4;
          if (0 != c) {
            var f = Math.cos(c);
            c = Math.sin(c);
            this.b = c * this.d;
            this.c = -c * this.a;
            this.a *= f;
            this.d *= f
          } else this.c = this.b = 0;
          this.tx = d + a / 2;
          this.ty = e + b / 2
        },
        equals: function(a) {
          return null != a && this.tx == a.tx && this.ty == a.ty && this.a == a.a && this.b == a.b && this.c == a.c ? this.d == a.d : !1
        },
        deltaTransformVector: function(a, b) {
          null == b && (b = new be);
          b.x = a.x * this.a + a.y * this.c;
          b.y = a.x * this.b + a.y * this.d;
          return b
        },
        identity: function() {
          this.a = 1;
          this.c =
            this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0
        },
        invert: function() {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a) this.a = this.b = this.c = this.d = 0, this.tx = -this.tx, this.ty = -this.ty;
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a
          }
          return this
        },
        rotate: function(a) {
          var b = Math.cos(a);
          a = Math.sin(a);
          var c = this.a * b - this.b * a;
          this.b = this.a * a + this.b * b;
          this.a = c;
          c = this.c * b - this.d * a;
          this.d = this.c * a + this.d * b;
          this.c = c;
          c = this.tx *
            b - this.ty * a;
          this.ty = this.tx * a + this.ty * b;
          this.tx = c
        },
        scale: function(a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b
        },
        setRotation: function(a, b) {
          null == b && (b = 1);
          this.a = Math.cos(a) * b;
          this.c = Math.sin(a) * b;
          this.b = -this.c;
          this.d = this.a
        },
        setTo: function(a, b, c, d, e, f) {
          this.a = a;
          this.b = b;
          this.c = c;
          this.d = d;
          this.tx = e;
          this.ty = f
        },
        to3DString: function(a) {
          null == a && (a = !1);
          return a ? "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) + ", 0, 1)" :
            "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)"
        },
        toString: function() {
          return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")"
        },
        transformRect: function(a, b) {
          null == b && (b = new Td);
          var c = this.a * a.x + this.c * a.y,
            d = c,
            e = this.b * a.x + this.d * a.y,
            f = e,
            g = this.a * (a.x + a.width) + this.c * a.y,
            h = this.b * (a.x + a.width) + this.d * a.y;
          g < c && (c = g);
          h < e && (e = h);
          g > d && (d = g);
          h > f && (f = h);
          g = this.a * (a.x + a.width) + this.c * (a.y + a.height);
          h = this.b * (a.x +
            a.width) + this.d * (a.y + a.height);
          g < c && (c = g);
          h < e && (e = h);
          g > d && (d = g);
          h > f && (f = h);
          g = this.a * a.x + this.c * (a.y + a.height);
          h = this.b * a.x + this.d * (a.y + a.height);
          g < c && (c = g);
          h < e && (e = h);
          g > d && (d = g);
          h > f && (f = h);
          b.setTo(c + g, e + h, d - c, f - e);
          return b
        },
        transformVector: function(a, b) {
          null == b && (b = new be);
          b.x = a.x * this.a + a.y * this.c + this.tx;
          b.y = a.x * this.b + a.y * this.d + this.ty;
          return b
        },
        translate: function(a, b) {
          this.tx += a;
          this.ty += b
        },
        __class__: Vh
      };
      var Ea = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = e;
        this.ty = f
      };
      k["openfl.geom.Matrix"] = Ea;
      Ea.__name__ = "openfl.geom.Matrix";
      Ea.prototype = {
        a: null,
        b: null,
        c: null,
        d: null,
        tx: null,
        ty: null,
        __array: null,
        clone: function() {
          return new Ea(this.a, this.b, this.c, this.d, this.tx, this.ty)
        },
        concat: function(a) {
          var b = this.a * a.a + this.b * a.c;
          this.b = this.a * a.b + this.b * a.d;
          this.a = b;
          b = this.c * a.a + this.d * a.c;
          this.d = this.c * a.b + this.d * a.d;
          this.c = b;
          b = this.tx * a.a + this.ty * a.c + a.tx;
          this.ty = this.tx * a.b + this.ty *
            a.d + a.ty;
          this.tx = b
        },
        copyColumnFrom: function(a, b) {
          if (2 < a) throw F.thrown("Column " + a + " out of bounds (2)");
          0 == a ? (this.a = b.x, this.b = b.y) : 1 == a ? (this.c = b.x, this.d = b.y) : (this.tx = b.x, this.ty = b.y)
        },
        copyColumnTo: function(a, b) {
          if (2 < a) throw F.thrown("Column " + a + " out of bounds (2)");
          0 == a ? (b.x = this.a, b.y = this.b, b.z = 0) : 1 == a ? (b.x = this.c, b.y = this.d, b.z = 0) : (b.x = this.tx, b.y = this.ty, b.z = 1)
        },
        copyFrom: function(a) {
          this.a = a.a;
          this.b = a.b;
          this.c = a.c;
          this.d = a.d;
          this.tx = a.tx;
          this.ty = a.ty
        },
        copyRowFrom: function(a, b) {
          if (2 < a) throw F.thrown("Row " +
            a + " out of bounds (2)");
          0 == a ? (this.a = b.x, this.c = b.y, this.tx = b.z) : 1 == a && (this.b = b.x, this.d = b.y, this.ty = b.z)
        },
        copyRowTo: function(a, b) {
          if (2 < a) throw F.thrown("Row " + a + " out of bounds (2)");
          0 == a ? (b.x = this.a, b.y = this.c, b.z = this.tx) : 1 == a ? (b.x = this.b, b.y = this.d, b.z = this.ty) : b.setTo(0, 0, 1)
        },
        createBox: function(a, b, c, d, e) {
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          if (0 != c) {
            var f = Math.cos(c);
            c = Math.sin(c);
            this.a = f * a;
            this.b = c * b;
            this.c = -c * a;
            this.d = f * b
          } else this.a = a, this.c = this.b = 0, this.d = b;
          this.tx = d;
          this.ty =
            e
        },
        createGradientBox: function(a, b, c, d, e) {
          null == e && (e = 0);
          null == d && (d = 0);
          null == c && (c = 0);
          this.a = a / 1638.4;
          this.d = b / 1638.4;
          if (0 != c) {
            var f = Math.cos(c);
            c = Math.sin(c);
            this.b = c * this.d;
            this.c = -c * this.a;
            this.a *= f;
            this.d *= f
          } else this.c = this.b = 0;
          this.tx = d + a / 2;
          this.ty = e + b / 2
        },
        deltaTransformPoint: function(a) {
          return new la(a.x * this.a + a.y * this.c, a.x * this.b + a.y * this.d)
        },
        equals: function(a) {
          return null != a && this.tx == a.tx && this.ty == a.ty && this.a == a.a && this.b == a.b && this.c == a.c ? this.d == a.d : !1
        },
        identity: function() {
          this.a = 1;
          this.c = this.b = 0;
          this.d = 1;
          this.ty = this.tx = 0
        },
        invert: function() {
          var a = this.a * this.d - this.b * this.c;
          if (0 == a) this.a = this.b = this.c = this.d = 0, this.tx = -this.tx, this.ty = -this.ty;
          else {
            a = 1 / a;
            var b = this.d * a;
            this.d = this.a * a;
            this.a = b;
            this.b *= -a;
            this.c *= -a;
            a = -this.a * this.tx - this.c * this.ty;
            this.ty = -this.b * this.tx - this.d * this.ty;
            this.tx = a
          }
          return this
        },
        rotate: function(a) {
          var b = Math.cos(a);
          a = Math.sin(a);
          var c = this.a * b - this.b * a;
          this.b = this.a * a + this.b * b;
          this.a = c;
          c = this.c * b - this.d * a;
          this.d = this.c * a + this.d * b;
          this.c = c;
          c =
            this.tx * b - this.ty * a;
          this.ty = this.tx * a + this.ty * b;
          this.tx = c
        },
        scale: function(a, b) {
          this.a *= a;
          this.b *= b;
          this.c *= a;
          this.d *= b;
          this.tx *= a;
          this.ty *= b
        },
        setRotation: function(a, b) {
          null == b && (b = 1);
          this.a = Math.cos(a) * b;
          this.c = Math.sin(a) * b;
          this.b = -this.c;
          this.d = this.a
        },
        setTo: function(a, b, c, d, e, f) {
          this.a = a;
          this.b = b;
          this.c = c;
          this.d = d;
          this.tx = e;
          this.ty = f
        },
        to3DString: function(a) {
          null == a && (a = !1);
          return a ? "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + (this.tx | 0) + ", " + (this.ty | 0) +
            ", 0, 1)" : "matrix3d(" + this.a + ", " + this.b + ", 0, 0, " + this.c + ", " + this.d + ", 0, 0, 0, 0, 1, 0, " + this.tx + ", " + this.ty + ", 0, 1)"
        },
        toMozString: function() {
          return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + "px, " + this.ty + "px)"
        },
        toString: function() {
          return "matrix(" + this.a + ", " + this.b + ", " + this.c + ", " + this.d + ", " + this.tx + ", " + this.ty + ")"
        },
        transformPoint: function(a) {
          return new la(a.x * this.a + a.y * this.c + this.tx, a.x * this.b + a.y * this.d + this.ty)
        },
        translate: function(a, b) {
          this.tx += a;
          this.ty += b
        },
        toArray: function(a) {
          null == a && (a = !1);
          null == this.__array && (this.__array = new Float32Array(9));
          a ? (this.__array[0] = this.a, this.__array[1] = this.b, this.__array[2] = 0, this.__array[3] = this.c, this.__array[4] = this.d, this.__array[5] = 0, this.__array[6] = this.tx, this.__array[7] = this.ty) : (this.__array[0] = this.a, this.__array[1] = this.c, this.__array[2] = this.tx, this.__array[3] = this.b, this.__array[4] = this.d, this.__array[5] = this.ty, this.__array[6] = 0, this.__array[7] = 0);
          this.__array[8] = 1;
          return this.__array
        },
        __cleanValues: function() {
          this.a =
            Math.round(1E3 * this.a) / 1E3;
          this.b = Math.round(1E3 * this.b) / 1E3;
          this.c = Math.round(1E3 * this.c) / 1E3;
          this.d = Math.round(1E3 * this.d) / 1E3;
          this.tx = Math.round(10 * this.tx) / 10;
          this.ty = Math.round(10 * this.ty) / 10
        },
        __toMatrix3: function() {
          Ea.__matrix3.setTo(this.a, this.b, this.c, this.d, this.tx, this.ty);
          return Ea.__matrix3
        },
        __transformInversePoint: function(a) {
          var b = this.a * this.d - this.b * this.c;
          if (0 == b) a.x = -this.tx, a.y = -this.ty;
          else {
            var c = 1 / b * (this.c * (this.ty - a.y) + this.d * (a.x - this.tx));
            a.y = 1 / b * (this.a * (a.y - this.ty) + this.b *
              (this.tx - a.x));
            a.x = c
          }
        },
        __transformInverseX: function(a, b) {
          var c = this.a * this.d - this.b * this.c;
          return 0 == c ? -this.tx : 1 / c * (this.c * (this.ty - b) + this.d * (a - this.tx))
        },
        __transformInverseY: function(a, b) {
          var c = this.a * this.d - this.b * this.c;
          return 0 == c ? -this.ty : 1 / c * (this.a * (b - this.ty) + this.b * (this.tx - a))
        },
        __transformPoint: function(a) {
          var b = a.x,
            c = a.y;
          a.x = b * this.a + c * this.c + this.tx;
          a.y = b * this.b + c * this.d + this.ty
        },
        __transformX: function(a, b) {
          return a * this.a + b * this.c + this.tx
        },
        __transformY: function(a, b) {
          return a * this.b +
            b * this.d + this.ty
        },
        __translateTransformed: function(a, b) {
          this.tx = a * this.a + b * this.c + this.tx;
          this.ty = a * this.b + b * this.d + this.ty
        },
        __class__: Ea
      };
      var Ec = function(a, b, c, d, e, f, g, h) {
        null == h && (h = 0);
        null == g && (g = 0);
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 1);
        null == a && (a = 1);
        this.redMultiplier = a;
        this.greenMultiplier = b;
        this.blueMultiplier = c;
        this.alphaMultiplier = d;
        this.redOffset = e;
        this.greenOffset = f;
        this.blueOffset = g;
        this.alphaOffset = h
      };
      k["openfl.geom.ColorTransform"] = Ec;
      Ec.__name__ =
        "openfl.geom.ColorTransform";
      Ec.prototype = {
        alphaMultiplier: null,
        alphaOffset: null,
        blueMultiplier: null,
        blueOffset: null,
        greenMultiplier: null,
        greenOffset: null,
        redMultiplier: null,
        redOffset: null,
        concat: function(a) {
          this.redOffset = a.redOffset * this.redMultiplier + this.redOffset;
          this.greenOffset = a.greenOffset * this.greenMultiplier + this.greenOffset;
          this.blueOffset = a.blueOffset * this.blueMultiplier + this.blueOffset;
          this.alphaOffset = a.alphaOffset * this.alphaMultiplier + this.alphaOffset;
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *= a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier
        },
        toString: function() {
          return "(redMultiplier=" + this.redMultiplier + ", greenMultiplier=" + this.greenMultiplier + ", blueMultiplier=" + this.blueMultiplier + ", alphaMultiplier=" + this.alphaMultiplier + ", redOffset=" + this.redOffset + ", greenOffset=" + this.greenOffset + ", blueOffset=" + this.blueOffset + ", alphaOffset=" + this.alphaOffset + ")"
        },
        __clone: function() {
          return new Ec(this.redMultiplier, this.greenMultiplier,
            this.blueMultiplier, this.alphaMultiplier, this.redOffset, this.greenOffset, this.blueOffset, this.alphaOffset)
        },
        __copyFrom: function(a) {
          this.redMultiplier = a.redMultiplier;
          this.greenMultiplier = a.greenMultiplier;
          this.blueMultiplier = a.blueMultiplier;
          this.alphaMultiplier = a.alphaMultiplier;
          this.redOffset = a.redOffset;
          this.greenOffset = a.greenOffset;
          this.blueOffset = a.blueOffset;
          this.alphaOffset = a.alphaOffset
        },
        __combine: function(a) {
          this.redMultiplier *= a.redMultiplier;
          this.greenMultiplier *= a.greenMultiplier;
          this.blueMultiplier *=
            a.blueMultiplier;
          this.alphaMultiplier *= a.alphaMultiplier;
          this.redOffset += a.redOffset;
          this.greenOffset += a.greenOffset;
          this.blueOffset += a.blueOffset;
          this.alphaOffset += a.alphaOffset
        },
        __identity: function() {
          this.alphaMultiplier = this.blueMultiplier = this.greenMultiplier = this.redMultiplier = 1;
          this.alphaOffset = this.blueOffset = this.greenOffset = this.redOffset = 0
        },
        __invert: function() {
          this.redMultiplier = 0 != this.redMultiplier ? 1 / this.redMultiplier : 1;
          this.greenMultiplier = 0 != this.greenMultiplier ? 1 / this.greenMultiplier :
            1;
          this.blueMultiplier = 0 != this.blueMultiplier ? 1 / this.blueMultiplier : 1;
          this.alphaMultiplier = 0 != this.alphaMultiplier ? 1 / this.alphaMultiplier : 1;
          this.redOffset = -this.redOffset;
          this.greenOffset = -this.greenOffset;
          this.blueOffset = -this.blueOffset;
          this.alphaOffset = -this.alphaOffset
        },
        __equals: function(a, b) {
          return null == a || this.redMultiplier != a.redMultiplier || this.greenMultiplier != a.greenMultiplier || this.blueMultiplier != a.blueMultiplier || !b && this.alphaMultiplier != a.alphaMultiplier || this.redOffset != a.redOffset ||
            this.greenOffset != a.greenOffset || this.blueOffset != a.blueOffset ? !1 : this.alphaOffset == a.alphaOffset
        },
        __isDefault: function(a) {
          return a ? 1 == this.redMultiplier && 1 == this.greenMultiplier && 1 == this.blueMultiplier && 0 == this.redOffset && 0 == this.greenOffset && 0 == this.blueOffset ? 0 == this.alphaOffset : !1 : 1 == this.redMultiplier && 1 == this.greenMultiplier && 1 == this.blueMultiplier && 1 == this.alphaMultiplier && 0 == this.redOffset && 0 == this.greenOffset && 0 == this.blueOffset ? 0 == this.alphaOffset : !1
        },
        __setArrays: function(a, b) {
          a[0] = this.redMultiplier;
          a[1] = this.greenMultiplier;
          a[2] = this.blueMultiplier;
          a[3] = this.alphaMultiplier;
          b[0] = this.redOffset;
          b[1] = this.greenOffset;
          b[2] = this.blueOffset;
          b[3] = this.alphaOffset
        },
        get_color: function() {
          return (this.redOffset | 0) << 16 | (this.greenOffset | 0) << 8 | this.blueOffset | 0
        },
        set_color: function(a) {
          this.redOffset = a >> 16 & 255;
          this.greenOffset = a >> 8 & 255;
          this.blueOffset = a & 255;
          this.blueMultiplier = this.greenMultiplier = this.redMultiplier = 0;
          return this.get_color()
        },
        __toLimeColorMatrix: function() {
          if (null == Ec.__limeColorMatrix) {
            var a =
              new Float32Array(20);
            Ec.__limeColorMatrix = a
          }
          Ec.__limeColorMatrix[0] = this.redMultiplier;
          Ec.__limeColorMatrix[4] = this.redOffset / 255;
          Ec.__limeColorMatrix[6] = this.greenMultiplier;
          Ec.__limeColorMatrix[9] = this.greenOffset / 255;
          Ec.__limeColorMatrix[12] = this.blueMultiplier;
          Ec.__limeColorMatrix[14] = this.blueOffset / 255;
          Ec.__limeColorMatrix[18] = this.alphaMultiplier;
          Ec.__limeColorMatrix[19] = this.alphaOffset / 255;
          return Ec.__limeColorMatrix
        },
        __class__: Ec,
        __properties__: {
          set_color: "set_color",
          get_color: "get_color"
        }
      };
      var R = function() {};
      k["com.stencyl.utils.Utils"] = R;
      R.__name__ = "com.stencyl.utils.Utils";
      R.__properties__ = {
        set_time: "set_time",
        set_pan: "set_pan",
        get_pan: "get_pan",
        set_volume: "set_volume",
        get_volume: "get_volume"
      };
      R.toBoolean = function(a) {
        return "true" == a ? !0 : !1
      };
      R.clear = function(a) {
        a.length = 0
      };
      R.removeValueFromArray = function(a, b) {
        for (var c = a.length - 1; - 1 < c;) a[c] == b && a.splice(c, 1), --c
      };
      R.contains = function(a, b) {
        if (null == a) return !1;
        for (var c = a.length - 1; - 1 < c;) {
          if (a[c] == b) return !0;
          --c
        }
        return !1
      };
      R.mapContainsValue =
        function(a, b) {
          a = a.h;
          for (var c = Object.keys(a), d = c.length, e = 0; e < d;)
            if (a[c[e++]] == b) return !0;
          return !1
        };
      R.mapCount = function(a) {
        var b = 0;
        a = Object.keys(a.h).length;
        for (var c = 0; c < a;) c++, ++b;
        return b
      };
      R.mapToList = function(a, b) {
        var c = [];
        if ("keys" == b) {
          b = a.h;
          b = Object.keys(b);
          for (var d = b.length, e = 0; e < d;) {
            var f = b[e++];
            c.push(f)
          }
        } else
          for (a = b = a.h, b = Object.keys(b), d = b.length, e = 0; e < d;) f = a[b[e++]], c.push(f);
        return c
      };
      R.clone = function(a) {
        return R.cloner.clone(a)
      };
      R.copyMap = function(a) {
        for (var b = new ua, c = Object.keys(a.h),
            d = c.length, e = 0; e < d;) {
          var f = c[e++];
          b.h[f] = a.h[f]
        }
        return b
      };
      R.applyToAllChildren = function(a, b) {
        for (var c = 0, d = a.get_numChildren(); c < d;) {
          var e = c++;
          e = a.getChildAt(e);
          e instanceof Da && R.applyToAllChildren(e, b);
          b(e)
        }
      };
      R.removeAllChildren = function(a) {
        for (; 0 < a.get_numChildren();) {
          var b = a.getChildAt(0);
          b instanceof Da && R.removeAllChildren(K.__cast(b, Da));
          b instanceof ih && R.removeAllTiles(b);
          a.removeChild(b)
        }
      };
      R.removeAllTiles = function(a) {
        for (; 0 < a.get_numTiles();) {
          var b = a.getTileAt(0);
          K.__implements(b, Di) &&
            R.removeAllTiles(b);
          a.removeTile(b)
        }
      };
      R.demouse = function(a) {
        for (var b = 0, c = a.get_numChildren(); b < c;) {
          var d = b++;
          d = a.getChildAt(d);
          d instanceof Da && R.demouse(K.__cast(d, Da));
          a.mouseChildren = !1;
          a.mouseEnabled = !1
        }
      };
      R.getAnchorPoint = function(a) {
        a = a.getRect(a);
        return new la(-1 * a.x, -1 * a.y)
      };
      R.setCamera = function(a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        R.camera.x = a;
        R.camera.y = b
      };
      R.resetCamera = function() {
        R.camera.x = R.camera.y = 0
      };
      R.get_volume = function() {
        return R._volume
      };
      R.set_volume = function(a) {
        0 > a && (a = 0);
        if (R._volume ==
          a) return a;
        R._soundTransform.volume = R._volume = a;
        return R._volume
      };
      R.get_pan = function() {
        return R._pan
      };
      R.set_pan = function(a) {
        -1 > a && (a = -1);
        1 < a && (a = 1);
        if (R._pan == a) return a;
        R._soundTransform.pan = R._pan = a;
        return R._pan
      };
      R.sign = function(a) {
        return 0 > a ? -1 : 0 < a ? 1 : 0
      };
      R.approach = function(a, b, c) {
        return a < b ? b < a + c ? b : a + c : b > a - c ? b : a - c
      };
      R.lerp = function(a, b, c) {
        null == c && (c = 1);
        return a + (b - a) * c
      };
      R.colorLerp = function(a, b, c) {
        null == c && (c = 1);
        if (0 >= c) return a;
        if (1 <= c) return b;
        var d = a >> 24 & 255,
          e = a >> 16 & 255,
          f = a >> 8 & 255;
        a &= 255;
        return d +
          (((b >> 24 & 255) - d) * c | 0) << 24 | e + (((b >> 16 & 255) - e) * c | 0) << 16 | f + (((b >> 8 & 255) - f) * c | 0) << 8 | a + (((b & 255) - a) * c | 0)
      };
      R.stepTowards = function(a, b, c, d) {
        null == d && (d = 1);
        R.point.x = b - a.x;
        R.point.y = c - a.y;
        R.point.get_length() <= d ? (a.x = b, a.y = c) : (R.point.normalize(d), a.x += R.point.x, a.y += R.point.y)
      };
      R.anchorTo = function(a, b, c) {
        null == c && (c = 0);
        R.point.x = a.x - b.x;
        R.point.y = a.y - b.y;
        R.point.get_length() > c && R.point.normalize(c);
        a.x = b.x + R.point.x;
        a.y = b.y + R.point.y
      };
      R.angle = function(a, b, c, d) {
        a = 57.29577951308402 * Math.atan2(d - b, c - a);
        return 0 >
          a ? a + 360 : a
      };
      R.angleXY = function(a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = 1);
        b *= .01745329251994278;
        a.x = Math.cos(b) * c + d;
        a.y = Math.sin(b) * c + e
      };
      R.rotateAround = function(a, b, c, d) {
        null == d && (d = !0);
        null == c && (c = 0);
        d && (d = 57.29577951308402 * Math.atan2(a.y - b.y, a.x - b.x), c += 0 > d ? d + 360 : d);
        d = b.x;
        var e = b.y,
          f = a.x,
          g = a.y;
        null == g && (g = 0);
        null == f && (f = 0);
        d = Math.sqrt((f - d) * (f - d) + (g - e) * (g - e));
        e = b.x;
        b = b.y;
        null == b && (b = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        c *= .01745329251994278;
        a.x = Math.cos(c) * d + e;
        a.y = Math.sin(c) * d + b
      };
      R.distance =
        function(a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b))
        };
      R.distanceSquared = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        return (c - a) * (c - a) + (d - b) * (d - b)
      };
      R.distanceRects = function(a, b, c, d, e, f, g, h) {
        if (a < e + g && e < a + c) return b < f + h && f < b + d ? 0 : b > f ? b - (f + h) : f - (b + d);
        if (b < f + h && f < b + d) return a > e ? a - (e + g) : e - (a + c);
        if (a > e) {
          if (b > f) return e += g, f += h, null == f && (f = 0), null == e && (e = 0), Math.sqrt((e - a) * (e - a) + (f - b) * (f - b));
          b += d;
          e += g;
          null == f && (f = 0);
          null == e && (e = 0);
          return Math.sqrt((e - a) * (e - a) + (f - b) *
            (f - b))
        }
        if (b > f) return a += c, f += h, null == f && (f = 0), null == e && (e = 0), Math.sqrt((e - a) * (e - a) + (f - b) * (f - b));
        a += c;
        b += d;
        null == f && (f = 0);
        null == e && (e = 0);
        return Math.sqrt((e - a) * (e - a) + (f - b) * (f - b))
      };
      R.distanceRectPoint = function(a, b, c, d, e, f) {
        if (a >= c && a <= c + e) return b >= d && b <= d + f ? 0 : b > d ? b - (d + f) : d - b;
        if (b >= d && b <= d + f) return a > c ? a - (c + e) : c - a;
        if (a > c) {
          if (b > d) return c += e, d += f, null == d && (d = 0), null == c && (c = 0), Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));
          c += e;
          null == d && (d = 0);
          null == c && (c = 0);
          return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b))
        }
        if (b > d) return d +=
          f, null == d && (d = 0), null == c && (c = 0), Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));
        null == d && (d = 0);
        null == c && (c = 0);
        return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b))
      };
      R.clamp = function(a, b, c) {
        if (c > b) return a < c || (a = c), a > b ? a : b;
        a < b || (a = b);
        return a > c ? a : c
      };
      R.clampInRect = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        a.x = R.clamp(a.x, b + f, b + d - f);
        a.y = R.clamp(a.y, c + f, c + e - f)
      };
      R.scale = function(a, b, c, d, e) {
        return d + (a - b) / (c - b) * (e - d)
      };
      R.scaleClamp = function(a, b, c, d, e) {
        a = d + (a - b) / (c - b) * (e - d);
        if (e > d) return a < e || (a = e), a > d ? a : d;
        a < d || (a = d);
        return a > e ? a : e
      };
      R.indexOf = function(a, b) {
        for (var c = 0, d = 0; d < a.length;) {
          var e = a[d];
          ++d;
          if (b == e) return c;
          ++c
        }
        return -1
      };
      R.next = function(a, b, c) {
        null == c && (c = !0);
        return c ? b[(R.indexOf(b, a) + 1) % b.length] : b[Math.max(R.indexOf(b, a) + 1, b.length - 1) | 0]
      };
      R.prev = function(a, b, c) {
        null == c && (c = !0);
        return c ? b[(R.indexOf(b, a) - 1 + b.length) % b.length] : b[Math.max(R.indexOf(b, a) - 1, 0) | 0]
      };
      R.swap = function(a, b, c) {
        return a == b ? c : b
      };
      R.getColorRGB = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        return a << 16 | b << 8 | c
      };
      R.getRed = function(a) {
        return a >>
          16 & 255
      };
      R.getGreen = function(a) {
        return a >> 8 & 255
      };
      R.getBlue = function(a) {
        return a & 255
      };
      R.convertColor = function(a) {
        return 0 > a ? a + 16777216 : a
      };
      R.timeFlag = function() {
        var a = (new Date).getTime() / 1E3,
          b = a - R._time;
        R._time = a;
        return b
      };
      R.frames = function(a, b, c) {
        null == c && (c = 0);
        var d = [];
        ++c;
        if (a < b)
          for (; a <= b;) d.push(a), a += c;
        else
          for (; a >= b;) d.push(a), a -= c;
        return d
      };
      R.set_time = function(a) {
        R._time = a;
        return R._time
      };
      R.printCallstackIfAvailable = function() {
        return "\n" + nf.toString(nf.callStack())
      };
      R.printExceptionstackIfAvailable =
        function() {
          return "\n" + nf.toString(nf.exceptionStack())
        };
      R.saveToSharedObject = function(a, b, c) {
        try {
          a.data[b] = R.clone(c)
        } catch (d) {
          if (pa.lastError = d, a = F.caught(d).unwrap(), "string" == typeof a) {
            if ("deep clone" != a) throw F.thrown(a);
          } else throw d;
        }
      };
      R.loadFromSharedObject = function(a, b) {
        return R.cloner.clone(Y.field(a.data, b))
      };
      R.flushSharedObject = function(a, b) {
        var c = null;
        try {
          c = a.flush()
        } catch (d) {
          pa.lastError = d;
          null != b && b(!1);
          return
        }
        0 == c && null != b && b(!0)
      };
      R.saveMap = function(a, b, c) {
        b = ed.getLocal(b, Ad.current.meta.h.localSavePath);
        for (var d = Object.keys(a.h), e = d.length, f = 0; f < e;) {
          var g = d[f++];
          b.data[g] = a.h[g]
        }
        R.flushSharedObject(b, c)
      };
      R.loadMap = function(a, b, c) {
        b = ed.getLocal(b, Ad.current.meta.h.localSavePath);
        for (var d = 0, e = Y.fields(b.data); d < e.length;) {
          var f = e[d];
          ++d;
          a.h[f] = Y.field(b.data, f)
        }
        null != c && c(!0)
      };
      R.convertLegacySharedObject = function(a, b) {};
      R.getFlatName = function(a) {
        a = W.replace(a, "/", "_");
        a = W.replace(a, ".", "_");
        return a = W.replace(a, "-", "_")
      };
      R.getAssetClass = function(a) {
        a = "__ASSET__" + R.getFlatName(a);
        return k[a]
      };
      R.getConfigBytes =
        function(a) {
          return yh.getBytes(R.getFlatName(a))
        };
      R.getConfigText = function(a) {
        return yh.getString(R.getFlatName(a))
      };
      R.getConfigBitmap = function(a) {
        try {
          var b = R.getFlatName(W.replace(a, ".png", ".txt")),
            c = yh.getString(b);
          return wa.loadFromBase64(c, "png").then(function(a) {
            return lb.withValue(new Ac(a))
          })
        } catch (d) {
          pa.lastError = d;
          a = F.caught(d).unwrap();
          if ("string" == typeof a) return lb.withError("(You probably have a old browser) Error occurred: " + a);
          throw d;
        }
      };
      R.loadBytes = function(a) {
        a = Qb.createInstance(R.getAssetClass(a),
          []);
        return mc.ofData(Cb.toArrayBuffer(a))
      };
      R.loadText = function(a) {
        a = R.loadBytes(a);
        return a.getString(0, a.length)
      };
      R.loadBitmapData = function(a) {
        a = Hb.fromFile(a);
        return wa.fromImage(a)
      };
      R.resetStatics = function() {
        R.width = 0;
        R.height = 0;
        R.elapsed = 0;
        R.rate = 1;
        R.bounds = null;
        R.camera = new la;
        R._time = 0;
        R._updateTime = 0;
        R._renderTime = 0;
        R._gameTime = 0;
        R._flashTime = 0;
        R._bitmap = new ua;
        R._seed = 0;
        R._getSeed = 0;
        R._volume = 1;
        R._pan = 0;
        R._soundTransform = new mf;
        R.stage = null;
        R.point = new la;
        R.point2 = new la;
        R.zero = new la;
        R.rect =
          new ha;
        R.matrix = new Ea;
        R.sprite = new Z;
        R.collision = new nc
      };
      var La = function() {};
      k["com.stencyl.utils.motion.EasingFunction"] = La;
      La.__name__ = "com.stencyl.utils.motion.EasingFunction";
      La.prototype = {
        apply: function(a) {
          return 0
        },
        __class__: La
      };
      var nl = function() {};
      k["com.stencyl.utils.motion.BackIn"] = nl;
      nl.__name__ = "com.stencyl.utils.motion.BackIn";
      nl.__super__ = La;
      nl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : a * a * (2.70158 * a - 1.70158)
        },
        __class__: nl
      });
      var ol = function() {};
      k["com.stencyl.utils.motion.BackInOut"] =
        ol;
      ol.__name__ = "com.stencyl.utils.motion.BackInOut";
      ol.__super__ = La;
      ol.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : 1 > (a *= 2) ? .5 * a * a * (3.5949095 * a - 2.5949095) : .5 * ((a -= 2) * a * (3.5949095 * a + 2.5949095) + 2)
        },
        __class__: ol
      });
      var pl = function() {};
      k["com.stencyl.utils.motion.BackOut"] = pl;
      pl.__name__ = "com.stencyl.utils.motion.BackOut";
      pl.__super__ = La;
      pl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : --a * a * (2.70158 * a + 1.70158) + 1
        },
        __class__: pl
      });
      var ql = function() {};
      k["com.stencyl.utils.motion.BackOutIn"] =
        ql;
      ql.__name__ = "com.stencyl.utils.motion.BackOutIn";
      ql.__super__ = La;
      ql.prototype = t(La.prototype, {
        apply: function(a) {
          if (0 == a) return 0;
          if (1 == a) return 1;
          if (.5 > a) return a = 2 * a - 1, .5 * (a * a * (2.70158 * a + 1.70158) + 1);
          a = 2 * a - 1;
          return .5 * a * a * (2.70158 * a - 1.70158) + .5
        },
        __class__: ql
      });
      var rl = function() {};
      k["com.stencyl.utils.motion.BounceIn"] = rl;
      rl.__name__ = "com.stencyl.utils.motion.BounceIn";
      rl.__super__ = La;
      rl.prototype = t(La.prototype, {
        apply: function(a) {
          a = 1 - a;
          return .36363636363636365 > a ? 1 - 7.5625 * a * a : .7272727272727273 > a ?
            1 - (7.5625 * (a -= .5454545454545454) * a + .75) : .9090909090909091 > a ? 1 - (7.5625 * (a -= .8181818181818182) * a + .9375) : 1 - (7.5625 * (a -= .9545454545454546) * a + .984375)
        },
        __class__: rl
      });
      var sl = function() {};
      k["com.stencyl.utils.motion.BounceInOut"] = sl;
      sl.__name__ = "com.stencyl.utils.motion.BounceInOut";
      sl.__super__ = La;
      sl.prototype = t(La.prototype, {
        apply: function(a) {
          if (.5 > a) return a = 1 - 2 * a, .36363636363636365 > a ? .5 * (1 - 7.5625 * a * a) : .7272727272727273 > a ? .5 * (1 - (7.5625 * (a -= .5454545454545454) * a + .75)) : .9090909090909091 > a ? .5 * (1 - (7.5625 *
            (a -= .8181818181818182) * a + .9375)) : .5 * (1 - (7.5625 * (a -= .9545454545454546) * a + .984375));
          a = 2 * a - 1;
          return .36363636363636365 > a ? 7.5625 * a * a * .5 + .5 : .7272727272727273 > a ? .5 * (7.5625 * (a -= .5454545454545454) * a + .75) + .5 : .9090909090909091 > a ? .5 * (7.5625 * (a -= .8181818181818182) * a + .9375) + .5 : .5 * (7.5625 * (a -= .9545454545454546) * a + .984375) + .5
        },
        __class__: sl
      });
      var tl = function() {};
      k["com.stencyl.utils.motion.BounceOut"] = tl;
      tl.__name__ = "com.stencyl.utils.motion.BounceOut";
      tl.__super__ = La;
      tl.prototype = t(La.prototype, {
        apply: function(a) {
          return .36363636363636365 >
            a ? 7.5625 * a * a : .7272727272727273 > a ? 7.5625 * (a -= .5454545454545454) * a + .75 : .9090909090909091 > a ? 7.5625 * (a -= .8181818181818182) * a + .9375 : 7.5625 * (a -= .9545454545454546) * a + .984375
        },
        __class__: tl
      });
      var ul = function() {};
      k["com.stencyl.utils.motion.BounceOutIn"] = ul;
      ul.__name__ = "com.stencyl.utils.motion.BounceOutIn";
      ul.__super__ = La;
      ul.prototype = t(La.prototype, {
        apply: function(a) {
          if (.5 > a) return .36363636363636365 > (a *= 2) ? 3.78125 * a * a : .7272727272727273 > a ? .5 * (7.5625 * (a -= .5454545454545454) * a + .75) : .9090909090909091 > a ? .5 * (7.5625 *
            (a -= .8181818181818182) * a + .9375) : .5 * (7.5625 * (a -= .9545454545454546) * a + .984375);
          a = 1 - (2 * a - 1);
          return .36363636363636365 > a ? .5 - 3.78125 * a * a + .5 : .7272727272727273 > a ? .5 - .5 * (7.5625 * (a -= .5454545454545454) * a + .75) + .5 : .9090909090909091 > a ? .5 - .5 * (7.5625 * (a -= .8181818181818182) * a + .9375) + .5 : .5 - .5 * (7.5625 * (a -= .9545454545454546) * a + .984375) + .5
        },
        __class__: ul
      });
      var vl = function() {};
      k["com.stencyl.utils.motion.CircIn"] = vl;
      vl.__name__ = "com.stencyl.utils.motion.CircIn";
      vl.__super__ = La;
      vl.prototype = t(La.prototype, {
        apply: function(a) {
          return -1 >
            a || 1 < a ? 0 : 1 - Math.sqrt(1 - a * a)
        },
        __class__: vl
      });
      var wl = function() {};
      k["com.stencyl.utils.motion.CircInOut"] = wl;
      wl.__name__ = "com.stencyl.utils.motion.CircInOut";
      wl.__super__ = La;
      wl.prototype = t(La.prototype, {
        apply: function(a) {
          return -.5 > a || 1.5 < a ? .5 : 1 > (a *= 2) ? -.5 * (Math.sqrt(1 - a * a) - 1) : .5 * (Math.sqrt(1 - (a -= 2) * a) + 1)
        },
        __class__: wl
      });
      var xl = function() {};
      k["com.stencyl.utils.motion.CircOut"] = xl;
      xl.__name__ = "com.stencyl.utils.motion.CircOut";
      xl.__super__ = La;
      xl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 > a ||
            2 < a ? 0 : Math.sqrt(a * (2 - a))
        },
        __class__: xl
      });
      var yl = function() {};
      k["com.stencyl.utils.motion.CircOutIn"] = yl;
      yl.__name__ = "com.stencyl.utils.motion.CircOutIn";
      yl.__super__ = La;
      yl.prototype = t(La.prototype, {
        apply: function(a) {
          if (0 > a) return 0;
          if (1 < a) return 1;
          if (.5 > a) return a = 2 * a - 1, .5 * Math.sqrt(1 - a * a);
          a = 2 * a - 1;
          return -.5 * (Math.sqrt(1 - a * a) - 1 - 1)
        },
        __class__: yl
      });
      var zl = function() {};
      k["com.stencyl.utils.motion.CubicIn"] = zl;
      zl.__name__ = "com.stencyl.utils.motion.CubicIn";
      zl.__super__ = La;
      zl.prototype = t(La.prototype, {
        apply: function(a) {
          return a *
            a * a
        },
        __class__: zl
      });
      var Al = function() {};
      k["com.stencyl.utils.motion.CubicInOut"] = Al;
      Al.__name__ = "com.stencyl.utils.motion.CubicInOut";
      Al.__super__ = La;
      Al.prototype = t(La.prototype, {
        apply: function(a) {
          return 1 > (a *= 2) ? .5 * a * a * a : .5 * ((a -= 2) * a * a + 2)
        },
        __class__: Al
      });
      var Bl = function() {};
      k["com.stencyl.utils.motion.CubicOut"] = Bl;
      Bl.__name__ = "com.stencyl.utils.motion.CubicOut";
      Bl.__super__ = La;
      Bl.prototype = t(La.prototype, {
        apply: function(a) {
          return --a * a * a + 1
        },
        __class__: Bl
      });
      var Cl = function() {};
      k["com.stencyl.utils.motion.CubicOutIn"] =
        Cl;
      Cl.__name__ = "com.stencyl.utils.motion.CubicOutIn";
      Cl.__super__ = La;
      Cl.prototype = t(La.prototype, {
        apply: function(a) {
          a = 2 * a - 1;
          return .5 * (a * a * a + 1)
        },
        __class__: Cl
      });
      var Dl = function() {};
      k["com.stencyl.utils.motion.ElasticIn"] = Dl;
      Dl.__name__ = "com.stencyl.utils.motion.ElasticIn";
      Dl.__super__ = La;
      Dl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : -(Math.exp(6.931471805599453 * --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4))
        },
        __class__: Dl
      });
      var El = function() {};
      k["com.stencyl.utils.motion.ElasticInOut"] =
        El;
      El.__name__ = "com.stencyl.utils.motion.ElasticInOut";
      El.__super__ = La;
      El.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : 1 > (a *= 2) ? -.5 * Math.exp(6.931471805599453 * --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) : Math.exp(-6.931471805599453 * --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) * .5 + 1
        },
        __class__: El
      });
      var Fl = function() {};
      k["com.stencyl.utils.motion.ElasticOut"] = Fl;
      Fl.__name__ = "com.stencyl.utils.motion.ElasticOut";
      Fl.__super__ = La;
      Fl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 ==
            a ? 0 : 1 == a ? 1 : Math.exp(-6.931471805599453 * a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) + 1
        },
        __class__: Fl
      });
      var Gl = function() {};
      k["com.stencyl.utils.motion.ElasticOutIn"] = Gl;
      Gl.__name__ = "com.stencyl.utils.motion.ElasticOutIn";
      Gl.__super__ = La;
      Gl.prototype = t(La.prototype, {
        apply: function(a) {
          if (.5 > a) return 0 == (a *= 2) ? 0 : .5 * Math.exp(-6.931471805599453 * a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) + .5;
          if (.5 == a) return .5;
          if (1 == a) return 1;
          a = 2 * a - 1;
          return -(.5 * Math.exp(6.931471805599453 * --a) * Math.sin(6.283185307179586 *
            (.001 * a - 7.5E-5) / 3E-4)) + .5
        },
        __class__: Gl
      });
      var Hl = function() {};
      k["com.stencyl.utils.motion.ExpoIn"] = Hl;
      Hl.__name__ = "com.stencyl.utils.motion.ExpoIn";
      Hl.__super__ = La;
      Hl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : Math.exp(6.931471805599453 * (a - 1))
        },
        __class__: Hl
      });
      var Il = function() {};
      k["com.stencyl.utils.motion.ExpoInOut"] = Il;
      Il.__name__ = "com.stencyl.utils.motion.ExpoInOut";
      Il.__super__ = La;
      Il.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : 1 > (a *= 2) ? .5 * Math.exp(6.931471805599453 *
            (a - 1)) : .5 * (2 - Math.exp(-6.931471805599453 * (a - 1)))
        },
        __class__: Il
      });
      var Jl = function() {};
      k["com.stencyl.utils.motion.ExpoOut"] = Jl;
      Jl.__name__ = "com.stencyl.utils.motion.ExpoOut";
      Jl.__super__ = La;
      Jl.prototype = t(La.prototype, {
        apply: function(a) {
          return 1 == a ? 1 : 1 - Math.exp(-6.931471805599453 * a)
        },
        __class__: Jl
      });
      var Kl = function() {};
      k["com.stencyl.utils.motion.ExpoOutIn"] = Kl;
      Kl.__name__ = "com.stencyl.utils.motion.ExpoOutIn";
      Kl.__super__ = La;
      Kl.prototype = t(La.prototype, {
        apply: function(a) {
          return .5 > a ? .5 * (1 - Math.exp(-13.862943611198906 *
            a)) : .5 == a ? .5 : .5 * (Math.exp(13.862943611198906 * (a - 1)) + 1)
        },
        __class__: Kl
      });
      var Ll = function() {};
      k["com.stencyl.utils.motion.Linear"] = Ll;
      Ll.__name__ = "com.stencyl.utils.motion.Linear";
      Ll.__super__ = La;
      Ll.prototype = t(La.prototype, {
        apply: function(a) {
          return a
        },
        __class__: Ll
      });
      var Ml = function() {};
      k["com.stencyl.utils.motion.QuadIn"] = Ml;
      Ml.__name__ = "com.stencyl.utils.motion.QuadIn";
      Ml.__super__ = La;
      Ml.prototype = t(La.prototype, {
        apply: function(a) {
          return a * a
        },
        __class__: Ml
      });
      var Nl = function() {};
      k["com.stencyl.utils.motion.QuadInOut"] =
        Nl;
      Nl.__name__ = "com.stencyl.utils.motion.QuadInOut";
      Nl.__super__ = La;
      Nl.prototype = t(La.prototype, {
        apply: function(a) {
          return .5 > a ? 2 * a * a : -2 * --a * a + 1
        },
        __class__: Nl
      });
      var Ol = function() {};
      k["com.stencyl.utils.motion.QuadOut"] = Ol;
      Ol.__name__ = "com.stencyl.utils.motion.QuadOut";
      Ol.__super__ = La;
      Ol.prototype = t(La.prototype, {
        apply: function(a) {
          return -a * (a - 2)
        },
        __class__: Ol
      });
      var Pl = function() {};
      k["com.stencyl.utils.motion.QuadOutIn"] = Pl;
      Pl.__name__ = "com.stencyl.utils.motion.QuadOutIn";
      Pl.__super__ = La;
      Pl.prototype =
        t(La.prototype, {
          apply: function(a) {
            if (.5 > a) return -.5 * (a *= 2) * (a - 2);
            a = 2 * a - 1;
            return .5 * a * a + .5
          },
          __class__: Pl
        });
      var Ql = function() {};
      k["com.stencyl.utils.motion.QuartIn"] = Ql;
      Ql.__name__ = "com.stencyl.utils.motion.QuartIn";
      Ql.__super__ = La;
      Ql.prototype = t(La.prototype, {
        apply: function(a) {
          return (a *= a) * a
        },
        __class__: Ql
      });
      var Rl = function() {};
      k["com.stencyl.utils.motion.QuartInOut"] = Rl;
      Rl.__name__ = "com.stencyl.utils.motion.QuartInOut";
      Rl.__super__ = La;
      Rl.prototype = t(La.prototype, {
        apply: function(a) {
          if (1 > (a *= 2)) return .5 *
            (a *= a) * a;
          a *= a -= 2;
          return -.5 * (a * a - 2)
        },
        __class__: Rl
      });
      var Sl = function() {};
      k["com.stencyl.utils.motion.QuartOut"] = Sl;
      Sl.__name__ = "com.stencyl.utils.motion.QuartOut";
      Sl.__super__ = La;
      Sl.prototype = t(La.prototype, {
        apply: function(a) {
          a *= --a;
          return 1 - a * a
        },
        __class__: Sl
      });
      var Tl = function() {};
      k["com.stencyl.utils.motion.QuartOutIn"] = Tl;
      Tl.__name__ = "com.stencyl.utils.motion.QuartOutIn";
      Tl.__super__ = La;
      Tl.prototype = t(La.prototype, {
        apply: function(a) {
          if (.5 > a) return a = 2 * a - 1, -.5 * (a *= a) * a + .5;
          a = 2 * a - 1;
          return .5 * (a *= a) * a +
            .5
        },
        __class__: Tl
      });
      var Ul = function() {};
      k["com.stencyl.utils.motion.QuintIn"] = Ul;
      Ul.__name__ = "com.stencyl.utils.motion.QuintIn";
      Ul.__super__ = La;
      Ul.prototype = t(La.prototype, {
        apply: function(a) {
          return a * (a *= a) * a
        },
        __class__: Ul
      });
      var Vl = function() {};
      k["com.stencyl.utils.motion.QuintInOut"] = Vl;
      Vl.__name__ = "com.stencyl.utils.motion.QuintInOut";
      Vl.__super__ = La;
      Vl.prototype = t(La.prototype, {
        apply: function(a) {
          return 1 > (a *= 2) ? .5 * a * (a *= a) * a : .5 * (a -= 2) * (a *= a) * a + 1
        },
        __class__: Vl
      });
      var Wl = function() {};
      k["com.stencyl.utils.motion.QuintOut"] =
        Wl;
      Wl.__name__ = "com.stencyl.utils.motion.QuintOut";
      Wl.__super__ = La;
      Wl.prototype = t(La.prototype, {
        apply: function(a) {
          return --a * (a *= a) * a + 1
        },
        __class__: Wl
      });
      var Xl = function() {};
      k["com.stencyl.utils.motion.QuintOutIn"] = Xl;
      Xl.__name__ = "com.stencyl.utils.motion.QuintOutIn";
      Xl.__super__ = La;
      Xl.prototype = t(La.prototype, {
        apply: function(a) {
          a = 2 * a - 1;
          return .5 * (a * (a *= a) * a + 1)
        },
        __class__: Xl
      });
      var Yl = function() {};
      k["com.stencyl.utils.motion.SineIn"] = Yl;
      Yl.__name__ = "com.stencyl.utils.motion.SineIn";
      Yl.__super__ = La;
      Yl.prototype =
        t(La.prototype, {
          apply: function(a) {
            return 0 == a ? 0 : 1 == a ? 1 : 1 - Math.cos(1.5707963267948966 * a)
          },
          __class__: Yl
        });
      var Zl = function() {};
      k["com.stencyl.utils.motion.SineInOut"] = Zl;
      Zl.__name__ = "com.stencyl.utils.motion.SineInOut";
      Zl.__super__ = La;
      Zl.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : -.5 * (Math.cos(3.141592653589793 * a) - 1)
        },
        __class__: Zl
      });
      var $l = function() {};
      k["com.stencyl.utils.motion.SineOut"] = $l;
      $l.__name__ = "com.stencyl.utils.motion.SineOut";
      $l.__super__ = La;
      $l.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : Math.sin(1.5707963267948966 * a)
        },
        __class__: $l
      });
      var am = function() {};
      k["com.stencyl.utils.motion.SineOutIn"] = am;
      am.__name__ = "com.stencyl.utils.motion.SineOutIn";
      am.__super__ = La;
      am.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 == a ? 0 : 1 == a ? 1 : .5 > a ? .5 * Math.sin(3.141592653589793 * a) : -.5 * Math.cos(1.5707963267948966 * (2 * a - 1)) + 1
        },
        __class__: am
      });
      var bm = function() {};
      k["com.stencyl.utils.motion.WarpIn"] = bm;
      bm.__name__ = "com.stencyl.utils.motion.WarpIn";
      bm.__super__ = La;
      bm.prototype = t(La.prototype, {
        apply: function(a) {
          return 1 > a ? 0 : 1
        },
        __class__: bm
      });
      var cm = function() {};
      k["com.stencyl.utils.motion.WarpInOut"] = cm;
      cm.__name__ = "com.stencyl.utils.motion.WarpInOut";
      cm.__super__ = La;
      cm.prototype = t(La.prototype, {
        apply: function(a) {
          return .5 > a ? 0 : 1
        },
        __class__: cm
      });
      var dm = function() {};
      k["com.stencyl.utils.motion.WarpOut"] = dm;
      dm.__name__ = "com.stencyl.utils.motion.WarpOut";
      dm.__super__ = La;
      dm.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 >= a ? 0 : 1
        },
        __class__: dm
      });
      var em = function() {};
      k["com.stencyl.utils.motion.WarpOutIn"] = em;
      em.__name__ = "com.stencyl.utils.motion.WarpOutIn";
      em.__super__ = La;
      em.prototype = t(La.prototype, {
        apply: function(a) {
          return 0 >= a ? 0 : 1 > a ? .5 : 1
        },
        __class__: em
      });
      var qa = function() {};
      k["com.stencyl.utils.motion.Easing"] = qa;
      qa.__name__ = "com.stencyl.utils.motion.Easing";
      var Wh = function() {};
      k["com.stencyl.utils.motion.EasingConstants"] = Wh;
      Wh.__name__ = "com.stencyl.utils.motion.EasingConstants";
      var jg = function() {
        this.paused = this.finished = this.active = !1
      };
      k["com.stencyl.utils.motion.TweenObject"] =
        jg;
      jg.__name__ = "com.stencyl.utils.motion.TweenObject";
      jg.prototype = {
        easing: null,
        time: null,
        duration: null,
        active: null,
        paused: null,
        updated: null,
        finished: null,
        onUpdate: null,
        onComplete: null,
        _tween: function(a, b) {
          null == a && (a = qa.linear);
          this.easing = a;
          this.duration = b;
          this.active || xb.markActive(this);
          this.time = 0;
          this.active = !0;
          this.paused = this.finished = this.updated = !1;
          0 == b && (this.duration = 1, xb.finish(this))
        },
        update: function(a) {
          if (!this.paused)
            if (this.time += a, this.time > this.duration && (this.time = this.duration),
              this.updateValue(), this.updated = !0, this.time == this.duration) {
              this.active = !1;
              this.finished = !0;
              if (null != this.onUpdate) this.onUpdate();
              if (null != this.onComplete) this.onComplete()
            } else if (null != this.onUpdate) this.onUpdate()
        },
        updateValue: function() {},
        doOnUpdate: function(a) {
          this.onUpdate = a;
          return this
        },
        doOnComplete: function(a) {
          this.onComplete = a;
          return this
        },
        __class__: jg
      };
      var he = function() {
        jg.call(this)
      };
      k["com.stencyl.utils.motion.TweenFloat"] = he;
      he.__name__ = "com.stencyl.utils.motion.TweenFloat";
      he.__super__ =
        jg;
      he.prototype = t(jg.prototype, {
        startValue: null,
        endValue: null,
        value: null,
        tween: function(a, b, c, d) {
          this.startValue = a;
          this.endValue = b;
          this.value = a;
          this._tween(c, d);
          return this
        },
        updateValue: function() {
          var a = this.easing.apply(this.time / this.duration);
          this.value = this.startValue * (1 - a) + this.endValue * a
        },
        __class__: he
      });
      var Lf = function() {
        jg.call(this)
      };
      k["com.stencyl.utils.motion.TweenFloat2"] = Lf;
      Lf.__name__ = "com.stencyl.utils.motion.TweenFloat2";
      Lf.__super__ = jg;
      Lf.prototype = t(jg.prototype, {
        startValue1: null,
        endValue1: null,
        value1: null,
        startValue2: null,
        endValue2: null,
        value2: null,
        tween: function(a, b, c, d, e, f) {
          this.startValue1 = a;
          this.endValue1 = b;
          this.value1 = a;
          this.startValue2 = c;
          this.endValue2 = d;
          this.value2 = c;
          this._tween(e, f);
          return this
        },
        updateValue: function() {
          var a = this.easing.apply(this.time / this.duration);
          this.value1 = this.startValue1 * (1 - a) + this.endValue1 * a;
          this.value2 = this.startValue2 * (1 - a) + this.endValue2 * a
        },
        __class__: Lf
      });
      var xb = function() {};
      k["com.stencyl.utils.motion.TweenManager"] = xb;
      xb.__name__ = "com.stencyl.utils.motion.TweenManager";
      xb.resetStatics = function() {
        xb.activeObjects = [];
        xb.finishedObjects = []
      };
      xb.markActive = function(a) {
        xb.activeObjects.push(a)
      };
      xb.cancel = function(a) {
        var b = xb.activeObjects.indexOf(a); - 1 != b && (a.active = !1, a.updated = !1, a.finished = !1, a.paused = !1, xb.activeObjects[b] = xb.activeObjects[xb.activeObjects.length - 1], xb.activeObjects.pop())
      };
      xb.finish = function(a) {
        var b = xb.activeObjects.indexOf(a); - 1 != b && (a.update(a.duration - a.time), xb.activeObjects[b] = xb.activeObjects[xb.activeObjects.length - 1], xb.activeObjects.pop(),
          xb.finishedObjects.push(a))
      };
      xb.update = function(a) {
        for (var b = xb.finishedObjects.length; 0 < b--;) xb.finishedObjects.pop().updated = !1;
        for (b = xb.activeObjects.length; 0 < b--;) {
          var c = xb.activeObjects[b];
          c.update(a);
          c.finished && (xb.activeObjects[b] = xb.activeObjects[xb.activeObjects.length - 1], xb.activeObjects.pop(), xb.finishedObjects.push(c))
        }
      };
      xb.timer = function(a) {
        return (new fm).tween(a)
      };
      var fm = function() {
        jg.call(this)
      };
      k["com.stencyl.utils.motion.TweenTimer"] = fm;
      fm.__name__ = "com.stencyl.utils.motion.TweenTimer";
      fm.__super__ = jg;
      fm.prototype = t(jg.prototype, {
        tween: function(a) {
          this._tween(qa.linear, a);
          return this
        },
        updateValue: function() {},
        __class__: fm
      });
      var kg = O["haxe.StackItem"] = {
        __ename__: "haxe.StackItem",
        __constructs__: null,
        CFunction: {
          _hx_name: "CFunction",
          _hx_index: 0,
          __enum__: "haxe.StackItem",
          toString: v
        },
        Module: (w = function(a) {
          return {
            _hx_index: 1,
            m: a,
            __enum__: "haxe.StackItem",
            toString: v
          }
        }, w._hx_name = "Module", w.__params__ = ["m"], w),
        FilePos: (w = function(a, b, c, d) {
          return {
            _hx_index: 2,
            s: a,
            file: b,
            line: c,
            column: d,
            __enum__: "haxe.StackItem",
            toString: v
          }
        }, w._hx_name = "FilePos", w.__params__ = ["s", "file", "line", "column"], w),
        Method: (w = function(a, b) {
          return {
            _hx_index: 3,
            classname: a,
            method: b,
            __enum__: "haxe.StackItem",
            toString: v
          }
        }, w._hx_name = "Method", w.__params__ = ["classname", "method"], w),
        LocalFunction: (w = function(a) {
          return {
            _hx_index: 4,
            v: a,
            __enum__: "haxe.StackItem",
            toString: v
          }
        }, w._hx_name = "LocalFunction", w.__params__ = ["v"], w)
      };
      kg.__constructs__ = [kg.CFunction, kg.Module, kg.FilePos, kg.Method, kg.LocalFunction];
      var nf = {
          callStack: function() {
            return pa.toHaxe(pa.callStack())
          },
          exceptionStack: function(a) {
            null == a && (a = !1);
            var b = pa.toHaxe(pa.exceptionStack());
            return a ? b : nf.subtract(b, nf.callStack())
          },
          toString: function(a) {
            for (var b = new Qa, c = 0; c < a.length;) {
              var d = a[c];
              ++c;
              b.b += "\nCalled from ";
              nf.itemToString(b, d)
            }
            return b.b
          },
          subtract: function(a, b) {
            for (var c = -1, d = -1; ++d < a.length;) {
              for (var e = 0, f = b.length; e < f;) {
                var g = e++;
                if (nf.equalItems(a[d], b[g])) {
                  if (0 > c && (c = d), ++d, d >= a.length) break
                } else c = -1
              }
              if (0 <= c) break
            }
            return 0 <= c ? a.slice(0, c) : a
          },
          equalItems: function(a, b) {
            if (null == a) return null ==
              b ? !0 : !1;
            switch (a._hx_index) {
              case 0:
                return null == b ? !1 : 0 == b._hx_index ? !0 : !1;
              case 1:
                return null == b ? !1 : 1 == b._hx_index ? a.m == b.m : !1;
              case 2:
                if (null == b) return !1;
                if (2 == b._hx_index) {
                  var c = b.s,
                    d = b.line,
                    e = b.column,
                    f = a.column,
                    g = a.line,
                    h = a.s;
                  return a.file == b.file && g == d && f == e ? nf.equalItems(h, c) : !1
                }
                return !1;
              case 3:
                return null == b ? !1 : 3 == b._hx_index ? (c = b.method, d = a.method, a.classname == b.classname ? d == c : !1) : !1;
              case 4:
                return null == b ? !1 : 4 == b._hx_index ? a.v == b.v : !1
            }
          },
          itemToString: function(a, b) {
            switch (b._hx_index) {
              case 0:
                a.b +=
                  "a C function";
                break;
              case 1:
                b = b.m;
                a.b += "module ";
                a.b += null == b ? "null" : "" + b;
                break;
              case 2:
                var c = b.s,
                  d = b.file,
                  e = b.line;
                b = b.column;
                null != c && (nf.itemToString(a, c), a.b += " (");
                a.b += null == d ? "null" : "" + d;
                a.b += " line ";
                a.b += null == e ? "null" : "" + e;
                null != b && (a.b += " column ", a.b += null == b ? "null" : "" + b);
                null != c && (a.b += ")");
                break;
              case 3:
                c = b.classname;
                b = b.method;
                a.b += M.string(null == c ? "<unknown>" : c);
                a.b += ".";
                a.b += null == b ? "null" : "" + b;
                break;
              case 4:
                b = b.v, a.b += "local function #", a.b += null == b ? "null" : "" + b
            }
          }
        },
        F = function(a, b, c) {
          Error.call(this,
            a);
          this.message = a;
          this.__previousException = b;
          this.__nativeException = null != c ? c : this;
          this.__skipStack = 0;
          a = Error.prepareStackTrace;
          Error.prepareStackTrace = function(a) {
            return a.stack
          };
          if (c instanceof Error) this.stack = c.stack;
          else {
            c = null;
            if (Error.captureStackTrace) Error.captureStackTrace(this, F), c = this;
            else if (c = Error(), "undefined" == typeof c.stack) {
              try {
                throw c;
              } catch (d) {}
              this.__skipStack++
            }
            this.stack = c.stack
          }
          Error.prepareStackTrace = a
        };
      k["haxe.Exception"] = F;
      F.__name__ = "haxe.Exception";
      F.caught = function(a) {
        return a instanceof
        F ? a : a instanceof Error ? new F(a.message, null, a) : new Oj(a, null, a)
      };
      F.thrown = function(a) {
        if (a instanceof F) return a.get_native();
        if (a instanceof Error) return a;
        a = new Oj(a);
        a.__skipStack++;
        return a
      };
      F.__super__ = Error;
      F.prototype = t(Error.prototype, {
        __skipStack: null,
        __nativeException: null,
        __previousException: null,
        unwrap: function() {
          return this.__nativeException
        },
        toString: function() {
          return this.get_message()
        },
        __shiftStack: function() {
          this.__skipStack++
        },
        get_message: function() {
          return this.message
        },
        get_native: function() {
          return this.__nativeException
        },
        get_stack: function() {
          var a = this.__exceptionStack;
          null == a && (a = pa.toHaxe(pa.normalize(this.stack), this.__skipStack), this.setProperty("__exceptionStack", a));
          return a
        },
        setProperty: function(a, b) {
          try {
            Object.defineProperty(this, a, {
              value: b
            })
          } catch (c) {
            this[a] = b
          }
        },
        __class__: F,
        __properties__: {
          get_native: "get_native",
          get_stack: "get_stack",
          get_message: "get_message"
        }
      });
      var to = {
          ucompare: function(a, b) {
            return 0 > a ? 0 > b ? ~b - ~a | 0 : 1 : 0 > b ? -1 : a - b | 0
          }
        },
        sr = {
          toString: function(a) {
            var b = a;
            if (0 == b.high && 0 == b.low) return "0";
            var c =
              "",
              d = !1;
            0 > b.high && (d = !0);
            for (var e = a = new ab(0, 10); 0 != b.high || 0 != b.low;)
              if (a = sr.divMod(b, e), 0 > a.modulus.high) {
                var f = a.modulus;
                b = ~f.high;
                f = ~f.low + 1 | 0;
                0 == f && b++;
                c = f + c;
                b = a.quotient;
                a = ~b.high;
                b = ~b.low + 1 | 0;
                0 == b && (a++, a |= 0);
                b = a = new ab(a, b)
              } else c = a.modulus.low + c, b = a.quotient;
            d && (c = "-" + c);
            return c
          },
          divMod: function(a, b) {
            if (0 == b.high) switch (b.low) {
              case 0:
                throw F.thrown("divide by zero");
              case 1:
                var c = new ab(a.high, a.low),
                  d = new ab(0, 0);
                return {
                  quotient: c, modulus: d
                }
            }
            var e = 0 > a.high != 0 > b.high;
            if (0 > a.high) {
              var f =
                ~a.high;
              c = ~a.low + 1 | 0;
              0 == c && (f++, f |= 0);
              c = new ab(f, c)
            } else c = new ab(a.high, a.low);
            var g = c;
            0 > b.high && (f = ~b.high, c = ~b.low + 1 | 0, 0 == c && (f++, f |= 0), b = c = new ab(f, c));
            for (var h = c = new ab(0, 0), m = c = new ab(0, 1); !(0 > b.high || (f = to.ucompare(b.high, g.high), f = 0 != f ? f : to.ucompare(b.low, g.low), c = 1, c &= 63, b = 0 == c ? c = new ab(b.high, b.low) : 32 > c ? d = new ab(b.high << c | b.low >>> 32 - c, b.low << c) : c = new ab(b.low << c - 32, 0), c = 1, c &= 63, m = 0 == c ? new ab(m.high, m.low) : 32 > c ? new ab(m.high << c | m.low >>> 32 - c, m.low << c) : c = new ab(m.low << c - 32, 0), 0 <= f)););
            for (; 0 !=
              m.high || 0 != m.low;) f = to.ucompare(g.high, b.high), 0 <= (0 != f ? f : to.ucompare(g.low, b.low)) && (h = c = new ab(h.high | m.high, h.low | m.low), f = g.high - b.high | 0, c = g.low - b.low | 0, 0 > to.ucompare(g.low, b.low) && (f--, f |= 0), g = d = new ab(f, c)), c = 1, c &= 63, m = 0 == c ? c = new ab(m.high, m.low) : 32 > c ? new ab(m.high >>> c, m.high << 32 - c | m.low >>> c) : new ab(0, m.high >>> c - 32), c = 1, c &= 63, b = 0 == c ? c = new ab(b.high, b.low) : 32 > c ? new ab(b.high >>> c, b.high << 32 - c | b.low >>> c) : new ab(0, b.high >>> c - 32);
            e && (f = ~h.high, c = ~h.low + 1 | 0, 0 == c && (f++, f |= 0), h = c = new ab(f, c));
            0 > a.high &&
              (f = ~g.high, c = ~g.low + 1 | 0, 0 == c && (f++, f |= 0), g = c = new ab(f, c));
            return {
              quotient: h,
              modulus: g
            }
          }
        },
        ab = function(a, b) {
          this.high = a;
          this.low = b
        };
      k["haxe._Int64.___Int64"] = ab;
      ab.__name__ = "haxe._Int64.___Int64";
      ab.prototype = {
        high: null,
        low: null,
        __class__: ab
      };
      var kh = function() {};
      k["haxe.Log"] = kh;
      kh.__name__ = "haxe.Log";
      kh.formatOutput = function(a, b) {
        var c = M.string(a);
        if (null == b) return c;
        var d = b.fileName + ":" + b.lineNumber;
        if (null != b.customParams) {
          var e = 0;
          for (b = b.customParams; e < b.length;) a = b[e], ++e, c += ", " + M.string(a)
        }
        return d +
          ": " + c
      };
      kh.trace = function(a, b) {
        a = kh.formatOutput(a, b);
        "undefined" != typeof console && null != console.log && console.log(a)
      };
      var pa = function() {};
      k["haxe.NativeStackTrace"] = pa;
      pa.__name__ = "haxe.NativeStackTrace";
      pa.saveStack = function(a) {
        pa.lastError = a
      };
      pa.callStack = function() {
        var a = Error(""),
          b = pa.tryHaxeStack(a);
        if ("undefined" == typeof b) {
          try {
            throw a;
          } catch (c) {}
          b = a.stack
        }
        return pa.normalize(b, 2)
      };
      pa.exceptionStack = function() {
        return pa.normalize(pa.tryHaxeStack(pa.lastError))
      };
      pa.toHaxe = function(a, b) {
        null ==
          b && (b = 0);
        if (null == a) return [];
        if ("string" == typeof a) {
          a = a.split("\n");
          "Error" == a[0] && a.shift();
          for (var c = [], d = 0, e = a.length; d < e;) {
            var f = d++;
            if (!(b > f)) {
              var g = a[f];
              f = g.match(/^    at ([A-Za-z0-9_. ]+) \(([^)]+):([0-9]+):([0-9]+)\)$/);
              if (null != f) {
                g = f[1].split(".");
                "$hxClasses" == g[0] && g.shift();
                var h = g.pop(),
                  m = f[2],
                  l = M.parseInt(f[3]);
                f = M.parseInt(f[4]);
                c.push(kg.FilePos("Anonymous function" == h ? kg.LocalFunction() : "Global code" == h ? null : kg.Method(g.join("."), h), m, l, f))
              } else c.push(kg.Module(W.trim(g)))
            }
          }
          return c
        }
        return 0 <
          b && Array.isArray(a) ? a.slice(b) : a
      };
      pa.tryHaxeStack = function(a) {
        if (null == a) return [];
        var b = Error.prepareStackTrace;
        Error.prepareStackTrace = pa.prepareHxStackTrace;
        a = a.stack;
        Error.prepareStackTrace = b;
        return a
      };
      pa.prepareHxStackTrace = function(a, b) {
        a = [];
        for (var c = 0; c < b.length;) {
          var d = b[c];
          ++c;
          null != pa.wrapCallSite && (d = pa.wrapCallSite(d));
          var e = null,
            f = d.getFunctionName();
          if (null != f) {
            var g = f.lastIndexOf(".");
            0 <= g ? (e = f.substring(0, g), f = f.substring(g + 1), e = kg.Method(e, f)) : e = kg.Method(null, f)
          }
          f = d.getFileName();
          g = null == f ? -1 : f.indexOf("file:");
          null != pa.wrapCallSite && 0 < g && (f = f.substring(g + 6));
          a.push(kg.FilePos(e, f, d.getLineNumber(), d.getColumnNumber()))
        }
        return a
      };
      pa.normalize = function(a, b) {
        null == b && (b = 0);
        if (Array.isArray(a) && 0 < b) return a.slice(b);
        if ("string" == typeof a) {
          switch (a.substring(0, 6)) {
            case "Error\n":
            case "Error:":
              ++b
          }
          return pa.skipLines(a, b)
        }
        return a
      };
      pa.skipLines = function(a, b, c) {
        null == c && (c = 0);
        return 0 < b ? (c = a.indexOf("\n", c), 0 > c ? "" : pa.skipLines(a, --b, c + 1)) : a.substring(c)
      };
      var yh = function() {};
      k["haxe.Resource"] =
        yh;
      yh.__name__ = "haxe.Resource";
      yh.getString = function(a) {
        for (var b = 0, c = yh.content; b < c.length;) {
          var d = c[b];
          ++b;
          if (d.name == a) return null != d.str ? d.str : zh.decode(d.data).toString()
        }
        return null
      };
      yh.getBytes = function(a) {
        for (var b = 0, c = yh.content; b < c.length;) {
          var d = c[b];
          ++b;
          if (d.name == a) return null != d.str ? ib.ofString(d.str) : zh.decode(d.data)
        }
        return null
      };
      var Ce = function() {
        this.buf = new Qa;
        this.cache = [];
        this.useCache = Ce.USE_CACHE;
        this.useEnumIndex = Ce.USE_ENUM_INDEX;
        this.shash = new ua;
        this.scount = 0
      };
      k["haxe.Serializer"] =
        Ce;
      Ce.__name__ = "haxe.Serializer";
      Ce.run = function(a) {
        var b = new Ce;
        b.serialize(a);
        return b.toString()
      };
      Ce.prototype = {
        buf: null,
        cache: null,
        shash: null,
        scount: null,
        useCache: null,
        useEnumIndex: null,
        toString: function() {
          return this.buf.b
        },
        serializeString: function(a) {
          var b = this.shash.h[a];
          null != b ? (this.buf.b += "R", this.buf.b += null == b ? "null" : "" + b) : (this.shash.h[a] = this.scount++, this.buf.b += "y", a = encodeURIComponent(a), this.buf.b += M.string(a.length), this.buf.b += ":", this.buf.b += null == a ? "null" : "" + a)
        },
        serializeRef: function(a) {
          for (var b =
              typeof a, c = 0, d = this.cache.length; c < d;) {
            var e = c++,
              f = this.cache[e];
            if (typeof f == b && f == a) return this.buf.b += "r", this.buf.b += null == e ? "null" : "" + e, !0
          }
          this.cache.push(a);
          return !1
        },
        serializeFields: function(a) {
          for (var b = 0, c = Y.fields(a); b < c.length;) {
            var d = c[b];
            ++b;
            this.serializeString(d);
            this.serialize(Y.field(a, d))
          }
          this.buf.b += "g"
        },
        serialize: function(a) {
          var b = Qb.typeof(a);
          switch (b._hx_index) {
            case 0:
              this.buf.b += "n";
              break;
            case 1:
              if (0 == a) {
                this.buf.b += "z";
                break
              }
              this.buf.b += "i";
              this.buf.b += null == a ? "null" : "" + a;
              break;
            case 2:
              isNaN(a) ? this.buf.b += "k" : isFinite(a) ? (this.buf.b += "d", this.buf.b += null == a ? "null" : "" + a) : this.buf.b += 0 > a ? "m" : "p";
              break;
            case 3:
              this.buf.b += a ? "t" : "f";
              break;
            case 4:
              K.__instanceof(a, wq) ? (a = a.__name__, this.buf.b += "A", this.serializeString(a)) : K.__instanceof(a, tr) ? (this.buf.b += "B", this.serializeString(a.__ename__)) : this.useCache && this.serializeRef(a) || (this.buf.b += "o", this.serializeFields(a));
              break;
            case 5:
              throw F.thrown("Cannot serialize function");
            case 6:
              b = b.c;
              if (b == String) {
                this.serializeString(a);
                break
              }
              if (this.useCache && this.serializeRef(a)) break;
              switch (b) {
                case Array:
                  var c = 0;
                  this.buf.b += "a";
                  for (var d = 0, e = a.length; d < e;) b = d++, null == a[b] ? ++c : (0 < c && (1 == c ? this.buf.b += "n" : (this.buf.b += "u", this.buf.b += null == c ? "null" : "" + c), c = 0), this.serialize(a[b]));
                  0 < c && (1 == c ? this.buf.b += "n" : (this.buf.b += "u", this.buf.b += null == c ? "null" : "" + c));
                  this.buf.b += "h";
                  break;
                case Date:
                  this.buf.b += "v";
                  this.buf.b += M.string(a.getTime());
                  break;
                case Za:
                  this.buf.b += "q";
                  for (b = a.keys(); b.hasNext();) c = b.next(), this.buf.b += ":", this.buf.b +=
                    null == c ? "null" : "" + c, this.serialize(a.h[c]);
                  this.buf.b += "h";
                  break;
                case bb:
                  this.buf.b += "l";
                  for (a = a.h; null != a;) b = a.item, a = a.next, this.serialize(b);
                  this.buf.b += "h";
                  break;
                case pc:
                  this.buf.b += "M";
                  for (b = a.keys(); b.hasNext();) {
                    c = b.next();
                    var f = Y.field(c, "__id__");
                    Y.deleteField(c, "__id__");
                    this.serialize(c);
                    c.__id__ = f;
                    this.serialize(a.h[c.__id__])
                  }
                  this.buf.b += "h";
                  break;
                case ua:
                  this.buf.b += "b";
                  c = Object.keys(a.h);
                  f = c.length;
                  for (d = 0; d < f;) b = c[d++], this.serializeString(b), this.serialize(a.h[b]);
                  this.buf.b += "h";
                  break;
                case ib:
                  this.buf.b += "s";
                  this.buf.b += M.string(Math.ceil(8 * a.length / 6));
                  this.buf.b += ":";
                  b = 0;
                  c = a.length - 2;
                  f = Ce.BASE64_CODES;
                  if (null == f) {
                    f = Array(Ce.BASE64.length);
                    d = 0;
                    for (e = Ce.BASE64.length; d < e;) {
                      var g = d++;
                      f[g] = da.cca(Ce.BASE64, g)
                    }
                    Ce.BASE64_CODES = f
                  }
                  for (; b < c;) d = a.b[b++], e = a.b[b++], g = a.b[b++], this.buf.b += String.fromCodePoint(f[d >> 2]), this.buf.b += String.fromCodePoint(f[(d << 4 | e >> 4) & 63]), this.buf.b += String.fromCodePoint(f[(e << 2 | g >> 6) & 63]), this.buf.b += String.fromCodePoint(f[g & 63]);
                  b == c ? (d = a.b[b++], e =
                    a.b[b++], this.buf.b += String.fromCodePoint(f[d >> 2]), this.buf.b += String.fromCodePoint(f[(d << 4 | e >> 4) & 63]), this.buf.b += String.fromCodePoint(f[e << 2 & 63])) : b == c + 1 && (d = a.b[b++], this.buf.b += String.fromCodePoint(f[d >> 2]), this.buf.b += String.fromCodePoint(f[d << 4 & 63]));
                  break;
                default:
                  this.useCache && this.cache.pop(), null != a.hxSerialize ? (this.buf.b += "C", this.serializeString(b.__name__), this.useCache && this.cache.push(a), a.hxSerialize(this), this.buf.b += "g") : (this.buf.b += "c", this.serializeString(b.__name__), this.useCache &&
                    this.cache.push(a), this.serializeFields(a))
              }
              break;
            case 7:
              b = b.e;
              if (this.useCache) {
                if (this.serializeRef(a)) break;
                this.cache.pop()
              }
              this.buf.b += M.string(this.useEnumIndex ? "j" : "w");
              this.serializeString(b.__ename__);
              this.useEnumIndex ? (this.buf.b += ":", this.buf.b += M.string(a._hx_index)) : (b = a, this.serializeString(O[b.__enum__].__constructs__[b._hx_index]._hx_name));
              this.buf.b += ":";
              c = Qb.enumParameters(a);
              this.buf.b += M.string(c.length);
              for (b = 0; b < c.length;) f = c[b], ++b, this.serialize(f);
              this.useCache && this.cache.push(a);
              break;
            default:
              throw F.thrown("Cannot serialize " + M.string(a));
          }
        },
        __class__: Ce
      };
      var Ue = function(a) {
        var b = this;
        this.id = setInterval(function() {
          b.run()
        }, a)
      };
      k["haxe.Timer"] = Ue;
      Ue.__name__ = "haxe.Timer";
      Ue.delay = function(a, b) {
        var c = new Ue(b);
        c.run = function() {
          c.stop();
          a()
        };
        return c
      };
      Ue.measure = function(a, b) {
        var c = (new Date).getTime() / 1E3;
        a = a();
        kh.trace((new Date).getTime() / 1E3 - c + "s", b);
        return a
      };
      Ue.stamp = function() {
        return (new Date).getTime() / 1E3
      };
      Ue.prototype = {
        id: null,
        stop: function() {
          null != this.id && (clearInterval(this.id),
            this.id = null)
        },
        run: function() {},
        __class__: Ue
      };
      var gm = function() {};
      k["haxe._Unserializer.DefaultResolver"] = gm;
      gm.__name__ = "haxe._Unserializer.DefaultResolver";
      gm.prototype = {
        resolveClass: function(a) {
          return k[a]
        },
        resolveEnum: function(a) {
          return O[a]
        },
        __class__: gm
      };
      var Le = function(a) {
        this.buf = a;
        this.length = this.buf.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = Le.DEFAULT_RESOLVER;
        null == a && (a = new gm, Le.DEFAULT_RESOLVER = a);
        this.resolver = a
      };
      k["haxe.Unserializer"] = Le;
      Le.__name__ = "haxe.Unserializer";
      Le.initCodes =
        function() {
          for (var a = [], b = 0, c = Le.BASE64.length; b < c;) {
            var d = b++;
            a[Le.BASE64.charCodeAt(d)] = d
          }
          return a
        };
      Le.run = function(a) {
        return (new Le(a)).unserialize()
      };
      Le.prototype = {
        buf: null,
        pos: null,
        length: null,
        cache: null,
        scache: null,
        resolver: null,
        setResolver: function(a) {
          null == a ? (null == Ei.instance && (Ei.instance = new Ei), this.resolver = Ei.instance) : this.resolver = a
        },
        readDigits: function() {
          for (var a = 0, b = !1, c = this.pos;;) {
            var d = this.buf.charCodeAt(this.pos);
            if (d != d) break;
            if (45 == d) {
              if (this.pos != c) break;
              b = !0
            } else {
              if (48 >
                d || 57 < d) break;
              a = 10 * a + (d - 48)
            }
            this.pos++
          }
          b && (a *= -1);
          return a
        },
        readFloat: function() {
          for (var a = this.pos;;) {
            var b = this.buf.charCodeAt(this.pos);
            if (b != b) break;
            if (43 <= b && 58 > b || 101 == b || 69 == b) this.pos++;
            else break
          }
          return parseFloat(da.substr(this.buf, a, this.pos - a))
        },
        unserializeObject: function(a) {
          for (;;) {
            if (this.pos >= this.length) throw F.thrown("Invalid object");
            if (103 == this.buf.charCodeAt(this.pos)) break;
            var b = this.unserialize();
            if ("string" != typeof b) throw F.thrown("Invalid object key");
            var c = this.unserialize();
            a[b] = c
          }
          this.pos++
        },
        unserializeEnum: function(a, b) {
          if (58 != this.buf.charCodeAt(this.pos++)) throw F.thrown("Invalid enum format");
          var c = this.readDigits();
          if (0 == c) return Qb.createEnum(a, b);
          for (var d = []; 0 < c--;) d.push(this.unserialize());
          return Qb.createEnum(a, b, d)
        },
        unserialize: function() {
          switch (this.buf.charCodeAt(this.pos++)) {
            case 65:
              var a = this.unserialize(),
                b = this.resolver.resolveClass(a);
              if (null == b) throw F.thrown("Class not found " + a);
              return b;
            case 66:
              a = this.unserialize();
              b = this.resolver.resolveEnum(a);
              if (null == b) throw F.thrown("Enum not found " + a);
              return b;
            case 67:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null == b) throw F.thrown("Class not found " + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              b.hxUnserialize(this);
              if (103 != this.buf.charCodeAt(this.pos++)) throw F.thrown("Invalid custom data");
              return b;
            case 77:
              a = new pc;
              this.cache.push(a);
              for (var c; 104 != this.buf.charCodeAt(this.pos);) b = this.unserialize(), a.set(b, this.unserialize());
              this.pos++;
              return a;
            case 82:
              a = this.readDigits();
              if (0 > a || a >= this.scache.length) throw F.thrown("Invalid string reference");
              return this.scache[a];
            case 97:
              b = [];
              for (this.cache.push(b);;) {
                c = this.buf.charCodeAt(this.pos);
                if (104 == c) {
                  this.pos++;
                  break
                }
                117 == c ? (this.pos++, a = this.readDigits(), b[b.length + a - 1] = null) : b.push(this.unserialize())
              }
              return b;
            case 98:
              a = new ua;
              for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos);) b = this.unserialize(), c = this.unserialize(), a.h[b] = c;
              this.pos++;
              return a;
            case 99:
              a = this.unserialize();
              b = this.resolver.resolveClass(a);
              if (null ==
                b) throw F.thrown("Class not found " + a);
              b = Object.create(b.prototype);
              this.cache.push(b);
              this.unserializeObject(b);
              return b;
            case 100:
              return this.readFloat();
            case 102:
              return !1;
            case 105:
              return this.readDigits();
            case 106:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw F.thrown("Enum not found " + a);
              this.pos++;
              for (var d = this.readDigits(), e = c.__constructs__, f = Array(e.length), g = 0, h = e.length; g < h;) b = g++, f[b] = e[b]._hx_name;
              b = f[d];
              if (null == b) throw F.thrown("Unknown enum index " + a + "@" + d);
              b =
                this.unserializeEnum(c, b);
              this.cache.push(b);
              return b;
            case 107:
              return NaN;
            case 108:
              b = new bb;
              for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos);) b.add(this.unserialize());
              this.pos++;
              return b;
            case 109:
              return -Infinity;
            case 110:
              return null;
            case 111:
              return b = {}, this.cache.push(b), this.unserializeObject(b), b;
            case 112:
              return Infinity;
            case 113:
              a = new Za;
              this.cache.push(a);
              for (c = this.buf.charCodeAt(this.pos++); 58 == c;) b = this.readDigits(), c = this.unserialize(), a.h[b] = c, c = this.buf.charCodeAt(this.pos++);
              if (104 != c) throw F.thrown("Invalid IntMap format");
              return a;
            case 114:
              a = this.readDigits();
              if (0 > a || a >= this.cache.length) throw F.thrown("Invalid reference");
              return this.cache[a];
            case 115:
              a = this.readDigits();
              c = this.buf;
              if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < a) throw F.thrown("Invalid bytes length");
              d = Le.CODES;
              null == d && (d = Le.initCodes(), Le.CODES = d);
              b = this.pos;
              e = a & 3;
              f = b + (a - e);
              g = new ib(new ArrayBuffer(3 * (a >> 2) + (2 <= e ? e - 1 : 0)));
              for (h = 0; b < f;) {
                var m = d[c.charCodeAt(b++)],
                  l = d[c.charCodeAt(b++)];
                g.b[h++] = (m << 2 | l >> 4) & 255;
                m = d[c.charCodeAt(b++)];
                g.b[h++] = (l << 4 | m >> 2) & 255;
                l = d[c.charCodeAt(b++)];
                g.b[h++] = (m << 6 | l) & 255
              }
              2 <= e && (m = d[c.charCodeAt(b++)], l = d[c.charCodeAt(b++)], g.b[h++] = (m << 2 | l >> 4) & 255, 3 == e && (m = d[c.charCodeAt(b++)], g.b[h++] = (l << 4 | m >> 2) & 255));
              this.pos += a;
              this.cache.push(g);
              return g;
            case 116:
              return !0;
            case 118:
              return 48 <= this.buf.charCodeAt(this.pos) && 57 >= this.buf.charCodeAt(this.pos) && 48 <= this.buf.charCodeAt(this.pos + 1) && 57 >= this.buf.charCodeAt(this.pos + 1) && 48 <= this.buf.charCodeAt(this.pos +
                2) && 57 >= this.buf.charCodeAt(this.pos + 2) && 48 <= this.buf.charCodeAt(this.pos + 3) && 57 >= this.buf.charCodeAt(this.pos + 3) && 45 == this.buf.charCodeAt(this.pos + 4) ? (b = da.strDate(da.substr(this.buf, this.pos, 19)), this.pos += 19) : b = new Date(this.readFloat()), this.cache.push(b), b;
            case 119:
              a = this.unserialize();
              c = this.resolver.resolveEnum(a);
              if (null == c) throw F.thrown("Enum not found " + a);
              b = this.unserializeEnum(c, this.unserialize());
              this.cache.push(b);
              return b;
            case 120:
              throw F.thrown(this.unserialize());
            case 121:
              a = this.readDigits();
              if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < a) throw F.thrown("Invalid string length");
              b = da.substr(this.buf, this.pos, a);
              this.pos += a;
              b = decodeURIComponent(b.split("+").join(" "));
              this.scache.push(b);
              return b;
            case 122:
              return 0
          }
          this.pos--;
          throw F.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
        },
        __class__: Le
      };
      var Ei = function() {};
      k["haxe._Unserializer.NullResolver"] = Ei;
      Ei.__name__ = "haxe._Unserializer.NullResolver";
      Ei.prototype = {
        resolveClass: function(a) {
          return null
        },
        resolveEnum: function(a) {
          return null
        },
        __class__: Ei
      };
      var Oj = function(a, b, c) {
        F.call(this, String(a), b, c);
        this.value = a;
        this.__skipStack++
      };
      k["haxe.ValueException"] = Oj;
      Oj.__name__ = "haxe.ValueException";
      Oj.__super__ = F;
      Oj.prototype = t(F.prototype, {
        value: null,
        unwrap: function() {
          return this.value
        },
        __class__: Oj
      });
      var Fi = function() {
        this.a1 = 1;
        this.a2 = 0
      };
      k["haxe.crypto.Adler32"] = Fi;
      Fi.__name__ = "haxe.crypto.Adler32";
      Fi.read = function(a) {
        var b = new Fi,
          c = a.readByte(),
          d = a.readByte(),
          e = a.readByte();
        a = a.readByte();
        b.a1 =
          e << 8 | a;
        b.a2 = c << 8 | d;
        return b
      };
      Fi.prototype = {
        a1: null,
        a2: null,
        update: function(a, b, c) {
          var d = this.a1,
            e = this.a2,
            f = b;
          for (b += c; f < b;) c = f++, d = (d + a.b[c]) % 65521, e = (e + d) % 65521;
          this.a1 = d;
          this.a2 = e
        },
        equals: function(a) {
          return a.a1 == this.a1 ? a.a2 == this.a2 : !1
        },
        __class__: Fi
      };
      var ib = function(a) {
        this.length = a.byteLength;
        this.b = new Uint8Array(a);
        this.b.bufferValue = a;
        a.hxBytes = this;
        a.bytes = this.b
      };
      k["haxe.io.Bytes"] = ib;
      ib.__name__ = "haxe.io.Bytes";
      ib.alloc = function(a) {
        return new ib(new ArrayBuffer(a))
      };
      ib.ofString = function(a,
        b) {
        b = [];
        for (var c = 0; c < a.length;) {
          var d = a.charCodeAt(c++);
          55296 <= d && 56319 >= d && (d = d - 55232 << 10 | a.charCodeAt(c++) & 1023);
          127 >= d ? b.push(d) : (2047 >= d ? b.push(192 | d >> 6) : (65535 >= d ? b.push(224 | d >> 12) : (b.push(240 | d >> 18), b.push(128 | d >> 12 & 63)), b.push(128 | d >> 6 & 63)), b.push(128 | d & 63))
        }
        return new ib((new Uint8Array(b)).buffer)
      };
      ib.ofData = function(a) {
        var b = a.hxBytes;
        return null != b ? b : new ib(a)
      };
      ib.ofHex = function(a) {
        if (0 != (a.length & 1)) throw F.thrown("Not a hex string (odd number of digits)");
        for (var b = [], c = 0, d = a.length >>
            1; c < d;) {
          var e = a.charCodeAt(2 * c),
            f = a.charCodeAt(2 * c + 1);
          e = (e & 15) + 9 * ((e & 64) >> 6);
          f = (f & 15) + 9 * ((f & 64) >> 6);
          b.push((e << 4 | f) & 255);
          ++c
        }
        return new ib((new Uint8Array(b)).buffer)
      };
      ib.fastGet = function(a, b) {
        return a.bytes[b]
      };
      ib.prototype = {
        length: null,
        b: null,
        data: null,
        get: function(a) {
          return this.b[a]
        },
        set: function(a, b) {
          this.b[a] = b & 255
        },
        blit: function(a, b, c, d) {
          if (0 > a || 0 > c || 0 > d || a + d > this.length || c + d > b.length) throw F.thrown(Of.OutsideBounds);
          0 == c && d == b.b.byteLength ? this.b.set(b.b, a) : this.b.set(b.b.subarray(c, c + d),
            a)
        },
        fill: function(a, b, c) {
          for (var d = 0; d < b;) d++, this.b[a++] = c & 255
        },
        sub: function(a, b) {
          if (0 > a || 0 > b || a + b > this.length) throw F.thrown(Of.OutsideBounds);
          return new ib(this.b.buffer.slice(a + this.b.byteOffset, a + this.b.byteOffset + b))
        },
        compare: function(a) {
          for (var b = this.b, c = a.b, d = 0, e = this.length < a.length ? this.length : a.length; d < e;) {
            var f = d++;
            if (b[f] != c[f]) return b[f] - c[f]
          }
          return this.length - a.length
        },
        initData: function() {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength))
        },
        getDouble: function(a) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          return this.data.getFloat64(a, !0)
        },
        getFloat: function(a) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          return this.data.getFloat32(a, !0)
        },
        setDouble: function(a, b) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          this.data.setFloat64(a, b, !0)
        },
        setFloat: function(a, b) {
          null == this.data && (this.data = new DataView(this.b.buffer,
            this.b.byteOffset, this.b.byteLength));
          this.data.setFloat32(a, b, !0)
        },
        getUInt16: function(a) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          return this.data.getUint16(a, !0)
        },
        setUInt16: function(a, b) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          this.data.setUint16(a, b, !0)
        },
        getInt32: function(a) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          return this.data.getInt32(a,
            !0)
        },
        setInt32: function(a, b) {
          null == this.data && (this.data = new DataView(this.b.buffer, this.b.byteOffset, this.b.byteLength));
          this.data.setInt32(a, b, !0)
        },
        getInt64: function(a) {
          return new ab(this.getInt32(a + 4), this.getInt32(a))
        },
        setInt64: function(a, b) {
          this.setInt32(a, b.low);
          this.setInt32(a + 4, b.high)
        },
        getString: function(a, b, c) {
          if (0 > a || 0 > b || a + b > this.length) throw F.thrown(Of.OutsideBounds);
          c = "";
          var d = this.b,
            e = vb.fromCharCode,
            f = a;
          for (a += b; f < a;)
            if (b = d[f++], 128 > b) {
              if (0 == b) break;
              c += e(b)
            } else if (224 > b) c += e((b & 63) <<
            6 | d[f++] & 127);
          else if (240 > b) {
            var g = d[f++];
            c += e((b & 31) << 12 | (g & 127) << 6 | d[f++] & 127)
          } else {
            g = d[f++];
            var h = d[f++];
            b = (b & 15) << 18 | (g & 127) << 12 | (h & 127) << 6 | d[f++] & 127;
            c += e((b >> 10) + 55232);
            c += e(b & 1023 | 56320)
          }
          return c
        },
        readString: function(a, b) {
          return this.getString(a, b)
        },
        toString: function() {
          return this.getString(0, this.length)
        },
        toHex: function() {
          for (var a = "", b = [], c = 0, d = 16; c < d;) {
            var e = c++;
            b.push(da.cca("0123456789abcdef", e))
          }
          c = 0;
          for (d = this.length; c < d;) e = c++, e = this.b[e], a += String.fromCodePoint(b[e >> 4]), a += String.fromCodePoint(b[e &
            15]);
          return a
        },
        getData: function() {
          return this.b.bufferValue
        },
        __class__: ib
      };
      var zh = function() {};
      k["haxe.crypto.Base64"] = zh;
      zh.__name__ = "haxe.crypto.Base64";
      zh.decode = function(a, b) {
        null == b && (b = !0);
        if (b)
          for (; 61 == da.cca(a, a.length - 1);) a = da.substr(a, 0, -1);
        return (new Jj(zh.BYTES)).decodeBytes(ib.ofString(a))
      };
      var Jj = function(a) {
        for (var b = a.length, c = 1; b > 1 << c;) ++c;
        if (8 < c || b != 1 << c) throw F.thrown("BaseCode : base length must be a power of two.");
        this.base = a;
        this.nbits = c
      };
      k["haxe.crypto.BaseCode"] = Jj;
      Jj.__name__ =
        "haxe.crypto.BaseCode";
      Jj.prototype = {
        base: null,
        nbits: null,
        tbl: null,
        encodeBytes: function(a) {
          for (var b = this.nbits, c = this.base, d = 8 * a.length / b | 0, e = new ib(new ArrayBuffer(d + (0 == 8 * a.length % b ? 0 : 1))), f = 0, g = 0, h = (1 << b) - 1, m = 0, l = 0; l < d;) {
            for (; g < b;) g += 8, f <<= 8, f |= a.b[m++];
            g -= b;
            e.b[l++] = c.b[f >> g & h] & 255
          }
          0 < g && (e.b[l++] = c.b[f << b - g & h] & 255);
          return e
        },
        initTable: function() {
          for (var a = [], b = 0; 256 > b;) {
            var c = b++;
            a[c] = -1
          }
          b = 0;
          for (var d = this.base.length; b < d;) c = b++, a[this.base.b[c]] = c;
          this.tbl = a
        },
        decodeBytes: function(a) {
          var b = this.nbits;
          null == this.tbl && this.initTable();
          for (var c = this.tbl, d = a.length * b >> 3, e = new ib(new ArrayBuffer(d)), f = 0, g = 0, h = 0, m = 0; m < d;) {
            for (; 8 > g;) {
              g += b;
              f <<= b;
              var l = c[a.b[h++]];
              if (-1 == l) throw F.thrown("BaseCode : invalid encoded char");
              f |= l
            }
            g -= 8;
            e.b[m++] = f >> g & 255
          }
          return e
        },
        __class__: Jj
      };
      var me = function() {};
      k["haxe.ds.ArraySort"] = me;
      me.__name__ = "haxe.ds.ArraySort";
      me.sort = function(a, b) {
        me.rec(a, b, 0, a.length)
      };
      me.rec = function(a, b, c, d) {
        var e = c + d >> 1;
        if (12 > d - c) {
          if (!(d <= c))
            for (e = c + 1; e < d;)
              for (var f = e++; f > c;) {
                if (0 > b(a[f],
                    a[f - 1])) me.swap(a, f - 1, f);
                else break;
                --f
              }
        } else me.rec(a, b, c, e), me.rec(a, b, e, d), me.doMerge(a, b, c, e, d, e - c, d - e)
      };
      me.doMerge = function(a, b, c, d, e, f, g) {
        if (0 != f && 0 != g)
          if (2 == f + g) 0 > b(a[d], a[c]) && me.swap(a, d, c);
          else {
            if (f > g) {
              var h = f >> 1;
              var m = c + h;
              var l = me.lower(a, b, d, e, m);
              var y = l - d
            } else y = g >> 1, l = d + y, m = me.upper(a, b, c, d, l), h = m - c;
            me.rotate(a, b, m, d, l);
            d = m + y;
            me.doMerge(a, b, c, m, d, h, y);
            me.doMerge(a, b, d, l, e, f - h, g - y)
          }
      };
      me.rotate = function(a, b, c, d, e) {
        if (c != d && d != e)
          for (b = me.gcd(e - c, d - c); 0 != b--;) {
            for (var f = a[c + b], g = d - c, h = c +
                b, m = c + b + g; m != c + b;) a[h] = a[m], h = m, m = e - m > g ? m + g : c + (g - (e - m));
            a[h] = f
          }
      };
      me.gcd = function(a, b) {
        for (; 0 != b;) {
          var c = a % b;
          a = b;
          b = c
        }
        return a
      };
      me.upper = function(a, b, c, d, e) {
        d -= c;
        for (var f, g; 0 < d;) f = d >> 1, g = c + f, 0 > b(a[e], a[g]) ? d = f : (c = g + 1, d = d - f - 1);
        return c
      };
      me.lower = function(a, b, c, d, e) {
        d -= c;
        for (var f, g; 0 < d;) f = d >> 1, g = c + f, 0 > b(a[g], a[e]) ? (c = g + 1, d = d - f - 1) : d = f;
        return c
      };
      me.swap = function(a, b, c) {
        var d = a[b];
        a[b] = a[c];
        a[c] = d
      };
      var Vg = function() {};
      k["haxe.ds.BalancedTree"] = Vg;
      Vg.__name__ = "haxe.ds.BalancedTree";
      Vg.__interfaces__ = [kd];
      Vg.iteratorLoop = function(a, b) {
        null != a && (Vg.iteratorLoop(a.left, b), b.push(a.value), Vg.iteratorLoop(a.right, b))
      };
      Vg.prototype = {
        root: null,
        set: function(a, b) {
          this.root = this.setLoop(a, b, this.root)
        },
        get: function(a) {
          for (var b = this.root; null != b;) {
            var c = this.compare(a, b.key);
            if (0 == c) return b.value;
            b = 0 > c ? b.left : b.right
          }
          return null
        },
        remove: function(a) {
          try {
            return this.root = this.removeLoop(a, this.root), !0
          } catch (b) {
            pa.lastError = b;
            if ("string" == typeof F.caught(b).unwrap()) return !1;
            throw b;
          }
        },
        exists: function(a) {
          for (var b =
              this.root; null != b;) {
            var c = this.compare(a, b.key);
            if (0 == c) return !0;
            b = 0 > c ? b.left : b.right
          }
          return !1
        },
        iterator: function() {
          var a = [];
          Vg.iteratorLoop(this.root, a);
          return new Ne(a)
        },
        keyValueIterator: function() {
          return new jh(this)
        },
        keys: function() {
          var a = [];
          this.keysLoop(this.root, a);
          return new Ne(a)
        },
        setLoop: function(a, b, c) {
          if (null == c) return new cf(null, a, b, null);
          var d = this.compare(a, c.key);
          if (0 == d) return new cf(c.left, a, b, c.right, null == c ? 0 : c._height);
          if (0 > d) return a = this.setLoop(a, b, c.left), this.balance(a,
            c.key, c.value, c.right);
          a = this.setLoop(a, b, c.right);
          return this.balance(c.left, c.key, c.value, a)
        },
        removeLoop: function(a, b) {
          if (null == b) throw F.thrown("Not_found");
          var c = this.compare(a, b.key);
          return 0 == c ? this.merge(b.left, b.right) : 0 > c ? this.balance(this.removeLoop(a, b.left), b.key, b.value, b.right) : this.balance(b.left, b.key, b.value, this.removeLoop(a, b.right))
        },
        keysLoop: function(a, b) {
          null != a && (this.keysLoop(a.left, b), b.push(a.key), this.keysLoop(a.right, b))
        },
        merge: function(a, b) {
          if (null == a) return b;
          if (null ==
            b) return a;
          var c = this.minBinding(b);
          return this.balance(a, c.key, c.value, this.removeMinBinding(b))
        },
        minBinding: function(a) {
          if (null == a) throw F.thrown("Not_found");
          return null == a.left ? a : this.minBinding(a.left)
        },
        removeMinBinding: function(a) {
          return null == a.left ? a.right : this.balance(this.removeMinBinding(a.left), a.key, a.value, a.right)
        },
        balance: function(a, b, c, d) {
          var e = null == a ? 0 : a._height,
            f = null == d ? 0 : d._height;
          return e > f + 2 ? (e = a.left, f = a.right, (null == e ? 0 : e._height) >= (null == f ? 0 : f._height) ? new cf(a.left, a.key,
            a.value, new cf(a.right, b, c, d)) : new cf(new cf(a.left, a.key, a.value, a.right.left), a.right.key, a.right.value, new cf(a.right.right, b, c, d))) : f > e + 2 ? (e = d.right, f = d.left, (null == e ? 0 : e._height) > (null == f ? 0 : f._height) ? new cf(new cf(a, b, c, d.left), d.key, d.value, d.right) : new cf(new cf(a, b, c, d.left.left), d.left.key, d.left.value, new cf(d.left.right, d.key, d.value, d.right))) : new cf(a, b, c, d, (e > f ? e : f) + 1)
        },
        compare: function(a, b) {
          return Y.compare(a, b)
        },
        __class__: Vg
      };
      var cf = function(a, b, c, d, e) {
        null == e && (e = -1);
        this.left = a;
        this.key = b;
        this.value = c;
        this.right = d; - 1 == e ? (a = this.left, b = this.right, a = (null == a ? 0 : a._height) > (null == b ? 0 : b._height) ? this.left : this.right, this._height = (null == a ? 0 : a._height) + 1) : this._height = e
      };
      k["haxe.ds.TreeNode"] = cf;
      cf.__name__ = "haxe.ds.TreeNode";
      cf.prototype = {
        left: null,
        right: null,
        key: null,
        value: null,
        _height: null,
        __class__: cf
      };
      var Pj = function() {};
      k["haxe.ds.EnumValueMap"] = Pj;
      Pj.__name__ = "haxe.ds.EnumValueMap";
      Pj.__interfaces__ = [kd];
      Pj.__super__ = Vg;
      Pj.prototype = t(Vg.prototype, {
        compare: function(a, b) {
          var c =
            a._hx_index - b._hx_index;
          if (0 != c) return c;
          a = Qb.enumParameters(a);
          b = Qb.enumParameters(b);
          return 0 == a.length && 0 == b.length ? 0 : this.compareArgs(a, b)
        },
        compareArgs: function(a, b) {
          var c = a.length - b.length;
          if (0 != c) return c;
          c = 0;
          for (var d = a.length; c < d;) {
            var e = c++;
            e = this.compareArg(a[e], b[e]);
            if (0 != e) return e
          }
          return 0
        },
        compareArg: function(a, b) {
          return Y.isEnumValue(a) && Y.isEnumValue(b) ? this.compare(a, b) : a instanceof Array && b instanceof Array ? this.compareArgs(a, b) : Y.compare(a, b)
        },
        __class__: Pj
      });
      var tk = function(a,
        b) {
        this.item = a;
        this.next = b
      };
      k["haxe.ds._List.ListNode"] = tk;
      tk.__name__ = "haxe.ds._List.ListNode";
      tk.prototype = {
        item: null,
        next: null,
        __class__: tk
      };
      var Bn = function(a) {
        this.head = a
      };
      k["haxe.ds._List.ListIterator"] = Bn;
      Bn.__name__ = "haxe.ds._List.ListIterator";
      Bn.prototype = {
        head: null,
        hasNext: function() {
          return null != this.head
        },
        next: function() {
          var a = this.head.item;
          this.head = this.head.next;
          return a
        },
        __class__: Bn
      };
      var qj = function(a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0
      };
      k["haxe.ds._StringMap.StringMapKeyIterator"] = qj;
      qj.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
      qj.prototype = {
        h: null,
        keys: null,
        length: null,
        current: null,
        hasNext: function() {
          return this.current < this.length
        },
        next: function() {
          return this.keys[this.current++]
        },
        __class__: qj
      };
      var Ci = function(a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0
      };
      k["haxe.ds._StringMap.StringMapValueIterator"] = Ci;
      Ci.__name__ = "haxe.ds._StringMap.StringMapValueIterator";
      Ci.prototype = {
        h: null,
        keys: null,
        length: null,
        current: null,
        hasNext: function() {
          return this.current < this.length
        },
        next: function() {
          return this.h[this.keys[this.current++]]
        },
        __class__: Ci
      };
      var so = function(a) {
        this.h = a;
        this.keys = Object.keys(a);
        this.length = this.keys.length;
        this.current = 0
      };
      k["haxe.ds._StringMap.StringMapKeyValueIterator"] = so;
      so.__name__ = "haxe.ds._StringMap.StringMapKeyValueIterator";
      so.prototype = {
        h: null,
        keys: null,
        length: null,
        current: null,
        hasNext: function() {
          return this.current < this.length
        },
        next: function() {
          var a = this.keys[this.current++];
          return {
            key: a,
            value: this.h[a]
          }
        },
        __class__: so
      };
      var Gi = function(a, b, c) {
        F.call(this, a, b);
        this.posInfos = null == c ? {
          fileName: "(unknown)",
          lineNumber: 0,
          className: "(unknown)",
          methodName: "(unknown)"
        } : c;
        this.__skipStack++
      };
      k["haxe.exceptions.PosException"] = Gi;
      Gi.__name__ = "haxe.exceptions.PosException";
      Gi.__super__ = F;
      Gi.prototype = t(F.prototype, {
        posInfos: null,
        toString: function() {
          return "" + F.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" +
            this.posInfos.lineNumber
        },
        __class__: Gi
      });
      var hm = function(a, b, c) {
        null == a && (a = "Not implemented");
        Gi.call(this, a, b, c);
        this.__skipStack++
      };
      k["haxe.exceptions.NotImplementedException"] = hm;
      hm.__name__ = "haxe.exceptions.NotImplementedException";
      hm.__super__ = Gi;
      hm.prototype = t(Gi.prototype, {
        __class__: hm
      });
      var im = function() {
        this.size = this.pos = 0
      };
      k["haxe.io.BytesBuffer"] = im;
      im.__name__ = "haxe.io.BytesBuffer";
      im.prototype = {
        buffer: null,
        view: null,
        u8: null,
        pos: null,
        size: null,
        addByte: function(a) {
          this.pos == this.size &&
            this.grow(1);
          this.view.setUint8(this.pos++, a)
        },
        add: function(a) {
          this.pos + a.length > this.size && this.grow(a.length);
          if (0 != this.size) {
            var b = new Uint8Array(a.b.buffer, a.b.byteOffset, a.length);
            this.u8.set(b, this.pos);
            this.pos += a.length
          }
        },
        addBytes: function(a, b, c) {
          if (0 > b || 0 > c || b + c > a.length) throw F.thrown(Of.OutsideBounds);
          this.pos + c > this.size && this.grow(c);
          0 != this.size && (a = new Uint8Array(a.b.buffer, a.b.byteOffset + b, c), this.u8.set(a, this.pos), this.pos += c)
        },
        grow: function(a) {
          var b = this.pos + a;
          for (a = 0 == this.size ?
            16 : this.size; a < b;) a = 3 * a >> 1;
          b = new ArrayBuffer(a);
          var c = new Uint8Array(b);
          0 < this.size && c.set(this.u8);
          this.size = a;
          this.buffer = b;
          this.u8 = c;
          this.view = new DataView(this.buffer)
        },
        getBytes: function() {
          if (0 == this.size) return new ib(new ArrayBuffer(0));
          var a = new ib(this.buffer);
          a.length = this.pos;
          return a
        },
        __class__: im
      };
      var jm = function() {};
      k["haxe.io.Input"] = jm;
      jm.__name__ = "haxe.io.Input";
      jm.prototype = {
        bigEndian: null,
        readByte: function() {
          throw new hm(null, null, {
            fileName: "haxe/io/Input.hx",
            lineNumber: 53,
            className: "haxe.io.Input",
            methodName: "readByte"
          });
        },
        readBytes: function(a, b, c) {
          var d = c,
            e = a.b;
          if (0 > b || 0 > c || b + c > a.length) throw F.thrown(Of.OutsideBounds);
          try {
            for (; 0 < d;) e[b] = this.readByte(), ++b, --d
          } catch (f) {
            if (pa.lastError = f, !(F.caught(f).unwrap() instanceof Qj)) throw f;
          }
          return c - d
        },
        readFullBytes: function(a, b, c) {
          for (; 0 < c;) {
            var d = this.readBytes(a, b, c);
            if (0 == d) throw F.thrown(Of.Blocked);
            b += d;
            c -= d
          }
        },
        read: function(a) {
          for (var b = new ib(new ArrayBuffer(a)), c = 0; 0 < a;) {
            var d = this.readBytes(b, c, a);
            if (0 == d) throw F.thrown(Of.Blocked);
            c += d;
            a -= d
          }
          return b
        },
        readInt16: function() {
          var a = this.readByte(),
            b = this.readByte();
          a = this.bigEndian ? b | a << 8 : a | b << 8;
          return 0 != (a & 32768) ? a - 65536 : a
        },
        readUInt16: function() {
          var a = this.readByte(),
            b = this.readByte();
          return this.bigEndian ? b | a << 8 : a | b << 8
        },
        readInt32: function() {
          var a = this.readByte(),
            b = this.readByte(),
            c = this.readByte(),
            d = this.readByte();
          return this.bigEndian ? d | c << 8 | b << 16 | a << 24 : a | b << 8 | c << 16 | d << 24
        },
        readString: function(a, b) {
          var c = new ib(new ArrayBuffer(a));
          this.readFullBytes(c, 0, a);
          return c.getString(0, a,
            b)
        },
        __class__: jm
      };
      var km = function(a, b, c) {
        null == b && (b = 0);
        null == c && (c = a.length - b);
        if (0 > b || 0 > c || b + c > a.length) throw F.thrown(Of.OutsideBounds);
        this.b = a.b;
        this.pos = b;
        this.totlen = this.len = c
      };
      k["haxe.io.BytesInput"] = km;
      km.__name__ = "haxe.io.BytesInput";
      km.__super__ = jm;
      km.prototype = t(jm.prototype, {
        b: null,
        pos: null,
        len: null,
        totlen: null,
        readByte: function() {
          if (0 == this.len) throw F.thrown(new Qj);
          this.len--;
          return this.b[this.pos++]
        },
        readBytes: function(a, b, c) {
          if (0 > b || 0 > c || b + c > a.length) throw F.thrown(Of.OutsideBounds);
          if (0 == this.len && 0 < c) throw F.thrown(new Qj);
          this.len < c && (c = this.len);
          var d = this.b;
          a = a.b;
          for (var e = 0, f = c; e < f;) {
            var g = e++;
            a[b + g] = d[this.pos + g]
          }
          this.pos += c;
          this.len -= c;
          return c
        },
        __class__: km
      });
      var gr = O["haxe.io.Encoding"] = {
        __ename__: "haxe.io.Encoding",
        __constructs__: null,
        UTF8: {
          _hx_name: "UTF8",
          _hx_index: 0,
          __enum__: "haxe.io.Encoding",
          toString: v
        },
        RawNative: {
          _hx_name: "RawNative",
          _hx_index: 1,
          __enum__: "haxe.io.Encoding",
          toString: v
        }
      };
      gr.__constructs__ = [gr.UTF8, gr.RawNative];
      var Qj = function() {};
      k["haxe.io.Eof"] =
        Qj;
      Qj.__name__ = "haxe.io.Eof";
      Qj.prototype = {
        toString: function() {
          return "Eof"
        },
        __class__: Qj
      };
      var Of = O["haxe.io.Error"] = {
        __ename__: "haxe.io.Error",
        __constructs__: null,
        Blocked: {
          _hx_name: "Blocked",
          _hx_index: 0,
          __enum__: "haxe.io.Error",
          toString: v
        },
        Overflow: {
          _hx_name: "Overflow",
          _hx_index: 1,
          __enum__: "haxe.io.Error",
          toString: v
        },
        OutsideBounds: {
          _hx_name: "OutsideBounds",
          _hx_index: 2,
          __enum__: "haxe.io.Error",
          toString: v
        },
        Custom: (w = function(a) {
            return {
              _hx_index: 3,
              e: a,
              __enum__: "haxe.io.Error",
              toString: v
            }
          }, w._hx_name =
          "Custom", w.__params__ = ["e"], w)
      };
      Of.__constructs__ = [Of.Blocked, Of.Overflow, Of.OutsideBounds, Of.Custom];
      var de = function() {};
      k["haxe.io.FPHelper"] = de;
      de.__name__ = "haxe.io.FPHelper";
      de.i32ToFloat = function(a) {
        de.helper.setInt32(0, a, !0);
        return de.helper.getFloat32(0, !0)
      };
      de.floatToI32 = function(a) {
        de.helper.setFloat32(0, a, !0);
        return de.helper.getInt32(0, !0)
      };
      de.i64ToDouble = function(a, b) {
        de.helper.setInt32(0, a, !0);
        de.helper.setInt32(4, b, !0);
        return de.helper.getFloat64(0, !0)
      };
      de.doubleToI64 = function(a) {
        var b =
          de.i64tmp;
        de.helper.setFloat64(0, a, !0);
        b.low = de.helper.getInt32(0, !0);
        b.high = de.helper.getInt32(4, !0);
        return b
      };
      var Ah = function(a) {
        switch (a) {
          case ".":
          case "..":
            this.dir = a;
            this.file = "";
            return
        }
        var b = a.lastIndexOf("/"),
          c = a.lastIndexOf("\\");
        b < c ? (this.dir = da.substr(a, 0, c), a = da.substr(a, c + 1, null), this.backslash = !0) : c < b ? (this.dir = da.substr(a, 0, b), a = da.substr(a, b + 1, null)) : this.dir = null;
        b = a.lastIndexOf("."); - 1 != b ? (this.ext = da.substr(a, b + 1, null), this.file = da.substr(a, 0, b)) : (this.ext = null, this.file = a)
      };
      k["haxe.io.Path"] =
        Ah;
      Ah.__name__ = "haxe.io.Path";
      Ah.directory = function(a) {
        a = new Ah(a);
        return null == a.dir ? "" : a.dir
      };
      Ah.prototype = {
        dir: null,
        file: null,
        ext: null,
        backslash: null,
        __class__: Ah
      };
      var Ne = function(a) {
        this.current = 0;
        this.array = a
      };
      k["haxe.iterators.ArrayIterator"] = Ne;
      Ne.__name__ = "haxe.iterators.ArrayIterator";
      Ne.prototype = {
        array: null,
        current: null,
        hasNext: function() {
          return this.current < this.array.length
        },
        next: function() {
          return this.array[this.current++]
        },
        __class__: Ne
      };
      var jh = function(a) {
        this.map = a;
        this.keys = a.keys()
      };
      k["haxe.iterators.MapKeyValueIterator"] = jh;
      jh.__name__ = "haxe.iterators.MapKeyValueIterator";
      jh.prototype = {
        map: null,
        keys: null,
        hasNext: function() {
          return this.keys.hasNext()
        },
        next: function() {
          var a = this.keys.next();
          return {
            value: this.map.get(a),
            key: a
          }
        },
        __class__: jh
      };
      var qr = {
          resolve: function(a, b) {
            var c = a.elementsNamed(b).next();
            if (null == c) {
              if (a.nodeType == ia.Document) a = "Document";
              else {
                if (a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
                a = a.nodeName
              }
              throw F.thrown(a + " is missing element " + b);
            }
            if (c.nodeType != ia.Document && c.nodeType != ia.Element) throw F.thrown("Invalid nodeType " + (null == c.nodeType ? "null" : sb.toString(c.nodeType)));
            return c
          }
        },
        Br = {
          resolve: function(a, b) {
            return a.elementsNamed(b).hasNext()
          }
        },
        pr = {
          __properties__: {
            get_innerData: "get_innerData"
          },
          get_innerData: function(a) {
            if (a.nodeType != ia.Document && a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
            var b = 0,
              c = a.children;
            if (b >= c.length) {
              if (a.nodeType == ia.Document) var d = "Document";
              else {
                if (a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
                d = a.nodeName
              }
              throw F.thrown(d + " does not have data");
            }
            d = c[b++];
            if (b < c.length) {
              var e = c[b++];
              if (d.nodeType == ia.PCData && e.nodeType == ia.CData) {
                if (d.nodeType == ia.Document || d.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == d.nodeType ? "null" : sb.toString(d.nodeType)));
                d = "" == W.trim(d.nodeValue)
              } else d = !1;
              if (d) {
                if (b >= c.length) {
                  if (e.nodeType == ia.Document || e.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == e.nodeType ? "null" : sb.toString(e.nodeType)));
                  return e.nodeValue
                }
                d = c[b++];
                if (d.nodeType == ia.PCData) {
                  if (d.nodeType == ia.Document || d.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == d.nodeType ? "null" : sb.toString(d.nodeType)));
                  d = "" == W.trim(d.nodeValue)
                } else d = !1;
                if (d && b >= c.length) {
                  if (e.nodeType == ia.Document || e.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " +
                    (null == e.nodeType ? "null" : sb.toString(e.nodeType)));
                  return e.nodeValue
                }
              }
              if (a.nodeType == ia.Document) d = "Document";
              else {
                if (a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
                d = a.nodeName
              }
              throw F.thrown(d + " does not only have data");
            }
            if (d.nodeType != ia.PCData && d.nodeType != ia.CData) {
              if (a.nodeType == ia.Document) d = "Document";
              else {
                if (a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ?
                  "null" : sb.toString(a.nodeType)));
                d = a.nodeName
              }
              throw F.thrown(d + " does not have data");
            }
            if (d.nodeType == ia.Document || d.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == d.nodeType ? "null" : sb.toString(d.nodeType)));
            return d.nodeValue
          }
        },
        ne = function(a, b, c) {
          this.xml = b;
          this.message = a;
          this.position = c;
          this.lineNumber = 1;
          for (a = this.positionAtLine = 0; a < c;) {
            var d = a++;
            d = b.charCodeAt(d);
            10 == d ? (this.lineNumber++, this.positionAtLine = 0) : 13 != d && this.positionAtLine++
          }
        };
      k["haxe.xml.XmlParserException"] =
        ne;
      ne.__name__ = "haxe.xml.XmlParserException";
      ne.prototype = {
        message: null,
        lineNumber: null,
        positionAtLine: null,
        position: null,
        xml: null,
        toString: function() {
          return K.getClass(this).__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine
        },
        __class__: ne
      };
      var lh = function() {};
      k["haxe.xml.Parser"] = lh;
      lh.__name__ = "haxe.xml.Parser";
      lh.parse = function(a, b) {
        null == b && (b = !1);
        var c = ia.createDocument();
        lh.doParse(a, b, 0, c);
        return c
      };
      lh.doParse = function(a, b, c, d) {
        null == c && (c = 0);
        for (var e = null,
            f = 1, g = 1, h = null, m = 0, l = 0, y = 0, n = new Qa, p = 1, k = -1; c < a.length;) {
          var q = a.charCodeAt(c);
          switch (f) {
            case 0:
              switch (q) {
                case 9:
                case 10:
                case 13:
                case 32:
                  break;
                default:
                  f = g;
                  continue
              }
              break;
            case 1:
              if (60 == q) f = 0, g = 2;
              else {
                m = c;
                f = 13;
                continue
              }
              break;
            case 2:
              switch (q) {
                case 33:
                  if (91 == a.charCodeAt(c + 1)) {
                    c += 2;
                    if ("CDATA[" != da.substr(a, c, 6).toUpperCase()) throw F.thrown(new ne("Expected <![CDATA[", a, c));
                    c += 5;
                    f = 17
                  } else if (68 == a.charCodeAt(c + 1) || 100 == a.charCodeAt(c + 1)) {
                    if ("OCTYPE" != da.substr(a, c + 2, 6).toUpperCase()) throw F.thrown(new ne("Expected <!DOCTYPE",
                      a, c));
                    c += 8;
                    f = 16
                  } else {
                    if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2)) throw F.thrown(new ne("Expected \x3c!--", a, c));
                    c += 2;
                    f = 15
                  }
                  m = c + 1;
                  break;
                case 47:
                  if (null == d) throw F.thrown(new ne("Expected node name", a, c));
                  m = c + 1;
                  f = 0;
                  g = 10;
                  break;
                case 63:
                  f = 14;
                  m = c;
                  break;
                default:
                  f = 3;
                  m = c;
                  continue
              }
              break;
            case 3:
              if (!(97 <= q && 122 >= q || 65 <= q && 90 >= q || 48 <= q && 57 >= q || 58 == q || 46 == q || 95 == q || 45 == q)) {
                if (c == m) throw F.thrown(new ne("Expected node name", a, c));
                e = ia.createElement(da.substr(a, m, c - m));
                d.addChild(e);
                ++l;
                f = 0;
                g = 4;
                continue
              }
              break;
            case 4:
              switch (q) {
                case 47:
                  f = 11;
                  break;
                case 62:
                  f = 9;
                  break;
                default:
                  f = 5;
                  m = c;
                  continue
              }
              break;
            case 5:
              if (!(97 <= q && 122 >= q || 65 <= q && 90 >= q || 48 <= q && 57 >= q || 58 == q || 46 == q || 95 == q || 45 == q)) {
                if (m == c) throw F.thrown(new ne("Expected attribute name", a, c));
                h = da.substr(a, m, c - m);
                if (e.exists(h)) throw F.thrown(new ne("Duplicate attribute [" + h + "]", a, c));
                f = 0;
                g = 6;
                continue
              }
              break;
            case 6:
              if (61 == q) f = 0, g = 7;
              else throw F.thrown(new ne("Expected =", a, c));
              break;
            case 7:
              switch (q) {
                case 34:
                case 39:
                  n = new Qa;
                  f = 8;
                  m = c + 1;
                  k = q;
                  break;
                default:
                  throw F.thrown(new ne('Expected "',
                    a, c));
              }
              break;
            case 8:
              switch (q) {
                case 38:
                  p = c - m;
                  n.b += null == p ? da.substr(a, m, null) : da.substr(a, m, p);
                  f = 18;
                  p = 8;
                  m = c + 1;
                  break;
                case 60:
                case 62:
                  if (b) throw F.thrown(new ne("Invalid unescaped " + String.fromCodePoint(q) + " in attribute value", a, c));
                  q == k && (g = c - m, n.b += null == g ? da.substr(a, m, null) : da.substr(a, m, g), g = n.b, n = new Qa, e.set(h, g), f = 0, g = 4);
                  break;
                default:
                  q == k && (g = c - m, n.b += null == g ? da.substr(a, m, null) : da.substr(a, m, g), g = n.b, n = new Qa, e.set(h, g), f = 0, g = 4)
              }
              break;
            case 9:
              m = c = lh.doParse(a, b, c, e);
              f = 1;
              break;
            case 10:
              if (!(97 <=
                  q && 122 >= q || 65 <= q && 90 >= q || 48 <= q && 57 >= q || 58 == q || 46 == q || 95 == q || 45 == q)) {
                if (m == c) throw F.thrown(new ne("Expected node name", a, c));
                g = da.substr(a, m, c - m);
                if (null == d || 0 != d.nodeType) throw F.thrown(new ne("Unexpected </" + g + ">, tag is not open", a, c));
                if (d.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" : sb.toString(d.nodeType)));
                if (g != d.nodeName) {
                  if (d.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" :
                    sb.toString(d.nodeType)));
                  throw F.thrown(new ne("Expected </" + d.nodeName + ">", a, c));
                }
                f = 0;
                g = 12;
                continue
              }
              break;
            case 11:
              if (62 == q) f = 1;
              else throw F.thrown(new ne("Expected >", a, c));
              break;
            case 12:
              if (62 == q) return 0 == l && d.addChild(ia.createPCData("")), c;
              throw F.thrown(new ne("Expected >", a, c));
            case 13:
              60 == q ? (g = c - m, n.b += null == g ? da.substr(a, m, null) : da.substr(a, m, g), g = ia.createPCData(n.b), n = new Qa, d.addChild(g), ++l, f = 0, g = 2) : 38 == q && (p = c - m, n.b += null == p ? da.substr(a, m, null) : da.substr(a, m, p), f = 18, p = 13, m = c + 1);
              break;
            case 14:
              63 == q && 62 == a.charCodeAt(c + 1) && (++c, f = da.substr(a, m + 1, c - m - 2), d.addChild(ia.createProcessingInstruction(f)), ++l, f = 1);
              break;
            case 15:
              45 == q && 45 == a.charCodeAt(c + 1) && 62 == a.charCodeAt(c + 2) && (d.addChild(ia.createComment(da.substr(a, m, c - m))), ++l, c += 2, f = 1);
              break;
            case 16:
              91 == q ? ++y : 93 == q ? --y : 62 == q && 0 == y && (d.addChild(ia.createDocType(da.substr(a, m, c - m))), ++l, f = 1);
              break;
            case 17:
              93 == q && 93 == a.charCodeAt(c + 1) && 62 == a.charCodeAt(c + 2) && (f = ia.createCData(da.substr(a, m, c - m)), d.addChild(f), ++l, c += 2, f = 1);
              break;
            case 18:
              if (59 ==
                q) {
                m = da.substr(a, m, c - m);
                if (35 == m.charCodeAt(0)) m = 120 == m.charCodeAt(1) ? M.parseInt("0" + da.substr(m, 1, m.length - 1)) : M.parseInt(da.substr(m, 1, m.length - 1)), n.b += String.fromCodePoint(m);
                else if (Object.prototype.hasOwnProperty.call(lh.escapes.h, m)) n.b += M.string(lh.escapes.h[m]);
                else {
                  if (b) throw F.thrown(new ne("Undefined entity: " + m, a, c));
                  n.b += M.string("&" + m + ";")
                }
                m = c + 1;
                f = p
              } else if (!(97 <= q && 122 >= q || 65 <= q && 90 >= q || 48 <= q && 57 >= q || 58 == q || 46 == q || 95 == q || 45 == q) && 35 != q) {
                if (b) throw F.thrown(new ne("Invalid character in entity: " +
                  String.fromCodePoint(q), a, c));
                n.b += String.fromCodePoint(38);
                f = c - m;
                n.b += null == f ? da.substr(a, m, null) : da.substr(a, m, f);
                --c;
                m = c + 1;
                f = p
              }
          }++c
        }
        1 == f && (m = c, f = 13);
        if (13 == f) {
          if (0 == d.nodeType) {
            if (d.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == d.nodeType ? "null" : sb.toString(d.nodeType)));
            throw F.thrown(new ne("Unclosed node <" + d.nodeName + ">", a, c));
          }
          if (c != m || 0 == l) p = c - m, n.b += null == p ? da.substr(a, m, null) : da.substr(a, m, p), d.addChild(ia.createPCData(n.b));
          return c
        }
        if (!b && 18 ==
          f && 13 == p) return n.b += String.fromCodePoint(38), p = c - m, n.b += null == p ? da.substr(a, m, null) : da.substr(a, m, p), d.addChild(ia.createPCData(n.b)), c;
        throw F.thrown(new ne("Unexpected end", a, c));
      };
      var rj = function(a) {
        this.output = new Qa;
        this.pretty = a
      };
      k["haxe.xml.Printer"] = rj;
      rj.__name__ = "haxe.xml.Printer";
      rj.print = function(a, b) {
        null == b && (b = !1);
        b = new rj(b);
        b.writeNode(a, "");
        return b.output.b
      };
      rj.prototype = {
        output: null,
        pretty: null,
        writeNode: function(a, b) {
          switch (a.nodeType) {
            case 0:
              this.output.b += M.string(b + "<");
              if (a.nodeType !=
                ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              this.output.b += M.string(a.nodeName);
              for (var c = a.attributes(); c.hasNext();) {
                var d = c.next();
                this.output.b += M.string(" " + d + '="');
                d = W.htmlEscape(a.get(d), !0);
                this.output.b += M.string(d);
                this.output.b += '"'
              }
              if (this.hasChildren(a)) {
                this.output.b += ">";
                this.pretty && (this.output.b += "\n");
                if (a.nodeType != ia.Document && a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " +
                  (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
                c = 0;
                for (d = a.children; c < d.length;) {
                  var e = d[c++];
                  this.writeNode(e, this.pretty ? b + "\t" : b)
                }
                this.output.b += M.string(b + "</");
                if (a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
                this.output.b += M.string(a.nodeName);
                this.output.b += ">"
              } else this.output.b += "/>";
              this.pretty && (this.output.b += "\n");
              break;
            case 1:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " +
                (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              a = a.nodeValue;
              0 != a.length && (d = b + W.htmlEscape(a), this.output.b += M.string(d), this.pretty && (this.output.b += "\n"));
              break;
            case 2:
              this.output.b += M.string(b + "<![CDATA[");
              if (a.nodeType == ia.Document || a.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              this.output.b += M.string(a.nodeValue);
              this.output.b += "]]\x3e";
              this.pretty && (this.output.b += "\n");
              break;
            case 3:
              if (a.nodeType == ia.Document || a.nodeType ==
                ia.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              a = a.nodeValue;
              a = a.replace(/[\n\r\t]+/g, "");
              this.output.b += null == b ? "null" : "" + b;
              d = W.trim("\x3c!--" + a + "--\x3e");
              this.output.b += M.string(d);
              this.pretty && (this.output.b += "\n");
              break;
            case 4:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              this.output.b += M.string("<!DOCTYPE " + a.nodeValue + ">");
              this.pretty &&
                (this.output.b += "\n");
              break;
            case 5:
              if (a.nodeType == ia.Document || a.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              this.output.b += M.string("<?" + a.nodeValue + "?>");
              this.pretty && (this.output.b += "\n");
              break;
            case 6:
              if (a.nodeType != ia.Document && a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
              c = 0;
              for (d = a.children; c < d.length;) e = d[c++], this.writeNode(e,
                b)
          }
        },
        hasChildren: function(a) {
          if (a.nodeType != ia.Document && a.nodeType != ia.Element) throw F.thrown("Bad node type, expected Element or Document but found " + (null == a.nodeType ? "null" : sb.toString(a.nodeType)));
          var b = 0;
          for (a = a.children; b < a.length;) {
            var c = a[b++];
            switch (c.nodeType) {
              case 0:
              case 1:
                return !0;
              case 2:
              case 3:
                if (c.nodeType == ia.Document || c.nodeType == ia.Element) throw F.thrown("Bad node type, unexpected " + (null == c.nodeType ? "null" : sb.toString(c.nodeType)));
                if (0 != W.ltrim(c.nodeValue).length) return !0
            }
          }
          return !1
        },
        __class__: rj
      };
      var Hi = O["haxe.zip.ExtraField"] = {
        __ename__: "haxe.zip.ExtraField",
        __constructs__: null,
        FUnknown: (w = function(a, b) {
          return {
            _hx_index: 0,
            tag: a,
            bytes: b,
            __enum__: "haxe.zip.ExtraField",
            toString: v
          }
        }, w._hx_name = "FUnknown", w.__params__ = ["tag", "bytes"], w),
        FInfoZipUnicodePath: (w = function(a, b) {
          return {
            _hx_index: 1,
            name: a,
            crc: b,
            __enum__: "haxe.zip.ExtraField",
            toString: v
          }
        }, w._hx_name = "FInfoZipUnicodePath", w.__params__ = ["name", "crc"], w),
        FUtf8: {
          _hx_name: "FUtf8",
          _hx_index: 2,
          __enum__: "haxe.zip.ExtraField",
          toString: v
        }
      };
      Hi.__constructs__ = [Hi.FUnknown, Hi.FInfoZipUnicodePath, Hi.FUtf8];
      var lg = O["haxe.zip.Huffman"] = {
        __ename__: "haxe.zip.Huffman",
        __constructs__: null,
        Found: (w = function(a) {
          return {
            _hx_index: 0,
            i: a,
            __enum__: "haxe.zip.Huffman",
            toString: v
          }
        }, w._hx_name = "Found", w.__params__ = ["i"], w),
        NeedBit: (w = function(a, b) {
          return {
            _hx_index: 1,
            left: a,
            right: b,
            __enum__: "haxe.zip.Huffman",
            toString: v
          }
        }, w._hx_name = "NeedBit", w.__params__ = ["left", "right"], w),
        NeedBits: (w = function(a, b) {
          return {
            _hx_index: 2,
            n: a,
            table: b,
            __enum__: "haxe.zip.Huffman",
            toString: v
          }
        }, w._hx_name = "NeedBits", w.__params__ = ["n", "table"], w)
      };
      lg.__constructs__ = [lg.Found, lg.NeedBit, lg.NeedBits];
      var uo = function() {};
      k["haxe.zip.HuffTools"] = uo;
      uo.__name__ = "haxe.zip.HuffTools";
      uo.prototype = {
        treeDepth: function(a) {
          switch (a._hx_index) {
            case 0:
              return 0;
            case 1:
              var b = a.right;
              a = this.treeDepth(a.left);
              b = this.treeDepth(b);
              return 1 + (a < b ? a : b);
            case 2:
              throw F.thrown("assert");
          }
        },
        treeCompress: function(a) {
          var b = this.treeDepth(a);
          if (0 == b) return a;
          if (1 == b) {
            if (1 == a._hx_index) return b = a.right, lg.NeedBit(this.treeCompress(a.left),
              this.treeCompress(b));
            throw F.thrown("assert");
          }
          for (var c = [], d = 0, e = 1 << b; d < e;) d++, c.push(lg.Found(-1));
          this.treeWalk(c, 0, 0, b, a);
          return lg.NeedBits(b, c)
        },
        treeWalk: function(a, b, c, d, e) {
          if (1 == e._hx_index) {
            var f = e.left,
              g = e.right;
            0 < d ? (this.treeWalk(a, b, c + 1, d - 1, f), this.treeWalk(a, b | 1 << c, c + 1, d - 1, g)) : a[b] = this.treeCompress(e)
          } else a[b] = this.treeCompress(e)
        },
        treeMake: function(a, b, c, d) {
          if (d > b) throw F.thrown("Invalid huffman");
          var e = c << 5 | d;
          if (a.h.hasOwnProperty(e)) return lg.Found(a.h[e]);
          c <<= 1;
          ++d;
          return lg.NeedBit(this.treeMake(a,
            b, c, d), this.treeMake(a, b, c | 1, d))
        },
        make: function(a, b, c, d) {
          if (1 == c) return lg.NeedBit(lg.Found(0), lg.Found(0));
          var e = [],
            f = [];
          if (32 < d) throw F.thrown("Invalid huffman");
          for (var g = 0, h = d; g < h;) g++, e.push(0), f.push(0);
          g = 0;
          for (h = c; g < h;) {
            var m = g++;
            m = a[m + b];
            if (m >= d) throw F.thrown("Invalid huffman");
            e[m]++
          }
          var l = 0;
          g = 1;
          for (h = d - 1; g < h;) m = g++, l = l + e[m] << 1, f[m] = l;
          e = new Za;
          g = 0;
          for (h = c; g < h;) m = g++, c = a[m + b], 0 != c && (l = f[c - 1], f[c - 1] = l + 1, e.h[l << 5 | c] = m);
          return this.treeCompress(lg.NeedBit(this.treeMake(e, d, 0, 1), this.treeMake(e,
            d, 1, 1)))
        },
        __class__: uo
      };
      var vo = function(a) {
        this.buffer = new ib(new ArrayBuffer(65536));
        this.pos = 0;
        a && (this.crc = new Fi)
      };
      k["haxe.zip._InflateImpl.Window"] = vo;
      vo.__name__ = "haxe.zip._InflateImpl.Window";
      vo.prototype = {
        buffer: null,
        pos: null,
        crc: null,
        slide: function() {
          null != this.crc && this.crc.update(this.buffer, 0, 32768);
          var a = new ib(new ArrayBuffer(65536));
          this.pos -= 32768;
          a.blit(0, this.buffer, 32768, this.pos);
          this.buffer = a
        },
        addBytes: function(a, b, c) {
          65536 < this.pos + c && this.slide();
          this.buffer.blit(this.pos, a,
            b, c);
          this.pos += c
        },
        addByte: function(a) {
          65536 == this.pos && this.slide();
          this.buffer.b[this.pos] = a & 255;
          this.pos++
        },
        getLastChar: function() {
          return this.buffer.b[this.pos - 1]
        },
        available: function() {
          return this.pos
        },
        checksum: function() {
          null != this.crc && this.crc.update(this.buffer, 0, this.pos);
          return this.crc
        },
        __class__: vo
      };
      var Vd = O["haxe.zip._InflateImpl.State"] = {
        __ename__: "haxe.zip._InflateImpl.State",
        __constructs__: null,
        Head: {
          _hx_name: "Head",
          _hx_index: 0,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        Block: {
          _hx_name: "Block",
          _hx_index: 1,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        CData: {
          _hx_name: "CData",
          _hx_index: 2,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        Flat: {
          _hx_name: "Flat",
          _hx_index: 3,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        Crc: {
          _hx_name: "Crc",
          _hx_index: 4,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        Dist: {
          _hx_name: "Dist",
          _hx_index: 5,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        DistOne: {
          _hx_name: "DistOne",
          _hx_index: 6,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        },
        Done: {
          _hx_name: "Done",
          _hx_index: 7,
          __enum__: "haxe.zip._InflateImpl.State",
          toString: v
        }
      };
      Vd.__constructs__ = [Vd.Head, Vd.Block, Vd.CData, Vd.Flat, Vd.Crc, Vd.Dist, Vd.DistOne, Vd.Done];
      var De = function(a, b, c) {
        null == c && (c = !0);
        null == b && (b = !0);
        this.isFinal = !1;
        this.htools = new uo;
        this.huffman = this.buildFixedHuffman();
        this.huffdist = null;
        this.dist = this.len = 0;
        this.state = b ? Vd.Head : Vd.Block;
        this.input = a;
        this.needed = this.nbits = this.bits = 0;
        this.output = null;
        this.outpos = 0;
        this.lengths = [];
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.lengths.push(-1);
        this.window = new vo(c)
      };
      k["haxe.zip.InflateImpl"] = De;
      De.__name__ = "haxe.zip.InflateImpl";
      De.prototype = {
        nbits: null,
        bits: null,
        state: null,
        isFinal: null,
        huffman: null,
        huffdist: null,
        htools: null,
        len: null,
        dist: null,
        needed: null,
        output: null,
        outpos: null,
        input: null,
        lengths: null,
        window: null,
        buildFixedHuffman: function() {
          if (null != De.FIXED_HUFFMAN) return De.FIXED_HUFFMAN;
          for (var a = [], b = 0; 288 > b;) {
            var c = b++;
            a.push(143 >= c ? 8 : 255 >= c ? 9 : 279 >= c ? 7 : 8)
          }
          De.FIXED_HUFFMAN = this.htools.make(a, 0, 288, 10);
          return De.FIXED_HUFFMAN
        },
        readBytes: function(a, b, c) {
          this.needed = c;
          this.outpos = b;
          this.output = a;
          if (0 < c)
            for (; this.inflateLoop(););
          return c - this.needed
        },
        getBits: function(a) {
          for (; this.nbits < a;) this.bits |=
            this.input.readByte() << this.nbits, this.nbits += 8;
          var b = this.bits & (1 << a) - 1;
          this.nbits -= a;
          this.bits >>= a;
          return b
        },
        getBit: function() {
          0 == this.nbits && (this.nbits = 8, this.bits = this.input.readByte());
          var a = 1 == (this.bits & 1);
          this.nbits--;
          this.bits >>= 1;
          return a
        },
        getRevBits: function(a) {
          return 0 == a ? 0 : this.getBit() ? 1 << a - 1 | this.getRevBits(a - 1) : this.getRevBits(a - 1)
        },
        resetBits: function() {
          this.nbits = this.bits = 0
        },
        addBytes: function(a, b, c) {
          this.window.addBytes(a, b, c);
          this.output.blit(this.outpos, a, b, c);
          this.needed -= c;
          this.outpos += c
        },
        addByte: function(a) {
          this.window.addByte(a);
          this.output.b[this.outpos] = a & 255;
          this.needed--;
          this.outpos++
        },
        addDistOne: function(a) {
          for (var b = this.window.getLastChar(), c = 0; c < a;) c++, this.addByte(b)
        },
        addDist: function(a, b) {
          this.addBytes(this.window.buffer, this.window.pos - a, b)
        },
        applyHuffman: function(a) {
          switch (a._hx_index) {
            case 0:
              var b = a.i;
              return b;
            case 1:
              return b = a.left, a = a.right, this.applyHuffman(this.getBit() ? a : b);
            case 2:
              return b = a.n, this.applyHuffman(a.table[this.getBits(b)])
          }
        },
        inflateLengths: function(a,
          b) {
          for (var c = 0, d = 0; c < b;) {
            var e = this.applyHuffman(this.huffman);
            switch (e) {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                d = e;
                a[c] = e;
                ++c;
                break;
              case 16:
                e = c + 3 + this.getBits(2);
                if (e > b) throw F.thrown("Invalid data");
                for (; c < e;) a[c] = d, ++c;
                break;
              case 17:
                c += 3 + this.getBits(3);
                if (c > b) throw F.thrown("Invalid data");
                break;
              case 18:
                c += 11 + this.getBits(7);
                if (c > b) throw F.thrown("Invalid data");
                break;
              default:
                throw F.thrown("Invalid data");
            }
          }
        },
        inflateLoop: function() {
          switch (this.state._hx_index) {
            case 0:
              var a =
                this.input.readByte();
              if (8 != (a & 15)) throw F.thrown("Invalid data");
              var b = this.input.readByte(),
                c = 0 != (b & 32);
              if (0 != ((a << 8) + b) % 31) throw F.thrown("Invalid data");
              if (c) throw F.thrown("Unsupported dictionary");
              this.state = Vd.Block;
              return !0;
            case 1:
              switch (this.isFinal = this.getBit(), this.getBits(2)) {
                case 0:
                  this.len = this.input.readUInt16();
                  if (this.input.readUInt16() != 65535 - this.len) throw F.thrown("Invalid data");
                  this.state = Vd.Flat;
                  a = this.inflateLoop();
                  this.resetBits();
                  return a;
                case 1:
                  return this.huffman = this.buildFixedHuffman(),
                    this.huffdist = null, this.state = Vd.CData, !0;
                case 2:
                  a = this.getBits(5) + 257;
                  b = this.getBits(5) + 1;
                  var d = this.getBits(4) + 4;
                  c = 0;
                  for (var e = d; c < e;) {
                    var f = c++;
                    this.lengths[De.CODE_LENGTHS_POS[f]] = this.getBits(3)
                  }
                  c = d;
                  for (e = 19; c < e;) f = c++, this.lengths[De.CODE_LENGTHS_POS[f]] = 0;
                  this.huffman = this.htools.make(this.lengths, 0, 19, 8);
                  d = [];
                  c = 0;
                  for (e = a + b; c < e;) c++, d.push(0);
                  this.inflateLengths(d, a + b);
                  this.huffdist = this.htools.make(d, a, b, 16);
                  this.huffman = this.htools.make(d, 0, a, 16);
                  this.state = Vd.CData;
                  return !0;
                default:
                  throw F.thrown("Invalid data");
              }
            case 2:
              b = this.applyHuffman(this.huffman);
              if (256 > b) return this.addByte(b), 0 < this.needed;
              if (256 == b) this.state = this.isFinal ? Vd.Crc : Vd.Block;
              else {
                b -= 257;
                a = De.LEN_EXTRA_BITS_TBL[b];
                if (-1 == a) throw F.thrown("Invalid data");
                this.len = De.LEN_BASE_VAL_TBL[b] + this.getBits(a);
                b = null == this.huffdist ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
                a = De.DIST_EXTRA_BITS_TBL[b];
                if (-1 == a) throw F.thrown("Invalid data");
                this.dist = De.DIST_BASE_VAL_TBL[b] + this.getBits(a);
                if (this.dist > this.window.available()) throw F.thrown("Invalid data");
                this.state = 1 == this.dist ? Vd.DistOne : Vd.Dist
              }
              return !0;
            case 3:
              return a = this.len < this.needed ? this.len : this.needed, b = this.input.read(a), this.len -= a, this.addBytes(b, 0, a), 0 == this.len && (this.state = this.isFinal ? Vd.Crc : Vd.Block), 0 < this.needed;
            case 4:
              a = this.window.checksum();
              if (null == a) return this.state = Vd.Done, !0;
              b = Fi.read(this.input);
              if (!a.equals(b)) throw F.thrown("Invalid CRC");
              this.state = Vd.Done;
              return !0;
            case 5:
              for (; 0 < this.len && 0 < this.needed;) a = this.len < this.dist ? this.len : this.dist, a = this.needed < a ? this.needed :
                a, this.addDist(this.dist, a), this.len -= a;
              0 == this.len && (this.state = Vd.CData);
              return 0 < this.needed;
            case 6:
              return a = this.len < this.needed ? this.len : this.needed, this.addDistOne(a), this.len -= a, 0 == this.len && (this.state = Vd.CData), 0 < this.needed;
            case 7:
              return !1
          }
        },
        __class__: De
      };
      var Ii = function(a) {
        this.i = a
      };
      k["haxe.zip.Reader"] = Ii;
      Ii.__name__ = "haxe.zip.Reader";
      Ii.readZip = function(a) {
        return (new Ii(a)).read()
      };
      Ii.unzip = function(a) {
        if (!a.compressed) return a.data;
        throw F.thrown("No uncompress support");
      };
      Ii.prototype = {
        i: null,
        readZipDate: function() {
          var a = this.i.readUInt16(),
            b = a >> 11 & 31,
            c = a >> 5 & 63;
          a &= 31;
          var d = this.i.readUInt16();
          return new Date((d >> 9) + 1980, (d >> 5 & 15) - 1, d & 31, b, c, a << 1)
        },
        readExtraFields: function(a) {
          for (var b = new bb; 0 < a;) {
            if (4 > a) throw F.thrown("Invalid extra fields data");
            var c = this.i.readUInt16(),
              d = this.i.readUInt16();
            if (a < d) throw F.thrown("Invalid extra fields data");
            if (28789 == c) {
              var e = this.i.readByte();
              if (1 != e) {
                var f = new im;
                f.addByte(e);
                f.add(this.i.read(d - 1));
                b.add(Hi.FUnknown(c, f.getBytes()))
              } else c =
                this.i.readInt32(), e = this.i.read(d - 5).toString(), b.add(Hi.FInfoZipUnicodePath(e, c))
            } else b.add(Hi.FUnknown(c, this.i.read(d)));
            a -= 4 + d
          }
          return b
        },
        readEntryHeader: function() {
          var a = this.i,
            b = a.readInt32();
          if (33639248 == b || 101010256 == b) return null;
          if (67324752 != b) throw F.thrown("Invalid Zip Data");
          a.readUInt16();
          b = a.readUInt16();
          var c = 0 != (b & 2048),
            d = a.readUInt16(),
            e = 0 != d;
          if (e && 8 != d) throw F.thrown("Unsupported compression " + d);
          d = this.readZipDate();
          var f = a.readInt32(),
            g = a.readInt32(),
            h = a.readInt32(),
            m = a.readInt16(),
            l = a.readInt16();
          a = a.readString(m);
          l = this.readExtraFields(l);
          c && l.push(Hi.FUtf8);
          0 != (b & 8) && (g = -1);
          return {
            fileName: a,
            fileSize: h,
            fileTime: d,
            compressed: e,
            dataSize: g,
            data: null,
            crc32: f,
            extraFields: l
          }
        },
        read: function() {
          for (var a = new bb, b = null;;) {
            var c = this.readEntryHeader();
            if (null == c) break;
            if (0 > c.dataSize) {
              null == b && (b = new ib(new ArrayBuffer(65536)));
              for (var d = new im, e = new De(this.i, !1, !1);;) {
                var f = e.readBytes(b, 0, 65536);
                d.addBytes(b, 0, f);
                if (65536 > f) break
              }
              c.data = d.getBytes();
              c.crc32 = this.i.readInt32();
              134695760 ==
                c.crc32 && (c.crc32 = this.i.readInt32());
              c.dataSize = this.i.readInt32();
              c.fileSize = this.i.readInt32();
              c.dataSize = c.fileSize;
              c.compressed = !1
            } else c.data = this.i.read(c.dataSize);
            a.add(c)
          }
          return a
        },
        __class__: Ii
      };
      var K = function() {};
      k["js.Boot"] = K;
      K.__name__ = "js.Boot";
      K.getClass = function(a) {
        if (null == a) return null;
        if (a instanceof Array) return Array;
        var b = a.__class__;
        if (null != b) return b;
        a = K.__nativeClassName(a);
        return null != a ? K.__resolveNativeClass(a) : null
      };
      K.__string_rec = function(a, b) {
        if (null == a) return "null";
        if (5 <= b.length) return "<...>";
        var c = typeof a;
        "function" == c && (a.__name__ || a.__ename__) && (c = "object");
        switch (c) {
          case "function":
            return "<function>";
          case "object":
            if (a.__enum__) {
              var d = O[a.__enum__].__constructs__[a._hx_index];
              c = d._hx_name;
              if (d.__params__) {
                b += "\t";
                var e = [],
                  f = 0;
                for (d = d.__params__; f < d.length;) {
                  var g = d[f];
                  f += 1;
                  e.push(K.__string_rec(a[g], b))
                }
                return c + "(" + e.join(",") + ")"
              }
              return c
            }
            if (a instanceof Array) {
              c = "[";
              b += "\t";
              e = 0;
              for (f = a.length; e < f;) d = e++, c += (0 < d ? "," : "") + K.__string_rec(a[d], b);
              return c +
                "]"
            }
            try {
              e = a.toString
            } catch (h) {
              return pa.lastError = h, "???"
            }
            if (null != e && e != Object.toString && "function" == typeof e && (c = a.toString(), "[object Object]" != c)) return c;
            c = "{\n";
            b += "\t";
            e = null != a.hasOwnProperty;
            f = null;
            for (f in a) e && !a.hasOwnProperty(f) || "prototype" == f || "__class__" == f || "__super__" == f || "__interfaces__" == f || "__properties__" == f || (2 != c.length && (c += ", \n"), c += b + f + " : " + K.__string_rec(a[f], b));
            b = b.substring(1);
            return c + ("\n" + b + "}");
          case "string":
            return a;
          default:
            return String(a)
        }
      };
      K.__interfLoop = function(a,
        b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var c = a.__interfaces__;
        if (null != c)
          for (var d = 0, e = c.length; d < e;) {
            var f = d++;
            f = c[f];
            if (f == b || K.__interfLoop(f, b)) return !0
          }
        return K.__interfLoop(a.__super__, b)
      };
      K.__instanceof = function(a, b) {
        if (null == b) return !1;
        switch (b) {
          case Array:
            return a instanceof Array;
          case Gc:
            return "boolean" == typeof a;
          case Cr:
            return null != a;
          case Cc:
            return "number" == typeof a;
          case rc:
            return "number" == typeof a ? (a | 0) === a : !1;
          case String:
            return "string" == typeof a;
          default:
            if (null != a)
              if ("function" == typeof b) {
                if (K.__downcastCheck(a,
                    b)) return !0
              } else {
                if ("object" == typeof b && K.__isNativeObj(b) && a instanceof b) return !0
              }
            else return !1;
            return b == wq && null != a.__name__ || b == tr && null != a.__ename__ ? !0 : null != a.__enum__ ? O[a.__enum__] == b : !1
        }
      };
      K.__downcastCheck = function(a, b) {
        return a instanceof b ? !0 : b.__isInterface__ ? K.__interfLoop(K.getClass(a), b) : !1
      };
      K.__implements = function(a, b) {
        return K.__interfLoop(K.getClass(a), b)
      };
      K.__cast = function(a, b) {
        if (null == a || K.__instanceof(a, b)) return a;
        throw F.thrown("Cannot cast " + M.string(a) + " to " + M.string(b));
      };
      K.__nativeClassName = function(a) {
        a = K.__toStr.call(a).slice(8, -1);
        return "Object" == a || "Function" == a || "Math" == a || "JSON" == a ? null : a
      };
      K.__isNativeObj = function(a) {
        return null != K.__nativeClassName(a)
      };
      K.__resolveNativeClass = function(a) {
        return L[a]
      };
      var Wg = function() {};
      k["js.Browser"] = Wg;
      Wg.__name__ = "js.Browser";
      Wg.__properties__ = {
        get_supported: "get_supported"
      };
      Wg.get_supported = function() {
        return "undefined" != typeof window && "undefined" != typeof window.location ? "string" == typeof window.location.protocol : !1
      };
      Wg.getLocalStorage =
        function() {
          try {
            var a = window.localStorage;
            a.getItem("");
            if (0 == a.length) {
              var b = "_hx_" + Math.random();
              a.setItem(b, b);
              a.removeItem(b)
            }
            return a
          } catch (c) {
            return pa.lastError = c, null
          }
        };
      var xq = function() {};
      k["js.html._CanvasElement.CanvasUtil"] = xq;
      xq.__name__ = "js.html._CanvasElement.CanvasUtil";
      xq.getContextWebGL = function(a, b) {
        var c = a.getContext("webgl", b);
        if (null != c) return c;
        c = a.getContext("experimental-webgl", b);
        return null != c ? c : null
      };
      var yq = function() {};
      k["js.lib._ArrayBuffer.ArrayBufferCompat"] = yq;
      yq.__name__ =
        "js.lib._ArrayBuffer.ArrayBufferCompat";
      yq.sliceImpl = function(a, b) {
        a = new Uint8Array(this, a, null == b ? null : b - a);
        b = new Uint8Array(a.byteLength);
        b.set(a);
        return b.buffer
      };
      var wo = function(a) {
        this.gameDeviceCache = new Za;
        this.parent = a;
        this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
        this.framePeriod = -1;
        Dc.init();
        this.accelerometer = Pf.registerSensor(hr.ACCELEROMETER, 0)
      };
      k["lime._internal.backend.html5.HTML5Application"] = wo;
      wo.__name__ = "lime._internal.backend.html5.HTML5Application";
      wo.prototype = {
        accelerometer: null,
        currentUpdate: null,
        deltaTime: null,
        framePeriod: null,
        gameDeviceCache: null,
        hidden: null,
        lastUpdate: null,
        nextUpdate: null,
        parent: null,
        convertKeyCode: function(a) {
          if (65 <= a && 90 >= a) return a + 32;
          switch (a) {
            case 12:
              return 1073741980;
            case 16:
              return 1073742049;
            case 17:
              return 1073742048;
            case 18:
              return 1073742050;
            case 19:
              return 1073741896;
            case 20:
              return 1073741881;
            case 33:
              return 1073741899;
            case 34:
              return 1073741902;
            case 35:
              return 1073741901;
            case 36:
              return 1073741898;
            case 37:
              return 1073741904;
            case 38:
              return 1073741906;
            case 39:
              return 1073741903;
            case 40:
              return 1073741905;
            case 41:
              return 1073741943;
            case 43:
              return 1073741940;
            case 44:
              return 1073741894;
            case 45:
              return 1073741897;
            case 46:
              return 127;
            case 91:
              return 1073742051;
            case 92:
              return 1073742055;
            case 93:
              return 1073742055;
            case 95:
              return 1073742106;
            case 96:
              return 1073741922;
            case 97:
              return 1073741913;
            case 98:
              return 1073741914;
            case 99:
              return 1073741915;
            case 100:
              return 1073741916;
            case 101:
              return 1073741917;
            case 102:
              return 1073741918;
            case 103:
              return 1073741919;
            case 104:
              return 1073741920;
            case 105:
              return 1073741921;
            case 106:
              return 1073741909;
            case 107:
              return 1073741911;
            case 108:
              return 1073741923;
            case 109:
              return 1073741910;
            case 110:
              return 1073741923;
            case 111:
              return 1073741908;
            case 112:
              return 1073741882;
            case 113:
              return 1073741883;
            case 114:
              return 1073741884;
            case 115:
              return 1073741885;
            case 116:
              return 1073741886;
            case 117:
              return 1073741887;
            case 118:
              return 1073741888;
            case 119:
              return 1073741889;
            case 120:
              return 1073741890;
            case 121:
              return 1073741891;
            case 122:
              return 1073741892;
            case 123:
              return 1073741893;
            case 124:
              return 1073741928;
            case 125:
              return 1073741929;
            case 126:
              return 1073741930;
            case 127:
              return 1073741931;
            case 128:
              return 1073741932;
            case 129:
              return 1073741933;
            case 130:
              return 1073741934;
            case 131:
              return 1073741935;
            case 132:
              return 1073741936;
            case 133:
              return 1073741937;
            case 134:
              return 1073741938;
            case 135:
              return 1073741939;
            case 144:
              return 1073741907;
            case 145:
              return 1073741895;
            case 160:
              return 94;
            case 161:
              return 33;
            case 163:
              return 35;
            case 164:
              return 36;
            case 166:
              return 1073742094;
            case 167:
              return 1073742095;
            case 168:
              return 1073742097;
            case 169:
              return 41;
            case 170:
              return 42;
            case 171:
              return 96;
            case 172:
              return 1073741898;
            case 173:
              return 45;
            case 174:
              return 1073741953;
            case 175:
              return 1073741952;
            case 176:
              return 1073742082;
            case 177:
              return 1073742083;
            case 178:
              return 1073742084;
            case 179:
              return 1073742085;
            case 180:
              return 1073742089;
            case 181:
              return 1073742086;
            case 182:
              return 1073741953;
            case 183:
              return 1073741952;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 193:
              return 63;
            case 194:
              return 1073741923;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39;
            case 223:
              return 96;
            case 224:
              return 1073742051;
            case 226:
              return 92
          }
          return a
        },
        exec: function() {
          window.addEventListener("keydown", r(this, this.handleKeyEvent), !1);
          window.addEventListener("keyup", r(this, this.handleKeyEvent), !1);
          window.addEventListener("focus", r(this, this.handleWindowEvent), !1);
          window.addEventListener("blur", r(this, this.handleWindowEvent), !1);
          window.addEventListener("resize",
            r(this, this.handleWindowEvent), !1);
          window.addEventListener("beforeunload", r(this, this.handleWindowEvent), !1);
          window.addEventListener("devicemotion", r(this, this.handleSensorEvent), !1);
          CanvasRenderingContext2D.prototype.isPointInStroke || (CanvasRenderingContext2D.prototype.isPointInStroke = function(a, b, c) {
            return !1
          });
          CanvasRenderingContext2D.prototype.isPointInPath || (CanvasRenderingContext2D.prototype.isPointInPath = function(a, b, c) {
            return !1
          });
          0 == "performance" in window && (window.performance = {});
          if (0 == "now" in
            window.performance) {
            var a = Date.now();
            performance.timing && performance.timing.navigationStart && (a = performance.timing.navigationStart);
            window.performance.now = function() {
              return Date.now() - a
            }
          }
          for (var b = 0, c = ["ms", "moz", "webkit", "o"], d = 0; d < c.length && !window.requestAnimationFrame; ++d) window.requestAnimationFrame = window[c[d] + "RequestAnimationFrame"], window.cancelAnimationFrame = window[c[d] + "CancelAnimationFrame"] || window[c[d] + "CancelRequestAnimationFrame"];
          window.requestAnimationFrame || (window.requestAnimationFrame =
            function(a, c) {
              var d = (new Date).getTime(),
                e = Math.max(0, 16 - (d - b));
              c = window.setTimeout(function() {
                a(d + e)
              }, e);
              b = d + e;
              return c
            });
          window.cancelAnimationFrame || (window.cancelAnimationFrame = function(a) {
            clearTimeout(a)
          });
          window.requestAnimFrame = window.requestAnimationFrame;
          this.lastUpdate = (new Date).getTime();
          this.handleApplicationEvent();
          return 0
        },
        exit: function() {},
        handleApplicationEvent: function(a) {
          a = 0;
          for (var b = this.parent.__windows; a < b.length;) {
            var c = b[a];
            ++a;
            c.__backend.updateSize()
          }
          this.updateGameDevices();
          this.currentUpdate = (new Date).getTime();
          if (this.currentUpdate >= this.nextUpdate) {
            this.deltaTime = this.currentUpdate - this.lastUpdate;
            a = 0;
            for (b = this.parent.__windows; a < b.length;) c = b[a], ++a, this.parent.onUpdate.dispatch(this.deltaTime | 0), null != c.context && c.onRender.dispatch(c.context);
            this.nextUpdate = 0 > this.framePeriod ? this.currentUpdate : this.currentUpdate - this.currentUpdate % this.framePeriod + this.framePeriod;
            this.lastUpdate = this.currentUpdate
          }
          window.requestAnimationFrame(r(this, this.handleApplicationEvent))
        },
        handleKeyEvent: function(a) {
          if (null != this.parent.__window) {
            switch (a.keyCode) {
              case 32:
              case 37:
              case 38:
              case 39:
              case 40:
                a.preventDefault()
            }
            var b = this.convertKeyCode(null != a.keyCode ? a.keyCode : a.which),
              c = (a.shiftKey ? 3 : 0) | (a.ctrlKey ? 192 : 0) | (a.altKey ? 768 : 0) | (a.metaKey ? 3072 : 0);
            "keydown" == a.type ? (this.parent.__window.onKeyDown.dispatch(b, c), this.parent.__window.onKeyDown.canceled && a.cancelable && a.preventDefault()) : (this.parent.__window.onKeyUp.dispatch(b, c), this.parent.__window.onKeyUp.canceled && a.cancelable &&
              a.preventDefault())
          }
        },
        handleSensorEvent: function(a) {
          this.accelerometer.onUpdate.dispatch(a.accelerationIncludingGravity.x, a.accelerationIncludingGravity.y, a.accelerationIncludingGravity.z)
        },
        handleWindowEvent: function(a) {
          if (null != this.parent.__window) switch (a.type) {
            case "blur":
              this.hidden || (this.parent.__window.onFocusOut.dispatch(), this.parent.__window.onDeactivate.dispatch(), this.hidden = !0);
              break;
            case "focus":
              this.hidden && (this.parent.__window.onFocusIn.dispatch(), this.parent.__window.onActivate.dispatch(),
                this.hidden = !1);
              break;
            case "resize":
              this.parent.__window.__backend.handleResizeEvent(a);
              break;
            case "visibilitychange":
              window.document.hidden ? this.hidden || (this.parent.__window.onFocusOut.dispatch(), this.parent.__window.onDeactivate.dispatch(), this.hidden = !0) : this.hidden && (this.parent.__window.onFocusIn.dispatch(), this.parent.__window.onActivate.dispatch(), this.hidden = !1)
          }
        },
        updateGameDevices: function() {
          var a = bd.__getDeviceData();
          if (null != a)
            for (var b, c, d, e, f, g = 0, h = a.length; g < h;)
              if (b = g++, e = a[b], null !=
                e) {
                if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
                  f = new xo;
                  f.id = b;
                  f.connected = e.connected;
                  c = 0;
                  for (d = e.buttons.length; c < d;) {
                    var m = c++;
                    f.buttons.push(e.buttons[m].value)
                  }
                  c = 0;
                  for (d = e.axes.length; c < d;) m = c++, f.axes.push(e.axes[m]);
                  "standard" == e.mapping && (f.isGamepad = !0);
                  this.gameDeviceCache.h[b] = f;
                  e.connected && (bd.__connect(b), f.isGamepad && Nd.__connect(b))
                }
                f = this.gameDeviceCache.h[b];
                d = bd.devices.h[b];
                c = Nd.devices.h[b];
                if (e.connected) {
                  for (var l = 0, p = e.buttons.length; l < p;) {
                    var n = l++;
                    m = e.buttons[n].value;
                    if (m != f.buttons[n]) {
                      if (6 == n) d.onAxisMove.dispatch(e.axes.length, m), null != c && c.onAxisMove.dispatch(4, m);
                      else if (7 == n) d.onAxisMove.dispatch(e.axes.length + 1, m), null != c && c.onAxisMove.dispatch(5, m);
                      else if (0 < m ? d.onButtonDown.dispatch(n) : d.onButtonUp.dispatch(n), null != c) {
                        switch (n) {
                          case 0:
                            b = 0;
                            break;
                          case 1:
                            b = 1;
                            break;
                          case 2:
                            b = 2;
                            break;
                          case 3:
                            b = 3;
                            break;
                          case 4:
                            b = 9;
                            break;
                          case 5:
                            b = 10;
                            break;
                          case 8:
                            b = 4;
                            break;
                          case 9:
                            b = 6;
                            break;
                          case 10:
                            b = 7;
                            break;
                          case 11:
                            b = 8;
                            break;
                          case 12:
                            b = 11;
                            break;
                          case 13:
                            b = 12;
                            break;
                          case 14:
                            b = 13;
                            break;
                          case 15:
                            b = 14;
                            break;
                          case 16:
                            b = 5;
                            break;
                          default:
                            continue
                        }
                        0 < m ? c.onButtonDown.dispatch(b) : c.onButtonUp.dispatch(b)
                      }
                      f.buttons[n] = m
                    }
                  }
                  b = 0;
                  for (m = e.axes.length; b < m;) l = b++, e.axes[l] != f.axes[l] && (d.onAxisMove.dispatch(l, e.axes[l]), null != c && c.onAxisMove.dispatch(l, e.axes[l]), f.axes[l] = e.axes[l])
                } else f.connected && (f.connected = !1, bd.__disconnect(b), Nd.__disconnect(b))
              }
        },
        __class__: wo
      };
      var xo = function() {
        this.connected = !0;
        this.buttons = [];
        this.axes = []
      };
      k["lime._internal.backend.html5.GameDeviceData"] = xo;
      xo.__name__ =
        "lime._internal.backend.html5.GameDeviceData";
      xo.prototype = {
        connected: null,
        id: null,
        isGamepad: null,
        buttons: null,
        axes: null,
        __class__: xo
      };
      var yo = function(a) {
        this.parent = a;
        this.id = -1;
        this.gain = 1
      };
      k["lime._internal.backend.html5.HTML5AudioSource"] = yo;
      yo.__name__ = "lime._internal.backend.html5.HTML5AudioSource";
      yo.prototype = {
        completed: null,
        gain: null,
        id: null,
        length: null,
        loops: null,
        parent: null,
        playing: null,
        dispose: function() {},
        init: function() {},
        play: function() {
          if (!this.playing && null != this.parent.buffer && null !=
            this.parent.buffer.__srcHowl) {
            this.playing = !0;
            var a = this.getCurrentTime();
            this.completed = !1;
            var b = this.parent.buffer.__srcHowl._volume;
            this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
            this.id = this.parent.buffer.__srcHowl.play();
            this.parent.buffer.__srcHowl._volume = b;
            null != this.parent.get_pan() && this.setPan(this.parent.get_pan());
            null != this.parent.get_position() && this.setPosition(this.parent.get_position());
            this.parent.buffer.__srcHowl.on("end", r(this, this.howl_onEnd), this.id);
            this.setCurrentTime(a)
          }
        },
        pause: function() {
          this.playing = !1;
          null != this.parent.buffer && null != this.parent.buffer.__srcHowl && this.parent.buffer.__srcHowl.pause(this.id)
        },
        stop: function() {
          this.playing = !1;
          null != this.parent.buffer && null != this.parent.buffer.__srcHowl && (this.parent.buffer.__srcHowl.stop(this.id), this.parent.buffer.__srcHowl.off("end", r(this, this.howl_onEnd), this.id))
        },
        update: function() {},
        howl_onEnd: function() {
          this.playing = !1;
          0 < this.loops ? (this.loops--, this.stop(), this.play()) : (null != this.parent.buffer && null != this.parent.buffer.__srcHowl &&
            (this.parent.buffer.__srcHowl.stop(this.id), this.parent.buffer.__srcHowl.off("end", r(this, this.howl_onEnd), this.id)), this.completed = !0, this.parent.onComplete.dispatch())
        },
        getCurrentTime: function() {
          if (-1 == this.id) return 0;
          if (this.completed) return this.getLength();
          if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
            var a = (1E3 * this.parent.buffer.__srcHowl.seek(this.id) | 0) - this.parent.offset;
            return 0 > a ? 0 : a
          }
          return 0
        },
        setCurrentTime: function(a) {
          if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
            var b =
              (a + this.parent.offset) / 1E3;
            0 > b && (b = 0);
            this.parent.buffer.__srcHowl.seek(b, this.id)
          }
          return a
        },
        getGain: function() {
          return this.gain
        },
        setGain: function(a) {
          null != this.parent.buffer && null != this.parent.buffer.__srcHowl && -1 != this.id && this.parent.buffer.__srcHowl.volume(a, this.id);
          return this.gain = a
        },
        getLength: function() {
          return 0 != this.length ? this.length : null != this.parent.buffer && null != this.parent.buffer.__srcHowl ? 1E3 * this.parent.buffer.__srcHowl.duration() | 0 : 0
        },
        setLength: function(a) {
          return this.length = a
        },
        getLoops: function() {
          return this.loops
        },
        setLoops: function(a) {
          return this.loops = a
        },
        setPan: function(a) {
          null != this.parent.buffer.__srcHowl && null != this.parent.buffer.__srcHowl.stereo && this.parent.buffer.__srcHowl.stereo(a, this.id);
          return a
        },
        setPosition: function(a) {
          null != this.parent.buffer.__srcHowl && null != this.parent.buffer.__srcHowl.pos && this.parent.buffer.__srcHowl.pos(a.x, a.y, a.z, this.id);
          return a
        },
        __class__: yo
      };
      var Ua = function() {
        this.validStatus0 = (new nb("Tizen", "gi")).match(window.navigator.userAgent)
      };
      k["lime._internal.backend.html5.HTML5HTTPRequest"] = Ua;
      Ua.__name__ = "lime._internal.backend.html5.HTML5HTTPRequest";
      Ua.loadImage = function(a) {
        var b = new ee;
        Ua.activeRequests < Ua.requestLimit ? (Ua.activeRequests++, Ua.__loadImage(a, b, 0)) : Ua.requestQueue.add({
          instance: null,
          uri: a,
          promise: b,
          type: "IMAGE",
          options: 0
        });
        return b.future
      };
      Ua.loadImageFromBytes = function(a, b) {
        var c = URL.createObjectURL(new Blob([a.b.bufferValue], {
          type: b
        }));
        return null != c ? (a = new ee, Ua.activeRequests < Ua.requestLimit ? (Ua.activeRequests++,
          Ua.__loadImage(c, a, 1)) : Ua.requestQueue.add({
          instance: null,
          uri: c,
          promise: a,
          type: "IMAGE",
          options: 1
        }), a.future) : Ua.loadImage("data:" + b + ";base64," + Qf.encode(a))
      };
      Ua.processQueue = function() {
        if (Ua.activeRequests < Ua.requestLimit && 0 < Ua.requestQueue.length) {
          Ua.activeRequests++;
          var a = Ua.requestQueue.pop();
          switch (a.type) {
            case "BINARY":
              a.instance.__loadData(a.uri, a.promise);
              break;
            case "IMAGE":
              Ua.__loadImage(a.uri, a.promise, a.options);
              break;
            case "TEXT":
              a.instance.__loadText(a.uri, a.promise);
              break;
            default:
              Ua.activeRequests--
          }
        }
      };
      Ua.__createBlobURIFromBytes = function(a, b) {
        return URL.createObjectURL(new Blob([a.b.bufferValue], {
          type: b
        }))
      };
      Ua.__fixHostname = function(a) {
        return null == a ? "" : a
      };
      Ua.__fixPort = function(a, b) {
        if (null == a || "" == a) switch (b) {
          case "ftp:":
            return "21";
          case "gopher:":
            return "70";
          case "http:":
            return "80";
          case "https:":
            return "443";
          case "ws:":
            return "80";
          case "wss:":
            return "443";
          default:
            return ""
        }
        return a
      };
      Ua.__fixProtocol = function(a) {
        return null == a || "" == a ? "http:" : a
      };
      Ua.__isInMemoryURI = function(a) {
        return W.startsWith(a, "data:") ?
          !0 : W.startsWith(a, "blob:")
      };
      Ua.__isSameOrigin = function(a) {
        if (null == a || "" == a || Ua.__isInMemoryURI(a)) return !0;
        null == Ua.originElement && (Ua.originElement = window.document.createElement("a"), Ua.originHostname = Ua.__fixHostname(L.location.hostname), Ua.originProtocol = Ua.__fixProtocol(L.location.protocol), Ua.originPort = Ua.__fixPort(L.location.port, Ua.originProtocol));
        var b = Ua.originElement;
        b.href = a;
        "" == b.hostname && (b.href = b.href);
        var c = Ua.__fixHostname(b.hostname);
        a = Ua.__fixProtocol(b.protocol);
        b = Ua.__fixPort(b.port,
          a);
        c = "" == c || c == Ua.originHostname;
        b = "" == b || b == Ua.originPort;
        return "file:" != a && c ? b : !1
      };
      Ua.__loadImage = function(a, b, c) {
        var d = new Image;
        Ua.__isSameOrigin(a) || (d.crossOrigin = "Anonymous");
        null == Ua.supportsImageProgress && (Ua.supportsImageProgress = "onprogress" in d);
        if (Ua.supportsImageProgress || Ua.__isInMemoryURI(a)) d.addEventListener("load", function(e) {
          Ua.__revokeBlobURI(a, c);
          e = new Rf(null, d.width, d.height);
          e.__srcImage = d;
          Ua.activeRequests--;
          Ua.processQueue();
          b.complete(new Hb(e))
        }, !1), d.addEventListener("progress",
          function(a) {
            b.progress(a.loaded, a.total)
          }, !1), d.addEventListener("error", function(d) {
          Ua.__revokeBlobURI(a, c);
          Ua.activeRequests--;
          Ua.processQueue();
          b.error(d.detail)
        }, !1), d.src = a;
        else {
          var e = new XMLHttpRequest;
          e.onload = function(a) {
            Ua.activeRequests--;
            Ua.processQueue();
            (new Hb).__fromBytes(ib.ofData(e.response), function(a) {
              b.complete(a)
            })
          };
          e.onerror = function(a) {
            b.error(a.message)
          };
          e.onprogress = function(a) {
            a.lengthComputable && b.progress(a.loaded, a.total)
          };
          e.open("GET", a, !0);
          e.responseType = "arraybuffer";
          e.overrideMimeType("text/plain; charset=x-user-defined");
          e.send(null)
        }
      };
      Ua.__revokeBlobURI = function(a, b) {
        0 != (b & 1) && URL.revokeObjectURL(a)
      };
      Ua.prototype = {
        binary: null,
        parent: null,
        request: null,
        validStatus0: null,
        cancel: function() {
          null != this.request && this.request.abort()
        },
        init: function(a) {
          this.parent = a
        },
        load: function(a, b, c) {
          this.request = new XMLHttpRequest;
          "POST" == this.parent.method ? this.request.upload.addEventListener("progress", b, !1) : this.request.addEventListener("progress", b, !1);
          this.request.onreadystatechange =
            c;
          b = "";
          if (null == this.parent.data) {
            c = Object.keys(this.parent.formData.h);
            for (var d = c.length, e = 0; e < d;) {
              var f = c[e++];
              0 < b.length && (b += "&");
              var g = this.parent.formData.h[f];
              if (-1 < f.indexOf("[]") && g instanceof Array) {
                var h = [];
                for (g = I(g); g.hasNext();) {
                  var m = g.next();
                  h.push(encodeURIComponent(m))
                }
                h = h.join("&amp;" + f + "=");
                b += encodeURIComponent(f) + "=" + h
              } else h = encodeURIComponent(f) + "=", f = M.string(g), b += h + encodeURIComponent(f)
            }
            "GET" == this.parent.method && "" != b && (a = -1 < a.indexOf("?") ? a + ("&" + b) : a + ("?" + b), b = "")
          }
          this.request.open(M.string(this.parent.method),
            a, !0);
          0 < this.parent.timeout && (this.request.timeout = this.parent.timeout);
          this.binary && (this.request.responseType = "arraybuffer");
          a = null;
          h = 0;
          for (c = this.parent.headers; h < c.length;) d = c[h], ++h, "Content-Type" == d.name ? a = d.value : this.request.setRequestHeader(d.name, d.value);
          null != this.parent.contentType && (a = this.parent.contentType);
          null == a && (null != this.parent.data ? a = "application/octet-stream" : "" != b && (a = "application/x-www-form-urlencoded"));
          null != a && this.request.setRequestHeader("Content-Type", a);
          this.parent.withCredentials &&
            (this.request.withCredentials = !0);
          null != this.parent.data ? this.request.send(this.parent.data.b.bufferValue) : this.request.send(b)
        },
        loadData: function(a) {
          var b = new ee;
          Ua.activeRequests < Ua.requestLimit ? (Ua.activeRequests++, this.__loadData(a, b)) : Ua.requestQueue.add({
            instance: this,
            uri: a,
            promise: b,
            type: "BINARY",
            options: 0
          });
          return b.future
        },
        loadText: function(a) {
          var b = new ee;
          Ua.activeRequests < Ua.requestLimit ? (Ua.activeRequests++, this.__loadText(a, b)) : Ua.requestQueue.add({
            instance: this,
            uri: a,
            promise: b,
            type: "TEXT",
            options: 0
          });
          return b.future
        },
        processResponse: function() {
          if (this.parent.enableResponseHeaders) {
            this.parent.responseHeaders = [];
            for (var a, b, c = 0, d = this.request.getAllResponseHeaders().split("\n"); c < d.length;) b = d[c], ++c, a = W.trim(da.substr(b, 0, b.indexOf(":"))), b = W.trim(da.substr(b, b.indexOf(":") + 1, null)), "" != a && this.parent.responseHeaders.push(new lm(a, b))
          }
          this.parent.responseStatus = this.request.status
        },
        __loadData: function(a, b) {
          var c = this;
          this.binary = !0;
          this.load(a, function(a) {
              b.progress(a.loaded, a.total)
            },
            function(a) {
              4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 > c.request.status || c.validStatus0 && 0 == c.request.status) ? (a = null, "" == c.request.responseType ? null != c.request.responseText && (a = ib.ofString(c.request.responseText)) : null != c.request.response && (a = ib.ofData(c.request.response)), c.processResponse(), b.complete(a)) : (c.processResponse(), b.error(c.request.status)), c.request = null, Ua.activeRequests--, Ua.processQueue())
            })
        },
        __loadText: function(a, b) {
          var c = this;
          this.binary = !1;
          this.load(a, function(a) {
            b.progress(a.loaded, a.total)
          }, function(a) {
            4 == c.request.readyState && (null != c.request.status && (200 <= c.request.status && 400 >= c.request.status || c.validStatus0 && 0 == c.request.status) ? (c.processResponse(), b.complete(c.request.responseText)) : (c.processResponse(), b.error(c.request.status)), c.request = null, Ua.activeRequests--, Ua.processQueue())
          })
        },
        __class__: Ua
      };
      var Ma = function(a) {
        this.inputing = !1;
        this.unusedTouchesPool = new bb;
        this.scale = 1;
        this.currentTouches = new Za;
        this.parent = a;
        this.cursor =
          qc.DEFAULT;
        this.cacheMouseY = this.cacheMouseX = 0;
        var b = a.__attributes;
        Object.prototype.hasOwnProperty.call(b, "context") || (b.context = {});
        this.renderType = b.context.type;
        Object.prototype.hasOwnProperty.call(b, "element") && (a.element = b.element);
        var c = a.element;
        Object.prototype.hasOwnProperty.call(b, "allowHighDPI") && b.allowHighDPI && "dom" != this.renderType && (this.scale = window.devicePixelRatio);
        a.__scale = this.scale;
        this.setWidth = Object.prototype.hasOwnProperty.call(b, "width") ? b.width : 0;
        this.setHeight = Object.prototype.hasOwnProperty.call(b,
          "height") ? b.height : 0;
        a.__width = this.setWidth;
        a.__height = this.setHeight;
        a.id = Ma.windowID++;
        c instanceof HTMLCanvasElement ? this.canvas = c : "dom" == this.renderType ? this.div = window.document.createElement("div") : this.canvas = window.document.createElement("canvas");
        if (null != this.canvas) {
          var d = this.canvas.style;
          d.setProperty("-webkit-transform", "translateZ(0)", null);
          d.setProperty("transform", "translateZ(0)", null)
        } else null != this.div && (d = this.div.style, d.setProperty("-webkit-transform", "translate3D(0,0,0)", null),
          d.setProperty("transform", "translate3D(0,0,0)", null), d.position = "relative", d.overflow = "hidden", d.setProperty("-webkit-user-select", "none", null), d.setProperty("-moz-user-select", "none", null), d.setProperty("-ms-user-select", "none", null), d.setProperty("-o-user-select", "none", null));
        0 == a.__width && 0 == a.__height && (null != c ? (a.__width = c.clientWidth, a.__height = c.clientHeight) : (a.__width = window.innerWidth, a.__height = window.innerHeight), this.cacheElementWidth = a.__width, this.cacheElementHeight = a.__height, this.resizeElement = !0);
        null != this.canvas ? (this.canvas.width = Math.round(a.__width * this.scale), this.canvas.height = Math.round(a.__height * this.scale), this.canvas.style.width = a.__width + "px", this.canvas.style.height = a.__height + "px") : (this.div.style.width = a.__width + "px", this.div.style.height = a.__height + "px");
        if (Object.prototype.hasOwnProperty.call(b, "resizable") && b.resizable || !Object.prototype.hasOwnProperty.call(b, "width") && 0 == this.setWidth && 0 == this.setHeight) a.__resizable = !0;
        this.updateSize();
        if (null != c) {
          null != this.canvas ?
            c != this.canvas && c.appendChild(this.canvas) : c.appendChild(this.div);
          b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(" ");
          for (d = 0; d < b.length;) {
            var e = b[d];
            ++d;
            c.addEventListener(e, r(this, this.handleMouseEvent), !0)
          }
          c.addEventListener("contextmenu", r(this, this.handleContextMenuEvent), !0);
          c.addEventListener("dragstart", r(this, this.handleDragEvent), !0);
          c.addEventListener("dragover", r(this, this.handleDragEvent), !0);
          c.addEventListener("drop", r(this, this.handleDragEvent), !0);
          c.addEventListener("touchstart",
            r(this, this.handleTouchEvent), !0);
          c.addEventListener("touchmove", r(this, this.handleTouchEvent), !0);
          c.addEventListener("touchend", r(this, this.handleTouchEvent), !0);
          c.addEventListener("touchcancel", r(this, this.handleTouchEvent), !0);
          c.addEventListener("gamepadconnected", r(this, this.handleGamepadEvent), !0);
          c.addEventListener("gamepaddisconnected", r(this, this.handleGamepadEvent), !0)
        }
        this.createContext();
        "webgl" == a.context.type && (this.canvas.addEventListener("webglcontextlost", r(this, this.handleContextEvent),
          !1), this.canvas.addEventListener("webglcontextrestored", r(this, this.handleContextEvent), !1))
      };
      k["lime._internal.backend.html5.HTML5Window"] = Ma;
      Ma.__name__ = "lime._internal.backend.html5.HTML5Window";
      Ma.prototype = {
        canvas: null,
        div: null,
        cacheElementHeight: null,
        cacheElementWidth: null,
        cacheMouseX: null,
        cacheMouseY: null,
        cursor: null,
        currentTouches: null,
        isFullscreen: null,
        parent: null,
        primaryTouch: null,
        renderType: null,
        requestedFullscreen: null,
        resizeElement: null,
        scale: null,
        setHeight: null,
        setWidth: null,
        textInputEnabled: null,
        unusedTouchesPool: null,
        alert: function(a, b) {
          null != a && window.alert(M.string(a))
        },
        close: function() {
          this.parent.application.__removeWindow(this.parent)
        },
        createContext: function() {
          var a = new zo,
            b = this.parent.__attributes.context;
          a.window = this.parent;
          a.attributes = b;
          if (null != this.div) a.dom = this.div, a.type = "dom", a.version = "";
          else if (null != this.canvas) {
            var c = null,
              d = "opengl" == this.renderType || "opengles" == this.renderType || "webgl" == this.renderType,
              e = !Object.prototype.hasOwnProperty.call(b, "version") || "1" != b.version,
              f = !1;
            if (d) {
              d = Object.prototype.hasOwnProperty.call(b, "background") && null == b.background;
              var g = Object.prototype.hasOwnProperty.call(b, "colorDepth") ? b.colorDepth : 16,
                h = Object.prototype.hasOwnProperty.call(b, "antialiasing") && 0 < b.antialiasing,
                m = Object.prototype.hasOwnProperty.call(b, "depth") ? b.depth : !0;
              b = Object.prototype.hasOwnProperty.call(b, "stencil") && b.stencil;
              b = {
                alpha: d || 16 < g,
                antialias: h,
                depth: m,
                premultipliedAlpha: !0,
                stencil: b,
                preserveDrawingBuffer: !1,
                failIfMajorPerformanceCaveat: !1
              };
              d = ["webgl", "experimental-webgl"];
              e && d.unshift("webgl2");
              for (e = 0; e < d.length && (g = d[e], ++e, c = this.canvas.getContext(g, b), null != c && "webgl2" == g && (f = !0), null == c););
            }
            null == c ? (a.canvas2D = this.canvas.getContext("2d"), a.type = "canvas", a.version = "") : (a.webgl = cc.fromWebGL2RenderContext(c), f && (a.webgl2 = c), null == q.context && (q.context = c, q.type = "webgl", q.version = f ? 2 : 1), a.type = "webgl", a.version = f ? "2" : "1")
          }
          this.parent.context = a
        },
        focus: function() {},
        getCursor: function() {
          return this.cursor
        },
        getDisplay: function() {
          return Wa.getDisplay(0)
        },
        getDisplayMode: function() {
          return Wa.getDisplay(0).currentMode
        },
        getFrameRate: function() {
          return null == this.parent.application ? 0 : 0 > this.parent.application.__backend.framePeriod ? 60 : 1E3 == this.parent.application.__backend.framePeriod ? 0 : 1E3 / this.parent.application.__backend.framePeriod
        },
        getMouseLock: function() {
          return !1
        },
        getTextInputEnabled: function() {
          return this.textInputEnabled
        },
        handleContextEvent: function(a) {
          switch (a.type) {
            case "webglcontextlost":
              a.cancelable && a.preventDefault();
              this.parent.context = null;
              this.parent.onRenderContextLost.dispatch();
              break;
            case "webglcontextrestored":
              this.createContext(),
                this.parent.onRenderContextRestored.dispatch(this.parent.context)
          }
        },
        handleContextMenuEvent: function(a) {
          (this.parent.onMouseUp.canceled || this.parent.onMouseDown.canceled) && a.cancelable && a.preventDefault()
        },
        handleCutOrCopyEvent: function(a) {
          a.clipboardData.setData("text/plain", oe.get_text());
          a.cancelable && a.preventDefault()
        },
        handleDragEvent: function(a) {
          switch (a.type) {
            case "dragover":
              return a.preventDefault(), !1;
            case "dragstart":
              if ("img" == K.__cast(a.target, HTMLElement).nodeName.toLowerCase() && a.cancelable) return a.preventDefault(),
                !1;
              break;
            case "drop":
              if (null != a.dataTransfer && 0 < a.dataTransfer.files.length) return this.parent.onDropFile.dispatch(a.dataTransfer.files), a.preventDefault(), !1
          }
          return !0
        },
        handleFocusEvent: function(a) {
          var b = this;
          this.textInputEnabled && (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) && Ue.delay(function() {
            b.textInputEnabled && Ma.textInput.focus()
          }, 20)
        },
        handleFullscreenEvent: function(a) {
          if (null != (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement)) this.isFullscreen = !0, this.parent.__fullscreen = !0, this.requestedFullscreen && (this.requestedFullscreen = !1, this.parent.onFullscreen.dispatch());
          else {
            this.isFullscreen = !1;
            this.parent.__fullscreen = !1;
            this.parent.onRestore.dispatch();
            a = ["fullscreenchange", "mozfullscreenchange", "webkitfullscreenchange", "MSFullscreenChange"];
            for (var b = ["fullscreenerror", "mozfullscreenerror", "webkitfullscreenerror", "MSFullscreenError"], c = 0, d = a.length; c < d;) {
              var e = c++;
              window.document.removeEventListener(a[e], r(this, this.handleFullscreenEvent),
                !1);
              window.document.removeEventListener(b[e], r(this, this.handleFullscreenEvent), !1)
            }
          }
        },
        handleGamepadEvent: function(a) {
          switch (a.type) {
            case "gamepadconnected":
              bd.__connect(a.gamepad.index);
              "standard" == a.gamepad.mapping && Nd.__connect(a.gamepad.index);
              break;
            case "gamepaddisconnected":
              bd.__disconnect(a.gamepad.index), Nd.__disconnect(a.gamepad.index)
          }
        },
        handleInputEvent: function(a) {
          this.inputing || Ma.textInput.value == Ma.dummyCharacter || (a = W.replace(Ma.textInput.value, Ma.dummyCharacter, ""), 0 < a.length && this.parent.onTextInput.dispatch(a),
            Ma.textInput.value = Ma.dummyCharacter)
        },
        handleMouseEvent: function(a) {
          if ("wheel" != a.type) {
            if (null != this.parent.element)
              if (null != this.canvas) {
                var b = this.canvas.getBoundingClientRect();
                var c = this.parent.__width / b.width * (a.clientX - b.left);
                b = this.parent.__height / b.height * (a.clientY - b.top)
              } else null != this.div ? (b = this.div.getBoundingClientRect(), c = a.clientX - b.left, b = a.clientY - b.top) : (b = this.parent.element.getBoundingClientRect(), c = this.parent.__width / b.width * (a.clientX - b.left), b = this.parent.__height / b.height *
                (a.clientY - b.top));
            else c = a.clientX, b = a.clientY;
            switch (a.type) {
              case "mousedown":
                a.currentTarget == this.parent.element && window.addEventListener("mouseup", r(this, this.handleMouseEvent));
                this.parent.onMouseDown.dispatch(c, b, a.button);
                this.parent.onMouseDown.canceled && a.cancelable && a.preventDefault();
                break;
              case "mouseenter":
                a.target == this.parent.element && (this.parent.onEnter.dispatch(), this.parent.onEnter.canceled && a.cancelable && a.preventDefault());
                break;
              case "mouseleave":
                a.target == this.parent.element &&
                  (this.parent.onLeave.dispatch(), this.parent.onLeave.canceled && a.cancelable && a.preventDefault());
                break;
              case "mousemove":
                if (c != this.cacheMouseX || b != this.cacheMouseY) this.parent.onMouseMove.dispatch(c, b), this.parent.onMouseMoveRelative.dispatch(c - this.cacheMouseX, b - this.cacheMouseY), (this.parent.onMouseMove.canceled || this.parent.onMouseMoveRelative.canceled) && a.cancelable && a.preventDefault();
                break;
              case "mouseup":
                window.removeEventListener("mouseup", r(this, this.handleMouseEvent)), a.currentTarget == this.parent.element &&
                  a.stopPropagation(), this.parent.onMouseUp.dispatch(c, b, a.button), this.parent.onMouseUp.canceled && a.cancelable && a.preventDefault()
            }
            this.cacheMouseX = c;
            this.cacheMouseY = b
          } else {
            switch (a.deltaMode) {
              case 0:
                c = Bh.PIXELS;
                break;
              case 1:
                c = Bh.LINES;
                break;
              case 2:
                c = Bh.PAGES;
                break;
              default:
                c = Bh.UNKNOWN
            }
            this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
            this.parent.onMouseWheel.canceled && a.cancelable && a.preventDefault()
          }
        },
        handlePasteEvent: function(a) {
          if (-1 < a.clipboardData.types.indexOf("text/plain")) {
            var b = a.clipboardData.getData("text/plain");
            oe.set_text(b);
            this.textInputEnabled && this.parent.onTextInput.dispatch(b);
            a.cancelable && a.preventDefault()
          }
        },
        handleResizeEvent: function(a) {
          this.primaryTouch = null;
          this.updateSize()
        },
        handleTouchEvent: function(a) {
          a.cancelable && a.preventDefault();
          var b = null;
          null != this.parent.element && (b = null != this.canvas ? this.canvas.getBoundingClientRect() : null != this.div ? this.div.getBoundingClientRect() : this.parent.element.getBoundingClientRect());
          var c = this.setWidth,
            d = this.setHeight;
          if (0 == c || 0 == d) null != b ? (c = b.width,
            d = b.height) : d = c = 1;
          for (var e, f, g, h, m, l = 0, p = a.changedTouches; l < p.length;) {
            var n = p[l];
            ++l;
            null != b ? (f = c / b.width * (n.clientX - b.left), g = d / b.height * (n.clientY - b.top)) : (f = n.clientX, g = n.clientY);
            if ("touchstart" == a.type) e = this.unusedTouchesPool.pop(), null == e ? e = new sd(f / c, g / d, n.identifier, 0, 0, n.force, this.parent.id) : (e.x = f / c, e.y = g / d, e.id = n.identifier, e.dx = 0, e.dy = 0, e.pressure = n.force, e.device = this.parent.id), this.currentTouches.h[n.identifier] = e, sd.onStart.dispatch(e), null == this.primaryTouch && (this.primaryTouch =
              e), e == this.primaryTouch && this.parent.onMouseDown.dispatch(f, g, 0);
            else if (e = this.currentTouches.h[n.identifier], null != e) switch (h = e.x, m = e.y, e.x = f / c, e.y = g / d, e.dx = e.x - h, e.dy = e.y - m, e.pressure = n.force, a.type) {
              case "touchcancel":
                sd.onCancel.dispatch(e);
                this.currentTouches.remove(n.identifier);
                this.unusedTouchesPool.add(e);
                e == this.primaryTouch && (this.primaryTouch = null);
                break;
              case "touchend":
                sd.onEnd.dispatch(e);
                this.currentTouches.remove(n.identifier);
                this.unusedTouchesPool.add(e);
                e == this.primaryTouch && (this.parent.onMouseUp.dispatch(f,
                  g, 0), this.primaryTouch = null);
                break;
              case "touchmove":
                sd.onMove.dispatch(e), e == this.primaryTouch && this.parent.onMouseMove.dispatch(f, g)
            }
          }
        },
        isDescendent: function(a) {
          if (a == this.parent.element) return !0;
          for (; null != a;) {
            if (a.parentNode == this.parent.element) return !0;
            a = a.parentNode
          }
          return !1
        },
        move: function(a, b) {},
        readPixels: function(a) {
          if (null != this.canvas) {
            var b = new Td(0, 0, this.canvas.width, this.canvas.height);
            null == a ? a = b : a.intersection(b, a);
            if (0 < a.width && 0 < a.height) return b = window.document.createElement("canvas"),
              b.width = a.width | 0, b.height = a.height | 0, b.getContext("2d").drawImage(this.canvas, -a.x, -a.y), Hb.fromCanvas(b)
          }
          return null
        },
        resize: function(a, b) {},
        setBorderless: function(a) {
          return a
        },
        setClipboard: function(a) {
          null == Ma.textArea && (Ma.textArea = window.document.createElement("textarea"), Ma.textArea.style.height = "0px", Ma.textArea.style.left = "-100px", Ma.textArea.style.opacity = "0", Ma.textArea.style.position = "fixed", Ma.textArea.style.top = "-100px", Ma.textArea.style.width = "0px", window.document.body.appendChild(Ma.textArea));
          Ma.textArea.value = a;
          Ma.textArea.focus();
          Ma.textArea.select();
          window.document.queryCommandEnabled("copy") && window.document.execCommand("copy")
        },
        setCursor: function(a) {
          if (this.cursor != a) {
            if (null == a) this.parent.element.style.cursor = "none";
            else {
              switch (a._hx_index) {
                case 0:
                  var b = "default";
                  break;
                case 1:
                  b = "crosshair";
                  break;
                case 3:
                  b = "move";
                  break;
                case 4:
                  b = "pointer";
                  break;
                case 5:
                  b = "nesw-resize";
                  break;
                case 6:
                  b = "ns-resize";
                  break;
                case 7:
                  b = "nwse-resize";
                  break;
                case 8:
                  b = "ew-resize";
                  break;
                case 9:
                  b = "text";
                  break;
                case 10:
                  b =
                    "wait";
                  break;
                case 11:
                  b = "wait";
                  break;
                default:
                  b = "auto"
              }
              this.parent.element.style.cursor = b
            }
            this.cursor = a
          }
          return this.cursor
        },
        setDisplayMode: function(a) {
          return a
        },
        setFrameRate: function(a) {
          null != this.parent.application && (60 <= a ? this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = -1) : 0 < a ? this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod = 1E3 / a) : this.parent == this.parent.application.__window && (this.parent.application.__backend.framePeriod =
            1E3));
          return a
        },
        setFullscreen: function(a) {
          a ? this.requestedFullscreen || this.isFullscreen || (this.requestedFullscreen = !0, (w = this.parent.element, r(w, w.requestFullscreen)) ? (document.addEventListener("fullscreenchange", r(this, this.handleFullscreenEvent), !1), document.addEventListener("fullscreenerror", r(this, this.handleFullscreenEvent), !1), this.parent.element.requestFullscreen()) : this.parent.element.mozRequestFullScreen ? (document.addEventListener("mozfullscreenchange", r(this, this.handleFullscreenEvent),
            !1), document.addEventListener("mozfullscreenerror", r(this, this.handleFullscreenEvent), !1), this.parent.element.mozRequestFullScreen()) : this.parent.element.webkitRequestFullscreen ? (document.addEventListener("webkitfullscreenchange", r(this, this.handleFullscreenEvent), !1), document.addEventListener("webkitfullscreenerror", r(this, this.handleFullscreenEvent), !1), this.parent.element.webkitRequestFullscreen()) : this.parent.element.msRequestFullscreen && (document.addEventListener("MSFullscreenChange", r(this,
            this.handleFullscreenEvent), !1), document.addEventListener("MSFullscreenError", r(this, this.handleFullscreenEvent), !1), this.parent.element.msRequestFullscreen())) : this.isFullscreen && (this.requestedFullscreen = !1, document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen());
          return a
        },
        setIcon: function(a) {
          va.convertToCanvas(a);
          var b = window.document.querySelector("link[rel*='icon']");
          null == b && (b = window.document.createElement("link"));
          b.type = "image/x-icon";
          b.rel = "shortcut icon";
          b.href = a.buffer.get_src().toDataURL("image/x-icon");
          window.document.getElementsByTagName("head")[0].appendChild(b)
        },
        setMaximized: function(a) {
          return !1
        },
        setMinimized: function(a) {
          return !1
        },
        setMouseLock: function(a) {},
        setResizable: function(a) {
          return a
        },
        setTextInputEnabled: function(a) {
          a ? (null == Ma.textInput && (Ma.textInput = window.document.createElement("input"), Ma.textInput.type = "text", Ma.textInput.style.position =
            "absolute", Ma.textInput.style.opacity = "0", Ma.textInput.style.color = "transparent", Ma.textInput.value = Ma.dummyCharacter, Ma.textInput.autocapitalize = "off", Ma.textInput.autocorrect = "off", Ma.textInput.autocomplete = "off", Ma.textInput.style.left = "0px", Ma.textInput.style.top = "50%", (new nb("(iPad|iPhone|iPod).*OS 8_", "gi")).match(window.navigator.userAgent) ? (Ma.textInput.style.fontSize = "0px", Ma.textInput.style.width = "0px", Ma.textInput.style.height = "0px") : (Ma.textInput.style.width = "1px", Ma.textInput.style.height =
              "1px"), Ma.textInput.style.pointerEvents = "none", Ma.textInput.style.zIndex = "-10000000"), null == Ma.textInput.parentNode && this.parent.element.appendChild(Ma.textInput), this.textInputEnabled || (Ma.textInput.addEventListener("input", r(this, this.handleInputEvent), !0), Ma.textInput.addEventListener("blur", r(this, this.handleFocusEvent), !0), Ma.textInput.addEventListener("cut", r(this, this.handleCutOrCopyEvent), !0), Ma.textInput.addEventListener("copy", r(this, this.handleCutOrCopyEvent), !0), Ma.textInput.addEventListener("paste",
            r(this, this.handlePasteEvent), !0), Ma.textInput.addEventListener("compositionstart", r(this, this.handleCompositionstartEvent), !0), Ma.textInput.addEventListener("compositionend", r(this, this.handleCompositionendEvent), !0)), Ma.textInput.focus(), Ma.textInput.select()) : null != Ma.textInput && (Ma.textInput.removeEventListener("input", r(this, this.handleInputEvent), !0), Ma.textInput.removeEventListener("blur", r(this, this.handleFocusEvent), !0), Ma.textInput.removeEventListener("cut", r(this, this.handleCutOrCopyEvent),
            !0), Ma.textInput.removeEventListener("copy", r(this, this.handleCutOrCopyEvent), !0), Ma.textInput.removeEventListener("paste", r(this, this.handlePasteEvent), !0), Ma.textInput.removeEventListener("compositionstart", r(this, this.handleCompositionstartEvent), !0), Ma.textInput.removeEventListener("compositionend", r(this, this.handleCompositionendEvent), !0), Ma.textInput.blur());
          return this.textInputEnabled = a
        },
        inputing: null,
        handleCompositionstartEvent: function(a) {
          this.inputing = !0
        },
        handleCompositionendEvent: function(a) {
          this.inputing = !1;
          this.handleInputEvent(a)
        },
        setTitle: function(a) {
          null != a && (window.document.title = a);
          return a
        },
        updateSize: function() {
          if (this.parent.__resizable) {
            if (null != this.parent.element) {
              var a = this.parent.element.clientWidth;
              var b = this.parent.element.clientHeight
            } else a = window.innerWidth, b = window.innerHeight;
            if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
              this.cacheElementWidth = a;
              this.cacheElementHeight = b;
              var c = this.resizeElement || 0 == this.setWidth && 0 == this.setHeight;
              if (null != this.parent.element && (null ==
                  this.div || null != this.div && c))
                if (c) {
                  if (this.parent.__width != a || this.parent.__height != b) this.parent.__width = a, this.parent.__height = b, null != this.canvas ? this.parent.element != this.canvas && (this.canvas.width = Math.round(a * this.scale), this.canvas.height = Math.round(b * this.scale), this.canvas.style.width = a + "px", this.canvas.style.height = b + "px") : (this.div.style.width = a + "px", this.div.style.height = b + "px"), this.parent.onResize.dispatch(a, b)
                } else {
                  c = 0 != this.setWidth ? a / this.setWidth : 1;
                  var d = 0 != this.setHeight ? b / this.setHeight :
                    1,
                    e = a,
                    f = b,
                    g = 0,
                    h = 0;
                  c < d ? (f = Math.floor(this.setHeight * c), h = Math.floor((b - f) / 2)) : (e = Math.floor(this.setWidth * d), g = Math.floor((a - e) / 2));
                  null != this.canvas ? this.parent.element != this.canvas && (this.canvas.style.width = e + "px", this.canvas.style.height = f + "px", this.canvas.style.marginLeft = g + "px", this.canvas.style.marginTop = h + "px") : (this.div.style.width = e + "px", this.div.style.height = f + "px", this.div.style.marginLeft = g + "px", this.div.style.marginTop = h + "px")
                }
            }
          }
        },
        warpMouse: function(a, b) {},
        __class__: Ma
      };
      var ur = function() {};
      k["lime._internal.backend.native.NativeCFFI"] = ur;
      ur.__name__ = "lime._internal.backend.native.NativeCFFI";
      var zq = function() {};
      k["lime._internal.format.BMP"] = zq;
      zq.__name__ = "lime._internal.format.BMP";
      zq.encode = function(a, b) {
        if (a.get_premultiplied() || 0 != a.get_format()) a = a.clone(), a.set_premultiplied(!1), a.set_format(0);
        null == b && (b = Xh.RGB);
        var c = 14,
          d = 40,
          e = a.width * a.height * 4;
        if (null != b) switch (b._hx_index) {
          case 0:
            e = (3 * a.width + 3 * a.width % 4) * a.height;
            break;
          case 1:
            d = 108;
            break;
          case 2:
            c = 0, e += a.width * a.height
        }
        var f =
          new ib(new ArrayBuffer(c + d + e)),
          g = 0;
        0 < c && (f.b[g++] = 66, f.b[g++] = 77, f.setInt32(g, f.length), g += 4, f.setUInt16(g, 0), g += 2, f.setUInt16(g, 0), g += 2, f.setInt32(g, c + d), g += 4);
        f.setInt32(g, d);
        g += 4;
        f.setInt32(g, a.width);
        g += 4;
        f.setInt32(g, b == Xh.ICO ? 2 * a.height : a.height);
        g += 4;
        f.setUInt16(g, 1);
        g += 2;
        f.setUInt16(g, b == Xh.RGB ? 24 : 32);
        g += 2;
        f.setInt32(g, b == Xh.BITFIELD ? 3 : 0);
        g += 4;
        f.setInt32(g, e);
        g += 4;
        f.setInt32(g, 11824);
        g += 4;
        f.setInt32(g, 11824);
        g += 4;
        f.setInt32(g, 0);
        g += 4;
        f.setInt32(g, 0);
        g += 4;
        if (b == Xh.BITFIELD)
          for (f.setInt32(g,
              16711680), g += 4, f.setInt32(g, 65280), g += 4, f.setInt32(g, 255), g += 4, f.setInt32(g, -16777216), g += 4, f.b[g++] = 32, f.b[g++] = 110, f.b[g++] = 105, f.b[g++] = 87, c = 0; 48 > c;) c++, f.b[g++] = 0;
        d = a.getPixels(new Td(0, 0, a.width, a.height), 1);
        if (null != b) switch (b._hx_index) {
          case 0:
            c = 0;
            for (b = a.height; c < b;) {
              var h = c++;
              h = 4 * (a.height - 1 - h) * a.width;
              for (var m = 0, l = a.width; m < l;) {
                m++;
                h++;
                var p = d.b[h++];
                var n = d.b[h++];
                var k = d.b[h++];
                f.b[g++] = k & 255;
                f.b[g++] = n & 255;
                f.b[g++] = p & 255
              }
              e = 0;
              for (var q = 3 * a.width % 4; e < q;) e++, f.b[g++] = 0
            }
            break;
          case 1:
            c = 0;
            for (b = a.height; c < b;)
              for (h = c++, h = 4 * (a.height - 1 - h) * a.width, m = 0, l = a.width; m < l;) {
                m++;
                var u = d.b[h++];
                p = d.b[h++];
                n = d.b[h++];
                k = d.b[h++];
                f.b[g++] = k & 255;
                f.b[g++] = n & 255;
                f.b[g++] = p & 255;
                f.b[g++] = u & 255
              }
            break;
          case 2:
            e = new ib(new ArrayBuffer(a.width * a.height));
            c = q = 0;
            for (b = a.height; c < b;)
              for (h = c++, h = 4 * (a.height - 1 - h) * a.width, m = 0, l = a.width; m < l;) m++, u = d.b[h++], p = d.b[h++], n = d.b[h++], k = d.b[h++], f.b[g++] = k & 255, f.b[g++] = n & 255, f.b[g++] = p & 255, f.b[g++] = u & 255, e.b[q++] = 0;
            f.blit(g, e, 0, a.width * a.height)
        }
        return f
      };
      var Xh = O["lime._internal.format.BMPType"] = {
        __ename__: "lime._internal.format.BMPType",
        __constructs__: null,
        RGB: {
          _hx_name: "RGB",
          _hx_index: 0,
          __enum__: "lime._internal.format.BMPType",
          toString: v
        },
        BITFIELD: {
          _hx_name: "BITFIELD",
          _hx_index: 1,
          __enum__: "lime._internal.format.BMPType",
          toString: v
        },
        ICO: {
          _hx_name: "ICO",
          _hx_index: 2,
          __enum__: "lime._internal.format.BMPType",
          toString: v
        }
      };
      Xh.__constructs__ = [Xh.RGB, Xh.BITFIELD, Xh.ICO];
      var Qf = function() {};
      k["lime._internal.format.Base64"] = Qf;
      Qf.__name__ = "lime._internal.format.Base64";
      Qf.decode = function(a) {
        return zh.decode(a)
      };
      Qf.encode = function(a) {
        var b = [],
          c = Qf.DICTIONARY,
          d = Qf.EXTENDED_DICTIONARY,
          e = a.length,
          f = Math.floor(e / 3),
          g = 2 * f;
        b.length = 2 * Math.ceil(e / 3);
        for (var h = 0, m = 0, l; m < g;) l = a.b[h] << 16 | a.b[h + 1] << 8 | a.b[h + 2], b[m] = d[l >> 12 & 4095], b[m + 1] = d[l & 4095], h += 3, m += 2;
        switch (e - 3 * f) {
          case 1:
            l = a.b[h] << 16;
            b[m] = d[l >> 12 & 4095];
            b[m + 1] = "==";
            break;
          case 2:
            l = a.b[h] << 16 | a.b[h + 1] << 8, b[m] = d[l >> 12 & 4095], b[m + 1] = c[l >> 6 & 63] + "="
        }
        return b.join("")
      };
      var mm = function() {};
      k["lime._internal.format.Deflate"] = mm;
      mm.__name__ = "lime._internal.format.Deflate";
      mm.compress = function(a) {
        a = pako.deflateRaw(a.b.bufferValue);
        return ib.ofData(a)
      };
      mm.decompress = function(a) {
        a = pako.inflateRaw(a.b.bufferValue);
        return ib.ofData(a)
      };
      var nm = function() {};
      k["lime._internal.format.GZip"] = nm;
      nm.__name__ = "lime._internal.format.GZip";
      nm.compress = function(a) {
        a = pako.gzip(a.b.bufferValue);
        return ib.ofData(a)
      };
      nm.decompress = function(a) {
        a = pako.ungzip(a.b.bufferValue);
        return ib.ofData(a)
      };
      var om = function() {};
      k["lime._internal.format.JPEG"] = om;
      om.__name__ = "lime._internal.format.JPEG";
      om.decodeBytes = function(a, b) {
        return null
      };
      om.decodeFile = function(a, b) {
        return null
      };
      om.encode = function(a, b) {
        if (a.get_premultiplied() || 0 != a.get_format()) a = a.clone(), a.set_premultiplied(!1), a.set_format(0);
        va.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL("image/jpeg", b / 100);
          a = window.atob(a.split(";base64,")[1]);
          b = new ib(new ArrayBuffer(a.length));
          for (var c = 0, d = a.length; c < d;) {
            var e = c++;
            b.b[e] = da.cca(a, e) & 255
          }
          return b
        }
        return null
      };
      var pm = function() {};
      k["lime._internal.format.LZMA"] =
        pm;
      pm.__name__ = "lime._internal.format.LZMA";
      pm.compress = function(a) {
        return null
      };
      pm.decompress = function(a) {
        return null
      };
      var Rj = function() {};
      k["lime._internal.format.PNG"] = Rj;
      Rj.__name__ = "lime._internal.format.PNG";
      Rj.decodeBytes = function(a, b) {
        return null
      };
      Rj.decodeFile = function(a, b) {
        return null
      };
      Rj.encode = function(a) {
        if (a.get_premultiplied() || 0 != a.get_format()) a = a.clone(), a.set_premultiplied(!1), a.set_format(0);
        va.convertToCanvas(a, !1);
        if (null != a.buffer.__srcCanvas) {
          a = a.buffer.__srcCanvas.toDataURL("image/png");
          a = window.atob(a.split(";base64,")[1]);
          for (var b = new ib(new ArrayBuffer(a.length)), c = 0, d = a.length; c < d;) {
            var e = c++;
            b.b[e] = da.cca(a, e) & 255
          }
          return b
        }
        return null
      };
      var qm = function() {};
      k["lime._internal.format.Zlib"] = qm;
      qm.__name__ = "lime._internal.format.Zlib";
      qm.compress = function(a) {
        a = pako.deflate(a.b.bufferValue);
        return ib.ofData(a)
      };
      qm.decompress = function(a) {
        a = pako.inflate(a.b.bufferValue);
        return ib.ofData(a)
      };
      var va = function() {};
      k["lime._internal.graphics.ImageCanvasUtil"] = va;
      va.__name__ = "lime._internal.graphics.ImageCanvasUtil";
      va.colorTransform = function(a, b, c) {
        va.convertToData(a);
        Sa.colorTransform(a, b, c)
      };
      va.convertToCanvas = function(a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage ? (null == c.__srcCanvas && (va.createCanvas(a, c.__srcImage.width, c.__srcImage.height), c.__srcContext.drawImage(c.__srcImage, 0, 0)), c.__srcImage = null) : null == c.__srcCanvas && null != c.data ? (a.set_transparent(!0), va.createCanvas(a, c.width, c.height), va.createImageData(a), c.__srcContext.putImageData(c.__srcImageData, 0, 0)) : a.type == ye.DATA && null != c.__srcImageData &&
          a.dirty && (c.__srcContext.putImageData(c.__srcImageData, 0, 0), a.dirty = !1);
        b ? (c.data = null, c.__srcImageData = null) : null == c.data && null != c.__srcImageData && (c.data = c.__srcImageData.data);
        a.type = ye.CANVAS
      };
      va.convertToData = function(a, b) {
        null == b && (b = !1);
        var c = a.buffer;
        null != c.__srcImage && va.convertToCanvas(a);
        if (null != c.__srcCanvas && null == c.data) va.createImageData(a), a.type == ye.CANVAS && (a.dirty = !1);
        else if (a.type == ye.CANVAS && null != c.__srcCanvas && a.dirty) {
          if (null == c.__srcImageData) va.createImageData(a);
          else {
            c.__srcImageData =
              c.__srcContext.getImageData(0, 0, c.width, c.height);
            var d = c.__srcImageData.data.buffer;
            d = null != d ? new Uint8Array(d) : null;
            c.data = d
          }
          a.dirty = !1
        }
        b && (a.buffer.__srcCanvas = null, a.buffer.__srcContext = null);
        a.type = ye.DATA
      };
      va.copyChannel = function(a, b, c, d, e, f) {
        va.convertToData(b);
        va.convertToData(a);
        Sa.copyChannel(a, b, c, d, e, f)
      };
      va.copyPixels = function(a, b, c, d, e, f, g) {
        null == g && (g = !1);
        null == d || d.x >= a.width || d.y >= a.height || null == c || 1 > c.width || 1 > c.height || (null != e && e.get_transparent() && (null == f && (f = new be), b = b.clone(),
          b.copyChannel(e, new Td(c.x + f.x, c.y + f.y, c.width, c.height), new be(c.x, c.y), of.ALPHA, of.ALPHA)), va.convertToCanvas(a, !0), g || a.get_transparent() && b.get_transparent() && a.buffer.__srcContext.clearRect(d.x + a.offsetX, d.y + a.offsetY, c.width + a.offsetX, c.height + a.offsetY), va.convertToCanvas(b), null != b.buffer.get_src() && (a.buffer.__srcContext.globalCompositeOperation = "source-over", a.buffer.__srcContext.drawImage(b.buffer.get_src(), c.x + b.offsetX | 0, c.y + b.offsetY | 0, c.width | 0, c.height | 0, d.x + a.offsetX | 0, d.y + a.offsetY |
          0, c.width | 0, c.height | 0)), a.dirty = !0, a.version++)
      };
      va.createCanvas = function(a, b, c) {
        var d = a.buffer;
        null == d.__srcCanvas && (d.__srcCanvas = window.document.createElement("canvas"), d.__srcCanvas.width = b, d.__srcCanvas.height = c, a.get_transparent() ? d.__srcContext = d.__srcCanvas.getContext("2d") : (a.get_transparent() || d.__srcCanvas.setAttribute("moz-opaque", "true"), d.__srcContext = d.__srcCanvas.getContext("2d", {
          alpha: !1
        })))
      };
      va.createImageData = function(a) {
        a = a.buffer;
        if (null == a.__srcImageData) {
          null == a.data ? a.__srcImageData =
            a.__srcContext.getImageData(0, 0, a.width, a.height) : (a.__srcImageData = a.__srcContext.createImageData(a.width, a.height), a.__srcImageData.data.set(a.data));
          var b = a.__srcImageData.data.buffer;
          b = null != b ? new Uint8Array(b) : null;
          a.data = b
        }
      };
      va.fillRect = function(a, b, c, d) {
        va.convertToCanvas(a);
        if (1 == d) {
          d = c >> 16 & 255;
          var e = c >> 8 & 255;
          var f = c & 255;
          c = a.get_transparent() ? c >> 24 & 255 : 255
        } else d = c >> 24 & 255, e = c >> 16 & 255, f = c >> 8 & 255, c = a.get_transparent() ? c & 255 : 255;
        0 == b.x && 0 == b.y && b.width == a.width && b.height == a.height && a.get_transparent() &&
          0 == c ? a.buffer.__srcCanvas.width = a.buffer.width : (255 > c && a.buffer.__srcContext.clearRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY), 0 < c && (a.buffer.__srcContext.fillStyle = "rgba(" + d + ", " + e + ", " + f + ", " + c / 255 + ")", a.buffer.__srcContext.fillRect(b.x + a.offsetX, b.y + a.offsetY, b.width + a.offsetX, b.height + a.offsetY)), a.dirty = !0, a.version++)
      };
      va.floodFill = function(a, b, c, d, e) {
        va.convertToData(a);
        Sa.floodFill(a, b, c, d, e)
      };
      va.getPixel = function(a, b, c, d) {
        va.convertToData(a);
        return Sa.getPixel(a,
          b, c, d)
      };
      va.getPixel32 = function(a, b, c, d) {
        va.convertToData(a);
        return Sa.getPixel32(a, b, c, d)
      };
      va.getPixels = function(a, b, c) {
        va.convertToData(a);
        return Sa.getPixels(a, b, c)
      };
      va.merge = function(a, b, c, d, e, f, g, h) {
        va.convertToData(b);
        va.convertToData(a);
        Sa.merge(a, b, c, d, e, f, g, h)
      };
      va.resize = function(a, b, c) {
        var d = a.buffer;
        if (null == d.__srcCanvas) va.createCanvas(a, b, c), d.__srcContext.drawImage(d.get_src(), 0, 0, b, c);
        else {
          va.convertToCanvas(a, !0);
          var e = d.__srcCanvas;
          d.__srcCanvas = null;
          va.createCanvas(a, b, c);
          d.__srcContext.drawImage(e,
            0, 0, b, c)
        }
        d.__srcImageData = null;
        d.data = null;
        a.dirty = !0;
        a.version++
      };
      va.scroll = function(a, b, c) {
        if (0 != b % a.width || 0 != c % a.height) {
          var d = a.clone();
          va.convertToCanvas(a, !0);
          a.buffer.__srcContext.clearRect(b, c, a.width, a.height);
          a.buffer.__srcContext.drawImage(d.get_src(), b, c);
          a.dirty = !0;
          a.version++
        }
      };
      va.setPixel = function(a, b, c, d, e) {
        va.convertToData(a);
        Sa.setPixel(a, b, c, d, e)
      };
      va.setPixel32 = function(a, b, c, d, e) {
        va.convertToData(a);
        Sa.setPixel32(a, b, c, d, e)
      };
      va.setPixels = function(a, b, c, d, e) {
        va.convertToData(a);
        Sa.setPixels(a, b, c, d, e)
      };
      va.sync = function(a, b) {
        null != a && (a.type != ye.CANVAS || null == a.buffer.__srcCanvas && null == a.buffer.data ? a.type == ye.DATA && va.convertToData(a, b) : va.convertToCanvas(a, b))
      };
      var Sa = function() {};
      k["lime._internal.graphics.ImageDataUtil"] = Sa;
      Sa.__name__ = "lime._internal.graphics.ImageDataUtil";
      Sa.displaceMap = function(a, b, c, d, e, f, g) {
        var h = a.buffer.data,
          m = b.buffer.data,
          l = c.buffer.data,
          p = a.buffer.format,
          n = b.buffer.format,
          k = c.buffer.format,
          q = a.get_premultiplied(),
          u = b.get_premultiplied(),
          v =
          c.get_premultiplied();
        b = new Me(b);
        c = new Me(c);
        for (var r, T, ja = 0, t = 0, Q, z, w, O = 0, A = 0, aa = 0, B = 0, D, F = 0, H = b.height; F < H;) {
          var x = F++;
          r = b.byteOffset + b.stride * x;
          for (var E = 0, K = b.width; E < K;) {
            var C = E++;
            T = r + 4 * C;
            w = d.x | 0;
            Q = d.y | 0;
            if (g) {
              t = b.byteOffset + b.stride * (x - Q + 1) + 4 * (C - w);
              z = k;
              D = v;
              null == D && (D = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  O = (l[t] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t + 2] & 255) << 8 | l[t + 3] & 255;
                  break;
                case 1:
                  O = (l[t + 1] & 255) << 24 | (l[t + 2] & 255) << 16 | (l[t + 3] & 255) << 8 | l[t] & 255;
                  break;
                case 2:
                  O = (l[t + 2] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t] &
                    255) << 8 | l[t + 3] & 255
              }
              D && 0 != (O & 255) && 255 != (O & 255) && (G.unmult = 255 / (O & 255), O = (G.__clamp[Math.round((O >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((O >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((O >>> 8 & 255) * G.unmult)] & 255) << 8 | O & 255);
              t = b.byteOffset + b.stride * (x - Q) + 4 * (C - w + 1);
              z = k;
              D = v;
              null == D && (D = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  A = (l[t] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t + 2] & 255) << 8 | l[t + 3] & 255;
                  break;
                case 1:
                  A = (l[t + 1] & 255) << 24 | (l[t + 2] & 255) << 16 | (l[t + 3] & 255) << 8 | l[t] & 255;
                  break;
                case 2:
                  A = (l[t + 2] & 255) <<
                    24 | (l[t + 1] & 255) << 16 | (l[t] & 255) << 8 | l[t + 3] & 255
              }
              D && 0 != (A & 255) && 255 != (A & 255) && (G.unmult = 255 / (A & 255), A = (G.__clamp[Math.round((A >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((A >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((A >>> 8 & 255) * G.unmult)] & 255) << 8 | A & 255);
              t = b.byteOffset + b.stride * (x - Q + 1) + 4 * (C - w + 1);
              z = k;
              D = v;
              null == D && (D = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  aa = (l[t] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t + 2] & 255) << 8 | l[t + 3] & 255;
                  break;
                case 1:
                  aa = (l[t + 1] & 255) << 24 | (l[t + 2] & 255) << 16 | (l[t + 3] & 255) << 8 | l[t] & 255;
                  break;
                case 2:
                  aa = (l[t + 2] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t] & 255) << 8 | l[t + 3] & 255
              }
              D && 0 != (aa & 255) && 255 != (aa & 255) && (G.unmult = 255 / (aa & 255), aa = (G.__clamp[Math.round((aa >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((aa >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((aa >>> 8 & 255) * G.unmult)] & 255) << 8 | aa & 255);
              t = b.byteOffset + b.stride * (x - Q) + 4 * (C - w);
              z = k;
              D = v;
              null == D && (D = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  B = (l[t] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t + 2] & 255) << 8 | l[t + 3] & 255;
                  break;
                case 1:
                  B = (l[t + 1] & 255) << 24 | (l[t + 2] &
                    255) << 16 | (l[t + 3] & 255) << 8 | l[t] & 255;
                  break;
                case 2:
                  B = (l[t + 2] & 255) << 24 | (l[t + 1] & 255) << 16 | (l[t] & 255) << 8 | l[t + 3] & 255
              }
              D && 0 != (B & 255) && 255 != (B & 255) && (G.unmult = 255 / (B & 255), B = (G.__clamp[Math.round((B >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((B >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((B >>> 8 & 255) * G.unmult)] & 255) << 8 | B & 255);
              t = Sa.bilinear(O, A, aa, B, d.x - w, d.y - Q)
            } else {
              w = c.byteOffset + c.stride * (x - Q) + 4 * (C - w);
              Q = k;
              z = v;
              null == z && (z = !1);
              null == Q && (Q = 0);
              switch (Q) {
                case 0:
                  t = (l[w] & 255) << 24 | (l[w + 1] & 255) << 16 | (l[w +
                    2] & 255) << 8 | l[w + 3] & 255;
                  break;
                case 1:
                  t = (l[w + 1] & 255) << 24 | (l[w + 2] & 255) << 16 | (l[w + 3] & 255) << 8 | l[w] & 255;
                  break;
                case 2:
                  t = (l[w + 2] & 255) << 24 | (l[w + 1] & 255) << 16 | (l[w] & 255) << 8 | l[w + 3] & 255
              }
              z && 0 != (t & 255) && 255 != (t & 255) && (G.unmult = 255 / (t & 255), t = (G.__clamp[Math.round((t >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((t >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((t >>> 8 & 255) * G.unmult)] & 255) << 8 | t & 255)
            }
            w = (t & 255) / 255;
            Q = ((t >>> 24 & 255) - 128) / 255 * w;
            z = ((t >>> 16 & 255) - 128) / 255 * w;
            w = Q * e.x + z * f.x;
            D = Q * e.y + z * f.y;
            Q = Math.floor(w *
              b.width);
            z = Math.floor(D * b.height);
            if (g) {
              ja = b.byteOffset + b.stride * (x + z + 1) + 4 * (C + Q);
              var N = n,
                W = u;
              null == W && (W = !1);
              null == N && (N = 0);
              switch (N) {
                case 0:
                  O = (m[ja] & 255) << 24 | (m[ja + 1] & 255) << 16 | (m[ja + 2] & 255) << 8 | m[ja + 3] & 255;
                  break;
                case 1:
                  O = (m[ja + 1] & 255) << 24 | (m[ja + 2] & 255) << 16 | (m[ja + 3] & 255) << 8 | m[ja] & 255;
                  break;
                case 2:
                  O = (m[ja + 2] & 255) << 24 | (m[ja + 1] & 255) << 16 | (m[ja] & 255) << 8 | m[ja + 3] & 255
              }
              W && 0 != (O & 255) && 255 != (O & 255) && (G.unmult = 255 / (O & 255), O = (G.__clamp[Math.round((O >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((O >>> 16 & 255) *
                G.unmult)] & 255) << 16 | (G.__clamp[Math.round((O >>> 8 & 255) * G.unmult)] & 255) << 8 | O & 255);
              ja = b.byteOffset + b.stride * (x + z) + 4 * (C + Q + 1);
              N = n;
              W = u;
              null == W && (W = !1);
              null == N && (N = 0);
              switch (N) {
                case 0:
                  A = (m[ja] & 255) << 24 | (m[ja + 1] & 255) << 16 | (m[ja + 2] & 255) << 8 | m[ja + 3] & 255;
                  break;
                case 1:
                  A = (m[ja + 1] & 255) << 24 | (m[ja + 2] & 255) << 16 | (m[ja + 3] & 255) << 8 | m[ja] & 255;
                  break;
                case 2:
                  A = (m[ja + 2] & 255) << 24 | (m[ja + 1] & 255) << 16 | (m[ja] & 255) << 8 | m[ja + 3] & 255
              }
              W && 0 != (A & 255) && 255 != (A & 255) && (G.unmult = 255 / (A & 255), A = (G.__clamp[Math.round((A >>> 24 & 255) * G.unmult)] & 255) <<
                24 | (G.__clamp[Math.round((A >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((A >>> 8 & 255) * G.unmult)] & 255) << 8 | A & 255);
              ja = b.byteOffset + b.stride * (x + z + 1) + 4 * (C + Q + 1);
              N = n;
              W = u;
              null == W && (W = !1);
              null == N && (N = 0);
              switch (N) {
                case 0:
                  aa = (m[ja] & 255) << 24 | (m[ja + 1] & 255) << 16 | (m[ja + 2] & 255) << 8 | m[ja + 3] & 255;
                  break;
                case 1:
                  aa = (m[ja + 1] & 255) << 24 | (m[ja + 2] & 255) << 16 | (m[ja + 3] & 255) << 8 | m[ja] & 255;
                  break;
                case 2:
                  aa = (m[ja + 2] & 255) << 24 | (m[ja + 1] & 255) << 16 | (m[ja] & 255) << 8 | m[ja + 3] & 255
              }
              W && 0 != (aa & 255) && 255 != (aa & 255) && (G.unmult = 255 / (aa & 255), aa = (G.__clamp[Math.round((aa >>>
                24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((aa >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((aa >>> 8 & 255) * G.unmult)] & 255) << 8 | aa & 255);
              C = b.byteOffset + b.stride * (x + z) + 4 * (C + Q);
              ja = n;
              N = u;
              null == N && (N = !1);
              null == ja && (ja = 0);
              switch (ja) {
                case 0:
                  B = (m[C] & 255) << 24 | (m[C + 1] & 255) << 16 | (m[C + 2] & 255) << 8 | m[C + 3] & 255;
                  break;
                case 1:
                  B = (m[C + 1] & 255) << 24 | (m[C + 2] & 255) << 16 | (m[C + 3] & 255) << 8 | m[C] & 255;
                  break;
                case 2:
                  B = (m[C + 2] & 255) << 24 | (m[C + 1] & 255) << 16 | (m[C] & 255) << 8 | m[C + 3] & 255
              }
              N && 0 != (B & 255) && 255 != (B & 255) && (G.unmult = 255 / (B & 255),
                B = (G.__clamp[Math.round((B >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((B >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((B >>> 8 & 255) * G.unmult)] & 255) << 8 | B & 255);
              ja = Sa.bilinear(O, A, aa, B, w * b.width - Q, D * b.height - z)
            } else {
              C = b.byteOffset + b.stride * (x + z) + 4 * (C + Q);
              w = n;
              Q = u;
              null == Q && (Q = !1);
              null == w && (w = 0);
              switch (w) {
                case 0:
                  ja = (m[C] & 255) << 24 | (m[C + 1] & 255) << 16 | (m[C + 2] & 255) << 8 | m[C + 3] & 255;
                  break;
                case 1:
                  ja = (m[C + 1] & 255) << 24 | (m[C + 2] & 255) << 16 | (m[C + 3] & 255) << 8 | m[C] & 255;
                  break;
                case 2:
                  ja = (m[C + 2] & 255) << 24 | (m[C + 1] & 255) <<
                    16 | (m[C] & 255) << 8 | m[C + 3] & 255
              }
              Q && 0 != (ja & 255) && 255 != (ja & 255) && (G.unmult = 255 / (ja & 255), ja = (G.__clamp[Math.round((ja >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((ja >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((ja >>> 8 & 255) * G.unmult)] & 255) << 8 | ja & 255)
            }
            C = p;
            w = q;
            null == w && (w = !1);
            null == C && (C = 0);
            w && (0 == (ja & 255) ? 0 != ja && (ja = 0) : 255 != (ja & 255) && (G.a16 = G.__alpha16[ja & 255], ja = ((ja >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((ja >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((ja >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | ja & 255));
            switch (C) {
              case 0:
                h[T] =
                  ja >>> 24 & 255;
                h[T + 1] = ja >>> 16 & 255;
                h[T + 2] = ja >>> 8 & 255;
                h[T + 3] = ja & 255;
                break;
              case 1:
                h[T] = ja & 255;
                h[T + 1] = ja >>> 24 & 255;
                h[T + 2] = ja >>> 16 & 255;
                h[T + 3] = ja >>> 8 & 255;
                break;
              case 2:
                h[T] = ja >>> 8 & 255, h[T + 1] = ja >>> 16 & 255, h[T + 2] = ja >>> 24 & 255, h[T + 3] = ja & 255
            }
          }
        }
        a.dirty = !0;
        a.version++
      };
      Sa.bilinear = function(a, b, c, d, e, f) {
        return Sa.lerpRGBA(Sa.lerpRGBA(d, b, e), Sa.lerpRGBA(a, c, e), f)
      };
      Sa.lerpRGBA = function(a, b, c) {
        var d = 0,
          e = Math.floor(Sa.lerp(a >>> 24 & 255, b >>> 24 & 255, c));
        d = (e & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | d & 255;
        e = Math.floor(Sa.lerp(a >>>
          16 & 255, b >>> 16 & 255, c));
        d = (d >>> 24 & 255) << 24 | (e & 255) << 16 | (d >>> 8 & 255) << 8 | d & 255;
        e = Math.floor(Sa.lerp(a >>> 8 & 255, b >>> 8 & 255, c));
        d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (e & 255) << 8 | d & 255;
        e = Math.floor(Sa.lerp(a & 255, b & 255, c));
        return (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | e & 255
      };
      Sa.lerp4f = function(a, b, c) {
        return new Ic(Sa.lerp(a.x, b.x, c), Sa.lerp(a.y, b.y, c), Sa.lerp(a.z, b.z, c), Sa.lerp(a.w, b.w, c))
      };
      Sa.lerp = function(a, b, c) {
        return (1 - c) * a + c * b
      };
      Sa.colorTransform = function(a, b, c) {
        var d = a.buffer.data;
        if (null != d) {
          var e =
            a.buffer.format,
            f = a.buffer.premultiplied;
          b = new Me(a, b);
          var g = Od.getAlphaTable(c),
            h = Od.getRedTable(c),
            m = Od.getGreenTable(c);
          c = Od.getBlueTable(c);
          for (var l, p, n = 0, k = 0, q = b.height; k < q;) {
            l = k++;
            l = b.byteOffset + b.stride * l;
            for (var u = 0, v = b.width; u < v;) {
              p = u++;
              p = l + 4 * p;
              var t = e,
                T = f;
              null == T && (T = !1);
              null == t && (t = 0);
              switch (t) {
                case 0:
                  n = (d[p] & 255) << 24 | (d[p + 1] & 255) << 16 | (d[p + 2] & 255) << 8 | d[p + 3] & 255;
                  break;
                case 1:
                  n = (d[p + 1] & 255) << 24 | (d[p + 2] & 255) << 16 | (d[p + 3] & 255) << 8 | d[p] & 255;
                  break;
                case 2:
                  n = (d[p + 2] & 255) << 24 | (d[p + 1] & 255) << 16 | (d[p] &
                    255) << 8 | d[p + 3] & 255
              }
              T && 0 != (n & 255) && 255 != (n & 255) && (G.unmult = 255 / (n & 255), n = (G.__clamp[Math.round((n >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((n >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((n >>> 8 & 255) * G.unmult)] & 255) << 8 | n & 255);
              n = (h[n >>> 24 & 255] & 255) << 24 | (m[n >>> 16 & 255] & 255) << 16 | (c[n >>> 8 & 255] & 255) << 8 | g[n & 255] & 255;
              t = e;
              T = f;
              null == T && (T = !1);
              null == t && (t = 0);
              T && (0 == (n & 255) ? 0 != n && (n = 0) : 255 != (n & 255) && (G.a16 = G.__alpha16[n & 255], n = ((n >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((n >>> 16 & 255) * G.a16 >> 16 & 255) << 16 |
                ((n >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | n & 255));
              switch (t) {
                case 0:
                  d[p] = n >>> 24 & 255;
                  d[p + 1] = n >>> 16 & 255;
                  d[p + 2] = n >>> 8 & 255;
                  d[p + 3] = n & 255;
                  break;
                case 1:
                  d[p] = n & 255;
                  d[p + 1] = n >>> 24 & 255;
                  d[p + 2] = n >>> 16 & 255;
                  d[p + 3] = n >>> 8 & 255;
                  break;
                case 2:
                  d[p] = n >>> 8 & 255, d[p + 1] = n >>> 16 & 255, d[p + 2] = n >>> 24 & 255, d[p + 3] = n & 255
              }
            }
          }
          a.dirty = !0;
          a.version++
        }
      };
      Sa.copyChannel = function(a, b, c, d, e, f) {
        switch (f._hx_index) {
          case 0:
            var g = 0;
            break;
          case 1:
            g = 1;
            break;
          case 2:
            g = 2;
            break;
          case 3:
            g = 3
        }
        switch (e._hx_index) {
          case 0:
            var h = 0;
            break;
          case 1:
            h = 1;
            break;
          case 2:
            h = 2;
            break;
          case 3:
            h =
              3
        }
        e = b.buffer.data;
        f = a.buffer.data;
        if (null != e && null != f) {
          c = new Me(b, c);
          d = new Me(a, new Td(d.x, d.y, c.width, c.height));
          var m = b.buffer.format,
            l = a.buffer.format;
          b = b.buffer.premultiplied;
          for (var p = a.buffer.premultiplied, n, k, q = 0, u = 0, v = 0, t = 0, T = d.height; t < T;) {
            k = t++;
            n = c.byteOffset + c.stride * k;
            k = d.byteOffset + d.stride * k;
            for (var r = 0, Q = d.width; r < Q;) {
              r++;
              var z = m,
                w = b;
              null == w && (w = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  q = (e[n] & 255) << 24 | (e[n + 1] & 255) << 16 | (e[n + 2] & 255) << 8 | e[n + 3] & 255;
                  break;
                case 1:
                  q = (e[n + 1] & 255) << 24 | (e[n + 2] & 255) <<
                    16 | (e[n + 3] & 255) << 8 | e[n] & 255;
                  break;
                case 2:
                  q = (e[n + 2] & 255) << 24 | (e[n + 1] & 255) << 16 | (e[n] & 255) << 8 | e[n + 3] & 255
              }
              w && 0 != (q & 255) && 255 != (q & 255) && (G.unmult = 255 / (q & 255), q = (G.__clamp[Math.round((q >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((q >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((q >>> 8 & 255) * G.unmult)] & 255) << 8 | q & 255);
              z = l;
              w = p;
              null == w && (w = !1);
              null == z && (z = 0);
              switch (z) {
                case 0:
                  u = (f[k] & 255) << 24 | (f[k + 1] & 255) << 16 | (f[k + 2] & 255) << 8 | f[k + 3] & 255;
                  break;
                case 1:
                  u = (f[k + 1] & 255) << 24 | (f[k + 2] & 255) << 16 | (f[k + 3] & 255) <<
                    8 | f[k] & 255;
                  break;
                case 2:
                  u = (f[k + 2] & 255) << 24 | (f[k + 1] & 255) << 16 | (f[k] & 255) << 8 | f[k + 3] & 255
              }
              w && 0 != (u & 255) && 255 != (u & 255) && (G.unmult = 255 / (u & 255), u = (G.__clamp[Math.round((u >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((u >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((u >>> 8 & 255) * G.unmult)] & 255) << 8 | u & 255);
              switch (h) {
                case 0:
                  v = q >>> 24 & 255;
                  break;
                case 1:
                  v = q >>> 16 & 255;
                  break;
                case 2:
                  v = q >>> 8 & 255;
                  break;
                case 3:
                  v = q & 255
              }
              switch (g) {
                case 0:
                  u = (v & 255) << 24 | (u >>> 16 & 255) << 16 | (u >>> 8 & 255) << 8 | u & 255;
                  break;
                case 1:
                  u = (u >>> 24 &
                    255) << 24 | (v & 255) << 16 | (u >>> 8 & 255) << 8 | u & 255;
                  break;
                case 2:
                  u = (u >>> 24 & 255) << 24 | (u >>> 16 & 255) << 16 | (v & 255) << 8 | u & 255;
                  break;
                case 3:
                  u = (u >>> 24 & 255) << 24 | (u >>> 16 & 255) << 16 | (u >>> 8 & 255) << 8 | v & 255
              }
              z = l;
              w = p;
              null == w && (w = !1);
              null == z && (z = 0);
              w && (0 == (u & 255) ? 0 != u && (u = 0) : 255 != (u & 255) && (G.a16 = G.__alpha16[u & 255], u = ((u >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((u >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((u >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | u & 255));
              switch (z) {
                case 0:
                  f[k] = u >>> 24 & 255;
                  f[k + 1] = u >>> 16 & 255;
                  f[k + 2] = u >>> 8 & 255;
                  f[k + 3] = u & 255;
                  break;
                case 1:
                  f[k] = u & 255;
                  f[k + 1] =
                    u >>> 24 & 255;
                  f[k + 2] = u >>> 16 & 255;
                  f[k + 3] = u >>> 8 & 255;
                  break;
                case 2:
                  f[k] = u >>> 8 & 255, f[k + 1] = u >>> 16 & 255, f[k + 2] = u >>> 24 & 255, f[k + 3] = u & 255
              }
              n += 4;
              k += 4
            }
          }
          a.dirty = !0;
          a.version++
        }
      };
      Sa.copyPixels = function(a, b, c, d, e, f, g) {
        null == g && (g = !1);
        if (a.width == b.width && a.height == b.height && c.width == b.width && c.height == b.height && 0 == c.x && 0 == c.y && 0 == d.x && 0 == d.y && null == e && null == f && 0 == g && a.get_format() == b.get_format()) a.buffer.data.set(b.buffer.data);
        else {
          var h = b.buffer.data,
            m = a.buffer.data;
          if (null == h || null == m) return;
          c = new Me(b, c);
          var l = new Td(d.x,
            d.y, c.width, c.height);
          l = new Me(a, l);
          var p = b.buffer.format,
            n = a.buffer.format,
            k = 0,
            q = 0,
            u = b.buffer.premultiplied,
            v = a.buffer.premultiplied,
            t = b.buffer.bitsPerPixel / 8 | 0,
            T = a.buffer.bitsPerPixel / 8 | 0,
            r = null != e && e.get_transparent(),
            Q = g || r && !a.get_transparent() || !g && !a.get_transparent() && b.get_transparent();
          if (r)
            if (T = e.buffer.data, b = e.buffer.format, g = 0, e = new Me(e, new Td(c.x + (null == f ? 0 : f.x), c.y + (null == f ? 0 : f.y), c.width, c.height)), l.clip(d.x | 0, d.y | 0, e.width, e.height), Q)
              for (Q = 0, t = l.height; Q < t;)
                for (r = Q++, d = c.byteOffset +
                  c.stride * r, f = l.byteOffset + l.stride * r, r = e.byteOffset + e.stride * r, aa = 0, B = l.width; aa < B;) {
                  aa++;
                  var z = p;
                  var w = u;
                  null == w && (w = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      k = (h[d] & 255) << 24 | (h[d + 1] & 255) << 16 | (h[d + 2] & 255) << 8 | h[d + 3] & 255;
                      break;
                    case 1:
                      k = (h[d + 1] & 255) << 24 | (h[d + 2] & 255) << 16 | (h[d + 3] & 255) << 8 | h[d] & 255;
                      break;
                    case 2:
                      k = (h[d + 2] & 255) << 24 | (h[d + 1] & 255) << 16 | (h[d] & 255) << 8 | h[d + 3] & 255
                  }
                  w && 0 != (k & 255) && 255 != (k & 255) && (G.unmult = 255 / (k & 255), k = (G.__clamp[Math.round((k >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((k >>> 16 &
                    255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((k >>> 8 & 255) * G.unmult)] & 255) << 8 | k & 255);
                  z = n;
                  w = v;
                  null == w && (w = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      q = (m[f] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f + 2] & 255) << 8 | m[f + 3] & 255;
                      break;
                    case 1:
                      q = (m[f + 1] & 255) << 24 | (m[f + 2] & 255) << 16 | (m[f + 3] & 255) << 8 | m[f] & 255;
                      break;
                    case 2:
                      q = (m[f + 2] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f] & 255) << 8 | m[f + 3] & 255
                  }
                  w && 0 != (q & 255) && 255 != (q & 255) && (G.unmult = 255 / (q & 255), q = (G.__clamp[Math.round((q >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((q >>> 16 & 255) * G.unmult)] &
                    255) << 16 | (G.__clamp[Math.round((q >>> 8 & 255) * G.unmult)] & 255) << 8 | q & 255);
                  z = b;
                  w = !1;
                  null == w && (w = !1);
                  null == z && (z = 0);
                  switch (z) {
                    case 0:
                      g = (T[r] & 255) << 24 | (T[r + 1] & 255) << 16 | (T[r + 2] & 255) << 8 | T[r + 3] & 255;
                      break;
                    case 1:
                      g = (T[r + 1] & 255) << 24 | (T[r + 2] & 255) << 16 | (T[r + 3] & 255) << 8 | T[r] & 255;
                      break;
                    case 2:
                      g = (T[r + 2] & 255) << 24 | (T[r + 1] & 255) << 16 | (T[r] & 255) << 8 | T[r + 3] & 255
                  }
                  w && 0 != (g & 255) && 255 != (g & 255) && (G.unmult = 255 / (g & 255), g = (G.__clamp[Math.round((g >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((g >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((g >>>
                    8 & 255) * G.unmult)] & 255) << 8 | g & 255);
                  w = (g & 255) / 255 * ((k & 255) / 255);
                  if (0 < w) {
                    var O = (q & 255) / 255;
                    var A = 1 - w;
                    z = w + O * A;
                    D = G.__clamp[Math.round(((k >>> 24 & 255) * w + (q >>> 24 & 255) * O * A) / z)];
                    q = (D & 255) << 24 | (q >>> 16 & 255) << 16 | (q >>> 8 & 255) << 8 | q & 255;
                    D = G.__clamp[Math.round(((k >>> 16 & 255) * w + (q >>> 16 & 255) * O * A) / z)];
                    q = (q >>> 24 & 255) << 24 | (D & 255) << 16 | (q >>> 8 & 255) << 8 | q & 255;
                    w = G.__clamp[Math.round(((k >>> 8 & 255) * w + (q >>> 8 & 255) * O * A) / z)];
                    q = (q >>> 24 & 255) << 24 | (q >>> 16 & 255) << 16 | (w & 255) << 8 | q & 255;
                    z = G.__clamp[Math.round(255 * z)];
                    q = (q >>> 24 & 255) << 24 | (q >>> 16 &
                      255) << 16 | (q >>> 8 & 255) << 8 | z & 255;
                    z = n;
                    w = v;
                    null == w && (w = !1);
                    null == z && (z = 0);
                    w && (0 == (q & 255) ? 0 != q && (q = 0) : 255 != (q & 255) && (G.a16 = G.__alpha16[q & 255], q = ((q >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((q >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((q >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | q & 255));
                    switch (z) {
                      case 0:
                        m[f] = q >>> 24 & 255;
                        m[f + 1] = q >>> 16 & 255;
                        m[f + 2] = q >>> 8 & 255;
                        m[f + 3] = q & 255;
                        break;
                      case 1:
                        m[f] = q & 255;
                        m[f + 1] = q >>> 24 & 255;
                        m[f + 2] = q >>> 16 & 255;
                        m[f + 3] = q >>> 8 & 255;
                        break;
                      case 2:
                        m[f] = q >>> 8 & 255, m[f + 1] = q >>> 16 & 255, m[f + 2] = q >>> 24 & 255, m[f + 3] = q & 255
                    }
                  }
                  d += 4;
                  f += 4;
                  r += 4
                } else
                  for (Q =
                    0, t = l.height; Q < t;)
                    for (r = Q++, d = c.byteOffset + c.stride * r, f = l.byteOffset + l.stride * r, r = e.byteOffset + e.stride * r, aa = 0, B = l.width; aa < B;) {
                      aa++;
                      z = p;
                      w = u;
                      null == w && (w = !1);
                      null == z && (z = 0);
                      switch (z) {
                        case 0:
                          k = (h[d] & 255) << 24 | (h[d + 1] & 255) << 16 | (h[d + 2] & 255) << 8 | h[d + 3] & 255;
                          break;
                        case 1:
                          k = (h[d + 1] & 255) << 24 | (h[d + 2] & 255) << 16 | (h[d + 3] & 255) << 8 | h[d] & 255;
                          break;
                        case 2:
                          k = (h[d + 2] & 255) << 24 | (h[d + 1] & 255) << 16 | (h[d] & 255) << 8 | h[d + 3] & 255
                      }
                      w && 0 != (k & 255) && 255 != (k & 255) && (G.unmult = 255 / (k & 255), k = (G.__clamp[Math.round((k >>> 24 & 255) * G.unmult)] & 255) <<
                        24 | (G.__clamp[Math.round((k >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((k >>> 8 & 255) * G.unmult)] & 255) << 8 | k & 255);
                      z = b;
                      w = !1;
                      null == w && (w = !1);
                      null == z && (z = 0);
                      switch (z) {
                        case 0:
                          g = (T[r] & 255) << 24 | (T[r + 1] & 255) << 16 | (T[r + 2] & 255) << 8 | T[r + 3] & 255;
                          break;
                        case 1:
                          g = (T[r + 1] & 255) << 24 | (T[r + 2] & 255) << 16 | (T[r + 3] & 255) << 8 | T[r] & 255;
                          break;
                        case 2:
                          g = (T[r + 2] & 255) << 24 | (T[r + 1] & 255) << 16 | (T[r] & 255) << 8 | T[r + 3] & 255
                      }
                      w && 0 != (g & 255) && 255 != (g & 255) && (G.unmult = 255 / (g & 255), g = (G.__clamp[Math.round((g >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((g >>>
                        16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((g >>> 8 & 255) * G.unmult)] & 255) << 8 | g & 255);
                      D = Math.round((g & 255) / 255 * (k & 255));
                      k = (k >>> 24 & 255) << 24 | (k >>> 16 & 255) << 16 | (k >>> 8 & 255) << 8 | D & 255;
                      z = n;
                      w = v;
                      null == w && (w = !1);
                      null == z && (z = 0);
                      w && (0 == (k & 255) ? 0 != k && (k = 0) : 255 != (k & 255) && (G.a16 = G.__alpha16[k & 255], k = ((k >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((k >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((k >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | k & 255));
                      switch (z) {
                        case 0:
                          m[f] = k >>> 24 & 255;
                          m[f + 1] = k >>> 16 & 255;
                          m[f + 2] = k >>> 8 & 255;
                          m[f + 3] = k & 255;
                          break;
                        case 1:
                          m[f] = k & 255;
                          m[f +
                            1] = k >>> 24 & 255;
                          m[f + 2] = k >>> 16 & 255;
                          m[f + 3] = k >>> 8 & 255;
                          break;
                        case 2:
                          m[f] = k >>> 8 & 255, m[f + 1] = k >>> 16 & 255, m[f + 2] = k >>> 24 & 255, m[f + 3] = k & 255
                      }
                      d += 4;
                      f += 4;
                      r += 4
                    } else if (Q)
                      for (Q = 0, t = l.height; Q < t;) {
                        r = Q++;
                        d = c.byteOffset + c.stride * r;
                        f = l.byteOffset + l.stride * r;
                        for (var aa = 0, B = l.width; aa < B;) {
                          aa++;
                          z = p;
                          w = u;
                          null == w && (w = !1);
                          null == z && (z = 0);
                          switch (z) {
                            case 0:
                              k = (h[d] & 255) << 24 | (h[d + 1] & 255) << 16 | (h[d + 2] & 255) << 8 | h[d + 3] & 255;
                              break;
                            case 1:
                              k = (h[d + 1] & 255) << 24 | (h[d + 2] & 255) << 16 | (h[d + 3] & 255) << 8 | h[d] & 255;
                              break;
                            case 2:
                              k = (h[d + 2] & 255) << 24 | (h[d + 1] & 255) <<
                                16 | (h[d] & 255) << 8 | h[d + 3] & 255
                          }
                          w && 0 != (k & 255) && 255 != (k & 255) && (G.unmult = 255 / (k & 255), k = (G.__clamp[Math.round((k >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((k >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((k >>> 8 & 255) * G.unmult)] & 255) << 8 | k & 255);
                          z = n;
                          w = v;
                          null == w && (w = !1);
                          null == z && (z = 0);
                          switch (z) {
                            case 0:
                              q = (m[f] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f + 2] & 255) << 8 | m[f + 3] & 255;
                              break;
                            case 1:
                              q = (m[f + 1] & 255) << 24 | (m[f + 2] & 255) << 16 | (m[f + 3] & 255) << 8 | m[f] & 255;
                              break;
                            case 2:
                              q = (m[f + 2] & 255) << 24 | (m[f + 1] & 255) << 16 | (m[f] & 255) <<
                                8 | m[f + 3] & 255
                          }
                          w && 0 != (q & 255) && 255 != (q & 255) && (G.unmult = 255 / (q & 255), q = (G.__clamp[Math.round((q >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((q >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((q >>> 8 & 255) * G.unmult)] & 255) << 8 | q & 255);
                          w = (k & 255) / 255;
                          O = (q & 255) / 255;
                          A = 1 - w;
                          z = w + O * A;
                          if (0 == z) q = 0;
                          else {
                            var D = G.__clamp[Math.round(((k >>> 24 & 255) * w + (q >>> 24 & 255) * O * A) / z)];
                            q = (D & 255) << 24 | (q >>> 16 & 255) << 16 | (q >>> 8 & 255) << 8 | q & 255;
                            D = G.__clamp[Math.round(((k >>> 16 & 255) * w + (q >>> 16 & 255) * O * A) / z)];
                            q = (q >>> 24 & 255) << 24 | (D & 255) <<
                              16 | (q >>> 8 & 255) << 8 | q & 255;
                            w = G.__clamp[Math.round(((k >>> 8 & 255) * w + (q >>> 8 & 255) * O * A) / z)];
                            q = (q >>> 24 & 255) << 24 | (q >>> 16 & 255) << 16 | (w & 255) << 8 | q & 255;
                            z = G.__clamp[Math.round(255 * z)];
                            q = (q >>> 24 & 255) << 24 | (q >>> 16 & 255) << 16 | (q >>> 8 & 255) << 8 | z & 255
                          }
                          z = n;
                          w = v;
                          null == w && (w = !1);
                          null == z && (z = 0);
                          w && (0 == (q & 255) ? 0 != q && (q = 0) : 255 != (q & 255) && (G.a16 = G.__alpha16[q & 255], q = ((q >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((q >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((q >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | q & 255));
                          switch (z) {
                            case 0:
                              m[f] = q >>> 24 & 255;
                              m[f + 1] = q >>> 16 & 255;
                              m[f + 2] = q >>> 8 &
                                255;
                              m[f + 3] = q & 255;
                              break;
                            case 1:
                              m[f] = q & 255;
                              m[f + 1] = q >>> 24 & 255;
                              m[f + 2] = q >>> 16 & 255;
                              m[f + 3] = q >>> 8 & 255;
                              break;
                            case 2:
                              m[f] = q >>> 8 & 255, m[f + 1] = q >>> 16 & 255, m[f + 2] = q >>> 24 & 255, m[f + 3] = q & 255
                          }
                          d += 4;
                          f += 4
                        }
                      } else if (p == n && u == v && t == T)
                        for (Q = 0, t = l.height; Q < t;) r = Q++, d = c.byteOffset + c.stride * r, f = l.byteOffset + l.stride * r, m.set(h.subarray(d, d + l.width * T), f);
                      else
                        for (Q = 0, t = l.height; Q < t;)
                          for (r = Q++, d = c.byteOffset + c.stride * r, f = l.byteOffset + l.stride * r, aa = 0, B = l.width; aa < B;) {
                            aa++;
                            z = p;
                            w = u;
                            null == w && (w = !1);
                            null == z && (z = 0);
                            switch (z) {
                              case 0:
                                k = (h[d] &
                                  255) << 24 | (h[d + 1] & 255) << 16 | (h[d + 2] & 255) << 8 | h[d + 3] & 255;
                                break;
                              case 1:
                                k = (h[d + 1] & 255) << 24 | (h[d + 2] & 255) << 16 | (h[d + 3] & 255) << 8 | h[d] & 255;
                                break;
                              case 2:
                                k = (h[d + 2] & 255) << 24 | (h[d + 1] & 255) << 16 | (h[d] & 255) << 8 | h[d + 3] & 255
                            }
                            w && 0 != (k & 255) && 255 != (k & 255) && (G.unmult = 255 / (k & 255), k = (G.__clamp[Math.round((k >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((k >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((k >>> 8 & 255) * G.unmult)] & 255) << 8 | k & 255);
                            z = n;
                            w = v;
                            null == w && (w = !1);
                            null == z && (z = 0);
                            w && (0 == (k & 255) ? 0 != k && (k = 0) : 255 != (k & 255) &&
                              (G.a16 = G.__alpha16[k & 255], k = ((k >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((k >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((k >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | k & 255));
                            switch (z) {
                              case 0:
                                m[f] = k >>> 24 & 255;
                                m[f + 1] = k >>> 16 & 255;
                                m[f + 2] = k >>> 8 & 255;
                                m[f + 3] = k & 255;
                                break;
                              case 1:
                                m[f] = k & 255;
                                m[f + 1] = k >>> 24 & 255;
                                m[f + 2] = k >>> 16 & 255;
                                m[f + 3] = k >>> 8 & 255;
                                break;
                              case 2:
                                m[f] = k >>> 8 & 255, m[f + 1] = k >>> 16 & 255, m[f + 2] = k >>> 24 & 255, m[f + 3] = k & 255
                            }
                            d += 4;
                            f += 4
                          }
        }
        a.dirty = !0;
        a.version++
      };
      Sa.fillRect = function(a, b, c, d) {
        switch (d) {
          case 1:
            c = (c >>> 16 & 255) << 24 | (c >>> 8 & 255) << 16 | (c & 255) << 8 | c >>> 24 &
              255;
            break;
          case 2:
            c = (c >>> 8 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 24 & 255) << 8 | c & 255
        }
        a.get_transparent() || (c = (c >>> 24 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 8 & 255) << 8 | 255);
        var e = a.buffer.data;
        if (null != e) {
          d = a.buffer.format;
          var f = a.buffer.premultiplied;
          f && (0 == (c & 255) ? 0 != c && (c = 0) : 255 != (c & 255) && (G.a16 = G.__alpha16[c & 255], c = ((c >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((c >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((c >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | c & 255));
          b = new Me(a, b);
          for (var g, h = 0, m = b.height; h < m;) {
            f = h++;
            g = b.byteOffset + b.stride * f;
            for (var l = 0, p = b.width; l <
              p;) {
              f = l++;
              var n = g + 4 * f,
                k = d;
              f = !1;
              null == f && (f = !1);
              null == k && (k = 0);
              f && (0 == (c & 255) ? 0 != c && (c = 0) : 255 != (c & 255) && (G.a16 = G.__alpha16[c & 255], c = ((c >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((c >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((c >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | c & 255));
              switch (k) {
                case 0:
                  e[n] = c >>> 24 & 255;
                  e[n + 1] = c >>> 16 & 255;
                  e[n + 2] = c >>> 8 & 255;
                  e[n + 3] = c & 255;
                  break;
                case 1:
                  e[n] = c & 255;
                  e[n + 1] = c >>> 24 & 255;
                  e[n + 2] = c >>> 16 & 255;
                  e[n + 3] = c >>> 8 & 255;
                  break;
                case 2:
                  e[n] = c >>> 8 & 255, e[n + 1] = c >>> 16 & 255, e[n + 2] = c >>> 24 & 255, e[n + 3] = c & 255
              }
            }
          }
          a.dirty = !0;
          a.version++
        }
      };
      Sa.floodFill =
        function(a, b, c, d, e) {
          var f = a.buffer.data;
          if (null != f) {
            1 == e && (d = (d & 16777215) << 8 | d >> 24 & 255);
            e = a.buffer.format;
            var g = a.buffer.premultiplied,
              h = 0,
              m = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX),
              l = e,
              p = g;
            null == p && (p = !1);
            null == l && (l = 0);
            switch (l) {
              case 0:
                h = (f[m] & 255) << 24 | (f[m + 1] & 255) << 16 | (f[m + 2] & 255) << 8 | f[m + 3] & 255;
                break;
              case 1:
                h = (f[m + 1] & 255) << 24 | (f[m + 2] & 255) << 16 | (f[m + 3] & 255) << 8 | f[m] & 255;
                break;
              case 2:
                h = (f[m + 2] & 255) << 24 | (f[m + 1] & 255) << 16 | (f[m] & 255) << 8 | f[m + 3] & 255
            }
            p && 0 != (h & 255) && 255 != (h & 255) && (G.unmult = 255 / (h & 255),
              h = (G.__clamp[Math.round((h >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((h >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((h >>> 8 & 255) * G.unmult)] & 255) << 8 | h & 255);
            a.get_transparent() || (d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | 255, h = (h >>> 24 & 255) << 24 | (h >>> 16 & 255) << 16 | (h >>> 8 & 255) << 8 | 255);
            if (d != h) {
              g && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (G.a16 = G.__alpha16[d & 255], d = ((d >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | d & 255));
              m = [0, -1, 1, 0];
              var n = [-1, 0, 0, 1],
                k = -a.offsetX,
                q = -a.offsetY,
                u = k + a.width,
                v = q + a.height,
                r = [];
              r.push(b);
              r.push(c);
              for (var T, t, w, z = 0; 0 < r.length;) {
                c = r.pop();
                b = r.pop();
                for (var Q = 0; 4 > Q;)
                  if (l = Q++, T = b + m[l], t = c + n[l], !(T < k || t < q || T >= u || t >= v)) {
                    w = 4 * (t * a.width + T);
                    l = e;
                    p = g;
                    null == p && (p = !1);
                    null == l && (l = 0);
                    switch (l) {
                      case 0:
                        z = (f[w] & 255) << 24 | (f[w + 1] & 255) << 16 | (f[w + 2] & 255) << 8 | f[w + 3] & 255;
                        break;
                      case 1:
                        z = (f[w + 1] & 255) << 24 | (f[w + 2] & 255) << 16 | (f[w + 3] & 255) << 8 | f[w] & 255;
                        break;
                      case 2:
                        z = (f[w + 2] & 255) << 24 | (f[w + 1] & 255) << 16 | (f[w] & 255) << 8 | f[w + 3] & 255
                    }
                    p && 0 !=
                      (z & 255) && 255 != (z & 255) && (G.unmult = 255 / (z & 255), z = (G.__clamp[Math.round((z >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((z >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((z >>> 8 & 255) * G.unmult)] & 255) << 8 | z & 255);
                    if (z == h) {
                      l = e;
                      p = !1;
                      null == p && (p = !1);
                      null == l && (l = 0);
                      p && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (G.a16 = G.__alpha16[d & 255], d = ((d >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | d & 255));
                      switch (l) {
                        case 0:
                          f[w] = d >>> 24 & 255;
                          f[w + 1] = d >>> 16 & 255;
                          f[w + 2] = d >>>
                            8 & 255;
                          f[w + 3] = d & 255;
                          break;
                        case 1:
                          f[w] = d & 255;
                          f[w + 1] = d >>> 24 & 255;
                          f[w + 2] = d >>> 16 & 255;
                          f[w + 3] = d >>> 8 & 255;
                          break;
                        case 2:
                          f[w] = d >>> 8 & 255, f[w + 1] = d >>> 16 & 255, f[w + 2] = d >>> 24 & 255, f[w + 3] = d & 255
                      }
                      r.push(T);
                      r.push(t)
                    }
                  }
              }
              a.dirty = !0;
              a.version++
            }
          }
        };
      Sa.gaussianBlur = function(a, b, c, d, e, f, g, h, m) {
        null == g && (g = 1);
        null == f && (f = 4);
        null == e && (e = 4);
        (h = a.get_premultiplied()) && a.set_premultiplied(!1);
        df.blur(a, b, c, d, e, f, g);
        a.dirty = !0;
        a.version++;
        h && a.set_premultiplied(!0);
        return a
      };
      Sa.getColorBoundsRect = function(a, b, c, d, e) {
        var f = a.width + 1,
          g = 0,
          h = a.height + 1,
          m = 0;
        switch (e) {
          case 1:
            e = c;
            c = (e >>> 16 & 255) << 24 | (e >>> 8 & 255) << 16 | (e & 255) << 8 | e >>> 24 & 255;
            e = b;
            b = (e >>> 16 & 255) << 24 | (e >>> 8 & 255) << 16 | (e & 255) << 8 | e >>> 24 & 255;
            break;
          case 2:
            e = c, c = (e >>> 8 & 255) << 24 | (e >>> 16 & 255) << 16 | (e >>> 24 & 255) << 8 | e & 255, e = b, b = (e >>> 8 & 255) << 24 | (e >>> 16 & 255) << 16 | (e >>> 24 & 255) << 8 | e & 255
        }
        a.get_transparent() || (c = (c >>> 24 & 255) << 24 | (c >>> 16 & 255) << 16 | (c >>> 8 & 255) << 8 | 255, b = (b >>> 24 & 255) << 24 | (b >>> 16 & 255) << 16 | (b >>> 8 & 255) << 8 | 255);
        e = 0;
        for (var l = a.width; e < l;) {
          var p = e++;
          var n = !1;
          for (var k = 0, q = a.height; k < q;) {
            var u =
              k++;
            n = a.getPixel32(p, u, 0);
            if (n = d ? (n & b) == c : (n & b) != c) {
              p < f && (f = p);
              break
            }
          }
          if (n) break
        }
        e = 0;
        for (l = a.width; e < l;) {
          p = e++;
          p = a.width - 1 - p;
          n = !1;
          k = 0;
          for (q = a.height; k < q;)
            if (u = k++, n = a.getPixel32(p, u, 0), n = d ? (n & b) == c : (n & b) != c) {
              p > g && (g = p);
              break
            } if (n) break
        }
        e = 0;
        for (l = a.height; e < l;) {
          u = e++;
          n = !1;
          k = 0;
          for (q = a.width; k < q;)
            if (p = k++, n = a.getPixel32(p, u, 0), n = d ? (n & b) == c : (n & b) != c) {
              u < h && (h = u);
              break
            } if (n) break
        }
        e = 0;
        for (l = a.height; e < l;) {
          u = e++;
          u = a.height - 1 - u;
          n = !1;
          k = 0;
          for (q = a.width; k < q;)
            if (p = k++, n = a.getPixel32(p, u, 0), n = d ? (n & b) == c : (n & b) !=
              c) {
              u > m && (m = u);
              break
            } if (n) break
        }
        d = g - f;
        c = m - h;
        0 < d && ++d;
        0 < c && ++c;
        0 > d && (d = 0);
        0 > c && (c = 0);
        f == g && (d = 1);
        h == m && (c = 1);
        f > a.width && (f = 0);
        h > a.height && (h = 0);
        return new Td(f, h, d, c)
      };
      Sa.getPixel = function(a, b, c, d) {
        var e = 0,
          f = a.buffer.data;
        b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        c = a.buffer.format;
        a = a.buffer.premultiplied;
        null == a && (a = !1);
        null == c && (c = 0);
        switch (c) {
          case 0:
            e = (f[b] & 255) << 24 | (f[b + 1] & 255) << 16 | (f[b + 2] & 255) << 8 | f[b + 3] & 255;
            break;
          case 1:
            e = (f[b + 1] & 255) << 24 | (f[b + 2] & 255) << 16 | (f[b + 3] & 255) << 8 | f[b] & 255;
            break;
          case 2:
            e = (f[b + 2] & 255) << 24 | (f[b + 1] & 255) << 16 | (f[b] & 255) << 8 | f[b + 3] & 255
        }
        a && 0 != (e & 255) && 255 != (e & 255) && (G.unmult = 255 / (e & 255), e = (G.__clamp[Math.round((e >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((e >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((e >>> 8 & 255) * G.unmult)] & 255) << 8 | e & 255);
        e = (e >>> 24 & 255) << 24 | (e >>> 16 & 255) << 16 | (e >>> 8 & 255) << 8 | 0;
        switch (d) {
          case 1:
            return (e & 255) << 24 | (e >>> 24 & 255) << 16 | (e >>> 16 & 255) << 8 | e >>> 8 & 255;
          case 2:
            return (e >>> 8 & 255) << 24 | (e >>> 16 & 255) << 16 | (e >>> 24 & 255) << 8 | e & 255;
          default:
            return e
        }
      };
      Sa.getPixel32 = function(a, b, c, d) {
        var e = 0,
          f = a.buffer.data;
        b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        c = a.buffer.format;
        a = a.buffer.premultiplied;
        null == a && (a = !1);
        null == c && (c = 0);
        switch (c) {
          case 0:
            e = (f[b] & 255) << 24 | (f[b + 1] & 255) << 16 | (f[b + 2] & 255) << 8 | f[b + 3] & 255;
            break;
          case 1:
            e = (f[b + 1] & 255) << 24 | (f[b + 2] & 255) << 16 | (f[b + 3] & 255) << 8 | f[b] & 255;
            break;
          case 2:
            e = (f[b + 2] & 255) << 24 | (f[b + 1] & 255) << 16 | (f[b] & 255) << 8 | f[b + 3] & 255
        }
        a && 0 != (e & 255) && 255 != (e & 255) && (G.unmult = 255 / (e & 255), e = (G.__clamp[Math.round((e >>> 24 & 255) * G.unmult)] &
          255) << 24 | (G.__clamp[Math.round((e >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((e >>> 8 & 255) * G.unmult)] & 255) << 8 | e & 255);
        switch (d) {
          case 1:
            return (e & 255) << 24 | (e >>> 24 & 255) << 16 | (e >>> 16 & 255) << 8 | e >>> 8 & 255;
          case 2:
            return (e >>> 8 & 255) << 24 | (e >>> 16 & 255) << 16 | (e >>> 24 & 255) << 8 | e & 255;
          default:
            return e
        }
      };
      Sa.getPixels = function(a, b, c) {
        if (null == a.buffer.data) return null;
        var d = new ib(new ArrayBuffer(4 * (b.width * b.height | 0))),
          e = a.buffer.data,
          f = a.buffer.format,
          g = a.buffer.premultiplied;
        a = new Me(a, b);
        for (var h, m, l = b = m = 0, p =
            a.height; l < p;) {
          h = l++;
          h = a.byteOffset + a.stride * h;
          for (var n = 0, k = a.width; n < k;) {
            n++;
            var q = f,
              u = g;
            null == u && (u = !1);
            null == q && (q = 0);
            switch (q) {
              case 0:
                m = (e[h] & 255) << 24 | (e[h + 1] & 255) << 16 | (e[h + 2] & 255) << 8 | e[h + 3] & 255;
                break;
              case 1:
                m = (e[h + 1] & 255) << 24 | (e[h + 2] & 255) << 16 | (e[h + 3] & 255) << 8 | e[h] & 255;
                break;
              case 2:
                m = (e[h + 2] & 255) << 24 | (e[h + 1] & 255) << 16 | (e[h] & 255) << 8 | e[h + 3] & 255
            }
            u && 0 != (m & 255) && 255 != (m & 255) && (G.unmult = 255 / (m & 255), m = (G.__clamp[Math.round((m >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((m >>> 16 & 255) * G.unmult)] &
              255) << 16 | (G.__clamp[Math.round((m >>> 8 & 255) * G.unmult)] & 255) << 8 | m & 255);
            switch (c) {
              case 1:
                m = (m & 255) << 24 | (m >>> 24 & 255) << 16 | (m >>> 16 & 255) << 8 | m >>> 8 & 255;
                break;
              case 2:
                m = (m >>> 8 & 255) << 24 | (m >>> 16 & 255) << 16 | (m >>> 24 & 255) << 8 | m & 255
            }
            d.b[b++] = m >>> 24 & 255;
            d.b[b++] = m >>> 16 & 255;
            d.b[b++] = m >>> 8 & 255;
            d.b[b++] = m & 255;
            h += 4
          }
        }
        return d
      };
      Sa.merge = function(a, b, c, d, e, f, g, h) {
        if (null != a.buffer.data && null != b.buffer.data) {
          c = new Me(b, c);
          d = new Me(a, new Td(d.x, d.y, c.width, c.height));
          var m = b.buffer.data,
            l = a.buffer.data,
            p = b.buffer.format,
            n = a.buffer.format;
          b = b.buffer.premultiplied;
          for (var k = a.buffer.premultiplied, q, u, v = 0, r = 0, T = 0, t = d.height; T < t;) {
            u = T++;
            q = c.byteOffset + c.stride * u;
            u = d.byteOffset + d.stride * u;
            for (var w = 0, z = d.width; w < z;) {
              w++;
              var Q = p,
                O = b;
              null == O && (O = !1);
              null == Q && (Q = 0);
              switch (Q) {
                case 0:
                  v = (m[q] & 255) << 24 | (m[q + 1] & 255) << 16 | (m[q + 2] & 255) << 8 | m[q + 3] & 255;
                  break;
                case 1:
                  v = (m[q + 1] & 255) << 24 | (m[q + 2] & 255) << 16 | (m[q + 3] & 255) << 8 | m[q] & 255;
                  break;
                case 2:
                  v = (m[q + 2] & 255) << 24 | (m[q + 1] & 255) << 16 | (m[q] & 255) << 8 | m[q + 3] & 255
              }
              O && 0 != (v & 255) && 255 != (v & 255) && (G.unmult = 255 / (v & 255),
                v = (G.__clamp[Math.round((v >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((v >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((v >>> 8 & 255) * G.unmult)] & 255) << 8 | v & 255);
              Q = n;
              O = k;
              null == O && (O = !1);
              null == Q && (Q = 0);
              switch (Q) {
                case 0:
                  r = (l[u] & 255) << 24 | (l[u + 1] & 255) << 16 | (l[u + 2] & 255) << 8 | l[u + 3] & 255;
                  break;
                case 1:
                  r = (l[u + 1] & 255) << 24 | (l[u + 2] & 255) << 16 | (l[u + 3] & 255) << 8 | l[u] & 255;
                  break;
                case 2:
                  r = (l[u + 2] & 255) << 24 | (l[u + 1] & 255) << 16 | (l[u] & 255) << 8 | l[u + 3] & 255
              }
              O && 0 != (r & 255) && 255 != (r & 255) && (G.unmult = 255 / (r & 255), r = (G.__clamp[Math.round((r >>>
                24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((r >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((r >>> 8 & 255) * G.unmult)] & 255) << 8 | r & 255);
              r = ((((v >>> 24 & 255) * e + (r >>> 24 & 255) * (256 - e)) / 256 | 0) & 255) << 24 | (r >>> 16 & 255) << 16 | (r >>> 8 & 255) << 8 | r & 255;
              r = (r >>> 24 & 255) << 24 | ((((v >>> 16 & 255) * f + (r >>> 16 & 255) * (256 - f)) / 256 | 0) & 255) << 16 | (r >>> 8 & 255) << 8 | r & 255;
              r = (r >>> 24 & 255) << 24 | (r >>> 16 & 255) << 16 | ((((v >>> 8 & 255) * g + (r >>> 8 & 255) * (256 - g)) / 256 | 0) & 255) << 8 | r & 255;
              r = (r >>> 24 & 255) << 24 | (r >>> 16 & 255) << 16 | (r >>> 8 & 255) << 8 | (((v & 255) * h + (r & 255) *
                (256 - h)) / 256 | 0) & 255;
              Q = n;
              O = k;
              null == O && (O = !1);
              null == Q && (Q = 0);
              O && (0 == (r & 255) ? 0 != r && (r = 0) : 255 != (r & 255) && (G.a16 = G.__alpha16[r & 255], r = ((r >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((r >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((r >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | r & 255));
              switch (Q) {
                case 0:
                  l[u] = r >>> 24 & 255;
                  l[u + 1] = r >>> 16 & 255;
                  l[u + 2] = r >>> 8 & 255;
                  l[u + 3] = r & 255;
                  break;
                case 1:
                  l[u] = r & 255;
                  l[u + 1] = r >>> 24 & 255;
                  l[u + 2] = r >>> 16 & 255;
                  l[u + 3] = r >>> 8 & 255;
                  break;
                case 2:
                  l[u] = r >>> 8 & 255, l[u + 1] = r >>> 16 & 255, l[u + 2] = r >>> 24 & 255, l[u + 3] = r & 255
              }
              q += 4;
              u += 4
            }
          }
          a.dirty = !0;
          a.version++
        }
      };
      Sa.multiplyAlpha = function(a) {
        var b = a.buffer.data;
        if (null != b && a.buffer.transparent) {
          for (var c = a.buffer.format, d = 0, e = 0, f = b.length / 4 | 0; e < f;) {
            var g = e++,
              h = 4 * g,
              m = c,
              l = !1;
            null == l && (l = !1);
            null == m && (m = 0);
            switch (m) {
              case 0:
                d = (b[h] & 255) << 24 | (b[h + 1] & 255) << 16 | (b[h + 2] & 255) << 8 | b[h + 3] & 255;
                break;
              case 1:
                d = (b[h + 1] & 255) << 24 | (b[h + 2] & 255) << 16 | (b[h + 3] & 255) << 8 | b[h] & 255;
                break;
              case 2:
                d = (b[h + 2] & 255) << 24 | (b[h + 1] & 255) << 16 | (b[h] & 255) << 8 | b[h + 3] & 255
            }
            l && 0 != (d & 255) && 255 != (d & 255) && (G.unmult = 255 / (d & 255), d = (G.__clamp[Math.round((d >>> 24 &
              255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((d >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((d >>> 8 & 255) * G.unmult)] & 255) << 8 | d & 255);
            g *= 4;
            h = c;
            m = !0;
            null == m && (m = !1);
            null == h && (h = 0);
            m && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (G.a16 = G.__alpha16[d & 255], d = ((d >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | d & 255));
            switch (h) {
              case 0:
                b[g] = d >>> 24 & 255;
                b[g + 1] = d >>> 16 & 255;
                b[g + 2] = d >>> 8 & 255;
                b[g + 3] = d & 255;
                break;
              case 1:
                b[g] = d & 255;
                b[g + 1] = d >>> 24 & 255;
                b[g + 2] = d >>> 16 & 255;
                b[g +
                  3] = d >>> 8 & 255;
                break;
              case 2:
                b[g] = d >>> 8 & 255, b[g + 1] = d >>> 16 & 255, b[g + 2] = d >>> 24 & 255, b[g + 3] = d & 255
            }
          }
          a.buffer.premultiplied = !0;
          a.dirty = !0;
          a.version++
        }
      };
      Sa.resize = function(a, b, c) {
        var d = a.buffer;
        if (d.width != b || d.height != c) {
          var e = b * c * 4;
          e = null != e ? new Uint8Array(e) : null;
          e = new Rf(e, b, c);
          for (var f = a.width, g = a.height, h = a.get_data(), m = e.data, l, p, n, k, q, u, v, r, T, t = 0; t < c;)
            for (var w = t++, z = 0, Q = b; z < Q;) q = z++, r = (q + .5) / b * f - .5, T = (w + .5) / c * g - .5, u = r | 0, v = T | 0, l = 4 * (v * f + u), p = u < f - 1 ? l + 4 : l, n = v < g - 1 ? l + 4 * f : l, k = p != l ? n + 4 : n, q = 4 * (w * b + q), u = r - u,
              v = T - v, T = 1 - u, r = 1 - v, m[q] = (Ya.toFloat(h[l]) * T + Ya.toFloat(h[p]) * u) * r + (Ya.toFloat(h[n]) * T + Ya.toFloat(h[k]) * u) * v | 0, m[q + 1] = (Ya.toFloat(h[l + 1]) * T + Ya.toFloat(h[p + 1]) * u) * r + (Ya.toFloat(h[n + 1]) * T + Ya.toFloat(h[k + 1]) * u) * v | 0, m[q + 2] = (Ya.toFloat(h[l + 2]) * T + Ya.toFloat(h[p + 2]) * u) * r + (Ya.toFloat(h[n + 2]) * T + Ya.toFloat(h[k + 2]) * u) * v | 0, m[q + 3] = 0 == h[p + 3] || 0 == h[n + 3] || 0 == h[k + 3] ? 0 : h[l + 3];
          d.data = e.data;
          d.width = b;
          d.height = c;
          d.__srcImage = null;
          d.__srcImageData = null;
          d.__srcCanvas = null;
          d.__srcContext = null;
          a.dirty = !0;
          a.version++
        }
      };
      Sa.resizeBuffer =
        function(a, b, c) {
          var d = a.buffer,
            e = a.get_data(),
            f = b * c * 4;
          f = null != f ? new Uint8Array(f) : null;
          for (var g, h, m = 0, l = d.height; m < l;)
            for (var p = m++, n = 0, k = d.width; n < k;) h = n++, g = 4 * (p * d.width + h), h = 4 * (p * b + h), f[h] = e[g], f[h + 1] = e[g + 1], f[h + 2] = e[g + 2], f[h + 3] = e[g + 3];
          d.data = f;
          d.width = b;
          d.height = c;
          d.__srcImage = null;
          d.__srcImageData = null;
          d.__srcCanvas = null;
          d.__srcContext = null;
          a.dirty = !0;
          a.version++
        };
      Sa.setFormat = function(a, b) {
        var c = a.buffer.data;
        if (null != c) {
          var d = c.length / 4 | 0;
          switch (a.get_format()) {
            case 0:
              var e = 0;
              var f = 1;
              var g =
                2;
              var h = 3;
              break;
            case 1:
              e = 1;
              f = 2;
              g = 3;
              h = 0;
              break;
            case 2:
              e = 2, f = 1, g = 0, h = 3
          }
          switch (b) {
            case 0:
              var m = 0;
              var l = 1;
              var p = 2;
              var n = 3;
              break;
            case 1:
              m = 1;
              l = 2;
              p = 3;
              n = 0;
              break;
            case 2:
              m = 2, l = 1, p = 0, n = 3
          }
          for (var k = 0; k < d;) {
            var q = 4 * k++;
            var u = c[q + e];
            var v = c[q + f];
            var r = c[q + g];
            var T = c[q + h];
            c[q + m] = u;
            c[q + l] = v;
            c[q + p] = r;
            c[q + n] = T
          }
          a.buffer.format = b;
          a.dirty = !0;
          a.version++
        }
      };
      Sa.setPixel = function(a, b, c, d, e) {
        switch (e) {
          case 1:
            d = (d >>> 16 & 255) << 24 | (d >>> 8 & 255) << 16 | (d & 255) << 8 | d >>> 24 & 255;
            break;
          case 2:
            d = (d >>> 8 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 24 & 255) <<
              8 | d & 255
        }
        var f = 0,
          g = a.buffer.data,
          h = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        e = a.buffer.format;
        var m = a.buffer.premultiplied;
        null == m && (m = !1);
        null == e && (e = 0);
        switch (e) {
          case 0:
            f = (g[h] & 255) << 24 | (g[h + 1] & 255) << 16 | (g[h + 2] & 255) << 8 | g[h + 3] & 255;
            break;
          case 1:
            f = (g[h + 1] & 255) << 24 | (g[h + 2] & 255) << 16 | (g[h + 3] & 255) << 8 | g[h] & 255;
            break;
          case 2:
            f = (g[h + 2] & 255) << 24 | (g[h + 1] & 255) << 16 | (g[h] & 255) << 8 | g[h + 3] & 255
        }
        m && 0 != (f & 255) && 255 != (f & 255) && (G.unmult = 255 / (f & 255), f = (G.__clamp[Math.round((f >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((f >>>
          16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((f >>> 8 & 255) * G.unmult)] & 255) << 8 | f & 255);
        d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | f & 255;
        g = a.buffer.data;
        h = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
        e = a.buffer.format;
        m = a.buffer.premultiplied;
        null == m && (m = !1);
        null == e && (e = 0);
        m && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (G.a16 = G.__alpha16[d & 255], d = ((d >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | d & 255));
        switch (e) {
          case 0:
            g[h] = d >>> 24 & 255;
            g[h + 1] = d >>>
              16 & 255;
            g[h + 2] = d >>> 8 & 255;
            g[h + 3] = d & 255;
            break;
          case 1:
            g[h] = d & 255;
            g[h + 1] = d >>> 24 & 255;
            g[h + 2] = d >>> 16 & 255;
            g[h + 3] = d >>> 8 & 255;
            break;
          case 2:
            g[h] = d >>> 8 & 255, g[h + 1] = d >>> 16 & 255, g[h + 2] = d >>> 24 & 255, g[h + 3] = d & 255
        }
        a.dirty = !0;
        a.version++
      };
      Sa.setPixel32 = function(a, b, c, d, e) {
        switch (e) {
          case 1:
            d = (d >>> 16 & 255) << 24 | (d >>> 8 & 255) << 16 | (d & 255) << 8 | d >>> 24 & 255;
            break;
          case 2:
            d = (d >>> 8 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 24 & 255) << 8 | d & 255
        }
        a.get_transparent() || (d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | 255);
        var f = a.buffer.data;
        b = 4 * (c + a.offsetY) *
          a.buffer.width + 4 * (b + a.offsetX);
        e = a.buffer.format;
        c = a.buffer.premultiplied;
        null == c && (c = !1);
        null == e && (e = 0);
        c && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (G.a16 = G.__alpha16[d & 255], d = ((d >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | d & 255));
        switch (e) {
          case 0:
            f[b] = d >>> 24 & 255;
            f[b + 1] = d >>> 16 & 255;
            f[b + 2] = d >>> 8 & 255;
            f[b + 3] = d & 255;
            break;
          case 1:
            f[b] = d & 255;
            f[b + 1] = d >>> 24 & 255;
            f[b + 2] = d >>> 16 & 255;
            f[b + 3] = d >>> 8 & 255;
            break;
          case 2:
            f[b] = d >>> 8 & 255, f[b + 1] = d >>> 16 & 255, f[b + 2] = d >>> 24 & 255,
              f[b + 3] = d & 255
        }
        a.dirty = !0;
        a.version++
      };
      Sa.setPixels = function(a, b, c, d, e) {
        if (null != a.buffer.data) {
          var f = a.buffer.data,
            g = a.buffer.format,
            h = a.buffer.premultiplied;
          b = new Me(a, b);
          var m = a.get_transparent(),
            l = c.bytes;
          c = c.offset;
          e = e != Cg.BIG_ENDIAN;
          for (var p = 0, n = b.height; p < n;) {
            var k = p++;
            k = b.byteOffset + b.stride * k;
            for (var q = 0, u = b.width; q < u;) {
              var v = q++;
              var r = e ? l.getInt32(c) : l.b[c + 3] | l.b[c + 2] << 8 | l.b[c + 1] << 16 | l.b[c] << 24;
              c += 4;
              switch (d) {
                case 1:
                  r = (r >>> 16 & 255) << 24 | (r >>> 8 & 255) << 16 | (r & 255) << 8 | r >>> 24 & 255;
                  break;
                case 2:
                  r =
                    (r >>> 8 & 255) << 24 | (r >>> 16 & 255) << 16 | (r >>> 24 & 255) << 8 | r & 255
              }
              m || (r = (r >>> 24 & 255) << 24 | (r >>> 16 & 255) << 16 | (r >>> 8 & 255) << 8 | 255);
              v = k + 4 * v;
              var T = g,
                t = h;
              null == t && (t = !1);
              null == T && (T = 0);
              t && (0 == (r & 255) ? 0 != r && (r = 0) : 255 != (r & 255) && (G.a16 = G.__alpha16[r & 255], r = ((r >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((r >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((r >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | r & 255));
              switch (T) {
                case 0:
                  f[v] = r >>> 24 & 255;
                  f[v + 1] = r >>> 16 & 255;
                  f[v + 2] = r >>> 8 & 255;
                  f[v + 3] = r & 255;
                  break;
                case 1:
                  f[v] = r & 255;
                  f[v + 1] = r >>> 24 & 255;
                  f[v + 2] = r >>> 16 & 255;
                  f[v + 3] = r >>> 8 & 255;
                  break;
                case 2:
                  f[v] = r >>> 8 & 255, f[v + 1] = r >>> 16 & 255, f[v + 2] = r >>> 24 & 255, f[v + 3] = r & 255
              }
            }
          }
          a.dirty = !0;
          a.version++
        }
      };
      Sa.threshold = function(a, b, c, d, e, f, g, h, m, l) {
        switch (l) {
          case 1:
            var p = g;
            g = (p >>> 16 & 255) << 24 | (p >>> 8 & 255) << 16 | (p & 255) << 8 | p >>> 24 & 255;
            p = h;
            h = (p >>> 16 & 255) << 24 | (p >>> 8 & 255) << 16 | (p & 255) << 8 | p >>> 24 & 255;
            p = f;
            f = (p >>> 16 & 255) << 24 | (p >>> 8 & 255) << 16 | (p & 255) << 8 | p >>> 24 & 255;
            break;
          case 2:
            p = g, g = (p >>> 8 & 255) << 24 | (p >>> 16 & 255) << 16 | (p >>> 24 & 255) << 8 | p & 255, p = h, h = (p >>> 8 & 255) << 24 | (p >>> 16 & 255) << 16 | (p >>> 24 & 255) << 8 | p & 255, p = f, f = (p >>> 8 & 255) << 24 |
              (p >>> 16 & 255) << 16 | (p >>> 24 & 255) << 8 | p & 255
        }
        switch (e) {
          case "!=":
            e = 0;
            break;
          case "<":
            e = 2;
            break;
          case "<=":
            e = 3;
            break;
          case "==":
            e = 1;
            break;
          case ">":
            e = 4;
            break;
          case ">=":
            e = 5;
            break;
          default:
            e = -1
        }
        if (-1 == e) return 0;
        p = b.buffer.data;
        var n = a.buffer.data;
        if (null == p || null == n) return 0;
        var k = 0;
        c = new Me(b, c);
        d = new Me(a, new Td(d.x, d.y, c.width, c.height));
        var q = b.buffer.format,
          u = a.buffer.format;
        b = b.buffer.premultiplied;
        for (var v = a.buffer.premultiplied, r, T, t = 0, w = 0, z = d.height; w < z;) {
          T = w++;
          r = c.byteOffset + c.stride * T;
          T = d.byteOffset +
            d.stride * T;
          for (var Q = 0, O = d.width; Q < O;) {
            Q++;
            l = q;
            var A = b;
            null == A && (A = !1);
            null == l && (l = 0);
            switch (l) {
              case 0:
                t = (p[r] & 255) << 24 | (p[r + 1] & 255) << 16 | (p[r + 2] & 255) << 8 | p[r + 3] & 255;
                break;
              case 1:
                t = (p[r + 1] & 255) << 24 | (p[r + 2] & 255) << 16 | (p[r + 3] & 255) << 8 | p[r] & 255;
                break;
              case 2:
                t = (p[r + 2] & 255) << 24 | (p[r + 1] & 255) << 16 | (p[r] & 255) << 8 | p[r + 3] & 255
            }
            A && 0 != (t & 255) && 255 != (t & 255) && (G.unmult = 255 / (t & 255), t = (G.__clamp[Math.round((t >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((t >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((t >>>
              8 & 255) * G.unmult)] & 255) << 8 | t & 255);
            l = t & h;
            A = l >>> 24 & 255;
            var aa = f >>> 24 & 255;
            A != aa ? l = Ya.gt(A, aa) ? 1 : -1 : (A = l >>> 16 & 255, aa = f >>> 16 & 255, A != aa ? l = Ya.gt(A, aa) ? 1 : -1 : (A = l >>> 8 & 255, aa = f >>> 8 & 255, A != aa ? l = Ya.gt(A, aa) ? 1 : -1 : (A = l & 255, aa = f & 255, l = A != aa ? Ya.gt(A, aa) ? 1 : -1 : 0)));
            switch (e) {
              case 0:
                l = 0 != l;
                break;
              case 1:
                l = 0 == l;
                break;
              case 2:
                l = -1 == l;
                break;
              case 3:
                l = 0 == l || -1 == l;
                break;
              case 4:
                l = 1 == l;
                break;
              case 5:
                l = 0 == l || 1 == l;
                break;
              default:
                l = !1
            }
            if (l) {
              l = u;
              A = v;
              null == A && (A = !1);
              null == l && (l = 0);
              A && (0 == (g & 255) ? 0 != g && (g = 0) : 255 != (g & 255) && (G.a16 = G.__alpha16[g &
                255], g = ((g >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((g >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((g >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | g & 255));
              switch (l) {
                case 0:
                  n[T] = g >>> 24 & 255;
                  n[T + 1] = g >>> 16 & 255;
                  n[T + 2] = g >>> 8 & 255;
                  n[T + 3] = g & 255;
                  break;
                case 1:
                  n[T] = g & 255;
                  n[T + 1] = g >>> 24 & 255;
                  n[T + 2] = g >>> 16 & 255;
                  n[T + 3] = g >>> 8 & 255;
                  break;
                case 2:
                  n[T] = g >>> 8 & 255, n[T + 1] = g >>> 16 & 255, n[T + 2] = g >>> 24 & 255, n[T + 3] = g & 255
              }++k
            } else if (m) switch (l = u, A = v, null == A && (A = !1), null == l && (l = 0), A && (0 == (t & 255) ? 0 != t && (t = 0) : 255 != (t & 255) && (G.a16 = G.__alpha16[t & 255], t = ((t >>> 24 & 255) * G.a16 >> 16 & 255) <<
                24 | ((t >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((t >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | t & 255)), l) {
              case 0:
                n[T] = t >>> 24 & 255;
                n[T + 1] = t >>> 16 & 255;
                n[T + 2] = t >>> 8 & 255;
                n[T + 3] = t & 255;
                break;
              case 1:
                n[T] = t & 255;
                n[T + 1] = t >>> 24 & 255;
                n[T + 2] = t >>> 16 & 255;
                n[T + 3] = t >>> 8 & 255;
                break;
              case 2:
                n[T] = t >>> 8 & 255, n[T + 1] = t >>> 16 & 255, n[T + 2] = t >>> 24 & 255, n[T + 3] = t & 255
            }
            r += 4;
            T += 4
          }
        }
        0 < k && (a.dirty = !0, a.version++);
        return k
      };
      Sa.unmultiplyAlpha = function(a) {
        var b = a.buffer.data;
        if (null != b) {
          for (var c = a.buffer.format, d = 0, e = 0, f = b.length / 4 | 0; e < f;) {
            var g = e++,
              h = 4 * g,
              m = c,
              l = !0;
            null ==
              l && (l = !1);
            null == m && (m = 0);
            switch (m) {
              case 0:
                d = (b[h] & 255) << 24 | (b[h + 1] & 255) << 16 | (b[h + 2] & 255) << 8 | b[h + 3] & 255;
                break;
              case 1:
                d = (b[h + 1] & 255) << 24 | (b[h + 2] & 255) << 16 | (b[h + 3] & 255) << 8 | b[h] & 255;
                break;
              case 2:
                d = (b[h + 2] & 255) << 24 | (b[h + 1] & 255) << 16 | (b[h] & 255) << 8 | b[h + 3] & 255
            }
            l && 0 != (d & 255) && 255 != (d & 255) && (G.unmult = 255 / (d & 255), d = (G.__clamp[Math.round((d >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((d >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((d >>> 8 & 255) * G.unmult)] & 255) << 8 | d & 255);
            g *= 4;
            h = c;
            m = !1;
            null == m && (m = !1);
            null == h && (h = 0);
            m && (0 == (d & 255) ? 0 != d && (d = 0) : 255 != (d & 255) && (G.a16 = G.__alpha16[d & 255], d = ((d >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((d >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((d >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | d & 255));
            switch (h) {
              case 0:
                b[g] = d >>> 24 & 255;
                b[g + 1] = d >>> 16 & 255;
                b[g + 2] = d >>> 8 & 255;
                b[g + 3] = d & 255;
                break;
              case 1:
                b[g] = d & 255;
                b[g + 1] = d >>> 24 & 255;
                b[g + 2] = d >>> 16 & 255;
                b[g + 3] = d >>> 8 & 255;
                break;
              case 2:
                b[g] = d >>> 8 & 255, b[g + 1] = d >>> 16 & 255, b[g + 2] = d >>> 24 & 255, b[g + 3] = d & 255
            }
          }
          a.buffer.premultiplied = !1;
          a.dirty = !0;
          a.version++
        }
      };
      Sa.__boxBlur = function(a, b,
        c, d, e, f) {
        b.set(a);
        e |= 0;
        f |= 0;
        Sa.__boxBlurH(b, a, c, d, e, 0);
        Sa.__boxBlurH(b, a, c, d, e, 1);
        Sa.__boxBlurH(b, a, c, d, e, 2);
        Sa.__boxBlurH(b, a, c, d, e, 3);
        e = 1 / (f + f + 1);
        for (var g = 4 * c, h, m, l, p, n, k, q = 0, u = c; q < u;) {
          h = q++;
          m = h *= 4;
          l = h + f * g;
          p = a[h];
          n = a[h + g * (d - 1)];
          k = (f + 1) * p;
          for (var v = 0, r = f; v < r;) {
            var t = v++;
            k += a[h + t * g]
          }
          v = 0;
          for (r = f + 1; v < r;) v++, k += a[l] - p, b[h] = Math.round(Ya.toFloat(k) * e), l += g, h += g;
          p = f + 1;
          for (v = d - f; p < v;) p++, k += a[l] - a[m], b[h] = Math.round(Ya.toFloat(k) * e), m += g, l += g, h += g;
          l = d - f;
          for (p = d; l < p;) l++, k += n - a[m], b[h] = Math.round(Ya.toFloat(k) *
            e), m += g, h += g
        }
        e = 1 / (f + f + 1);
        g = 4 * c;
        q = 0;
        for (u = c; q < u;) {
          h = q++;
          m = h = 4 * h + 1;
          l = h + f * g;
          p = a[h];
          n = a[h + g * (d - 1)];
          k = (f + 1) * p;
          v = 0;
          for (r = f; v < r;) t = v++, k += a[h + t * g];
          v = 0;
          for (r = f + 1; v < r;) v++, k += a[l] - p, b[h] = Math.round(Ya.toFloat(k) * e), l += g, h += g;
          p = f + 1;
          for (v = d - f; p < v;) p++, k += a[l] - a[m], b[h] = Math.round(Ya.toFloat(k) * e), m += g, l += g, h += g;
          l = d - f;
          for (p = d; l < p;) l++, k += n - a[m], b[h] = Math.round(Ya.toFloat(k) * e), m += g, h += g
        }
        e = 1 / (f + f + 1);
        g = 4 * c;
        q = 0;
        for (u = c; q < u;) {
          h = q++;
          m = h = 4 * h + 2;
          l = h + f * g;
          p = a[h];
          n = a[h + g * (d - 1)];
          k = (f + 1) * p;
          v = 0;
          for (r = f; v < r;) t = v++, k += a[h + t *
            g];
          v = 0;
          for (r = f + 1; v < r;) v++, k += a[l] - p, b[h] = Math.round(Ya.toFloat(k) * e), l += g, h += g;
          p = f + 1;
          for (v = d - f; p < v;) p++, k += a[l] - a[m], b[h] = Math.round(Ya.toFloat(k) * e), m += g, l += g, h += g;
          l = d - f;
          for (p = d; l < p;) l++, k += n - a[m], b[h] = Math.round(Ya.toFloat(k) * e), m += g, h += g
        }
        e = 1 / (f + f + 1);
        g = 4 * c;
        q = 0;
        for (u = c; q < u;) {
          h = q++;
          m = h = 4 * h + 3;
          l = h + f * g;
          p = a[h];
          n = a[h + g * (d - 1)];
          k = (f + 1) * p;
          v = 0;
          for (r = f; v < r;) t = v++, k += a[h + t * g];
          v = 0;
          for (r = f + 1; v < r;) v++, k += a[l] - p, b[h] = Math.round(Ya.toFloat(k) * e), l += g, h += g;
          p = f + 1;
          for (v = d - f; p < v;) p++, k += a[l] - a[m], b[h] = Math.round(Ya.toFloat(k) *
            e), m += g, l += g, h += g;
          l = d - f;
          for (p = d; l < p;) l++, k += n - a[m], b[h] = Math.round(Ya.toFloat(k) * e), m += g, h += g
        }
      };
      Sa.__boxBlurH = function(a, b, c, d, e, f) {
        for (var g = 1 / (e + e + 1), h, m, l, p, n, k, q = 0; q < d;) {
          m = h = q++ * c;
          l = h + e;
          p = a[4 * h + f];
          n = a[4 * (h + c - 1) + f];
          k = (e + 1) * p;
          for (var u = 0, v = e; u < v;) {
            var r = u++;
            k += a[4 * (h + r) + f]
          }
          u = 0;
          for (v = e + 1; u < v;) u++, k += a[4 * l + f] - p, b[4 * h + f] = Math.round(Ya.toFloat(k) * g), ++l, ++h;
          p = e + 1;
          for (u = c - e; p < u;) p++, k += a[4 * l + f] - a[4 * m + f], b[4 * h + f] = Math.round(Ya.toFloat(k) * g), ++l, ++m, ++h;
          l = c - e;
          for (p = c; l < p;) l++, k += n - a[4 * m + f], b[4 * h + f] = Math.round(Ya.toFloat(k) *
            g), ++m, ++h
        }
      };
      Sa.__boxBlurT = function(a, b, c, d, e, f) {
        for (var g = 1 / (e + e + 1), h = 4 * c, m, l, p, n, k, q, u = 0; u < c;) {
          l = m = 4 * u++ + f;
          p = m + e * h;
          n = a[m];
          k = a[m + h * (d - 1)];
          q = (e + 1) * n;
          for (var v = 0, r = e; v < r;) {
            var t = v++;
            q += a[m + t * h]
          }
          v = 0;
          for (r = e + 1; v < r;) v++, q += a[p] - n, b[m] = Math.round(Ya.toFloat(q) * g), p += h, m += h;
          n = e + 1;
          for (v = d - e; n < v;) n++, q += a[p] - a[l], b[m] = Math.round(Ya.toFloat(q) * g), l += h, p += h, m += h;
          p = d - e;
          for (n = d; p < n;) p++, q += k - a[l], b[m] = Math.round(Ya.toFloat(q) * g), l += h, m += h
        }
      };
      Sa.__calculateSourceOffset = function(a, b, c, d) {
        c -= b.x | 0;
        b = d - (b.y | 0);
        return 0 >
          c || 0 > b || c >= a.width || b >= a.height ? -1 : 4 * (b * (a.width | 0) + c)
      };
      Sa.__getBoxesForGaussianBlur = function(a, b) {
        var c = Math.floor(Math.sqrt(12 * a * a / b + 1));
        0 == c % 2 && --c;
        var d = c + 2;
        a = Math.round((12 * a * a - b * c * c - 4 * b * c - 3 * b) / (-4 * c - 4));
        for (var e = [], f = 0; f < b;) {
          var g = f++;
          e.push(g < a ? c : d)
        }
        return e
      };
      Sa.__pixelCompare = function(a, b) {
        var c = a >>> 24 & 255,
          d = b >>> 24 & 255;
        if (c != d) return Ya.gt(c, d) ? 1 : -1;
        c = a >>> 16 & 255;
        d = b >>> 16 & 255;
        if (c != d) return Ya.gt(c, d) ? 1 : -1;
        c = a >>> 8 & 255;
        d = b >>> 8 & 255;
        if (c != d) return Ya.gt(c, d) ? 1 : -1;
        c = a & 255;
        d = b & 255;
        return c != d ?
          Ya.gt(c, d) ? 1 : -1 : 0
      };
      Sa.__translatePixel = function(a, b, c, d, e, f, g) {
        c = 4 * (f * (c.width | 0) + e);
        b = Sa.__calculateSourceOffset(b, d, e, f);
        0 > b ? a[c] = a[c + 1] = a[c + 2] = a[c + 3] = 0 : (a[c] = a[b], a[c + 1] = a[b + 1], a[c + 2] = a[b + 2], g = Ya.toFloat(a[b + 3]) * g | 0, a[c + 3] = 0 > g ? 0 : 255 < g ? 255 : g)
      };
      var Me = function(a, b) {
        this.image = a;
        null == b ? this.rect = a.get_rect() : (0 > b.x && (b.x = 0), 0 > b.y && (b.y = 0), b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), 0 > b.width && (b.width = 0), 0 > b.height && (b.height = 0), this.rect = b);
        this.stride =
          a.buffer.get_stride();
        this.__update()
      };
      k["lime._internal.graphics._ImageDataUtil.ImageDataView"] = Me;
      Me.__name__ = "lime._internal.graphics._ImageDataUtil.ImageDataView";
      Me.prototype = {
        x: null,
        y: null,
        height: null,
        width: null,
        byteOffset: null,
        image: null,
        rect: null,
        stride: null,
        tempRect: null,
        clip: function(a, b, c, d) {
          null == this.tempRect && (this.tempRect = new Td);
          this.tempRect.setTo(a, b, c, d);
          this.rect.intersection(this.tempRect, this.rect);
          this.__update()
        },
        hasRow: function(a) {
          return 0 <= a ? a < this.height : !1
        },
        offset: function(a,
          b) {
          0 > a ? (this.rect.x += a, 0 > this.rect.x && (this.rect.x = 0)) : (this.rect.x += a, this.rect.width -= a);
          0 > b ? (this.rect.y += b, 0 > this.rect.y && (this.rect.y = 0)) : (this.rect.y += b, this.rect.height -= b);
          this.__update()
        },
        row: function(a) {
          return this.byteOffset + this.stride * a
        },
        __update: function() {
          this.x = Math.ceil(this.rect.x);
          this.y = Math.ceil(this.rect.y);
          this.width = Math.floor(this.rect.width);
          this.height = Math.floor(this.rect.height);
          this.byteOffset = this.stride * (this.y + this.image.offsetY) + 4 * (this.x + this.image.offsetX)
        },
        __class__: Me
      };
      var df = function() {};
      k["lime._internal.graphics.StackBlur"] = df;
      df.__name__ = "lime._internal.graphics.StackBlur";
      df.blur = function(a, b, c, d, e, f, g) {
        a.copyPixels(b, c, d);
        df.__stackBlurCanvasRGBA(a, c.width | 0, c.height | 0, e, f, g)
      };
      df.__stackBlurCanvasRGBA = function(a, b, c, d, e, f) {
        d = Math.round(d) >> 1;
        e = Math.round(e) >> 1;
        if (null != df.MUL_TABLE && (d >= df.MUL_TABLE.length && (d = df.MUL_TABLE.length - 1), e >= df.MUL_TABLE.length && (e = df.MUL_TABLE.length - 1), !(0 > d || 0 > e))) {
          1 > f && (f = 1);
          3 < f && (f = 3);
          a = a.get_data();
          var g, h, m = d + d + 1;
          var l = e +
            e + 1;
          var p = b - 1,
            n = c - 1,
            k = d + 1,
            q = e + 1,
            u = new Ji,
            v = u;
          var r = 1;
          for (var t = m; r < t;) r++, v = v.n = new Ji;
          v.n = u;
          var w = m = new Ji;
          r = 1;
          for (t = l; r < t;) r++, w = w.n = new Ji;
          w.n = m;
          for (var z = df.MUL_TABLE[d], Q = df.SHG_TABLE[d], O = df.MUL_TABLE[e], A = df.SHG_TABLE[e]; 0 < f;) {
            --f;
            var aa = h = 0;
            var B = z,
              D = Q;
            for (g = c;;) {
              var F = a[h];
              l = k * F;
              var x = a[h + 1];
              var G = k * x;
              var C = a[h + 2];
              var H = k * C;
              r = a[h + 3];
              var E = k * r;
              v = u;
              for (w = k; v.r = F, v.g = x, v.b = C, v.a = r, v = v.n, -1 < --w;);
              r = 1;
              for (t = k; r < t;) w = r++, w = h + ((p < w ? p : w) << 2), l += v.r = a[w], G += v.g = a[w + 1], H += v.b = a[w + 2], E += v.a = a[w + 3],
                v = v.n;
              t = u;
              v = 0;
              for (r = b; v < r;) w = v++, a[h++] = l * B >>> D, a[h++] = G * B >>> D, a[h++] = H * B >>> D, a[h++] = E * B >>> D, w = w + d + 1, w = aa + (w < p ? w : p) << 2, l -= t.r - (t.r = a[w]), G -= t.g - (t.g = a[w + 1]), H -= t.b - (t.b = a[w + 2]), E -= t.a - (t.a = a[w + 3]), t = t.n;
              aa += b;
              if (!(0 < --g)) break
            }
            B = O;
            D = A;
            g = 0;
            for (aa = b; g < aa;) {
              v = g++;
              h = v << 2;
              F = a[h];
              l = q * F;
              x = a[h + 1];
              G = q * x;
              C = a[h + 2];
              H = q * C;
              r = a[h + 3];
              E = q * r;
              w = m;
              h = 0;
              for (t = q; h < t;) h++, w.r = F, w.g = x, w.b = C, w.a = r, w = w.n;
              r = b;
              t = 1;
              for (F = e + 1; t < F;) x = t++, h = r + v << 2, l += w.r = a[h], G += w.g = a[h + 1], H += w.b = a[h + 2], E += w.a = a[h + 3], w = w.n, x < n && (r += b);
              h = v;
              t = m;
              if (0 <
                f)
                for (F = 0, x = c; F < x;) C = F++, w = h << 2, r = E * B >>> D, a[w + 3] = r, 0 < r ? (a[w] = l * B >>> D, a[w + 1] = G * B >>> D, a[w + 2] = H * B >>> D) : a[w] = a[w + 1] = a[w + 2] = 0, w = C + q, w = v + (w < n ? w : n) * b << 2, l -= t.r - (t.r = a[w]), G -= t.g - (t.g = a[w + 1]), H -= t.b - (t.b = a[w + 2]), E -= t.a - (t.a = a[w + 3]), t = t.n, h += b;
              else
                for (var K = 0, N = c; K < N;) {
                  var W = K++;
                  w = h << 2;
                  r = E * B >>> D;
                  a[w + 3] = r;
                  0 < r ? (r = 255 / r, F = (l * B >>> D) * r | 0, x = (G * B >>> D) * r | 0, C = (H * B >>> D) * r | 0, a[w] = 255 < F ? 255 : F, a[w + 1] = 255 < x ? 255 : x, a[w + 2] = 255 < C ? 255 : C) : a[w] = a[w + 1] = a[w + 2] = 0;
                  w = W + q;
                  w = v + (w < n ? w : n) * b << 2;
                  l -= t.r - (t.r = a[w]);
                  G -= t.g - (t.g = a[w + 1]);
                  H -=
                    t.b - (t.b = a[w + 2]);
                  E -= t.a - (t.a = a[w + 3]);
                  t = t.n;
                  h += b
                }
            }
          }
        }
      };
      var Ji = function() {
        this.a = this.b = this.g = this.r = 0;
        this.n = null
      };
      k["lime._internal.graphics.BlurStack"] = Ji;
      Ji.__name__ = "lime._internal.graphics.BlurStack";
      Ji.prototype = {
        r: null,
        g: null,
        b: null,
        a: null,
        n: null,
        __class__: Ji
      };
      var vr = function() {};
      k["lime._internal.macros.AssetsMacro"] = vr;
      vr.__name__ = "lime._internal.macros.AssetsMacro";
      var Ao = function(a) {
        this.i = 0;
        this.string = a;
        this.index = 0;
        this.endIndex = a.length
      };
      k["lime._internal.unifill.CodePointIter"] = Ao;
      Ao.__name__ = "lime._internal.unifill.CodePointIter";
      Ao.prototype = {
        string: null,
        index: null,
        endIndex: null,
        hasNext: function() {
          return this.index < this.endIndex
        },
        i: null,
        next: function() {
          var a = this.i = this.index,
            b = this.string;
          b = b.charCodeAt(this.index);
          this.index = a + (55296 <= b && 56319 >= b ? 2 : 1);
          b = this.string;
          return fg.codePointAt(b, this.i)
        },
        __class__: Ao
      };
      var Ki = function() {};
      k["lime._internal.unifill.Exception"] = Ki;
      Ki.__name__ = "lime._internal.unifill.Exception";
      Ki.prototype = {
        toString: function() {
          throw F.thrown(null);
        },
        __class__: Ki
      };
      var Bo = function(a) {
        this.code = a
      };
      k["lime._internal.unifill.InvalidCodePoint"] = Bo;
      Bo.__name__ = "lime._internal.unifill.InvalidCodePoint";
      Bo.__super__ = Ki;
      Bo.prototype = t(Ki.prototype, {
        code: null,
        toString: function() {
          return "InvalidCodePoint(code: " + this.code + ")"
        },
        __class__: Bo
      });
      var Ch = function(a) {
        this.index = a
      };
      k["lime._internal.unifill.InvalidCodeUnitSequence"] = Ch;
      Ch.__name__ = "lime._internal.unifill.InvalidCodeUnitSequence";
      Ch.__super__ = Ki;
      Ch.prototype = t(Ki.prototype, {
        index: null,
        toString: function() {
          return "InvalidCodeUnitSequence(index: " +
            this.index + ")"
        },
        __class__: Ch
      });
      var ef = function() {};
      k["lime._internal.unifill.InternalEncoding"] = ef;
      ef.__name__ = "lime._internal.unifill.InternalEncoding";
      ef.__properties__ = {
        get_internalEncoding: "get_internalEncoding"
      };
      ef.get_internalEncoding = function() {
        return "UTF-16"
      };
      ef.codeUnitAt = function(a, b) {
        return a.charCodeAt(b)
      };
      ef.codePointAt = function(a, b) {
        return fg.codePointAt(a, b)
      };
      ef.charAt = function(a, b) {
        var c = a.charCodeAt(b);
        return b = da.substr(a, b, 55296 <= c && 56319 >= c ? 2 : 1)
      };
      ef.codePointCount = function(a, b,
        c) {
        return fg.codePointCount(a, b, c)
      };
      ef.codePointWidthAt = function(a, b) {
        a = a.charCodeAt(b);
        return 55296 <= a && 56319 >= a ? 2 : 1
      };
      ef.codePointWidthBefore = function(a, b) {
        a = a.charCodeAt(b - 1);
        return 56320 <= a && 57343 >= a ? 2 : 1
      };
      ef.offsetByCodePoints = function(a, b, c) {
        if (0 <= c)
          for (var d = a.length, e = 0; e < c && b < d;) {
            var f = a.charCodeAt(b);
            b += 55296 <= f && 56319 >= f ? 2 : 1;
            ++e
          } else
            for (d = 0; d < -c && 0 < b;) f = a.charCodeAt(b - 1), b -= 56320 <= f && 57343 >= f ? 2 : 1, ++d;
        return b
      };
      ef.backwardOffsetByCodePoints = function(a, b, c) {
        c = -c;
        if (0 <= c)
          for (var d = a.length,
              e = 0; e < c && b < d;) {
            var f = a.charCodeAt(b);
            b += 55296 <= f && 56319 >= f ? 2 : 1;
            ++e
          } else
            for (d = 0; d < -c && 0 < b;) f = a.charCodeAt(b - 1), b -= 56320 <= f && 57343 >= f ? 2 : 1, ++d;
        return b
      };
      ef.fromCodePoint = function(a) {
        return 65535 >= a ? String.fromCodePoint(a) : String.fromCodePoint((a >> 10) + 55232) + String.fromCodePoint(a & 1023 | 56320)
      };
      ef.fromCodePoints = function(a) {
        var b = "";
        for (a = I(a); a.hasNext();) {
          var c = a.next();
          65535 >= c ? b += String.fromCodePoint(c) : (b += String.fromCodePoint((c >> 10) + 55232), b += String.fromCodePoint(c & 1023 | 56320))
        }
        return b
      };
      ef.validate =
        function(a) {
          fg.validate(a)
        };
      ef.isValidString = function(a) {
        try {
          return fg.validate(a), !0
        } catch (b) {
          pa.lastError = b;
          if (F.caught(b).unwrap() instanceof Ch) return !1;
          throw b;
        }
      };
      ef.encodeWith = function(a, b) {
        65535 >= b ? a(b) : (a((b >> 10) + 55232), a(b & 1023 | 56320))
      };
      var Aq = function(a, b, c) {
        this.i = 0;
        this.string = a;
        this.index = b;
        this.endIndex = c
      };
      k["lime._internal.unifill.InternalEncodingIter"] = Aq;
      Aq.__name__ = "lime._internal.unifill.InternalEncodingIter";
      Aq.prototype = {
        string: null,
        index: null,
        endIndex: null,
        hasNext: function() {
          return this.index <
            this.endIndex
        },
        i: null,
        next: function() {
          var a = this.i = this.index,
            b = this.string.charCodeAt(this.index);
          this.index = a + (55296 <= b && 56319 >= b ? 2 : 1);
          return this.i
        },
        __class__: Aq
      };
      var Sf = function() {};
      k["lime._internal.unifill.Unicode"] = Sf;
      Sf.__name__ = "lime._internal.unifill.Unicode";
      Sf.decodeSurrogate = function(a, b) {
        return a - 55232 << 10 | b & 1023
      };
      Sf.encodeHighSurrogate = function(a) {
        return (a >> 10) + 55232
      };
      Sf.encodeLowSurrogate = function(a) {
        return a & 1023 | 56320
      };
      Sf.isScalar = function(a) {
        return 0 <= a && 1114111 >= a && !(55296 <= a &&
          56319 >= a) ? !(56320 <= a && 57343 >= a) : !1
      };
      Sf.isHighSurrogate = function(a) {
        return 55296 <= a ? 56319 >= a : !1
      };
      Sf.isLowSurrogate = function(a) {
        return 56320 <= a ? 57343 >= a : !1
      };
      var vf = function() {};
      k["lime._internal.unifill.Unifill"] = vf;
      vf.__name__ = "lime._internal.unifill.Unifill";
      vf.uLength = function(a) {
        return fg.codePointCount(a, 0, a.length)
      };
      vf.uCharAt = function(a, b) {
        var c = a;
        if (0 <= b)
          for (var d = 0, e = c.length, f = 0; f < b && d < e;) {
            var g = c.charCodeAt(d);
            d += 55296 <= g && 56319 >= g ? 2 : 1;
            ++f
          } else
            for (e = d = 0; e < -b && 0 < d;) g = c.charCodeAt(d - 1), d -=
              56320 <= g && 57343 >= g ? 2 : 1, ++e;
        b = d;
        c = a;
        g = c.charCodeAt(b);
        return a = da.substr(c, b, 55296 <= g && 56319 >= g ? 2 : 1)
      };
      vf.uCharCodeAt = function(a, b) {
        var c = a;
        if (0 <= b)
          for (var d = 0, e = c.length, f = 0; f < b && d < e;) {
            var g = c.charCodeAt(d);
            d += 55296 <= g && 56319 >= g ? 2 : 1;
            ++f
          } else
            for (e = d = 0; e < -b && 0 < d;) g = c.charCodeAt(d - 1), d -= 56320 <= g && 57343 >= g ? 2 : 1, ++e;
        return fg.codePointAt(a, d)
      };
      vf.uCodePointAt = function(a, b) {
        var c = a;
        if (0 <= b)
          for (var d = 0, e = c.length, f = 0; f < b && d < e;) {
            var g = c.charCodeAt(d);
            d += 55296 <= g && 56319 >= g ? 2 : 1;
            ++f
          } else
            for (e = d = 0; e < -b && 0 < d;) g =
              c.charCodeAt(d - 1), d -= 56320 <= g && 57343 >= g ? 2 : 1, ++e;
        return fg.codePointAt(a, d)
      };
      vf.uIndexOf = function(a, b, c) {
        null == c && (c = 0);
        var d = a;
        if (0 <= c)
          for (var e = 0, f = d.length, g = 0; g < c && e < f;) {
            var h = d.charCodeAt(e);
            e += 55296 <= h && 56319 >= h ? 2 : 1;
            ++g
          } else
            for (f = e = 0; f < -c && 0 < e;) h = d.charCodeAt(e - 1), e -= 56320 <= h && 57343 >= h ? 2 : 1, ++f;
        e = a.indexOf(b, e);
        return 0 <= e ? fg.codePointCount(a, 0, e) : -1
      };
      vf.uLastIndexOf = function(a, b, c) {
        null == c && (c = a.length - 1);
        var d = a;
        if (0 <= c)
          for (var e = 0, f = d.length, g = 0; g < c && e < f;) {
            var h = d.charCodeAt(e);
            e += 55296 <=
              h && 56319 >= h ? 2 : 1;
            ++g
          } else
            for (f = e = 0; f < -c && 0 < e;) h = d.charCodeAt(e - 1), e -= 56320 <= h && 57343 >= h ? 2 : 1, ++f;
        e = a.lastIndexOf(b, e);
        return 0 <= e ? fg.codePointCount(a, 0, e) : -1
      };
      vf.uSplit = function(a, b) {
        if (0 == b.length) {
          b = [];
          for (var c, d = 0, e = a.length; d < e;) {
            c = d;
            var f = a.charCodeAt(d);
            d += 55296 <= f && 56319 >= f ? 2 : 1;
            f = a;
            var g = f.charCodeAt(c);
            c = da.substr(f, c, 55296 <= g && 56319 >= g ? 2 : 1);
            b.push(c)
          }
          return b
        }
        return a.split(b)
      };
      vf.uSubstr = function(a, b, c) {
        var d = 0 <= b ? 0 : a.length;
        var e = a;
        if (0 <= b)
          for (var f = e.length, g = 0; g < b && d < f;) {
            var h = e.charCodeAt(d);
            d += 55296 <= h && 56319 >= h ? 2 : 1;
            ++g
          } else
            for (f = 0; f < -b && 0 < d;) h = e.charCodeAt(d - 1), d -= 56320 <= h && 57343 >= h ? 2 : 1, ++f;
        b = d;
        if (null == c) c = a.length;
        else if (0 > c) c = b;
        else {
          e = a;
          if (0 <= c)
            for (d = b, f = e.length, g = 0; g < c && d < f;) h = e.charCodeAt(d), d += 55296 <= h && 56319 >= h ? 2 : 1, ++g;
          else
            for (d = b, f = 0; f < -c && 0 < d;) h = e.charCodeAt(d - 1), d -= 56320 <= h && 57343 >= h ? 2 : 1, ++f;
          c = d
        }
        return a.substring(b, c)
      };
      vf.uSubstring = function(a, b, c) {
        if (0 > b) b = 0;
        else {
          var d = a;
          if (0 <= b)
            for (var e = 0, f = d.length, g = 0; g < b && e < f;) {
              var h = d.charCodeAt(e);
              e += 55296 <= h && 56319 >= h ? 2 : 1;
              ++g
            } else
              for (f =
                e = 0; f < -b && 0 < e;) h = d.charCodeAt(e - 1), e -= 56320 <= h && 57343 >= h ? 2 : 1, ++f;
          b = e
        }
        if (null == c) c = a.length;
        else if (0 > c) c = 0;
        else {
          d = a;
          if (0 <= c)
            for (e = 0, f = d.length, g = 0; g < c && e < f;) h = d.charCodeAt(e), e += 55296 <= h && 56319 >= h ? 2 : 1, ++g;
          else
            for (f = e = 0; f < -c && 0 < e;) h = d.charCodeAt(e - 1), e -= 56320 <= h && 57343 >= h ? 2 : 1, ++f;
          c = e
        }
        return a.substring(b, c)
      };
      vf.uIterator = function(a) {
        return new Ao(a)
      };
      vf.uCompare = function(a, b) {
        for (var c, d = 0, e = a.length, f, g = 0, h = b.length; d < e && g < h;) {
          c = d;
          f = a.charCodeAt(d);
          d += 55296 <= f && 56319 >= f ? 2 : 1;
          c = fg.codePointAt(a, c);
          f = g;
          var m = b.charCodeAt(g);
          g += 55296 <= m && 56319 >= m ? 2 : 1;
          f = fg.codePointAt(b, f);
          if (c < f) return -1;
          if (c > f) return 1
        }
        return g < h ? -1 : d < e ? 1 : 0
      };
      vf.uToString = function(a) {
        var b = "";
        for (a = I(a); a.hasNext();) {
          var c = a.next();
          65535 >= c ? b += String.fromCodePoint(c) : (b += String.fromCodePoint((c >> 10) + 55232), b += String.fromCodePoint(c & 1023 | 56320))
        }
        return b
      };
      vf.uAddChar = function(a, b) {
        65535 >= b ? a.b += String.fromCodePoint(b) : (a.b += String.fromCodePoint((b >> 10) + 55232), a.b += String.fromCodePoint(b & 1023 | 56320))
      };
      var fg = {
          __properties__: {
            get_length: "get_length"
          },
          fromCodePoint: function(a) {
            return 65535 >= a ? String.fromCodePoint(a) : String.fromCodePoint((a >> 10) + 55232) + String.fromCodePoint(a & 1023 | 56320)
          },
          fromCodePoints: function(a) {
            var b = "";
            for (a = I(a); a.hasNext();) {
              var c = a.next();
              65535 >= c ? b += String.fromCodePoint(c) : (b += String.fromCodePoint((c >> 10) + 55232), b += String.fromCodePoint(c & 1023 | 56320))
            }
            return b
          },
          fromString: function(a) {
            return a
          },
          fromArray: function(a) {
            for (var b = "", c = 0; c < a.length;) {
              var d = a[c];
              ++c;
              b += String.fromCodePoint(d)
            }
            return b
          },
          encodeWith: function(a, b) {
            65535 >=
              b ? a(b) : (a((b >> 10) + 55232), a(b & 1023 | 56320))
          },
          codeUnitAt: function(a, b) {
            return a.charCodeAt(b)
          },
          codePointAt: function(a, b) {
            return Li.decode_code_point(a.length, function(b) {
              return a.charCodeAt(b)
            }, b)
          },
          charAt: function(a, b) {
            var c = a.charCodeAt(b);
            return da.substr(a, b, 55296 <= c && 56319 >= c ? 2 : 1)
          },
          codePointCount: function(a, b, c) {
            for (var d = 0; b < c;) {
              var e = a.charCodeAt(b);
              b += 55296 <= e && 56319 >= e ? 2 : 1;
              ++d
            }
            return d
          },
          codePointWidthAt: function(a, b) {
            a = a.charCodeAt(b);
            return 55296 <= a && 56319 >= a ? 2 : 1
          },
          codePointWidthBefore: function(a,
            b) {
            a = a.charCodeAt(b - 1);
            return 56320 <= a && 57343 >= a ? 2 : 1
          },
          offsetByCodePoints: function(a, b, c) {
            if (0 <= c)
              for (var d = a.length, e = 0; e < c && b < d;) {
                var f = a.charCodeAt(b);
                b += 55296 <= f && 56319 >= f ? 2 : 1;
                ++e
              } else
                for (d = 0; d < -c && 0 < b;) f = a.charCodeAt(b - 1), b -= 56320 <= f && 57343 >= f ? 2 : 1, ++d;
            return b
          },
          substr: function(a, b, c) {
            return da.substr(a, b, c)
          },
          validate: function(a) {
            for (var b = a.length, c = function(b) {
                return a.charCodeAt(b)
              }, d = 0; d < b;) {
              Li.decode_code_point(b, c, d);
              var e = a.charCodeAt(d);
              d += 55296 <= e && 56319 >= e ? 2 : 1
            }
          },
          toString: function(a) {
            return a
          },
          toArray: function(a) {
            for (var b = 0, c = a.length, d = []; b < c;) d.push(a.charCodeAt(b++));
            return d
          },
          _new: function(a) {
            return a
          },
          get_length: function(a) {
            return a.length
          },
          forward_offset_by_code_points: function(a, b, c) {
            for (var d = a.length, e = 0; e < c && b < d;) {
              var f = a.charCodeAt(b);
              b += 55296 <= f && 56319 >= f ? 2 : 1;
              ++e
            }
            return b
          },
          backward_offset_by_code_points: function(a, b, c) {
            for (var d = 0; d < c && 0 < b;) {
              var e = a.charCodeAt(b - 1);
              b -= 56320 <= e && 57343 >= e ? 2 : 1;
              ++d
            }
            return b
          }
        },
        Li = function() {};
      k["lime._internal.unifill._Utf16.Utf16Impl"] = Li;
      Li.__name__ =
        "lime._internal.unifill._Utf16.Utf16Impl";
      Li.code_point_width = function(a) {
        return 55296 <= a && 56319 >= a ? 2 : 1
      };
      Li.find_prev_code_point = function(a, b) {
        a = a(b - 1);
        return 56320 <= a && 57343 >= a ? 2 : 1
      };
      Li.encode_code_point = function(a, b) {
        65535 >= b ? a(b) : (a((b >> 10) + 55232), a(b & 1023 | 56320))
      };
      Li.decode_code_point = function(a, b, c) {
        if (0 > c || a <= c) throw F.thrown(new Ch(c));
        var d = b(c);
        if (55296 <= d && 56319 >= d) {
          if (0 > c + 1 || a <= c + 1) throw F.thrown(new Ch(c));
          a = b(c + 1);
          if (56320 <= a && 57343 >= a) return d - 55232 << 10 | a & 1023;
          throw F.thrown(new Ch(c));
        }
        if (56320 <= d && 57343 >= d) throw F.thrown(new Ch(c));
        return d
      };
      var Sj = function() {};
      k["lime.app.IModule"] = Sj;
      Sj.__name__ = "lime.app.IModule";
      Sj.__isInterface__ = !0;
      Sj.prototype = {
        __registerLimeModule: null,
        __unregisterLimeModule: null,
        __class__: Sj
      };
      var Tj = function() {
        this.onExit = new Yh
      };
      k["lime.app.Module"] = Tj;
      Tj.__name__ = "lime.app.Module";
      Tj.__interfaces__ = [Sj];
      Tj.prototype = {
        onExit: null,
        __registerLimeModule: function(a) {},
        __unregisterLimeModule: function(a) {},
        __class__: Tj
      };
      var Ad = function() {
        this.onCreateWindow =
          new Co;
        this.onUpdate = new Yh;
        this.onExit = new Yh;
        null == Ad.current && (Ad.current = this);
        this.meta = new ua;
        this.modules = [];
        this.__windowByID = new Za;
        this.__windows = [];
        this.__backend = new wo(this);
        this.__registerLimeModule(this);
        this.__preloader = new Do;
        this.__preloader.onProgress.add(r(this, this.onPreloadProgress));
        this.__preloader.onComplete.add(r(this, this.onPreloadComplete))
      };
      k["lime.app.Application"] = Ad;
      Ad.__name__ = "lime.app.Application";
      Ad.__super__ = Tj;
      Ad.prototype = t(Tj.prototype, {
        meta: null,
        modules: null,
        onUpdate: null,
        onCreateWindow: null,
        preloader: null,
        window: null,
        windows: null,
        __backend: null,
        __preloader: null,
        __window: null,
        __windowByID: null,
        __windows: null,
        addModule: function(a) {
          a.__registerLimeModule(this);
          this.modules.push(a)
        },
        createWindow: function(a) {
          a = this.__createWindow(a);
          this.__addWindow(a);
          return a
        },
        exec: function() {
          Ad.current = this;
          return this.__backend.exec()
        },
        onGamepadAxisMove: function(a, b, c) {},
        onGamepadButtonDown: function(a, b) {},
        onGamepadButtonUp: function(a, b) {},
        onGamepadConnect: function(a) {},
        onGamepadDisconnect: function(a) {},
        onJoystickAxisMove: function(a, b, c) {},
        onJoystickButtonDown: function(a, b) {},
        onJoystickButtonUp: function(a, b) {},
        onJoystickConnect: function(a) {},
        onJoystickDisconnect: function(a) {},
        onJoystickHatMove: function(a, b, c) {},
        onJoystickTrackballMove: function(a, b, c, d) {},
        onKeyDown: function(a, b) {},
        onKeyUp: function(a, b) {},
        onModuleExit: function(a) {},
        onMouseDown: function(a, b, c) {},
        onMouseMove: function(a, b) {},
        onMouseMoveRelative: function(a, b) {},
        onMouseUp: function(a, b, c) {},
        onMouseWheel: function(a,
          b, c) {},
        onPreloadComplete: function() {},
        onPreloadProgress: function(a, b) {},
        onRenderContextLost: function() {},
        onRenderContextRestored: function(a) {},
        onTextEdit: function(a, b, c) {},
        onTextInput: function(a) {},
        onTouchCancel: function(a) {},
        onTouchEnd: function(a) {},
        onTouchMove: function(a) {},
        onTouchStart: function(a) {},
        onWindowActivate: function() {},
        onWindowClose: function() {},
        onWindowCreate: function() {},
        onWindowDeactivate: function() {},
        onWindowDropFile: function(a) {},
        onWindowEnter: function() {},
        onWindowExpose: function() {},
        onWindowFocusIn: function() {},
        onWindowFocusOut: function() {},
        onWindowFullscreen: function() {},
        onWindowLeave: function() {},
        onWindowMove: function(a, b) {},
        onWindowMinimize: function() {},
        onWindowResize: function(a, b) {},
        onWindowRestore: function() {},
        removeModule: function(a) {
          null != a && (a.__unregisterLimeModule(this), da.remove(this.modules, a))
        },
        render: function(a) {},
        update: function(a) {},
        __addWindow: function(a) {
          if (null != a) {
            this.__windows.push(a);
            this.__windowByID.h[a.id] = a;
            var b = r(this, this.__onWindowClose);
            a.onClose.add(function() {
                b(a)
              },
              !1, -1E4);
            null == this.__window && (this.__window = a, a.onActivate.add(r(this, this.onWindowActivate)), a.onRenderContextLost.add(r(this, this.onRenderContextLost)), a.onRenderContextRestored.add(r(this, this.onRenderContextRestored)), a.onDeactivate.add(r(this, this.onWindowDeactivate)), a.onDropFile.add(r(this, this.onWindowDropFile)), a.onEnter.add(r(this, this.onWindowEnter)), a.onExpose.add(r(this, this.onWindowExpose)), a.onFocusIn.add(r(this, this.onWindowFocusIn)), a.onFocusOut.add(r(this, this.onWindowFocusOut)),
              a.onFullscreen.add(r(this, this.onWindowFullscreen)), a.onKeyDown.add(r(this, this.onKeyDown)), a.onKeyUp.add(r(this, this.onKeyUp)), a.onLeave.add(r(this, this.onWindowLeave)), a.onMinimize.add(r(this, this.onWindowMinimize)), a.onMouseDown.add(r(this, this.onMouseDown)), a.onMouseMove.add(r(this, this.onMouseMove)), a.onMouseMoveRelative.add(r(this, this.onMouseMoveRelative)), a.onMouseUp.add(r(this, this.onMouseUp)), a.onMouseWheel.add(r(this, this.onMouseWheel)), a.onMove.add(r(this, this.onWindowMove)), a.onRender.add(r(this,
                this.render)), a.onResize.add(r(this, this.onWindowResize)), a.onRestore.add(r(this, this.onWindowRestore)), a.onTextEdit.add(r(this, this.onTextEdit)), a.onTextInput.add(r(this, this.onTextInput)), this.onWindowCreate());
            this.onCreateWindow.dispatch(a)
          }
        },
        __createWindow: function(a) {
          a = new Mi(this, a);
          return -1 == a.id ? null : a
        },
        __registerLimeModule: function(a) {
          a.onUpdate.add(r(this, this.update));
          a.onExit.add(r(this, this.onModuleExit), !1, 0);
          a.onExit.add(r(this, this.__onModuleExit), !1, 0);
          for (a = Nd.devices.iterator(); a.hasNext();) {
            var b =
              a.next();
            this.__onGamepadConnect(b)
          }
          Nd.onConnect.add(r(this, this.__onGamepadConnect));
          for (a = bd.devices.iterator(); a.hasNext();) b = a.next(), this.__onJoystickConnect(b);
          bd.onConnect.add(r(this, this.__onJoystickConnect));
          sd.onCancel.add(r(this, this.onTouchCancel));
          sd.onStart.add(r(this, this.onTouchStart));
          sd.onMove.add(r(this, this.onTouchMove));
          sd.onEnd.add(r(this, this.onTouchEnd))
        },
        __removeWindow: function(a) {
          null != a && this.__windowByID.h.hasOwnProperty(a.id) && (this.__window == a && (this.__window = null), da.remove(this.__windows,
            a), this.__windowByID.remove(a.id), a.close(), 0 == this.__windows.length && Wa.exit(0))
        },
        __onGamepadConnect: function(a) {
          this.onGamepadConnect(a);
          var b = r(this, this.onGamepadAxisMove),
            c = function(c, d) {
              b(a, c, d)
            };
          a.onAxisMove.add(c);
          var d = r(this, this.onGamepadButtonDown);
          c = function(b) {
            d(a, b)
          };
          a.onButtonDown.add(c);
          var e = r(this, this.onGamepadButtonUp);
          c = function(b) {
            e(a, b)
          };
          a.onButtonUp.add(c);
          var f = r(this, this.onGamepadDisconnect);
          a.onDisconnect.add(function() {
            f(a)
          })
        },
        __onJoystickConnect: function(a) {
          this.onJoystickConnect(a);
          var b = r(this, this.onJoystickAxisMove),
            c = function(c, d) {
              b(a, c, d)
            };
          a.onAxisMove.add(c);
          var d = r(this, this.onJoystickButtonDown);
          c = function(b) {
            d(a, b)
          };
          a.onButtonDown.add(c);
          var e = r(this, this.onJoystickButtonUp);
          c = function(b) {
            e(a, b)
          };
          a.onButtonUp.add(c);
          var f = r(this, this.onJoystickDisconnect);
          a.onDisconnect.add(function() {
            f(a)
          });
          var g = r(this, this.onJoystickHatMove);
          c = function(b, c) {
            g(a, b, c)
          };
          a.onHatMove.add(c);
          var h = r(this, this.onJoystickTrackballMove);
          c = function(b, c, d) {
            h(a, b, c, d)
          };
          a.onTrackballMove.add(c)
        },
        __onModuleExit: function(a) {
          this.__backend.exit()
        },
        __onWindowClose: function(a) {
          if (this.__window == a) this.onWindowClose();
          this.__removeWindow(a)
        },
        __unregisterLimeModule: function(a) {
          a.onUpdate.remove(r(this, this.update));
          a.onExit.remove(r(this, this.__onModuleExit));
          a.onExit.remove(r(this, this.onModuleExit));
          Nd.onConnect.remove(r(this, this.__onGamepadConnect));
          bd.onConnect.remove(r(this, this.__onJoystickConnect));
          sd.onCancel.remove(r(this, this.onTouchCancel));
          sd.onStart.remove(r(this, this.onTouchStart));
          sd.onMove.remove(r(this, this.onTouchMove));
          sd.onEnd.remove(r(this, this.onTouchEnd));
          this.onModuleExit(0)
        },
        get_preloader: function() {
          return this.__preloader
        },
        get_window: function() {
          return this.__window
        },
        get_windows: function() {
          return this.__windows
        },
        __class__: Ad,
        __properties__: {
          get_windows: "get_windows",
          get_window: "get_window",
          get_preloader: "get_preloader"
        }
      });
      var Bq = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app.Event"] = Bq;
      Bq.__name__ = "lime.app.Event";
      Bq.prototype = {
        canceled: null,
        __listeners: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        dispatch: null,
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d =
              c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __class__: Bq
      };
      var lb = function(a, b) {
        null == b && (b = !1);
        if (null != a)
          if (b) b = new ee, b.future = this, Ve.queue({
            promise: b,
            work: a
          });
          else try {
            this.value =
              a(), this.isComplete = !0
          } catch (c) {
            pa.lastError = c, this.error = F.caught(c).unwrap(), this.isError = !0
          }
      };
      k["lime.app.Future"] = lb;
      lb.__name__ = "lime.app.Future";
      lb.ofEvents = function(a, b, c) {
        var d = new ee;
        a.add(function(a) {
          d.complete(a)
        }, !0);
        null != b && b.add(function(a) {
          d.error(a)
        }, !0);
        null != c && c.add(function(a, b) {
          d.progress(a, b)
        }, !0);
        return d.future
      };
      lb.withError = function(a) {
        var b = new lb;
        b.isError = !0;
        b.error = a;
        return b
      };
      lb.withValue = function(a) {
        var b = new lb;
        b.isComplete = !0;
        b.value = a;
        return b
      };
      lb.prototype = {
        error: null,
        isComplete: null,
        isError: null,
        value: null,
        __completeListeners: null,
        __errorListeners: null,
        __progressListeners: null,
        onComplete: function(a) {
          null != a && (this.isComplete ? a(this.value) : this.isError || (null == this.__completeListeners && (this.__completeListeners = []), this.__completeListeners.push(a)));
          return this
        },
        onError: function(a) {
          null != a && (this.isError ? a(this.error) : this.isComplete || (null == this.__errorListeners && (this.__errorListeners = []), this.__errorListeners.push(a)));
          return this
        },
        onProgress: function(a) {
          null !=
            a && (null == this.__progressListeners && (this.__progressListeners = []), this.__progressListeners.push(a));
          return this
        },
        ready: function(a) {
          this.isComplete || this.isError || Na.warn("Cannot block thread in JavaScript", {
            fileName: "lime/app/Future.hx",
            lineNumber: 208,
            className: "lime.app.Future",
            methodName: "ready"
          });
          return this
        },
        result: function(a) {
          null == a && (a = -1);
          this.ready(a);
          return this.isComplete ? this.value : null
        },
        then: function(a) {
          if (this.isComplete) return a(this.value);
          if (this.isError) {
            var b = new lb;
            b.isError = !0;
            b.error = this.error;
            return b
          }
          var c = new ee;
          this.onError(r(c, c.error));
          this.onProgress(r(c, c.progress));
          this.onComplete(function(b) {
            b = a(b);
            b.onError(r(c, c.error));
            b.onComplete(r(c, c.complete))
          });
          return c.future
        },
        __class__: lb
      };
      var Ve = function() {};
      k["lime.app._Future.FutureWork"] = Ve;
      Ve.__name__ = "lime.app._Future.FutureWork";
      Ve.queue = function(a) {
        null == Ve.threadPool && (Ve.threadPool = new Eo, Ve.threadPool.doWork.add(Ve.threadPool_doWork), Ve.threadPool.onComplete.add(Ve.threadPool_onComplete), Ve.threadPool.onError.add(Ve.threadPool_onError));
        Ve.threadPool.queue(a)
      };
      Ve.threadPool_doWork = function(a) {
        try {
          var b = a.work();
          Ve.threadPool.sendComplete({
            promise: a.promise,
            result: b
          })
        } catch (c) {
          pa.lastError = c, b = F.caught(c).unwrap(), Ve.threadPool.sendError({
            promise: a.promise,
            error: b
          })
        }
      };
      Ve.threadPool_onComplete = function(a) {
        a.promise.complete(a.result)
      };
      Ve.threadPool_onError = function(a) {
        a.promise.error(a.error)
      };
      var ee = function() {
        this.future = new lb
      };
      k["lime.app.Promise"] = ee;
      ee.__name__ = "lime.app.Promise";
      ee.prototype = {
        future: null,
        isComplete: null,
        isError: null,
        complete: function(a) {
          if (!this.future.isError && (this.future.isComplete = !0, this.future.value = a, null != this.future.__completeListeners)) {
            for (var b = 0, c = this.future.__completeListeners; b < c.length;) {
              var d = c[b];
              ++b;
              d(a)
            }
            this.future.__completeListeners = null
          }
          return this
        },
        completeWith: function(a) {
          a.onComplete(r(this, this.complete));
          a.onError(r(this, this.error));
          a.onProgress(r(this, this.progress));
          return this
        },
        error: function(a) {
          if (!this.future.isComplete && (this.future.isError = !0, this.future.error = a, null != this.future.__errorListeners)) {
            for (var b =
                0, c = this.future.__errorListeners; b < c.length;) {
              var d = c[b];
              ++b;
              d(a)
            }
            this.future.__errorListeners = null
          }
          return this
        },
        progress: function(a, b) {
          if (!this.future.isError && !this.future.isComplete && null != this.future.__progressListeners)
            for (var c = 0, d = this.future.__progressListeners; c < d.length;) {
              var e = d[c];
              ++c;
              e(a, b)
            }
          return this
        },
        get_isComplete: function() {
          return this.future.isComplete
        },
        get_isError: function() {
          return this.future.isError
        },
        __class__: ee,
        __properties__: {
          get_isError: "get_isError",
          get_isComplete: "get_isComplete"
        }
      };
      var Zh = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Dynamic_Void"] = Zh;
      Zh.__name__ = "lime.app._Event_Dynamic_Void";
      Zh.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0,
            a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Zh
      };
      var Fo = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Float_Float_Float_Void"] = Fo;
      Fo.__name__ = "lime.app._Event_Float_Float_Float_Void";
      Fo.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d =
              0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) &&
            (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b, c) {
          this.canceled = !1;
          for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
        },
        __class__: Fo
      };
      var Go = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Float_Float_Int_Void"] = Go;
      Go.__name__ = "lime.app._Event_Float_Float_Int_Void";
      Go.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b, c) {
          this.canceled = !1;
          for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
        },
        __class__: Go
      };
      var Uj = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Float_Float_Void"] = Uj;
      Uj.__name__ = "lime.app._Event_Float_Float_Void";
      Uj.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f,
                0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a =
            this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b) {
          this.canceled = !1;
          for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
        },
        __class__: Uj
      };
      var Ho = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Float_Float_lime_ui_MouseButton_Void"] = Ho;
      Ho.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseButton_Void";
      Ho.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d,
                a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b, c) {
          this.canceled = !1;
          for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]),
              !this.canceled););
        },
        __class__: Ho
      };
      var Io = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"] = Io;
      Io.__name__ = "lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void";
      Io.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f,
                0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b, c) {
          this.canceled = !1;
          for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
        },
        __class__: Io
      };
      var Jo = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Int_Float_Float_Void"] = Jo;
      Jo.__name__ = "lime.app._Event_Int_Float_Float_Void";
      Jo.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b =
              this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b, c) {
          this.canceled = !1;
          for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
        },
        __class__: Jo
      };
      var Ko = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Int_Float_Void"] = Ko;
      Ko.__name__ = "lime.app._Event_Int_Float_Void";
      Ko.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a,
          b) {
          this.canceled = !1;
          for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
        },
        __class__: Ko
      };
      var rm = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Int_Int_Void"] = rm;
      rm.__name__ = "lime.app._Event_Int_Int_Void";
      rm.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f,
                0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a =
            this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b) {
          this.canceled = !1;
          for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
        },
        __class__: rm
      };
      var Yh = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Int_Void"] = Yh;
      Yh.__name__ = "lime.app._Event_Int_Void";
      Yh.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b =
              this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Yh
      };
      var Lo = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = Lo;
      Lo.__name__ = "lime.app._Event_Int_lime_ui_JoystickHatPosition_Void";
      Lo.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0,
            a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b) {
          this.canceled = !1;
          for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
        },
        __class__: Lo
      };
      var Mo = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_String_Int_Int_Void"] = Mo;
      Mo.__name__ = "lime.app._Event_String_Int_Int_Void";
      Mo.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b],
            a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b, c) {
          this.canceled = !1;
          for (var d = this.__listeners, e = this.__repeat, f = 0; f < d.length && (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled););
        },
        __class__: Mo
      };
      var sm = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_String_Void"] = sm;
      sm.__name__ = "lime.app._Event_String_Void";
      sm.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b =
              0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners,
              c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: sm
      };
      var Pd = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_Void_Void"] = Pd;
      Pd.__name__ = "lime.app._Event_Void_Void";
      Pd.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f,
                0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function() {
          this.canceled = !1;
          for (var a = this.__listeners, b = this.__repeat, c = 0; c < a.length && (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled););
        },
        __class__: Pd
      };
      var tm = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_graphics_RenderContext_Void"] = tm;
      tm.__name__ = "lime.app._Event_lime_graphics_RenderContext_Void";
      tm.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b =
              this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: tm
      };
      var No = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = No;
      No.__name__ = "lime.app._Event_lime_ui_GamepadAxis_Float_Void";
      No.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0,
            a)
        },
        __listeners: null,
        dispatch: function(a, b) {
          this.canceled = !1;
          for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled););
        },
        __class__: No
      };
      var um = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_GamepadButton_Void"] = um;
      um.__name__ = "lime.app._Event_lime_ui_GamepadButton_Void";
      um.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b],
            a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: um
      };
      var Oo = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_Gamepad_Void"] = Oo;
      Oo.__name__ = "lime.app._Event_lime_ui_Gamepad_Void";
      Oo.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Oo
      };
      var Po = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_Joystick_Void"] = Po;
      Po.__name__ = "lime.app._Event_lime_ui_Joystick_Void";
      Po.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f,
                0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a =
            this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Po
      };
      var vm = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = vm;
      vm.__name__ = "lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void";
      vm.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d,
                a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a, b) {
          this.canceled = !1;
          for (var c = this.__listeners, d = this.__repeat, e = 0; e < c.length && (c[e](a, b), d[e] ? ++e : this.remove(c[e]),
              !this.canceled););
        },
        __class__: vm
      };
      var Ni = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_Touch_Void"] = Ni;
      Ni.__name__ = "lime.app._Event_lime_ui_Touch_Void";
      Ni.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0,
                !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0,
            a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Ni
      };
      var Co = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_lime_ui_Window_Void"] = Co;
      Co.__name__ = "lime.app._Event_lime_ui_Window_Void";
      Co.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a,
          b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <=
            --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Co
      };
      var Cq = function() {
        this.canceled = !1;
        this.__listeners = [];
        this.__priorities = [];
        this.__repeat = []
      };
      k["lime.app._Event_ofEvents_T_Void"] = Cq;
      Cq.__name__ = "lime.app._Event_ofEvents_T_Void";
      Cq.prototype = {
        canceled: null,
        __repeat: null,
        __priorities: null,
        add: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = !1);
          for (var d = 0, e = this.__priorities.length; d < e;) {
            var f = d++;
            if (c > this.__priorities[f]) {
              this.__listeners.splice(f, 0, a);
              this.__priorities.splice(f, 0, c);
              this.__repeat.splice(f, 0, !b);
              return
            }
          }
          this.__listeners.push(a);
          this.__priorities.push(c);
          this.__repeat.push(!b)
        },
        cancel: function() {
          this.canceled = !0
        },
        has: function(a) {
          for (var b = 0, c = this.__listeners; b < c.length;) {
            var d = c[b];
            ++b;
            if (Y.compareMethods(d, a)) return !0
          }
          return !1
        },
        remove: function(a) {
          for (var b = this.__listeners.length; 0 <= --b;) Y.compareMethods(this.__listeners[b], a) && (this.__listeners.splice(b, 1), this.__priorities.splice(b, 1), this.__repeat.splice(b, 1))
        },
        removeAll: function() {
          var a = this.__listeners.length;
          this.__listeners.splice(0, a);
          this.__priorities.splice(0, a);
          this.__repeat.splice(0, a)
        },
        __listeners: null,
        dispatch: function(a) {
          this.canceled = !1;
          for (var b = this.__listeners, c = this.__repeat, d = 0; d < b.length && (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled););
        },
        __class__: Cq
      };
      var Hb = function(a, b, c, d, e, f, g) {
        null == e && (e = -1);
        null == d && (d = -1);
        null == c && (c = 0);
        null == b && (b = 0);
        this.offsetX = b;
        this.offsetY = c;
        this.width = d;
        this.height = e;
        this.version = 0;
        null == g && (g = ye.CANVAS);
        this.type = g;
        if (null == a) {
          if (0 < d && 0 < e) switch (this.type._hx_index) {
            case 0:
              this.buffer = new Rf(null, d, e);
              va.createCanvas(this, d, e);
              null != f && 0 != f && this.fillRect(new Td(0, 0, d, e), f);
              break;
            case 1:
              a =
                d * e * 4, a = null != a ? new Uint8Array(a) : null, this.buffer = new Rf(a, d, e), null != f && 0 != f && this.fillRect(new Td(0, 0, d, e), f)
          }
        } else this.__fromImageBuffer(a)
      };
      k["lime.graphics.Image"] = Hb;
      Hb.__name__ = "lime.graphics.Image";
      Hb.fromBase64 = function(a, b) {
        if (null == a) return null;
        var c = new Hb;
        c.__fromBase64(a, b);
        return c
      };
      Hb.fromBitmapData = function(a) {
        return null == a ? null : a.image
      };
      Hb.fromBytes = function(a) {
        if (null == a) return null;
        var b = new Hb;
        return b.__fromBytes(a) ? b : null
      };
      Hb.fromCanvas = function(a) {
        if (null == a) return null;
        var b = new Rf(null, a.width, a.height);
        b.set_src(a);
        a = new Hb(b);
        a.type = ye.CANVAS;
        return a
      };
      Hb.fromFile = function(a) {
        if (null == a) return null;
        var b = new Hb;
        return b.__fromFile(a) ? b : null
      };
      Hb.fromImageElement = function(a) {
        if (null == a) return null;
        var b = new Rf(null, a.width, a.height);
        b.set_src(a);
        a = new Hb(b);
        a.type = ye.CANVAS;
        return a
      };
      Hb.loadFromBase64 = function(a, b) {
        return null == a || null == b ? lb.withValue(null) : Ua.loadImage("data:" + b + ";base64," + a)
      };
      Hb.loadFromBytes = function(a) {
        if (null == a) return lb.withValue(null);
        if (Hb.__isPNG(a)) var b = "image/png";
        else if (Hb.__isJPG(a)) b = "image/jpeg";
        else if (Hb.__isGIF(a)) b = "image/gif";
        else if (Hb.__isWebP(a)) b = "image/webp";
        else return lb.withValue(null);
        return Ua.loadImageFromBytes(a, b)
      };
      Hb.loadFromFile = function(a) {
        return null == a ? lb.withValue(null) : Ua.loadImage(a)
      };
      Hb.__isGIF = function(a) {
        if (null == a || 6 > a.length) return !1;
        a = a.getString(0, 6);
        return "GIF87a" != a ? "GIF89a" == a : !0
      };
      Hb.__isJPG = function(a) {
        return null == a || 4 > a.length ? !1 : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2] ? 217 ==
          a.b[a.length - 1] : !1
      };
      Hb.__isPNG = function(a) {
        return null == a || 8 > a.length ? !1 : 137 == a.b[0] && 80 == a.b[1] && 78 == a.b[2] && 71 == a.b[3] && 13 == a.b[4] && 10 == a.b[5] && 26 == a.b[6] ? 10 == a.b[7] : !1
      };
      Hb.__isWebP = function(a) {
        return null == a || 16 > a.length ? !1 : "RIFF" == a.getString(0, 4) ? "WEBP" == a.getString(8, 4) : !1
      };
      Hb.prototype = {
        buffer: null,
        dirty: null,
        height: null,
        offsetX: null,
        offsetY: null,
        rect: null,
        type: null,
        version: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
          if (null != this.buffer) {
            this.type == ye.CANVAS ? va.convertToCanvas(this) : va.convertToData(this);
            var a = new Hb(this.buffer.clone(), this.offsetX, this.offsetY, this.width, this.height, null, this.type);
            a.version = this.version;
            return a
          }
          return new Hb(null, this.offsetX, this.offsetY, this.width, this.height, null, this.type)
        },
        colorTransform: function(a, b) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a) switch (this.type._hx_index) {
            case 0:
              va.colorTransform(this, a, b);
              break;
            case 1:
              va.convertToData(this);
              Sa.colorTransform(this, a, b);
              break;
            case 2:
              a.offset(this.offsetX, this.offsetY), this.buffer.__srcBitmapData.colorTransform(a.__toFlashRectangle(),
                Od.__toFlashColorTransform(b))
          }
        },
        copyChannel: function(a, b, c, d, e) {
          b = this.__clipRect(b);
          if (null != this.buffer && null != b && !(e == of.ALPHA && !this.get_transparent() || 0 >= b.width || 0 >= b.height)) switch (b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height - b.y), this.type._hx_index) {
            case 0:
              va.copyChannel(this, a, b, c, d, e);
              break;
            case 1:
              va.convertToData(this);
              va.convertToData(a);
              Sa.copyChannel(this, a, b, c, d, e);
              break;
            case 2:
              switch (d._hx_index) {
                case 0:
                  var f = 1;
                  break;
                case 1:
                  f = 2;
                  break;
                case 2:
                  f =
                    4;
                  break;
                case 3:
                  f = 8
              }
              switch (e._hx_index) {
                case 0:
                  var g = 1;
                  break;
                case 1:
                  g = 2;
                  break;
                case 2:
                  g = 4;
                  break;
                case 3:
                  g = 8
              }
              b.offset(a.offsetX, a.offsetY);
              c.offset(this.offsetX, this.offsetY);
              this.buffer.__srcBitmapData.copyChannel(a.buffer.get_src(), b.__toFlashRectangle(), c.__toFlashPoint(), f, g)
          }
        },
        copyPixels: function(a, b, c, d, e, f) {
          null == f && (f = !1);
          if (null != this.buffer && null != a && !(0 >= b.width || 0 >= b.height || 0 >= this.width || 0 >= this.height)) switch (b.x + b.width > a.width && (b.width = a.width - b.x), b.y + b.height > a.height && (b.height = a.height -
              b.y), 0 > b.x && (b.width += b.x, b.x = 0), 0 > b.y && (b.height += b.y, b.y = 0), c.x + b.width > this.width && (b.width = this.width - c.x), c.y + b.height > this.height && (b.height = this.height - c.y), 0 > c.x && (b.width += c.x, b.x -= c.x, c.x = 0), 0 > c.y && (b.height += c.y, b.y -= c.y, c.y = 0), a == this && c.x < b.get_right() && c.y < b.get_bottom() && (a = this.clone()), d == a && (null == e || 0 == e.x && 0 == e.y) && (e = d = null), this.type._hx_index) {
            case 0:
              null != d ? (va.convertToData(this), va.convertToData(a), null != d && va.convertToData(d), Sa.copyPixels(this, a, b, c, d, e, f)) : (va.convertToCanvas(this),
                va.convertToCanvas(a), va.copyPixels(this, a, b, c, d, e, f));
              break;
            case 1:
              va.convertToData(this);
              va.convertToData(a);
              null != d && va.convertToData(d);
              Sa.copyPixels(this, a, b, c, d, e, f);
              break;
            case 2:
              b.offset(a.offsetX, a.offsetY), c.offset(this.offsetX, this.offsetY), null != d && null != e && e.offset(d.offsetX, d.offsetY), this.buffer.__srcBitmapData.copyPixels(a.buffer.__srcBitmapData, b.__toFlashRectangle(), c.__toFlashPoint(), null != d ? d.buffer.get_src() : null, null != e ? e.__toFlashPoint() : null, f)
          }
        },
        encode: function(a, b) {
          null ==
            b && (b = 90);
          if (null == a) return Rj.encode(this);
          switch (a._hx_index) {
            case 0:
              return zq.encode(this);
            case 1:
              return om.encode(this, b);
            case 2:
              return Rj.encode(this)
          }
        },
        fillRect: function(a, b, c) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a) switch (this.type._hx_index) {
            case 0:
              va.fillRect(this, a, b, c);
              break;
            case 1:
              va.convertToData(this);
              if (0 == this.buffer.data.length) break;
              Sa.fillRect(this, a, b, c);
              break;
            case 2:
              a.offset(this.offsetX, this.offsetY);
              if (null == c) b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 &
                255;
              else switch (c) {
                case 1:
                  break;
                case 2:
                  b = (b & 255) << 24 | (b >>> 8 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 24 & 255;
                  break;
                default:
                  b = (b & 255) << 24 | (b >>> 24 & 255) << 16 | (b >>> 16 & 255) << 8 | b >>> 8 & 255
              }
              this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b)
          }
        },
        floodFill: function(a, b, c, d) {
          if (null != this.buffer) switch (this.type._hx_index) {
            case 0:
              va.floodFill(this, a, b, c, d);
              break;
            case 1:
              va.convertToData(this);
              Sa.floodFill(this, a, b, c, d);
              break;
            case 2:
              if (null == d) c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
              else switch (d) {
                case 1:
                  break;
                case 2:
                  c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                  break;
                default:
                  c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
              }
              this.buffer.__srcBitmapData.floodFill(a + this.offsetX, b + this.offsetY, c)
          }
        },
        getColorBoundsRect: function(a, b, c, d) {
          null == c && (c = !0);
          if (null == this.buffer) return null;
          switch (this.type._hx_index) {
            case 0:
              return va.convertToData(this), Sa.getColorBoundsRect(this, a, b, c, d);
            case 1:
              return Sa.getColorBoundsRect(this, a, b, c, d);
            case 2:
              return a = this.buffer.__srcBitmapData.getColorBoundsRect(a,
                b, c), new Td(a.x, a.y, a.width, a.height);
            default:
              return null
          }
        },
        getPixel: function(a, b, c) {
          if (null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height) return 0;
          switch (this.type._hx_index) {
            case 0:
              return va.getPixel(this, a, b, c);
            case 1:
              return va.convertToData(this), Sa.getPixel(this, a, b, c);
            case 2:
              a = this.buffer.__srcBitmapData.getPixel(a + this.offsetX, b + this.offsetY);
              if (null == c) return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255;
              switch (c) {
                case 1:
                  return a;
                case 2:
                  return (a & 255) << 24 | (a >>> 8 & 255) << 16 | (a >>>
                    16 & 255) << 8 | a >>> 24 & 255;
                default:
                  return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255
              }
            default:
              return 0
          }
        },
        getPixel32: function(a, b, c) {
          if (null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height) return 0;
          switch (this.type._hx_index) {
            case 0:
              return va.getPixel32(this, a, b, c);
            case 1:
              return va.convertToData(this), Sa.getPixel32(this, a, b, c);
            case 2:
              a = this.buffer.__srcBitmapData.getPixel32(a + this.offsetX, b + this.offsetY);
              if (null == c) return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255;
              switch (c) {
                case 1:
                  return a;
                case 2:
                  return (a & 255) << 24 | (a >>> 8 & 255) << 16 | (a >>> 16 & 255) << 8 | a >>> 24 & 255;
                default:
                  return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255
              }
            default:
              return 0
          }
        },
        getPixels: function(a, b) {
          if (null == this.buffer) return null;
          switch (this.type._hx_index) {
            case 0:
              return va.getPixels(this, a, b);
            case 1:
              return va.convertToData(this), Sa.getPixels(this, a, b);
            case 2:
              return null;
            default:
              return null
          }
        },
        merge: function(a, b, c, d, e, f, g) {
          if (null != this.buffer && null != a) switch (this.type._hx_index) {
            case 0:
              va.convertToCanvas(this);
              va.merge(this,
                a, b, c, d, e, f, g);
              break;
            case 1:
              va.convertToData(this);
              va.convertToData(a);
              Sa.merge(this, a, b, c, d, e, f, g);
              break;
            case 2:
              b.offset(this.offsetX, this.offsetY), this.buffer.__srcBitmapData.merge(a.buffer.__srcBitmapData, b.__toFlashRectangle(), c.__toFlashPoint(), d, e, f, g)
          }
        },
        resize: function(a, b) {
          switch (this.type._hx_index) {
            case 0:
              va.resize(this, a, b);
              break;
            case 1:
              Sa.resize(this, a, b)
          }
          this.buffer.width = a;
          this.buffer.height = b;
          this.offsetY = this.offsetX = 0;
          this.width = a;
          this.height = b
        },
        scroll: function(a, b) {
          if (null != this.buffer) switch (this.type._hx_index) {
            case 0:
              va.scroll(this,
                a, b);
              break;
            case 1:
              this.copyPixels(this, this.get_rect(), new be(a, b));
              break;
            case 2:
              this.buffer.__srcBitmapData.scroll(a + this.offsetX, b + this.offsetX)
          }
        },
        setPixel: function(a, b, c, d) {
          if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height)) switch (this.type._hx_index) {
            case 0:
              va.setPixel(this, a, b, c, d);
              break;
            case 1:
              va.convertToData(this);
              Sa.setPixel(this, a, b, c, d);
              break;
            case 2:
              if (null == d) c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
              else switch (d) {
                case 1:
                  break;
                case 2:
                  c = (c & 255) << 24 | (c >>> 8 &
                    255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                  break;
                default:
                  c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
              }
              this.buffer.__srcBitmapData.setPixel(a + this.offsetX, b + this.offsetX, c)
          }
        },
        setPixel32: function(a, b, c, d) {
          if (!(null == this.buffer || 0 > a || 0 > b || a >= this.width || b >= this.height)) switch (this.type._hx_index) {
            case 0:
              va.setPixel32(this, a, b, c, d);
              break;
            case 1:
              va.convertToData(this);
              Sa.setPixel32(this, a, b, c, d);
              break;
            case 2:
              if (null == d) c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255;
              else switch (d) {
                case 1:
                  break;
                case 2:
                  c = (c & 255) << 24 | (c >>> 8 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 24 & 255;
                  break;
                default:
                  c = (c & 255) << 24 | (c >>> 24 & 255) << 16 | (c >>> 16 & 255) << 8 | c >>> 8 & 255
              }
              this.buffer.__srcBitmapData.setPixel32(a + this.offsetX, b + this.offsetY, c)
          }
        },
        setPixels: function(a, b, c, d) {
          a = this.__clipRect(a);
          if (null != this.buffer && null != a) switch (null == d && (d = Cg.BIG_ENDIAN), this.type._hx_index) {
            case 0:
              va.setPixels(this, a, b, c, d);
              break;
            case 1:
              va.convertToData(this), Sa.setPixels(this, a, b, c, d)
          }
        },
        threshold: function(a, b, c, d, e, f, g, h, m) {
          null == h && (h = !1);
          null ==
            g && (g = -1);
          null == f && (f = 0);
          if (null == this.buffer || null == a || null == b) return 0;
          switch (this.type._hx_index) {
            case 0:
            case 1:
              return va.convertToData(this), va.convertToData(a), Sa.threshold(this, a, b, c, d, e, f, g, h, m);
            case 2:
              if (null == m) {
                var l = f;
                f = (l & 255) << 24 | (l >>> 24 & 255) << 16 | (l >>> 16 & 255) << 8 | l >>> 8 & 255
              } else switch (m) {
                case 1:
                  break;
                case 2:
                  l = f;
                  f = (l & 255) << 24 | (l >>> 8 & 255) << 16 | (l >>> 16 & 255) << 8 | l >>> 24 & 255;
                  break;
                default:
                  l = f, f = (l & 255) << 24 | (l >>> 24 & 255) << 16 | (l >>> 16 & 255) << 8 | l >>> 8 & 255
              }
              if (null == m) l = g, g = (l & 255) << 24 | (l >>> 24 & 255) << 16 |
                (l >>> 16 & 255) << 8 | l >>> 8 & 255;
              else switch (m) {
                case 1:
                  break;
                case 2:
                  l = g;
                  g = (l & 255) << 24 | (l >>> 8 & 255) << 16 | (l >>> 16 & 255) << 8 | l >>> 24 & 255;
                  break;
                default:
                  l = g, g = (l & 255) << 24 | (l >>> 24 & 255) << 16 | (l >>> 16 & 255) << 8 | l >>> 8 & 255
              }
              b.offset(a.offsetX, a.offsetY);
              c.offset(this.offsetX, this.offsetY);
              return this.buffer.__srcBitmapData.threshold(a.buffer.get_src(), b.__toFlashRectangle(), c.__toFlashPoint(), d, e, f, g, h)
          }
          return 0
        },
        __clipRect: function(a) {
          return null == a || 0 > a.x && (a.width -= -a.x, a.x = 0, 0 >= a.x + a.width) || 0 > a.y && (a.height -= -a.y, a.y =
            0, 0 >= a.y + a.height) || a.x + a.width >= this.width && (a.width -= a.x + a.width - this.width, 0 >= a.width) || a.y + a.height >= this.height && (a.height -= a.y + a.height - this.height, 0 >= a.height) ? null : a
        },
        __fromBase64: function(a, b, c) {
          var d = this,
            e = new Image;
          e.addEventListener("load", function(a) {
            d.buffer = new Rf(null, e.width, e.height);
            d.buffer.__srcImage = e;
            d.offsetX = 0;
            d.offsetY = 0;
            d.width = d.buffer.width;
            d.height = d.buffer.height;
            null != c && c(d)
          }, !1);
          e.src = "data:" + b + ";base64," + a
        },
        __fromBytes: function(a, b) {
          if (Hb.__isPNG(a)) var c = "image/png";
          else if (Hb.__isJPG(a)) c = "image/jpeg";
          else if (Hb.__isGIF(a)) c = "image/gif";
          else return !1;
          this.__fromBase64(Qf.encode(a), c, b);
          return !0
        },
        __fromFile: function(a, b, c) {
          var d = this,
            e = new Image;
          Ua.__isSameOrigin(a) || (e.crossOrigin = "Anonymous");
          e.onload = function(a) {
            d.buffer = new Rf(null, e.width, e.height);
            d.buffer.__srcImage = e;
            d.width = e.width;
            d.height = e.height;
            null != b && b(d)
          };
          e.onerror = function(a) {
            null != c && c()
          };
          e.src = a;
          return !0
        },
        __fromImageBuffer: function(a) {
          this.buffer = a;
          null != a && (-1 == this.width && (this.width = a.width),
            -1 == this.height && (this.height = a.height))
        },
        get_data: function() {
          null == this.buffer.data && 0 < this.buffer.width && 0 < this.buffer.height && va.convertToData(this);
          return this.buffer.data
        },
        set_data: function(a) {
          return this.buffer.data = a
        },
        get_format: function() {
          return this.buffer.format
        },
        set_format: function(a) {
          this.buffer.format != a && 1 == this.type._hx_index && Sa.setFormat(this, a);
          return this.buffer.format = a
        },
        get_powerOfTwo: function() {
          return 0 != this.buffer.width && (this.buffer.width & ~this.buffer.width + 1) == this.buffer.width ?
            0 != this.buffer.height ? (this.buffer.height & ~this.buffer.height + 1) == this.buffer.height : !1 : !1
        },
        set_powerOfTwo: function(a) {
          if (a != this.get_powerOfTwo()) {
            for (var b = 1, c = 1; b < this.buffer.width;) b <<= 1;
            for (; c < this.buffer.height;) c <<= 1;
            if (b == this.buffer.width && c == this.buffer.height) return a;
            switch (this.type._hx_index) {
              case 0:
                va.convertToData(this);
                Sa.resizeBuffer(this, b, c);
                break;
              case 1:
                Sa.resizeBuffer(this, b, c)
            }
          }
          return a
        },
        get_premultiplied: function() {
          return this.buffer.premultiplied
        },
        set_premultiplied: function(a) {
          if (a &&
            !this.buffer.premultiplied) switch (this.type._hx_index) {
            case 0:
            case 1:
              va.convertToData(this), Sa.multiplyAlpha(this)
          } else !a && this.buffer.premultiplied && 1 == this.type._hx_index && (va.convertToData(this), Sa.unmultiplyAlpha(this));
          return a
        },
        get_rect: function() {
          return new Td(0, 0, this.width, this.height)
        },
        get_src: function() {
          null != this.buffer.__srcCanvas || null == this.buffer.data && this.type != ye.DATA || va.convertToCanvas(this);
          return this.buffer.get_src()
        },
        set_src: function(a) {
          return this.buffer.set_src(a)
        },
        get_transparent: function() {
          return null ==
            this.buffer ? !1 : this.buffer.transparent
        },
        set_transparent: function(a) {
          return null == this.buffer ? !1 : this.buffer.transparent = a
        },
        __class__: Hb,
        __properties__: {
          set_transparent: "set_transparent",
          get_transparent: "get_transparent",
          set_src: "set_src",
          get_src: "get_src",
          get_rect: "get_rect",
          set_premultiplied: "set_premultiplied",
          get_premultiplied: "get_premultiplied",
          set_powerOfTwo: "set_powerOfTwo",
          get_powerOfTwo: "get_powerOfTwo",
          set_format: "set_format",
          get_format: "get_format",
          set_data: "set_data",
          get_data: "get_data"
        }
      };
      var Rf = function(a, b, c, d, e) {
        null == d && (d = 32);
        null == c && (c = 0);
        null == b && (b = 0);
        this.data = a;
        this.width = b;
        this.height = c;
        this.bitsPerPixel = d;
        this.format = null == e ? 0 : e;
        this.premultiplied = !1;
        this.transparent = !0
      };
      k["lime.graphics.ImageBuffer"] = Rf;
      Rf.__name__ = "lime.graphics.ImageBuffer";
      Rf.prototype = {
        bitsPerPixel: null,
        data: null,
        format: null,
        height: null,
        premultiplied: null,
        transparent: null,
        width: null,
        __srcBitmapData: null,
        __srcCanvas: null,
        __srcContext: null,
        __srcCustom: null,
        __srcImage: null,
        __srcImageData: null,
        clone: function() {
          var a =
            new Rf(this.data, this.width, this.height, this.bitsPerPixel);
          if (null != this.data) {
            var b = this.data.byteLength,
              c = null,
              d = null,
              e = null,
              f = null,
              g = null;
            b = null != b ? new Uint8Array(b) : null != c ? new Uint8Array(c) : null != d ? new Uint8Array(d.__array) : null != e ? new Uint8Array(e) : null != f ? null == g ? new Uint8Array(f, 0) : new Uint8Array(f, 0, g) : null;
            a.data = b;
            d = c = b = null;
            e = this.data;
            g = f = null;
            b = null != b ? new Uint8Array(b) : null != c ? new Uint8Array(c) : null != d ? new Uint8Array(d.__array) : null != e ? new Uint8Array(e) : null != f ? null == g ? new Uint8Array(f,
              0) : new Uint8Array(f, 0, g) : null;
            a.data.set(b)
          } else null != this.__srcImageData ? (a.__srcCanvas = window.document.createElement("canvas"), a.__srcContext = a.__srcCanvas.getContext("2d"), a.__srcCanvas.width = this.__srcImageData.width, a.__srcCanvas.height = this.__srcImageData.height, a.__srcImageData = a.__srcContext.createImageData(this.__srcImageData.width, this.__srcImageData.height), b = new Uint8ClampedArray(this.__srcImageData.data), a.__srcImageData.data.set(b)) : null != this.__srcCanvas ? (a.__srcCanvas = window.document.createElement("canvas"),
            a.__srcContext = a.__srcCanvas.getContext("2d"), a.__srcCanvas.width = this.__srcCanvas.width, a.__srcCanvas.height = this.__srcCanvas.height, a.__srcContext.drawImage(this.__srcCanvas, 0, 0)) : a.__srcImage = this.__srcImage;
          a.bitsPerPixel = this.bitsPerPixel;
          a.format = this.format;
          a.premultiplied = this.premultiplied;
          a.transparent = this.transparent;
          return a
        },
        get_src: function() {
          return null != this.__srcImage ? this.__srcImage : this.__srcCanvas
        },
        set_src: function(a) {
          a instanceof Image ? this.__srcImage = a : a instanceof HTMLCanvasElement &&
            (this.__srcCanvas = a, this.__srcContext = this.__srcCanvas.getContext("2d"));
          return a
        },
        get_stride: function() {
          return this.width * (this.bitsPerPixel / 8 | 0)
        },
        __class__: Rf,
        __properties__: {
          get_stride: "get_stride",
          set_src: "set_src",
          get_src: "get_src"
        }
      };
      var of = O["lime.graphics.ImageChannel"] = {
        __ename__: "lime.graphics.ImageChannel",
        __constructs__: null,
        RED: {
          _hx_name: "RED",
          _hx_index: 0,
          __enum__: "lime.graphics.ImageChannel",
          toString: v
        },
        GREEN: {
          _hx_name: "GREEN",
          _hx_index: 1,
          __enum__: "lime.graphics.ImageChannel",
          toString: v
        },
        BLUE: {
          _hx_name: "BLUE",
          _hx_index: 2,
          __enum__: "lime.graphics.ImageChannel",
          toString: v
        },
        ALPHA: {
          _hx_name: "ALPHA",
          _hx_index: 3,
          __enum__: "lime.graphics.ImageChannel",
          toString: v
        }
      };
      of.__constructs__ = [of.RED, of.GREEN, of.BLUE, of.ALPHA];
      var wm = O["lime.graphics.ImageFileFormat"] = {
        __ename__: "lime.graphics.ImageFileFormat",
        __constructs__: null,
        BMP: {
          _hx_name: "BMP",
          _hx_index: 0,
          __enum__: "lime.graphics.ImageFileFormat",
          toString: v
        },
        JPEG: {
          _hx_name: "JPEG",
          _hx_index: 1,
          __enum__: "lime.graphics.ImageFileFormat",
          toString: v
        },
        PNG: {
          _hx_name: "PNG",
          _hx_index: 2,
          __enum__: "lime.graphics.ImageFileFormat",
          toString: v
        }
      };
      wm.__constructs__ = [wm.BMP, wm.JPEG, wm.PNG];
      var ye = O["lime.graphics.ImageType"] = {
        __ename__: "lime.graphics.ImageType",
        __constructs__: null,
        CANVAS: {
          _hx_name: "CANVAS",
          _hx_index: 0,
          __enum__: "lime.graphics.ImageType",
          toString: v
        },
        DATA: {
          _hx_name: "DATA",
          _hx_index: 1,
          __enum__: "lime.graphics.ImageType",
          toString: v
        },
        FLASH: {
          _hx_name: "FLASH",
          _hx_index: 2,
          __enum__: "lime.graphics.ImageType",
          toString: v
        },
        CUSTOM: {
          _hx_name: "CUSTOM",
          _hx_index: 3,
          __enum__: "lime.graphics.ImageType",
          toString: v
        }
      };
      ye.__constructs__ = [ye.CANVAS, ye.DATA, ye.FLASH, ye.CUSTOM];
      var zo = function() {};
      k["lime.graphics.RenderContext"] = zo;
      zo.__name__ = "lime.graphics.RenderContext";
      zo.prototype = {
        attributes: null,
        cairo: null,
        canvas2D: null,
        dom: null,
        flash: null,
        gl: null,
        gles2: null,
        gles3: null,
        type: null,
        version: null,
        webgl: null,
        webgl2: null,
        window: null,
        __class__: zo
      };
      var wr = {
          bufferData: function(a, b, c, d, e, f) {
            null != e ? a.bufferData(b, c, d, e, f) : a.bufferData(b, c, d)
          },
          bufferSubData: function(a, b,
            c, d, e, f) {
            null != e ? a.bufferSubData(b, c, d, e, f) : a.bufferSubData(b, c, d)
          },
          compressedTexImage2D: function(a, b, c, d, e, f, g, h, m, l) {
            null != m ? a.compressedTexImage2D(b, c, d, e, f, g, h, m, l) : a.compressedTexImage2D(b, c, d, e, f, g, h)
          },
          compressedTexSubImage2D: function(a, b, c, d, e, f, g, h, m, l, p) {
            null != l ? a.compressedTexSubImage2D(b, c, d, e, f, g, h, m, l, p) : a.compressedTexSubImage2D(b, c, d, e, f, g, h, m)
          },
          getBufferSubData: function(a, b, c, d, e, f) {
            null != e ? a.getBufferSubData(b, c, d, e, f) : a.getBufferSubData(b, c, d)
          },
          readPixels: function(a, b, c, d, e, f, g,
            h, m) {
            null != m ? a.readPixels(b, c, d, e, f, g, h, m) : a.readPixels(b, c, d, e, f, g, h)
          },
          texImage2D: function(a, b, c, d, e, f, g, h, m, l, p) {
            null != p ? a.texImage2D(b, c, d, e, f, g, h, m, l, p) : null != h ? a.texImage2D(b, c, d, e, f, g, h, m, l) : a.texImage2D(b, c, d, e, f, g)
          },
          texSubImage2D: function(a, b, c, d, e, f, g, h, m, l, p) {
            null != p ? a.texSubImage2D(b, c, d, e, f, g, h, m, l, p) : null != m ? a.texSubImage2D(b, c, d, e, f, g, h, m, l) : a.texSubImage2D(b, c, d, e, f, g, h)
          },
          uniform1fv: function(a, b, c, d, e) {
            null != d ? a.uniform1fv(b, c, d, e) : a.uniform1fv(b, c)
          },
          uniform1iv: function(a, b, c, d, e) {
            null !=
              d ? a.uniform1iv(b, c, d, e) : a.uniform1iv(b, c)
          },
          uniform2fv: function(a, b, c, d, e) {
            null != d ? a.uniform2fv(b, c, d, e) : a.uniform2fv(b, c)
          },
          uniform2iv: function(a, b, c, d, e) {
            null != d ? a.uniform2iv(b, c, d, e) : a.uniform2iv(b, c)
          },
          uniform3fv: function(a, b, c, d, e) {
            null != d ? a.uniform3fv(b, c, d, e) : a.uniform3fv(b, c)
          },
          uniform3iv: function(a, b, c, d, e) {
            null != d ? a.uniform3iv(b, c, d, e) : a.uniform3iv(b, c)
          },
          uniform4fv: function(a, b, c, d, e) {
            null != d ? a.uniform4fv(b, c, d, e) : a.uniform4fv(b, c)
          },
          uniform4iv: function(a, b, c, d, e) {
            null != d ? a.uniform4iv(b, c, d,
              e) : a.uniform4iv(b, c)
          },
          uniformMatrix2fv: function(a, b, c, d, e, f) {
            null != e ? a.uniformMatrix2fv(b, c, d, e, f) : a.uniformMatrix2fv(b, c, d)
          },
          uniformMatrix3fv: function(a, b, c, d, e, f) {
            null != e ? a.uniformMatrix3fv(b, c, d, e, f) : a.uniformMatrix3fv(b, c, d)
          },
          uniformMatrix4fv: function(a, b, c, d, e, f) {
            null != e ? a.uniformMatrix4fv(b, c, d, e, f) : a.uniformMatrix4fv(b, c, d)
          },
          fromGL: function(a) {
            return null
          },
          fromRenderContext: function(a) {
            return a.webgl2
          },
          toWebGLRenderContext: function(a) {
            return a
          }
        },
        cc = {
          bufferData: function(a, b, c, d) {
            a.bufferData(b,
              c, d)
          },
          bufferSubData: function(a, b, c, d) {
            a.bufferSubData(b, c, d)
          },
          compressedTexImage2D: function(a, b, c, d, e, f, g, h) {
            a.compressedTexImage2D(b, c, d, e, f, g, h)
          },
          compressedTexSubImage2D: function(a, b, c, d, e, f, g, h, m) {
            a.compressedTexSubImage2D(b, c, d, e, f, g, h, m)
          },
          readPixels: function(a, b, c, d, e, f, g, h) {
            a.readPixels(b, c, d, e, f, g, h)
          },
          texImage2D: function(a, b, c, d, e, f, g, h, m, l) {
            null != h ? a.texImage2D(b, c, d, e, f, g, h, m, l) : a.texImage2D(b, c, d, e, f, g)
          },
          texSubImage2D: function(a, b, c, d, e, f, g, h, m, l) {
            null != m ? a.texSubImage2D(b, c, d, e, f, g, h, m,
              l) : a.texSubImage2D(b, c, d, e, f, g, h)
          },
          uniformMatrix2fv: function(a, b, c, d) {
            a.uniformMatrix2fv(b, c, d)
          },
          uniformMatrix3fv: function(a, b, c, d) {
            a.uniformMatrix3fv(b, c, d)
          },
          uniformMatrix4fv: function(a, b, c, d) {
            a.uniformMatrix4fv(b, c, d)
          },
          fromWebGL2RenderContext: function(a) {
            return a
          },
          fromRenderContext: function(a) {
            return a.webgl
          },
          fromGL: function(a) {
            return q.context
          }
        },
        Vj = function(a) {};
      k["lime.graphics.cairo.Cairo"] = Vj;
      Vj.__name__ = "lime.graphics.cairo.Cairo";
      Vj.__properties__ = {
        get_versionString: "get_versionString",
        get_version: "get_version"
      };
      Vj.get_version = function() {
        return 0
      };
      Vj.get_versionString = function() {
        return ""
      };
      Vj.prototype = {
        target: null,
        userData: null,
        handle: null,
        arc: function(a, b, c, d, e) {},
        arcNegative: function(a, b, c, d, e) {},
        clip: function() {},
        clipExtents: function(a, b, c, d) {},
        clipPreserve: function() {},
        closePath: function() {},
        copyPage: function() {},
        curveTo: function(a, b, c, d, e, f) {},
        fill: function() {},
        fillExtents: function(a, b, c, d) {},
        fillPreserve: function() {},
        getOperator: function() {
          return 0
        },
        identityMatrix: function() {},
        inClip: function(a, b) {
          return !1
        },
        inFill: function(a, b) {
          return !1
        },
        inStroke: function(a, b) {
          return !1
        },
        lineTo: function(a, b) {},
        mask: function(a) {},
        maskSurface: function(a, b, c) {},
        moveTo: function(a, b) {},
        newPath: function() {},
        paint: function() {},
        paintWithAlpha: function(a) {},
        popGroup: function() {
          return null
        },
        popGroupToSource: function() {},
        pushGroup: function() {},
        pushGroupWithContent: function(a) {},
        recreate: function(a) {},
        rectangle: function(a, b, c, d) {},
        relCurveTo: function(a, b, c, d, e, f) {},
        relLineTo: function(a, b) {},
        relMoveTo: function(a, b) {},
        resetClip: function() {},
        restore: function() {},
        rotate: function(a) {},
        save: function() {},
        scale: function(a, b) {},
        setFontSize: function(a) {},
        setOperator: function(a) {
          return a
        },
        setSourceRGB: function(a, b, c) {},
        setSourceRGBA: function(a, b, c, d) {},
        setSourceSurface: function(a, b, c) {},
        showGlyphs: function(a) {},
        showPage: function() {},
        showText: function(a) {},
        status: function() {
          return 0
        },
        stroke: function() {},
        strokeExtents: function(a, b, c, d) {},
        strokePreserve: function() {},
        textPath: function(a) {},
        transform: function(a) {},
        translate: function(a, b) {},
        get_antialias: function() {
          return 0
        },
        set_antialias: function(a) {
          return a
        },
        get_currentPoint: function() {
          return null
        },
        get_dash: function() {
          return []
        },
        set_dash: function(a) {
          return a
        },
        get_dashCount: function() {
          return 0
        },
        get_fillRule: function() {
          return 0
        },
        set_fillRule: function(a) {
          return a
        },
        get_fontFace: function() {
          return 0
        },
        set_fontFace: function(a) {
          return a
        },
        get_fontOptions: function() {
          return null
        },
        set_fontOptions: function(a) {
          return a
        },
        get_groupTarget: function() {
          return 0
        },
        get_hasCurrentPoint: function() {
          return !1
        },
        get_lineCap: function() {
          return 0
        },
        set_lineCap: function(a) {
          return a
        },
        get_lineJoin: function() {
          return 0
        },
        set_lineJoin: function(a) {
          return a
        },
        get_lineWidth: function() {
          return 0
        },
        set_lineWidth: function(a) {
          return a
        },
        get_matrix: function() {
          return null
        },
        set_matrix: function(a) {
          return a
        },
        get_miterLimit: function() {
          return 0
        },
        set_miterLimit: function(a) {
          return a
        },
        get_source: function() {
          return 0
        },
        set_source: function(a) {
          return a
        },
        get_target: function() {
          return 0
        },
        get_tolerance: function() {
          return 0
        },
        set_tolerance: function(a) {
          return a
        },
        __class__: Vj,
        __properties__: {
          set_tolerance: "set_tolerance",
          get_tolerance: "get_tolerance",
          get_target: "get_target",
          set_source: "set_source",
          get_source: "get_source",
          set_miterLimit: "set_miterLimit",
          get_miterLimit: "get_miterLimit",
          set_matrix: "set_matrix",
          get_matrix: "get_matrix",
          set_lineWidth: "set_lineWidth",
          get_lineWidth: "get_lineWidth",
          set_lineJoin: "set_lineJoin",
          get_lineJoin: "get_lineJoin",
          set_lineCap: "set_lineCap",
          get_lineCap: "get_lineCap",
          get_hasCurrentPoint: "get_hasCurrentPoint",
          get_groupTarget: "get_groupTarget",
          set_fontOptions: "set_fontOptions",
          get_fontOptions: "get_fontOptions",
          set_fontFace: "set_fontFace",
          get_fontFace: "get_fontFace",
          set_fillRule: "set_fillRule",
          get_fillRule: "get_fillRule",
          get_dashCount: "get_dashCount",
          set_dash: "set_dash",
          get_dash: "get_dash",
          get_currentPoint: "get_currentPoint",
          set_antialias: "set_antialias",
          get_antialias: "get_antialias"
        }
      };
      var Dq = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        this.index = a;
        this.x = b;
        this.y = c
      };
      k["lime.graphics.cairo.CairoGlyph"] = Dq;
      Dq.__name__ = "lime.graphics.cairo.CairoGlyph";
      Dq.prototype = {
        index: null,
        x: null,
        y: null,
        __class__: Dq
      };
      var Dr = {
          __properties__: {
            get_width: "get_width",
            get_stride: "get_stride",
            get_height: "get_height",
            get_format: "get_format",
            get_data: "get_data"
          },
          _new: function(a, b, c) {
            return 0
          },
          create: function(a, b, c, d, e) {
            return 0
          },
          fromImage: function(a) {
            return null
          },
          get_data: function(a) {
            return pf.fromFloat(0)
          },
          get_format: function(a) {
            return 0
          },
          get_height: function(a) {
            return 0
          },
          get_stride: function(a) {
            return 0
          },
          get_width: function(a) {
            return 0
          }
        },
        Qo = {
          __properties__: {
            set_matrix: "set_matrix",
            get_matrix: "get_matrix",
            set_filter: "set_filter",
            get_filter: "get_filter",
            set_extend: "set_extend",
            get_extend: "get_extend",
            get_colorStopCount: "get_colorStopCount"
          },
          _new: function(a) {
            return a
          },
          addColorStopRGB: function(a, b, c, d, e) {},
          addColorStopRGBA: function(a, b, c, d, e, f) {},
          createForSurface: function(a) {
            return 0
          },
          createLinear: function(a, b, c, d) {
            return 0
          },
          createRadial: function(a, b, c, d, e, f) {
            return 0
          },
          createRGB: function(a, b, c) {
            return 0
          },
          createRGBA: function(a, b, c, d) {
            return 0
          },
          get_colorStopCount: function(a) {
            return 0
          },
          get_extend: function(a) {
            return 0
          },
          set_extend: function(a,
            b) {
            return b
          },
          get_filter: function(a) {
            return 0
          },
          set_filter: function(a, b) {
            return b
          },
          get_matrix: function(a) {
            return null
          },
          set_matrix: function(a, b) {
            return b
          }
        },
        Er = {
          flush: function(a) {}
        },
        q = function() {};
      k["lime.graphics.opengl.GL"] = q;
      q.__name__ = "lime.graphics.opengl.GL";
      q.activeTexture = function(a) {
        q.context.activeTexture(a)
      };
      q.attachShader = function(a, b) {
        q.context.attachShader(a, b)
      };
      q.beginQuery = function(a, b) {
        q.context.beginQuery(a, b)
      };
      q.beginTransformFeedback = function(a) {
        q.context.beginTransformFeedback(a)
      };
      q.bindAttribLocation = function(a, b, c) {
        q.context.bindAttribLocation(a, b, c)
      };
      q.bindBuffer = function(a, b) {
        q.context.bindBuffer(a, b)
      };
      q.bindBufferBase = function(a, b, c) {
        q.context.bindBufferBase(a, b, c)
      };
      q.bindBufferRange = function(a, b, c, d, e) {
        q.context.bindBufferRange(a, b, c, d, pf.fromFloat(e))
      };
      q.bindFramebuffer = function(a, b) {
        q.context.bindFramebuffer(a, b)
      };
      q.bindRenderbuffer = function(a, b) {
        q.context.bindRenderbuffer(a, b)
      };
      q.bindSampler = function(a, b) {
        q.context.bindSampler(a, b)
      };
      q.bindTexture = function(a, b) {
        q.context.bindTexture(a,
          b)
      };
      q.bindTransformFeedback = function(a, b) {
        q.context.bindTransformFeedback(a, b)
      };
      q.bindVertexArray = function(a) {
        q.context.bindVertexArray(a)
      };
      q.blitFramebuffer = function(a, b, c, d, e, f, g, h, m, l) {
        q.context.blitFramebuffer(a, b, c, d, e, f, g, h, m, l)
      };
      q.blendColor = function(a, b, c, d) {
        q.context.blendColor(a, b, c, d)
      };
      q.blendEquation = function(a) {
        q.context.blendEquation(a)
      };
      q.blendEquationSeparate = function(a, b) {
        q.context.blendEquationSeparate(a, b)
      };
      q.blendFunc = function(a, b) {
        q.context.blendFunc(a, b)
      };
      q.blendFuncSeparate =
        function(a, b, c, d) {
          q.context.blendFuncSeparate(a, b, c, d)
        };
      q.bufferDataWEBGL = function(a, b, c, d, e) {
        var f = q.context;
        null != d ? f.bufferData(a, b, c, d, e) : f.bufferData(a, b, c)
      };
      q.bufferSubDataWEBGL = function(a, b, c, d, e) {
        var f = q.context;
        null != d ? f.bufferSubData(a, b, c, d, e) : f.bufferSubData(a, b, c)
      };
      q.checkFramebufferStatus = function(a) {
        return q.context.checkFramebufferStatus(a)
      };
      q.clear = function(a) {
        q.context.clear(a)
      };
      q.clearBufferfi = function(a, b, c, d) {
        q.context.clearBufferfi(a, b, c, d)
      };
      q.clearBufferfvWEBGL = function(a, b,
        c, d) {
        q.context.clearBufferfv(a, b, c, d)
      };
      q.clearBufferivWEBGL = function(a, b, c, d) {
        q.context.clearBufferiv(a, b, c, d)
      };
      q.clearBufferuivWEBGL = function(a, b, c, d) {
        q.context.clearBufferuiv(a, b, c, d)
      };
      q.clearColor = function(a, b, c, d) {
        q.context.clearColor(a, b, c, d)
      };
      q.clearDepth = function(a) {
        q.context.clearDepth(a)
      };
      q.clearStencil = function(a) {
        q.context.clearStencil(a)
      };
      q.clientWaitSync = function(a, b, c) {
        return q.context.clientWaitSync(a, b, c)
      };
      q.colorMask = function(a, b, c, d) {
        q.context.colorMask(a, b, c, d)
      };
      q.compileShader =
        function(a) {
          q.context.compileShader(a)
        };
      q.compressedTexImage2DWEBGL = function(a, b, c, d, e, f, g, h, m) {
        var l = q.context;
        null != h ? l.compressedTexImage2D(a, b, c, d, e, f, g, h, m) : l.compressedTexImage2D(a, b, c, d, e, f, g)
      };
      q.compressedTexImage3DWEBGL = function(a, b, c, d, e, f, g, h, m, l) {
        q.context.compressedTexImage3D(a, b, c, d, e, f, g, h, m, l)
      };
      q.compressedTexSubImage2DWEBGL = function(a, b, c, d, e, f, g, h, m, l) {
        var p = q.context;
        null != m ? p.compressedTexSubImage2D(a, b, c, d, e, f, g, h, m, l) : p.compressedTexSubImage2D(a, b, c, d, e, f, g, h)
      };
      q.compressedTexSubImage3DWEBGL =
        function(a, b, c, d, e, f, g, h, m, l, p, n) {
          q.context.compressedTexSubImage3D(a, b, c, d, e, f, g, h, m, l, p, n)
        };
      q.copyTexImage2D = function(a, b, c, d, e, f, g, h) {
        q.context.copyTexImage2D(a, b, c, d, e, f, g, h)
      };
      q.copyTexSubImage2D = function(a, b, c, d, e, f, g, h) {
        q.context.copyTexSubImage2D(a, b, c, d, e, f, g, h)
      };
      q.copyTexSubImage3D = function(a, b, c, d, e, f, g, h, m) {
        q.context.copyTexSubImage3D(a, b, c, d, e, f, g, h, m)
      };
      q.createBuffer = function() {
        return q.context.createBuffer()
      };
      q.createFramebuffer = function() {
        return q.context.createFramebuffer()
      };
      q.createProgram =
        function() {
          return q.context.createProgram()
        };
      q.createQuery = function() {
        return q.context.createQuery()
      };
      q.createRenderbuffer = function() {
        return q.context.createRenderbuffer()
      };
      q.createSampler = function() {
        return q.context.createSampler()
      };
      q.createShader = function(a) {
        return q.context.createShader(a)
      };
      q.createTexture = function() {
        return q.context.createTexture()
      };
      q.createTransformFeedback = function() {
        return q.context.createTransformFeedback()
      };
      q.createVertexArray = function() {
        return q.context.createVertexArray()
      };
      q.cullFace = function(a) {
        q.context.cullFace(a)
      };
      q.deleteBuffer = function(a) {
        q.context.deleteBuffer(a)
      };
      q.deleteFramebuffer = function(a) {
        q.context.deleteFramebuffer(a)
      };
      q.deleteProgram = function(a) {
        q.context.deleteProgram(a)
      };
      q.deleteQuery = function(a) {
        q.context.deleteQuery(a)
      };
      q.deleteRenderbuffer = function(a) {
        q.context.deleteRenderbuffer(a)
      };
      q.deleteSampler = function(a) {
        q.context.deleteSampler(a)
      };
      q.deleteShader = function(a) {
        q.context.deleteShader(a)
      };
      q.deleteSync = function(a) {
        q.context.deleteSync(a)
      };
      q.deleteTexture =
        function(a) {
          q.context.deleteTexture(a)
        };
      q.deleteTransformFeedback = function(a) {
        q.context.deleteTransformFeedback(a)
      };
      q.deleteVertexArray = function(a) {
        q.context.deleteVertexArray(a)
      };
      q.depthFunc = function(a) {
        q.context.depthFunc(a)
      };
      q.depthMask = function(a) {
        q.context.depthMask(a)
      };
      q.depthRange = function(a, b) {
        q.context.depthRange(a, b)
      };
      q.detachShader = function(a, b) {
        q.context.detachShader(a, b)
      };
      q.disable = function(a) {
        q.context.disable(a)
      };
      q.disableVertexAttribArray = function(a) {
        q.context.disableVertexAttribArray(a)
      };
      q.drawArrays = function(a, b, c) {
        q.context.drawArrays(a, b, c)
      };
      q.drawArraysInstanced = function(a, b, c, d) {
        q.context.drawArraysInstanced(a, b, c, d)
      };
      q.drawBuffers = function(a) {
        q.context.drawBuffers(a)
      };
      q.drawElements = function(a, b, c, d) {
        q.context.drawElements(a, b, c, d)
      };
      q.drawElementsInstanced = function(a, b, c, d, e) {
        q.context.drawElementsInstanced(a, b, c, d, e)
      };
      q.drawRangeElements = function(a, b, c, d, e, f) {
        q.context.drawRangeElements(a, b, c, d, e, f)
      };
      q.enable = function(a) {
        q.context.enable(a)
      };
      q.enableVertexAttribArray = function(a) {
        q.context.enableVertexAttribArray(a)
      };
      q.endQuery = function(a) {
        q.context.endQuery(a)
      };
      q.endTransformFeedback = function() {
        q.context.endTransformFeedback()
      };
      q.fenceSync = function(a, b) {
        return q.context.fenceSync(a, b)
      };
      q.finish = function() {
        q.context.finish()
      };
      q.flush = function() {
        q.context.flush()
      };
      q.framebufferRenderbuffer = function(a, b, c, d) {
        q.context.framebufferRenderbuffer(a, b, c, d)
      };
      q.framebufferTexture2D = function(a, b, c, d, e) {
        q.context.framebufferTexture2D(a, b, c, d, e)
      };
      q.framebufferTextureLayer = function(a, b, c, d, e) {
        q.context.framebufferTextureLayer(a,
          b, c, d, e)
      };
      q.frontFace = function(a) {
        q.context.frontFace(a)
      };
      q.generateMipmap = function(a) {
        q.context.generateMipmap(a)
      };
      q.getActiveAttrib = function(a, b) {
        return q.context.getActiveAttrib(a, b)
      };
      q.getActiveUniform = function(a, b) {
        return q.context.getActiveUniform(a, b)
      };
      q.getActiveUniformBlockName = function(a, b) {
        return q.context.getActiveUniformBlockName(a, b)
      };
      q.getActiveUniformBlockParameter = function(a, b, c) {
        return q.context.getActiveUniformBlockParameter(a, b, c)
      };
      q.getActiveUniforms = function(a, b, c) {
        return q.context.getActiveUniforms(a,
          b, c)
      };
      q.getAttachedShaders = function(a) {
        return q.context.getAttachedShaders(a)
      };
      q.getAttribLocation = function(a, b) {
        return q.context.getAttribLocation(a, b)
      };
      q.getBufferParameter = function(a, b) {
        return q.context.getBufferParameter(a, b)
      };
      q.getBufferSubDataWEBGL = function(a, b, c, d, e) {
        var f = q.context;
        null != d ? f.getBufferSubData(a, b, c, d, e) : f.getBufferSubData(a, b, c)
      };
      q.getContextAttributes = function() {
        return q.context.getContextAttributes()
      };
      q.getError = function() {
        return q.context.getError()
      };
      q.getExtension = function(a) {
        return q.context.getExtension(a)
      };
      q.getFragDataLocation = function(a, b) {
        return q.context.getFragDataLocation(a, b)
      };
      q.getFramebufferAttachmentParameter = function(a, b, c) {
        return q.context.getFramebufferAttachmentParameter(a, b, c)
      };
      q.getIndexedParameter = function(a, b) {
        return q.context.getIndexedParameter(a, b)
      };
      q.getInternalformatParameter = function(a, b, c) {
        return q.context.getInternalformatParameter(a, b, c)
      };
      q.getParameter = function(a) {
        return q.context.getParameter(a)
      };
      q.getProgramInfoLog = function(a) {
        return q.context.getProgramInfoLog(a)
      };
      q.getProgramParameter =
        function(a, b) {
          return q.context.getProgramParameter(a, b)
        };
      q.getQuery = function(a, b) {
        return q.context.getQuery(a, b)
      };
      q.getQueryParameter = function(a, b) {
        return q.context.getQueryParameter(a, b)
      };
      q.getRenderbufferParameter = function(a, b) {
        return q.context.getRenderbufferParameter(a, b)
      };
      q.getSamplerParameter = function(a, b) {
        return q.context.getSamplerParameter(a, b)
      };
      q.getShaderInfoLog = function(a) {
        return q.context.getShaderInfoLog(a)
      };
      q.getShaderParameter = function(a, b) {
        return q.context.getShaderParameter(a, b)
      };
      q.getShaderPrecisionFormat = function(a, b) {
        return q.context.getShaderPrecisionFormat(a, b)
      };
      q.getShaderSource = function(a) {
        return q.context.getShaderSource(a)
      };
      q.getSupportedExtensions = function() {
        return q.context.getSupportedExtensions()
      };
      q.getSyncParameter = function(a, b) {
        return q.context.getSyncParameter(a, b)
      };
      q.getTexParameter = function(a, b) {
        return q.context.getTexParameter(a, b)
      };
      q.getTransformFeedbackVarying = function(a, b) {
        return q.context.getTransformFeedbackVarying(a, b)
      };
      q.getUniform = function(a, b) {
        return q.context.getUniform(a,
          b)
      };
      q.getUniformBlockIndex = function(a, b) {
        return q.context.getUniformBlockIndex(a, b)
      };
      q.getUniformIndices = function(a, b) {
        return q.context.getUniformIndices(a, b)
      };
      q.getUniformLocation = function(a, b) {
        return q.context.getUniformLocation(a, b)
      };
      q.getVertexAttrib = function(a, b) {
        return q.context.getVertexAttrib(a, b)
      };
      q.getVertexAttribOffset = function(a, b) {
        return pf.fromFloat(q.context.getVertexAttribOffset(a, b))
      };
      q.hint = function(a, b) {
        q.context.hint(a, b)
      };
      q.invalidateFramebuffer = function(a, b) {
        q.context.invalidateFramebuffer(a,
          b)
      };
      q.invalidateSubFramebuffer = function(a, b, c, d, e, f) {
        q.context.invalidateSubFramebuffer(a, b, c, d, e, f)
      };
      q.isBuffer = function(a) {
        return q.context.isBuffer(a)
      };
      q.isContextLost = function() {
        return q.context.isContextLost()
      };
      q.isEnabled = function(a) {
        return q.context.isEnabled(a)
      };
      q.isFramebuffer = function(a) {
        return q.context.isFramebuffer(a)
      };
      q.isProgram = function(a) {
        return q.context.isProgram(a)
      };
      q.isQuery = function(a) {
        return q.context.isQuery(a)
      };
      q.isRenderbuffer = function(a) {
        return q.context.isRenderbuffer(a)
      };
      q.isSampler = function(a) {
        return q.context.isSampler(a)
      };
      q.isShader = function(a) {
        return q.context.isShader(a)
      };
      q.isSync = function(a) {
        return q.context.isSync(a)
      };
      q.isTexture = function(a) {
        return q.context.isTexture(a)
      };
      q.isTransformFeedback = function(a) {
        return q.context.isTransformFeedback(a)
      };
      q.isVertexArray = function(a) {
        return q.context.isVertexArray(a)
      };
      q.lineWidth = function(a) {
        q.context.lineWidth(a)
      };
      q.linkProgram = function(a) {
        q.context.linkProgram(a)
      };
      q.pauseTransformFeedback = function() {
        q.context.pauseTransformFeedback()
      };
      q.pixelStorei = function(a, b) {
        q.context.pixelStorei(a, b)
      };
      q.polygonOffset = function(a, b) {
        q.context.polygonOffset(a, b)
      };
      q.readBuffer = function(a) {
        q.context.readBuffer(a)
      };
      q.readPixelsWEBGL = function(a, b, c, d, e, f, g, h) {
        var m = q.context;
        null != h ? m.readPixels(a, b, c, d, e, f, g, h) : m.readPixels(a, b, c, d, e, f, g)
      };
      q.renderbufferStorage = function(a, b, c, d) {
        q.context.renderbufferStorage(a, b, c, d)
      };
      q.renderbufferStorageMultisample = function(a, b, c, d, e) {
        q.context.renderbufferStorageMultisample(a, b, c, d, e)
      };
      q.resumeTransformFeedback =
        function() {
          q.context.resumeTransformFeedback()
        };
      q.sampleCoverage = function(a, b) {
        q.context.sampleCoverage(a, b)
      };
      q.samplerParameterf = function(a, b, c) {
        q.context.samplerParameterf(a, b, c)
      };
      q.samplerParameteri = function(a, b, c) {
        q.context.samplerParameteri(a, b, c)
      };
      q.scissor = function(a, b, c, d) {
        q.context.scissor(a, b, c, d)
      };
      q.shaderSource = function(a, b) {
        q.context.shaderSource(a, b)
      };
      q.stencilFunc = function(a, b, c) {
        q.context.stencilFunc(a, b, c)
      };
      q.stencilFuncSeparate = function(a, b, c, d) {
        q.context.stencilFuncSeparate(a, b,
          c, d)
      };
      q.stencilMask = function(a) {
        q.context.stencilMask(a)
      };
      q.stencilMaskSeparate = function(a, b) {
        q.context.stencilMaskSeparate(a, b)
      };
      q.stencilOp = function(a, b, c) {
        q.context.stencilOp(a, b, c)
      };
      q.stencilOpSeparate = function(a, b, c, d) {
        q.context.stencilOpSeparate(a, b, c, d)
      };
      q.texImage2DWEBGL = function(a, b, c, d, e, f, g, h, m, l) {
        var p = q.context;
        null != l ? p.texImage2D(a, b, c, d, e, f, g, h, m, l) : null != g ? p.texImage2D(a, b, c, d, e, f, g, h, m) : p.texImage2D(a, b, c, d, e, f)
      };
      q.texImage3DWEBGL = function(a, b, c, d, e, f, g, h, m, l, p) {
        q.context.texImage3D(a,
          b, c, d, e, f, g, h, m, l, p)
      };
      q.texStorage2D = function(a, b, c, d, e) {
        q.context.texStorage2D(a, b, c, d, e)
      };
      q.texStorage3D = function(a, b, c, d, e, f) {
        q.context.texStorage3D(a, b, c, d, e, f)
      };
      q.texParameterf = function(a, b, c) {
        q.context.texParameterf(a, b, c)
      };
      q.texParameteri = function(a, b, c) {
        q.context.texParameteri(a, b, c)
      };
      q.texSubImage2DWEBGL = function(a, b, c, d, e, f, g, h, m, l) {
        var p = q.context;
        null != l ? p.texSubImage2D(a, b, c, d, e, f, g, h, m, l) : null != h ? p.texSubImage2D(a, b, c, d, e, f, g, h, m) : p.texSubImage2D(a, b, c, d, e, f, g)
      };
      q.texSubImage3DWEBGL =
        function(a, b, c, d, e, f, g, h, m, l, p, n) {
          q.context.texSubImage3D(a, b, c, d, e, f, g, h, m, l, p, n)
        };
      q.transformFeedbackVaryings = function(a, b, c) {
        q.context.transformFeedbackVaryings(a, b, c)
      };
      q.uniform1f = function(a, b) {
        q.context.uniform1f(a, b)
      };
      q.uniform1fvWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform1fv(a, b, c, d) : e.uniform1fv(a, b)
      };
      q.uniform1i = function(a, b) {
        q.context.uniform1i(a, b)
      };
      q.uniform1ivWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform1iv(a, b, c, d) : e.uniform1iv(a, b)
      };
      q.uniform1ui = function(a,
        b) {
        q.context.uniform1ui(a, b)
      };
      q.uniform1uivWEBGL = function(a, b, c, d) {
        q.context.uniform1uiv(a, b, c, d)
      };
      q.uniform2f = function(a, b, c) {
        q.context.uniform2f(a, b, c)
      };
      q.uniform2fvWEBGL = function(a, b, c, d) {
        wr.uniform2fv(q.context, a, b, c, d)
      };
      q.uniform2i = function(a, b, c) {
        q.context.uniform2i(a, b, c)
      };
      q.uniform2ivWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform2iv(a, b, c, d) : e.uniform2iv(a, b)
      };
      q.uniform2ui = function(a, b, c) {
        q.context.uniform2ui(a, b, c)
      };
      q.uniform2uivWEBGL = function(a, b, c, d) {
        q.context.uniform2uiv(a,
          b, c, d)
      };
      q.uniform3f = function(a, b, c, d) {
        q.context.uniform3f(a, b, c, d)
      };
      q.uniform3fvWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform3fv(a, b, c, d) : e.uniform3fv(a, b)
      };
      q.uniform3i = function(a, b, c, d) {
        q.context.uniform3i(a, b, c, d)
      };
      q.uniform3ivWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform3iv(a, b, c, d) : e.uniform3iv(a, b)
      };
      q.uniform3ui = function(a, b, c, d) {
        q.context.uniform3ui(a, b, c, d)
      };
      q.uniform3uivWEBGL = function(a, b, c, d) {
        q.context.uniform3uiv(a, b, c, d)
      };
      q.uniform4f = function(a, b, c, d, e) {
        q.context.uniform4f(a,
          b, c, d, e)
      };
      q.uniform4fvWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform4fv(a, b, c, d) : e.uniform4fv(a, b)
      };
      q.uniform4i = function(a, b, c, d, e) {
        q.context.uniform4i(a, b, c, d, e)
      };
      q.uniform4ivWEBGL = function(a, b, c, d) {
        var e = q.context;
        null != c ? e.uniform4iv(a, b, c, d) : e.uniform4iv(a, b)
      };
      q.uniform4ui = function(a, b, c, d, e) {
        q.context.uniform4ui(a, b, c, d, e)
      };
      q.uniform4uivWEBGL = function(a, b, c, d) {
        q.context.uniform4uiv(a, b, c, d)
      };
      q.uniformBlockBinding = function(a, b, c) {
        q.context.uniformBlockBinding(a, b, c)
      };
      q.uniformMatrix2fvWEBGL =
        function(a, b, c, d, e) {
          var f = q.context;
          null != d ? f.uniformMatrix2fv(a, b, c, d, e) : f.uniformMatrix2fv(a, b, c)
        };
      q.uniformMatrix2x3fvWEBGL = function(a, b, c, d, e) {
        q.context.uniformMatrix2x3fv(a, b, c, d, e)
      };
      q.uniformMatrix2x4fvWEBGL = function(a, b, c, d, e) {
        q.context.uniformMatrix2x4fv(a, b, c, d, e)
      };
      q.uniformMatrix3fvWEBGL = function(a, b, c, d, e) {
        var f = q.context;
        null != d ? f.uniformMatrix3fv(a, b, c, d, e) : f.uniformMatrix3fv(a, b, c)
      };
      q.uniformMatrix3x2fvWEBGL = function(a, b, c, d, e) {
        q.context.uniformMatrix3x2fv(a, b, c, d, e)
      };
      q.uniformMatrix3x4fvWEBGL =
        function(a, b, c, d, e) {
          q.context.uniformMatrix3x4fv(a, b, c, d, e)
        };
      q.uniformMatrix4fvWEBGL = function(a, b, c, d, e) {
        var f = q.context;
        null != d ? f.uniformMatrix4fv(a, b, c, d, e) : f.uniformMatrix4fv(a, b, c)
      };
      q.uniformMatrix4x2fvWEBGL = function(a, b, c, d, e) {
        q.context.uniformMatrix4x2fv(a, b, c, d, e)
      };
      q.uniformMatrix4x3fvWEBGL = function(a, b, c, d, e) {
        q.context.uniformMatrix4x3fv(a, b, c, d, e)
      };
      q.useProgram = function(a) {
        q.context.useProgram(a)
      };
      q.validateProgram = function(a) {
        q.context.validateProgram(a)
      };
      q.vertexAttrib1f = function(a, b) {
        q.context.vertexAttrib1f(a,
          b)
      };
      q.vertexAttrib1fv = function(a, b) {
        q.context.vertexAttrib1fv(a, b)
      };
      q.vertexAttrib1fvWEBGL = function(a, b) {
        q.context.vertexAttrib1fv(a, b)
      };
      q.vertexAttrib2f = function(a, b, c) {
        q.context.vertexAttrib2f(a, b, c)
      };
      q.vertexAttrib2fv = function(a, b) {
        q.context.vertexAttrib2fv(a, b)
      };
      q.vertexAttrib2fvWEBGL = function(a, b) {
        q.context.vertexAttrib2fv(a, b)
      };
      q.vertexAttrib3f = function(a, b, c, d) {
        q.context.vertexAttrib3f(a, b, c, d)
      };
      q.vertexAttrib3fv = function(a, b) {
        q.context.vertexAttrib3fv(a, b)
      };
      q.vertexAttrib3fvWEBGL = function(a,
        b) {
        q.context.vertexAttrib3fv(a, b)
      };
      q.vertexAttrib4f = function(a, b, c, d, e) {
        q.context.vertexAttrib4f(a, b, c, d, e)
      };
      q.vertexAttrib4fv = function(a, b) {
        q.context.vertexAttrib4fv(a, b)
      };
      q.vertexAttrib4fvWEBGL = function(a, b) {
        q.context.vertexAttrib4fv(a, b)
      };
      q.vertexAttribDivisor = function(a, b) {
        q.context.vertexAttribDivisor(a, b)
      };
      q.vertexAttribI4i = function(a, b, c, d, e) {
        q.context.vertexAttribI4i(a, b, c, d, e)
      };
      q.vertexAttribI4iv = function(a, b) {
        q.context.vertexAttribI4iv(a, b)
      };
      q.vertexAttribI4ivWEBGL = function(a, b) {
        q.context.vertexAttribI4iv(a,
          b)
      };
      q.vertexAttribI4ui = function(a, b, c, d, e) {
        q.context.vertexAttribI4ui(a, b, c, d, e)
      };
      q.vertexAttribI4uiv = function(a, b) {
        q.context.vertexAttribI4uiv(a, b)
      };
      q.vertexAttribI4uivWEBGL = function(a, b) {
        q.context.vertexAttribI4uiv(a, b)
      };
      q.vertexAttribIPointer = function(a, b, c, d, e) {
        q.context.vertexAttribIPointer(a, b, c, d, e)
      };
      q.vertexAttribPointer = function(a, b, c, d, e, f) {
        q.context.vertexAttribPointer(a, b, c, d, e, f)
      };
      q.viewport = function(a, b, c, d) {
        q.context.viewport(a, b, c, d)
      };
      q.waitSync = function(a, b, c) {
        q.context.waitSync(a,
          b, c)
      };
      q.__getObjectID = function(a) {
        return null == a ? 0 : a.id
      };
      var Eq = function() {
        this.STACK_UNDERFLOW = 1284;
        this.STACK_OVERFLOW = 1283;
        this.CONTEXT_FLAG_DEBUG_BIT = 2;
        this.DEBUG_OUTPUT = 37600;
        this.DEBUG_SEVERITY_LOW = 37192;
        this.DEBUG_SEVERITY_MEDIUM = 37191;
        this.DEBUG_SEVERITY_HIGH = 37190;
        this.DEBUG_LOGGED_MESSAGES = 37189;
        this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
        this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
        this.MAX_LABEL_LENGTH = 33512;
        this.SAMPLER = 33510;
        this.QUERY = 33507;
        this.PROGRAM = 33506;
        this.SHADER = 33505;
        this.BUFFER = 33504;
        this.DEBUG_GROUP_STACK_DEPTH =
          33389;
        this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
        this.DEBUG_SEVERITY_NOTIFICATION = 33387;
        this.DEBUG_TYPE_POP_GROUP = 33386;
        this.DEBUG_TYPE_PUSH_GROUP = 33385;
        this.DEBUG_TYPE_MARKER = 33384;
        this.DEBUG_TYPE_OTHER = 33361;
        this.DEBUG_TYPE_PERFORMANCE = 33360;
        this.DEBUG_TYPE_PORTABILITY = 33359;
        this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
        this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
        this.DEBUG_TYPE_ERROR = 33356;
        this.DEBUG_SOURCE_OTHER = 33355;
        this.DEBUG_SOURCE_APPLICATION = 33354;
        this.DEBUG_SOURCE_THIRD_PARTY = 33353;
        this.DEBUG_SOURCE_SHADER_COMPILER =
          33352;
        this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
        this.DEBUG_SOURCE_API = 33350;
        this.DEBUG_CALLBACK_USER_PARAM = 33349;
        this.DEBUG_CALLBACK_FUNCTION = 33348;
        this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
        this.DEBUG_OUTPUT_SYNCHRONOUS = 33346
      };
      k["lime.graphics.opengl.ext.KHR_debug"] = Eq;
      Eq.__name__ = "lime.graphics.opengl.ext.KHR_debug";
      Eq.prototype = {
        DEBUG_OUTPUT_SYNCHRONOUS: null,
        DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: null,
        DEBUG_CALLBACK_FUNCTION: null,
        DEBUG_CALLBACK_USER_PARAM: null,
        DEBUG_SOURCE_API: null,
        DEBUG_SOURCE_WINDOW_SYSTEM: null,
        DEBUG_SOURCE_SHADER_COMPILER: null,
        DEBUG_SOURCE_THIRD_PARTY: null,
        DEBUG_SOURCE_APPLICATION: null,
        DEBUG_SOURCE_OTHER: null,
        DEBUG_TYPE_ERROR: null,
        DEBUG_TYPE_DEPRECATED_BEHAVIOR: null,
        DEBUG_TYPE_UNDEFINED_BEHAVIOR: null,
        DEBUG_TYPE_PORTABILITY: null,
        DEBUG_TYPE_PERFORMANCE: null,
        DEBUG_TYPE_OTHER: null,
        DEBUG_TYPE_MARKER: null,
        DEBUG_TYPE_PUSH_GROUP: null,
        DEBUG_TYPE_POP_GROUP: null,
        DEBUG_SEVERITY_NOTIFICATION: null,
        MAX_DEBUG_GROUP_STACK_DEPTH: null,
        DEBUG_GROUP_STACK_DEPTH: null,
        BUFFER: null,
        SHADER: null,
        PROGRAM: null,
        QUERY: null,
        SAMPLER: null,
        MAX_LABEL_LENGTH: null,
        MAX_DEBUG_MESSAGE_LENGTH: null,
        MAX_DEBUG_LOGGED_MESSAGES: null,
        DEBUG_LOGGED_MESSAGES: null,
        DEBUG_SEVERITY_HIGH: null,
        DEBUG_SEVERITY_MEDIUM: null,
        DEBUG_SEVERITY_LOW: null,
        DEBUG_OUTPUT: null,
        CONTEXT_FLAG_DEBUG_BIT: null,
        STACK_OVERFLOW: null,
        STACK_UNDERFLOW: null,
        __class__: Eq
      };
      var Od = {
          __properties__: {
            set_redOffset: "set_redOffset",
            get_redOffset: "get_redOffset",
            set_redMultiplier: "set_redMultiplier",
            get_redMultiplier: "get_redMultiplier",
            set_greenOffset: "set_greenOffset",
            get_greenOffset: "get_greenOffset",
            set_greenMultiplier: "set_greenMultiplier",
            get_greenMultiplier: "get_greenMultiplier",
            set_color: "set_color",
            get_color: "get_color",
            set_blueOffset: "set_blueOffset",
            get_blueOffset: "get_blueOffset",
            set_blueMultiplier: "set_blueMultiplier",
            get_blueMultiplier: "get_blueMultiplier",
            set_alphaOffset: "set_alphaOffset",
            get_alphaOffset: "get_alphaOffset",
            set_alphaMultiplier: "set_alphaMultiplier",
            get_alphaMultiplier: "get_alphaMultiplier"
          },
          _new: function(a) {
            if (null == a || 20 != a.length) a = Od.__identity, a = null != a ? new Float32Array(a) :
              null;
            return a
          },
          clone: function(a) {
            a = Xg.toArrayBufferView(a);
            a = null != a ? new Float32Array(a) : null;
            return Od._new(a)
          },
          concat: function(a, b) {
            a[0] += b[0];
            a[6] += b[6];
            a[12] += b[12];
            a[18] += b[18]
          },
          copyFrom: function(a, b) {
            a.set(b)
          },
          identity: function(a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 0;
            a[6] = 1;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 0;
            a[11] = 0;
            a[12] = 1;
            a[13] = 0;
            a[14] = 0;
            a[15] = 0;
            a[16] = 0;
            a[17] = 0;
            a[18] = 1;
            a[19] = 0
          },
          getAlphaTable: function(a) {
            if (null == Od.__alphaTable) {
              var b = new Uint8Array(256);
              Od.__alphaTable = b
            }
            Od.__alphaTable[0] =
              0;
            for (var c = 1; 256 > c;) {
              var d = c++;
              b = Math.floor(d * a[18] + 255 * a[19]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Od.__alphaTable[d] = b
            }
            return Od.__alphaTable
          },
          getBlueTable: function(a) {
            if (null == Od.__blueTable) {
              var b = new Uint8Array(256);
              Od.__blueTable = b
            }
            for (var c = 0; 256 > c;) {
              var d = c++;
              b = Math.floor(d * a[12] + 255 * a[14]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Od.__blueTable[d] = b
            }
            return Od.__blueTable
          },
          getGreenTable: function(a) {
            if (null == Od.__greenTable) {
              var b = new Uint8Array(256);
              Od.__greenTable = b
            }
            for (var c = 0; 256 > c;) {
              var d = c++;
              b = Math.floor(d * a[6] +
                255 * a[9]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Od.__greenTable[d] = b
            }
            return Od.__greenTable
          },
          getRedTable: function(a) {
            if (null == Od.__redTable) {
              var b = new Uint8Array(256);
              Od.__redTable = b
            }
            for (var c = 0; 256 > c;) {
              var d = c++;
              b = Math.floor(d * a[0] + 255 * a[4]);
              255 < b && (b = 255);
              0 > b && (b = 0);
              Od.__redTable[d] = b
            }
            return Od.__redTable
          },
          __toFlashColorTransform: function(a) {
            return null
          },
          get_alphaMultiplier: function(a) {
            return a[18]
          },
          set_alphaMultiplier: function(a, b) {
            return a[18] = b
          },
          get_alphaOffset: function(a) {
            return 255 * a[19]
          },
          set_alphaOffset: function(a,
            b) {
            return a[19] = b / 255
          },
          get_blueMultiplier: function(a) {
            return a[12]
          },
          set_blueMultiplier: function(a, b) {
            return a[12] = b
          },
          get_blueOffset: function(a) {
            return 255 * a[14]
          },
          set_blueOffset: function(a, b) {
            return a[14] = b / 255
          },
          get_color: function(a) {
            return (255 * a[4] | 0) << 16 | (255 * a[9] | 0) << 8 | 255 * a[14] | 0
          },
          set_color: function(a, b) {
            a[4] = (b >> 16 & 255) / 255;
            a[9] = (b >> 8 & 255) / 255;
            a[14] = (b & 255) / 255;
            a[0] = 0;
            a[6] = 0;
            a[12] = 0;
            return Od.get_color(a)
          },
          get_greenMultiplier: function(a) {
            return a[6]
          },
          set_greenMultiplier: function(a, b) {
            return a[6] =
              b
          },
          get_greenOffset: function(a) {
            return 255 * a[9]
          },
          set_greenOffset: function(a, b) {
            return a[9] = b / 255
          },
          get_redMultiplier: function(a) {
            return a[0]
          },
          set_redMultiplier: function(a, b) {
            return a[0] = b
          },
          get_redOffset: function(a) {
            return 255 * a[4]
          },
          set_redOffset: function(a, b) {
            return a[4] = b / 255
          },
          get: function(a, b) {
            return a[b]
          },
          set: function(a, b, c) {
            return a[b] = c
          }
        },
        ta = {
          __properties__: {
            set_position: "set_position",
            get_position: "get_position",
            get_determinant: "get_determinant"
          },
          _new: function(a) {
            if (null == a || 16 != a.length) a = ta.__identity,
              a = null != a ? new Float32Array(a) : null;
            return a
          },
          append: function(a, b) {
            var c = a[0],
              d = a[4],
              e = a[8],
              f = a[12],
              g = a[1],
              h = a[5],
              m = a[9],
              l = a[13],
              p = a[2],
              n = a[6],
              k = a[10],
              q = a[14],
              u = a[3],
              v = a[7],
              r = a[11],
              t = a[15],
              w = ta.get(b, 0),
              z = ta.get(b, 4),
              Q = ta.get(b, 8),
              O = ta.get(b, 12),
              A = ta.get(b, 1),
              aa = ta.get(b, 5),
              B = ta.get(b, 9),
              D = ta.get(b, 13),
              F = ta.get(b, 2),
              x = ta.get(b, 6),
              G = ta.get(b, 10),
              C = ta.get(b, 14),
              H = ta.get(b, 3),
              E = ta.get(b, 7),
              K = ta.get(b, 11);
            b = ta.get(b, 15);
            a[0] = c * w + g * z + p * Q + u * O;
            a[1] = c * A + g * aa + p * B + u * D;
            a[2] = c * F + g * x + p * G + u * C;
            a[3] = c * H + g * E + p * K + u *
              b;
            a[4] = d * w + h * z + n * Q + v * O;
            a[5] = d * A + h * aa + n * B + v * D;
            a[6] = d * F + h * x + n * G + v * C;
            a[7] = d * H + h * E + n * K + v * b;
            a[8] = e * w + m * z + k * Q + r * O;
            a[9] = e * A + m * aa + k * B + r * D;
            a[10] = e * F + m * x + k * G + r * C;
            a[11] = e * H + m * E + k * K + r * b;
            a[12] = f * w + l * z + q * Q + t * O;
            a[13] = f * A + l * aa + q * B + t * D;
            a[14] = f * F + l * x + q * G + t * C;
            a[15] = f * H + l * E + q * K + t * b
          },
          appendRotation: function(a, b, c, d) {
            b = ta.__getAxisRotation(a, c.x, c.y, c.z, b);
            null != d && ta.appendTranslation(b, d.x, d.y, d.z);
            ta.append(a, b)
          },
          appendScale: function(a, b, c, d) {
            b = [b, 0, 0, 0, 0, c, 0, 0, 0, 0, d, 0, 0, 0, 0, 1];
            b = null != b ? new Float32Array(b) : null;
            ta.append(a,
              ta._new(b))
          },
          appendTranslation: function(a, b, c, d) {
            a[12] += b;
            a[13] += c;
            a[14] += d
          },
          clone: function(a) {
            a = Xg.toArrayBufferView(a);
            a = null != a ? new Float32Array(a) : null;
            return ta._new(a)
          },
          copyColumnFrom: function(a, b, c) {
            switch (b) {
              case 0:
                a[0] = c.x;
                a[1] = c.y;
                a[2] = c.z;
                a[3] = c.w;
                break;
              case 1:
                a[4] = c.x;
                a[5] = c.y;
                a[6] = c.z;
                a[7] = c.w;
                break;
              case 2:
                a[8] = c.x;
                a[9] = c.y;
                a[10] = c.z;
                a[11] = c.w;
                break;
              case 3:
                a[12] = c.x;
                a[13] = c.y;
                a[14] = c.z;
                a[15] = c.w;
                break;
              default:
                Na.error("Column " + b + " out of bounds [0, ..., 3]", {
                  fileName: "lime/math/Matrix4.hx",
                  lineNumber: 187,
                  className: "lime.math._Matrix4.Matrix4_Impl_",
                  methodName: "copyColumnFrom"
                })
            }
          },
          copyColumnTo: function(a, b, c) {
            switch (b) {
              case 0:
                c.x = a[0];
                c.y = a[1];
                c.z = a[2];
                c.w = a[3];
                break;
              case 1:
                c.x = a[4];
                c.y = a[5];
                c.z = a[6];
                c.w = a[7];
                break;
              case 2:
                c.x = a[8];
                c.y = a[9];
                c.z = a[10];
                c.w = a[11];
                break;
              case 3:
                c.x = a[12];
                c.y = a[13];
                c.z = a[14];
                c.w = a[15];
                break;
              default:
                Na.error("Column " + b + " out of bounds [0, ..., 3]", {
                  fileName: "lime/math/Matrix4.hx",
                  lineNumber: 225,
                  className: "lime.math._Matrix4.Matrix4_Impl_",
                  methodName: "copyColumnTo"
                })
            }
          },
          copyFrom: function(a, b) {
            a.set(b)
          },
          copyRowFrom: function(a, b, c) {
            switch (b) {
              case 0:
                a[0] = c.x;
                a[4] = c.y;
                a[8] = c.z;
                a[12] = c.w;
                break;
              case 1:
                a[1] = c.x;
                a[5] = c.y;
                a[9] = c.z;
                a[13] = c.w;
                break;
              case 2:
                a[2] = c.x;
                a[6] = c.y;
                a[10] = c.z;
                a[14] = c.w;
                break;
              case 3:
                a[3] = c.x;
                a[7] = c.y;
                a[11] = c.z;
                a[15] = c.w;
                break;
              default:
                Na.error("Row " + b + " out of bounds [0, ..., 3]", {
                  fileName: "lime/math/Matrix4.hx",
                  lineNumber: 272,
                  className: "lime.math._Matrix4.Matrix4_Impl_",
                  methodName: "copyRowFrom"
                })
            }
          },
          copyRowTo: function(a, b, c) {
            switch (b) {
              case 0:
                c.x = a[0];
                c.y = a[4];
                c.z = a[8];
                c.w = a[12];
                break;
              case 1:
                c.x = a[1];
                c.y = a[5];
                c.z = a[9];
                c.w = a[13];
                break;
              case 2:
                c.x = a[2];
                c.y = a[6];
                c.z = a[10];
                c.w = a[14];
                break;
              case 3:
                c.x = a[3];
                c.y = a[7];
                c.z = a[11];
                c.w = a[15];
                break;
              default:
                Na.error("Row " + b + " out of bounds [0, ..., 3]", {
                  fileName: "lime/math/Matrix4.hx",
                  lineNumber: 310,
                  className: "lime.math._Matrix4.Matrix4_Impl_",
                  methodName: "copyRowTo"
                })
            }
          },
          create2D: function(a, b, c, d, e, f, g) {
            null == g && (g = 0);
            null == f && (f = 0);
            a[0] = b;
            a[1] = c;
            a[2] = 0;
            a[3] = 0;
            a[4] = d;
            a[5] = e;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = f;
            a[13] = g;
            a[14] = 0;
            a[15] = 1
          },
          createOrtho: function(a, b, c, d, e, f, g) {
            var h = 1 / (c - b),
              m = 1 / (e - d),
              l = 1 / (g - f);
            a[0] = 2 * h;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 2 * m;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = -2 * l;
            a[11] = 0;
            a[12] = -(b + c) * h;
            a[13] = -(d + e) * m;
            a[14] = -(f + g) * l;
            a[15] = 1
          },
          deltaTransformVector: function(a, b, c) {
            null == c && (c = new Ic);
            var d = b.x,
              e = b.y;
            b = b.z;
            c.x = d * a[0] + e * a[4] + b * a[8] + a[3];
            c.y = d * a[1] + e * a[5] + b * a[9] + a[7];
            c.z = d * a[2] + e * a[6] + b * a[10] + a[11];
            return c
          },
          fromMatrix3: function(a) {
            var b = ta._new();
            ta.create2D(b, a.a, a.b,
              a.c, a.d, a.tx, a.ty);
            return b
          },
          identity: function(a) {
            a[0] = 1;
            a[1] = 0;
            a[2] = 0;
            a[3] = 0;
            a[4] = 0;
            a[5] = 1;
            a[6] = 0;
            a[7] = 0;
            a[8] = 0;
            a[9] = 0;
            a[10] = 1;
            a[11] = 0;
            a[12] = 0;
            a[13] = 0;
            a[14] = 0;
            a[15] = 1
          },
          interpolate: function(a, b, c, d) {
            null == d && (d = ta._new());
            for (var e = 0; 16 > e;) {
              var f = e++;
              ta.set(d, f, ta.get(a, f) + (ta.get(b, f) - ta.get(a, f)) * c)
            }
            return d
          },
          interpolateTo: function(a, b, c) {
            for (var d = 0; 16 > d;) {
              var e = d++;
              a[e] += (ta.get(b, e) - a[e]) * c
            }
          },
          invert: function(a) {
            var b = ta.get_determinant(a),
              c = 1E-11 < Math.abs(b);
            if (c) {
              b = 1 / b;
              var d = a[0],
                e = a[4],
                f = a[8],
                g = a[12],
                h = a[1],
                m = a[5],
                l = a[9],
                p = a[13],
                n = a[2],
                k = a[6],
                q = a[10],
                u = a[14],
                v = a[3],
                r = a[7],
                t = a[11],
                w = a[15];
              a[0] = b * (m * (q * w - u * t) - l * (k * w - u * r) + p * (k * t - q * r));
              a[1] = -b * (h * (q * w - u * t) - l * (n * w - u * v) + p * (n * t - q * v));
              a[2] = b * (h * (k * w - u * r) - m * (n * w - u * v) + p * (n * r - k * v));
              a[3] = -b * (h * (k * t - q * r) - m * (n * t - q * v) + l * (n * r - k * v));
              a[4] = -b * (e * (q * w - u * t) - f * (k * w - u * r) + g * (k * t - q * r));
              a[5] = b * (d * (q * w - u * t) - f * (n * w - u * v) + g * (n * t - q * v));
              a[6] = -b * (d * (k * w - u * r) - e * (n * w - u * v) + g * (n * r - k * v));
              a[7] = b * (d * (k * t - q * r) - e * (n * t - q * v) + f * (n * r - k * v));
              a[8] = b * (e * (l * w - p * t) - f * (m * w - p * r) + g * (m * t - l *
                r));
              a[9] = -b * (d * (l * w - p * t) - f * (h * w - p * v) + g * (h * t - l * v));
              a[10] = b * (d * (m * w - p * r) - e * (h * w - p * v) + g * (h * r - m * v));
              a[11] = -b * (d * (m * t - l * r) - e * (h * t - l * v) + f * (h * r - m * v));
              a[12] = -b * (e * (l * u - p * q) - f * (m * u - p * k) + g * (m * q - l * k));
              a[13] = b * (d * (l * u - p * q) - f * (h * u - p * n) + g * (h * q - l * n));
              a[14] = -b * (d * (m * u - p * k) - e * (h * u - p * n) + g * (h * k - m * n));
              a[15] = b * (d * (m * q - l * k) - e * (h * q - l * n) + f * (h * k - m * n))
            }
            return c
          },
          pointAt: function(a, b, c, d) {
            null == c && (c = new Ic(0, 0, 1));
            null == d && (d = new Ic(0, 1, 0));
            var e = null;
            null == e && (e = new Ic);
            e.x = b.x - c.x;
            e.y = b.y - c.y;
            e.z = b.z - c.z;
            c = e;
            d = new Ic(d.x,
              d.y, d.z, d.w);
            e = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z);
            0 != e && (c.x /= e, c.y /= e, c.z /= e);
            e = Math.sqrt(d.x * d.x + d.y * d.y + d.z * d.z);
            0 != e && (d.x /= e, d.y /= e, d.z /= e);
            var f = new Ic(c.x, c.y, c.z, c.w);
            e = d.x * c.x + d.y * c.y + d.z * c.z;
            f.x *= e;
            f.y *= e;
            f.z *= e;
            e = null;
            null == e && (e = new Ic);
            e.x = d.x - f.x;
            e.y = d.y - f.y;
            e.z = d.z - f.z;
            d = e;
            0 < Math.sqrt(d.x * d.x + d.y * d.y + d.z * d.z) ? (e = Math.sqrt(d.x * d.x + d.y * d.y + d.z * d.z), 0 != e && (d.x /= e, d.y /= e, d.z /= e)) : d = 0 != c.x ? new Ic(-c.y, c.x, 0) : new Ic(1, 0, 0);
            e = null;
            null == e && (e = new Ic);
            f = d.z * c.x - d.x * c.z;
            var g = d.x * c.y - d.y * c.x;
            e.x = d.y * c.z - d.z * c.y;
            e.y = f;
            e.z = g;
            e.w = 1;
            f = e;
            e = Math.sqrt(f.x * f.x + f.y * f.y + f.z * f.z);
            0 != e && (f.x /= e, f.y /= e, f.z /= e);
            a[0] = f.x;
            a[4] = f.y;
            a[8] = f.z;
            a[12] = 0;
            a[1] = d.x;
            a[5] = d.y;
            a[9] = d.z;
            a[13] = 0;
            a[2] = c.x;
            a[6] = c.y;
            a[10] = c.z;
            a[14] = 0;
            a[3] = b.x;
            a[7] = b.y;
            a[11] = b.z;
            a[15] = 1
          },
          prepend: function(a, b) {
            var c = ta.get(b, 0),
              d = ta.get(b, 4),
              e = ta.get(b, 8),
              f = ta.get(b, 12),
              g = ta.get(b, 1),
              h = ta.get(b, 5),
              m = ta.get(b, 9),
              l = ta.get(b, 13),
              p = ta.get(b, 2),
              n = ta.get(b, 6),
              k = ta.get(b, 10),
              q = ta.get(b, 14),
              u = ta.get(b, 3),
              v = ta.get(b, 7),
              r = ta.get(b, 11);
            b = ta.get(b,
              15);
            var t = a[0],
              w = a[4],
              z = a[8],
              Q = a[12],
              O = a[1],
              A = a[5],
              aa = a[9],
              B = a[13],
              D = a[2],
              F = a[6],
              x = a[10],
              G = a[14],
              C = a[3],
              H = a[7],
              E = a[11],
              K = a[15];
            a[0] = c * t + g * w + p * z + u * Q;
            a[1] = c * O + g * A + p * aa + u * B;
            a[2] = c * D + g * F + p * x + u * G;
            a[3] = c * C + g * H + p * E + u * K;
            a[4] = d * t + h * w + n * z + v * Q;
            a[5] = d * O + h * A + n * aa + v * B;
            a[6] = d * D + h * F + n * x + v * G;
            a[7] = d * C + h * H + n * E + v * K;
            a[8] = e * t + m * w + k * z + r * Q;
            a[9] = e * O + m * A + k * aa + r * B;
            a[10] = e * D + m * F + k * x + r * G;
            a[11] = e * C + m * H + k * E + r * K;
            a[12] = f * t + l * w + q * z + b * Q;
            a[13] = f * O + l * A + q * aa + b * B;
            a[14] = f * D + l * F + q * x + b * G;
            a[15] = f * C + l * H + q * E + b * K
          },
          prependRotation: function(a,
            b, c, d) {
            b = ta.__getAxisRotation(a, c.x, c.y, c.z, b);
            null != d && ta.appendTranslation(b, d.x, d.y, d.z);
            ta.prepend(a, b)
          },
          prependScale: function(a, b, c, d) {
            b = [b, 0, 0, 0, 0, c, 0, 0, 0, 0, d, 0, 0, 0, 0, 1];
            b = null != b ? new Float32Array(b) : null;
            ta.prepend(a, ta._new(b))
          },
          prependTranslation: function(a, b, c, d) {
            var e = ta._new();
            ta.set_position(e, new Ic(b, c, d));
            ta.prepend(a, e)
          },
          transformVector: function(a, b, c) {
            null == c && (c = new Ic);
            var d = b.x,
              e = b.y;
            b = b.z;
            c.x = d * a[0] + e * a[4] + b * a[8] + a[12];
            c.y = d * a[1] + e * a[5] + b * a[9] + a[13];
            c.z = d * a[2] + e * a[6] + b * a[10] +
              a[14];
            c.w = d * a[3] + e * a[7] + b * a[11] + a[15];
            return c
          },
          transformVectors: function(a, b, c) {
            for (var d = 0, e, f, g; d + 3 <= b.length;) e = b[d], f = b[d + 1], g = b[d + 2], c[d] = e * a[0] + f * a[4] + g * a[8] + a[12], c[d + 1] = e * a[1] + f * a[5] + g * a[9] + a[13], c[d + 2] = e * a[2] + f * a[6] + g * a[10] + a[14], d += 3
          },
          transpose: function(a) {
            var b = a[1];
            a[1] = a[4];
            a[4] = b;
            b = a[2];
            a[2] = a[8];
            a[8] = b;
            b = a[3];
            a[3] = a[12];
            a[12] = b;
            b = a[6];
            a[6] = a[9];
            a[9] = b;
            b = a[7];
            a[7] = a[13];
            a[13] = b;
            b = a[11];
            a[11] = a[14];
            a[14] = b
          },
          __getAxisRotation: function(a, b, c, d, e) {
            a = ta._new();
            b = new Ic(b, c, d);
            e = Math.PI /
              180 * -e;
            d = Math.cos(e);
            e = Math.sin(e);
            c = 1 - d;
            ta.set(a, 0, d + b.x * b.x * c);
            ta.set(a, 5, d + b.y * b.y * c);
            ta.set(a, 10, d + b.z * b.z * c);
            d = b.x * b.y * c;
            var f = b.z * e;
            ta.set(a, 4, d + f);
            ta.set(a, 1, d - f);
            d = b.x * b.z * c;
            f = b.y * e;
            ta.set(a, 8, d - f);
            ta.set(a, 2, d + f);
            d = b.y * b.z * c;
            f = b.x * e;
            ta.set(a, 9, d + f);
            ta.set(a, 6, d - f);
            return a
          },
          __swap: function(a, b, c) {
            var d = a[b];
            a[b] = a[c];
            a[c] = d
          },
          get_determinant: function(a) {
            return (a[0] * a[5] - a[4] * a[1]) * (a[10] * a[15] - a[14] * a[11]) - (a[0] * a[9] - a[8] * a[1]) * (a[6] * a[15] - a[14] * a[7]) + (a[0] * a[13] - a[12] * a[1]) * (a[6] * a[11] - a[10] *
              a[7]) + (a[4] * a[9] - a[8] * a[5]) * (a[2] * a[15] - a[14] * a[3]) - (a[4] * a[13] - a[12] * a[5]) * (a[2] * a[11] - a[10] * a[3]) + (a[8] * a[13] - a[12] * a[9]) * (a[2] * a[7] - a[6] * a[3])
          },
          get_position: function(a) {
            return new Ic(a[12], a[13], a[14])
          },
          set_position: function(a, b) {
            a[12] = b.x;
            a[13] = b.y;
            a[14] = b.z;
            return b
          },
          get: function(a, b) {
            return a[b]
          },
          set: function(a, b, c) {
            return a[b] = c
          }
        },
        G = {
          __properties__: {
            set_r: "set_r",
            get_r: "get_r",
            set_g: "set_g",
            get_g: "get_g",
            set_b: "set_b",
            get_b: "get_b",
            set_a: "set_a",
            get_a: "get_a"
          },
          _new: function(a) {
            null == a && (a =
              0);
            return a
          },
          create: function(a, b, c, d) {
            return (a & 255) << 24 | (b & 255) << 16 | (c & 255) << 8 | d & 255
          },
          multiplyAlpha: function(a) {
            0 != (a & 255) && 255 != (a & 255) && (G.a16 = G.__alpha16[a & 255])
          },
          readUInt8: function(a, b, c, d, e) {
            null == e && (e = !1);
            null == d && (d = 0);
            switch (d) {
              case 0:
                a = (b[c] & 255) << 24 | (b[c + 1] & 255) << 16 | (b[c + 2] & 255) << 8 | b[c + 3] & 255;
                break;
              case 1:
                a = (b[c + 1] & 255) << 24 | (b[c + 2] & 255) << 16 | (b[c + 3] & 255) << 8 | b[c] & 255;
                break;
              case 2:
                a = (b[c + 2] & 255) << 24 | (b[c + 1] & 255) << 16 | (b[c] & 255) << 8 | b[c + 3] & 255
            }
            e && 0 != (a & 255) && 255 != (a & 255) && (G.unmult = 255 / (a & 255))
          },
          set: function(a, b, c, d, e) {},
          unmultiplyAlpha: function(a) {
            0 != (a & 255) && 255 != (a & 255) && (G.unmult = 255 / (a & 255))
          },
          writeUInt8: function(a, b, c, d, e) {
            null == e && (e = !1);
            null == d && (d = 0);
            e && (0 == (a & 255) ? 0 != a && (a = 0) : 255 != (a & 255) && (G.a16 = G.__alpha16[a & 255], a = ((a >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((a >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((a >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | a & 255));
            switch (d) {
              case 0:
                b[c] = a >>> 24 & 255;
                b[c + 1] = a >>> 16 & 255;
                b[c + 2] = a >>> 8 & 255;
                b[c + 3] = a & 255;
                break;
              case 1:
                b[c] = a & 255;
                b[c + 1] = a >>> 24 & 255;
                b[c + 2] = a >>> 16 & 255;
                b[c + 3] = a >>> 8 & 255;
                break;
              case 2:
                b[c] = a >>> 8 & 255, b[c + 1] = a >>> 16 & 255, b[c + 2] = a >>> 24 & 255, b[c + 3] = a & 255
            }
          },
          __fromARGB: function(a) {
            return (a >>> 16 & 255) << 24 | (a >>> 8 & 255) << 16 | (a & 255) << 8 | a >>> 24 & 255
          },
          __fromBGRA: function(a) {
            return (a >>> 8 & 255) << 24 | (a >>> 16 & 255) << 16 | (a >>> 24 & 255) << 8 | a & 255
          },
          get_a: function(a) {
            return a & 255
          },
          set_a: function(a, b) {
            return b
          },
          get_b: function(a) {
            return a >>> 8 & 255
          },
          set_b: function(a, b) {
            return b
          },
          get_g: function(a) {
            return a >>> 16 & 255
          },
          set_g: function(a, b) {
            return b
          },
          get_r: function(a) {
            return a >>> 24 & 255
          },
          set_r: function(a, b) {
            return b
          }
        },
        Td = function(a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d
        };
      k["lime.math.Rectangle"] = Td;
      Td.__name__ = "lime.math.Rectangle";
      Td.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        clone: function() {
          return new Td(this.x, this.y, this.width, this.height)
        },
        contains: function(a, b) {
          return a >= this.x && b >= this.y && a < this.get_right() ? b < this.get_bottom() : !1
        },
        containsPoint: function(a) {
          return this.containsVector(a)
        },
        containsRect: function(a) {
          return 0 >= a.width ||
            0 >= a.height ? a.x > this.x && a.y > this.y && a.get_right() < this.get_right() ? a.get_bottom() < this.get_bottom() : !1 : a.x >= this.x && a.y >= this.y && a.get_right() <= this.get_right() ? a.get_bottom() <= this.get_bottom() : !1
        },
        containsVector: function(a) {
          return this.contains(a.x, a.y)
        },
        copyFrom: function(a) {
          this.x = a.x;
          this.y = a.y;
          this.width = a.width;
          this.height = a.height
        },
        equals: function(a) {
          return null != a && this.x == a.x && this.y == a.y && this.width == a.width ? this.height == a.height : !1
        },
        inflate: function(a, b) {
          this.x -= a;
          this.width += 2 * a;
          this.y -=
            b;
          this.height += 2 * b
        },
        inflateVector: function(a) {
          this.inflate(a.x, a.y)
        },
        intersection: function(a, b) {
          null == b && (b = new Td);
          var c = this.x < a.x ? a.x : this.x,
            d = this.get_right() > a.get_right() ? a.get_right() : this.get_right();
          if (d <= c) return b.setEmpty(), b;
          var e = this.y < a.y ? a.y : this.y;
          a = this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom();
          if (a <= e) return b.setEmpty(), b;
          b.x = c;
          b.y = e;
          b.width = d - c;
          b.height = a - e;
          return b
        },
        intersects: function(a) {
          var b = this.x < a.x ? a.x : this.x;
          if ((this.get_right() > a.get_right() ? a.get_right() :
              this.get_right()) <= b) return !1;
          b = this.y < a.y ? a.y : this.y;
          return (this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom()) > b
        },
        isEmpty: function() {
          return 0 >= this.width ? !0 : 0 >= this.height
        },
        offset: function(a, b) {
          this.x += a;
          this.y += b
        },
        offsetVector: function(a) {
          this.x += a.x;
          this.y += a.y
        },
        setEmpty: function() {
          this.x = this.y = this.width = this.height = 0
        },
        setTo: function(a, b, c, d) {
          this.x = a;
          this.y = b;
          this.width = c;
          this.height = d
        },
        union: function(a, b) {
          null == b && (b = new Td);
          if (0 == this.width || 0 == this.height) b.copyFrom(a);
          else if (0 ==
            a.width || 0 == a.height) b.copyFrom(this);
          else {
            var c = this.x > a.x ? a.x : this.x,
              d = this.get_right() < a.get_right() ? a.get_right() : this.get_right(),
              e = this.y > a.y ? a.y : this.y;
            a = this.get_bottom() < a.get_bottom() ? a.get_bottom() : this.get_bottom();
            b.setTo(c, e, d - c, a - e)
          }
          return b
        },
        __toFlashRectangle: function() {
          return null
        },
        get_bottom: function() {
          return this.y + this.height
        },
        set_bottom: function(a) {
          this.height = a - this.y;
          return a
        },
        get_bottomRight: function() {
          return new be(this.x + this.width, this.y + this.height)
        },
        set_bottomRight: function(a) {
          this.width =
            a.x - this.x;
          this.height = a.y - this.y;
          return a.clone()
        },
        get_left: function() {
          return this.x
        },
        set_left: function(a) {
          this.width -= a - this.x;
          return this.x = a
        },
        get_right: function() {
          return this.x + this.width
        },
        set_right: function(a) {
          this.width = a - this.x;
          return a
        },
        get_size: function() {
          return new be(this.width, this.height)
        },
        set_size: function(a) {
          this.width = a.x;
          this.height = a.y;
          return a.clone()
        },
        get_top: function() {
          return this.y
        },
        set_top: function(a) {
          this.height -= a - this.y;
          return this.y = a
        },
        get_topLeft: function() {
          return new be(this.x,
            this.y)
        },
        set_topLeft: function(a) {
          this.x = a.x;
          this.y = a.y;
          return a.clone()
        },
        __class__: Td,
        __properties__: {
          set_topLeft: "set_topLeft",
          get_topLeft: "get_topLeft",
          set_top: "set_top",
          get_top: "get_top",
          set_size: "set_size",
          get_size: "get_size",
          set_right: "set_right",
          get_right: "get_right",
          set_left: "set_left",
          get_left: "get_left",
          set_bottomRight: "set_bottomRight",
          get_bottomRight: "get_bottomRight",
          set_bottom: "set_bottom",
          get_bottom: "get_bottom"
        }
      };
      var be = function(a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = a;
        this.y = b
      };
      k["lime.math.Vector2"] = be;
      be.__name__ = "lime.math.Vector2";
      be.distance = function(a, b) {
        var c = a.x - b.x;
        a = a.y - b.y;
        return Math.sqrt(c * c + a * a)
      };
      be.interpolate = function(a, b, c, d) {
        null == d && (d = new be);
        d.x = b.x + c * (a.x - b.x);
        d.y = b.y + c * (a.y - b.y);
        return d
      };
      be.polar = function(a, b, c) {
        null == c && (c = new be);
        var d = a * Math.sin(b);
        c.x = a * Math.cos(b);
        c.y = d;
        return c
      };
      be.prototype = {
        x: null,
        y: null,
        add: function(a, b) {
          null == b && (b = new be);
          b.x = a.x + this.x;
          b.y = a.y + this.y;
          return b
        },
        clone: function() {
          return new be(this.x, this.y)
        },
        equals: function(a) {
          return null !=
            a && a.x == this.x ? a.y == this.y : !1
        },
        normalize: function(a) {
          if (0 != this.x || 0 != this.y) a /= Math.sqrt(this.x * this.x + this.y * this.y), this.x *= a, this.y *= a
        },
        offset: function(a, b) {
          this.x += a;
          this.y += b
        },
        setTo: function(a, b) {
          this.x = a;
          this.y = b
        },
        subtract: function(a, b) {
          null == b && (b = new be);
          b.x = this.x - a.x;
          b.y = this.y - a.y;
          return b
        },
        __toFlashPoint: function() {
          return null
        },
        get_length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        get_lengthSquared: function() {
          return this.x * this.x + this.y * this.y
        },
        __class__: be,
        __properties__: {
          get_lengthSquared: "get_lengthSquared",
          get_length: "get_length"
        }
      };
      var Ic = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c
      };
      k["lime.math.Vector4"] = Ic;
      Ic.__name__ = "lime.math.Vector4";
      Ic.__properties__ = {
        get_Z_AXIS: "get_Z_AXIS",
        get_Y_AXIS: "get_Y_AXIS",
        get_X_AXIS: "get_X_AXIS"
      };
      Ic.angleBetween = function(a, b) {
        a = new Ic(a.x, a.y, a.z, a.w);
        var c = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
        0 != c && (a.x /= c, a.y /= c, a.z /= c);
        b = new Ic(b.x, b.y, b.z, b.w);
        c = Math.sqrt(b.x * b.x + b.y * b.y + b.z * b.z);
        0 != c && (b.x /= c,
          b.y /= c, b.z /= c);
        return Math.acos(a.x * b.x + a.y * b.y + a.z * b.z)
      };
      Ic.distance = function(a, b) {
        var c = b.x - a.x,
          d = b.y - a.y;
        a = b.z - a.z;
        return Math.sqrt(c * c + d * d + a * a)
      };
      Ic.distanceSquared = function(a, b) {
        var c = b.x - a.x,
          d = b.y - a.y;
        a = b.z - a.z;
        return c * c + d * d + a * a
      };
      Ic.get_X_AXIS = function() {
        return new Ic(1, 0, 0)
      };
      Ic.get_Y_AXIS = function() {
        return new Ic(0, 1, 0)
      };
      Ic.get_Z_AXIS = function() {
        return new Ic(0, 0, 1)
      };
      Ic.prototype = {
        w: null,
        x: null,
        y: null,
        z: null,
        add: function(a, b) {
          null == b && (b = new Ic);
          b.x = this.x + a.x;
          b.y = this.y + a.y;
          b.z = this.z + a.z;
          return b
        },
        clone: function() {
          return new Ic(this.x, this.y, this.z, this.w)
        },
        copyFrom: function(a) {
          this.x = a.x;
          this.y = a.y;
          this.z = a.z
        },
        crossProduct: function(a, b) {
          null == b && (b = new Ic);
          var c = this.z * a.x - this.x * a.z,
            d = this.x * a.y - this.y * a.x;
          b.x = this.y * a.z - this.z * a.y;
          b.y = c;
          b.z = d;
          b.w = 1;
          return b
        },
        decrementBy: function(a) {
          this.x -= a.x;
          this.y -= a.y;
          this.z -= a.z
        },
        dotProduct: function(a) {
          return this.x * a.x + this.y * a.y + this.z * a.z
        },
        equals: function(a, b) {
          null == b && (b = !1);
          return this.x == a.x && this.y == a.y && this.z == a.z ? b ? this.w == a.w : !0 :
            !1
        },
        incrementBy: function(a) {
          this.x += a.x;
          this.y += a.y;
          this.z += a.z
        },
        nearEquals: function(a, b, c) {
          null == c && (c = !1);
          return Math.abs(this.x - a.x) < b && Math.abs(this.y - a.y) < b && Math.abs(this.z - a.z) < b ? c ? Math.abs(this.w - a.w) < b : !0 : !1
        },
        negate: function() {
          this.x *= -1;
          this.y *= -1;
          this.z *= -1
        },
        normalize: function() {
          var a = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
          0 != a && (this.x /= a, this.y /= a, this.z /= a);
          return a
        },
        project: function() {
          this.x /= this.w;
          this.y /= this.w;
          this.z /= this.w
        },
        scaleBy: function(a) {
          this.x *= a;
          this.y *=
            a;
          this.z *= a
        },
        setTo: function(a, b, c) {
          this.x = a;
          this.y = b;
          this.z = c
        },
        subtract: function(a, b) {
          null == b && (b = new Ic);
          b.x = this.x - a.x;
          b.y = this.y - a.y;
          b.z = this.z - a.z;
          return b
        },
        toString: function() {
          return "Vector4(" + this.x + ", " + this.y + ", " + this.z + ")"
        },
        get_length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        get_lengthSquared: function() {
          return this.x * this.x + this.y * this.y + this.z * this.z
        },
        __class__: Ic,
        __properties__: {
          get_lengthSquared: "get_lengthSquared",
          get_length: "get_length"
        }
      };
      var Zc = function() {};
      k["lime.media.AudioBuffer"] = Zc;
      Zc.__name__ = "lime.media.AudioBuffer";
      Zc.fromBase64 = function(a) {
        if (null == a) return null; - 1 == a.indexOf(",") && (a = "data:" + Zc.__getCodec(Qf.decode(a)) + ";base64," + a);
        var b = new Zc;
        b.set_src(new Howl({
          src: [a],
          html5: !0,
          preload: !1
        }));
        return b
      };
      Zc.fromBytes = function(a) {
        if (null == a) return null;
        var b = new Zc;
        b.set_src(new Howl({
          src: ["data:" + Zc.__getCodec(a) + ";base64," + Qf.encode(a)],
          html5: !0,
          preload: !1
        }));
        return b
      };
      Zc.fromFile = function(a) {
        if (null == a) return null;
        var b = new Zc;
        b.__srcHowl =
          new Howl({
            src: [a],
            preload: !1
          });
        return b
      };
      Zc.fromFiles = function(a) {
        var b = new Zc;
        b.__srcHowl = new Howl({
          src: a,
          preload: !1
        });
        return b
      };
      Zc.fromVorbisFile = function(a) {
        return null
      };
      Zc.loadFromFile = function(a) {
        var b = new ee,
          c = Zc.fromFile(a);
        null != c ? null != c && (c.__srcHowl.on("load", function() {
          b.complete(c)
        }), c.__srcHowl.on("loaderror", function(a, c) {
          b.error(c)
        }), c.__srcHowl.load()) : b.error(null);
        return b.future
      };
      Zc.loadFromFiles = function(a) {
        var b = new ee,
          c = Zc.fromFiles(a);
        null != c ? (c.__srcHowl.on("load", function() {
            b.complete(c)
          }),
          c.__srcHowl.on("loaderror", function() {
            b.error(null)
          }), c.__srcHowl.load()) : b.error(null);
        return b.future
      };
      Zc.__getCodec = function(a) {
        switch (a.getString(0, 4)) {
          case "OggS":
            return "audio/ogg";
          case "RIFF":
            if ("WAVE" == a.getString(8, 4)) return "audio/wav";
            var b = a.b[1],
              c = a.b[2];
            switch (a.b[0]) {
              case 73:
                if (68 == b && 51 == c) return "audio/mp3";
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return "audio/mp3"
                }
            }
            break;
          case "fLaC":
            return "audio/flac";
          default:
            switch (b = a.b[1], c = a.b[2], a.b[0]) {
              case 73:
                if (68 == b && 51 == c) return "audio/mp3";
                break;
              case 255:
                switch (b) {
                  case 243:
                  case 250:
                  case 251:
                    return "audio/mp3"
                }
            }
        }
        Na.error("Unsupported sound format", {
          fileName: "lime/media/AudioBuffer.hx",
          lineNumber: 362,
          className: "lime.media.AudioBuffer",
          methodName: "__getCodec"
        });
        return null
      };
      Zc.prototype = {
        bitsPerSample: null,
        channels: null,
        data: null,
        sampleRate: null,
        __srcAudio: null,
        __srcBuffer: null,
        __srcCustom: null,
        __srcHowl: null,
        __srcSound: null,
        __srcVorbisFile: null,
        dispose: function() {
          this.__srcHowl.unload()
        },
        get_src: function() {
          return this.__srcHowl
        },
        set_src: function(a) {
          return this.__srcHowl =
            a
        },
        __class__: Zc,
        __properties__: {
          set_src: "set_src",
          get_src: "get_src"
        }
      };
      var So = function(a) {
        if ("custom" != a) {
          if (null == a || "web" == a) try {
            window.AudioContext = window.AudioContext || window.webkitAudioContext, this.web = new window.AudioContext, this.type = "web"
          } catch (b) {
            pa.lastError = b
          }
          null == this.web && "web" != a && (this.html5 = new Ro, this.type = "html5")
        } else this.type = "custom"
      };
      k["lime.media.AudioContext"] = So;
      So.__name__ = "lime.media.AudioContext";
      So.prototype = {
        custom: null,
        flash: null,
        html5: null,
        openal: null,
        type: null,
        web: null,
        __class__: So
      };
      var Dc = function() {};
      k["lime.media.AudioManager"] = Dc;
      Dc.__name__ = "lime.media.AudioManager";
      Dc.init = function(a) {
        if (null == Dc.context) {
          if (null == a && (Dc.context = new So, a = Dc.context, "openal" == a.type)) {
            var b = a.openal,
              c = b.openDevice();
            c = b.createContext(c);
            b.makeContextCurrent(c);
            b.processContext(c)
          }
          Dc.context = a
        }
      };
      Dc.resume = function() {
        if (null != Dc.context && "openal" == Dc.context.type) {
          var a = Dc.context.openal,
            b = a.getCurrentContext();
          if (null != b) {
            var c = a.getContextsDevice(b);
            a.resumeDevice(c);
            a.processContext(b)
          }
        }
      };
      Dc.addAudioSource = function(a) {
        -1 == Dc.audioSources.indexOf(a) && Dc.audioSources.push(a)
      };
      Dc.removeAudioSource = function(a) {
        0 <= Dc.audioSources.indexOf(a) && Dc.sourcesToRemove.push(a)
      };
      Dc.update = function() {
        for (var a = 0, b = Dc.audioSources; a < b.length;) {
          var c = b[a];
          ++a;
          c.update()
        }
        for (; 0 < Dc.sourcesToRemove.length;) c = Dc.sourcesToRemove.pop(), -1 != Dc.audioSources.indexOf(c) && da.remove(Dc.audioSources, c)
      };
      Dc.shutdown = function() {
        if (null != Dc.context && "openal" == Dc.context.type) {
          var a = Dc.context.openal,
            b = a.getCurrentContext();
          if (null != b) {
            var c = a.getContextsDevice(b);
            a.makeContextCurrent(null);
            a.destroyContext(b);
            null != c && a.closeDevice(c)
          }
        }
        Dc.context = null
      };
      Dc.suspend = function() {
        if (null != Dc.context && "openal" == Dc.context.type) {
          var a = Dc.context.openal,
            b = a.getCurrentContext();
          null != b && (a.suspendContext(b), b = a.getContextsDevice(b), null != b && a.pauseDevice(b))
        }
      };
      var Wj = function(a, b, c, d) {
        null == d && (d = 0);
        null == b && (b = 0);
        this.id = Wj.ID++;
        this.onComplete = new Pd;
        this.buffer = a;
        this.offset = b;
        this.__backend = new yo(this);
        null != c && 0 != c && this.set_length(c);
        this.set_loops(d);
        null != a && this.init()
      };
      k["lime.media.AudioSource"] = Wj;
      Wj.__name__ = "lime.media.AudioSource";
      Wj.prototype = {
        onComplete: null,
        id: null,
        buffer: null,
        offset: null,
        _pan: null,
        _position: null,
        __backend: null,
        dispose: function() {
          this.__backend.dispose();
          Dc.removeAudioSource(this)
        },
        init: function() {
          this.__backend.init();
          Dc.addAudioSource(this)
        },
        play: function() {
          this.__backend.play()
        },
        pause: function() {
          this.__backend.pause()
        },
        stop: function() {
          this.__backend.stop()
        },
        update: function() {
          this.__backend.update()
        },
        get_currentTime: function() {
          return this.__backend.getCurrentTime()
        },
        set_currentTime: function(a) {
          return this.__backend.setCurrentTime(a)
        },
        get_gain: function() {
          return this.__backend.getGain()
        },
        set_gain: function(a) {
          return this.__backend.setGain(a)
        },
        get_length: function() {
          return this.__backend.getLength()
        },
        set_length: function(a) {
          return this.__backend.setLength(a)
        },
        get_loops: function() {
          return this.__backend.getLoops()
        },
        set_loops: function(a) {
          return this.__backend.setLoops(a)
        },
        get_pan: function() {
          return this._pan
        },
        set_pan: function(a) {
          if (null != this._position) return this._pan;
          null == a && (this._pan = this.__backend.setPan(0));
          return this._pan = this.__backend.setPan(a)
        },
        get_position: function() {
          return this._position
        },
        set_position: function(a) {
          if (null != this._pan) return this._position;
          null == a && (this._position = this.__backend.setPosition(new Ic(0, 0, 0, 0)));
          return this._position = this.__backend.setPosition(a)
        },
        __class__: Wj,
        __properties__: {
          set_position: "set_position",
          get_position: "get_position",
          set_pan: "set_pan",
          get_pan: "get_pan",
          set_loops: "set_loops",
          get_loops: "get_loops",
          set_length: "set_length",
          get_length: "get_length",
          set_gain: "set_gain",
          get_gain: "get_gain",
          set_currentTime: "set_currentTime",
          get_currentTime: "get_currentTime"
        }
      };
      var Fq = function() {};
      k["lime.media.FlashAudioContext"] = Fq;
      Fq.__name__ = "lime.media.FlashAudioContext";
      Fq.prototype = {
        createBuffer: function(a, b) {
          return null
        },
        getBytesLoaded: function(a) {
          return 0
        },
        getBytesTotal: function(a) {
          return 0
        },
        getID3: function(a) {
          return null
        },
        getIsBuffering: function(a) {
          return !1
        },
        getIsURLInaccessible: function(a) {
          return !1
        },
        getLength: function(a) {
          return 0
        },
        getURL: function(a) {
          return null
        },
        close: function(a) {},
        extract: function(a, b, c, d) {
          return 0
        },
        load: function(a, b, c) {},
        loadCompressedDataFromByteArray: function(a, b, c) {},
        loadPCMFromByteArray: function(a, b, c, d, e, f) {},
        play: function(a, b, c, d) {
          return null
        },
        __class__: Fq
      };
      var Ro = function() {
        this.NETWORK_NO_SOURCE = 3;
        this.NETWORK_LOADING = 2;
        this.NETWORK_IDLE = 1;
        this.HAVE_NOTHING = this.NETWORK_EMPTY = 0;
        this.HAVE_METADATA = 1;
        this.HAVE_FUTURE_DATA = 3;
        this.HAVE_ENOUGH_DATA = 4;
        this.HAVE_CURRENT_DATA =
          2
      };
      k["lime.media.HTML5AudioContext"] = Ro;
      Ro.__name__ = "lime.media.HTML5AudioContext";
      Ro.prototype = {
        HAVE_CURRENT_DATA: null,
        HAVE_ENOUGH_DATA: null,
        HAVE_FUTURE_DATA: null,
        HAVE_METADATA: null,
        HAVE_NOTHING: null,
        NETWORK_EMPTY: null,
        NETWORK_IDLE: null,
        NETWORK_LOADING: null,
        NETWORK_NO_SOURCE: null,
        canPlayType: function(a, b) {
          return null != a.__srcAudio ? a.__srcAudio.canPlayType(b) : null
        },
        createBuffer: function(a) {
          var b = new Zc;
          b.__srcAudio = new Audio;
          b.__srcAudio.src = a;
          return b
        },
        getAutoplay: function(a) {
          return null != a.__srcAudio ?
            a.__srcAudio.autoplay : !1
        },
        getBuffered: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.buffered : null
        },
        getCurrentSrc: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.currentSrc : null
        },
        getCurrentTime: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.currentTime : 0
        },
        getDefaultPlaybackRate: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.defaultPlaybackRate : 1
        },
        getDuration: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.duration : 0
        },
        getEnded: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.ended :
            !1
        },
        getError: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.error : null
        },
        getLoop: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.loop : !1
        },
        getMuted: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.muted : !1
        },
        getNetworkState: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.networkState : 0
        },
        getPaused: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.paused : !1
        },
        getPlaybackRate: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.playbackRate : 1
        },
        getPlayed: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.played :
            null
        },
        getPreload: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.preload : null
        },
        getReadyState: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.readyState : 0
        },
        getSeekable: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.seekable : null
        },
        getSeeking: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.seeking : !1
        },
        getSrc: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.src : null
        },
        getStartTime: function(a) {
          return null != a.__srcAudio ? a.__srcAudio.playbackRate : 0
        },
        getVolume: function(a) {
          return null != a.__srcAudio ?
            a.__srcAudio.volume : 1
        },
        load: function(a) {
          null != a.__srcAudio && a.__srcAudio.load()
        },
        pause: function(a) {
          null != a.__srcAudio && a.__srcAudio.pause()
        },
        play: function(a) {
          null != a.__srcAudio && a.__srcAudio.play()
        },
        setAutoplay: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.autoplay = b)
        },
        setCurrentTime: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.currentTime = b)
        },
        setDefaultPlaybackRate: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.defaultPlaybackRate = b)
        },
        setLoop: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.loop =
            b)
        },
        setMuted: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.muted = b)
        },
        setPlaybackRate: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.playbackRate = b)
        },
        setPreload: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.preload = b)
        },
        setSrc: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.src = b)
        },
        setVolume: function(a, b) {
          null != a.__srcAudio && (a.__srcAudio.volume = b)
        },
        __class__: Ro
      };
      var Gq = function() {
        this.ALL_DEVICES_SPECIFIER = 4115;
        this.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
        this.ENUMERATE_ALL_EXT = 1;
        this.DEVICE_SPECIFIER =
          4101;
        this.DEFAULT_DEVICE_SPECIFIER = 4100;
        this.ALL_ATTRIBUTES = 4099;
        this.ATTRIBUTES_SIZE = 4098;
        this.INVALID_CONTEXT = 40962;
        this.INVALID_DEVICE = 40961;
        this.STEREO_SOURCES = 4113;
        this.MONO_SOURCES = 4112;
        this.SYNC = 4105;
        this.REFRESH = 4104;
        this.EXPONENT_DISTANCE_CLAMPED = 53254;
        this.EXPONENT_DISTANCE = 53253;
        this.LINEAR_DISTANCE_CLAMPED = 53252;
        this.LINEAR_DISTANCE = 53251;
        this.INVERSE_DISTANCE_CLAMPED = 53250;
        this.INVERSE_DISTANCE = 53249;
        this.DISTANCE_MODEL = 53248;
        this.DOPPLER_VELOCITY = 49153;
        this.SPEED_OF_SOUND = 49155;
        this.DOPPLER_FACTOR =
          49152;
        this.EXTENSIONS = 45060;
        this.RENDERER = 45059;
        this.VERSION = 45058;
        this.VENDOR = 45057;
        this.OUT_OF_MEMORY = 40965;
        this.INVALID_OPERATION = 40964;
        this.INVALID_VALUE = 40963;
        this.INVALID_ENUM = 40962;
        this.INVALID_NAME = 40961;
        this.NO_ERROR = 0;
        this.SIZE = 8196;
        this.CHANNELS = 8195;
        this.BITS = 8194;
        this.FREQUENCY = 8193;
        this.FORMAT_STEREO16 = 4355;
        this.FORMAT_STEREO8 = 4354;
        this.FORMAT_MONO16 = 4353;
        this.FORMAT_MONO8 = 4352;
        this.UNDETERMINED = 4144;
        this.STREAMING = 4137;
        this.STATIC = 4136;
        this.SOURCE_TYPE = 4135;
        this.BYTE_OFFSET = 4134;
        this.SAMPLE_OFFSET =
          4133;
        this.SEC_OFFSET = 4132;
        this.MAX_DISTANCE = 4131;
        this.CONE_OUTER_GAIN = 4130;
        this.ROLLOFF_FACTOR = 4129;
        this.REFERENCE_DISTANCE = 4128;
        this.BUFFERS_PROCESSED = 4118;
        this.BUFFERS_QUEUED = 4117;
        this.STOPPED = 4116;
        this.PAUSED = 4115;
        this.PLAYING = 4114;
        this.INITIAL = 4113;
        this.SOURCE_STATE = 4112;
        this.ORIENTATION = 4111;
        this.MAX_GAIN = 4110;
        this.MIN_GAIN = 4109;
        this.GAIN = 4106;
        this.BUFFER = 4105;
        this.LOOPING = 4103;
        this.VELOCITY = 4102;
        this.DIRECTION = 4101;
        this.POSITION = 4100;
        this.PITCH = 4099;
        this.CONE_OUTER_ANGLE = 4098;
        this.CONE_INNER_ANGLE =
          4097;
        this.SOURCE_RELATIVE = 514;
        this.TRUE = 1;
        this.NONE = this.FALSE = 0
      };
      k["lime.media.OpenALAudioContext"] = Gq;
      Gq.__name__ = "lime.media.OpenALAudioContext";
      Gq.prototype = {
        NONE: null,
        FALSE: null,
        TRUE: null,
        SOURCE_RELATIVE: null,
        CONE_INNER_ANGLE: null,
        CONE_OUTER_ANGLE: null,
        PITCH: null,
        POSITION: null,
        DIRECTION: null,
        VELOCITY: null,
        LOOPING: null,
        BUFFER: null,
        GAIN: null,
        MIN_GAIN: null,
        MAX_GAIN: null,
        ORIENTATION: null,
        SOURCE_STATE: null,
        INITIAL: null,
        PLAYING: null,
        PAUSED: null,
        STOPPED: null,
        BUFFERS_QUEUED: null,
        BUFFERS_PROCESSED: null,
        REFERENCE_DISTANCE: null,
        ROLLOFF_FACTOR: null,
        CONE_OUTER_GAIN: null,
        MAX_DISTANCE: null,
        SEC_OFFSET: null,
        SAMPLE_OFFSET: null,
        BYTE_OFFSET: null,
        SOURCE_TYPE: null,
        STATIC: null,
        STREAMING: null,
        UNDETERMINED: null,
        FORMAT_MONO8: null,
        FORMAT_MONO16: null,
        FORMAT_STEREO8: null,
        FORMAT_STEREO16: null,
        FREQUENCY: null,
        BITS: null,
        CHANNELS: null,
        SIZE: null,
        NO_ERROR: null,
        INVALID_NAME: null,
        INVALID_ENUM: null,
        INVALID_VALUE: null,
        INVALID_OPERATION: null,
        OUT_OF_MEMORY: null,
        VENDOR: null,
        VERSION: null,
        RENDERER: null,
        EXTENSIONS: null,
        DOPPLER_FACTOR: null,
        SPEED_OF_SOUND: null,
        DOPPLER_VELOCITY: null,
        DISTANCE_MODEL: null,
        INVERSE_DISTANCE: null,
        INVERSE_DISTANCE_CLAMPED: null,
        LINEAR_DISTANCE: null,
        LINEAR_DISTANCE_CLAMPED: null,
        EXPONENT_DISTANCE: null,
        EXPONENT_DISTANCE_CLAMPED: null,
        REFRESH: null,
        SYNC: null,
        MONO_SOURCES: null,
        STEREO_SOURCES: null,
        INVALID_DEVICE: null,
        INVALID_CONTEXT: null,
        ATTRIBUTES_SIZE: null,
        ALL_ATTRIBUTES: null,
        DEFAULT_DEVICE_SPECIFIER: null,
        DEVICE_SPECIFIER: null,
        ENUMERATE_ALL_EXT: null,
        DEFAULT_ALL_DEVICES_SPECIFIER: null,
        ALL_DEVICES_SPECIFIER: null,
        bufferData: function(a,
          b, c, d, e) {
          B.bufferData(a, b, c, d, e)
        },
        buffer3f: function(a, b, c, d, e) {
          B.buffer3f(a, b, c, d, e)
        },
        buffer3i: function(a, b, c, d, e) {
          B.buffer3i(a, b, c, d, e)
        },
        bufferf: function(a, b, c) {
          B.bufferf(a, b, c)
        },
        bufferfv: function(a, b, c) {
          B.bufferfv(a, b, c)
        },
        bufferi: function(a, b, c) {
          B.bufferi(a, b, c)
        },
        bufferiv: function(a, b, c) {
          B.bufferiv(a, b, c)
        },
        closeDevice: function(a) {
          return Ib.closeDevice(a)
        },
        createContext: function(a, b) {
          return Ib.createContext(a, b)
        },
        createBuffer: function() {
          return B.createBuffer()
        },
        createSource: function() {
          return B.createSource()
        },
        deleteBuffer: function(a) {
          B.deleteBuffer(a)
        },
        deleteBuffers: function(a) {
          B.deleteBuffers(a)
        },
        deleteSource: function(a) {
          B.deleteSource(a)
        },
        deleteSources: function(a) {
          B.deleteSources(a)
        },
        destroyContext: function(a) {
          null != a && Ib.destroyContext(a)
        },
        disable: function(a) {
          B.disable(a)
        },
        distanceModel: function(a) {
          B.distanceModel(a)
        },
        dopplerFactor: function(a) {
          B.dopplerFactor(a)
        },
        dopplerVelocity: function(a) {
          B.dopplerVelocity(a)
        },
        enable: function(a) {
          B.enable(a)
        },
        genSource: function() {
          return this.createSource()
        },
        genSources: function(a) {
          return B.genSources(a)
        },
        genBuffer: function() {
          return this.createBuffer()
        },
        genBuffers: function(a) {
          return B.genBuffers(a)
        },
        getBoolean: function(a) {
          return B.getBoolean(a)
        },
        getBooleanv: function(a, b) {
          null == b && (b = 1);
          return B.getBooleanv(a, b)
        },
        getBuffer3f: function(a, b) {
          return B.getBuffer3f(a, b)
        },
        getBuffer3i: function(a, b) {
          return B.getBuffer3i(a, b)
        },
        getBufferf: function(a, b) {
          return B.getBufferf(a, b)
        },
        getBufferfv: function(a, b, c) {
          null == c && (c = 1);
          return B.getBufferfv(a, b, c)
        },
        getBufferi: function(a, b) {
          return B.getBufferi(a, b)
        },
        getBufferiv: function(a,
          b, c) {
          null == c && (c = 1);
          return B.getBufferiv(a, b, c)
        },
        getContextsDevice: function(a) {
          return null == a ? null : Ib.getContextsDevice(a)
        },
        getCurrentContext: function() {
          return Ib.getCurrentContext()
        },
        getDouble: function(a) {
          return B.getDouble(a)
        },
        getDoublev: function(a, b) {
          null == b && (b = 1);
          return B.getDoublev(a, b)
        },
        getEnumValue: function(a) {
          return B.getEnumValue(a)
        },
        getError: function(a) {
          return null == a ? B.getError() : Ib.getError(a)
        },
        getErrorString: function(a) {
          return null == a ? B.getErrorString() : Ib.getErrorString(a)
        },
        getFloat: function(a) {
          return B.getFloat(a)
        },
        getFloatv: function(a, b) {
          null == b && (b = 1);
          return B.getFloatv(a, b)
        },
        getInteger: function(a) {
          return B.getInteger(a)
        },
        getIntegerv: function(a, b, c) {
          null == b && (b = 1);
          return null == c ? B.getIntegerv(a, b) : Ib.getIntegerv(c, a, b)
        },
        getListener3f: function(a) {
          return B.getListener3f(a)
        },
        getListener3i: function(a) {
          return B.getListener3i(a)
        },
        getListenerf: function(a) {
          return B.getListenerf(a)
        },
        getListenerfv: function(a, b) {
          null == b && (b = 1);
          return B.getListenerfv(a, b)
        },
        getListeneri: function(a) {
          return B.getListeneri(a)
        },
        getListeneriv: function(a,
          b) {
          null == b && (b = 1);
          return B.getListeneriv(a, b)
        },
        getProcAddress: function(a) {
          return B.getProcAddress(a)
        },
        getSource3f: function(a, b) {
          return B.getSource3f(a, b)
        },
        getSourcef: function(a, b) {
          return B.getSourcef(a, b)
        },
        getSource3i: function(a, b) {
          return B.getSource3i(a, b)
        },
        getSourcefv: function(a, b, c) {
          return B.getSourcefv(a, b)
        },
        getSourcei: function(a, b) {
          return B.getSourcei(a, b)
        },
        getSourceiv: function(a, b, c) {
          null == c && (c = 1);
          return B.getSourceiv(a, b, c)
        },
        getString: function(a, b) {
          return null == b ? B.getString(a) : Ib.getString(b,
            a)
        },
        isBuffer: function(a) {
          return B.isBuffer(a)
        },
        isEnabled: function(a) {
          return B.isEnabled(a)
        },
        isExtensionPresent: function(a) {
          return B.isExtensionPresent(a)
        },
        isSource: function(a) {
          return B.isSource(a)
        },
        listener3f: function(a, b, c, d) {
          B.listener3f(a, b, c, d)
        },
        listener3i: function(a, b, c, d) {
          B.listener3i(a, b, c, d)
        },
        listenerf: function(a, b) {
          B.listenerf(a, b)
        },
        listenerfv: function(a, b) {
          B.listenerfv(a, b)
        },
        listeneri: function(a, b) {
          B.listeneri(a, b)
        },
        listeneriv: function(a, b) {
          B.listeneriv(a, b)
        },
        makeContextCurrent: function(a) {
          return Ib.makeContextCurrent(a)
        },
        openDevice: function(a) {
          return Ib.openDevice(a)
        },
        pauseDevice: function(a) {
          Ib.pauseDevice(a)
        },
        processContext: function(a) {
          Ib.processContext(a)
        },
        resumeDevice: function(a) {
          Ib.resumeDevice(a)
        },
        source3f: function(a, b, c, d, e) {
          B.source3f(a, b, c, d, e)
        },
        source3i: function(a, b, c, d, e) {
          B.source3i(a, b, c, d, e)
        },
        sourcef: function(a, b, c) {
          B.sourcef(a, b, c)
        },
        sourcefv: function(a, b, c) {
          B.sourcefv(a, b, c)
        },
        sourcei: function(a, b, c) {
          B.sourcei(a, b, c)
        },
        sourceiv: function(a, b, c) {
          B.sourceiv(a, b, c)
        },
        sourcePlay: function(a) {
          B.sourcePlay(a)
        },
        sourcePlayv: function(a) {
          B.sourcePlayv(a)
        },
        sourceStop: function(a) {
          B.sourceStop(a)
        },
        sourceStopv: function(a) {
          B.sourceStopv(a)
        },
        sourceRewind: function(a) {
          B.sourceRewind(a)
        },
        sourceRewindv: function(a) {
          B.sourceRewindv(a)
        },
        sourcePause: function(a) {
          B.sourcePause(a)
        },
        sourcePausev: function(a) {
          B.sourcePausev(a)
        },
        sourceQueueBuffer: function(a, b) {
          B.sourceQueueBuffer(a, b)
        },
        sourceQueueBuffers: function(a, b, c) {
          B.sourceQueueBuffers(a, b, c)
        },
        sourceUnqueueBuffer: function(a) {
          return B.sourceUnqueueBuffer(a)
        },
        sourceUnqueueBuffers: function(a,
          b) {
          return B.sourceUnqueueBuffers(a, b)
        },
        speedOfSound: function(a) {
          B.speedOfSound(a)
        },
        suspendContext: function(a) {
          Ib.suspendContext(a)
        },
        __class__: Gq
      };
      var B = function() {};
      k["lime.media.openal.AL"] = B;
      B.__name__ = "lime.media.openal.AL";
      B.removeDirectFilter = function(a) {};
      B.removeSend = function(a, b) {};
      B.auxf = function(a, b, c) {};
      B.auxfv = function(a, b, c) {};
      B.auxi = function(a, b, c) {};
      B.auxiv = function(a, b, c) {};
      B.bufferData = function(a, b, c, d, e) {};
      B.buffer3f = function(a, b, c, d, e) {};
      B.buffer3i = function(a, b, c, d, e) {};
      B.bufferf =
        function(a, b, c) {};
      B.bufferfv = function(a, b, c) {};
      B.bufferi = function(a, b, c) {};
      B.bufferiv = function(a, b, c) {};
      B.createAux = function() {
        return null
      };
      B.createBuffer = function() {
        return null
      };
      B.createEffect = function() {
        return null
      };
      B.createFilter = function() {
        return null
      };
      B.createSource = function() {
        return null
      };
      B.deleteBuffer = function(a) {};
      B.deleteBuffers = function(a) {};
      B.deleteSource = function(a) {};
      B.deleteSources = function(a) {};
      B.disable = function(a) {};
      B.distanceModel = function(a) {};
      B.dopplerFactor = function(a) {};
      B.dopplerVelocity =
        function(a) {};
      B.effectf = function(a, b, c) {};
      B.effectfv = function(a, b, c) {};
      B.effecti = function(a, b, c) {};
      B.effectiv = function(a, b, c) {};
      B.enable = function(a) {};
      B.genSource = function() {
        return null
      };
      B.genSources = function(a) {
        return null
      };
      B.genBuffer = function() {
        return null
      };
      B.genBuffers = function(a) {
        return null
      };
      B.getBoolean = function(a) {
        return !1
      };
      B.getBooleanv = function(a, b) {
        return null
      };
      B.getBuffer3f = function(a, b) {
        return null
      };
      B.getBuffer3i = function(a, b) {
        return null
      };
      B.getBufferf = function(a, b) {
        return 0
      };
      B.getBufferfv =
        function(a, b, c) {
          return null
        };
      B.getBufferi = function(a, b) {
        return 0
      };
      B.getBufferiv = function(a, b, c) {
        return null
      };
      B.getDouble = function(a) {
        return 0
      };
      B.getDoublev = function(a, b) {
        return null
      };
      B.getEnumValue = function(a) {
        return 0
      };
      B.getError = function() {
        return 0
      };
      B.getErrorString = function() {
        switch (B.getError()) {
          case 40961:
            return "INVALID_NAME: Invalid parameter name";
          case 40962:
            return "INVALID_ENUM: Invalid enum value";
          case 40963:
            return "INVALID_VALUE: Invalid parameter value";
          case 40964:
            return "INVALID_OPERATION: Illegal operation or call";
          case 40965:
            return "OUT_OF_MEMORY: OpenAL has run out of memory";
          default:
            return ""
        }
      };
      B.getFilteri = function(a, b) {
        return 0
      };
      B.getFloat = function(a) {
        return 0
      };
      B.getFloatv = function(a, b) {
        return null
      };
      B.getInteger = function(a) {
        return 0
      };
      B.getIntegerv = function(a, b) {
        return null
      };
      B.getListener3f = function(a) {
        return null
      };
      B.getListener3i = function(a) {
        return null
      };
      B.getListenerf = function(a) {
        return 0
      };
      B.getListenerfv = function(a, b) {
        return null
      };
      B.getListeneri = function(a) {
        return 0
      };
      B.getListeneriv = function(a, b) {
        return null
      };
      B.getParameter = function(a) {
        return null
      };
      B.getProcAddress = function(a) {
        return null
      };
      B.getSource3f = function(a, b) {
        return null
      };
      B.getSourcef = function(a, b) {
        return 0
      };
      B.getSource3i = function(a, b) {
        return null
      };
      B.getSourcefv = function(a, b, c) {
        return null
      };
      B.getSourcei = function(a, b) {
        return 0
      };
      B.getSourceiv = function(a, b, c) {
        return null
      };
      B.getString = function(a) {
        return null
      };
      B.isBuffer = function(a) {
        return !1
      };
      B.isEnabled = function(a) {
        return !1
      };
      B.isExtensionPresent = function(a) {
        return !1
      };
      B.isAux = function(a) {
        return !1
      };
      B.isEffect = function(a) {
        return !1
      };
      B.isFilter = function(a) {
        return !1
      };
      B.isSource = function(a) {
        return !1
      };
      B.listener3f = function(a, b, c, d) {};
      B.listener3i = function(a, b, c, d) {};
      B.listenerf = function(a, b) {};
      B.listenerfv = function(a, b) {};
      B.listeneri = function(a, b) {};
      B.listeneriv = function(a, b) {};
      B.source3f = function(a, b, c, d, e) {};
      B.source3i = function(a, b, c, d, e) {};
      B.sourcef = function(a, b, c) {};
      B.sourcefv = function(a, b, c) {};
      B.sourcei = function(a, b, c) {};
      B.filteri = function(a, b, c) {};
      B.filterf = function(a, b, c) {};
      B.sourceiv = function(a,
        b, c) {};
      B.sourcePlay = function(a) {};
      B.sourcePlayv = function(a) {};
      B.sourceStop = function(a) {};
      B.sourceStopv = function(a) {};
      B.sourceRewind = function(a) {};
      B.sourceRewindv = function(a) {};
      B.sourcePause = function(a) {};
      B.sourcePausev = function(a) {};
      B.sourceQueueBuffer = function(a, b) {};
      B.sourceQueueBuffers = function(a, b, c) {};
      B.sourceUnqueueBuffer = function(a) {
        return 0
      };
      B.sourceUnqueueBuffers = function(a, b) {
        return null
      };
      B.speedOfSound = function(a) {};
      var Ib = function() {};
      k["lime.media.openal.ALC"] = Ib;
      Ib.__name__ = "lime.media.openal.ALC";
      Ib.closeDevice = function(a) {
        return !1
      };
      Ib.createContext = function(a, b) {
        return null
      };
      Ib.destroyContext = function(a) {};
      Ib.getContextsDevice = function(a) {
        return null
      };
      Ib.getCurrentContext = function() {
        return null
      };
      Ib.getError = function(a) {
        return 0
      };
      Ib.getErrorString = function(a) {
        switch (Ib.getError(a)) {
          case 40961:
            return "INVALID_DEVICE: Invalid device (or no device?)";
          case 40962:
            return "INVALID_CONTEXT: Invalid context (or no context?)";
          case 40963:
            return "INVALID_ENUM: Invalid enum value";
          case 40964:
            return "INVALID_VALUE: Invalid param value";
          case 40965:
            return "OUT_OF_MEMORY: OpenAL has run out of memory";
          default:
            return ""
        }
      };
      Ib.getIntegerv = function(a, b, c) {
        return null
      };
      Ib.getString = function(a, b) {
        return null
      };
      Ib.makeContextCurrent = function(a) {
        return !1
      };
      Ib.openDevice = function(a) {
        return null
      };
      Ib.pauseDevice = function(a) {};
      Ib.processContext = function(a) {};
      Ib.resumeDevice = function(a) {};
      Ib.suspendContext = function(a) {};
      var Hq = function() {};
      k["lime.media.vorbis.VorbisComment"] = Hq;
      Hq.__name__ = "lime.media.vorbis.VorbisComment";
      Hq.prototype = {
        userComments: null,
        vendor: null,
        __class__: Hq
      };
      var xm = function(a) {
        this.handle = a
      };
      k["lime.media.vorbis.VorbisFile"] = xm;
      xm.__name__ = "lime.media.vorbis.VorbisFile";
      xm.fromBytes = function(a) {
        return null
      };
      xm.fromFile = function(a) {
        return null
      };
      xm.prototype = {
        bitstream: null,
        handle: null,
        bitrate: function(a) {
          return 0
        },
        bitrateInstant: function() {
          return 0
        },
        clear: function() {},
        comment: function(a) {
          return null
        },
        crosslap: function(a) {
          return 0
        },
        info: function(a) {
          return null
        },
        pcmSeek: function(a) {
          return 0
        },
        pcmSeekLap: function(a) {
          return 0
        },
        pcmSeekPage: function(a) {
          return 0
        },
        pcmSeekPageLap: function(a) {
          return 0
        },
        pcmTell: function() {
          return new ab(0, 0)
        },
        pcmTotal: function(a) {
          return new ab(0, 0)
        },
        rawSeek: function(a) {
          return 0
        },
        rawSeekLap: function(a) {
          return 0
        },
        rawTell: function() {
          return new ab(0, 0)
        },
        rawTotal: function(a) {
          return new ab(0, 0)
        },
        read: function(a, b, c, d, e, f) {
          return 0
        },
        readFloat: function(a, b) {
          return 0
        },
        seekable: function() {
          return !1
        },
        serialNumber: function(a) {
          return 0
        },
        streams: function() {
          return 0
        },
        timeSeek: function(a) {
          return 0
        },
        timeSeekLap: function(a) {
          return 0
        },
        timeSeekPage: function(a) {
          return 0
        },
        timeSeekPageLap: function(a) {
          return 0
        },
        timeTell: function() {
          return 0
        },
        timeTotal: function(a) {
          return 0
        },
        __class__: xm
      };
      var Iq = function() {};
      k["lime.media.vorbis.VorbisInfo"] = Iq;
      Iq.__name__ = "lime.media.vorbis.VorbisInfo";
      Iq.prototype = {
        bitrateLower: null,
        bitrateNominal: null,
        bitrateUpper: null,
        channels: null,
        rate: null,
        version: null,
        __class__: Iq
      };
      var ym = function() {};
      k["lime.net._IHTTPRequest"] = ym;
      ym.__name__ = "lime.net._IHTTPRequest";
      ym.__isInterface__ = !0;
      ym.prototype = {
        contentType: null,
        data: null,
        enableResponseHeaders: null,
        followRedirects: null,
        formData: null,
        headers: null,
        method: null,
        responseHeaders: null,
        responseStatus: null,
        timeout: null,
        uri: null,
        userAgent: null,
        withCredentials: null,
        cancel: null,
        __class__: ym
      };
      var ff = function(a) {
        this.uri = a;
        this.contentType = "application/x-www-form-urlencoded";
        this.followRedirects = !0;
        this.enableResponseHeaders = !1;
        this.formData = new ua;
        this.headers = [];
        this.method = "GET";
        this.timeout = 0;
        this.withCredentials = !1;
        this.__backend = new Ua;
        this.__backend.init(this)
      };
      k["lime.net._HTTPRequest.AbstractHTTPRequest"] =
        ff;
      ff.__name__ = "lime.net._HTTPRequest.AbstractHTTPRequest";
      ff.__interfaces__ = [ym];
      ff.prototype = {
        contentType: null,
        data: null,
        enableResponseHeaders: null,
        followRedirects: null,
        formData: null,
        headers: null,
        method: null,
        responseData: null,
        responseHeaders: null,
        responseStatus: null,
        timeout: null,
        uri: null,
        userAgent: null,
        withCredentials: null,
        __backend: null,
        cancel: function() {
          this.__backend.cancel()
        },
        load: function(a) {
          return null
        },
        __class__: ff
      };
      var To = function(a) {
        ff.call(this, a)
      };
      k["lime.net.HTTPRequest"] = To;
      To.__name__ =
        "lime.net.HTTPRequest";
      To.__super__ = ff;
      To.prototype = t(ff.prototype, {
        __class__: To
      });
      var Yg = function(a) {
        ff.call(this, a)
      };
      k["lime.net._HTTPRequest_Bytes"] = Yg;
      Yg.__name__ = "lime.net._HTTPRequest_Bytes";
      Yg.__super__ = ff;
      Yg.prototype = t(ff.prototype, {
        fromBytes: function(a) {
          return a
        },
        load: function(a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new ee;
          a = this.__backend.loadData(this.uri);
          a.onProgress(r(c, c.progress));
          a.onError(r(c, c.error));
          a.onComplete(function(a) {
            b.responseData = b.fromBytes(a);
            c.complete(b.responseData)
          });
          return c.future
        },
        __class__: Yg
      });
      var Xj = function(a) {
        ff.call(this, a)
      };
      k["lime.net._HTTPRequest_String"] = Xj;
      Xj.__name__ = "lime.net._HTTPRequest_String";
      Xj.__super__ = ff;
      Xj.prototype = t(ff.prototype, {
        load: function(a) {
          var b = this;
          null != a && (this.uri = a);
          var c = new ee;
          a = this.__backend.loadText(this.uri);
          a.onProgress(r(c, c.progress));
          a.onError(r(c, c.error));
          a.onComplete(function(a) {
            b.responseData = a;
            c.complete(b.responseData)
          });
          return c.future
        },
        __class__: Xj
      });
      var lm = function(a, b) {
        null == b && (b = "");
        this.name = a;
        this.value =
          b
      };
      k["lime.net.HTTPRequestHeader"] = lm;
      lm.__name__ = "lime.net.HTTPRequestHeader";
      lm.prototype = {
        name: null,
        value: null,
        __class__: lm
      };
      var zm = function(a) {
        ff.call(this, a)
      };
      k["lime.net._HTTPRequest_lime_text_Font"] = zm;
      zm.__name__ = "lime.net._HTTPRequest_lime_text_Font";
      zm.__super__ = Yg;
      zm.prototype = t(Yg.prototype, {
        fromBytes: function(a) {
          return Qd.fromBytes(a)
        },
        __class__: zm
      });
      var Am = function(a) {
        ff.call(this, a)
      };
      k["lime.net._HTTPRequest_lime_utils_Bytes"] = Am;
      Am.__name__ = "lime.net._HTTPRequest_lime_utils_Bytes";
      Am.__super__ = Yg;
      Am.prototype = t(Yg.prototype, {
        fromBytes: function(a) {
          return mc.fromBytes(a)
        },
        __class__: Am
      });
      var Bm = function(a) {
        ff.call(this, a)
      };
      k["lime.net._HTTPRequest_openfl_utils_ByteArray"] = Bm;
      Bm.__name__ = "lime.net._HTTPRequest_openfl_utils_ByteArray";
      Bm.__super__ = Yg;
      Bm.prototype = t(Yg.prototype, {
        fromBytes: function(a) {
          return Cb.fromBytes(a)
        },
        __class__: Bm
      });
      var Zg = function() {};
      k["lime.system.CFFI"] = Zg;
      Zg.__name__ = "lime.system.CFFI";
      Zg.load = function(a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = 0);
        return Zg.enabled ?
          null : Y.makeVarArgs(function(a) {
            return {}
          })
      };
      Zg.__findHaxelib = function(a) {
        return ""
      };
      Zg.__loaderTrace = function(a) {};
      Zg.__sysName = function() {
        return null
      };
      Zg.__tryLoad = function(a, b, c, d) {
        return null
      };
      var Rd = {
          _new: function(a) {
            return a
          },
          get: function(a) {
            return 0
          },
          equals: function(a, b) {
            return Rd.get(a) == b
          },
          equalsPointer: function(a, b) {
            return Rd.get(a) == Rd.get(b)
          },
          greaterThan: function(a, b) {
            return Rd.get(a) > b
          },
          greaterThanPointer: function(a, b) {
            return Rd.get(a) > Rd.get(b)
          },
          greaterThanOrEqual: function(a, b) {
            return Rd.get(a) >=
              b
          },
          greaterThanOrEqualPointer: function(a, b) {
            return Rd.get(a) >= Rd.get(b)
          },
          lessThan: function(a, b) {
            return Rd.get(a) < b
          },
          lessThanPointer: function(a, b) {
            return Rd.get(a) < Rd.get(b)
          },
          lessThanOrEqual: function(a, b) {
            return Rd.get(a) <= b
          },
          lessThanOrEqualPointer: function(a, b) {
            return Rd.get(a) <= Rd.get(b)
          },
          notEquals: function(a, b) {
            return Rd.get(a) != b
          },
          notEqualsPointer: function(a, b) {
            return Rd.get(a) != Rd.get(b)
          }
        },
        oe = function() {};
      k["lime.system.Clipboard"] = oe;
      oe.__name__ = "lime.system.Clipboard";
      oe.__properties__ = {
        set_text: "set_text",
        get_text: "get_text"
      };
      oe.__update = function() {
        var a = oe._text;
        oe._text = null;
        oe._text != a && oe.onUpdate.dispatch()
      };
      oe.get_text = function() {
        oe.__update();
        return oe._text
      };
      oe.set_text = function(a) {
        var b = oe._text;
        oe._text = a;
        var c = Ad.current.__window;
        null != c && c.__backend.setClipboard(a);
        oe._text != b && oe.onUpdate.dispatch();
        return a
      };
      var Uo = function() {};
      k["lime.system.Display"] = Uo;
      Uo.__name__ = "lime.system.Display";
      Uo.prototype = {
        bounds: null,
        currentMode: null,
        id: null,
        dpi: null,
        name: null,
        supportedModes: null,
        __class__: Uo
      };
      var Vo = function(a, b, c, d) {
        this.width = a;
        this.height = b;
        this.refreshRate = c;
        this.pixelFormat = d
      };
      k["lime.system.DisplayMode"] = Vo;
      Vo.__name__ = "lime.system.DisplayMode";
      Vo.prototype = {
        height: null,
        pixelFormat: null,
        refreshRate: null,
        width: null,
        __class__: Vo
      };
      var Cg = O["lime.system.Endian"] = {
        __ename__: "lime.system.Endian",
        __constructs__: null,
        LITTLE_ENDIAN: {
          _hx_name: "LITTLE_ENDIAN",
          _hx_index: 0,
          __enum__: "lime.system.Endian",
          toString: v
        },
        BIG_ENDIAN: {
          _hx_name: "BIG_ENDIAN",
          _hx_index: 1,
          __enum__: "lime.system.Endian",
          toString: v
        }
      };
      Cg.__constructs__ = [Cg.LITTLE_ENDIAN, Cg.BIG_ENDIAN];
      var ze = function() {};
      k["lime.system.JNI"] = ze;
      ze.__name__ = "lime.system.JNI";
      ze.callMember = function(a, b, c) {
        switch (c.length) {
          case 0:
            return a(b);
          case 1:
            return a(b, c[0]);
          case 2:
            return a(b, c[0], c[1]);
          case 3:
            return a(b, c[0], c[1], c[2]);
          case 4:
            return a(b, c[0], c[1], c[2], c[3]);
          case 5:
            return a(b, c[0], c[1], c[2], c[3], c[4]);
          case 6:
            return a(b, c[0], c[1], c[2], c[3], c[4], c[5]);
          case 7:
            return a(b, c[0], c[1], c[2], c[3], c[4], c[5], c[6]);
          default:
            return null
        }
      };
      ze.callStatic = function(a,
        b) {
        switch (b.length) {
          case 0:
            return a();
          case 1:
            return a(b[0]);
          case 2:
            return a(b[0], b[1]);
          case 3:
            return a(b[0], b[1], b[2]);
          case 4:
            return a(b[0], b[1], b[2], b[3]);
          case 5:
            return a(b[0], b[1], b[2], b[3], b[4]);
          case 6:
            return a(b[0], b[1], b[2], b[3], b[4], b[5]);
          case 7:
            return a(b[0], b[1], b[2], b[3], b[4], b[5], b[6]);
          default:
            return null
        }
      };
      ze.createMemberField = function(a, b, c) {
        ze.init();
        return null
      };
      ze.createMemberMethod = function(a, b, c, d, e) {
        ze.init();
        return null
      };
      ze.createStaticField = function(a, b, c) {
        ze.init();
        return null
      };
      ze.createStaticMethod = function(a, b, c, d, e) {
        ze.init();
        return null
      };
      ze.getEnv = function() {
        ze.init();
        return null
      };
      ze.init = function() {
        ze.initialized || (ze.initialized = !0)
      };
      ze.onCallback = function(a, b, c) {
        b = Y.field(a, b);
        return null != b ? (null == c && (c = []), b.apply(a, c)) : null
      };
      ze.postUICallback = function(a) {
        a()
      };
      var Jq = function(a) {
        this.field = a
      };
      k["lime.system.JNIMemberField"] = Jq;
      Jq.__name__ = "lime.system.JNIMemberField";
      Jq.prototype = {
        field: null,
        get: function(a) {
          return null
        },
        set: function(a, b) {
          return b
        },
        __class__: Jq
      };
      var Kq = function(a) {
        this.field = a
      };
      k["lime.system.JNIStaticField"] = Kq;
      Kq.__name__ = "lime.system.JNIStaticField";
      Kq.prototype = {
        field: null,
        get: function() {
          return null
        },
        set: function(a) {
          return a
        },
        __class__: Kq
      };
      var Lq = function(a) {
        this.method = a
      };
      k["lime.system.JNIMethod"] = Lq;
      Lq.__name__ = "lime.system.JNIMethod";
      Lq.prototype = {
        method: null,
        callMember: function(a) {
          return null
        },
        callStatic: function(a) {
          return null
        },
        getMemberMethod: function(a) {
          return a ? r(this, this.callMember) : Y.makeVarArgs(r(this, this.callMember))
        },
        getStaticMethod: function(a) {
          return a ? r(this, this.callStatic) : Y.makeVarArgs(r(this, this.callStatic))
        },
        __class__: Lq
      };
      var We = {
          __properties__: {
            get_region: "get_region",
            get_language: "get_language",
            get_systemLocale: "get_systemLocale",
            set_currentLocale: "set_currentLocale",
            get_currentLocale: "get_currentLocale"
          },
          _new: function(a) {
            return a
          },
          equals: function(a, b) {
            var c = We.get_language(a);
            a = We.get_region(a);
            var d = We.get_language(b);
            b = We.get_region(b);
            var e = c == d,
              f = a == b;
            e || null == c || null == d || (e = c.toLowerCase() == d.toLowerCase());
            f || null == a || null == b || (f = a.toLowerCase() == b.toLowerCase());
            return e ? f : !1
          },
          __init: function() {
            if (null == We.__systemLocale) {
              var a = navigator.language;
              We.__systemLocale = null != a ? a : "en-US";
              We.set_currentLocale(We.__systemLocale)
            }
          },
          get_language: function(a) {
            if (null != a) {
              var b = a.indexOf("_");
              if (-1 < b) {
                var c = a.indexOf("-"); - 1 < c && c < b && (b = c);
                return a.substring(0, b)
              }
              b = a.indexOf("-");
              if (-1 < b) return a.substring(0, b)
            }
            return a
          },
          get_region: function(a) {
            if (null != a) {
              var b = a.indexOf("_"),
                c = a.indexOf("."),
                d = a.indexOf("-");
              if (-1 <
                b) return -1 < c ? a.substring(b + 1, c) : a.substring(b + 1);
              if (-1 < d) return -1 < c ? a.substring(d + 1, c) : a.substring(d + 1)
            }
            return null
          },
          get_currentLocale: function() {
            We.__init();
            return We.currentLocale
          },
          set_currentLocale: function(a) {
            We.__init();
            return We.currentLocale = a
          },
          get_systemLocale: function() {
            We.__init();
            return We.__systemLocale
          }
        },
        Pf = function(a, b) {
          this.onUpdate = new Fo;
          this.type = a;
          this.id = b
        };
      k["lime.system.Sensor"] = Pf;
      Pf.__name__ = "lime.system.Sensor";
      Pf.getSensors = function(a) {
        if (null == a) return Pf.sensors.slice();
        for (var b = [], c = 0, d = Pf.sensors; c < d.length;) {
          var e = d[c];
          ++c;
          e.type == a && b.push(e)
        }
        return b
      };
      Pf.registerSensor = function(a, b) {
        a = new Pf(a, b);
        Pf.sensors.push(a);
        return Pf.sensorByID.h[b] = a
      };
      Pf.prototype = {
        id: null,
        onUpdate: null,
        type: null,
        __class__: Pf
      };
      var hr = O["lime.system.SensorType"] = {
        __ename__: "lime.system.SensorType",
        __constructs__: null,
        ACCELEROMETER: {
          _hx_name: "ACCELEROMETER",
          _hx_index: 0,
          __enum__: "lime.system.SensorType",
          toString: v
        }
      };
      hr.__constructs__ = [hr.ACCELEROMETER];
      var Wa = function() {};
      k["lime.system.System"] =
        Wa;
      Wa.__name__ = "lime.system.System";
      Wa.__properties__ = {
        get_userDirectory: "get_userDirectory",
        get_platformVersion: "get_platformVersion",
        get_platformName: "get_platformName",
        get_platformLabel: "get_platformLabel",
        get_numDisplays: "get_numDisplays",
        get_fontsDirectory: "get_fontsDirectory",
        get_endianness: "get_endianness",
        get_documentsDirectory: "get_documentsDirectory",
        get_deviceVendor: "get_deviceVendor",
        get_deviceModel: "get_deviceModel",
        get_desktopDirectory: "get_desktopDirectory",
        get_applicationStorageDirectory: "get_applicationStorageDirectory",
        get_applicationDirectory: "get_applicationDirectory",
        set_allowScreenTimeout: "set_allowScreenTimeout",
        get_allowScreenTimeout: "get_allowScreenTimeout"
      };
      Wa.embed = x.lime.embed = function(a, b, c, d, e) {
        if (null != Wa.__applicationEntryPoint && Object.prototype.hasOwnProperty.call(Wa.__applicationEntryPoint.h, a)) {
          var f = "string" == typeof b ? window.document.getElementById(b) : null == b ? window.document.createElement("div") : b;
          null == f ? window.console.log("[lime.embed] ERROR: Cannot find target element: " + M.string(b)) : (null ==
            c && (c = 0), null == d && (d = 0), null == e && (e = {}), Object.prototype.hasOwnProperty.call(e, "background") && "string" == typeof e.background && (b = W.replace(M.string(e.background), "#", ""), -1 < b.indexOf("0x") ? e.background = M.parseInt(b) : e.background = M.parseInt("0x" + b)), e.element = f, e.width = c, e.height = d, Wa.__applicationEntryPoint.h[a](e))
        }
      };
      Wa.exit = function(a) {};
      Wa.getDisplay = function(a) {
        return 0 == a ? (a = new Uo, a.id = 0, a.name = "Generic Display", a.dpi = 96 * window.devicePixelRatio, a.currentMode = new Vo(window.screen.width, window.screen.height,
          60, 1), a.supportedModes = [a.currentMode], a.bounds = new Td(0, 0, a.currentMode.width, a.currentMode.height), a) : null
      };
      Wa.getTimer = function() {
        return window.performance.now() | 0
      };
      Wa.load = function(a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = 0);
        return Zg.load(a, b, c, d)
      };
      Wa.openFile = function(a) {
        null != a && window.open(a, "_blank")
      };
      Wa.openURL = function(a, b) {
        null == b && (b = "_blank");
        null != a && window.open(a, b)
      };
      Wa.__copyMissingFields = function(a, b) {
        if (null != b && null != a)
          for (var c = 0, d = Y.fields(b); c < d.length;) {
            var e = d[c];
            ++c;
            Object.prototype.hasOwnProperty.call(a,
              e) || (a[e] = Y.field(b, e))
          }
      };
      Wa.__getDirectory = function(a) {
        return null
      };
      Wa.__parseBool = function(a) {
        return "true" == a
      };
      Wa.__registerEntryPoint = function(a, b) {
        null == Wa.__applicationEntryPoint && (Wa.__applicationEntryPoint = new ua);
        Wa.__applicationEntryPoint.h[a] = b
      };
      Wa.__runProcess = function(a, b) {
        return null
      };
      Wa.get_allowScreenTimeout = function() {
        return !0
      };
      Wa.set_allowScreenTimeout = function(a) {
        return !0
      };
      Wa.get_applicationDirectory = function() {
        null == Wa.__applicationDirectory && (Wa.__applicationDirectory = Wa.__getDirectory(0));
        return Wa.__applicationDirectory
      };
      Wa.get_applicationStorageDirectory = function() {
        null == Wa.__applicationStorageDirectory && (Wa.__applicationStorageDirectory = Wa.__getDirectory(1));
        return Wa.__applicationStorageDirectory
      };
      Wa.get_deviceModel = function() {
        return Wa.__deviceModel
      };
      Wa.get_deviceVendor = function() {
        return Wa.__deviceVendor
      };
      Wa.get_desktopDirectory = function() {
        null == Wa.__desktopDirectory && (Wa.__desktopDirectory = Wa.__getDirectory(2));
        return Wa.__desktopDirectory
      };
      Wa.get_documentsDirectory = function() {
        null ==
          Wa.__documentsDirectory && (Wa.__documentsDirectory = Wa.__getDirectory(3));
        return Wa.__documentsDirectory
      };
      Wa.get_endianness = function() {
        if (null == Wa.__endianness) {
          var a = new ArrayBuffer(2),
            b = null,
            c = null,
            d = null,
            e = null,
            f = null,
            g = b = null != b ? new Uint8Array(b) : null != c ? new Uint8Array(c) : null != d ? new Uint8Array(d.__array) : null != e ? new Uint8Array(e) : null != a ? null == f ? new Uint8Array(a, 0) : new Uint8Array(a, 0, f) : null;
          f = e = d = c = b = null;
          b = null != b ? new Uint16Array(b) : null != c ? new Uint16Array(c) : null != d ? new Uint16Array(d.__array) :
            null != e ? new Uint16Array(e) : null != a ? null == f ? new Uint16Array(a, 0) : new Uint16Array(a, 0, f) : null;
          g[0] = 170;
          g[1] = 187;
          Wa.__endianness = 43707 == b[0] ? Cg.BIG_ENDIAN : Cg.LITTLE_ENDIAN
        }
        return Wa.__endianness
      };
      Wa.get_fontsDirectory = function() {
        null == Wa.__fontsDirectory && (Wa.__fontsDirectory = Wa.__getDirectory(4));
        return Wa.__fontsDirectory
      };
      Wa.get_numDisplays = function() {
        return 1
      };
      Wa.get_platformLabel = function() {
        if (null == Wa.__platformLabel) {
          var a = Wa.get_platformName(),
            b = Wa.get_platformVersion();
          null != a && null != b ? Wa.__platformLabel =
            a + " " + b : null != a && (Wa.__platformLabel = a)
        }
        return Wa.__platformLabel
      };
      Wa.get_platformName = function() {
        null == Wa.__platformName && (Wa.__platformName = "HTML5");
        return Wa.__platformName
      };
      Wa.get_platformVersion = function() {
        return Wa.__platformVersion
      };
      Wa.get_userDirectory = function() {
        null == Wa.__userDirectory && (Wa.__userDirectory = Wa.__getDirectory(5));
        return Wa.__userDirectory
      };
      var Eo = function(a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.onRun = new Zh;
        this.onProgress = new Zh;
        this.onError = new Zh;
        this.onComplete = new Zh;
        this.doWork = new Zh;
        this.minThreads = a;
        this.maxThreads = b;
        this.currentThreads = 0
      };
      k["lime.system.ThreadPool"] = Eo;
      Eo.__name__ = "lime.system.ThreadPool";
      Eo.prototype = {
        currentThreads: null,
        doWork: null,
        maxThreads: null,
        minThreads: null,
        onComplete: null,
        onError: null,
        onProgress: null,
        onRun: null,
        queue: function(a) {
          this.runWork(a)
        },
        sendComplete: function(a) {
          this.onComplete.dispatch(a)
        },
        sendError: function(a) {
          this.onError.dispatch(a)
        },
        sendProgress: function(a) {
          this.onProgress.dispatch(a)
        },
        runWork: function(a) {
          this.onRun.dispatch(a);
          this.doWork.dispatch(a)
        },
        __class__: Eo
      };
      var Cm = O["lime.system._ThreadPool.ThreadPoolMessageType"] = {
        __ename__: "lime.system._ThreadPool.ThreadPoolMessageType",
        __constructs__: null,
        COMPLETE: {
          _hx_name: "COMPLETE",
          _hx_index: 0,
          __enum__: "lime.system._ThreadPool.ThreadPoolMessageType",
          toString: v
        },
        ERROR: {
          _hx_name: "ERROR",
          _hx_index: 1,
          __enum__: "lime.system._ThreadPool.ThreadPoolMessageType",
          toString: v
        },
        EXIT: {
          _hx_name: "EXIT",
          _hx_index: 2,
          __enum__: "lime.system._ThreadPool.ThreadPoolMessageType",
          toString: v
        },
        PROGRESS: {
          _hx_name: "PROGRESS",
          _hx_index: 3,
          __enum__: "lime.system._ThreadPool.ThreadPoolMessageType",
          toString: v
        },
        WORK: {
          _hx_name: "WORK",
          _hx_index: 4,
          __enum__: "lime.system._ThreadPool.ThreadPoolMessageType",
          toString: v
        }
      };
      Cm.__constructs__ = [Cm.COMPLETE, Cm.ERROR, Cm.EXIT, Cm.PROGRESS, Cm.WORK];
      var Mq = function(a, b) {
        this.type = a;
        this.state = b
      };
      k["lime.system._ThreadPool.ThreadPoolMessage"] = Mq;
      Mq.__name__ = "lime.system._ThreadPool.ThreadPoolMessage";
      Mq.prototype = {
        state: null,
        type: null,
        __class__: Mq
      };
      var Qd = function(a) {
        null != a && (this.name = a);
        this.__init ||
          (void 0 == this.ascender && (this.ascender = 0), void 0 == this.descender && (this.descender = 0), void 0 == this.height && (this.height = 0), void 0 == this.numGlyphs && (this.numGlyphs = 0), void 0 == this.underlinePosition && (this.underlinePosition = 0), void 0 == this.underlineThickness && (this.underlineThickness = 0), void 0 == this.unitsPerEM && (this.unitsPerEM = 0), null != this.__fontID ? sa.isLocal(this.__fontID) && this.__fromBytes(sa.getBytes(this.__fontID)) : null != this.__fontPath && this.__fromFile(this.__fontPath))
      };
      k["lime.text.Font"] = Qd;
      Qd.__name__ = "lime.text.Font";
      Qd.fromBytes = function(a) {
        if (null == a) return null;
        var b = new Qd;
        b.__fromBytes(a);
        return b
      };
      Qd.fromFile = function(a) {
        if (null == a) return null;
        var b = new Qd;
        b.__fromFile(a);
        return b
      };
      Qd.loadFromBytes = function(a) {
        return lb.withValue(Qd.fromBytes(a))
      };
      Qd.loadFromFile = function(a) {
        return (new zm).load(a).then(function(a) {
          return null != a ? lb.withValue(a) : lb.withError("")
        })
      };
      Qd.loadFromName = function(a) {
        return (new Qd).__loadFromName(a)
      };
      Qd.__measureFontNode = function(a) {
        var b = window.document.createElement("span");
        b.setAttribute("aria-hidden", "true");
        var c = window.document.createTextNode("BESbswy");
        b.appendChild(c);
        c = b.style;
        c.display = "block";
        c.position = "absolute";
        c.top = "-9999px";
        c.left = "-9999px";
        c.fontSize = "300px";
        c.width = "auto";
        c.height = "auto";
        c.lineHeight = "normal";
        c.margin = "0";
        c.padding = "0";
        c.fontVariant = "normal";
        c.whiteSpace = "nowrap";
        c.fontFamily = a;
        window.document.body.appendChild(b);
        return b
      };
      Qd.prototype = {
        ascender: null,
        descender: null,
        height: null,
        name: null,
        numGlyphs: null,
        src: null,
        underlinePosition: null,
        underlineThickness: null,
        unitsPerEM: null,
        __fontID: null,
        __fontPath: null,
        __init: null,
        decompose: function() {
          return null
        },
        getGlyph: function(a) {
          return -1
        },
        getGlyphs: function(a) {
          return null
        },
        getGlyphMetrics: function(a) {
          return null
        },
        renderGlyph: function(a, b) {
          return null
        },
        renderGlyphs: function(a, b) {
          return null
        },
        __copyFrom: function(a) {
          null != a && (this.ascender = a.ascender, this.descender = a.descender, this.height = a.height, this.name = a.name, this.numGlyphs = a.numGlyphs, this.src = a.src, this.underlinePosition = a.underlinePosition,
            this.underlineThickness = a.underlineThickness, this.unitsPerEM = a.unitsPerEM, this.__fontID = a.__fontID, this.__fontPath = a.__fontPath, this.__init = !0)
        },
        __fromBytes: function(a) {
          this.__fontPath = null
        },
        __fromFile: function(a) {
          this.__fontPath = a
        },
        __initializeSource: function() {
          this.__init = !0
        },
        __loadFromName: function(a) {
          var b = this,
            c = new ee;
          this.name = a;
          var d = L.navigator.userAgent.toLowerCase(),
            e = 0 <= d.indexOf(" safari/") && 0 > d.indexOf(" chrome/");
          d = (new nb("(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)", "i")).match(d);
          if (!e && !d && window.document.fonts && (w = window.document.fonts, r(w, w.load))) window.document.fonts.load("1em '" + a + "'").then(function(a) {
            c.complete(b)
          }, function(d) {
            Na.warn('Could not load web font "' + a + '"', {
              fileName: "lime/text/Font.hx",
              lineNumber: 513,
              className: "lime.text.Font",
              methodName: "__loadFromName"
            });
            c.complete(b)
          });
          else {
            var f = Qd.__measureFontNode("'" + a + "', sans-serif"),
              g = Qd.__measureFontNode("'" + a + "', serif"),
              h = f.offsetWidth,
              m = g.offsetWidth,
              l = -1,
              p = 0,
              n, k;
            l = window.setInterval(function() {
              p += 1;
              n = f.offsetWidth !=
                h || g.offsetWidth != m;
              k = 3E3 <= 50 * p;
              if (n || k) window.clearInterval(l), f.parentNode.removeChild(f), g.parentNode.removeChild(g), g = f = null, k && Na.warn('Could not load web font "' + a + '"', {
                fileName: "lime/text/Font.hx",
                lineNumber: 548,
                className: "lime.text.Font",
                methodName: "__loadFromName"
              }), c.complete(b)
            }, 50)
          }
          return c.future
        },
        __setSize: function(a) {},
        __class__: Qd
      };
      var Nq = function() {};
      k["lime.text.GlyphMetrics"] = Nq;
      Nq.__name__ = "lime.text.GlyphMetrics";
      Nq.prototype = {
        advance: null,
        height: null,
        horizontalBearing: null,
        verticalBearing: null,
        __class__: Nq
      };
      var ir = function() {};
      k["lime.text.harfbuzz.HB"] = ir;
      ir.__name__ = "lime.text.harfbuzz.HB";
      ir.shape = function(a, b, c) {};
      var Fr = {
          __properties__: {
            set_segmentProperties: "set_segmentProperties",
            get_segmentProperties: "get_segmentProperties",
            set_script: "set_script",
            get_script: "get_script",
            set_replacementCodepoint: "set_replacementCodepoint",
            get_replacementCodepoint: "get_replacementCodepoint",
            set_length: "set_length",
            get_length: "get_length",
            set_language: "set_language",
            get_language: "get_language",
            set_flags: "set_flags",
            get_flags: "get_flags",
            set_direction: "set_direction",
            get_direction: "get_direction",
            set_contentType: "set_contentType",
            get_contentType: "get_contentType",
            set_clusterLevel: "set_clusterLevel",
            get_clusterLevel: "get_clusterLevel",
            get_allocationSuccessful: "get_allocationSuccessful"
          },
          _new: function() {
            return null
          },
          add: function(a, b, c) {},
          addCodepoints: function(a, b, c, d, e) {},
          addUTF8: function(a, b, c, d) {},
          addUTF16: function(a, b, c, d, e) {},
          addUTF32: function(a, b, c, d, e) {},
          clearContents: function(a) {},
          getGlyphInfo: function(a) {
            return null
          },
          getGlyphPositions: function(a) {
            return null
          },
          guessSegmentProperties: function(a) {},
          normalizeGlyphs: function(a) {},
          preallocate: function(a, b) {
            return !1
          },
          reset: function(a) {},
          reverse: function(a) {},
          reverseClusters: function(a) {},
          get_allocationSuccessful: function(a) {
            return !1
          },
          get_clusterLevel: function(a) {
            return 0
          },
          set_clusterLevel: function(a, b) {
            return b
          },
          get_contentType: function(a) {
            return 0
          },
          set_contentType: function(a, b) {
            return b
          },
          get_direction: function(a) {
            return 0
          },
          set_direction: function(a, b) {
            return b
          },
          get_empty: function() {
            return null
          },
          get_flags: function(a) {
            return 0
          },
          set_flags: function(a, b) {
            return b
          },
          get_language: function(a) {
            return null
          },
          set_language: function(a, b) {
            return b
          },
          get_length: function(a) {
            return 0
          },
          set_length: function(a, b) {
            return b
          },
          get_replacementCodepoint: function(a) {
            return 0
          },
          set_replacementCodepoint: function(a, b) {
            return b
          },
          get_script: function(a) {
            return 0
          },
          set_script: function(a, b) {
            return b
          },
          get_segmentProperties: function(a) {
            return null
          },
          set_segmentProperties: function(a, b) {
            return b
          }
        },
        Oq = function() {};
      k["lime.text.harfbuzz.HBFeature"] =
        Oq;
      Oq.__name__ = "lime.text.harfbuzz.HBFeature";
      Oq.prototype = {
        __class__: Oq
      };
      var Pq = function() {};
      k["lime.text.harfbuzz.HBGlyphInfo"] = Pq;
      Pq.__name__ = "lime.text.harfbuzz.HBGlyphInfo";
      Pq.prototype = {
        codepoint: null,
        mask: null,
        cluster: null,
        __class__: Pq
      };
      var Qq = function() {};
      k["lime.text.harfbuzz.HBGlyphPosition"] = Qq;
      Qq.__name__ = "lime.text.harfbuzz.HBGlyphPosition";
      Qq.prototype = {
        xAdvance: null,
        xOffset: null,
        yAdvance: null,
        yOffset: null,
        __class__: Qq
      };
      var xr = {
          _new: function(a) {
            return null
          },
          toString: function(a) {
            return null
          },
          fromString: function(a) {
            return xr._new(a)
          }
        },
        Rq = function() {};
      k["lime.text.harfbuzz.HBSegmentProperties"] = Rq;
      Rq.__name__ = "lime.text.harfbuzz.HBSegmentProperties";
      Rq.prototype = {
        __class__: Rq
      };
      var Nd = function(a) {
        this.onDisconnect = new Pd;
        this.onButtonUp = new um;
        this.onButtonDown = new um;
        this.onAxisMove = new No;
        this.id = a;
        this.connected = !0
      };
      k["lime.ui.Gamepad"] = Nd;
      Nd.__name__ = "lime.ui.Gamepad";
      Nd.addMappings = function(a) {};
      Nd.__connect = function(a) {
        if (!Nd.devices.h.hasOwnProperty(a)) {
          var b = new Nd(a);
          Nd.devices.h[a] =
            b;
          Nd.onConnect.dispatch(b)
        }
      };
      Nd.__disconnect = function(a) {
        var b = Nd.devices.h[a];
        null != b && (b.connected = !1);
        Nd.devices.remove(a);
        null != b && b.onDisconnect.dispatch()
      };
      Nd.prototype = {
        connected: null,
        id: null,
        onAxisMove: null,
        onButtonDown: null,
        onButtonUp: null,
        onDisconnect: null,
        get_guid: function() {
          return bd.__getDeviceData()[this.id].id
        },
        get_name: function() {
          return bd.__getDeviceData()[this.id].id
        },
        __class__: Nd,
        __properties__: {
          get_name: "get_name",
          get_guid: "get_guid"
        }
      };
      var bd = function(a) {
        this.onTrackballMove = new Jo;
        this.onHatMove = new Lo;
        this.onDisconnect = new Pd;
        this.onButtonUp = new Yh;
        this.onButtonDown = new Yh;
        this.onAxisMove = new Ko;
        this.id = a;
        this.connected = !0
      };
      k["lime.ui.Joystick"] = bd;
      bd.__name__ = "lime.ui.Joystick";
      bd.__connect = function(a) {
        if (!bd.devices.h.hasOwnProperty(a)) {
          var b = new bd(a);
          bd.devices.h[a] = b;
          bd.onConnect.dispatch(b)
        }
      };
      bd.__disconnect = function(a) {
        var b = bd.devices.h[a];
        null != b && (b.connected = !1);
        bd.devices.remove(a);
        null != b && b.onDisconnect.dispatch()
      };
      bd.__getDeviceData = function() {
        return navigator.getGamepads ?
          navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null
      };
      bd.prototype = {
        connected: null,
        id: null,
        onAxisMove: null,
        onButtonDown: null,
        onButtonUp: null,
        onDisconnect: null,
        onHatMove: null,
        onTrackballMove: null,
        get_guid: function() {
          return bd.__getDeviceData()[this.id].id
        },
        get_name: function() {
          return bd.__getDeviceData()[this.id].id
        },
        get_numAxes: function() {
          return bd.__getDeviceData()[this.id].axes.length
        },
        get_numButtons: function() {
          return bd.__getDeviceData()[this.id].buttons.length
        },
        get_numHats: function() {
          return 0
        },
        get_numTrackballs: function() {
          return 0
        },
        __class__: bd,
        __properties__: {
          get_numTrackballs: "get_numTrackballs",
          get_numHats: "get_numHats",
          get_numButtons: "get_numButtons",
          get_numAxes: "get_numAxes",
          get_name: "get_name",
          get_guid: "get_guid"
        }
      };
      var Db = {
          __properties__: {
            set_shiftKey: "set_shiftKey",
            get_shiftKey: "get_shiftKey",
            set_numLock: "set_numLock",
            get_numLock: "get_numLock",
            set_metaKey: "set_metaKey",
            get_metaKey: "get_metaKey",
            set_ctrlKey: "set_ctrlKey",
            get_ctrlKey: "get_ctrlKey",
            set_capsLock: "set_capsLock",
            get_capsLock: "get_capsLock",
            set_altKey: "set_altKey",
            get_altKey: "get_altKey"
          },
          get_altKey: function(a) {
            return 0 >= (a & 256) ? 0 < (a & 512) : !0
          },
          set_altKey: function(a, b) {
            return b
          },
          get_capsLock: function(a) {
            return 0 >= (a & 8192) ? 0 < (a & 8192) : !0
          },
          set_capsLock: function(a, b) {
            return b
          },
          get_ctrlKey: function(a) {
            return 0 >= (a & 64) ? 0 < (a & 128) : !0
          },
          set_ctrlKey: function(a, b) {
            return b
          },
          get_metaKey: function(a) {
            return 0 >= (a & 1024) ? 0 < (a & 2048) : !0
          },
          set_metaKey: function(a, b) {
            return b
          },
          get_numLock: function(a) {
            return 0 >=
              (a & 4096) ? 0 < (a & 4096) : !0
          },
          set_numLock: function(a, b) {
            return b
          },
          get_shiftKey: function(a) {
            return 0 >= (a & 1) ? 0 < (a & 2) : !0
          },
          set_shiftKey: function(a, b) {
            return b
          }
        },
        qc = O["lime.ui.MouseCursor"] = {
          __ename__: "lime.ui.MouseCursor",
          __constructs__: null,
          ARROW: {
            _hx_name: "ARROW",
            _hx_index: 0,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          CROSSHAIR: {
            _hx_name: "CROSSHAIR",
            _hx_index: 1,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          DEFAULT: {
            _hx_name: "DEFAULT",
            _hx_index: 2,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          MOVE: {
            _hx_name: "MOVE",
            _hx_index: 3,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          POINTER: {
            _hx_name: "POINTER",
            _hx_index: 4,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          RESIZE_NESW: {
            _hx_name: "RESIZE_NESW",
            _hx_index: 5,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          RESIZE_NS: {
            _hx_name: "RESIZE_NS",
            _hx_index: 6,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          RESIZE_NWSE: {
            _hx_name: "RESIZE_NWSE",
            _hx_index: 7,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          RESIZE_WE: {
            _hx_name: "RESIZE_WE",
            _hx_index: 8,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          TEXT: {
            _hx_name: "TEXT",
            _hx_index: 9,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          WAIT: {
            _hx_name: "WAIT",
            _hx_index: 10,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          WAIT_ARROW: {
            _hx_name: "WAIT_ARROW",
            _hx_index: 11,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          },
          CUSTOM: {
            _hx_name: "CUSTOM",
            _hx_index: 12,
            __enum__: "lime.ui.MouseCursor",
            toString: v
          }
        };
      qc.__constructs__ = [qc.ARROW, qc.CROSSHAIR, qc.DEFAULT, qc.MOVE, qc.POINTER, qc.RESIZE_NESW, qc.RESIZE_NS, qc.RESIZE_NWSE, qc.RESIZE_WE, qc.TEXT, qc.WAIT, qc.WAIT_ARROW, qc.CUSTOM];
      var Bh = O["lime.ui.MouseWheelMode"] = {
        __ename__: "lime.ui.MouseWheelMode",
        __constructs__: null,
        PIXELS: {
          _hx_name: "PIXELS",
          _hx_index: 0,
          __enum__: "lime.ui.MouseWheelMode",
          toString: v
        },
        LINES: {
          _hx_name: "LINES",
          _hx_index: 1,
          __enum__: "lime.ui.MouseWheelMode",
          toString: v
        },
        PAGES: {
          _hx_name: "PAGES",
          _hx_index: 2,
          __enum__: "lime.ui.MouseWheelMode",
          toString: v
        },
        UNKNOWN: {
          _hx_name: "UNKNOWN",
          _hx_index: 3,
          __enum__: "lime.ui.MouseWheelMode",
          toString: v
        }
      };
      Bh.__constructs__ = [Bh.PIXELS, Bh.LINES, Bh.PAGES, Bh.UNKNOWN];
      var sd = function(a, b, c, d, e, f, g) {
        this.x = a;
        this.y = b;
        this.id =
          c;
        this.dx = d;
        this.dy = e;
        this.pressure = f;
        this.device = g
      };
      k["lime.ui.Touch"] = sd;
      sd.__name__ = "lime.ui.Touch";
      sd.prototype = {
        device: null,
        dx: null,
        dy: null,
        id: null,
        pressure: null,
        x: null,
        y: null,
        __class__: sd
      };
      var Mi = function(a, b) {
        this.onTextInput = new sm;
        this.onTextEdit = new Mo;
        this.onRestore = new Pd;
        this.onResize = new rm;
        this.onRenderContextRestored = new tm;
        this.onRenderContextLost = new Pd;
        this.onRender = new tm;
        this.onMove = new Uj;
        this.onMouseWheel = new Io;
        this.onMouseUp = new Go;
        this.onMouseMoveRelative = new Uj;
        this.onMouseMove =
          new Uj;
        this.onMouseDown = new Ho;
        this.onMinimize = new Pd;
        this.onMaximize = new Pd;
        this.onLeave = new Pd;
        this.onKeyUp = new vm;
        this.onKeyDown = new vm;
        this.onFullscreen = new Pd;
        this.onFocusOut = new Pd;
        this.onFocusIn = new Pd;
        this.onExpose = new Pd;
        this.onEnter = new Pd;
        this.onDropFile = new sm;
        this.onDeactivate = new Pd;
        this.onClose = new Pd;
        this.onActivate = new Pd;
        this.application = a;
        this.__attributes = null != b ? b : {};
        Object.prototype.hasOwnProperty.call(this.__attributes, "parameters") && (this.parameters = this.__attributes.parameters);
        this.__height = this.__width = 0;
        this.__fullscreen = !1;
        this.__scale = 1;
        this.__y = this.__x = 0;
        this.__title = "";
        this.id = -1;
        this.__backend = new Ma(this)
      };
      k["lime.ui.Window"] = Mi;
      Mi.__name__ = "lime.ui.Window";
      Mi.prototype = {
        application: null,
        context: null,
        display: null,
        element: null,
        hidden: null,
        id: null,
        onActivate: null,
        onClose: null,
        onDeactivate: null,
        onDropFile: null,
        onEnter: null,
        onExpose: null,
        onFocusIn: null,
        onFocusOut: null,
        onFullscreen: null,
        onKeyDown: null,
        onKeyUp: null,
        onLeave: null,
        onMaximize: null,
        onMinimize: null,
        onMouseDown: null,
        onMouseMove: null,
        onMouseMoveRelative: null,
        onMouseUp: null,
        onMouseWheel: null,
        onMove: null,
        onRender: null,
        onRenderContextLost: null,
        onRenderContextRestored: null,
        onResize: null,
        onRestore: null,
        onTextEdit: null,
        onTextInput: null,
        parameters: null,
        scale: null,
        stage: null,
        __attributes: null,
        __backend: null,
        __borderless: null,
        __fullscreen: null,
        __height: null,
        __hidden: null,
        __maximized: null,
        __minimized: null,
        __resizable: null,
        __scale: null,
        __title: null,
        __width: null,
        __x: null,
        __y: null,
        alert: function(a, b) {
          this.__backend.alert(a,
            b)
        },
        close: function() {
          this.__backend.close()
        },
        focus: function() {
          this.__backend.focus()
        },
        move: function(a, b) {
          this.__backend.move(a, b);
          this.__x = a;
          this.__y = b
        },
        readPixels: function(a) {
          return this.__backend.readPixels(a)
        },
        resize: function(a, b) {
          this.__backend.resize(a, b);
          this.__width = a;
          this.__height = b
        },
        setIcon: function(a) {
          null != a && this.__backend.setIcon(a)
        },
        toString: function() {
          return "[object Window]"
        },
        warpMouse: function(a, b) {
          this.__backend.warpMouse(a, b)
        },
        get_cursor: function() {
          return this.__backend.getCursor()
        },
        set_cursor: function(a) {
          return this.__backend.setCursor(a)
        },
        get_display: function() {
          return this.__backend.getDisplay()
        },
        get_displayMode: function() {
          return this.__backend.getDisplayMode()
        },
        set_displayMode: function(a) {
          return this.__backend.setDisplayMode(a)
        },
        get_borderless: function() {
          return this.__borderless
        },
        set_borderless: function(a) {
          return this.__borderless = this.__backend.setBorderless(a)
        },
        get_frameRate: function() {
          return this.__backend.getFrameRate()
        },
        set_frameRate: function(a) {
          return this.__backend.setFrameRate(a)
        },
        get_fullscreen: function() {
          return this.__fullscreen
        },
        set_fullscreen: function(a) {
          return this.__fullscreen = this.__backend.setFullscreen(a)
        },
        get_height: function() {
          return this.__height
        },
        set_height: function(a) {
          this.resize(this.__width, a);
          return this.__height
        },
        get_hidden: function() {
          return this.__hidden
        },
        get_maximized: function() {
          return this.__maximized
        },
        set_maximized: function(a) {
          this.__minimized = !1;
          return this.__maximized = this.__backend.setMaximized(a)
        },
        get_minimized: function() {
          return this.__minimized
        },
        set_minimized: function(a) {
          this.__maximized = !1;
          return this.__minimized = this.__backend.setMinimized(a)
        },
        get_mouseLock: function() {
          return this.__backend.getMouseLock()
        },
        set_mouseLock: function(a) {
          this.__backend.setMouseLock(a);
          return a
        },
        get_resizable: function() {
          return this.__resizable
        },
        set_resizable: function(a) {
          return this.__resizable = this.__backend.setResizable(a)
        },
        get_scale: function() {
          return this.__scale
        },
        get_textInputEnabled: function() {
          return this.__backend.getTextInputEnabled()
        },
        set_textInputEnabled: function(a) {
          return this.__backend.setTextInputEnabled(a)
        },
        get_title: function() {
          return this.__title
        },
        set_title: function(a) {
          return this.__title = this.__backend.setTitle(a)
        },
        get_width: function() {
          return this.__width
        },
        set_width: function(a) {
          this.resize(a, this.__height);
          return this.__width
        },
        get_x: function() {
          return this.__x
        },
        set_x: function(a) {
          this.move(a, this.__y);
          return this.__x
        },
        get_y: function() {
          return this.__y
        },
        set_y: function(a) {
          this.move(this.__x, a);
          return this.__y
        },
        __class__: Mi,
        __properties__: {
          set_y: "set_y",
          get_y: "get_y",
          set_x: "set_x",
          get_x: "get_x",
          set_width: "set_width",
          get_width: "get_width",
          set_title: "set_title",
          get_title: "get_title",
          set_textInputEnabled: "set_textInputEnabled",
          get_textInputEnabled: "get_textInputEnabled",
          get_scale: "get_scale",
          set_resizable: "set_resizable",
          get_resizable: "get_resizable",
          set_mouseLock: "set_mouseLock",
          get_mouseLock: "get_mouseLock",
          set_minimized: "set_minimized",
          get_minimized: "get_minimized",
          set_maximized: "set_maximized",
          get_maximized: "get_maximized",
          get_hidden: "get_hidden",
          set_height: "set_height",
          get_height: "get_height",
          set_fullscreen: "set_fullscreen",
          get_fullscreen: "get_fullscreen",
          set_frameRate: "set_frameRate",
          get_frameRate: "get_frameRate",
          set_displayMode: "set_displayMode",
          get_displayMode: "get_displayMode",
          get_display: "get_display",
          set_cursor: "set_cursor",
          get_cursor: "get_cursor",
          set_borderless: "set_borderless",
          get_borderless: "get_borderless"
        }
      };
      var yr = O["lime.utils.TAError"] = {
        __ename__: "lime.utils.TAError",
        __constructs__: null,
        RangeError: {
          _hx_name: "RangeError",
          _hx_index: 0,
          __enum__: "lime.utils.TAError",
          toString: v
        }
      };
      yr.__constructs__ = [yr.RangeError];
      var Tf = function() {
        this.data = new ua;
        this.paths = []
      };
      k["lime.utils.AssetBundle"] = Tf;
      Tf.__name__ = "lime.utils.AssetBundle";
      Tf.fromBytes = function(a) {
        a = new km(a);
        return Tf.__extractBundle(a)
      };
      Tf.fromFile = function(a) {
        return null
      };
      Tf.loadFromBytes = function(a) {
        return lb.withValue(Tf.fromBytes(a))
      };
      Tf.loadFromFile = function(a) {
        return mc.loadFromFile(a).then(Tf.loadFromBytes)
      };
      Tf.__extractBundle = function(a) {
        var b = Ii.readZip(a);
        a = new Tf;
        for (b = b.h; null != b;) {
          var c = b.item;
          b = b.next;
          if (c.compressed) {
            var d = a.data,
              e =
              c.fileName,
              f = mc.decompress(c.data, fe.DEFLATE);
            d.h[e] = f
          } else a.data.h[c.fileName] = c.data;
          a.paths.push(c.fileName)
        }
        return a
      };
      Tf.prototype = {
        data: null,
        paths: null,
        __class__: Tf
      };
      var Wo = function() {
        this.enabled = !0;
        this.audio = new ua;
        this.font = new ua;
        this.image = new ua;
        this.version = 879472
      };
      k["lime.utils.AssetCache"] = Wo;
      Wo.__name__ = "lime.utils.AssetCache";
      Wo.prototype = {
        audio: null,
        enabled: null,
        image: null,
        font: null,
        version: null,
        exists: function(a, b) {
          return ("IMAGE" == b || null == b) && Object.prototype.hasOwnProperty.call(this.image.h,
            a) || ("FONT" == b || null == b) && Object.prototype.hasOwnProperty.call(this.font.h, a) || ("SOUND" == b || "MUSIC" == b || null == b) && Object.prototype.hasOwnProperty.call(this.audio.h, a) ? !0 : !1
        },
        set: function(a, b, c) {
          switch (b) {
            case "FONT":
              this.font.h[a] = c;
              break;
            case "IMAGE":
              if (!(c instanceof Hb)) throw F.thrown("Cannot cache non-Image asset: " + M.string(c) + " as Image");
              this.image.h[a] = c;
              break;
            case "MUSIC":
            case "SOUND":
              if (!(c instanceof Zc)) throw F.thrown("Cannot cache non-AudioBuffer asset: " + M.string(c) + " as AudioBuffer");
              this.audio.h[a] = c;
              break;
            default:
              throw F.thrown(b + " assets are not cachable");
          }
        },
        clear: function(a) {
          if (null == a) this.audio = new ua, this.font = new ua, this.image = new ua;
          else {
            var b = this.audio.h;
            b = Object.keys(b);
            for (var c = b.length, d = 0; d < c;) {
              var e = b[d++];
              if (W.startsWith(e, a)) {
                var f = this.audio;
                Object.prototype.hasOwnProperty.call(f.h, e) && delete f.h[e]
              }
            }
            b = this.font.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c;) e = b[d++], W.startsWith(e, a) && (f = this.font, Object.prototype.hasOwnProperty.call(f.h, e) && delete f.h[e]);
            b =
              this.image.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c;) e = b[d++], W.startsWith(e, a) && (f = this.image, Object.prototype.hasOwnProperty.call(f.h, e) && delete f.h[e])
          }
        },
        __class__: Wo
      };
      var yb = function() {
        this.types = new ua;
        this.sizes = new ua;
        this.preload = new ua;
        this.paths = new ua;
        this.pathGroups = new ua;
        this.classTypes = new ua;
        this.cachedText = new ua;
        this.cachedImages = new ua;
        this.cachedFonts = new ua;
        this.cachedBytes = new ua;
        this.cachedAudioBuffers = new ua;
        this.onChange = new Pd;
        this.bytesTotal = this.bytesLoaded = 0
      };
      k["lime.utils.AssetLibrary"] =
        yb;
      yb.__name__ = "lime.utils.AssetLibrary";
      yb.fromBytes = function(a, b) {
        return yb.fromManifest(Pc.fromBytes(a, b))
      };
      yb.fromFile = function(a, b) {
        return yb.fromManifest(Pc.fromFile(a, b))
      };
      yb.fromBundle = function(a) {
        if (Object.prototype.hasOwnProperty.call(a.data.h, "library.json")) {
          var b = Pc.fromBytes(a.data.h["library.json"]);
          if (null != b) {
            if (null == b.libraryType) var c = new yb;
            else if (c = k[b.libraryType], null != c) c = Qb.createInstance(c, b.libraryArgs);
            else return Na.warn("Could not find library type: " + b.libraryType, {
              fileName: "lime/utils/AssetLibrary.hx",
              lineNumber: 122,
              className: "lime.utils.AssetLibrary",
              methodName: "fromBundle"
            }), null;
            c.__fromBundle(a, b);
            return c
          }
        } else return c = new yb, c.__fromBundle(a), c;
        return null
      };
      yb.fromManifest = function(a) {
        if (null == a) return null;
        if (null == a.libraryType) var b = new yb;
        else if (b = k[a.libraryType], null != b) b = Qb.createInstance(b, a.libraryArgs);
        else return Na.warn("Could not find library type: " + a.libraryType, {
          fileName: "lime/utils/AssetLibrary.hx",
          lineNumber: 160,
          className: "lime.utils.AssetLibrary",
          methodName: "fromManifest"
        }), null;
        b.__fromManifest(a);
        return b
      };
      yb.loadFromBytes = function(a, b) {
        return Pc.loadFromBytes(a, b).then(function(a) {
          return yb.loadFromManifest(a)
        })
      };
      yb.loadFromFile = function(a, b) {
        return Pc.loadFromFile(a, b).then(function(a) {
          return yb.loadFromManifest(a)
        })
      };
      yb.loadFromManifest = function(a) {
        a = yb.fromManifest(a);
        return null != a ? a.load() : lb.withError("Could not load asset manifest")
      };
      yb.prototype = {
        onChange: null,
        assetsLoaded: null,
        assetsTotal: null,
        bytesLoaded: null,
        bytesLoadedCache: null,
        bytesTotal: null,
        cachedAudioBuffers: null,
        cachedBytes: null,
        cachedFonts: null,
        cachedImages: null,
        cachedText: null,
        classTypes: null,
        loaded: null,
        pathGroups: null,
        paths: null,
        preload: null,
        promise: null,
        sizes: null,
        types: null,
        exists: function(a, b) {
          b = null != b ? K.__cast(b, String) : null;
          a = this.types.h[a];
          return null == a || a != b && ("SOUND" != b && "MUSIC" != b || "MUSIC" != a && "SOUND" != a) && "BINARY" != b && null != b && ("BINARY" != a || "TEXT" != b) ? !1 : !0
        },
        getAsset: function(a, b) {
          switch (b) {
            case "BINARY":
              return this.getBytes(a);
            case "FONT":
              return this.getFont(a);
            case "IMAGE":
              return this.getImage(a);
            case "MUSIC":
            case "SOUND":
              return this.getAudioBuffer(a);
            case "TEMPLATE":
              throw F.thrown("Not sure how to get template: " + a);
            case "TEXT":
              return this.getText(a);
            default:
              throw F.thrown("Unknown asset type: " + b);
          }
        },
        getAudioBuffer: function(a) {
          return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? this.cachedAudioBuffers.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? Zc.fromBytes(K.__cast(Qb.createInstance(this.classTypes.h[a], []), ib)) :
            Zc.fromFile(this.paths.h[a])
        },
        getBytes: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)) return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = mc.ofString(this.cachedText.h[a]);
            return this.cachedBytes.h[a] = b
          }
          return Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? K.__cast(Qb.createInstance(this.classTypes.h[a], []), ib) : mc.fromFile(this.paths.h[a])
        },
        getFont: function(a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h,
            a) ? this.cachedFonts.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? K.__cast(Qb.createInstance(this.classTypes.h[a], []), Qd) : Qd.fromFile(this.paths.h[a])
        },
        getImage: function(a) {
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ? this.cachedImages.h[a] : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? K.__cast(Qb.createInstance(this.classTypes.h[a], []), Hb) : Hb.fromFile(this.paths.h[a])
        },
        getPath: function(a) {
          return Object.prototype.hasOwnProperty.call(this.paths.h,
            a) ? this.paths.h[a] : Object.prototype.hasOwnProperty.call(this.pathGroups.h, a) ? this.pathGroups.h[a][0] : null
        },
        getText: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) return this.cachedText.h[a];
          a = this.getBytes(a);
          return null == a ? null : a.getString(0, a.length)
        },
        isLocal: function(a, b) {
          if (Object.prototype.hasOwnProperty.call(this.classTypes.h, a)) return !0;
          b = null != b ? K.__cast(b, String) : null;
          if (null == b) return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? !0 : Object.prototype.hasOwnProperty.call(this.cachedText.h,
            a);
          switch (b) {
            case "FONT":
              return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a);
            case "IMAGE":
              return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a);
            case "MUSIC":
            case "SOUND":
              return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a);
            default:
              return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? !0 : Object.prototype.hasOwnProperty.call(this.cachedText.h, a)
          }
        },
        list: function(a) {
          for (var b = null != a ? K.__cast(a, String) : null, c = [], d = Object.keys(this.types.h), e =
              d.length, f = 0; f < e;) {
            var g = d[f++];
            (null == b || this.exists(g, a)) && c.push(g)
          }
          return c
        },
        loadAsset: function(a, b) {
          switch (b) {
            case "BINARY":
              return this.loadBytes(a);
            case "FONT":
              return this.loadFont(a);
            case "IMAGE":
              return this.loadImage(a);
            case "MUSIC":
            case "SOUND":
              return this.loadAudioBuffer(a);
            case "TEMPLATE":
              throw F.thrown("Not sure how to load template: " + a);
            case "TEXT":
              return this.loadText(a);
            default:
              throw F.thrown("Unknown asset type: " + b);
          }
        },
        load: function() {
          if (this.loaded) return lb.withValue(this);
          if (null ==
            this.promise) {
            this.promise = new ee;
            this.bytesLoadedCache = new ua;
            this.assetsLoaded = 0;
            this.assetsTotal = 1;
            for (var a = Object.keys(this.preload.h), b = a.length, c = 0; c < b;) {
              var d = a[c++];
              if (this.preload.h[d]) {
                Na.verbose("Preloading asset: " + d + " [" + this.types.h[d] + "]", {
                  fileName: "lime/utils/AssetLibrary.hx",
                  lineNumber: 405,
                  className: "lime.utils.AssetLibrary",
                  methodName: "load"
                });
                var e = this.types.h[d];
                if (null != e) switch (e) {
                  case "BINARY":
                    this.assetsTotal++;
                    e = this.loadBytes(d);
                    e.onProgress(function(a, b) {
                      return function(c,
                        d) {
                        b[0](a[0], c, d)
                      }
                    }([d], [r(this, this.load_onProgress)]));
                    e.onError(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.load_onError)]));
                    e.onComplete(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.loadBytes_onComplete)]));
                    break;
                  case "FONT":
                    this.assetsTotal++;
                    e = this.loadFont(d);
                    e.onProgress(function(a, b) {
                      return function(c, d) {
                        b[0](a[0], c, d)
                      }
                    }([d], [r(this, this.load_onProgress)]));
                    e.onError(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.load_onError)]));
                    e.onComplete(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.loadFont_onComplete)]));
                    break;
                  case "IMAGE":
                    this.assetsTotal++;
                    e = this.loadImage(d);
                    e.onProgress(function(a, b) {
                      return function(c, d) {
                        b[0](a[0], c, d)
                      }
                    }([d], [r(this, this.load_onProgress)]));
                    e.onError(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.load_onError)]));
                    e.onComplete(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.loadImage_onComplete)]));
                    break;
                  case "MUSIC":
                  case "SOUND":
                    this.assetsTotal++;
                    e = this.loadAudioBuffer(d);
                    e.onProgress(function(a, b) {
                      return function(c, d) {
                        b[0](a[0], c, d)
                      }
                    }([d], [r(this, this.load_onProgress)]));
                    e.onError(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.loadAudioBuffer_onError)]));
                    e.onComplete(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.loadAudioBuffer_onComplete)]));
                    break;
                  case "TEXT":
                    this.assetsTotal++, e = this.loadText(d), e.onProgress(function(a, b) {
                      return function(c, d) {
                        b[0](a[0], c, d)
                      }
                    }([d], [r(this, this.load_onProgress)])), e.onError(function(a,
                      b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.load_onError)])), e.onComplete(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([d], [r(this, this.loadText_onComplete)]))
                }
              }
            }
            this.__assetLoaded(null)
          }
          return this.promise.future
        },
        loadAudioBuffer: function(a) {
          return Object.prototype.hasOwnProperty.call(this.cachedAudioBuffers.h, a) ? lb.withValue(this.cachedAudioBuffers.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? lb.withValue(Qb.createInstance(this.classTypes.h[a], [])) : Object.prototype.hasOwnProperty.call(this.pathGroups.h,
            a) ? Zc.loadFromFiles(this.pathGroups.h[a]) : Zc.loadFromFile(this.paths.h[a])
        },
        loadBytes: function(a) {
          return Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? lb.withValue(this.cachedBytes.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? lb.withValue(Qb.createInstance(this.classTypes.h[a], [])) : mc.loadFromFile(this.paths.h[a])
        },
        loadFont: function(a) {
          return Object.prototype.hasOwnProperty.call(this.cachedFonts.h, a) ? lb.withValue(this.cachedFonts.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h,
            a) ? (a = Qb.createInstance(this.classTypes.h[a], []), a.__loadFromName(a.name)) : Qd.loadFromName(this.paths.h[a])
        },
        loadImage: function(a) {
          var b = this;
          return Object.prototype.hasOwnProperty.call(this.cachedImages.h, a) ? lb.withValue(this.cachedImages.h[a]) : Object.prototype.hasOwnProperty.call(this.classTypes.h, a) ? lb.withValue(Qb.createInstance(this.classTypes.h[a], [])) : Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) ? Hb.loadFromBytes(this.cachedBytes.h[a]).then(function(c) {
            var d = b.cachedBytes;
            Object.prototype.hasOwnProperty.call(d.h,
              a) && delete d.h[a];
            b.cachedImages.h[a] = c;
            return lb.withValue(c)
          }) : Hb.loadFromFile(this.paths.h[a])
        },
        loadText: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) return lb.withValue(this.cachedText.h[a]);
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a) || Object.prototype.hasOwnProperty.call(this.classTypes.h, a)) {
            var b = this.getBytes(a);
            if (null == b) return lb.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return lb.withValue(b)
          }
          return (new Xj).load(this.paths.h[a])
        },
        unload: function() {},
        __assetLoaded: function(a) {
          this.assetsLoaded++;
          null != a && Na.verbose("Loaded asset: " + a + " [" + this.types.h[a] + "] (" + (this.assetsLoaded - 1) + "/" + (this.assetsTotal - 1) + ")", {
            fileName: "lime/utils/AssetLibrary.hx",
            lineNumber: 619,
            className: "lime.utils.AssetLibrary",
            methodName: "__assetLoaded"
          });
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a) ? this.sizes.h[a] : 0;
            if (Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)) {
              var c = this.bytesLoadedCache.h[a];
              c < b && (this.bytesLoaded +=
                b - c)
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b
          }
          this.assetsLoaded < this.assetsTotal ? this.promise.progress(this.bytesLoaded, this.bytesTotal) : (this.loaded = !0, this.promise.progress(this.bytesTotal, this.bytesTotal), this.promise.complete(this))
        },
        __cacheBreak: function(a) {
          return sa.__cacheBreak(a)
        },
        __fromBundle: function(a, b) {
          if (null != b) {
            var c = 0;
            for (b = b.assets; c < b.length;) {
              var d = b[c];
              ++c;
              var e = Object.prototype.hasOwnProperty.call(d, "id") ? d.id : d.path;
              var f = a.data.h[d.path];
              if (Object.prototype.hasOwnProperty.call(d,
                  "type")) {
                var g = d.type;
                "TEXT" == g ? this.cachedText.h[e] = null != f ? M.string(f) : null : this.cachedBytes.h[e] = f;
                this.types.h[e] = d.type
              } else this.cachedBytes.h[e] = f, this.types.h[e] = "BINARY"
            }
          } else
            for (c = 0, b = a.paths; c < b.length;) e = b[c], ++c, this.cachedBytes.h[e] = a.data.h[e], this.types.h[e] = "BINARY"
        },
        __fromManifest: function(a) {
          var b = 2 <= a.version,
            c = a.rootPath;
          null == c && (c = "");
          "" != c && (c += "/");
          for (var d = 0, e = a.assets; d < e.length;) {
            var f = e[d];
            ++d;
            var g = b && Object.prototype.hasOwnProperty.call(f, "size") ? f.size : 100;
            var h =
              Object.prototype.hasOwnProperty.call(f, "id") ? f.id : f.path;
            if (Object.prototype.hasOwnProperty.call(f, "path")) {
              var m = this.paths;
              var l = this.__cacheBreak(this.__resolvePath(c + M.string(Y.field(f, "path"))));
              m.h[h] = l
            }
            if (Object.prototype.hasOwnProperty.call(f, "pathGroup")) {
              m = Y.field(f, "pathGroup");
              l = 0;
              for (var p = m.length; l < p;) {
                var n = l++;
                m[n] = this.__cacheBreak(this.__resolvePath(c + m[n]))
              }
              this.pathGroups.h[h] = m
            }
            this.sizes.h[h] = g;
            this.types.h[h] = f.type;
            Object.prototype.hasOwnProperty.call(f, "preload") && (this.preload.h[h] =
              Y.field(f, "preload"));
            Object.prototype.hasOwnProperty.call(f, "className") && (g = Y.field(f, "className"), g = k[g], this.classTypes.h[h] = g)
          }
          d = this.bytesTotal = 0;
          for (e = a.assets; d < e.length;) f = e[d], ++d, h = Object.prototype.hasOwnProperty.call(f, "id") ? f.id : f.path, Object.prototype.hasOwnProperty.call(this.preload.h, h) && this.preload.h[h] && Object.prototype.hasOwnProperty.call(this.sizes.h, h) && (this.bytesTotal += this.sizes.h[h])
        },
        __resolvePath: function(a) {
          a = W.replace(a, "\\", "/");
          var b = a.indexOf(":");
          W.startsWith(a, "http") &&
            0 < b ? (b += 3, a = da.substr(a, 0, b) + W.replace(da.substr(a, b, null), "//", "/")) : a = W.replace(a, "//", "/");
          if (-1 < a.indexOf("./")) {
            a = a.split("/");
            b = [];
            for (var c = 0, d = a.length; c < d;) {
              var e = c++;
              ".." == a[e] ? 0 == e || ".." == b[e - 1] ? b.push("..") : b.pop() : "." == a[e] ? 0 == e && b.push(".") : b.push(a[e])
            }
            a = b.join("/")
          }
          return a
        },
        loadAudioBuffer_onComplete: function(a, b) {
          this.cachedAudioBuffers.h[a] = b;
          if (Object.prototype.hasOwnProperty.call(this.pathGroups.h, a))
            for (var c = this.pathGroups.h[a], d = Object.keys(this.pathGroups.h), e = d.length, f =
                0; f < e;) {
              var g = d[f++];
              if (g != a)
                for (var h = 0; h < c.length;) {
                  var m = c[h];
                  ++h;
                  if (-1 < this.pathGroups.h[g].indexOf(m)) {
                    this.cachedAudioBuffers.h[g] = b;
                    break
                  }
                }
            }
          this.__assetLoaded(a)
        },
        loadAudioBuffer_onError: function(a, b) {
          null != b && "" != b ? Na.warn('Could not load "' + a + '": ' + M.string(b), {
            fileName: "lime/utils/AssetLibrary.hx",
            lineNumber: 865,
            className: "lime.utils.AssetLibrary",
            methodName: "loadAudioBuffer_onError"
          }) : Na.warn('Could not load "' + a + '"', {
            fileName: "lime/utils/AssetLibrary.hx",
            lineNumber: 869,
            className: "lime.utils.AssetLibrary",
            methodName: "loadAudioBuffer_onError"
          });
          this.loadAudioBuffer_onComplete(a, new Zc)
        },
        loadBytes_onComplete: function(a, b) {
          this.cachedBytes.h[a] = b;
          this.__assetLoaded(a)
        },
        loadFont_onComplete: function(a, b) {
          this.cachedFonts.h[a] = b;
          this.__assetLoaded(a)
        },
        loadImage_onComplete: function(a, b) {
          this.cachedImages.h[a] = b;
          this.__assetLoaded(a)
        },
        loadText_onComplete: function(a, b) {
          this.cachedText.h[a] = b;
          this.__assetLoaded(a)
        },
        load_onError: function(a, b) {
          null != b && "" != b ? this.promise.error('Error loading asset "' + a + '": ' +
            M.string(b)) : this.promise.error('Error loading asset "' + a + '"')
        },
        load_onProgress: function(a, b, c) {
          if (0 < b) {
            var d = this.sizes.h[a];
            0 < c ? (b /= c, 1 < b && (b = 1), b = Math.floor(b * d)) : b > d && (b = d);
            Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a) ? (d = this.bytesLoadedCache.h[a], b != d && (this.bytesLoaded += b - d)) : this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b;
            this.promise.progress(this.bytesLoaded, this.bytesTotal)
          }
        },
        __class__: yb
      };
      var Pc = function() {
        this.assets = [];
        this.libraryArgs = [];
        this.version = 2
      };
      k["lime.utils.AssetManifest"] =
        Pc;
      Pc.__name__ = "lime.utils.AssetManifest";
      Pc.fromBytes = function(a, b) {
        return null != a ? Pc.parse(a.getString(0, a.length), b) : null
      };
      Pc.fromFile = function(a, b) {
        a = Pc.__resolvePath(a);
        b = Pc.__resolveRootPath(b, a);
        return null == a ? null : Pc.fromBytes(mc.fromFile(a), b)
      };
      Pc.loadFromBytes = function(a, b) {
        return lb.withValue(Pc.fromBytes(a, b))
      };
      Pc.loadFromFile = function(a, b) {
        a = Pc.__resolvePath(a);
        b = Pc.__resolveRootPath(b, a);
        return null == a ? null : mc.loadFromFile(a).then(function(a) {
          return lb.withValue(Pc.fromBytes(a, b))
        })
      };
      Pc.parse = function(a, b) {
        if (null == a || "" == a) return null;
        a = JSON.parse(a);
        var c = new Pc;
        Object.prototype.hasOwnProperty.call(a, "name") && (c.name = a.name);
        Object.prototype.hasOwnProperty.call(a, "libraryType") && (c.libraryType = a.libraryType);
        Object.prototype.hasOwnProperty.call(a, "libraryArgs") && (c.libraryArgs = a.libraryArgs);
        if (Object.prototype.hasOwnProperty.call(a, "assets")) {
          var d = a.assets;
          Object.prototype.hasOwnProperty.call(a, "version") && 2 >= a.version ? c.assets = Le.run(d) : c.assets = d
        }
        Object.prototype.hasOwnProperty.call(a,
          "rootPath") && (c.rootPath = a.rootPath);
        null != b && "" != b && (c.rootPath = null == c.rootPath || "" == c.rootPath ? b : b + "/" + c.rootPath);
        return c
      };
      Pc.__resolvePath = function(a) {
        if (null == a) return null;
        var b = a.indexOf("?");
        var c = -1 < b ? da.substr(a, 0, b) : a;
        for (c = W.replace(c, "\\", "/"); W.endsWith(c, "/");) c = da.substr(c, 0, c.length - 1);
        return W.endsWith(c, ".bundle") ? -1 < b ? c + "/library.json" + da.substr(a, b, null) : c + "/library.json" : a
      };
      Pc.__resolveRootPath = function(a, b) {
        if (null != a) return a;
        a = b.indexOf("?");
        a = -1 < a ? da.substr(b, 0, a) : b;
        for (a =
          W.replace(a, "\\", "/"); W.endsWith(a, "/");) {
          if ("/" == a) return a;
          a = da.substr(a, 0, a.length - 1)
        }
        return W.endsWith(a, ".bundle") ? a : Ah.directory(a)
      };
      Pc.prototype = {
        assets: null,
        libraryArgs: null,
        libraryType: null,
        name: null,
        rootPath: null,
        version: null,
        serialize: function() {
          var a = {};
          a.version = this.version;
          a.libraryType = this.libraryType;
          a.libraryArgs = this.libraryArgs;
          a.name = this.name;
          a.assets = Ce.run(this.assets);
          a.rootPath = this.rootPath;
          return JSON.stringify(a)
        },
        __class__: Pc
      };
      var sa = function() {};
      k["lime.utils.Assets"] =
        sa;
      sa.__name__ = "lime.utils.Assets";
      sa.exists = function(a, b) {
        null == b && (b = "BINARY");
        var c = a.indexOf(":"),
          d = a.substring(0, c);
        a = a.substring(c + 1);
        d = sa.getLibrary(d);
        return null != d ? d.exists(a, b) : !1
      };
      sa.getAsset = function(a, b, c) {
        if (c && sa.cache.enabled) switch (b) {
          case "BINARY":
          case "TEXT":
            c = !1;
            break;
          case "FONT":
            var d = sa.cache.font.h[a];
            if (null != d) return d;
            break;
          case "IMAGE":
            d = sa.cache.image.h[a];
            if (sa.isValidImage(d)) return d;
            break;
          case "MUSIC":
          case "SOUND":
            d = sa.cache.audio.h[a];
            if (sa.isValidAudio(d)) return d;
            break;
          case "TEMPLATE":
            throw F.thrown("Not sure how to get template: " + a);
          default:
            return null
        }
        var e = a.indexOf(":");
        d = a.substring(0, e);
        e = a.substring(e + 1);
        var f = sa.getLibrary(d);
        if (null != f)
          if (f.exists(e, b)) {
            if (f.isLocal(e, b)) return d = f.getAsset(e, b), c && sa.cache.enabled && sa.cache.set(a, b, d), d;
            Na.error(b + ' asset "' + a + '" exists, but only asynchronously', {
              fileName: "lime/utils/Assets.hx",
              lineNumber: 133,
              className: "lime.utils.Assets",
              methodName: "getAsset"
            })
          } else Na.error("There is no " + b + ' asset with an ID of "' +
            a + '"', {
              fileName: "lime/utils/Assets.hx",
              lineNumber: 138,
              className: "lime.utils.Assets",
              methodName: "getAsset"
            });
        else Na.error(sa.__libraryNotFound(d), {
          fileName: "lime/utils/Assets.hx",
          lineNumber: 143,
          className: "lime.utils.Assets",
          methodName: "getAsset"
        });
        return null
      };
      sa.getAudioBuffer = function(a, b) {
        null == b && (b = !0);
        return sa.getAsset(a, "SOUND", b)
      };
      sa.getBytes = function(a) {
        return sa.getAsset(a, "BINARY", !1)
      };
      sa.getFont = function(a, b) {
        null == b && (b = !0);
        return sa.getAsset(a, "FONT", b)
      };
      sa.getImage = function(a, b) {
        null ==
          b && (b = !0);
        return sa.getAsset(a, "IMAGE", b)
      };
      sa.getLibrary = function(a) {
        if (null == a || "" == a) a = "default";
        return sa.libraries.h[a]
      };
      sa.getPath = function(a) {
        var b = a.indexOf(":"),
          c = a.substring(0, b);
        b = a.substring(b + 1);
        var d = sa.getLibrary(c);
        if (null != d) {
          if (d.exists(b, null)) return d.getPath(b);
          Na.error('There is no asset with an ID of "' + a + '"', {
            fileName: "lime/utils/Assets.hx",
            lineNumber: 224,
            className: "lime.utils.Assets",
            methodName: "getPath"
          })
        } else Na.error(sa.__libraryNotFound(c), {
          fileName: "lime/utils/Assets.hx",
          lineNumber: 229,
          className: "lime.utils.Assets",
          methodName: "getPath"
        });
        return null
      };
      sa.getText = function(a) {
        return sa.getAsset(a, "TEXT", !1)
      };
      sa.hasLibrary = function(a) {
        if (null == a || "" == a) a = "default";
        return Object.prototype.hasOwnProperty.call(sa.libraries.h, a)
      };
      sa.isLocal = function(a, b, c) {
        null == c && (c = !0);
        if (c && sa.cache.enabled && sa.cache.exists(a, b)) return !0;
        var d = a.indexOf(":");
        c = a.substring(0, d);
        a = a.substring(d + 1);
        c = sa.getLibrary(c);
        return null != c ? c.isLocal(a, b) : !1
      };
      sa.isValidAudio = function(a) {
        return null !=
          a
      };
      sa.isValidImage = function(a) {
        return null != a ? null != a.buffer : !1
      };
      sa.list = function(a) {
        for (var b = [], c = sa.libraries.h, d = Object.keys(c), e = d.length, f = 0; f < e;) {
          var g = c[d[f++]].list(a);
          null != g && (b = b.concat(g))
        }
        return b
      };
      sa.loadAsset = function(a, b, c) {
        if (c && sa.cache.enabled) switch (b) {
          case "BINARY":
          case "TEXT":
            c = !1;
            break;
          case "FONT":
            var d = sa.cache.font.h[a];
            if (null != d) return lb.withValue(d);
            break;
          case "IMAGE":
            d = sa.cache.image.h[a];
            if (sa.isValidImage(d)) return lb.withValue(d);
            break;
          case "MUSIC":
          case "SOUND":
            d =
              sa.cache.audio.h[a];
            if (sa.isValidAudio(d)) return lb.withValue(d);
            break;
          case "TEMPLATE":
            throw F.thrown("Not sure how to get template: " + a);
          default:
            return null
        }
        var e = a.indexOf(":");
        d = a.substring(0, e);
        e = a.substring(e + 1);
        var f = sa.getLibrary(d);
        if (null != f) {
          if (f.exists(e, b)) {
            d = f.loadAsset(e, b);
            if (c && sa.cache.enabled) d.onComplete(function(c) {
              sa.cache.set(a, b, c)
            });
            return d
          }
          return lb.withError("There is no " + b + ' asset with an ID of "' + a + '"')
        }
        return lb.withError(sa.__libraryNotFound(d))
      };
      sa.loadAudioBuffer =
        function(a, b) {
          null == b && (b = !0);
          return sa.loadAsset(a, "SOUND", b)
        };
      sa.loadBytes = function(a) {
        return sa.loadAsset(a, "BINARY", !1)
      };
      sa.loadFont = function(a, b) {
        null == b && (b = !0);
        return sa.loadAsset(a, "FONT", b)
      };
      sa.loadImage = function(a, b) {
        null == b && (b = !0);
        return sa.loadAsset(a, "IMAGE", b)
      };
      sa.loadLibrary = function(a) {
        var b = new ee,
          c = sa.getLibrary(a);
        if (null != c) return c.load();
        c = a;
        var d = null;
        if (Object.prototype.hasOwnProperty.call(sa.bundlePaths.h, a)) Tf.loadFromFile(sa.bundlePaths.h[a]).onComplete(function(c) {
          null ==
            c ? b.error('Cannot load bundle for library "' + a + '"') : (c = yb.fromBundle(c), null == c ? b.error('Cannot open library "' + a + '"') : (sa.libraries.h[a] = c, c.onChange.add((w = sa.onChange, r(w, w.dispatch))), b.completeWith(c.load())))
        }).onError(function(c) {
          b.error('There is no asset library with an ID of "' + a + '"')
        });
        else Object.prototype.hasOwnProperty.call(sa.libraryPaths.h, a) ? (c = sa.libraryPaths.h[a], d = Ah.directory(c)) : (W.endsWith(c, ".bundle") ? (d = c, c += "/library.json") : d = Ah.directory(c), c = sa.__cacheBreak(c)), Pc.loadFromFile(c,
          d).onComplete(function(c) {
          null == c ? b.error('Cannot parse asset manifest for library "' + a + '"') : (c = yb.fromManifest(c), null == c ? b.error('Cannot open library "' + a + '"') : (sa.libraries.h[a] = c, c.onChange.add((w = sa.onChange, r(w, w.dispatch))), b.completeWith(c.load())))
        }).onError(function(c) {
          b.error('There is no asset library with an ID of "' + a + '"')
        });
        return b.future
      };
      sa.loadText = function(a) {
        return sa.loadAsset(a, "TEXT", !1)
      };
      sa.registerLibrary = function(a, b) {
        if (Object.prototype.hasOwnProperty.call(sa.libraries.h,
            a)) {
          if (sa.libraries.h[a] == b) return;
          sa.unloadLibrary(a)
        }
        null != b && b.onChange.add(sa.library_onChange);
        sa.libraries.h[a] = b
      };
      sa.unloadLibrary = function(a) {
        if (null == a || "" == a) a = "default";
        var b = sa.libraries.h[a];
        null != b && (sa.cache.clear(a + ":"), b.onChange.remove(sa.library_onChange), b.unload());
        b = sa.libraries;
        Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a]
      };
      sa.__cacheBreak = function(a) {
        0 < sa.cache.version && (a = -1 < a.indexOf("?") ? a + ("&" + sa.cache.version) : a + ("?" + sa.cache.version));
        return a
      };
      sa.__libraryNotFound =
        function(a) {
          if (null == a || "" == a) a = "default";
          return null == Ad.current || null == Ad.current.__preloader || Ad.current.__preloader.complete ? 'There is no asset library named "' + a + '"' : 'There is no asset library named "' + a + '", or it is not yet preloaded'
        };
      sa.library_onChange = function() {
        sa.cache.clear();
        sa.onChange.dispatch()
      };
      var Sq = function(a) {
        var b = a.indexOf(":");
        this.libraryName = a.substring(0, b);
        this.symbolName = a.substring(b + 1);
        this.library = sa.getLibrary(this.libraryName)
      };
      k["lime.utils._Assets.LibrarySymbol"] =
        Sq;
      Sq.__name__ = "lime.utils._Assets.LibrarySymbol";
      Sq.prototype = {
        library: null,
        libraryName: null,
        symbolName: null,
        isLocal: function(a) {
          return this.library.isLocal(this.symbolName, a)
        },
        exists: function(a) {
          return this.library.exists(this.symbolName, a)
        },
        __class__: Sq
      };
      var Gr = {
          _new: function(a, b) {
            null == b && (b = 0);
            return new Uf(a, b)
          },
          set: function(a, b, c, d, e) {
            null != d && (b = ib.ofData(d));
            null != b || null == c ? (a.bytes = b, a.offset = null != e ? e : 0) : (a.bytes = ib.ofData(c.buffer), a.offset = null != e ? c.byteOffset + e : c.byteOffset)
          },
          __arrayGet: function(a,
            b) {
            return null != a.bytes ? a.bytes.b[b + a.offset] : 0
          },
          __arraySet: function(a, b, c) {
            null == a.bytes && (a.bytes.b[b + a.offset] = c & 255);
            return c
          },
          fromArrayBufferView: function(a) {
            return null == a ? null : new Uf(ib.ofData(a.buffer), a.byteOffset)
          },
          fromArrayBuffer: function(a) {
            return null == a ? null : new Uf(ib.ofData(a), 0)
          },
          fromBytes: function(a) {
            return new Uf(a, 0)
          },
          fromBytesData: function(a) {
            return null == a ? new Uf(null, 0) : new Uf(ib.ofData(a), 0)
          },
          fromFile: function(a) {
            return new Uf(mc.fromFile(a), 0)
          },
          fromLimeBytes: function(a) {
            return new Uf(a,
              0)
          },
          toUInt8Array: function(a) {
            var b = a.bytes.b.bufferValue;
            a = a.offset / 8 | 0;
            null == a && (a = 0);
            return null != b ? new Uint8Array(b, a) : null
          },
          toUInt8ClampedArray: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 8 | 0;
            null == a && (a = 0);
            return null != b ? new Uint8ClampedArray(b, a) : null
          },
          toInt8Array: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 8 | 0;
            null == a && (a = 0);
            return null != b ? new Int8Array(b, a) : null
          },
          toUInt16Array: function(a) {
            if (null == a ||
              null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 16 | 0;
            null == a && (a = 0);
            return null != b ? new Uint16Array(b, a) : null
          },
          toInt16Array: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 16 | 0;
            null == a && (a = 0);
            return null != b ? new Int16Array(b, a) : null
          },
          toUInt32Array: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 32 | 0;
            null == a && (a = 0);
            return null != b ? new Uint32Array(b, a) : null
          },
          toInt32Array: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 32 | 0;
            null == a && (a = 0);
            return null != b ? new Int32Array(b, a) : null
          },
          toFloat32Array: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 32 | 0;
            null == a && (a = 0);
            return null != b ? new Float32Array(b, a) : null
          },
          toFloat64Array: function(a) {
            if (null == a || null == a.bytes) return null;
            var b = a.bytes.b.bufferValue;
            a = a.offset / 64 | 0;
            null == a && (a = 0);
            return null != b ? new Float64Array(b, a) : null
          }
        },
        Uf = function(a, b) {
          this.bytes = a;
          this.offset = b
        };
      k["lime.utils.BytePointerData"] =
        Uf;
      Uf.__name__ = "lime.utils.BytePointerData";
      Uf.prototype = {
        bytes: null,
        offset: null,
        __class__: Uf
      };
      var mc = {
          _new: function(a, b) {
            return new ib(b)
          },
          alloc: function(a) {
            return new ib(new ArrayBuffer(a))
          },
          compress: function(a, b) {
            switch (b._hx_index) {
              case 0:
                return mm.compress(a);
              case 1:
                return nm.compress(a);
              case 2:
                return pm.compress(a);
              case 3:
                return qm.compress(a)
            }
          },
          decompress: function(a, b) {
            switch (b._hx_index) {
              case 0:
                return mm.decompress(a);
              case 1:
                return nm.decompress(a);
              case 2:
                return pm.decompress(a);
              case 3:
                return qm.decompress(a)
            }
          },
          fastGet: function(a, b) {
            return a.bytes[b]
          },
          fromBytes: function(a) {
            return null == a ? null : mc._new(a.length, a.b.bufferValue)
          },
          fromFile: function(a) {
            return null
          },
          loadFromBytes: function(a) {
            return lb.withValue(mc.fromBytes(a))
          },
          loadFromFile: function(a) {
            return (new Am).load(a)
          },
          ofData: function(a) {
            a = ib.ofData(a);
            return mc._new(a.length, a.b.bufferValue)
          },
          ofString: function(a) {
            a = ib.ofString(a);
            return mc._new(a.length, a.b.bufferValue)
          }
        },
        fe = O["lime.utils.CompressionAlgorithm"] = {
          __ename__: "lime.utils.CompressionAlgorithm",
          __constructs__: null,
          DEFLATE: {
            _hx_name: "DEFLATE",
            _hx_index: 0,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: v
          },
          GZIP: {
            _hx_name: "GZIP",
            _hx_index: 1,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: v
          },
          LZMA: {
            _hx_name: "LZMA",
            _hx_index: 2,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: v
          },
          ZLIB: {
            _hx_name: "ZLIB",
            _hx_index: 3,
            __enum__: "lime.utils.CompressionAlgorithm",
            toString: v
          }
        };
      fe.__constructs__ = [fe.DEFLATE, fe.GZIP, fe.LZMA, fe.ZLIB];
      var pf = {
          _new: function(a) {
            return a
          },
          fromFloat: function(a) {
            return a
          },
          fromBytesPointer: function(a) {
            return pf.fromFloat(0)
          },
          fromArrayBufferView: function(a) {
            return pf.fromFloat(0)
          },
          fromArrayBuffer: function(a) {
            return pf.fromFloat(0)
          },
          fromBytes: function(a) {
            return pf.fromFloat(0)
          },
          fromBytesData: function(a) {
            return pf.fromFloat(0)
          },
          fromLimeBytes: function(a) {
            return pf.fromBytes(a)
          },
          fromCFFIPointer: function(a) {
            return pf.fromFloat(0)
          },
          fromFile: function(a) {
            return pf.fromFloat(0)
          },
          __withOffset: function(a, b) {
            return pf.fromFloat(0)
          },
          equals: function(a, b) {
            return a == b
          },
          equalsPointer: function(a,
            b) {
            return a == b
          },
          greaterThan: function(a, b) {
            return a > b
          },
          greaterThanPointer: function(a, b) {
            return Rd.get(a) > Rd.get(b)
          },
          greaterThanOrEqual: function(a, b) {
            return a >= b
          },
          greaterThanOrEqualPointer: function(a, b) {
            return Rd.get(a) >= Rd.get(b)
          },
          lessThan: function(a, b) {
            return a < b
          },
          lessThanPointer: function(a, b) {
            return Rd.get(a) < Rd.get(b)
          },
          lessThanOrEqual: function(a, b) {
            return a <= b
          },
          lessThanOrEqualPointer: function(a, b) {
            return Rd.get(a) <= Rd.get(b)
          },
          notEquals: function(a, b) {
            return a != b
          },
          notEqualsPointer: function(a, b) {
            return a !=
              b
          },
          plus: function(a, b) {
            return pf.__withOffset(a, b)
          },
          plusPointer: function(a, b) {
            return pf.__withOffset(a, b | 0)
          },
          minus: function(a, b) {
            return pf.__withOffset(a, -b)
          },
          minusPointer: function(a, b) {
            return pf.__withOffset(a, -(b | 0))
          }
        },
        Xg = {
          toArrayBufferView: function(a) {
            return a
          },
          fromBytes: function(a, b, c) {
            null == b && (b = 0);
            return null == b ? new Float32Array(a.b.bufferValue) : null == c ? new Float32Array(a.b.bufferValue, b) : new Float32Array(a.b.bufferValue, b, c)
          },
          toBytes: function(a) {
            return new ib(new Uint8Array(a.buffer))
          },
          toString: function(a) {
            return null !=
              a ? "Float32Array [byteLength:" + a.byteLength + ", length:" + a.length + "]" : null
          }
        },
        Na = function() {};
      k["lime.utils.Log"] = Na;
      Na.__name__ = "lime.utils.Log";
      Na.debug = function(a, b) {
        4 <= Na.level && console.debug("[" + b.className + "] " + M.string(a))
      };
      Na.error = function(a, b) {
        if (1 <= Na.level) {
          a = "[" + b.className + "] ERROR: " + M.string(a);
          if (Na.throwErrors) throw F.thrown(a);
          console.error(a)
        }
      };
      Na.info = function(a, b) {
        3 <= Na.level && console.info("[" + b.className + "] " + M.string(a))
      };
      Na.print = function(a) {
        console.log(a)
      };
      Na.println = function(a) {
        console.log(a)
      };
      Na.verbose = function(a, b) {
        5 <= Na.level && (a = "[" + b.className + "] " + M.string(a), console.log(a))
      };
      Na.warn = function(a, b) {
        2 <= Na.level && console.warn("[" + b.className + "] WARNING: " + M.string(a))
      };
      var mg = function(a, b) {
        this.positions = new ua;
        this.lengths = new ua;
        yb.call(this);
        this.id = a;
        this.type = b
      };
      k["lime.utils.PackedAssetLibrary"] = mg;
      mg.__name__ = "lime.utils.PackedAssetLibrary";
      mg.fromBytes = function(a, b) {
        return mg.fromManifest(Pc.fromBytes(a, b))
      };
      mg.fromFile = function(a, b) {
        return mg.fromManifest(Pc.fromFile(a, b))
      };
      mg.fromManifest = function(a) {
        return yb.fromManifest(a)
      };
      mg.loadFromBytes = function(a, b) {
        return yb.loadFromBytes(a, b).then(function(a) {
          return lb.withValue(a)
        })
      };
      mg.loadFromFile = function(a, b) {
        return yb.loadFromFile(a, b).then(function(a) {
          return lb.withValue(a)
        })
      };
      mg.loadFromManifest = function(a) {
        return yb.loadFromManifest(a).then(function(a) {
          return lb.withValue(a)
        })
      };
      mg.__super__ = yb;
      mg.prototype = t(yb.prototype, {
        id: null,
        lengths: null,
        packedData: null,
        positions: null,
        type: null,
        rootPath: null,
        getAudioBuffer: function(a) {
          return yb.prototype.getAudioBuffer.call(this,
            a)
        },
        getBytes: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)) return this.cachedBytes.h[a];
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) {
            var b = mc.ofString(this.cachedText.h[a]);
            this.cachedBytes.h[a] = b
          } else if (b = mc.alloc(this.lengths.h[a]), b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]), "gzip" == this.type) b = mc.decompress(b, fe.GZIP);
          else if ("zip" == this.type || "deflate" == this.type) b = mc.decompress(b, fe.DEFLATE);
          return b
        },
        getFont: function(a) {
          return yb.prototype.getFont.call(this,
            a)
        },
        getImage: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)) return this.cachedImages.h[a];
          var b = mc.alloc(this.lengths.h[a]);
          b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
          if ("gzip" == this.type) b = mc.decompress(b, fe.GZIP);
          else if ("zip" == this.type || "deflate" == this.type) b = mc.decompress(b, fe.DEFLATE);
          return Hb.fromBytes(b)
        },
        getText: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) return this.cachedText.h[a];
          if ("gzip" == this.type || "zip" ==
            this.type || "deflate" == this.type) {
            var b = mc.alloc(this.lengths.h[a]);
            b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
            if ("gzip" == this.type) b = mc.decompress(b, fe.GZIP);
            else if ("zip" == this.type || "deflate" == this.type) b = mc.decompress(b, fe.DEFLATE);
            return b.getString(0, b.length)
          }
          return this.packedData.getString(this.positions.h[a], this.lengths.h[a])
        },
        isLocal: function(a, b) {
          return !0
        },
        load: function() {
          var a = this;
          if (this.loaded) return lb.withValue(this);
          if (null == this.promise) {
            this.promise = new ee;
            this.bytesLoadedCache = new ua;
            this.assetsLoaded = 0;
            this.assetsTotal = 2;
            for (var b = Object.keys(this.preload.h), c = b.length, d = 0; d < c;) {
              var e = b[d++];
              if (this.preload.h[e]) {
                var f = this.types.h[e];
                if (null != f) switch (f) {
                  case "BINARY":
                  case "FONT":
                  case "IMAGE":
                  case "TEXT":
                    this.assetsTotal++;
                    break;
                  case "MUSIC":
                  case "SOUND":
                    Na.verbose("Preloading asset: " + e + " [" + this.types.h[e] + "]", {
                      fileName: "lime/utils/PackedAssetLibrary.hx",
                      lineNumber: 191,
                      className: "lime.utils.PackedAssetLibrary",
                      methodName: "load"
                    });
                    this.assetsTotal++;
                    var g = this.loadAudioBuffer(e);
                    g.onProgress(function(a, b) {
                      return function(c, d) {
                        b[0](a[0], c, d)
                      }
                    }([e], [r(this, this.load_onProgress)]));
                    g.onError(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([e], [r(this, this.loadAudioBuffer_onError)]));
                    g.onComplete(function(a, b) {
                      return function(c) {
                        b[0](a[0], c)
                      }
                    }([e], [r(this, this.loadAudioBuffer_onComplete)]))
                }
              }
            }
            b = function(b) {
              a.cachedBytes.h[a.id] = b;
              a.packedData = b;
              a.__assetLoaded(a.id);
              b = Object.keys(a.preload.h);
              for (var c = b.length, d = 0; d < c;) {
                var e = b[d++];
                if (a.preload.h[e]) {
                  var f =
                    a.types.h[e];
                  if (null != f) switch (f) {
                    case "BINARY":
                      Na.verbose("Preloading asset: " + e + " [" + a.types.h[e] + "]", {
                        fileName: "lime/utils/PackedAssetLibrary.hx",
                        lineNumber: 217,
                        className: "lime.utils.PackedAssetLibrary",
                        methodName: "load"
                      });
                      f = a.loadBytes(e);
                      f.onError(function(a, b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.load_onError)]));
                      f.onComplete(function(a, b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.loadBytes_onComplete)]));
                      break;
                    case "FONT":
                      Na.verbose("Preloading asset: " + e + " [" + a.types.h[e] + "]", {
                        fileName: "lime/utils/PackedAssetLibrary.hx",
                        lineNumber: 224,
                        className: "lime.utils.PackedAssetLibrary",
                        methodName: "load"
                      });
                      f = a.loadFont(e);
                      f.onError(function(a, b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.load_onError)]));
                      f.onComplete(function(a, b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.loadFont_onComplete)]));
                      break;
                    case "IMAGE":
                      Na.verbose("Preloading asset: " + e + " [" + a.types.h[e] + "]", {
                        fileName: "lime/utils/PackedAssetLibrary.hx",
                        lineNumber: 231,
                        className: "lime.utils.PackedAssetLibrary",
                        methodName: "load"
                      });
                      f = a.loadImage(e);
                      f.onError(function(a,
                        b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.load_onError)]));
                      f.onComplete(function(a, b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.loadImage_onComplete)]));
                      break;
                    case "TEXT":
                      Na.verbose("Preloading asset: " + e + " [" + a.types.h[e] + "]", {
                        fileName: "lime/utils/PackedAssetLibrary.hx",
                        lineNumber: 238,
                        className: "lime.utils.PackedAssetLibrary",
                        methodName: "load"
                      }), f = a.loadText(e), f.onError(function(a, b) {
                        return function(c) {
                          b[0](a[0], c)
                        }
                      }([e], [r(a, a.load_onError)])), f.onComplete(function(a, b) {
                        return function(c) {
                          b[0](a[0],
                            c)
                        }
                      }([e], [r(a, a.loadText_onComplete)]))
                  }
                }
              }
            };
            this.__assetLoaded(null);
            Object.prototype.hasOwnProperty.call(this.cachedBytes.h, this.id) ? b(this.cachedBytes.h[this.id]) : (c = this.rootPath, null == c && (c = ""), "" == c || W.endsWith(c, "/") || (c += "/"), c += Object.prototype.hasOwnProperty.call(this.paths.h, this.id) ? this.paths.h[this.id] : this.id, c = this.__cacheBreak(c), f = r(this, this.load_onProgress), e = this.id, mc.loadFromFile(c).onProgress(function(a, b) {
              f(e, a, b)
            }).onError((w = this.promise, r(w, w.error))).onComplete(b))
          }
          return this.promise.future
        },
        loadAudioBuffer: function(a) {
          return yb.prototype.loadAudioBuffer.call(this, a)
        },
        loadBytes: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)) return lb.withValue(this.cachedBytes.h[a]);
          var b = mc.alloc(this.lengths.h[a]);
          b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
          if ("gzip" == this.type) b = mc.decompress(b, fe.GZIP);
          else if ("zip" == this.type || "deflate" == this.type) b = mc.decompress(b, fe.DEFLATE);
          return lb.withValue(b)
        },
        loadFont: function(a) {
          return yb.prototype.loadFont.call(this,
            a)
        },
        loadImage: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedImages.h, a)) return lb.withValue(this.cachedImages.h[a]);
          var b = mc.alloc(this.lengths.h[a]);
          b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
          if ("gzip" == this.type) b = mc.decompress(b, fe.GZIP);
          else if ("zip" == this.type || "deflate" == this.type) b = mc.decompress(b, fe.DEFLATE);
          return Hb.loadFromBytes(b)
        },
        loadText: function(a) {
          if (Object.prototype.hasOwnProperty.call(this.cachedText.h, a)) return lb.withValue(this.cachedText.h[a]);
          if (Object.prototype.hasOwnProperty.call(this.cachedBytes.h, a)) {
            var b = this.getBytes(a);
            if (null == b) return lb.withValue(null);
            b = b.getString(0, b.length);
            this.cachedText.h[a] = b;
            return lb.withValue(b)
          }
          if ("gzip" == this.type || "deflate" == this.type) {
            b = mc.alloc(this.lengths.h[a]);
            b.blit(0, this.packedData, this.positions.h[a], this.lengths.h[a]);
            if ("gzip" == this.type) b = mc.decompress(b, fe.GZIP);
            else if ("zip" == this.type || "deflate" == this.type) b = mc.decompress(b, fe.DEFLATE);
            return lb.withValue(b.getString(0, b.length))
          }
          return lb.withValue(this.packedData.getString(this.positions.h[a],
            this.lengths.h[a]))
        },
        unload: function() {},
        __fromManifest: function(a) {
          this.rootPath = a.rootPath;
          yb.prototype.__fromManifest.call(this, a);
          var b = 0,
            c = this.bytesTotal = 0;
          for (a = a.assets; c < a.length;) {
            var d = a[c];
            ++c;
            var e = d.id;
            Object.prototype.hasOwnProperty.call(d, "position") && (this.positions.h[e] = Y.field(d, "position"));
            Object.prototype.hasOwnProperty.call(d, "length") && (d = Y.field(d, "length"), this.lengths.h[e] = d, this.sizes.h[e] = Math.floor(d / 10), b += d);
            Object.prototype.hasOwnProperty.call(this.preload.h, e) && this.preload.h[e] &&
              Object.prototype.hasOwnProperty.call(this.sizes.h, e) && (this.bytesTotal += this.sizes.h[e])
          }
          this.sizes.h[this.id] = b;
          this.bytesTotal += b
        },
        __assetLoaded: function(a) {
          this.assetsLoaded++;
          null != a && Na.verbose("Loaded asset: " + a + " [" + this.types.h[a] + "] (" + (this.assetsLoaded - 1) + "/" + (this.assetsTotal - 1) + ")", {
            fileName: "lime/utils/PackedAssetLibrary.hx",
            lineNumber: 460,
            className: "lime.utils.PackedAssetLibrary",
            methodName: "__assetLoaded"
          });
          if (null != a) {
            var b = Object.prototype.hasOwnProperty.call(this.sizes.h, a) ? this.sizes.h[a] :
              0;
            if (Object.prototype.hasOwnProperty.call(this.bytesLoadedCache.h, a)) {
              var c = this.bytesLoadedCache.h[a];
              c < b && (this.bytesLoaded += b - c)
            } else this.bytesLoaded += b;
            this.bytesLoadedCache.h[a] = b
          }
          this.assetsLoaded < this.assetsTotal ? this.promise.progress(this.bytesLoaded, this.bytesTotal) : (this.loaded = !0, this.promise.progress(this.bytesTotal, this.bytesTotal), this.promise.complete(this))
        },
        __class__: mg
      });
      var Do = function() {
        this.bytesTotalCache = new ua;
        this.bytesLoadedCache2 = new ua;
        this.bytesLoadedCache = new pc;
        this.onProgress =
          new rm;
        this.onComplete = new Pd;
        this.bytesTotal = this.bytesLoaded = 0;
        this.libraries = [];
        this.libraryNames = [];
        this.onProgress.add(r(this, this.update))
      };
      k["lime.utils.Preloader"] = Do;
      Do.__name__ = "lime.utils.Preloader";
      Do.prototype = {
        complete: null,
        onComplete: null,
        onProgress: null,
        bytesLoaded: null,
        bytesLoadedCache: null,
        bytesLoadedCache2: null,
        bytesTotal: null,
        bytesTotalCache: null,
        initLibraryNames: null,
        libraries: null,
        libraryNames: null,
        loadedLibraries: null,
        loadedStage: null,
        preloadComplete: null,
        preloadStarted: null,
        simulateProgress: null,
        addLibrary: function(a) {
          this.libraries.push(a)
        },
        addLibraryName: function(a) {
          -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a)
        },
        load: function() {
          for (var a = this, b = 0, c = this.libraries; b < c.length;) {
            var d = c[b];
            ++b;
            this.bytesTotal += d.bytesTotal
          }
          this.loadedLibraries = -1;
          this.preloadStarted = !1;
          b = 0;
          for (c = this.libraries; b < c.length;) d = [c[b]], ++b, Na.verbose("Preloading asset library", {
              fileName: "lime/utils/Preloader.hx",
              lineNumber: 132,
              className: "lime.utils.Preloader",
              methodName: "load"
            }),
            d[0].load().onProgress(function(b) {
              return function(c, d) {
                a.bytesLoaded = null == a.bytesLoadedCache.h.__keys__[b[0].__id__] ? a.bytesLoaded + c : a.bytesLoaded + (c - a.bytesLoadedCache.h[b[0].__id__]);
                a.bytesLoadedCache.set(b[0], c);
                a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal)
              }
            }(d)).onComplete(function(b) {
              return function(c) {
                a.bytesLoaded = null == a.bytesLoadedCache.h.__keys__[b[0].__id__] ? a.bytesLoaded + b[0].bytesTotal : a.bytesLoaded + (b[0].bytesTotal - a.bytesLoadedCache.h[b[0].__id__]);
                a.loadedAssetLibrary()
              }
            }(d)).onError(function() {
              return function(a) {
                Na.error(a, {
                  fileName: "lime/utils/Preloader.hx",
                  lineNumber: 168,
                  className: "lime.utils.Preloader",
                  methodName: "load"
                });
                hh.loadError()
              }
            }());
          b = 0;
          for (c = this.libraryNames; b < c.length;) ++b, this.bytesTotal += 200;
          this.loadedLibraries++;
          this.preloadStarted = !0;
          this.updateProgress()
        },
        loadedAssetLibrary: function(a) {
          this.loadedLibraries++;
          var b = this.loadedLibraries;
          this.preloadStarted || ++b;
          var c = this.libraries.length + this.libraryNames.length;
          null != a ? Na.verbose("Loaded asset library: " + a + " [" + b + "/" + c + "]", {
            fileName: "lime/utils/Preloader.hx",
            lineNumber: 204,
            className: "lime.utils.Preloader",
            methodName: "loadedAssetLibrary"
          }) : Na.verbose("Loaded asset library [" + b + "/" + c + "]", {
            fileName: "lime/utils/Preloader.hx",
            lineNumber: 208,
            className: "lime.utils.Preloader",
            methodName: "loadedAssetLibrary"
          });
          this.updateProgress()
        },
        start: function() {
          this.complete || this.simulateProgress || !this.preloadComplete || (this.complete = !0, this.onComplete.dispatch())
        },
        update: function(a, b) {},
        updateProgress: function() {
          var a = this;
          this.simulateProgress || this.onProgress.dispatch(this.bytesLoaded,
            this.bytesTotal);
          if (this.loadedLibraries == this.libraries.length && !this.initLibraryNames) {
            this.initLibraryNames = !0;
            for (var b = 0, c = this.libraryNames; b < c.length;) {
              var d = [c[b]];
              ++b;
              Na.verbose("Preloading asset library: " + d[0], {
                fileName: "lime/utils/Preloader.hx",
                lineNumber: 245,
                className: "lime.utils.Preloader",
                methodName: "updateProgress"
              });
              sa.loadLibrary(d[0]).onProgress(function(b) {
                return function(c, d) {
                  0 < d && (Object.prototype.hasOwnProperty.call(a.bytesTotalCache.h, b[0]) || (a.bytesTotalCache.h[b[0]] = d, a.bytesTotal +=
                    d - 200), c > d && (c = d), Object.prototype.hasOwnProperty.call(a.bytesLoadedCache2.h, b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]] : a.bytesLoaded += c, a.bytesLoadedCache2.h[b[0]] = c, a.simulateProgress || a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal))
                }
              }(d)).onComplete(function(b) {
                return function(c) {
                  c = 200;
                  Object.prototype.hasOwnProperty.call(a.bytesTotalCache.h, b[0]) && (c = a.bytesTotalCache.h[b[0]]);
                  Object.prototype.hasOwnProperty.call(a.bytesLoadedCache2.h, b[0]) ? a.bytesLoaded += c - a.bytesLoadedCache2.h[b[0]] :
                    a.bytesLoaded += c;
                  a.loadedAssetLibrary(b[0])
                }
              }(d)).onError(function() {
                return function(a) {
                  Na.error(a, {
                    fileName: "lime/utils/Preloader.hx",
                    lineNumber: 299,
                    className: "lime.utils.Preloader",
                    methodName: "updateProgress"
                  });
                  hh.loadError()
                }
              }())
            }
          }
          this.simulateProgress || this.loadedLibraries != this.libraries.length + this.libraryNames.length || (this.preloadComplete || (this.preloadComplete = !0, Na.verbose("Preload complete", {
              fileName: "lime/utils/Preloader.hx",
              lineNumber: 319,
              className: "lime.utils.Preloader",
              methodName: "updateProgress"
            })),
            this.start())
        },
        __class__: Do
      };
      var zi = function(a, b, c) {
        this.name = a;
        this.type = b;
        this.address = c
      };
      k["mbs.core.MbsField"] = zi;
      zi.__name__ = "mbs.core.MbsField";
      zi.prototype = {
        name: null,
        type: null,
        address: null,
        getName: function() {
          return this.name
        },
        getType: function() {
          return this.type
        },
        getAddress: function() {
          return this.address
        },
        __class__: zi
      };
      var Dm = function(a, b, c) {
        zi.call(this, a, null, c);
        this.typeName = b
      };
      k["mbs.core.reflect.SubstituteField"] = Dm;
      Dm.__name__ = "mbs.core.reflect.SubstituteField";
      Dm.__super__ = zi;
      Dm.prototype =
        t(zi.prototype, {
          typeName: null,
          toString: function() {
            return "MbsField [name=" + this.getName() + ", typeName=" + this.typeName + ", address=" + this.address + "]"
          },
          __class__: Dm
        });
      var Oi = function(a, b, c, d) {
        zb.call(this, a);
        this.parentName = b;
        this.fields = c.slice(0);
        this.size = d
      };
      k["mbs.core.reflect.SubstituteType"] = Oi;
      Oi.__name__ = "mbs.core.reflect.SubstituteType";
      Oi.__super__ = zb;
      Oi.prototype = t(zb.prototype, {
        parentName: null,
        mapTypes: function(a) {
          this.parent = a.h[this.parentName];
          if (null != this.fields)
            for (var b = 0, c = this.fields.length; b <
              c;) {
              var d = b++;
              d = this.fields[d];
              d.type = a.h[d.typeName]
            }
        },
        __class__: Oi
      });
      var ie = function() {};
      k["mbs.io.MbsDynamicHelper"] = ie;
      ie.__name__ = "mbs.io.MbsDynamicHelper";
      ie.writeDynamic = function(a, b, c) {
        null == c && a.writeTypecode(b, H.NULL);
        "boolean" == typeof c ? (a.writeTypecode(b, H.BOOLEAN), a.writeBool(b + H.INTEGER.getSize(), c)) : "number" == typeof c ? (a.writeTypecode(b, H.FLOAT), a.writeFloat(b + H.INTEGER.getSize(), c)) : "number" == typeof c && (c | 0) === c ? (a.writeTypecode(b, H.INTEGER), a.writeInt(b + H.INTEGER.getSize(), c)) : "string" ==
          typeof c ? (a.writeTypecode(b, H.STRING), a.writeString(b + H.INTEGER.getSize(), c)) : (a.writeTypecode(b, c.getMbsType()), a.writeInt(b + H.INTEGER.getSize(), c.getAddress()))
      };
      ie.readDynamic = function(a, b) {
        var c = a.readTypecode(b);
        if (c == H.NULL) return null;
        if (c == H.BOOLEAN) return a.readBool(b + H.INTEGER.getSize());
        if (c == H.FLOAT) return a.readFloat(b + H.INTEGER.getSize());
        if (c == H.INTEGER) return a.readInt(b + H.INTEGER.getSize());
        if (c == H.STRING) return a.readString(b + H.INTEGER.getSize());
        if (c == H.LIST) return b = a.readInt(b +
          H.INTEGER.getSize()), 0 != b ? (c = a.readTypecode(b + H.INTEGER.getSize()), a = c == H.BOOLEAN ? new Yj(a) : c == H.FLOAT ? new Zj(a) : c == H.INTEGER ? new Mf(a) : c == H.STRING ? new ak(a) : c == H.DYNAMIC ? new vh(a) : new Ta(a, c, c.createInstance(a)), a.setAddress(b), a) : null;
        c = c.createInstance(a);
        c.setAddress(a.readInt(b + H.INTEGER.getSize()));
        return c
      };
      ie.createObjectPool = function(a) {
        return new pc
      };
      ie.readDynamicUsingPool = function(a, b, c) {
        var d = a.readTypecode(b);
        if (d == H.NULL) return null;
        if (d == H.BOOLEAN) return a.readBool(b + H.INTEGER.getSize());
        if (d == H.FLOAT) return a.readFloat(b + H.INTEGER.getSize());
        if (d == H.INTEGER) return a.readInt(b + H.INTEGER.getSize());
        if (d == H.STRING) return a.readString(b + H.INTEGER.getSize());
        if (d == H.LIST) return b = a.readInt(b + H.INTEGER.getSize()), 0 != b ? (d = a.readTypecode(b + H.INTEGER.getSize()), a = d == H.BOOLEAN ? new Yj(a) : d == H.FLOAT ? new Zj(a) : d == H.INTEGER ? new Mf(a) : d == H.STRING ? new ak(a) : d == H.DYNAMIC ? new vh(a) : new Ta(a, d, d.createInstance(a)), a.setAddress(b), a) : null;
        var e = c.h[d.__id__];
        null == e && (e = d.createInstance(a), c.set(d,
          e));
        e.setAddress(a.readInt(b + H.INTEGER.getSize()));
        return e
      };
      var Em = function() {};
      k["mbs.io.MbsIO"] = Em;
      Em.__name__ = "mbs.io.MbsIO";
      Em.__isInterface__ = !0;
      Em.prototype = {
        readBool: null,
        readFloat: null,
        readInt: null,
        readString: null,
        writeInt: null,
        writeBool: null,
        writeFloat: null,
        writeString: null,
        isReader: null,
        isWriter: null,
        allocate: null,
        writeTypecode: null,
        readTypecode: null,
        __class__: Em
      };
      var jr = function() {};
      k["mbs.io.MbsInternalVersion"] = jr;
      jr.__name__ = "mbs.io.MbsInternalVersion";
      var pe = function(a, b) {
        this.data =
          a;
        null != b && (this.type = b, this.elementSize = b.getSize())
      };
      k["mbs.io.MbsListBase"] = pe;
      pe.__name__ = "mbs.io.MbsListBase";
      pe.__super__ = mb;
      pe.prototype = t(mb.prototype, {
        type: null,
        elementAddress: null,
        elementSize: null,
        _length: null,
        setAddress: function(a) {
          mb.prototype.setAddress.call(this, a);
          this.data.isReader() && (0 != a ? (this._length = this.data.readInt(a), this.type = this.data.readTypecode(a + H.INTEGER.getSize()), this.elementSize = this.type.getSize(), this.elementAddress = a + 2 * H.INTEGER.getSize()) : (this.type = null, this.elementAddress =
            this.elementSize = this._length = 0))
        },
        allocateNew: function(a) {
          if (this.data.isWriter()) return this._length = a, this.address = this.data.allocate(2 * H.INTEGER.getSize() + this.elementSize * a), this.data.writeInt(this.address, a), this.data.writeTypecode(this.address + H.INTEGER.getSize(), this.type), this.elementAddress = this.address + 2 * H.INTEGER.getSize(), this.address;
          throw F.thrown("Can't allocate new objects when reading");
        },
        length: function() {
          return this._length
        },
        __class__: pe
      });
      var Ta = function(a, b, c) {
        pe.call(this, a,
          b);
        this.obj = c
      };
      k["mbs.io.MbsList"] = Ta;
      Ta.__name__ = "mbs.io.MbsList";
      Ta.__super__ = pe;
      Ta.prototype = t(pe.prototype, {
        obj: null,
        getNextObject: function() {
          this.obj.setAddress(this.elementAddress);
          this.elementAddress += this.elementSize;
          return this.obj
        },
        __class__: Ta
      });
      var Yj = function(a) {
        pe.call(this, a, H.BOOLEAN)
      };
      k["mbs.io.MbsBoolList"] = Yj;
      Yj.__name__ = "mbs.io.MbsBoolList";
      Yj.__super__ = pe;
      Yj.prototype = t(pe.prototype, {
        readBool: function() {
          var a = this.data.readBool(this.elementAddress);
          this.elementAddress += this.elementSize;
          return a
        },
        writeBool: function(a) {
          this.data.writeBool(this.elementAddress, a);
          this.elementAddress += this.elementSize
        },
        __class__: Yj
      });
      var Zj = function(a) {
        pe.call(this, a, H.FLOAT)
      };
      k["mbs.io.MbsFloatList"] = Zj;
      Zj.__name__ = "mbs.io.MbsFloatList";
      Zj.__super__ = pe;
      Zj.prototype = t(pe.prototype, {
        readFloat: function() {
          var a = this.data.readFloat(this.elementAddress);
          this.elementAddress += this.elementSize;
          return a
        },
        writeFloat: function(a) {
          this.data.writeFloat(this.elementAddress, a);
          this.elementAddress += this.elementSize
        },
        __class__: Zj
      });
      var Mf = function(a) {
        pe.call(this, a, H.INTEGER)
      };
      k["mbs.io.MbsIntList"] = Mf;
      Mf.__name__ = "mbs.io.MbsIntList";
      Mf.__super__ = pe;
      Mf.prototype = t(pe.prototype, {
        readInt: function() {
          var a = this.data.readInt(this.elementAddress);
          this.elementAddress += this.elementSize;
          return a
        },
        writeInt: function(a) {
          this.data.writeInt(this.elementAddress, a);
          this.elementAddress += this.elementSize
        },
        __class__: Mf
      });
      var ak = function(a) {
        pe.call(this, a, H.STRING)
      };
      k["mbs.io.MbsStringList"] = ak;
      ak.__name__ = "mbs.io.MbsStringList";
      ak.__super__ = pe;
      ak.prototype = t(pe.prototype, {
        readString: function() {
          var a = this.data.readString(this.elementAddress);
          this.elementAddress += this.elementSize;
          return a
        },
        writeString: function(a) {
          this.data.writeString(this.elementAddress, a);
          this.elementAddress += this.elementSize
        },
        __class__: ak
      });
      var vh = function(a) {
        pe.call(this, a, H.DYNAMIC)
      };
      k["mbs.io.MbsDynamicList"] = vh;
      vh.__name__ = "mbs.io.MbsDynamicList";
      vh.__super__ = pe;
      vh.prototype = t(pe.prototype, {
        readObject: function() {
          var a = ie.readDynamic(this.data, this.elementAddress);
          this.elementAddress += this.elementSize;
          return a
        },
        readObjectUsingPool: function(a) {
          a = ie.readDynamicUsingPool(this.data, this.elementAddress, a);
          this.elementAddress += this.elementSize;
          return a
        },
        writeObject: function(a) {
          ie.writeDynamic(this.data, this.elementAddress, a);
          this.elementAddress += this.elementSize
        },
        __class__: vh
      });
      var Rg = function(a, b, c) {
        this.typedefSet = a;
        this.readStoredTypeInformation = b;
        this.initStringList = c;
        this.header = new yc(this);
        this.header.setAddress(0)
      };
      k["mbs.io.MbsReader"] = Rg;
      Rg.__name__ = "mbs.io.MbsReader";
      Rg.__interfaces__ = [Em];
      Rg.prototype = {
        data: null,
        stringTable: null,
        typeTable: null,
        rootAddress: null,
        subTypeMap: null,
        initStringList: null,
        stringTableAddress: null,
        readStoredTypeInformation: null,
        typedefSet: null,
        header: null,
        canRead: function(a) {
          var b = null;
          if (null == a || a.length < this.header.getMbsType().getSize()) b = "Missing header";
          this.data = a;
          2 != this.header.getVersion() && (b = "Mismatched version -- " + this.header.getVersion());
          this.header.getTypeTableHash() != this.typedefSet.getHash() && (b = "Mismatched typetable");
          this.readStoredTypeInformation && 0 == this.header.getTypeTablePointer() && (b = "Missing required type information");
          this.data = null;
          return b
        },
        readData: function(a) {
          this.data = a;
          if (2 != this.header.getVersion()) throw F.thrown("Can't read mbs. Wrong version.");
          if (this.header.getTypeTableHash() != this.typedefSet.getHash()) throw F.thrown("Can't read mbs. Wrong typedef info.");
          var b = H.INTEGER.getSize();
          this.stringTableAddress = this.header.getStringTablePointer();
          var c = Array(this.readInt(this.stringTableAddress));
          this.stringTable =
            c;
          if (this.initStringList) {
            var d = this.stringTableAddress + b;
            for (var e = 0, f = this.stringTable.length; e < f;) {
              var g = e++,
                h = this.readInt(d),
                m = this.readInt(h);
              this.stringTable[g] = a.getString(h + 4, m);
              d += b
            }
          }
          if (this.readStoredTypeInformation) {
            a = new Sc(this);
            d = this.header.getTypeTablePointer();
            this.typeTable = c = Array(this.readInt(d));
            d += b;
            this.subTypeMap = new ua;
            h = Object.create(null);
            g = H.BOOLEAN;
            h[g.getName()] = g;
            g = H.INTEGER;
            h[g.getName()] = g;
            g = H.FLOAT;
            h[g.getName()] = g;
            g = H.STRING;
            h[g.getName()] = g;
            g = H.DYNAMIC;
            h[g.getName()] =
              g;
            g = H.LIST;
            h[g.getName()] = g;
            e = 0;
            for (f = this.typeTable.length; e < f;) {
              g = e++;
              a.setAddress(this.readInt(d));
              d += b;
              m = a.getName();
              var l = a.getParent(),
                p = a.getSize();
              c = null;
              var n = a.getFieldsPointer();
              if (0 != n) {
                var k = this.readInt(n);
                n += b;
                c = Array(k);
                for (var q = new fd(this), u = 0; u < k;) {
                  var v = u++;
                  q.setAddress(n);
                  n += fd.MBS_FIELD_INFO.getSize();
                  var r = q.getName(),
                    t = q.getType(),
                    w = q.getFieldAddress();
                  c[v] = new Dm(r, t, w)
                }
              }
              Object.prototype.hasOwnProperty.call(h, m) ? this.typeTable[g] = h[m] : this.typeTable[g] = new Oi(m, l, c, p);
              this.subTypeMap.h[m] =
                this.typeTable[g]
            }
            e = 0;
            for (f = this.typeTable.length; e < f;) g = e++, this.typeTable[g] instanceof Oi && K.__cast(this.typeTable[g], Oi).mapTypes(this.subTypeMap)
          } else
            for (this.typeTable = c = Array(this.typedefSet.getTypes().length), e = 0, f = this.typedefSet.getTypes(); e < f.length;) g = f[e], ++e, this.typeTable[this.typedefSet.getTypecode(g)] = g
        },
        reconfigureComposition: function(a) {
          var b = this.subTypeMap,
            c = a.getName();
          if (Object.prototype.hasOwnProperty.call(b.h, c)) {
            b = this.subTypeMap;
            c = a.getName();
            var d = b.h[c];
            b = Object.create(null);
            c = 0;
            for (d = d.getFields(); c < d.length;) {
              var e = d[c];
              ++c;
              b[e.getName()] = e
            }
            c = 0;
            for (d = a.getFields(); c < d.length;) e = d[c], ++c, e.address = b[e.getName()].address
          }
        },
        getRoot: function() {
          return this.header.getRoot()
        },
        readInt: function(a) {
          return this.data.b[a] << 24 | this.data.b[a + 1] << 16 | this.data.b[a + 2] << 8 | this.data.b[a + 3]
        },
        readBool: function(a) {
          return 0 != this.data.b[a]
        },
        readFloat: function(a) {
          return de.i32ToFloat(this.readInt(a))
        },
        readString: function(a) {
          if (this.initStringList) return this.stringTable[this.readInt(a)];
          a =
            this.readInt(a);
          if (null == this.stringTable[a]) {
            var b = this.readInt(this.stringTableAddress + H.INTEGER.getSize() * (a + 1)),
              c = this.readInt(b);
            this.stringTable[a] = this.data.getString(b + 4, c)
          }
          return this.stringTable[a]
        },
        readTypecode: function(a) {
          return this.typeTable[this.readInt(a)]
        },
        getTypeTable: function() {
          return this.typeTable
        },
        writeInt: function(a, b) {
          throw F.thrown("Can't write on an MBS reader");
        },
        writeBool: function(a, b) {
          throw F.thrown("Can't write on an MBS reader");
        },
        writeFloat: function(a, b) {
          throw F.thrown("Can't write on an MBS reader");
        },
        writeString: function(a, b) {
          throw F.thrown("Can't write on an MBS reader");
        },
        isReader: function() {
          return !0
        },
        isWriter: function() {
          return !1
        },
        allocate: function(a) {
          throw F.thrown("Can't allocate on an MBS reader");
        },
        writeTypecode: function(a, b) {
          throw F.thrown("Can't write on an MBS reader");
        },
        __class__: Rg
      };
      var Ja = function() {};
      k["openfl.Lib"] = Ja;
      Ja.__name__ = "openfl.Lib";
      Ja.__properties__ = {
        get_current: "get_current",
        get_application: "get_application"
      };
      Ja.as = function(a, b) {
        return K.__instanceof(a, b) ? a : null
      };
      Ja.attach =
        function(a) {
          return new ng
        };
      Ja.clearInterval = function(a) {
        Ja.__timers.h.hasOwnProperty(a) && (Ja.__timers.h[a].stop(), Ja.__timers.remove(a))
      };
      Ja.clearTimeout = function(a) {
        Ja.__timers.h.hasOwnProperty(a) && (Ja.__timers.h[a].stop(), Ja.__timers.remove(a))
      };
      Ja.getDefinitionByName = function(a) {
        return null == a ? null : k[a]
      };
      Ja.getQualifiedClassName = function(a) {
        if (null == a) return null;
        var b = K.__instanceof(a, wq) ? a : K.getClass(a);
        return null == b ? "boolean" == typeof a || a == Gc ? "Bool" : "number" == typeof a && (a | 0) === a || a == rc ? "Int" :
          "number" == typeof a || a == Cc ? "Float" : null : b.__name__
      };
      Ja.getQualifiedSuperclassName = function(a) {
        if (null == a) return null;
        a = K.__instanceof(a, wq) ? a : K.getClass(a);
        if (null == a) return null;
        a = a.__super__;
        return null == a ? null : a.__name__
      };
      Ja.getTimer = function() {
        return Wa.getTimer()
      };
      Ja.getURL = function(a, b) {
        Ja.navigateToURL(a, b)
      };
      Ja.navigateToURL = function(a, b) {
        null == b && (b = "_blank");
        var c = a.url;
        if (Qb.typeof(a.data) == ec.TObject) {
          for (var d = "", e = Y.fields(a.data), f = 0; f < e.length;) {
            var g = e[f];
            ++f;
            0 < d.length && (d += "&");
            var h =
              encodeURIComponent(g) + "=";
            g = M.string(Y.field(a.data, g));
            d += h + encodeURIComponent(g)
          }
          c = -1 < c.indexOf("?") ? c + ("&" + d) : c + ("?" + d)
        }
        Wa.openURL(c, b)
      };
      Ja.notImplemented = function(a) {
        var b = a.className + "." + a.methodName;
        Object.prototype.hasOwnProperty.call(Ja.__sentWarnings.h, b) || (Ja.__sentWarnings.h[b] = !0, Na.warn(a.methodName + " is not implemented", a))
      };
      Ja.preventDefaultTouchMove = function() {
        window.document.addEventListener("touchmove", function(a) {
          a.preventDefault()
        }, !1)
      };
      Ja.sendToURL = function(a) {
        (new th).load(a)
      };
      Ja.setInterval = function(a, b, c) {
        var d = ++Ja.__lastTimerID;
        b = new Ue(b);
        Ja.__timers.h[d] = b;
        b.run = function() {
          a.apply(a, null == c ? [] : c)
        };
        return d
      };
      Ja.setTimeout = function(a, b, c) {
        var d = ++Ja.__lastTimerID,
          e = Ja.__timers;
        b = Ue.delay(function() {
          a.apply(a, null == c ? [] : c)
        }, b);
        e.h[d] = b;
        return d
      };
      Ja.trace = function(a) {
        kh.trace(a, {
          fileName: "openfl/Lib.hx",
          lineNumber: 565,
          className: "openfl.Lib",
          methodName: "trace"
        })
      };
      Ja.get_application = function() {
        return Kc.application
      };
      Ja.get_current = function() {
        null == Kc.current && (Kc.current =
          new ng);
        return Kc.current
      };
      var $g = function() {};
      k["openfl._Vector.IVector"] = $g;
      $g.__name__ = "openfl._Vector.IVector";
      $g.__isInterface__ = !0;
      $g.prototype = {
        get_length: null,
        set_length: null,
        fixed: null,
        concat: null,
        copy: null,
        filter: null,
        get: null,
        indexOf: null,
        insertAt: null,
        iterator: null,
        join: null,
        lastIndexOf: null,
        pop: null,
        push: null,
        removeAt: null,
        reverse: null,
        set: null,
        shift: null,
        slice: null,
        sort: null,
        splice: null,
        toString: null,
        unshift: null,
        __class__: $g,
        __properties__: {
          set_length: "set_length",
          get_length: "get_length"
        }
      };
      var Df = function(a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b
      };
      k["openfl._Vector.BoolVector"] = Df;
      Df.__name__ = "openfl._Vector.BoolVector";
      Df.__interfaces__ = [$g];
      Df.prototype = {
        fixed: null,
        __array: null,
        concat: function(a) {
          return null == a ? new Df(0, !1, this.__array.slice()) : 0 < a.__array.length ? new Df(0, !1, this.__array.concat(a.__array)) : new Df(0, !1, this.__array.slice())
        },
        copy: function() {
          return new Df(0, this.fixed, this.__array.slice())
        },
        filter: function(a) {
          for (var b =
              this.fixed, c = [], d = 0, e = this.__array; d < e.length;) {
            var f = e[d];
            ++d;
            a(f) && c.push(f)
          }
          return new Df(0, b, c)
        },
        get: function(a) {
          return a >= this.__array.length ? !1 : this.__array[a]
        },
        indexOf: function(a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c;) {
            var d = b++;
            if (this.__array[d] == a) return d
          }
          return -1
        },
        insertAt: function(a, b) {
          (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b)
        },
        iterator: function() {
          return new Ne(this.__array)
        },
        join: function(a) {
          null == a && (a = ",");
          return this.__array.join(a)
        },
        lastIndexOf: function(a,
          b) {
          for (b = null == b || b >= this.__array.length ? this.__array.length - 1 : b; 0 <= b;) {
            if (this.__array[b] == a) return b;
            --b
          }
          return -1
        },
        pop: function() {
          return this.fixed ? null : this.__array.pop()
        },
        push: function(a) {
          return this.fixed ? this.__array.length : this.__array.push(a)
        },
        removeAt: function(a) {
          return !this.fixed || a < this.__array.length ? this.__array.splice(a, 1)[0] : !1
        },
        reverse: function() {
          this.__array.reverse();
          return this
        },
        set: function(a, b) {
          return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
        },
        shift: function() {
          return this.fixed ?
            null : this.__array.shift()
        },
        slice: function(a, b) {
          null == a && (a = 0);
          null == b && (b = 16777215);
          return new Df(0, !1, this.__array.slice(a, b))
        },
        sort: function(a) {
          this.__array.sort(a)
        },
        splice: function(a, b) {
          return new Df(0, !1, this.__array.splice(a, b))
        },
        toJSON: function() {
          return this.__array
        },
        toString: function() {
          return null != this.__array ? this.__array.toString() : null
        },
        unshift: function(a) {
          this.fixed || this.__array.unshift(a)
        },
        get_length: function() {
          return this.__array.length
        },
        set_length: function(a) {
          if (!this.fixed) {
            var b =
              this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a;) {
                var c = b++;
                this.__array[c] = !1
              } else
                for (; this.__array.length > a;) this.__array.pop()
          }
          return this.__array.length
        },
        __class__: Df,
        __properties__: {
          set_length: "set_length",
          get_length: "get_length"
        }
      };
      var Ff = function(a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (this.__array = [], null != c) {
            d = 0;
            for (var e = c.length; d < e;) {
              var f = d++;
              this.__array[f] = c[f]
            }
          }
        } else null == c && (c = []), this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b
      };
      k["openfl._Vector.FloatVector"] =
        Ff;
      Ff.__name__ = "openfl._Vector.FloatVector";
      Ff.__interfaces__ = [$g];
      Ff.prototype = {
        fixed: null,
        __array: null,
        concat: function(a) {
          return null == a ? new Ff(0, !1, this.__array.slice()) : 0 < a.__array.length ? new Ff(0, !1, this.__array.concat(a.__array)) : new Ff(0, !1, this.__array.slice())
        },
        copy: function() {
          return new Ff(0, this.fixed, this.__array.slice())
        },
        filter: function(a) {
          for (var b = this.fixed, c = [], d = 0, e = this.__array; d < e.length;) {
            var f = e[d];
            ++d;
            a(f) && c.push(f)
          }
          return new Ff(0, b, c)
        },
        get: function(a) {
          return this.__array[a]
        },
        indexOf: function(a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c;) {
            var d = b++;
            if (this.__array[d] == a) return d
          }
          return -1
        },
        insertAt: function(a, b) {
          (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b)
        },
        iterator: function() {
          return new Ne(this.__array)
        },
        join: function(a) {
          null == a && (a = ",");
          return this.__array.join(a)
        },
        lastIndexOf: function(a, b) {
          for (b = null == b || b >= this.__array.length ? this.__array.length - 1 : b; 0 <= b;) {
            if (this.__array[b] == a) return b;
            --b
          }
          return -1
        },
        pop: function() {
          return this.fixed ? null :
            this.__array.pop()
        },
        push: function(a) {
          return this.fixed ? this.__array.length : this.__array.push(a)
        },
        removeAt: function(a) {
          return !this.fixed || a < this.__array.length ? this.__array.splice(a, 1)[0] : 0
        },
        reverse: function() {
          this.__array.reverse();
          return this
        },
        set: function(a, b) {
          return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
        },
        shift: function() {
          return this.fixed ? null : this.__array.shift()
        },
        slice: function(a, b) {
          null == a && (a = 0);
          null == b && (b = 16777215);
          return new Ff(0, !1, this.__array.slice(a, b))
        },
        sort: function(a) {
          this.__array.sort(a)
        },
        splice: function(a, b) {
          return new Ff(0, !1, this.__array.splice(a, b))
        },
        toJSON: function() {
          return this.__array
        },
        toString: function() {
          return null != this.__array ? this.__array.toString() : null
        },
        unshift: function(a) {
          this.fixed || this.__array.unshift(a)
        },
        get_length: function() {
          return this.__array.length
        },
        set_length: function(a) {
          if (a != this.__array.length && !this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a;) {
                var c = b++;
                this.__array[c] = 0
              } else
                for (; this.__array.length > a;) this.__array.pop()
          }
          return this.__array.length
        },
        __class__: Ff,
        __properties__: {
          set_length: "set_length",
          get_length: "get_length"
        }
      };
      var Gf = function(a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b
      };
      k["openfl._Vector.FunctionVector"] = Gf;
      Gf.__name__ = "openfl._Vector.FunctionVector";
      Gf.__interfaces__ = [$g];
      Gf.prototype = {
        fixed: null,
        __array: null,
        concat: function(a) {
          return null == a ? new Gf(0, !1, this.__array.slice()) : 0 < a.__array.length ? new Gf(0, !1, this.__array.concat(a.__array)) : new Gf(0, !1, this.__array.slice())
        },
        copy: function() {
          return new Gf(0, this.fixed, this.__array.slice())
        },
        filter: function(a) {
          for (var b = this.fixed, c = [], d = 0, e = this.__array; d < e.length;) {
            var f = e[d];
            ++d;
            a(f) && c.push(f)
          }
          return new Gf(0, b, c)
        },
        get: function(a) {
          return a >= this.__array.length ? null : this.__array[a]
        },
        indexOf: function(a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c;) {
            var d = b++;
            if (Y.compareMethods(this.__array[d], a)) return d
          }
          return -1
        },
        insertAt: function(a, b) {
          (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b)
        },
        iterator: function() {
          return new Ne(this.__array)
        },
        join: function(a) {
          null == a && (a = ",");
          return this.__array.join(a)
        },
        lastIndexOf: function(a, b) {
          for (b = null == b || b >= this.__array.length ? this.__array.length - 1 : b; 0 <= b;) {
            if (Y.compareMethods(this.__array[b], a)) return b;
            --b
          }
          return -1
        },
        pop: function() {
          return this.fixed ? null : this.__array.pop()
        },
        push: function(a) {
          return this.fixed ? this.__array.length : this.__array.push(a)
        },
        removeAt: function(a) {
          return !this.fixed || a < this.__array.length ? this.__array.splice(a, 1)[0] : null
        },
        reverse: function() {
          this.__array.reverse();
          return this
        },
        set: function(a, b) {
          return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
        },
        shift: function() {
          return this.fixed ? null : this.__array.shift()
        },
        slice: function(a, b) {
          null == a && (a = 0);
          null == b && (b = 16777215);
          return new Gf(0, !1, this.__array.slice(a, b))
        },
        sort: function(a) {
          this.__array.sort(a)
        },
        splice: function(a, b) {
          return new Gf(0, !1, this.__array.splice(a, b))
        },
        toJSON: function() {
          return this.__array
        },
        toString: function() {
          return null != this.__array ? this.__array.toString() : null
        },
        unshift: function(a) {
          this.fixed || this.__array.unshift(a)
        },
        get_length: function() {
          return this.__array.length
        },
        set_length: function(a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a;) {
                var c = b++;
                this.__array[c] = null
              } else
                for (; this.__array.length > a;) this.__array.pop()
          }
          return this.__array.length
        },
        __class__: Gf,
        __properties__: {
          set_length: "set_length",
          get_length: "get_length"
        }
      };
      var Ef = function(a, b, c) {
        null == b && (b = !1);
        null == a && (a = 0);
        null == c && (c = []);
        this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b
      };
      k["openfl._Vector.IntVector"] = Ef;
      Ef.__name__ =
        "openfl._Vector.IntVector";
      Ef.__interfaces__ = [$g];
      Ef.prototype = {
        fixed: null,
        __array: null,
        concat: function(a) {
          return null == a ? new Ef(0, !1, this.__array.slice()) : 0 < a.__array.length ? new Ef(0, !1, this.__array.concat(a.__array)) : new Ef(0, !1, this.__array.slice())
        },
        copy: function() {
          return new Ef(0, this.fixed, this.__array.slice())
        },
        filter: function(a) {
          for (var b = this.fixed, c = [], d = 0, e = this.__array; d < e.length;) {
            var f = e[d];
            ++d;
            a(f) && c.push(f)
          }
          return new Ef(0, b, c)
        },
        get: function(a) {
          return this.__array[a]
        },
        indexOf: function(a,
          b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c;) {
            var d = b++;
            if (this.__array[d] == a) return d
          }
          return -1
        },
        insertAt: function(a, b) {
          (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b)
        },
        iterator: function() {
          return new Ne(this.__array)
        },
        join: function(a) {
          null == a && (a = ",");
          return this.__array.join(a)
        },
        lastIndexOf: function(a, b) {
          for (b = null == b || b >= this.__array.length ? this.__array.length - 1 : b; 0 <= b;) {
            if (this.__array[b] == a) return b;
            --b
          }
          return -1
        },
        pop: function() {
          return this.fixed ? null : this.__array.pop()
        },
        push: function(a) {
          return this.fixed ? this.__array.length : this.__array.push(a)
        },
        removeAt: function(a) {
          return !this.fixed || a < this.__array.length ? this.__array.splice(a, 1)[0] : 0
        },
        reverse: function() {
          this.__array.reverse();
          return this
        },
        set: function(a, b) {
          return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
        },
        shift: function() {
          return this.fixed ? null : this.__array.shift()
        },
        slice: function(a, b) {
          null == a && (a = 0);
          null == b && (b = 16777215);
          return new Ef(0, !1, this.__array.slice(a, b))
        },
        sort: function(a) {
          this.__array.sort(a)
        },
        splice: function(a, b) {
          return new Ef(0, !1, this.__array.splice(a, b))
        },
        toJSON: function() {
          return this.__array
        },
        toString: function() {
          return null != this.__array ? this.__array.toString() : null
        },
        unshift: function(a) {
          this.fixed || this.__array.unshift(a)
        },
        get_length: function() {
          return this.__array.length
        },
        set_length: function(a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a;) {
                var c = b++;
                this.__array[c] = 0
              } else
                for (; this.__array.length > a;) this.__array.pop()
          }
          return this.__array.length
        },
        __class__: Ef,
        __properties__: {
          set_length: "set_length",
          get_length: "get_length"
        }
      };
      var sf = function(a, b, c, d) {
        null == d && (d = !1);
        null == b && (b = !1);
        null == a && (a = 0);
        if (d) {
          if (this.__array = [], null != c) {
            d = 0;
            for (var e = c.length; d < e;) {
              var f = d++;
              this.__array[f] = c[f]
            }
          }
        } else null == c && (c = []), this.__array = c;
        0 < a && this.set_length(a);
        this.fixed = b
      };
      k["openfl._Vector.ObjectVector"] = sf;
      sf.__name__ = "openfl._Vector.ObjectVector";
      sf.__interfaces__ = [$g];
      sf.prototype = {
        fixed: null,
        __array: null,
        concat: function(a) {
          return null == a ? new sf(0, !1, this.__array.slice()) :
            0 < a.__array.length ? new sf(0, !1, this.__array.concat(a.__array)) : new sf(0, !1, this.__array.slice())
        },
        copy: function() {
          return new sf(0, this.fixed, this.__array.slice())
        },
        filter: function(a) {
          for (var b = this.fixed, c = [], d = 0, e = this.__array; d < e.length;) {
            var f = e[d];
            ++d;
            a(f) && c.push(f)
          }
          return new sf(0, b, c)
        },
        get: function(a) {
          return this.__array[a]
        },
        indexOf: function(a, b) {
          null == b && (b = 0);
          for (var c = this.__array.length; b < c;) {
            var d = b++;
            if (this.__array[d] == a) return d
          }
          return -1
        },
        insertAt: function(a, b) {
          (!this.fixed || a < this.__array.length) &&
          this.__array.splice(a, 0, b)
        },
        iterator: function() {
          return new Ne(this.__array)
        },
        join: function(a) {
          null == a && (a = ",");
          return this.__array.join(a)
        },
        lastIndexOf: function(a, b) {
          for (b = null == b || b >= this.__array.length ? this.__array.length - 1 : b; 0 <= b;) {
            if (this.__array[b] == a) return b;
            --b
          }
          return -1
        },
        pop: function() {
          return this.fixed ? null : this.__array.pop()
        },
        push: function(a) {
          return this.fixed ? this.__array.length : this.__array.push(a)
        },
        removeAt: function(a) {
          return !this.fixed || a < this.__array.length ? this.__array.splice(a, 1)[0] :
            null
        },
        reverse: function() {
          this.__array.reverse();
          return this
        },
        set: function(a, b) {
          return !this.fixed || a < this.__array.length ? this.__array[a] = b : b
        },
        shift: function() {
          return this.fixed ? null : this.__array.shift()
        },
        slice: function(a, b) {
          null == a && (a = 0);
          null == b && (b = 16777215);
          return new sf(0, !1, this.__array.slice(a, b))
        },
        sort: function(a) {
          this.__array.sort(a)
        },
        splice: function(a, b) {
          return new sf(0, !1, this.__array.splice(a, b))
        },
        toJSON: function() {
          return this.__array
        },
        toString: function() {
          return null != this.__array ? this.__array.toString() :
            null
        },
        unshift: function(a) {
          this.fixed || this.__array.unshift(a)
        },
        get_length: function() {
          return this.__array.length
        },
        set_length: function(a) {
          if (!this.fixed) {
            var b = this.__array.length;
            0 > a && (a = 0);
            if (a > b)
              for (; b < a;) b++, this.__array.push(null);
            else
              for (; this.__array.length > a;) this.__array.pop()
          }
          return this.__array.length
        },
        __class__: sf,
        __properties__: {
          set_length: "set_length",
          get_length: "get_length"
        }
      };
      var lj = function() {
        Ad.call(this);
        null == Kc.application && (Kc.application = this);
        null == Kc.current && (Kc.current = new ng);
        Kc.current.__loaderInfo = eg.create(null);
        Kc.current.__loaderInfo.content = Kc.current
      };
      k["openfl.display.Application"] = lj;
      lj.__name__ = "openfl.display.Application";
      lj.__super__ = Ad;
      lj.prototype = t(Ad.prototype, {
        createWindow: function(a) {
          var b = new bk(this, a);
          this.__windows.push(b);
          this.__windowByID.h[b.id] = b;
          var c = r(this, this.__onWindowClose);
          b.onClose.add(function() {
            c(b)
          }, !1, -1E4);
          null == this.__window && (this.__window = b, b.onActivate.add(r(this, this.onWindowActivate)), b.onRenderContextLost.add(r(this, this.onRenderContextLost)),
            b.onRenderContextRestored.add(r(this, this.onRenderContextRestored)), b.onDeactivate.add(r(this, this.onWindowDeactivate)), b.onDropFile.add(r(this, this.onWindowDropFile)), b.onEnter.add(r(this, this.onWindowEnter)), b.onExpose.add(r(this, this.onWindowExpose)), b.onFocusIn.add(r(this, this.onWindowFocusIn)), b.onFocusOut.add(r(this, this.onWindowFocusOut)), b.onFullscreen.add(r(this, this.onWindowFullscreen)), b.onKeyDown.add(r(this, this.onKeyDown)), b.onKeyUp.add(r(this, this.onKeyUp)), b.onLeave.add(r(this, this.onWindowLeave)),
            b.onMinimize.add(r(this, this.onWindowMinimize)), b.onMouseDown.add(r(this, this.onMouseDown)), b.onMouseMove.add(r(this, this.onMouseMove)), b.onMouseMoveRelative.add(r(this, this.onMouseMoveRelative)), b.onMouseUp.add(r(this, this.onMouseUp)), b.onMouseWheel.add(r(this, this.onMouseWheel)), b.onMove.add(r(this, this.onWindowMove)), b.onRender.add(r(this, this.render)), b.onResize.add(r(this, this.onWindowResize)), b.onRestore.add(r(this, this.onWindowRestore)), b.onTextEdit.add(r(this, this.onTextEdit)), b.onTextInput.add(r(this,
              this.onTextInput)), this.onWindowCreate());
          this.onCreateWindow.dispatch(b);
          return b
        },
        __class__: lj
      });
      var wa = function(a, b, c, d) {
        null == d && (d = -1);
        null == c && (c = !0);
        this.__drawableType = 0;
        this.transparent = c;
        null == a && (a = 0);
        null == b && (b = 0);
        0 > a && (a = 0);
        0 > b && (b = 0);
        this.width = a;
        this.height = b;
        this.rect = new ha(0, 0, a, b);
        this.__textureWidth = a;
        this.__textureHeight = b;
        0 < a && 0 < b && (c ? 0 == (d & -16777216) && (d = 0) : d = -16777216 | d & 16777215, this.image = new Hb(null, 0, 0, a, b, d << 8 | d >>> 24 & 255), this.image.set_transparent(c), this.readable = this.__isValid = !0);
        this.__renderTransform = new Ea;
        this.__worldAlpha = 1;
        this.__worldTransform = new Ea;
        this.__worldColorTransform = new Ec;
        this.__renderable = !0
      };
      k["openfl.display.BitmapData"] = wa;
      wa.__name__ = "openfl.display.BitmapData";
      wa.__interfaces__ = [Zd];
      wa.fromBase64 = function(a, b) {
        return null
      };
      wa.fromBytes = function(a, b) {
        return null
      };
      wa.fromCanvas = function(a, b) {
        null == b && (b = !0);
        if (null == a) return null;
        var c = new wa(0, 0, b, 0);
        c.__fromImage(Hb.fromCanvas(a));
        c.image.set_transparent(b);
        return c
      };
      wa.fromFile = function(a) {
        return null
      };
      wa.fromImage = function(a, b) {
        null == b && (b = !0);
        if (null == a || null == a.buffer) return null;
        var c = new wa(0, 0, b, 0);
        c.__fromImage(a);
        c.image.set_transparent(b);
        return null != c.image ? c : null
      };
      wa.fromTexture = function(a) {
        if (null == a) return null;
        var b = new wa(a.__width, a.__height, !0, 0);
        b.readable = !1;
        b.__texture = a;
        b.__textureContext = a.__textureContext;
        b.image = null;
        return b
      };
      wa.loadFromBase64 = function(a, b) {
        return Hb.loadFromBase64(a, b).then(function(a) {
          return lb.withValue(wa.fromImage(a))
        })
      };
      wa.loadFromBytes = function(a,
        b) {
        return Hb.loadFromBytes(Cb.toBytes(a)).then(function(a) {
          a = wa.fromImage(a);
          null != b && a.__applyAlpha(b);
          return lb.withValue(a)
        })
      };
      wa.loadFromFile = function(a) {
        return Hb.loadFromFile(a).then(function(a) {
          return lb.withValue(wa.fromImage(a))
        })
      };
      wa.prototype = {
        height: null,
        image: null,
        readable: null,
        rect: null,
        transparent: null,
        width: null,
        __blendMode: null,
        __drawableType: null,
        __framebuffer: null,
        __framebufferContext: null,
        __indexBuffer: null,
        __indexBufferContext: null,
        __indexBufferData: null,
        __indexBufferGrid: null,
        __isMask: null,
        __isValid: null,
        __mask: null,
        __renderable: null,
        __renderTransform: null,
        __scrollRect: null,
        __stencilBuffer: null,
        __surface: null,
        __texture: null,
        __textureContext: null,
        __textureHeight: null,
        __textureVersion: null,
        __textureWidth: null,
        __transform: null,
        __uvRect: null,
        __vertexBuffer: null,
        __vertexBufferContext: null,
        __vertexBufferData: null,
        __vertexBufferGrid: null,
        __vertexBufferHeight: null,
        __vertexBufferScaleX: null,
        __vertexBufferScaleY: null,
        __vertexBufferWidth: null,
        __worldAlpha: null,
        __worldColorTransform: null,
        __worldTransform: null,
        applyFilter: function(a, b, c, d) {
          if (this.readable && null != a && a.readable) {
            a = d.__needSecondBitmapData;
            var e = d.__preserveObject,
              f = null;
            var g = a ? new wa(this.width, this.height, !0, 0) : this;
            e && (f = new wa(this.width, this.height, !0, 0));
            d.__preserveObject && f.copyPixels(this, this.rect, c);
            b = d.__applyFilter(g, this, b, c);
            d.__preserveObject && b.draw(f, null, null);
            a && b == g && (g.image.version = this.image.version, this.image = g.image);
            this.image.dirty = !0;
            this.image.version++
          }
        },
        clone: function() {
          if (this.__isValid)
            if (this.readable ||
              null != this.image) var a = wa.fromImage(this.image.clone(), this.transparent);
            else a = new wa(0, 0, this.transparent, 0), a.width = this.width, a.height = this.height, a.__textureWidth = this.__textureWidth, a.__textureHeight = this.__textureHeight, a.rect.copyFrom(this.rect), a.__framebuffer = this.__framebuffer, a.__framebufferContext = this.__framebufferContext, a.__texture = this.__texture, a.__textureContext = this.__textureContext, a.__isValid = !0;
          else a = new wa(this.width, this.height, this.transparent, 0);
          a.__worldTransform.copyFrom(this.__worldTransform);
          a.__renderTransform.copyFrom(this.__renderTransform);
          return a
        },
        colorTransform: function(a, b) {
          this.readable && this.image.colorTransform(a.__toLimeRectangle(), b.__toLimeColorMatrix())
        },
        compare: function(a) {
          if (a == this) return 0;
          if (null == a) return -1;
          if (0 == this.readable || 0 == a.readable) return -2;
          if (this.width != a.width) return -3;
          if (this.height != a.height) return -4;
          if (null != this.image && null != a.image && this.image.get_format() == a.image.get_format()) {
            for (var b = this.image.get_data(), c = a.image.get_data(), d = !0, e = 0, f = b.length; e <
              f;) {
              var g = e++;
              if (b[g] != c[g]) {
                d = !1;
                break
              }
            }
            if (d) return 0
          }
          b = null;
          e = 0;
          for (f = this.height; e < f;) {
            g = e++;
            for (var h = 0, m = this.width; h < m;) {
              var l = h++;
              c = !1;
              var p = this.getPixel32(l, g);
              var n = a.getPixel32(l, g);
              d = 0;
              if (p != n) {
                var k = (p >>> 16 & 255) - (n >>> 16 & 255);
                var q = (p >>> 8 & 255) - (n >>> 8 & 255);
                var u = (p & 255) - (n & 255);
                0 > k && (k *= -1);
                0 > q && (q *= -1);
                0 > u && (u *= -1);
                0 == k && 0 == q && 0 == u ? (p = (p >>> 24 & 255) - (n >>> 24 & 255), 0 != p && (d = (d >>> 24 & 255) << 24 | 16711680 | (d >>> 8 & 255) << 8 | d & 255, d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | 65280 | d & 255, d = (d >>> 24 & 255) << 24 | (d >>>
                  16 & 255) << 16 | (d >>> 8 & 255) << 8 | 255, d = (p & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | d & 255, c = !0)) : (d = (d >>> 24 & 255) << 24 | (k & 255) << 16 | (d >>> 8 & 255) << 8 | d & 255, d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (q & 255) << 8 | d & 255, d = (d >>> 24 & 255) << 24 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | u & 255, d = -16777216 | (d >>> 16 & 255) << 16 | (d >>> 8 & 255) << 8 | d & 255, c = !0)
              }
              c && (null == b && (b = new wa(this.width, this.height, this.transparent || a.transparent, 0)), b.setPixel32(l, g, d))
            }
          }
          return null == b ? 0 : b
        },
        copyChannel: function(a, b, c, d, e) {
          if (this.readable) {
            switch (d) {
              case 1:
                d =
                  of.RED;
                break;
              case 2:
                d = of.GREEN;
                break;
              case 4:
                d = of.BLUE;
                break;
              case 8:
                d = of.ALPHA;
                break;
              default:
                return
            }
            switch (e) {
              case 1:
                e = of.RED;
                break;
              case 2:
                e = of.GREEN;
                break;
              case 4:
                e = of.BLUE;
                break;
              case 8:
                e = of.ALPHA;
                break;
              default:
                return
            }
            this.image.copyChannel(a.image, b.__toLimeRectangle(), c.__toLimeVector2(), d, e)
          }
        },
        copyPixels: function(a, b, c, d, e, f) {
          null == f && (f = !1);
          this.readable && null != a && (null != e && (wa.__tempVector.x = e.x, wa.__tempVector.y = e.y), this.image.copyPixels(a.image, b.__toLimeRectangle(), c.__toLimeVector2(), null !=
            d ? d.image : null, null != e ? wa.__tempVector : null, f))
        },
        dispose: function() {
          this.image = null;
          this.height = this.width = 0;
          this.rect = null;
          this.readable = this.__isValid = !1;
          this.__textureContext = this.__texture = this.__framebufferContext = this.__framebuffer = this.__vertexBuffer = this.__surface = null
        },
        disposeImage: function() {
          this.readable = !1
        },
        draw: function(a, b, c, d, e, f) {
          null == f && (f = !1);
          if (null != a) {
            a.__update(!1, !0);
            var g = Ea.__pool.get();
            g.copyFrom(a.__renderTransform);
            g.invert();
            null != b && g.concat(b);
            b = null;
            null != e && (b = Ea.__pool.get(),
              b.copyFrom(g), b.invert());
            var h = new Ec;
            h.__copyFrom(a.__worldColorTransform);
            h.__invert();
            if (this.readable || null == Ja.get_current().stage.context3D) {
              if (null != c) {
                var m = ha.__pool.get(),
                  l = Ea.__pool.get();
                a.__getBounds(m, l);
                var p = Math.ceil(m.width),
                  n = Math.ceil(m.height);
                l.tx = -m.x;
                l.ty = -m.y;
                p = new wa(p, n, !0, 0);
                p.draw(a, l);
                p.colorTransform(p.rect, c);
                p.__renderTransform.identity();
                p.__renderTransform.tx = m.x;
                p.__renderTransform.ty = m.y;
                p.__renderTransform.concat(a.__renderTransform);
                p.__worldAlpha = a.__worldAlpha;
                p.__worldColorTransform.__copyFrom(a.__worldColorTransform);
                a = p;
                ha.__pool.release(m);
                Ea.__pool.release(l)
              }
              va.convertToCanvas(this.image);
              c = new Dg(this.image.buffer.__srcContext);
              c.__allowSmoothing = f;
              c.__overrideBlendMode = d;
              c.__worldTransform = g;
              c.__worldAlpha = 1 / a.__worldAlpha;
              c.__worldColorTransform = h;
              null != e && c.__pushMaskRect(e, b);
              this.__drawCanvas(a, c)
            } else null == this.__textureContext && (this.__textureContext = Ad.current.__window.context), null != c && h.__combine(c), c = new Jb(Ja.get_current().stage.context3D,
              this), c.__allowSmoothing = f, c.__overrideBlendMode = d, c.__worldTransform = g, c.__worldAlpha = 1 / a.__worldAlpha, c.__worldColorTransform = h, c.__resize(this.width, this.height), null != e && c.__pushMaskRect(e, b), this.__drawGL(a, c);
            null != e && (c.__popMaskRect(), Ea.__pool.release(b));
            Ea.__pool.release(g)
          }
        },
        drawWithQuality: function(a, b, c, d, e, f, g) {
          null == f && (f = !1);
          this.draw(a, b, c, d, e, 2 != g && f)
        },
        encode: function(a, b, c) {
          if (!this.readable || null == a) return null;
          null == c && (c = new sc(0));
          var d = this.image;
          if (!a.equals(this.rect)) {
            var e =
              Ea.__pool.get();
            e.tx = Math.round(-a.x);
            e.ty = Math.round(-a.y);
            a = new wa(Math.ceil(a.width), Math.ceil(a.height), !0, 0);
            a.draw(this, e);
            d = a.image;
            Ea.__pool.release(e)
          }
          return b instanceof Xo ? (c.writeBytes(Cb.fromBytes(d.encode(wm.PNG)), 0, 0), c) : b instanceof Fm ? (c.writeBytes(Cb.fromBytes(d.encode(wm.JPEG, K.__cast(b, Fm).quality)), 0, 0), c) : null
        },
        fillRect: function(a, b) {
          this.__fillRect(a, b, !0)
        },
        floodFill: function(a, b, c) {
          this.readable && this.image.floodFill(a, b, c, 1)
        },
        generateFilterRect: function(a, b) {
          return a.clone()
        },
        getIndexBuffer: function(a, b) {
          if (null == this.__indexBuffer || this.__indexBufferContext != a.__context || null != b && null == this.__indexBufferGrid || null != this.__indexBufferGrid && !this.__indexBufferGrid.equals(b)) {
            this.__indexBufferContext = a.__context;
            this.__indexBuffer = null;
            if (null != b) {
              null == this.__indexBufferGrid && (this.__indexBufferGrid = new ha);
              this.__indexBufferGrid.copyFrom(b);
              var c = b.width;
              b = b.height;
              0 != c && 0 != b ? (this.__indexBufferData = c = new Uint16Array(54), this.__indexBufferData[0] = 0, this.__indexBufferData[1] =
                  1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 0, this.__indexBufferData[8] = 5, this.__indexBufferData[9] = 5, this.__indexBufferData[10] = 0, this.__indexBufferData[11] = 2, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 4, this.__indexBufferData[14] = 7, this.__indexBufferData[15] = 7, this.__indexBufferData[16] = 4, this.__indexBufferData[17] = 5, this.__indexBufferData[18] = 8, this.__indexBufferData[19] =
                  9, this.__indexBufferData[20] = 0, this.__indexBufferData[21] = 0, this.__indexBufferData[22] = 9, this.__indexBufferData[23] = 1, this.__indexBufferData[24] = 10, this.__indexBufferData[25] = 8, this.__indexBufferData[26] = 4, this.__indexBufferData[27] = 4, this.__indexBufferData[28] = 8, this.__indexBufferData[29] = 0, this.__indexBufferData[30] = 11, this.__indexBufferData[31] = 10, this.__indexBufferData[32] = 6, this.__indexBufferData[33] = 6, this.__indexBufferData[34] = 10, this.__indexBufferData[35] = 4, this.__indexBufferData[36] = 12, this.__indexBufferData[37] =
                  13, this.__indexBufferData[38] = 8, this.__indexBufferData[39] = 8, this.__indexBufferData[40] = 13, this.__indexBufferData[41] = 9, this.__indexBufferData[42] = 14, this.__indexBufferData[43] = 12, this.__indexBufferData[44] = 10, this.__indexBufferData[45] = 10, this.__indexBufferData[46] = 12, this.__indexBufferData[47] = 8, this.__indexBufferData[48] = 15, this.__indexBufferData[49] = 14, this.__indexBufferData[50] = 11, this.__indexBufferData[51] = 11, this.__indexBufferData[52] = 14, this.__indexBufferData[53] = 10, this.__indexBuffer = a.createIndexBuffer(54)) :
                0 == c && 0 != b ? (this.__indexBufferData = c = new Uint16Array(18), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 5, this.__indexBufferData[8] = 0, this.__indexBufferData[9] = 0, this.__indexBufferData[10] = 5, this.__indexBufferData[11] = 1, this.__indexBufferData[12] = 6, this.__indexBufferData[13] = 7, this.__indexBufferData[14] = 4, this.__indexBufferData[15] =
                  4, this.__indexBufferData[16] = 7, this.__indexBufferData[17] = 5, this.__indexBuffer = a.createIndexBuffer(18)) : 0 != c && 0 == b && (this.__indexBufferData = c = new Uint16Array(18), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferData[6] = 4, this.__indexBufferData[7] = 0, this.__indexBufferData[8] = 5, this.__indexBufferData[9] = 5, this.__indexBufferData[10] = 0, this.__indexBufferData[11] = 2, this.__indexBufferData[12] =
                  6, this.__indexBufferData[13] = 4, this.__indexBufferData[14] = 7, this.__indexBufferData[15] = 7, this.__indexBufferData[16] = 4, this.__indexBufferData[17] = 5, this.__indexBuffer = a.createIndexBuffer(18))
            } else this.__indexBufferGrid = null;
            null == this.__indexBuffer && (this.__indexBufferData = c = new Uint16Array(6), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBuffer = a.createIndexBuffer(6));
            this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData)
          }
          return this.__indexBuffer
        },
        getVertexBuffer: function(a, b, c) {
          if (null == this.__vertexBuffer || this.__vertexBufferContext != a.__context || null != b && null == this.__vertexBufferGrid || null != this.__vertexBufferGrid && !this.__vertexBufferGrid.equals(b) || null != c && (this.__vertexBufferWidth != c.get_width() || this.__vertexBufferHeight != c.get_height() || this.__vertexBufferScaleX != c.get_scaleX() || this.__vertexBufferScaleY != c.get_scaleY())) {
            this.__uvRect = new ha(0,
              0, this.width, this.height);
            this.__vertexBufferContext = a.__context;
            this.__vertexBuffer = null;
            null != c && (this.__vertexBufferWidth = c.get_width(), this.__vertexBufferHeight = c.get_height(), this.__vertexBufferScaleX = c.get_scaleX(), this.__vertexBufferScaleY = c.get_scaleY());
            if (null != b && null != c) {
              null == this.__vertexBufferGrid && (this.__vertexBufferGrid = new ha);
              this.__vertexBufferGrid.copyFrom(b);
              this.__vertexBufferWidth = c.get_width();
              this.__vertexBufferHeight = c.get_height();
              this.__vertexBufferScaleX = c.get_scaleX();
              this.__vertexBufferScaleY = c.get_scaleY();
              var d = b.width,
                e = b.height;
              if (0 != d && 0 != e) {
                var f = new Float32Array(224);
                this.__vertexBufferData = f;
                var g = b.x,
                  h = b.y,
                  m = this.width - d - g,
                  l = this.height - e - h;
                b = g / this.width;
                f = h / this.height;
                d /= this.width;
                e /= this.height;
                g /= c.get_scaleX();
                h /= c.get_scaleY();
                m /= c.get_scaleX();
                var p = l / c.get_scaleY();
                l = c.get_width() / c.get_scaleX() - g - m;
                m = c.get_height() / c.get_scaleY() - h - p;
                this.__vertexBufferData[0] = g;
                this.__vertexBufferData[1] = h;
                this.__vertexBufferData[3] = 1 * b;
                this.__vertexBufferData[4] =
                  1 * f;
                this.__vertexBufferData[15] = h;
                this.__vertexBufferData[18] = 1 * f;
                this.__vertexBufferData[28] = g;
                this.__vertexBufferData[31] = 1 * b;
                this.__vertexBufferData[56] = g + l;
                this.__vertexBufferData[57] = h;
                this.__vertexBufferData[59] = 1 * (b + d);
                this.__vertexBufferData[60] = 1 * f;
                this.__vertexBufferData[70] = g + l;
                this.__vertexBufferData[73] = 1 * (b + d);
                this.__vertexBufferData[84] = this.width;
                this.__vertexBufferData[85] = h;
                this.__vertexBufferData[87] = 1;
                this.__vertexBufferData[88] = 1 * f;
                this.__vertexBufferData[98] = this.width;
                this.__vertexBufferData[101] =
                  1;
                this.__vertexBufferData[112] = g;
                this.__vertexBufferData[113] = h + m;
                this.__vertexBufferData[115] = 1 * b;
                this.__vertexBufferData[116] = 1 * (f + e);
                this.__vertexBufferData[127] = h + m;
                this.__vertexBufferData[130] = 1 * (f + e);
                this.__vertexBufferData[140] = g + l;
                this.__vertexBufferData[141] = h + m;
                this.__vertexBufferData[143] = 1 * (b + d);
                this.__vertexBufferData[144] = 1 * (f + e);
                this.__vertexBufferData[154] = this.width;
                this.__vertexBufferData[155] = h + m;
                this.__vertexBufferData[157] = 1;
                this.__vertexBufferData[158] = 1 * (f + e);
                this.__vertexBufferData[168] =
                  g;
                this.__vertexBufferData[169] = this.height;
                this.__vertexBufferData[171] = 1 * b;
                this.__vertexBufferData[172] = 1;
                this.__vertexBufferData[183] = this.height;
                this.__vertexBufferData[186] = 1;
                this.__vertexBufferData[196] = g + l;
                this.__vertexBufferData[197] = this.height;
                this.__vertexBufferData[199] = 1 * (b + d);
                this.__vertexBufferData[200] = 1;
                this.__vertexBufferData[210] = this.width;
                this.__vertexBufferData[211] = this.height;
                this.__vertexBufferData[213] = 1;
                this.__vertexBufferData[214] = 1;
                this.__vertexBuffer = a.createVertexBuffer(16,
                  14)
              } else 0 == d && 0 != e ? (this.__vertexBufferData = f = new Float32Array(112), h = b.y, l = this.height - e - h, f = h / this.height, e /= this.height, h /= c.get_scaleY(), p = l / c.get_scaleY(), m = c.get_height() / c.get_scaleY() - h - p, c = c.get_width() / c.get_scaleX(), this.__vertexBufferData[0] = c, this.__vertexBufferData[1] = h, this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1 * f, this.__vertexBufferData[15] = h, this.__vertexBufferData[18] = 1 * f, this.__vertexBufferData[28] = c, this.__vertexBufferData[31] = 1, this.__vertexBufferData[56] = c, this.__vertexBufferData[57] =
                h + m, this.__vertexBufferData[59] = 1, this.__vertexBufferData[60] = 1 * (f + e), this.__vertexBufferData[71] = h + m, this.__vertexBufferData[74] = 1 * (f + e), this.__vertexBufferData[84] = c, this.__vertexBufferData[85] = this.height, this.__vertexBufferData[87] = 1, this.__vertexBufferData[88] = 1, this.__vertexBufferData[99] = this.height, this.__vertexBufferData[102] = 1, this.__vertexBuffer = a.createVertexBuffer(8, 14)) : 0 == e && 0 != d && (this.__vertexBufferData = f = new Float32Array(112), g = b.x, m = this.width - d - g, b = g / this.width, d /= this.width, g /=
                c.get_scaleX(), m /= c.get_scaleX(), l = c.get_width() / c.get_scaleX() - g - m, c = c.get_height() / c.get_scaleY(), this.__vertexBufferData[0] = g, this.__vertexBufferData[1] = c, this.__vertexBufferData[3] = 1 * b, this.__vertexBufferData[4] = 1, this.__vertexBufferData[15] = c, this.__vertexBufferData[18] = 1, this.__vertexBufferData[28] = g, this.__vertexBufferData[31] = 1 * b, this.__vertexBufferData[56] = g + l, this.__vertexBufferData[57] = c, this.__vertexBufferData[59] = 1 * (b + d), this.__vertexBufferData[60] = 1, this.__vertexBufferData[70] = g + l, this.__vertexBufferData[73] =
                1 * (b + d), this.__vertexBufferData[84] = this.width, this.__vertexBufferData[85] = c, this.__vertexBufferData[87] = 1, this.__vertexBufferData[88] = 1, this.__vertexBufferData[98] = this.width, this.__vertexBufferData[101] = 1, this.__vertexBuffer = a.createVertexBuffer(8, 14))
            } else this.__vertexBufferGrid = null;
            null == this.__vertexBuffer && (this.__vertexBufferData = f = new Float32Array(56), this.__vertexBufferData[0] = this.width, this.__vertexBufferData[1] = this.height, this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1, this.__vertexBufferData[15] =
              this.height, this.__vertexBufferData[18] = 1, this.__vertexBufferData[28] = this.width, this.__vertexBufferData[31] = 1, this.__vertexBuffer = a.createVertexBuffer(3, 14));
            this.__vertexBuffer.uploadFromTypedArray(Xg.toArrayBufferView(this.__vertexBufferData))
          }
          return this.__vertexBuffer
        },
        getColorBoundsRect: function(a, b, c) {
          null == c && (c = !0);
          if (!this.readable) return new ha(0, 0, this.width, this.height);
          a = this.image.getColorBoundsRect(a, b, c, 1);
          return new ha(a.x, a.y, a.width, a.height)
        },
        getPixel: function(a, b) {
          return this.readable ?
            this.image.getPixel(a, b, 1) : 0
        },
        getPixel32: function(a, b) {
          return this.readable ? this.image.getPixel32(a, b, 1) : 0
        },
        getPixels: function(a) {
          if (!this.readable) return null;
          null == a && (a = this.rect);
          a = Cb.fromBytes(this.image.getPixels(a.__toLimeRectangle(), 1));
          a.__endian = 0;
          return a
        },
        getSurface: function() {
          if (!this.readable) return null;
          null == this.__surface && (this.__surface = Dr.fromImage(this.image));
          return this.__surface
        },
        getTexture: function(a) {
          if (!this.__isValid) return null;
          if (null == this.__texture || this.__textureContext !=
            a.__context) this.__textureContext = a.__context, this.__texture = a.createRectangleTexture(this.width, this.height, 1, !1), this.__textureVersion = -1;
          va.sync(this.image, !1);
          null != this.image && this.image.version > this.__textureVersion && (null != this.__surface && Er.flush(this.__surface), a = this.image, fc.__supportsBGRA || 0 == a.get_format() || (a = a.clone(), a.set_format(0)), this.__texture.__uploadFromImage(a), this.__textureVersion = this.image.version, this.__textureWidth = a.buffer.width, this.__textureHeight = a.buffer.height);
          this.readable || null == this.image || (this.image = this.__surface = null);
          return this.__texture
        },
        getVector: function(a) {
          a = this.getPixels(a);
          for (var b = Ya.toFloat(Cb.get_length(a)) / Ya.toFloat(4) | 0, c = Fb.toIntVector(null, b, !0), d = 0; d < b;) {
            var e = d++;
            c.set(e, a.readUnsignedInt())
          }
          return c
        },
        histogram: function(a) {
          a = null != a ? a : new ha(0, 0, this.width, this.height);
          a = this.getPixels(a);
          for (var b = [], c = [], d = 0; 256 > d;) d++, c.push(0);
          b.push(c);
          c = [];
          for (d = 0; 256 > d;) d++, c.push(0);
          b.push(c);
          c = [];
          for (d = 0; 256 > d;) d++, c.push(0);
          b.push(c);
          c = [];
          for (d = 0; 256 > d;) d++, c.push(0);
          b.push(c);
          d = b;
          b = 0;
          for (c = Cb.get_length(a); b < c;) {
            var e = b++;
            ++d[e % 4][a.readUnsignedByte()]
          }
          return d
        },
        hitTest: function(a, b, c, d, e) {
          null == e && (e = 1);
          if (!this.readable) return !1;
          c instanceof Ac && (c = K.__cast(c, Ac).__bitmapData);
          if (c instanceof la) {
            e = c;
            c = e.x - a.x | 0;
            var f = e.y - a.y | 0;
            if (this.rect.contains(c, f)) {
              var g = this.getPixel32(c, f);
              if ((g >> 24 & 255) > b) return !0
            }
          } else if (c instanceof wa) {
            g = c;
            null == d ? f = c = 0 : (c = Math.round(d.x - a.x), f = Math.round(d.y - a.y));
            d = ha.__pool.get();
            d.setTo(c,
              f, g.width, g.height);
            if (this.rect.intersects(d)) {
              0 > c ? (d.x = 0, d.width = Math.min(g.width + c, this.width)) : d.width = Math.min(g.width, this.width - c);
              0 > f ? (d.y = 0, d.height = Math.min(g.height + f, this.height)) : d.height = Math.min(g.height, this.height - f);
              a = this.getPixels(d);
              d.x = 0 > c ? -c : 0;
              d.y = 0 > f ? -f : 0;
              f = g.getPixels(d);
              g = d.width * d.height | 0;
              c = 0;
              for (var h = g; c < h;) {
                c++;
                g = a.readUnsignedInt();
                var m = f.readUnsignedInt();
                if (Ya.gt(g >>> 24 & 255, b) && Ya.gt(m >>> 24 & 255, e)) return ha.__pool.release(d), !0
              }
            }
            ha.__pool.release(d)
          } else if (c instanceof ha) {
            e = ha.__pool.get();
            e.copyFrom(c);
            e.offset(-a.x, -a.y);
            e.__contract(0, 0, this.width, this.height);
            if (0 < e.width && 0 < e.height)
              for (a = this.getPixels(e), g = Ya.toFloat(Cb.get_length(a)) / Ya.toFloat(4) | 0, c = 0, h = g; c < h;)
                if (c++, g = a.readUnsignedInt(), Ya.gt(g >>> 24 & 255, b)) return ha.__pool.release(e), !0;
            ha.__pool.release(e)
          }
          return !1
        },
        lock: function() {},
        merge: function(a, b, c, d, e, f, g) {
          this.readable && null != a && a.readable && null != b && null != c && this.image.merge(a.image, b.__toLimeRectangle(), c.__toLimeVector2(), d, e, f, g)
        },
        noise: function(a,
          b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = 7);
          null == c && (c = 255);
          null == b && (b = 0);
          if (this.readable) {
            var f = function() {
              a = 1103515245 * a + 12345;
              return (Math.abs(a / 65536) | 0) % 32768
            };
            f();
            c -= b;
            var g = 1 == (d & 1),
              h = 1 == (d & 2) >> 1,
              m = 1 == (d & 4) >> 2;
            d = 1 == (d & 8) >> 3;
            for (var l = 0, p = this.height; l < p;)
              for (var n = l++, k = 0, q = this.width; k < q;) {
                var u = k++,
                  v = 0,
                  r = 0,
                  t = 0,
                  w = 255;
                e ? (v = t = r = b + f() % c, w = 255) : (g && (v = b + f() % c), h && (t = b + f() % c), m && (r = b + f() % c), d && (w = b + f() % c));
                w = (w << 8) + v;
                w = (w << 8) + t;
                w = (w << 8) + r;
                this.setPixel32(u, n, w)
              }
          }
        },
        paletteMap: function(a, b, c, d, e, f,
          g) {
          var h = b.width | 0,
            m = b.height | 0;
          a = a.getPixels(b);
          b = 0;
          for (var l = m * h; b < l;) {
            var p = b++;
            var n = a.readUnsignedInt();
            var k = null == g ? n & -16777216 : g[n >> 24 & 255];
            var q = null == d ? n & 16711680 : d[n >> 16 & 255];
            var u = null == e ? n & 65280 : e[n >> 8 & 255];
            n = null == f ? n & 255 : f[n & 255];
            q = k + q + u + n;
            a.position = 4 * p;
            a.writeUnsignedInt(q)
          }
          a.position = 0;
          d = ha.__pool.get();
          d.setTo(c.x, c.y, h, m);
          this.setPixels(d, a);
          ha.__pool.release(d)
        },
        perlinNoise: function(a, b, c, d, e, f, g, h, m) {
          null == h && (h = !1);
          null == g && (g = 7);
          this.readable && (new $h(d, c, g, h, .5, e, .15)).fill(this,
            a, b, 0)
        },
        scroll: function(a, b) {
          this.readable && this.image.scroll(a, b)
        },
        setPixel: function(a, b, c) {
          this.readable && this.image.setPixel(a, b, c, 1)
        },
        setPixel32: function(a, b, c) {
          this.readable && this.image.setPixel32(a, b, c, 1)
        },
        setPixels: function(a, b) {
          if (this.readable && null != a) {
            var c = a.width * a.height * 4;
            if (Ya.toFloat(b.length - b.position) < c) throw F.thrown(new jd("End of file was encountered.", 2030));
            this.image.setPixels(a.__toLimeRectangle(), Cb.toBytePointer(b), 1, kr.toLimeEndian(b.__endian))
          }
        },
        setVector: function(a,
          b) {
          var c = new sc(0);
          Cb.set_length(c, 4 * b.get_length());
          for (b = b.iterator(); b.hasNext();) {
            var d = b.next();
            c.writeUnsignedInt(d)
          }
          c.position = 0;
          this.setPixels(a, c)
        },
        threshold: function(a, b, c, d, e, f, g, h) {
          null == h && (h = !1);
          null == g && (g = -1);
          null == f && (f = 0);
          return null == a || null == b || null == c || b.x > a.width || b.y > a.height || c.x > this.width || c.y > this.height ? 0 : this.image.threshold(a.image, b.__toLimeRectangle(), c.__toLimeVector2(), d, e, f, g, h, 1)
        },
        unlock: function(a) {},
        __applyAlpha: function(a) {
          va.convertToCanvas(this.image);
          va.createImageData(this.image);
          for (var b = this.image.buffer.data, c = 0, d = Cb.get_length(a); c < d;) {
            var e = c++;
            b[4 * e + 3] = a.readUnsignedByte()
          }
          this.image.version++
        },
        __drawCairo: function(a, b) {},
        __drawCanvas: function(a, b) {
          var c = this.image.buffer;
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
          b.__render(a);
          b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
          c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
          c.__srcImageData = null;
          c.data = null;
          this.image.dirty = !0;
          this.image.version++
        },
        __drawGL: function(a, b) {
          var c = b.__context3D,
            d = c.__state.renderToTexture,
            e = c.__state.renderToTextureDepthStencil,
            f = c.__state.renderToTextureAntiAlias,
            g = c.__state.renderToTextureSurfaceSelector;
          c.setRenderToTexture(this.getTexture(c), !0);
          b.__render(a);
          null != d ? c.setRenderToTexture(d, e, f, g) : c.setRenderToBackBuffer()
        },
        __fillRect: function(a, b, c) {
          if (null != a)
            if (this.transparent && 0 == (b & -16777216) && (b = 0), c && null != this.__texture && null != this.__texture.__glFramebuffer && "opengl" == Ja.get_current().stage.__renderer.__type) {
              c = Ja.get_current().stage.__renderer.__context3D;
              var d = !this.rect.equals(a),
                e = c.__state.renderToTexture,
                f = c.__state.renderToTextureDepthStencil,
                g = c.__state.renderToTextureAntiAlias,
                h = c.__state.renderToTextureSurfaceSelector;
              c.setRenderToTexture(this.__texture);
              d && c.setScissorRectangle(a);
              c.clear((b >>> 16 & 255) / 255, (b >>> 8 & 255) / 255, (b & 255) / 255, this.transparent ? (b >>> 24 & 255) / 255 : 1, 0, 0, 1);
              d && c.setScissorRectangle(null);
              null != e ? c.setRenderToTexture(e, f, g, h) : c.setRenderToBackBuffer()
            } else this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1)
        },
        __fromBase64: function(a, b) {
          a =
            Hb.fromBase64(a, b);
          this.__fromImage(a)
        },
        __fromBytes: function(a, b) {
          a = Hb.fromBytes(Cb.toBytes(a));
          this.__fromImage(a);
          null != b && this.__applyAlpha(b)
        },
        __fromFile: function(a) {
          a = Hb.fromFile(a);
          this.__fromImage(a)
        },
        __fromImage: function(a) {
          null != a && null != a.buffer && (this.image = a, this.width = a.width, this.height = a.height, this.rect = new ha(0, 0, a.width, a.height), this.__textureWidth = this.width, this.__textureHeight = this.height, this.__isValid = this.readable = !0)
        },
        __getBounds: function(a, b) {
          var c = ha.__pool.get();
          this.rect.__transform(c,
            b);
          a.__expand(c.x, c.y, c.width, c.height);
          ha.__pool.release(c)
        },
        __loadFromBase64: function(a, b) {
          var c = this;
          return Hb.loadFromBase64(a, b).then(function(a) {
            c.__fromImage(a);
            return lb.withValue(c)
          })
        },
        __loadFromBytes: function(a, b) {
          var c = this;
          return Hb.loadFromBytes(Cb.toBytes(a)).then(function(a) {
            c.__fromImage(a);
            null != b && c.__applyAlpha(b);
            return lb.withValue(c)
          })
        },
        __loadFromFile: function(a) {
          var b = this;
          return Hb.loadFromFile(a).then(function(a) {
            b.__fromImage(a);
            return lb.withValue(b)
          })
        },
        __resize: function(a,
          b) {
          this.width = a;
          this.height = b;
          this.rect.width = a;
          this.rect.height = b;
          this.__textureWidth = a;
          this.__textureHeight = b
        },
        __setUVRect: function(a, b, c, d, e) {
          if (null != this.getVertexBuffer(a) && (d != this.__uvRect.width || e != this.__uvRect.height || b != this.__uvRect.x || c != this.__uvRect.y)) {
            null == this.__uvRect && (this.__uvRect = new ha);
            this.__uvRect.setTo(b, c, d, e);
            a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
            c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
            b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
            var f = 0 < this.__textureHeight ?
              e / this.__textureHeight : 0;
            this.__vertexBufferData[0] = d;
            this.__vertexBufferData[1] = e;
            this.__vertexBufferData[3] = a + b;
            this.__vertexBufferData[4] = c + f;
            this.__vertexBufferData[15] = e;
            this.__vertexBufferData[17] = a;
            this.__vertexBufferData[18] = c + f;
            this.__vertexBufferData[28] = d;
            this.__vertexBufferData[31] = a + b;
            this.__vertexBufferData[32] = c;
            this.__vertexBufferData[45] = a;
            this.__vertexBufferData[46] = c;
            this.__vertexBuffer.uploadFromTypedArray(Xg.toArrayBufferView(this.__vertexBufferData))
          }
        },
        __sync: function() {
          va.sync(this.image,
            !1)
        },
        __update: function(a, b) {
          this.__updateTransforms()
        },
        __updateTransforms: function(a) {
          null == a ? this.__worldTransform.identity() : this.__worldTransform.copyFrom(a);
          this.__renderTransform.copyFrom(this.__worldTransform)
        },
        __class__: wa
      };
      var Xe = function() {
        Ka.call(this);
        this.__allowSmoothing = !0;
        this.__tempColorTransform = new Ec;
        this.__worldAlpha = 1
      };
      k["openfl.display.DisplayObjectRenderer"] = Xe;
      Xe.__name__ = "openfl.display.DisplayObjectRenderer";
      Xe.__super__ = Ka;
      Xe.prototype = t(Ka.prototype, {
        __allowSmoothing: null,
        __blendMode: null,
        __cleared: null,
        __context: null,
        __overrideBlendMode: null,
        __roundPixels: null,
        __stage: null,
        __tempColorTransform: null,
        __transparent: null,
        __type: null,
        __worldAlpha: null,
        __worldColorTransform: null,
        __worldTransform: null,
        __clear: function() {},
        __getAlpha: function(a) {
          return a * this.__worldAlpha
        },
        __getColorTransform: function(a) {
          return null != this.__worldColorTransform ? (this.__tempColorTransform.__copyFrom(this.__worldColorTransform), this.__tempColorTransform.__combine(a), this.__tempColorTransform) :
            a
        },
        __popMask: function() {},
        __popMaskObject: function(a, b) {},
        __popMaskRect: function() {},
        __pushMask: function(a) {},
        __pushMaskObject: function(a, b) {},
        __pushMaskRect: function(a, b) {},
        __render: function(a) {},
        __renderEvent: function(a) {
          if (null != a.__customRenderEvent && a.__renderable) {
            a.__customRenderEvent.allowSmoothing = this.__allowSmoothing;
            a.__customRenderEvent.objectMatrix.copyFrom(a.__renderTransform);
            a.__customRenderEvent.objectColorTransform.__copyFrom(a.__worldColorTransform);
            a.__customRenderEvent.renderer =
              this;
            switch (this.__type) {
              case "cairo":
                a.__customRenderEvent.type = "renderCairo";
                break;
              case "canvas":
                a.__customRenderEvent.type = "renderCanvas";
                break;
              case "dom":
                a.__customRenderEvent.type = null != a.stage && a.__worldVisible ? "renderDOM" : "clearDOM";
                break;
              case "opengl":
                this.__cleared || this.__clear();
                this.setShader(a.__worldShader);
                this.__context3D.__flushGL();
                a.__customRenderEvent.type = "renderOpenGL";
                break;
              default:
                return
            }
            this.__setBlendMode(a.__worldBlendMode);
            this.__pushMaskObject(a);
            a.dispatchEvent(a.__customRenderEvent);
            this.__popMaskObject(a);
            "opengl" == this.__type && this.setViewport()
          }
        },
        __resize: function(a, b) {},
        __setBlendMode: function(a) {},
        __shouldCacheHardware: function(a, b) {
          if (null == a) return null;
          switch (a.__drawableType) {
            case 4:
            case 5:
              if (1 == b) return !0;
              b = this.__shouldCacheHardware_DisplayObject(a, b);
              if (1 == b) return !0;
              if (null != a.__children) {
                var c = 0;
                for (a = a.__children; c < a.length;) {
                  var d = a[c];
                  ++c;
                  b = this.__shouldCacheHardware_DisplayObject(d, b);
                  if (1 == b) return !0
                }
              }
              return b;
            case 7:
              return 1 == b ? !0 : !1;
            case 9:
              return !0;
            default:
              return this.__shouldCacheHardware_DisplayObject(a,
                b)
          }
        },
        __shouldCacheHardware_DisplayObject: function(a, b) {
          return 1 == b || null != a.__filters ? !0 : 0 == b || null != a.__graphics && !Uc.isCompatible(a.__graphics) ? !1 : null
        },
        __updateCacheBitmap: function(a, b) {
          if (null == a) return !1;
          switch (a.__drawableType) {
            case 2:
              var c = a;
              if (null == c.__bitmapData || null == c.__filters && "opengl" == this.__type && null == c.__cacheBitmap) return !1;
              b = null != c.__bitmapData.image && c.__bitmapData.image.version != c.__imageVersion;
              break;
            case 7:
              var d = a;
              if (null == d.__filters && "opengl" == this.__type && null == d.__cacheBitmap &&
                !d.__domRender) return !1;
              b && (d.__renderDirty = !0);
              b = b || d.__dirty;
              break;
            case 9:
              if (null == a.__filters && "opengl" == this.__type && null == a.__cacheBitmap) return !1
          }
          if (a.__isCacheBitmapRender) return !1;
          d = Ec.__pool.get();
          d.__copyFrom(a.__worldColorTransform);
          null != this.__worldColorTransform && d.__combine(this.__worldColorTransform);
          var e = !1;
          if (a.get_cacheAsBitmap() || "opengl" != this.__type && !d.__isDefault(!0)) {
            e = null;
            var f = (b = null == a.__cacheBitmap || a.__renderDirty && (b || null != a.__children && 0 < a.__children.length) || a.opaqueBackground !=
                a.__cacheBitmapBackground) || null != a.__graphics && a.__graphics.__softwareDirty || !a.__cacheBitmapColorTransform.__equals(d, !0),
              g = b || null != a.__graphics && a.__graphics.__hardwareDirty,
              h = this.__type;
            if (f || g) "opengl" == h && 0 == this.__shouldCacheHardware(a, null) && (h = "canvas"), !f || "canvas" != h && "cairo" != h || (b = !0), g && "opengl" == h && (b = !0);
            f = b || !a.__cacheBitmap.__worldTransform.equals(a.__worldTransform);
            if ((c = null != a.__filters) && !b) {
              g = 0;
              for (var m = a.__filters; g < m.length;) {
                var l = m[g];
                ++g;
                if (l.__renderDirty) {
                  b = !0;
                  break
                }
              }
            }
            null ==
              a.__cacheBitmapMatrix && (a.__cacheBitmapMatrix = new Ea);
            g = null != a.__cacheAsBitmapMatrix ? a.__cacheAsBitmapMatrix : a.__renderTransform;
            b || g.a == a.__cacheBitmapMatrix.a && g.b == a.__cacheBitmapMatrix.b && g.c == a.__cacheBitmapMatrix.c && g.d == a.__cacheBitmapMatrix.d || (b = !0);
            !b && "opengl" != this.__type && null != a.__cacheBitmapData && null != a.__cacheBitmapData.image && a.__cacheBitmapData.image.version < a.__cacheBitmapData.__textureVersion && (b = !0);
            a.__cacheBitmapMatrix.copyFrom(g);
            a.__cacheBitmapMatrix.tx = 0;
            var p = a.__cacheBitmapMatrix.ty =
              0,
              n = 0,
              k = 0,
              q = 0;
            l = m = 0;
            if (f || b) e = ha.__pool.get(), a.__getFilterBounds(e, a.__cacheBitmapMatrix), k = Math.ceil(e.width), q = Math.ceil(e.height), m = 0 < e.x ? Math.ceil(e.x) : Math.floor(e.x), l = 0 < e.y ? Math.ceil(e.y) : Math.floor(e.y), null != a.__cacheBitmapData ? k > a.__cacheBitmapData.width || q > a.__cacheBitmapData.height ? (p = Math.ceil(Math.max(1.25 * k, a.__cacheBitmapData.width)), n = Math.ceil(Math.max(1.25 * q, a.__cacheBitmapData.height)), b = !0) : (p = a.__cacheBitmapData.width, n = a.__cacheBitmapData.height) : (p = k, n = q);
            if (b)
              if (f = !0, a.__cacheBitmapBackground =
                a.opaqueBackground, .5 <= k && .5 <= q) {
                var u = null != a.opaqueBackground && (p != k || n != q),
                  v = null != a.opaqueBackground ? -16777216 | a.opaqueBackground : 0,
                  r = u ? 0 : v,
                  t = "opengl" == this.__type;
                null == a.__cacheBitmapData || p > a.__cacheBitmapData.width || n > a.__cacheBitmapData.height ? (a.__cacheBitmapData = new wa(p, n, !0, r), null == a.__cacheBitmap && (a.__cacheBitmap = new Ac), a.__cacheBitmap.__bitmapData = a.__cacheBitmapData, a.__cacheBitmapRenderer = null) : a.__cacheBitmapData.__fillRect(a.__cacheBitmapData.rect, r, t);
                u && (e.setTo(0, 0, k, q), a.__cacheBitmapData.__fillRect(e,
                  v, t))
              } else return Ec.__pool.release(d), a.__cacheBitmap = null, a.__cacheBitmapData = null, a.__cacheBitmapData2 = null, a.__cacheBitmapData3 = null, a.__cacheBitmapRenderer = null, 7 == a.__drawableType && (d = a, null != d.__cacheBitmap && (d.__cacheBitmap.__renderTransform.tx -= d.__offsetX, d.__cacheBitmap.__renderTransform.ty -= d.__offsetY)), !0;
            else a.__cacheBitmapData = a.__cacheBitmap.get_bitmapData(), a.__cacheBitmapData2 = null, a.__cacheBitmapData3 = null;
            if (f || b) a.__cacheBitmap.__worldTransform.copyFrom(a.__worldTransform),
              g == a.__renderTransform ? (a.__cacheBitmap.__renderTransform.identity(), a.__cacheBitmap.__renderTransform.tx = a.__renderTransform.tx + m, a.__cacheBitmap.__renderTransform.ty = a.__renderTransform.ty + l) : (a.__cacheBitmap.__renderTransform.copyFrom(a.__cacheBitmapMatrix), a.__cacheBitmap.__renderTransform.invert(), a.__cacheBitmap.__renderTransform.concat(a.__renderTransform), a.__cacheBitmap.__renderTransform.tx += m, a.__cacheBitmap.__renderTransform.ty += l);
            a.__cacheBitmap.smoothing = this.__allowSmoothing;
            a.__cacheBitmap.__renderable =
              a.__renderable;
            a.__cacheBitmap.__worldAlpha = a.__worldAlpha;
            a.__cacheBitmap.__worldBlendMode = a.__worldBlendMode;
            a.__cacheBitmap.__worldShader = a.__worldShader;
            a.__cacheBitmap.set_mask(a.__mask);
            if (b) {
              if (null == a.__cacheBitmapRenderer || h != a.__cacheBitmapRenderer.__type) "opengl" == h ? a.__cacheBitmapRenderer = new Jb(K.__cast(this, Jb).__context3D, a.__cacheBitmapData) : (null == a.__cacheBitmapData.image && (a.__cacheBitmapData = new wa(p, n, !0, null != a.opaqueBackground ? -16777216 | a.opaqueBackground : 0), a.__cacheBitmap.__bitmapData =
                a.__cacheBitmapData), va.convertToCanvas(a.__cacheBitmapData.image), a.__cacheBitmapRenderer = new Dg(a.__cacheBitmapData.image.buffer.__srcContext)), a.__cacheBitmapRenderer.__worldTransform = new Ea, a.__cacheBitmapRenderer.__worldColorTransform = new Ec;
              null == a.__cacheBitmapColorTransform && (a.__cacheBitmapColorTransform = new Ec);
              a.__cacheBitmapRenderer.__stage = a.stage;
              a.__cacheBitmapRenderer.__allowSmoothing = this.__allowSmoothing;
              a.__cacheBitmapRenderer.__setBlendMode(10);
              a.__cacheBitmapRenderer.__worldAlpha =
                1 / a.__worldAlpha;
              a.__cacheBitmapRenderer.__worldTransform.copyFrom(a.__renderTransform);
              a.__cacheBitmapRenderer.__worldTransform.invert();
              a.__cacheBitmapRenderer.__worldTransform.concat(a.__cacheBitmapMatrix);
              a.__cacheBitmapRenderer.__worldTransform.tx -= m;
              a.__cacheBitmapRenderer.__worldTransform.ty -= l;
              a.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(d);
              a.__cacheBitmapRenderer.__worldColorTransform.__invert();
              a.__isCacheBitmapRender = !0;
              if ("opengl" == a.__cacheBitmapRenderer.__type) {
                v = a.__cacheBitmapRenderer;
                r = v.__context3D;
                t = r.__state.renderToTexture;
                var w = r.__state.renderToTextureDepthStencil,
                  z = r.__state.renderToTextureAntiAlias,
                  Q = r.__state.renderToTextureSurfaceSelector,
                  O = this.__blendMode;
                this.__suspendClipAndMask();
                v.__copyShader(this);
                a.__cacheBitmapData.__setUVRect(r, 0, 0, k, q);
                v.__setRenderTarget(a.__cacheBitmapData);
                null != a.__cacheBitmapData.image && (a.__cacheBitmapData.__textureVersion = a.__cacheBitmapData.image.version + 1);
                a.__cacheBitmapData.__drawGL(a, v);
                if (c) {
                  var A = !1;
                  g = 0;
                  for (m = a.__filters; g <
                    m.length;) l = m[g], ++g, l.__preserveObject && (A = !0);
                  c = a.__cacheBitmapData;
                  u = null;
                  null == a.__cacheBitmapData2 || p > a.__cacheBitmapData2.width || n > a.__cacheBitmapData2.height ? a.__cacheBitmapData2 = new wa(p, n, !0, 0) : (a.__cacheBitmapData2.fillRect(a.__cacheBitmapData2.rect, 0), null != a.__cacheBitmapData2.image && (a.__cacheBitmapData2.__textureVersion = a.__cacheBitmapData2.image.version + 1));
                  a.__cacheBitmapData2.__setUVRect(r, 0, 0, k, q);
                  h = a.__cacheBitmapData2;
                  A && (null == a.__cacheBitmapData3 || p > a.__cacheBitmapData3.width ||
                    n > a.__cacheBitmapData3.height ? a.__cacheBitmapData3 = new wa(p, n, !0, 0) : (a.__cacheBitmapData3.fillRect(a.__cacheBitmapData3.rect, 0), null != a.__cacheBitmapData3.image && (a.__cacheBitmapData3.__textureVersion = a.__cacheBitmapData3.image.version + 1)), a.__cacheBitmapData3.__setUVRect(r, 0, 0, k, q), u = a.__cacheBitmapData3);
                  v.__setBlendMode(10);
                  v.__worldAlpha = 1;
                  v.__worldTransform.identity();
                  v.__worldColorTransform.__identity();
                  g = 0;
                  for (m = a.__filters; g < m.length;) {
                    l = m[g];
                    ++g;
                    l.__preserveObject && (v.__setRenderTarget(u),
                      v.__renderFilterPass(c, v.__defaultDisplayShader, l.__smooth));
                    n = 0;
                    for (k = l.__numShaderPasses; n < k;) p = n++, p = l.__initShader(v, p, l.__preserveObject ? u : null), v.__setBlendMode(l.__shaderBlendMode), v.__setRenderTarget(h), v.__renderFilterPass(c, p, l.__smooth), p = c, c = h, h = p;
                    l.__renderDirty = !1
                  }
                  a.__cacheBitmap.__bitmapData = c
                }
                this.__blendMode = 10;
                this.__setBlendMode(O);
                this.__copyShader(v);
                null != t ? r.setRenderToTexture(t, w, z, Q) : r.setRenderToBackBuffer();
                this.__resumeClipAndMask(v);
                this.setViewport();
                a.__cacheBitmapColorTransform.__copyFrom(d)
              } else {
                a.__cacheBitmapData.__drawCanvas(a,
                  a.__cacheBitmapRenderer);
                if (c) {
                  A = k = !1;
                  g = 0;
                  for (m = a.__filters; g < m.length;) l = m[g], ++g, l.__needSecondBitmapData && (k = !0), l.__preserveObject && (A = !0);
                  c = a.__cacheBitmapData;
                  u = null;
                  k ? (null == a.__cacheBitmapData2 || null == a.__cacheBitmapData2.image || p > a.__cacheBitmapData2.width || n > a.__cacheBitmapData2.height ? a.__cacheBitmapData2 = new wa(p, n, !0, 0) : a.__cacheBitmapData2.fillRect(a.__cacheBitmapData2.rect, 0), h = a.__cacheBitmapData2) : h = c;
                  A && (null == a.__cacheBitmapData3 || null == a.__cacheBitmapData3.image || p > a.__cacheBitmapData3.width ||
                    n > a.__cacheBitmapData3.height ? a.__cacheBitmapData3 = new wa(p, n, !0, 0) : a.__cacheBitmapData3.fillRect(a.__cacheBitmapData3.rect, 0), u = a.__cacheBitmapData3);
                  null == a.__tempPoint && (a.__tempPoint = new la);
                  n = a.__tempPoint;
                  g = 0;
                  for (m = a.__filters; g < m.length;) l = m[g], ++g, l.__preserveObject && u.copyPixels(c, c.rect, n), p = l.__applyFilter(h, c, c.rect, n), l.__preserveObject && p.draw(u, null, null != a.__objectTransform ? a.__objectTransform.get_colorTransform() : null), l.__renderDirty = !1, k && p == h && (p = c, c = h, h = p);
                  a.__cacheBitmapData !=
                    c && (p = a.__cacheBitmapData, a.__cacheBitmapData = c, a.__cacheBitmapData2 = p, a.__cacheBitmap.__bitmapData = a.__cacheBitmapData, a.__cacheBitmapRenderer = null);
                  a.__cacheBitmap.__imageVersion = a.__cacheBitmapData.__textureVersion
                }
                a.__cacheBitmapColorTransform.__copyFrom(d);
                a.__cacheBitmapColorTransform.__isDefault(!0) || (a.__cacheBitmapColorTransform.alphaMultiplier = 1, a.__cacheBitmapData.colorTransform(a.__cacheBitmapData.rect, a.__cacheBitmapColorTransform))
              }
              a.__isCacheBitmapRender = !1
            }(f || b) && ha.__pool.release(e);
            e = f
          } else null != a.__cacheBitmap && ("dom" == this.__type && this.__renderDrawableClear(a.__cacheBitmap), a.__cacheBitmap = null, a.__cacheBitmapData = null, a.__cacheBitmapData2 = null, a.__cacheBitmapData3 = null, a.__cacheBitmapColorTransform = null, a.__cacheBitmapRenderer = null, e = !0);
          Ec.__pool.release(d);
          e && 7 == a.__drawableType && (d = a, null != d.__cacheBitmap && (d.__cacheBitmap.__renderTransform.tx -= d.__offsetX, d.__cacheBitmap.__renderTransform.ty -= d.__offsetY));
          return e
        },
        __class__: Xe
      });
      var Gm = function(a) {
        Xe.call(this)
      };
      k["openfl.display.CairoRenderer"] =
        Gm;
      Gm.__name__ = "openfl.display.CairoRenderer";
      Gm.__super__ = Xe;
      Gm.prototype = t(Xe.prototype, {
        cairo: null,
        __matrix: null,
        __matrix3: null,
        applyMatrix: function(a, b) {
          null == b && (b = this.cairo);
          this.__matrix.copyFrom(a);
          this.cairo == b && null != this.__worldTransform && this.__matrix.concat(this.__worldTransform);
          this.__matrix3.a = this.__matrix.a;
          this.__matrix3.b = this.__matrix.b;
          this.__matrix3.c = this.__matrix.c;
          this.__matrix3.d = this.__matrix.d;
          this.__roundPixels ? (this.__matrix3.tx = Math.round(this.__matrix.tx), this.__matrix3.ty =
            Math.round(this.__matrix.ty)) : (this.__matrix3.tx = this.__matrix.tx, this.__matrix3.ty = this.__matrix.ty);
          b.set_matrix(this.__matrix3)
        },
        __clear: function() {
          if (null != this.cairo && (this.cairo.identityMatrix(), null != this.__stage && this.__stage.__clearBeforeRender)) {
            var a = this.__blendMode;
            this.__setBlendMode(10);
            this.cairo.setSourceRGB(this.__stage.__colorSplit[0], this.__stage.__colorSplit[1], this.__stage.__colorSplit[2]);
            this.cairo.paint();
            this.__setBlendMode(a)
          }
        },
        __popMask: function() {
          this.cairo.restore()
        },
        __popMaskObject: function(a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect()
        },
        __popMaskRect: function() {
          this.cairo.restore()
        },
        __pushMask: function(a) {
          this.cairo.save();
          this.applyMatrix(a.__renderTransform, this.cairo);
          this.cairo.newPath();
          this.__renderDrawableMask(a);
          this.cairo.clip()
        },
        __pushMaskObject: function(a, b) {
          null == b && (b = !0);
          b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender ||
            null == a.__mask || this.__pushMask(a.__mask)
        },
        __pushMaskRect: function(a, b) {
          this.cairo.save();
          this.applyMatrix(b, this.cairo);
          this.cairo.newPath();
          this.cairo.rectangle(a.x, a.y, a.width, a.height);
          this.cairo.clip()
        },
        __render: function(a) {
          null != this.cairo && this.__renderDrawable(a)
        },
        __renderDrawable: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 6:
              !a.__renderable || 0 >= a.__worldAlpha || null == a.__currentState || (this.__pushMaskObject(a), this.__renderDrawable(a.__currentState), this.__popMaskObject(a), this.__renderEvent(a))
          }
        },
        __renderDrawableMask: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 2:
              this.cairo.rectangle(0, 0, a.get_width(), a.get_height());
              break;
            case 6:
              this.__renderDrawableMask(a.__currentState)
          }
        },
        __setBlendMode: function(a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a, this.__setBlendModeCairo(this.cairo, a))
        },
        __setBlendModeCairo: function(a, b) {
          switch (b) {
            case 0:
              a.setOperator(12);
              break;
            case 2:
              a.setOperator(17);
              break;
            case 3:
              a.setOperator(23);
              break;
            case 5:
              a.setOperator(21);
              break;
            case 7:
              a.setOperator(2);
              break;
            case 8:
              a.setOperator(18);
              break;
            case 9:
              a.setOperator(14);
              break;
            case 11:
              a.setOperator(16);
              break;
            case 12:
              a.setOperator(15);
              break;
            default:
              a.setOperator(2)
          }
        },
        __class__: Gm
      });
      var Dg = function(a) {
        this.pixelRatio = 1;
        Xe.call(this);
        this.context = a;
        this.__tempMatrix = new Ea;
        this.__type = "canvas"
      };
      k["openfl.display.CanvasRenderer"] = Dg;
      Dg.__name__ = "openfl.display.CanvasRenderer";
      Dg.__super__ = Xe;
      Dg.prototype = t(Xe.prototype, {
        context: null,
        pixelRatio: null,
        __isDOM: null,
        __tempMatrix: null,
        applySmoothing: function(a, b) {
          a.imageSmoothingEnabled = b
        },
        setTransform: function(a, b) {
          null == b ? b = this.context : this.context == b && null != this.__worldTransform && (this.__tempMatrix.copyFrom(a), this.__tempMatrix.concat(this.__worldTransform), a = this.__tempMatrix);
          this.__roundPixels ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0) : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty)
        },
        __clear: function() {
          if (null != this.__stage) {
            var a = this.__blendMode;
            this.__blendMode = null;
            this.__setBlendMode(10);
            this.context.setTransform(1, 0,
              0, 1, 0, 0);
            this.context.globalAlpha = 1;
            !this.__stage.__transparent && this.__stage.__clearBeforeRender ? (this.context.fillStyle = this.__stage.__colorString, this.context.fillRect(0, 0, this.__stage.stageWidth * this.__stage.window.__scale, this.__stage.stageHeight * this.__stage.window.__scale)) : this.__stage.__transparent && this.__stage.__clearBeforeRender && this.context.clearRect(0, 0, this.__stage.stageWidth * this.__stage.window.__scale, this.__stage.stageHeight * this.__stage.window.__scale);
            this.__setBlendMode(a)
          }
        },
        __popMask: function() {
          this.context.restore()
        },
        __popMaskObject: function(a, b) {
          null == b && (b = !0);
          a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect()
        },
        __popMaskRect: function() {
          this.context.restore()
        },
        __pushMask: function(a) {
          this.context.save();
          this.setTransform(a.__renderTransform, this.context);
          this.context.beginPath();
          this.__renderDrawableMask(a);
          this.context.closePath();
          this.context.clip()
        },
        __pushMaskObject: function(a, b) {
          null == b && (b = !0);
          b && null != a.__scrollRect &&
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          a.__isCacheBitmapRender || null == a.__mask || this.__pushMask(a.__mask)
        },
        __pushMaskRect: function(a, b) {
          this.context.save();
          this.setTransform(b, this.context);
          this.context.beginPath();
          this.context.rect(a.x, a.y, a.width, a.height);
          this.context.clip()
        },
        __render: function(a) {
          this.__renderDrawable(a)
        },
        __renderDrawable: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 0:
              Hm.renderDrawable(a, this);
              break;
            case 2:
              Pi.renderDrawable(a, this);
              break;
            case 3:
              Dh.renderDrawable(a,
                this);
              break;
            case 4:
            case 5:
              Im.renderDrawable(a, this);
              break;
            case 6:
              Jm.renderDrawable(a, this);
              break;
            case 7:
              X.renderDrawable(a, this);
              break;
            case 8:
              ai.renderDrawable(a, this);
              break;
            case 9:
              Vf.renderDrawable(a, this)
          }
        },
        __renderDrawableMask: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 0:
              Hm.renderDrawableMask(a, this);
              break;
            case 2:
              Pi.renderDrawableMask(a, this);
              break;
            case 3:
              Dh.renderDrawableMask(a, this);
              break;
            case 4:
            case 5:
              Im.renderDrawableMask(a, this);
              break;
            case 6:
              Jm.renderDrawableMask(a, this);
              break;
            case 7:
              X.renderDrawableMask(a,
                this);
              break;
            case 8:
              ai.renderDrawableMask(a, this);
              break;
            case 9:
              Vf.renderDrawableMask(a, this)
          }
        },
        __setBlendMode: function(a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a, this.__setBlendModeContext(this.context, a))
        },
        __setBlendModeContext: function(a, b) {
          switch (b) {
            case 0:
              a.globalCompositeOperation = "lighter";
              break;
            case 2:
              a.globalCompositeOperation = "darken";
              break;
            case 3:
              a.globalCompositeOperation = "difference";
              break;
            case 5:
              a.globalCompositeOperation = "hard-light";
              break;
            case 8:
              a.globalCompositeOperation = "lighten";
              break;
            case 9:
              a.globalCompositeOperation = "multiply";
              break;
            case 11:
              a.globalCompositeOperation = "overlay";
              break;
            case 12:
              a.globalCompositeOperation = "screen";
              break;
            default:
              a.globalCompositeOperation = "source-over"
          }
        },
        __class__: Dg
      });
      var Tq = {
          fromInt: function(a) {
            return a
          },
          fromString: function(a) {
            switch (a) {
              case "none":
                return 0;
              case "round":
                return 1;
              case "square":
                return 2;
              default:
                return null
            }
          },
          toInt: function(a) {
            return a
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "none";
              case 1:
                return "round";
              case 2:
                return "square";
              default:
                return null
            }
          }
        },
        Km = function(a) {
          ya.call(this);
          this.__drawableType = 10;
          this.__element = a
        };
      k["openfl.display.DOMElement"] = Km;
      Km.__name__ = "openfl.display.DOMElement";
      Km.__super__ = ya;
      Km.prototype = t(ya.prototype, {
        __active: null,
        __element: null,
        __class__: Km
      });
      var Qi = function(a) {
        this.pixelRatio = 1;
        Xe.call(this);
        this.element = a;
        ya.__supportDOM = !0;
        a = window.getComputedStyle(document.documentElement, "");
        a = (Array.prototype.slice.call(a).join("").match(/-(moz|webkit|ms)-/) ||
          "" === a.OLink && ["", "o"])[1];
        "WebKit|Moz|MS|O".match(new RegExp("(" + a + ")", "i"));
        a[0].toUpperCase();
        a.substr(1);
        this.__vendorPrefix = a;
        this.__transformProperty = "webkit" == a ? "-webkit-transform" : "transform";
        this.__transformOriginProperty = "webkit" == a ? "-webkit-transform-origin" : "transform-origin";
        this.__clipRects = [];
        this.__z = this.__numClipRects = 0;
        this.__type = "dom";
        this.__canvasRenderer = new Dg(null);
        this.__canvasRenderer.__isDOM = !0
      };
      k["openfl.display.DOMRenderer"] = Qi;
      Qi.__name__ = "openfl.display.DOMRenderer";
      Qi.__super__ = Xe;
      Qi.prototype = t(Xe.prototype, {
        element: null,
        pixelRatio: null,
        __canvasRenderer: null,
        __clipRects: null,
        __currentClipRect: null,
        __numClipRects: null,
        __transformOriginProperty: null,
        __transformProperty: null,
        __vendorPrefix: null,
        __z: null,
        applyStyle: function(a, b) {
          null != a && null != b && (null != a.__style && b.parentElement == this.element || this.__initializeElement(a, b), a.__style = b.style, this.__updateClip(a), this.__applyStyle(a, !0, !0, !0))
        },
        clearStyle: function(a) {
          null != a && a.parentElement == this.element && this.element.removeChild(a)
        },
        __applyStyle: function(a, b, c, d) {
          var e = a.__style;
          if (b && a.__renderTransformChanged) {
            b = a.__renderTransform;
            var f = this.__roundPixels;
            null == f && (f = !1);
            e.setProperty(this.__transformProperty, f ? "matrix3d(" + b.a + ", " + b.b + ", 0, 0, " + b.c + ", " + b.d + ", 0, 0, 0, 0, 1, 0, " + (b.tx | 0) + ", " + (b.ty | 0) + ", 0, 1)" : "matrix3d(" + b.a + ", " + b.b + ", 0, 0, " + b.c + ", " + b.d + ", 0, 0, 0, 0, 1, 0, " + b.tx + ", " + b.ty + ", 0, 1)", null)
          }
          a.__worldZ != ++this.__z && (a.__worldZ = this.__z, e.setProperty("z-index", null == a.__worldZ ? "null" : "" + a.__worldZ, null));
          c && a.__worldAlphaChanged && (1 > a.__worldAlpha ? e.setProperty("opacity", null == a.__worldAlpha ? "null" : "" + a.__worldAlpha, null) : e.removeProperty("opacity"));
          d && a.__worldClipChanged && (null == a.__worldClip ? e.removeProperty("clip") : (a = a.__worldClip, e.setProperty("clip", "rect(" + a.y + "px, " + a.get_right() + "px, " + a.get_bottom() + "px, " + a.x + "px)", null)))
        },
        __initializeElement: function(a, b) {
          var c = a.__style = b.style;
          c.setProperty("position", "absolute", null);
          c.setProperty("top", "0", null);
          c.setProperty("left", "0", null);
          c.setProperty(this.__transformOriginProperty,
            "0 0 0", null);
          this.element.appendChild(b);
          a.__worldAlphaChanged = !0;
          a.__renderTransformChanged = !0;
          a.__worldVisibleChanged = !0;
          a.__worldClipChanged = !0;
          a.__worldClip = null;
          a.__worldZ = -1
        },
        __popMask: function() {
          this.__popMaskRect()
        },
        __popMaskObject: function(a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && this.__popMaskRect()
        },
        __popMaskRect: function() {
          0 < this.__numClipRects && (this.__numClipRects--, this.__currentClipRect = 0 < this.__numClipRects ? this.__clipRects[this.__numClipRects -
            1] : null)
        },
        __pushMask: function(a) {
          this.__pushMaskRect(a.getBounds(a), a.__renderTransform)
        },
        __pushMaskObject: function(a, b) {
          null == b && (b = !0);
          b && null != a.__scrollRect && this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
          null != a.__mask && this.__pushMask(a.__mask)
        },
        __pushMaskRect: function(a, b) {
          this.__numClipRects == this.__clipRects.length && (this.__clipRects[this.__numClipRects] = new ha);
          var c = this.__clipRects[this.__numClipRects];
          a.__transform(c, b);
          0 < this.__numClipRects && (a = this.__clipRects[this.__numClipRects -
            1], c.__contract(a.x, a.y, a.width, a.height));
          0 > c.height && (c.height = 0);
          0 > c.width && (c.width = 0);
          this.__currentClipRect = c;
          this.__numClipRects++
        },
        __render: function(a) {
          this.element.style.background = this.__stage.__transparent ? "none" : this.__stage.__colorString;
          this.__z = 1;
          this.__renderDrawable(a)
        },
        __renderDrawable: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 2:
              Vc.renderDrawable(a, this);
              break;
            case 3:
              Wf.renderDrawable(a, this);
              break;
            case 4:
            case 5:
              Lm.renderDrawable(a, this);
              break;
            case 6:
              Mm.renderDrawable(a,
                this);
              break;
            case 7:
              dc.renderDrawable(a, this);
              break;
            case 8:
              ah.renderDrawable(a, this);
              break;
            case 9:
              Eg.renderDrawable(a, this);
              break;
            case 10:
              null != a.stage && a.__worldVisible && a.__renderable ? (a.__active || (this.__initializeElement(a, a.__element), a.__active = !0), this.__updateClip(a), this.__applyStyle(a, !0, !0, !0)) : a.__active && (this.element.removeChild(a.__element), a.__active = !1), Wf.renderDrawable(a, this)
          }
        },
        __renderDrawableClear: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 2:
              Vc.renderDrawableClear(a,
                this);
              break;
            case 3:
              Wf.renderDrawableClear(a, this);
              break;
            case 4:
            case 5:
              Lm.renderDrawableClear(a, this);
              break;
            case 6:
              Mm.renderDrawableClear(a, this);
              break;
            case 7:
              dc.renderDrawableClear(a, this);
              break;
            case 8:
              ah.renderDrawableClear(a, this);
              break;
            case 9:
              Eg.renderDrawableClear(a, this)
          }
        },
        __setBlendMode: function(a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          this.__blendMode != a && (this.__blendMode = a)
        },
        __updateClip: function(a) {
          if (null == this.__currentClipRect) a.__worldClipChanged = null != a.__worldClip,
            a.__worldClip = null;
          else {
            null == a.__worldClip && (a.__worldClip = new ha);
            var b = ha.__pool.get(),
              c = Ea.__pool.get();
            c.copyFrom(a.__renderTransform);
            c.invert();
            this.__currentClipRect.__transform(b, c);
            b.equals(a.__worldClip) ? a.__worldClipChanged = !1 : (a.__worldClip.copyFrom(b), a.__worldClipChanged = !0);
            ha.__pool.release(b);
            Ea.__pool.release(c)
          }
        },
        __class__: Qi
      });
      var gf = function(a) {
        this.byteCode = a;
        this.precisionHint = 1;
        this.__glSourceDirty = !0;
        this.__numPasses = 1;
        this.__data = zr._new(a)
      };
      k["openfl.display.Shader"] = gf;
      gf.__name__ = "openfl.display.Shader";
      gf.prototype = {
        byteCode: null,
        glProgram: null,
        precisionHint: null,
        program: null,
        __alpha: null,
        __bitmap: null,
        __colorMultiplier: null,
        __colorOffset: null,
        __context: null,
        __data: null,
        __glFragmentSource: null,
        __glSourceDirty: null,
        __glVertexSource: null,
        __hasColorTransform: null,
        __inputBitmapData: null,
        __isGenerated: null,
        __matrix: null,
        __numPasses: null,
        __paramBool: null,
        __paramFloat: null,
        __paramInt: null,
        __position: null,
        __textureCoord: null,
        __texture: null,
        __textureSize: null,
        __clearUseArray: function() {
          for (var a =
              0, b = this.__paramBool; a < b.length;) {
            var c = b[a];
            ++a;
            c.__useArray = !1
          }
          a = 0;
          for (b = this.__paramFloat; a < b.length;) c = b[a], ++a, c.__useArray = !1;
          a = 0;
          for (b = this.__paramInt; a < b.length;) c = b[a], ++a, c.__useArray = !1
        },
        __createGLShader: function(a, b) {
          var c = this.__context.gl,
            d = c.createShader(b);
          c.shaderSource(d, a);
          c.compileShader(d);
          0 == c.getShaderParameter(d, c.COMPILE_STATUS) && (b = b == c.VERTEX_SHADER ? "Error compiling vertex shader" : "Error compiling fragment shader", b += "\n" + c.getShaderInfoLog(d), Na.error(b + ("\n" + a), {
            fileName: "openfl/display/Shader.hx",
            lineNumber: 331,
            className: "openfl.display.Shader",
            methodName: "__createGLShader"
          }));
          return d
        },
        __createGLProgram: function(a, b) {
          var c = this.__context.gl;
          a = this.__createGLShader(a, c.VERTEX_SHADER);
          var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
          b = c.createProgram();
          for (var e = 0, f = this.__paramFloat; e < f.length;) {
            var g = f[e];
            ++e;
            if (-1 < g.name.indexOf("Position") && W.startsWith(g.name, "openfl_")) {
              c.bindAttribLocation(b, 0, g.name);
              break
            }
          }
          c.attachShader(b, a);
          c.attachShader(b, d);
          c.linkProgram(b);
          0 == c.getProgramParameter(b,
            c.LINK_STATUS) && (c = "Unable to initialize the shader program\n" + c.getProgramInfoLog(b), Na.error(c, {
            fileName: "openfl/display/Shader.hx",
            lineNumber: 364,
            className: "openfl.display.Shader",
            methodName: "__createGLProgram"
          }));
          return b
        },
        __disable: function() {
          null != this.program && this.__disableGL()
        },
        __disableGL: function() {
          for (var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData; c < d.length;) {
            var e = d[c];
            ++c;
            e.__disableGL(this.__context, b);
            ++b
          }
          c = 0;
          for (d = this.__paramBool; c < d.length;) b = d[c], ++c, b.__disableGL(this.__context);
          c = 0;
          for (d = this.__paramFloat; c < d.length;) b = d[c], ++c, b.__disableGL(this.__context);
          c = 0;
          for (d = this.__paramInt; c < d.length;) b = d[c], ++c, b.__disableGL(this.__context);
          this.__context.__bindGLArrayBuffer(null);
          "opengl" == this.__context.__context.type && a.disable(a.TEXTURE_2D)
        },
        __enable: function() {
          this.__init();
          null != this.program && this.__enableGL()
        },
        __enableGL: function() {
          for (var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData; c < d.length;) {
            var e = d[c];
            ++c;
            b.uniform1i(e.index, a);
            ++a
          }
          "opengl" == this.__context.__context.type &&
            0 < a && b.enable(b.TEXTURE_2D)
        },
        __init: function() {
          null == this.__data && (this.__data = zr._new(null));
          null == this.__glFragmentSource || null == this.__glVertexSource || null != this.program && !this.__glSourceDirty || this.__initGL()
        },
        __initGL: function() {
          if (this.__glSourceDirty || null == this.__paramBool) this.__glSourceDirty = !1, this.program = null, this.__inputBitmapData = [], this.__paramBool = [], this.__paramFloat = [], this.__paramInt = [], this.__processGLData(this.get_glVertexSource(), "attribute"), this.__processGLData(this.get_glVertexSource(),
            "uniform"), this.__processGLData(this.get_glFragmentSource(), "uniform");
          if (null != this.__context && null == this.program) {
            var a = this.__context.gl,
              b = "#ifdef GL_ES\n\t\t\t\t" + (1 == this.precisionHint ? "#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\t\tprecision highp float;\n\t\t\t\t#else\n\t\t\t\tprecision mediump float;\n\t\t\t\t#endif" : "precision lowp float;") + "\n\t\t\t\t#endif\n\t\t\t\t",
              c = b + this.get_glVertexSource();
            b += this.get_glFragmentSource();
            var d = c + b;
            Object.prototype.hasOwnProperty.call(this.__context.__programs.h,
              d) ? this.program = this.__context.__programs.h[d] : (this.program = this.__context.createProgram(1), this.program.__glProgram = this.__createGLProgram(c, b), this.__context.__programs.h[d] = this.program);
            if (null != this.program) {
              this.glProgram = this.program.__glProgram;
              c = 0;
              for (b = this.__inputBitmapData; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
              c = 0;
              for (b = this.__paramBool; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram,
                d.name) : a.getAttribLocation(this.glProgram, d.name);
              c = 0;
              for (b = this.__paramFloat; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name);
              c = 0;
              for (b = this.__paramInt; c < b.length;) d = b[c], ++c, d.index = d.__isUniform ? a.getUniformLocation(this.glProgram, d.name) : a.getAttribLocation(this.glProgram, d.name)
            }
          }
        },
        __processGLData: function(a, b) {
          var c = 0,
            d;
          for (d = "uniform" == b ? new nb("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "") : new nb("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)",
              ""); d.matchSub(a, c);) {
            var e = d.matched(1);
            var f = d.matched(2);
            if (!W.startsWith(f, "gl_")) {
              c = "uniform" == b;
              if (W.startsWith(e, "sampler")) {
                e = new Nm;
                e.name = f;
                e.__isUniform = c;
                this.__inputBitmapData.push(e);
                switch (f) {
                  case "bitmap":
                    this.__bitmap = e;
                    break;
                  case "openfl_Texture":
                    this.__texture = e
                }
                this.__data[f] = e;
                this.__isGenerated && (this[f] = e)
              } else if (!Object.prototype.hasOwnProperty.call(this.__data, f) || null == Y.field(this.__data, f)) {
                switch (e) {
                  case "bool":
                    var g = 0;
                    break;
                  case "bvec2":
                    g = 1;
                    break;
                  case "bvec3":
                    g = 2;
                    break;
                  case "bvec4":
                    g = 3;
                    break;
                  case "dvec2":
                  case "vec2":
                    g = 5;
                    break;
                  case "dvec3":
                  case "vec3":
                    g = 6;
                    break;
                  case "double":
                  case "float":
                    g = 4;
                    break;
                  case "ivec3":
                  case "uvec3":
                    g = 10;
                    break;
                  case "ivec4":
                  case "uvec4":
                    g = 11;
                    break;
                  case "mat2":
                  case "mat2x2":
                    g = 12;
                    break;
                  case "mat2x3":
                    g = 13;
                    break;
                  case "mat2x4":
                    g = 14;
                    break;
                  case "mat3x2":
                    g = 15;
                    break;
                  case "mat3":
                  case "mat3x3":
                    g = 16;
                    break;
                  case "mat3x4":
                    g = 17;
                    break;
                  case "mat4":
                  case "mat4x4":
                    g = 20;
                    break;
                  case "mat4x2":
                    g = 18;
                    break;
                  case "mat4x3":
                    g = 19;
                    break;
                  case "int":
                  case "uint":
                    g = 8;
                    break;
                  case "ivec2":
                  case "uvec2":
                    g =
                      9;
                    break;
                  case "dvec4":
                  case "vec4":
                    g = 7;
                    break;
                  default:
                    g = null
                }
                switch (g) {
                  case 1:
                  case 5:
                  case 9:
                    e = 2;
                    break;
                  case 3:
                  case 7:
                  case 11:
                  case 12:
                    e = 4;
                    break;
                  case 2:
                  case 6:
                  case 10:
                    e = 3;
                    break;
                  case 16:
                    e = 9;
                    break;
                  case 20:
                    e = 16;
                    break;
                  default:
                    e = 1
                }
                switch (g) {
                  case 12:
                    var h = 2;
                    break;
                  case 16:
                    h = 3;
                    break;
                  case 20:
                    h = 4;
                    break;
                  default:
                    h = 1
                }
                switch (g) {
                  case 0:
                  case 1:
                  case 2:
                  case 3:
                    var m = new Ri;
                    m.set_name(f);
                    m.type = g;
                    m.__arrayLength = h;
                    m.__isBool = !0;
                    m.__isUniform = c;
                    m.__length = e;
                    this.__paramBool.push(m);
                    "openfl_HasColorTransform" == f && (this.__hasColorTransform =
                      m);
                    this.__data[f] = m;
                    this.__isGenerated && (this[f] = m);
                    break;
                  case 8:
                  case 9:
                  case 10:
                  case 11:
                    m = new Ri;
                    m.set_name(f);
                    m.type = g;
                    m.__arrayLength = h;
                    m.__isInt = !0;
                    m.__isUniform = c;
                    m.__length = e;
                    this.__paramInt.push(m);
                    this.__data[f] = m;
                    this.__isGenerated && (this[f] = m);
                    break;
                  default:
                    m = new Ri;
                    m.set_name(f);
                    m.type = g;
                    m.__arrayLength = h;
                    0 < h && (g = h * h, g = null != g ? new Float32Array(g) : null, m.__uniformMatrix = g);
                    m.__isFloat = !0;
                    m.__isUniform = c;
                    m.__length = e;
                    this.__paramFloat.push(m);
                    if (W.startsWith(f, "openfl_")) switch (f) {
                      case "openfl_Alpha":
                        this.__alpha =
                          m;
                        break;
                      case "openfl_ColorMultiplier":
                        this.__colorMultiplier = m;
                        break;
                      case "openfl_ColorOffset":
                        this.__colorOffset = m;
                        break;
                      case "openfl_Matrix":
                        this.__matrix = m;
                        break;
                      case "openfl_Position":
                        this.__position = m;
                        break;
                      case "openfl_TextureCoord":
                        this.__textureCoord = m;
                        break;
                      case "openfl_TextureSize":
                        this.__textureSize = m
                    }
                    this.__data[f] = m;
                    this.__isGenerated && (this[f] = m)
                }
              }
              f = d.matchedPos();
              c = f.pos + f.len
            }
          }
        },
        __update: function() {
          null != this.program && this.__updateGL()
        },
        __updateFromBuffer: function(a, b) {
          null != this.program &&
            this.__updateGLFromBuffer(a, b)
        },
        __updateGL: function() {
          for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length;) {
            var d = c[b];
            ++b;
            d.__updateGL(this.__context, a);
            ++a
          }
          b = 0;
          for (c = this.__paramBool; b < c.length;) a = c[b], ++b, a.__updateGL(this.__context);
          b = 0;
          for (c = this.__paramFloat; b < c.length;) a = c[b], ++b, a.__updateGL(this.__context);
          b = 0;
          for (c = this.__paramInt; b < c.length;) a = c[b], ++b, a.__updateGL(this.__context)
        },
        __updateGLFromBuffer: function(a, b) {
          for (var c = 0, d, e, f, g, h, m = 0, l = a.inputCount; m < l;) h = m++, d = a.inputRefs[h], e =
            a.inputs[h], f = a.inputFilter[h], g = a.inputMipFilter[h], h = a.inputWrap[h], null != e && (d.__updateGL(this.__context, c, e, f, g, h), ++c);
          m = this.__context.gl;
          0 < a.paramDataLength ? (null == a.paramDataBuffer && (a.paramDataBuffer = m.createBuffer()), this.__context.__bindGLArrayBuffer(a.paramDataBuffer), cc.bufferData(m, m.ARRAY_BUFFER, a.paramData, m.DYNAMIC_DRAW)) : this.__context.__bindGLArrayBuffer(null);
          e = d = c = 0;
          f = a.paramBoolCount;
          g = a.paramFloatCount;
          var p = a.paramData,
            n = null,
            k = null,
            q = null;
          m = 0;
          for (l = a.paramCount; m < l;) {
            h = m++;
            var u = !1;
            if (h < f) {
              var v = a.paramRefs_Bool[c];
              for (var r = 0, t = a.overrideBoolCount; r < t;) {
                var w = r++;
                if (v.name == a.overrideBoolNames[w]) {
                  n = a.overrideBoolValues[w];
                  u = !0;
                  break
                }
              }
              u ? v.__updateGL(this.__context, n) : v.__updateGLFromBuffer(this.__context, p, a.paramPositions[h], a.paramLengths[h], b);
              ++c
            } else if (h < f + g) {
              v = a.paramRefs_Float[d];
              r = 0;
              for (t = a.overrideFloatCount; r < t;)
                if (w = r++, v.name == a.overrideFloatNames[w]) {
                  k = a.overrideFloatValues[w];
                  u = !0;
                  break
                } u ? v.__updateGL(this.__context, k) : v.__updateGLFromBuffer(this.__context,
                p, a.paramPositions[h], a.paramLengths[h], b);
              ++d
            } else {
              v = a.paramRefs_Int[e];
              r = 0;
              for (t = a.overrideIntCount; r < t;)
                if (w = r++, v.name == a.overrideIntNames[w]) {
                  q = a.overrideIntValues[w];
                  u = !0;
                  break
                } u ? v.__updateGL(this.__context, q) : v.__updateGLFromBuffer(this.__context, p, a.paramPositions[h], a.paramLengths[h], b);
              ++e
            }
          }
        },
        get_data: function() {
          (this.__glSourceDirty || null == this.__data) && this.__init();
          return this.__data
        },
        set_data: function(a) {
          return this.__data = a
        },
        get_glFragmentSource: function() {
          return this.__glFragmentSource
        },
        set_glFragmentSource: function(a) {
          a != this.__glFragmentSource && (this.__glSourceDirty = !0);
          return this.__glFragmentSource = a
        },
        get_glVertexSource: function() {
          return this.__glVertexSource
        },
        set_glVertexSource: function(a) {
          a != this.__glVertexSource && (this.__glSourceDirty = !0);
          return this.__glVertexSource = a
        },
        __class__: gf,
        __properties__: {
          set_glVertexSource: "set_glVertexSource",
          get_glVertexSource: "get_glVertexSource",
          set_glFragmentSource: "set_glFragmentSource",
          get_glFragmentSource: "get_glFragmentSource",
          set_data: "set_data",
          get_data: "get_data"
        }
      };
      var Om = function(a) {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
        null == this.__glVertexSource && (this.__glVertexSource = "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        gf.call(this, a);
        this.__isGenerated = !0;
        this.__initGL()
      };
      k["openfl.display.DisplayObjectShader"] = Om;
      Om.__name__ = "openfl.display.DisplayObjectShader";
      Om.__super__ = gf;
      Om.prototype = t(gf.prototype, {
        openfl_Alpha: null,
        openfl_ColorMultiplier: null,
        openfl_ColorOffset: null,
        openfl_Position: null,
        openfl_TextureCoord: null,
        openfl_Matrix: null,
        openfl_HasColorTransform: null,
        openfl_TextureSize: null,
        openfl_Texture: null,
        __class__: Om
      });
      var Yo = function(a, b) {
        Ka.call(this);
        this.name = a;
        this.frame = b
      };
      k["openfl.display.FrameLabel"] =
        Yo;
      Yo.__name__ = "openfl.display.FrameLabel";
      Yo.__super__ = Ka;
      Yo.prototype = t(Ka.prototype, {
        frame: null,
        name: null,
        __class__: Yo
      });
      var Uq = function(a, b) {
        this.script = a;
        this.frame = b
      };
      k["openfl.display.FrameScript"] = Uq;
      Uq.__name__ = "openfl.display.FrameScript";
      Uq.prototype = {
        frame: null,
        script: null,
        __class__: Uq
      };
      var Ze = function(a) {
        this.__dirty = !0;
        this.__owner = a;
        this.__commands = new Ee;
        this.__positionY = this.__positionX = this.__strokePadding = 0;
        this.__renderTransform = new Ea;
        this.__usedShaderBuffers = new bb;
        this.__worldTransform =
          new Ea;
        this.__height = this.__width = 0;
        this.__shaderBufferPool = new E(function() {
          return new Pm
        });
        this.moveTo(0, 0)
      };
      k["openfl.display.Graphics"] = Ze;
      Ze.__name__ = "openfl.display.Graphics";
      Ze.prototype = {
        __bounds: null,
        __commands: null,
        __dirty: null,
        __hardwareDirty: null,
        __height: null,
        __managed: null,
        __positionX: null,
        __positionY: null,
        __quadBuffer: null,
        __renderTransform: null,
        __shaderBufferPool: null,
        __softwareDirty: null,
        __strokePadding: null,
        __transformDirty: null,
        __triangleIndexBuffer: null,
        __triangleIndexBufferCount: null,
        __triangleIndexBufferData: null,
        __usedShaderBuffers: null,
        __vertexBuffer: null,
        __vertexBufferCount: null,
        __vertexBufferCountUVT: null,
        __vertexBufferData: null,
        __vertexBufferDataUVT: null,
        __vertexBufferUVT: null,
        __visible: null,
        __owner: null,
        __width: null,
        __worldTransform: null,
        __canvas: null,
        __context: null,
        __bitmap: null,
        beginBitmapFill: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          this.__commands.beginBitmapFill(a, null != b ? b.clone() : null, c, d);
          this.__visible = !0
        },
        beginFill: function(a, b) {
          null == b && (b = 1);
          null ==
            a && (a = 0);
          this.__commands.beginFill(a & 16777215, b);
          0 < b && (this.__visible = !0)
        },
        beginGradientFill: function(a, b, c, d, e, f, g, h) {
          null == h && (h = 0);
          null == g && (g = 1);
          null == f && (f = 0);
          if (null != b && 0 != b.length) {
            if (null == c) {
              c = [];
              for (var m = 0, l = b.length; m < l;) m++, c.push(1)
            }
            if (null == d)
              for (d = [], m = 0, l = b.length; m < l;) {
                var p = m++;
                d.push(Math.ceil(p / b.length * 255))
              }
            if (!(c.length < b.length || d.length < b.length))
              for (this.__commands.beginGradientFill(a, b, c, d, e, f, g, h), m = 0; m < c.length;)
                if (a = c[m], ++m, 0 < a) {
                  this.__visible = !0;
                  break
                }
          }
        },
        beginShaderFill: function(a,
          b) {
          null != a && (b = this.__shaderBufferPool.get(), this.__usedShaderBuffers.add(b), b.update(a), this.__commands.beginShaderFill(b))
        },
        clear: function() {
          for (var a = this.__usedShaderBuffers.h; null != a;) {
            var b = a.item;
            a = a.next;
            this.__shaderBufferPool.release(b)
          }
          this.__usedShaderBuffers.clear();
          this.__commands.clear();
          this.__strokePadding = 0;
          null != this.__bounds && (this.set___dirty(!0), this.__transformDirty = !0, this.__bounds = null);
          this.__visible = !1;
          this.__positionY = this.__positionX = 0;
          this.moveTo(0, 0)
        },
        copyFrom: function(a) {
          this.__bounds =
            null != a.__bounds ? a.__bounds.clone() : null;
          this.__commands = a.__commands.copy();
          this.set___dirty(!0);
          this.__strokePadding = a.__strokePadding;
          this.__positionX = a.__positionX;
          this.__positionY = a.__positionY;
          this.__transformDirty = !0;
          this.__visible = a.__visible
        },
        cubicCurveTo: function(a, b, c, d, e, f) {
          this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
          this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
          var g = e,
            h = e;
          if (!(a <
              e && a > this.__positionX || a > e && a < this.__positionX) || !(c < e && c > this.__positionX || c > e && c < this.__positionX)) {
            var m = 2 * this.__positionX - 4 * a + 2 * c,
              l = a - this.__positionX,
              p = -this.__positionX + 3 * a + e - 3 * c,
              n = (-m + Math.sqrt(m * m - 4 * l * p)) / (2 * p);
            m = (-m - Math.sqrt(m * m - 4 * l * p)) / (2 * p);
            0 < n && 1 > n && (g = this.__calculateBezierCubicPoint(n, this.__positionX, a, c, e));
            0 < m && 1 > m && (h = this.__calculateBezierCubicPoint(m, this.__positionX, a, c, e))
          }
          var k = f,
            q = f;
          (b < f && b > this.__positionX || b > f && b < this.__positionX) && (d < f && d > this.__positionX || d > f && d < this.__positionX) ||
          (m = 2 * this.__positionX - 4 * b + 2 * d, l = b - this.__positionX, p = -this.__positionX + 3 * b + f - 3 * d, n = (-m + Math.sqrt(m * m - 4 * l * p)) / (2 * p), m = (-m - Math.sqrt(m * m - 4 * l * p)) / (2 * p), 0 < n && 1 > n && (k = this.__calculateBezierCubicPoint(n, this.__positionX, b, d, f)), 0 < m && 1 > m && (q = this.__calculateBezierCubicPoint(m, this.__positionX, b, d, f)));
          this.__inflateBounds(g - this.__strokePadding, k - this.__strokePadding);
          this.__inflateBounds(g + this.__strokePadding, k + this.__strokePadding);
          this.__inflateBounds(h - this.__strokePadding, q - this.__strokePadding);
          this.__inflateBounds(h +
            this.__strokePadding, q + this.__strokePadding);
          this.__positionX = e;
          this.__positionY = f;
          this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
          this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding);
          this.__commands.cubicCurveTo(a, b, c, d, e, f);
          this.set___dirty(!0)
        },
        curveTo: function(a, b, c, d) {
          this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding);
          this.__inflateBounds(this.__positionX +
            this.__strokePadding, this.__positionY + this.__strokePadding);
          var e = a < c && a > this.__positionX || a > c && a < this.__positionX ? c : this.__calculateBezierQuadPoint((this.__positionX - a) / (this.__positionX - 2 * a + c), this.__positionX, a, c);
          var f = b < d && b > this.__positionY || b > d && b < this.__positionY ? d : this.__calculateBezierQuadPoint((this.__positionY - b) / (this.__positionY - 2 * b + d), this.__positionY, b, d);
          this.__inflateBounds(e - this.__strokePadding, f - this.__strokePadding);
          this.__inflateBounds(e + this.__strokePadding, f + this.__strokePadding);
          this.__positionX = c;
          this.__positionY = d;
          this.__commands.curveTo(a, b, c, d);
          this.set___dirty(!0)
        },
        drawCircle: function(a, b, c) {
          0 >= c || (this.__inflateBounds(a - c - this.__strokePadding, b - c - this.__strokePadding), this.__inflateBounds(a + c + this.__strokePadding, b + c + this.__strokePadding), this.__commands.drawCircle(a, b, c), this.set___dirty(!0))
        },
        drawEllipse: function(a, b, c, d) {
          0 >= c || 0 >= d || (this.__inflateBounds(a - this.__strokePadding, b - this.__strokePadding), this.__inflateBounds(a + c + this.__strokePadding, b + d + this.__strokePadding),
            this.__commands.drawEllipse(a, b, c, d), this.set___dirty(!0))
        },
        drawGraphicsData: function(a) {
          for (a = a.iterator(); a.hasNext();) {
            var b = a.next();
            switch (b.__graphicsDataType) {
              case 0:
                if (null != b.fill) {
                  var c = b.thickness;
                  isNaN(c) && (c = null);
                  switch (b.fill.__graphicsFillType) {
                    case 0:
                      var d = b.fill;
                      this.lineStyle(c, d.color, d.alpha, b.pixelHinting, b.scaleMode, b.caps, b.joints, b.miterLimit);
                      break;
                    case 1:
                      d = b.fill;
                      this.lineStyle(c, 0, 1, b.pixelHinting, b.scaleMode, b.caps, b.joints, b.miterLimit);
                      this.lineGradientStyle(d.type,
                        d.colors, d.alphas, d.ratios, d.matrix, d.spreadMethod, d.interpolationMethod, d.focalPointRatio);
                      break;
                    case 2:
                      d = b.fill, this.lineStyle(c, 0, 1, b.pixelHinting, b.scaleMode, b.caps, b.joints, b.miterLimit), this.lineBitmapStyle(d.bitmapData, d.matrix, d.repeat, d.smooth)
                  }
                } else this.lineStyle();
                break;
              case 1:
                d = b;
                this.beginFill(d.color, d.alpha);
                break;
              case 2:
                d = b;
                this.beginGradientFill(d.type, d.colors, d.alphas, d.ratios, d.matrix, d.spreadMethod, d.interpolationMethod, d.focalPointRatio);
                break;
              case 3:
                this.drawPath(b.commands,
                  b.data, b.winding);
                break;
              case 4:
                d = b;
                this.beginBitmapFill(d.bitmapData, d.matrix, d.repeat, d.smooth);
                break;
              case 5:
                this.endFill();
                break;
              case 6:
                this.drawQuads(b.rects, b.indices, b.transforms);
                break;
              case 7:
                this.drawTriangles(b.vertices, b.indices, b.uvtData, b.culling);
                break;
              case 8:
                this.beginShaderFill(b.shader, b.matrix)
            }
          }
        },
        drawPath: function(a, b, c) {
          null == c && (c = 0);
          var d = 0;
          1 == c && this.__commands.windingNonZero();
          a = a.iterator();
          a: for (; a.hasNext();) switch (a.next()) {
            case 1:
              this.moveTo(b.get(d), b.get(d + 1));
              d += 2;
              break;
            case 2:
              this.lineTo(b.get(d), b.get(d + 1));
              d += 2;
              break;
            case 3:
              this.curveTo(b.get(d), b.get(d + 1), b.get(d + 2), b.get(d + 3));
              d += 4;
              break;
            case 4:
              this.moveTo(b.get(d + 2), b.get(d + 3));
              break a;
            case 5:
              this.lineTo(b.get(d + 2), b.get(d + 3));
              break a;
            case 6:
              this.cubicCurveTo(b.get(d), b.get(d + 1), b.get(d + 2), b.get(d + 3), b.get(d + 4), b.get(d + 5)), d += 6
          }
        },
        drawQuads: function(a, b, c) {
          if (null != a) {
            var d = null != b,
              e = !1,
              f = !1,
              g = d ? b.get_length() : Math.floor(a.get_length() / 4);
            if (0 != g) {
              null != c && (c.get_length() >= 6 * g ? f = e = !0 : c.get_length() >= 4 * g ? e = !0 :
                c.get_length() >= 2 * g && (f = !0));
              for (var h = ha.__pool.get(), m = Ea.__pool.get(), l = Infinity, p = Infinity, n = -Infinity, k = -Infinity, q, u = 0; u < g;) {
                var v = u++;
                q = d ? 4 * b.get(v) : 4 * v;
                0 > q || (h.setTo(0, 0, a.get(q + 2), a.get(q + 3)), 0 >= h.width || 0 >= h.height || (e && f ? (q = 6 * v, m.setTo(c.get(q), c.get(q + 1), c.get(q + 2), c.get(q + 3), c.get(q + 4), c.get(q + 5))) : e ? (q = 4 * v, m.setTo(c.get(q), c.get(q + 1), c.get(q + 2), c.get(q + 3), h.x, h.y)) : f ? (q = 2 * v, m.tx = c.get(q), m.ty = c.get(q + 1)) : (m.tx = h.x, m.ty = h.y), h.__transform(h, m), l > h.x && (l = h.x), p > h.y && (p = h.y), n < h.get_right() &&
                  (n = h.get_right()), k < h.get_bottom() && (k = h.get_bottom())))
              }
              this.__inflateBounds(l, p);
              this.__inflateBounds(n, k);
              this.__commands.drawQuads(a, b, c);
              this.set___dirty(!0);
              this.__visible = !0;
              ha.__pool.release(h);
              Ea.__pool.release(m)
            }
          }
        },
        drawRect: function(a, b, c, d) {
          if (0 != c || 0 != d) {
            var e = 0 > c ? -1 : 1,
              f = 0 > d ? -1 : 1;
            this.__inflateBounds(a - this.__strokePadding * e, b - this.__strokePadding * f);
            this.__inflateBounds(a + c + this.__strokePadding * e, b + d + this.__strokePadding * f);
            this.__commands.drawRect(a, b, c, d);
            this.set___dirty(!0)
          }
        },
        drawRoundRect: function(a,
          b, c, d, e, f) {
          if (0 != c || 0 != d) {
            var g = 0 > c ? -1 : 1,
              h = 0 > d ? -1 : 1;
            this.__inflateBounds(a - this.__strokePadding * g, b - this.__strokePadding * h);
            this.__inflateBounds(a + c + this.__strokePadding * g, b + d + this.__strokePadding * h);
            this.__commands.drawRoundRect(a, b, c, d, e, f);
            this.set___dirty(!0)
          }
        },
        drawRoundRectComplex: function(a, b, c, d, e, f, g, h) {
          if (!(0 >= c || 0 >= d)) {
            this.__inflateBounds(a - this.__strokePadding, b - this.__strokePadding);
            this.__inflateBounds(a + c + this.__strokePadding, b + d + this.__strokePadding);
            var m = a + c,
              l = b + d;
            c = c < d ? 2 * c : 2 * d;
            e < c || (e = c);
            f < c || (f = c);
            g < c || (g = c);
            h < c || (h = c);
            c = 1 - Math.sin(Math.PI / 180 * 45);
            d = 1 - Math.tan(Math.PI / 180 * 22.5);
            var p = h * c,
              n = h * d;
            this.moveTo(m, l - h);
            this.curveTo(m, l - n, m - p, l - p);
            this.curveTo(m - n, l, m - h, l);
            p = g * c;
            n = g * d;
            this.lineTo(a + g, l);
            this.curveTo(a + n, l, a + p, l - p);
            this.curveTo(a, l - n, a, l - g);
            p = e * c;
            n = e * d;
            this.lineTo(a, b + e);
            this.curveTo(a, b + n, a + p, b + p);
            this.curveTo(a + n, b, a + e, b);
            p = f * c;
            n = f * d;
            this.lineTo(m - f, b);
            this.curveTo(m - n, b, m - p, b + p);
            this.curveTo(m, b + n, m, b + f);
            this.lineTo(m, l - h);
            this.set___dirty(!0)
          }
        },
        drawTriangles: function(a,
          b, c, d) {
          null == d && (d = 1);
          if (null != a && 0 != a.get_length()) {
            var e = a.get_length() / 2 | 0;
            if (null == b) {
              if (0 != e % 3) throw F.thrown(new pi("Not enough vertices to close a triangle."));
              b = Fb.toIntVector(null);
              for (var f = 0, g = e; f < g;) {
                var h = f++;
                b.push(h)
              }
            }
            null == d && (d = 1);
            var m = Infinity,
              l = Infinity,
              p = -Infinity,
              n = -Infinity;
            f = 0;
            for (g = e; f < g;) h = f++, e = a.get(2 * h), h = a.get(2 * h + 1), m > e && (m = e), l > h && (l = h), p < e && (p = e), n < h && (n = h);
            this.__inflateBounds(m, l);
            this.__inflateBounds(p, n);
            this.__commands.drawTriangles(a, b, c, d);
            this.set___dirty(!0);
            this.__visible = !0
          }
        },
        endFill: function() {
          this.__commands.endFill()
        },
        lineBitmapStyle: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = !0);
          this.__commands.lineBitmapStyle(a, null != b ? b.clone() : null, c, d)
        },
        lineGradientStyle: function(a, b, c, d, e, f, g, h) {
          null == h && (h = 0);
          null == g && (g = 1);
          null == f && (f = 0);
          this.__commands.lineGradientStyle(a, b, c, d, e, f, g, h)
        },
        lineStyle: function(a, b, c, d, e, f, g, h) {
          null == h && (h = 3);
          null == e && (e = 2);
          null == d && (d = !1);
          null == c && (c = 1);
          null == b && (b = 0);
          null != a && (1 == g ? a > this.__strokePadding && (this.__strokePadding =
            a) : a / 2 > this.__strokePadding && (this.__strokePadding = a / 2));
          this.__commands.lineStyle(a, b, c, d, e, f, g, h);
          null != a && (this.__visible = !0)
        },
        lineTo: function(a, b) {
          isFinite(a) && isFinite(b) && (this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding), this.__inflateBounds(this.__positionX + this.__strokePadding, this.__positionY + this.__strokePadding), this.__positionX = a, this.__positionY = b, this.__inflateBounds(this.__positionX - this.__strokePadding, this.__positionY - this.__strokePadding),
            this.__inflateBounds(this.__positionX + 2 * this.__strokePadding, this.__positionY + this.__strokePadding), this.__commands.lineTo(a, b), this.set___dirty(!0))
        },
        moveTo: function(a, b) {
          this.__positionX = a;
          this.__positionY = b;
          this.__commands.moveTo(a, b)
        },
        overrideBlendMode: function(a) {
          null == a && (a = 10);
          this.__commands.overrideBlendMode(a)
        },
        readGraphicsData: function(a) {
          null == a && (a = !0);
          var b = Fb.toObjectVector(null);
          this.__owner.__readGraphicsData(b, a);
          return b
        },
        __calculateBezierCubicPoint: function(a, b, c, d, e) {
          var f = 1 -
            a;
          return b * f * f * f + 3 * c * a * f * f + 3 * d * f * a * a + e * a * a * a
        },
        __calculateBezierQuadPoint: function(a, b, c, d) {
          var e = 1 - a;
          return e * e * b + 2 * e * a * c + a * a * d
        },
        __cleanup: function() {
          null != this.__bounds && null != this.__canvas && (this.set___dirty(!0), this.__transformDirty = !0);
          this.__context = this.__canvas = this.__bitmap = null
        },
        __getBounds: function(a, b) {
          if (null != this.__bounds) {
            var c = ha.__pool.get();
            this.__bounds.__transform(c, b);
            a.__expand(c.x, c.y, c.width, c.height);
            ha.__pool.release(c)
          }
        },
        __hitTest: function(a, b, c, d) {
          if (null == this.__bounds) return !1;
          var e = d.a * d.d - d.b * d.c,
            f = 0 == e ? -d.tx : 1 / e * (d.c * (d.ty - b) + d.d * (a - d.tx));
          e = d.a * d.d - d.b * d.c;
          a = 0 == e ? -d.ty : 1 / e * (d.a * (b - d.ty) + d.b * (d.tx - a));
          return f > this.__bounds.x && a > this.__bounds.y && this.__bounds.contains(f, a) ? c ? A.hitTest(this, f, a) : !0 : !1
        },
        __inflateBounds: function(a, b) {
          null == this.__bounds ? (this.__bounds = new ha(a, b, 0, 0), this.__transformDirty = !0) : (a < this.__bounds.x && (this.__bounds.width += this.__bounds.x - a, this.__bounds.x = a, this.__transformDirty = !0), b < this.__bounds.y && (this.__bounds.height += this.__bounds.y -
            b, this.__bounds.y = b, this.__transformDirty = !0), a > this.__bounds.x + this.__bounds.width && (this.__bounds.width = a - this.__bounds.x), b > this.__bounds.y + this.__bounds.height && (this.__bounds.height = b - this.__bounds.y))
        },
        __readGraphicsData: function(a) {
          for (var b = new Xf(this.__commands), c = null, d, e = this.__commands.types, f = 0, g = this.__commands.get_length(); f < g;) {
            d = f++;
            d = e[d];
            switch (d._hx_index) {
              case 4:
              case 5:
              case 6:
              case 7:
              case 9:
              case 10:
              case 17:
              case 18:
                null == c && (c = new Si);
                break;
              default:
                null != c && (a.push(c), c = null)
            }
            switch (d._hx_index) {
              case 0:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos +=
                      2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_BITMAP_FILL;
                d = b;
                a.push(new Qm(d.buffer.o[d.oPos], d.buffer.o[d.oPos + 1], d.buffer.b[d.bPos], d.buffer.b[d.bPos + 1]));
                break;
              case 1:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos +=
                      5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_FILL;
                d = b;
                a.push(new ck(d.buffer.i[d.iPos], 1));
                break;
              case 2:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos +=
                      1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_GRADIENT_FILL;
                d = b;
                a.push(new Rm(d.buffer.o[d.oPos],
                  d.buffer.ii[d.iiPos], d.buffer.ff[d.ffPos], d.buffer.ii[d.iiPos + 1], d.buffer.o[d.oPos + 1], d.buffer.o[d.oPos + 2], d.buffer.o[d.oPos + 3], d.buffer.f[d.fPos]));
                break;
              case 3:
                break;
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos +=
                      1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.CUBIC_CURVE_TO;
                d = b;
                c.cubicCurveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2], d.buffer.f[d.fPos + 3], d.buffer.f[d.fPos + 4], d.buffer.f[d.fPos + 5]);
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos +=
                      1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.CURVE_TO;
                d = b;
                c.curveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2], d.buffer.f[d.fPos + 3]);
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos +=
                      4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_CIRCLE;
                d = b;
                c.__drawCircle(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2]);
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_ELLIPSE;
                d = b;
                c.__drawEllipse(d.buffer.f[d.fPos],
                  d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2], d.buffer.f[d.fPos + 3]);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos +=
                      2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_RECT;
                d = b;
                c.__drawRect(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2], d.buffer.f[d.fPos + 3]);
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos +=
                      4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_ROUND_RECT;
                d = b;
                c.__drawRoundRect(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1], d.buffer.f[d.fPos + 2],
                  d.buffer.f[d.fPos + 3], d.buffer.f[d.fPos + 4], null != d.buffer.o[d.oPos] ? d.buffer.o[d.oPos] : d.buffer.f[d.fPos + 4]);
                break;
              case 13:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.END_FILL;
                a.push(new Sm);
                break;
              case 14:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_BITMAP_STYLE;
                c = null;
                break;
              case 15:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos +=
                      1
                }
                b.prev = ba.LINE_GRADIENT_STYLE;
                break;
              case 16:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_STYLE;
                var h = b;
                d = new Tm(h.buffer.o[h.oPos], h.buffer.b[h.bPos], h.buffer.o[h.oPos + 1], h.buffer.o[h.oPos + 2], h.buffer.o[h.oPos + 3], h.buffer.f[h.fPos + 1]);
                d.fill = new ck(h.buffer.i[h.iPos], h.buffer.f[h.fPos]);
                a.push(d);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_TO;
                d = b;
                c.lineTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos +=
                      1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.MOVE_TO;
                d = b;
                c.moveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos +=
                      4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = d
            }
          }
          null != c && a.push(c)
        },
        __update: function(a) {
          if (!(null == this.__bounds || 0 >= this.__bounds.width || 0 >= this.__bounds.height)) {
            var b = this.__owner.__renderTransform;
            if (null != b) {
              var c = 0 == b.b ? Math.abs(b.a) : Math.sqrt(b.a * b.a + b.b * b.b);
              var d = 0 == b.c ? Math.abs(b.d) : Math.sqrt(b.c * b.c + b.d * b.d);
              null != a && (c = 0 == a.b ? c * a.a : c * Math.sqrt(a.a * a.a + a.b * a.b), d = 0 == a.c ? d * a.d : d * Math.sqrt(a.c * a.c + a.d * a.d));
              a = this.__bounds.width * c;
              d *= this.__bounds.height;
              if (1 > a || 1 > d)(1 <= this.__width || 1 <= this.__height) && this.set___dirty(!0), this.__height = this.__width = 0;
              else {
                null != Ze.maxTextureWidth && a > Ze.maxTextureWidth && (a = Ze.maxTextureWidth);
                null != Ze.maxTextureWidth && d > Ze.maxTextureHeight && (d = Ze.maxTextureHeight);
                this.__renderTransform.a = a / this.__bounds.width;
                this.__renderTransform.d = d / this.__bounds.height;
                c = 1 / this.__renderTransform.a;
                var e = 1 / this.__renderTransform.d;
                this.__worldTransform.a = c * b.a;
                this.__worldTransform.b = c * b.b;
                this.__worldTransform.c = e * b.c;
                this.__worldTransform.d = e * b.d;
                e = this.__bounds.x;
                var f = this.__bounds.y;
                c = e * b.a + f * b.c + b.tx;
                b = e * b.b + f * b.d + b.ty;
                this.__worldTransform.tx = Math.round(c);
                this.__worldTransform.ty = Math.round(b);
                e = this.__worldTransform;
                f = e.a * e.d - e.b * e.c;
                this.__renderTransform.tx =
                  0 == f ? -e.tx : 1 / f * (e.c * (e.ty - b) + e.d * (c - e.tx));
                e = this.__worldTransform;
                f = e.a * e.d - e.b * e.c;
                this.__renderTransform.ty = 0 == f ? -e.ty : 1 / f * (e.a * (b - e.ty) + e.b * (e.tx - c));
                a = Math.ceil(a + 1);
                d = Math.ceil(d + 1);
                a == this.__width && d == this.__height || this.set___dirty(!0);
                this.__width = a;
                this.__height = d
              }
            }
          }
        },
        set___dirty: function(a) {
          if (a && null != this.__owner) {
            var b = this.__owner;
            b.__renderDirty || (b.__renderDirty = !0, b.__setParentRenderDirty())
          }
          a && (this.__hardwareDirty = this.__softwareDirty = !0);
          return this.__dirty = a
        },
        __class__: Ze,
        __properties__: {
          set___dirty: "set___dirty"
        }
      };
      var Eh = function() {};
      k["openfl.display.IGraphicsFill"] = Eh;
      Eh.__name__ = "openfl.display.IGraphicsFill";
      Eh.__isInterface__ = !0;
      Eh.prototype = {
        __graphicsFillType: null,
        __class__: Eh
      };
      var Yf = function() {};
      k["openfl.display.IGraphicsData"] = Yf;
      Yf.__name__ = "openfl.display.IGraphicsData";
      Yf.__isInterface__ = !0;
      Yf.prototype = {
        __graphicsDataType: null,
        __class__: Yf
      };
      var Qm = function(a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !0);
        this.bitmapData = a;
        this.matrix = b;
        this.repeat = c;
        this.smooth = d;
        this.__graphicsDataType = 4;
        this.__graphicsFillType =
          2
      };
      k["openfl.display.GraphicsBitmapFill"] = Qm;
      Qm.__name__ = "openfl.display.GraphicsBitmapFill";
      Qm.__interfaces__ = [Eh, Yf];
      Qm.prototype = {
        bitmapData: null,
        matrix: null,
        repeat: null,
        smooth: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: Qm
      };
      var Sm = function() {
        this.__graphicsDataType = 5;
        this.__graphicsFillType = 3
      };
      k["openfl.display.GraphicsEndFill"] = Sm;
      Sm.__name__ = "openfl.display.GraphicsEndFill";
      Sm.__interfaces__ = [Eh, Yf];
      Sm.prototype = {
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: Sm
      };
      var Rm = function(a, b, c, d, e, f, g, h) {
        null == h && (h = 0);
        null == a && (a = 0);
        null == f && (f = 0);
        null == g && (g = 1);
        this.type = a;
        this.colors = b;
        this.alphas = c;
        this.ratios = d;
        this.matrix = e;
        this.spreadMethod = f;
        this.interpolationMethod = g;
        this.focalPointRatio = h;
        this.__graphicsDataType = 2;
        this.__graphicsFillType = 1
      };
      k["openfl.display.GraphicsGradientFill"] = Rm;
      Rm.__name__ = "openfl.display.GraphicsGradientFill";
      Rm.__interfaces__ = [Eh, Yf];
      Rm.prototype = {
        alphas: null,
        colors: null,
        focalPointRatio: null,
        interpolationMethod: null,
        matrix: null,
        ratios: null,
        spreadMethod: null,
        type: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: Rm
      };
      var Um = function() {};
      k["openfl.display.IGraphicsPath"] = Um;
      Um.__name__ = "openfl.display.IGraphicsPath";
      Um.__isInterface__ = !0;
      var Si = function(a, b, c) {
        null == c && (c = 0);
        this.commands = a;
        this.data = b;
        this.winding = c;
        this.__graphicsDataType = 3
      };
      k["openfl.display.GraphicsPath"] = Si;
      Si.__name__ = "openfl.display.GraphicsPath";
      Si.__interfaces__ = [Um, Yf];
      Si.prototype = {
        commands: null,
        data: null,
        winding: null,
        __graphicsDataType: null,
        cubicCurveTo: function(a,
          b, c, d, e, f) {
          null == this.commands && (this.commands = Fb.toIntVector(null));
          null == this.data && (this.data = Fb.toFloatVector(null));
          this.commands.push(6);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d);
          this.data.push(e);
          this.data.push(f)
        },
        curveTo: function(a, b, c, d) {
          null == this.commands && (this.commands = Fb.toIntVector(null));
          null == this.data && (this.data = Fb.toFloatVector(null));
          this.commands.push(3);
          this.data.push(a);
          this.data.push(b);
          this.data.push(c);
          this.data.push(d)
        },
        lineTo: function(a,
          b) {
          null == this.commands && (this.commands = Fb.toIntVector(null));
          null == this.data && (this.data = Fb.toFloatVector(null));
          this.commands.push(2);
          this.data.push(a);
          this.data.push(b)
        },
        moveTo: function(a, b) {
          null == this.commands && (this.commands = Fb.toIntVector(null));
          null == this.data && (this.data = Fb.toFloatVector(null));
          this.commands.push(1);
          this.data.push(a);
          this.data.push(b)
        },
        wideLineTo: function(a, b) {
          null == this.commands && (this.commands = Fb.toIntVector(null));
          null == this.data && (this.data = Fb.toFloatVector(null));
          this.commands.push(2);
          this.data.push(a);
          this.data.push(b)
        },
        wideMoveTo: function(a, b) {
          null == this.commands && (this.commands = Fb.toIntVector(null));
          null == this.data && (this.data = Fb.toFloatVector(null));
          this.commands.push(1);
          this.data.push(a);
          this.data.push(b)
        },
        __drawCircle: function(a, b, c) {
          this.__drawRoundRect(a - c, b - c, 2 * c, 2 * c, 2 * c, 2 * c)
        },
        __drawEllipse: function(a, b, c, d) {
          this.__drawRoundRect(a, b, c, d, c, d)
        },
        __drawRect: function(a, b, c, d) {
          this.moveTo(a, b);
          this.lineTo(a + c, b);
          this.lineTo(a + c, b + d);
          this.lineTo(a, b + d);
          this.lineTo(a, b)
        },
        __drawRoundRect: function(a,
          b, c, d, e, f) {
          e *= .5;
          f *= .5;
          e > c / 2 && (e = c / 2);
          f > d / 2 && (f = d / 2);
          c = a + c;
          d = b + d;
          var g = -e + .7071067811865476 * e,
            h = -e + .41421356237309503 * e,
            m = -f + .7071067811865476 * f,
            l = -f + .41421356237309503 * f;
          this.moveTo(c, d - f);
          this.curveTo(c, d + l, c + g, d + m);
          this.curveTo(c + h, d, c - e, d);
          this.lineTo(a + e, d);
          this.curveTo(a - h, d, a - g, d + m);
          this.curveTo(a, d + l, a, d - f);
          this.lineTo(a, b + f);
          this.curveTo(a, b - l, a - g, b - m);
          this.curveTo(a - h, b, a + e, b);
          this.lineTo(c - e, b);
          this.curveTo(c + h, b, c + g, b - m);
          this.curveTo(c, b - l, c, b + f);
          this.lineTo(c, d - f)
        },
        __class__: Si
      };
      var Zo =
        function(a, b, c) {
          this.rects = a;
          this.indices = b;
          this.transforms = c;
          this.__graphicsDataType = 6
        };
      k["openfl.display.GraphicsQuadPath"] = Zo;
      Zo.__name__ = "openfl.display.GraphicsQuadPath";
      Zo.__interfaces__ = [Um, Yf];
      Zo.prototype = {
        indices: null,
        rects: null,
        transforms: null,
        __graphicsDataType: null,
        __class__: Zo
      };
      var Vm = function(a) {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\n\t\tif (color.a == 0.0) {\n\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t} else if (openfl_HasColorTransform) {\n\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\n\t\t\tif (color.a > 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\n\t\t}\n\n\t\t}");
        null == this.__glVertexSource && (this.__glVertexSource = "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tif (openfl_HasColorTransform) {\n\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\n\t\t}\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        gf.call(this, a);
        this.__isGenerated = !0;
        this.__initGL()
      };
      k["openfl.display.GraphicsShader"] = Vm;
      Vm.__name__ = "openfl.display.GraphicsShader";
      Vm.__super__ = gf;
      Vm.prototype = t(gf.prototype, {
        openfl_Alpha: null,
        openfl_ColorMultiplier: null,
        openfl_ColorOffset: null,
        openfl_Position: null,
        openfl_TextureCoord: null,
        openfl_Matrix: null,
        openfl_HasColorTransform: null,
        openfl_TextureSize: null,
        bitmap: null,
        __class__: Vm
      });
      var $o = function(a, b) {
        this.shader = a;
        this.matrix = b;
        this.__graphicsDataType = 8;
        this.__graphicsFillType = 4
      };
      k["openfl.display.GraphicsShaderFill"] =
        $o;
      $o.__name__ = "openfl.display.GraphicsShaderFill";
      $o.__interfaces__ = [Eh, Yf];
      $o.prototype = {
        matrix: null,
        shader: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: $o
      };
      var ck = function(a, b) {
        null == b && (b = 1);
        null == a && (a = 0);
        this.alpha = b;
        this.color = a;
        this.__graphicsDataType = 1;
        this.__graphicsFillType = 0
      };
      k["openfl.display.GraphicsSolidFill"] = ck;
      ck.__name__ = "openfl.display.GraphicsSolidFill";
      ck.__interfaces__ = [Eh, Yf];
      ck.prototype = {
        alpha: null,
        color: null,
        __graphicsDataType: null,
        __graphicsFillType: null,
        __class__: ck
      };
      var Vq = function() {};
      k["openfl.display.IGraphicsStroke"] = Vq;
      Vq.__name__ = "openfl.display.IGraphicsStroke";
      Vq.__isInterface__ = !0;
      var Tm = function(a, b, c, d, e, f, g) {
        null == f && (f = 3);
        null == e && (e = 2);
        null == d && (d = 0);
        null == c && (c = 2);
        null == b && (b = !1);
        null == a && (a = NaN);
        this.caps = d;
        this.fill = g;
        this.joints = e;
        this.miterLimit = f;
        this.pixelHinting = b;
        this.scaleMode = c;
        this.thickness = a;
        this.__graphicsDataType = 0
      };
      k["openfl.display.GraphicsStroke"] = Tm;
      Tm.__name__ = "openfl.display.GraphicsStroke";
      Tm.__interfaces__ = [Vq, Yf];
      Tm.prototype = {
        caps: null,
        fill: null,
        joints: null,
        miterLimit: null,
        pixelHinting: null,
        scaleMode: null,
        thickness: null,
        __graphicsDataType: null,
        __class__: Tm
      };
      var ap = function(a, b, c, d) {
        null == d && (d = 1);
        this.vertices = a;
        this.indices = b;
        this.uvtData = c;
        this.culling = d;
        this.__graphicsDataType = 7
      };
      k["openfl.display.GraphicsTrianglePath"] = ap;
      ap.__name__ = "openfl.display.GraphicsTrianglePath";
      ap.__interfaces__ = [Um, Yf];
      ap.prototype = {
        culling: null,
        indices: null,
        uvtData: null,
        vertices: null,
        __graphicsDataType: null,
        __class__: ap
      };
      var Di = function() {};
      k["openfl.display.ITileContainer"] = Di;
      Di.__name__ = "openfl.display.ITileContainer";
      Di.__isInterface__ = !0;
      Di.prototype = {
        get_numTiles: null,
        addTile: null,
        addTileAt: null,
        addTiles: null,
        contains: null,
        getTileAt: null,
        getTileIndex: null,
        removeTile: null,
        removeTileAt: null,
        removeTiles: null,
        setTileIndex: null,
        sortTiles: null,
        swapTiles: null,
        swapTilesAt: null,
        __class__: Di,
        __properties__: {
          get_numTiles: "get_numTiles"
        }
      };
      var Fm = function(a) {
        null == a && (a = 80);
        this.quality = a
      };
      k["openfl.display.JPEGEncoderOptions"] =
        Fm;
      Fm.__name__ = "openfl.display.JPEGEncoderOptions";
      Fm.prototype = {
        quality: null,
        __class__: Fm
      };
      var Wq = {
          fromInt: function(a) {
            return a
          },
          fromString: function(a) {
            switch (a) {
              case "bevel":
                return 0;
              case "miter":
                return 1;
              case "round":
                return 2;
              default:
                return null
            }
          },
          toInt: function(a) {
            return a
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "bevel";
              case 1:
                return "miter";
              case 2:
                return "round";
              default:
                return null
            }
          }
        },
        Ij = function() {
          Da.call(this);
          this.contentLoaderInfo = eg.create(this);
          this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
          this.__unloaded = !0
        };
      k["openfl.display.Loader"] = Ij;
      Ij.__name__ = "openfl.display.Loader";
      Ij.__super__ = Da;
      Ij.prototype = t(Da.prototype, {
        content: null,
        contentLoaderInfo: null,
        uncaughtErrorEvents: null,
        __library: null,
        __path: null,
        __unloaded: null,
        close: function() {
          Kc.notImplemented({
            fileName: "openfl/display/Loader.hx",
            lineNumber: 229,
            className: "openfl.display.Loader",
            methodName: "close"
          })
        },
        load: function(a, b) {
          this.unload();
          this.contentLoaderInfo.loaderURL = Ja.get_current().get_loaderInfo().url;
          this.contentLoaderInfo.url =
            a.url;
          this.__unloaded = !1;
          if (null == a.contentType || "" == a.contentType) {
            b = "";
            this.__path = a.url;
            var c = this.__path.indexOf("?"); - 1 < c && (this.__path = this.__path.substring(0, c));
            for (; W.endsWith(this.__path, "/");) this.__path = this.__path.substring(0, this.__path.length - 1);
            W.endsWith(this.__path, ".bundle") && (this.__path += "/library.json", a.url = -1 < c ? this.__path + a.url.substring(c) : this.__path);
            c = this.__path.lastIndexOf("."); - 1 < c && (b = this.__path.substring(c + 1));
            switch (b) {
              case "gif":
                b = "image/gif";
                break;
              case "jpeg":
              case "jpg":
                b =
                  "image/jpeg";
                break;
              case "js":
                b = "application/javascript";
                break;
              case "json":
                b = "application/json";
                break;
              case "png":
                b = "image/png";
                break;
              case "swf":
                b = "application/x-shockwave-flash";
                break;
              default:
                b = "application/x-www-form-urlencoded"
            }
            this.contentLoaderInfo.contentType = b
          } else this.contentLoaderInfo.contentType = a.contentType;
          if (-1 < this.contentLoaderInfo.contentType.indexOf("image/") && "GET" == a.method && (null == a.requestHeaders || 0 == a.requestHeaders.length) && null == a.userAgent) wa.loadFromFile(a.url).onComplete(r(this,
            this.BitmapData_onLoad)).onError(r(this, this.BitmapData_onError)).onProgress(r(this, this.BitmapData_onProgress));
          else {
            b = new th;
            b.dataFormat = 0;
            if (-1 < this.contentLoaderInfo.contentType.indexOf("/json") || -1 < this.contentLoaderInfo.contentType.indexOf("/javascript") || -1 < this.contentLoaderInfo.contentType.indexOf("/ecmascript")) b.dataFormat = 1;
            b.addEventListener("complete", r(this, this.loader_onComplete));
            b.addEventListener("ioError", r(this, this.loader_onError));
            b.addEventListener("progress", r(this, this.loader_onProgress));
            b.load(a)
          }
        },
        loadBytes: function(a, b) {
          wa.loadFromBytes(a).onComplete(r(this, this.BitmapData_onLoad)).onError(r(this, this.BitmapData_onError))
        },
        removeChild: function(a) {
          throw F.thrown(new jd("Error #2069: The Loader class does not implement this method.", 2069));
        },
        removeChildAt: function(a) {
          throw F.thrown(new jd("Error #2069: The Loader class does not implement this method.", 2069));
        },
        setChildIndex: function(a, b) {
          throw F.thrown(new jd("Error #2069: The Loader class does not implement this method.", 2069));
        },
        unload: function() {
          this.__unloaded || (null != this.content && this.content.parent == this && Da.prototype.removeChild.call(this, this.content), null != this.__library && (Aa.unloadLibrary(this.contentLoaderInfo.url), this.__library = null), this.content = null, this.contentLoaderInfo.url = null, this.contentLoaderInfo.contentType = null, this.contentLoaderInfo.content = null, this.contentLoaderInfo.bytesLoaded = 0, this.contentLoaderInfo.bytesTotal = 0, this.contentLoaderInfo.width = 0, this.contentLoaderInfo.height = 0, this.__unloaded = !0, this.contentLoaderInfo.dispatchEvent(new ma("unload")))
        },
        unloadAndStop: function(a) {
          null != this.content && this.content.__stopAllMovieClips();
          a = 0;
          for (var b = this.get_numChildren(); a < b;) {
            var c = a++;
            this.getChildAt(c).__stopAllMovieClips()
          }
          this.unload()
        },
        __dispatchError: function(a) {
          var b = new og("ioError");
          b.text = a;
          this.contentLoaderInfo.dispatchEvent(b)
        },
        __setContent: function(a, b, c) {
          this.content = a;
          this.contentLoaderInfo.content = a;
          this.contentLoaderInfo.width = b;
          this.contentLoaderInfo.height = c;
          null != a &&
            Da.prototype.addChildAt.call(this, a, 0)
        },
        BitmapData_onError: function(a) {
          this.__dispatchError(M.string(a))
        },
        BitmapData_onLoad: function(a) {
          null == a ? this.__dispatchError("Unknown error") : (this.__setContent(new Ac(a), a.width, a.height), this.contentLoaderInfo.dispatchEvent(new ma("complete")))
        },
        BitmapData_onProgress: function(a, b) {
          var c = new Fg("progress");
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.contentLoaderInfo.dispatchEvent(c)
        },
        loader_onComplete: function(a) {
          var b = this;
          a = a.target;
          if (null != this.contentLoaderInfo.contentType &&
            -1 < this.contentLoaderInfo.contentType.indexOf("/json")) {
            var c = Pc.parse(a.data, Ah.directory(this.__path));
            if (null == c) this.__dispatchError("Cannot parse asset manifest");
            else {
              var d = yb.fromManifest(c);
              if (null == d) this.__dispatchError("Cannot open library");
              else if (d instanceof qe) d.load().onComplete(function(a) {
                b.__library = d;
                Aa.registerLibrary(b.contentLoaderInfo.url, b.__library);
                null == c.name || Aa.hasLibrary(c.name) || Aa.registerLibrary(c.name, b.__library);
                a = b.__library.getMovieClip("");
                b.__setContent(a,
                  a.get_width() | 0, a.get_height() | 0);
                b.contentLoaderInfo.dispatchEvent(new ma("complete"))
              }).onError(function(a) {
                b.__dispatchError(a)
              })
            }
          } else null != this.contentLoaderInfo.contentType && (-1 < this.contentLoaderInfo.contentType.indexOf("/javascript") || -1 < this.contentLoaderInfo.contentType.indexOf("/ecmascript")) ? (this.__setContent(new Z, 0, 0), eval("(function () {" + M.string(a.data) + "})()"), this.contentLoaderInfo.dispatchEvent(new ma("complete"))) : (this.contentLoaderInfo.bytes = a.data, wa.loadFromBytes(a.data).onComplete(r(this,
            this.BitmapData_onLoad)).onError(r(this, this.BitmapData_onError)))
        },
        loader_onError: function(a) {
          a.target = this.contentLoaderInfo;
          this.contentLoaderInfo.dispatchEvent(a)
        },
        loader_onProgress: function(a) {
          a.target = this.contentLoaderInfo;
          this.contentLoaderInfo.dispatchEvent(a)
        },
        __class__: Ij
      });
      var eg = function() {
        Ka.call(this);
        this.applicationDomain = Ti.currentDomain;
        this.bytesTotal = this.bytesLoaded = 0;
        this.childAllowsParent = !0;
        this.parameters = {}
      };
      k["openfl.display.LoaderInfo"] = eg;
      eg.__name__ = "openfl.display.LoaderInfo";
      eg.create = function(a) {
        var b = new eg;
        b.uncaughtErrorEvents = new Wm;
        null != a ? b.loader = a : b.url = eg.__rootURL;
        return b
      };
      eg.__super__ = Ka;
      eg.prototype = t(Ka.prototype, {
        applicationDomain: null,
        bytes: null,
        bytesLoaded: null,
        bytesTotal: null,
        childAllowsParent: null,
        content: null,
        contentType: null,
        frameRate: null,
        height: null,
        loader: null,
        loaderURL: null,
        parameters: null,
        parentAllowsChild: null,
        sameDomain: null,
        sharedEvents: null,
        uncaughtErrorEvents: null,
        url: null,
        width: null,
        __completed: null,
        __complete: function() {
          this.__completed ||
            (this.bytesLoaded < this.bytesTotal && (this.bytesLoaded = this.bytesTotal), this.__update(this.bytesLoaded, this.bytesTotal), this.__completed = !0, this.dispatchEvent(new ma("complete")))
        },
        __update: function(a, b) {
          this.bytesLoaded = a;
          this.bytesTotal = b;
          this.dispatchEvent(new Fg("progress", !1, !1, a, b))
        },
        __class__: eg
      });
      var ng = function() {
        Z.call(this);
        this.__enabled = !0;
        if (null != ng.__constructor) {
          var a = ng.__constructor;
          ng.__constructor = null;
          a(this)
        }
      };
      k["openfl.display.MovieClip"] = ng;
      ng.__name__ = "openfl.display.MovieClip";
      ng.fromTimeline = function(a) {
        var b = new ng;
        b.attachTimeline(a);
        return b
      };
      ng.__super__ = Z;
      ng.prototype = t(Z.prototype, {
        __enabled: null,
        __hasDown: null,
        __hasOver: null,
        __hasUp: null,
        __mouseIsDown: null,
        __scene: null,
        __timeline: null,
        addFrameScript: function(a, b) {
          null != this.__timeline && this.__timeline.__addFrameScript(a, b)
        },
        attachTimeline: function(a) {
          this.__timeline = a;
          null != a && (a.__attachMovieClip(this), this.play())
        },
        gotoAndPlay: function(a, b) {
          null != this.__timeline && this.__timeline.__gotoAndPlay(a, b)
        },
        gotoAndStop: function(a,
          b) {
          null != this.__timeline && this.__timeline.__gotoAndStop(a, b)
        },
        nextFrame: function() {
          null != this.__timeline && this.__timeline.__nextFrame()
        },
        nextScene: function() {
          null != this.__timeline && this.__timeline.__nextScene()
        },
        play: function() {
          null != this.__timeline && this.__timeline.__play()
        },
        prevFrame: function() {
          null != this.__timeline && this.__timeline.__prevFrame()
        },
        prevScene: function() {
          null != this.__timeline && this.__timeline.__prevScene()
        },
        stop: function() {
          null != this.__timeline && this.__timeline.__stop()
        },
        __enterFrame: function(a) {
          null !=
            this.__timeline && this.__timeline.__enterFrame(a);
          for (var b = 0, c = this.__children; b < c.length;) {
            var d = c[b];
            ++b;
            d.__enterFrame(a)
          }
        },
        __stopAllMovieClips: function() {
          Z.prototype.__stopAllMovieClips.call(this);
          this.stop()
        },
        __tabTest: function(a) {
          this.__enabled && Z.prototype.__tabTest.call(this, a)
        },
        __onMouseDown: function(a) {
          this.__enabled && this.__hasDown && this.gotoAndStop("_down");
          this.__mouseIsDown = !0;
          null != this.stage && this.stage.addEventListener("mouseUp", r(this, this.__onMouseUp), !0)
        },
        __onMouseUp: function(a) {
          this.__mouseIsDown = !1;
          null != this.stage && this.stage.removeEventListener("mouseUp", r(this, this.__onMouseUp));
          this.__buttonMode && (a.target == this && this.__enabled && this.__hasOver ? this.gotoAndStop("_over") : this.__enabled && this.__hasUp && this.gotoAndStop("_up"))
        },
        __onRollOut: function(a) {
          this.__enabled && (this.__mouseIsDown && this.__hasOver ? this.gotoAndStop("_over") : this.__hasUp && this.gotoAndStop("_up"))
        },
        __onRollOver: function(a) {
          this.__enabled && this.__hasOver && this.gotoAndStop("_over")
        },
        set_buttonMode: function(a) {
          if (this.__buttonMode !=
            a) {
            if (a) {
              this.__hasUp = this.__hasOver = this.__hasDown = !1;
              for (var b = 0, c = this.get_currentLabels(); b < c.length;) {
                var d = c[b];
                ++b;
                switch (d.name) {
                  case "_down":
                    this.__hasDown = !0;
                    break;
                  case "_over":
                    this.__hasOver = !0;
                    break;
                  case "_up":
                    this.__hasUp = !0
                }
              }
              if (this.__hasDown || this.__hasOver || this.__hasUp) this.addEventListener("rollOver", r(this, this.__onRollOver)), this.addEventListener("rollOut", r(this, this.__onRollOut)), this.addEventListener("mouseDown", r(this, this.__onMouseDown))
            } else this.removeEventListener("rollOver",
              r(this, this.__onRollOver)), this.removeEventListener("rollOut", r(this, this.__onRollOut)), this.removeEventListener("mouseDown", r(this, this.__onMouseDown));
            this.__buttonMode = a
          }
          return a
        },
        get_currentFrame: function() {
          return null != this.__timeline ? this.__timeline.__currentFrame : 1
        },
        get_currentFrameLabel: function() {
          return null != this.__timeline ? this.__timeline.__currentFrameLabel : null
        },
        get_currentLabel: function() {
          return null != this.__timeline ? this.__timeline.__currentLabel : null
        },
        get_currentLabels: function() {
          return null !=
            this.__timeline ? this.__timeline.__currentLabels.slice() : []
        },
        get_currentScene: function() {
          if (null != this.__timeline) return this.__timeline.__currentScene;
          null == this.__scene && (this.__scene = new bp("", [], 1));
          return this.__scene
        },
        get_enabled: function() {
          return this.__enabled
        },
        set_enabled: function(a) {
          return this.__enabled = a
        },
        get_framesLoaded: function() {
          return null != this.__timeline ? this.__timeline.__framesLoaded : 1
        },
        get_isPlaying: function() {
          return null != this.__timeline ? this.__timeline.__isPlaying : !1
        },
        get_scenes: function() {
          return null !=
            this.__timeline ? this.__timeline.scenes.slice() : [this.get_currentScene()]
        },
        get_totalFrames: function() {
          return null != this.__timeline ? this.__timeline.__totalFrames : 1
        },
        __class__: ng,
        __properties__: t(Z.prototype.__properties__, {
          get_totalFrames: "get_totalFrames",
          get_scenes: "get_scenes",
          get_isPlaying: "get_isPlaying",
          get_framesLoaded: "get_framesLoaded",
          set_enabled: "set_enabled",
          get_enabled: "get_enabled",
          get_currentScene: "get_currentScene",
          get_currentLabels: "get_currentLabels",
          get_currentLabel: "get_currentLabel",
          get_currentFrameLabel: "get_currentFrameLabel",
          get_currentFrame: "get_currentFrame"
        })
      });
      var Jb = function(a, b) {
        Xe.call(this);
        this.__context3D = a;
        this.__context = a.__context;
        this.__gl = this.gl = a.__context.webgl;
        this.__defaultRenderTarget = b;
        this.__flipped = null == this.__defaultRenderTarget;
        null == Ze.maxTextureWidth && (Ze.maxTextureWidth = Ze.maxTextureHeight = this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
        this.__matrix = ta._new();
        this.__values = [];
        this.__softwareRenderer = new Dg(null);
        this.__type = "opengl";
        this.__setBlendMode(10);
        this.__context3D.__setGLBlend(!0);
        this.__clipRects = [];
        this.__maskObjects = [];
        this.__numClipRects = 0;
        this.__projection = ta._new();
        this.__projectionFlipped = ta._new();
        this.__stencilReference = 0;
        this.__tempRect = new ha;
        this.__defaultDisplayShader = new Om;
        this.__defaultGraphicsShader = new Vm;
        this.__defaultShader = this.__defaultDisplayShader;
        this.__initShader(this.__defaultShader);
        this.__scrollRectMasks = new E(function() {
          return new Qe
        });
        this.__maskShader = new bi
      };
      k["openfl.display.OpenGLRenderer"] = Jb;
      Jb.__name__ =
        "openfl.display.OpenGLRenderer";
      Jb.__super__ = Xe;
      Jb.prototype = t(Xe.prototype, {
        gl: null,
        __context3D: null,
        __clipRects: null,
        __currentDisplayShader: null,
        __currentGraphicsShader: null,
        __currentRenderTarget: null,
        __currentShader: null,
        __currentShaderBuffer: null,
        __defaultDisplayShader: null,
        __defaultGraphicsShader: null,
        __defaultRenderTarget: null,
        __defaultShader: null,
        __displayHeight: null,
        __displayWidth: null,
        __flipped: null,
        __gl: null,
        __height: null,
        __maskShader: null,
        __matrix: null,
        __maskObjects: null,
        __numClipRects: null,
        __offsetX: null,
        __offsetY: null,
        __projection: null,
        __projectionFlipped: null,
        __scrollRectMasks: null,
        __softwareRenderer: null,
        __stencilReference: null,
        __tempRect: null,
        __updatedStencil: null,
        __upscaled: null,
        __values: null,
        __width: null,
        applyAlpha: function(a) {
          Jb.__alphaValue[0] = a * this.__worldAlpha;
          null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addFloatOverride("openfl_Alpha", Jb.__alphaValue) : null != this.__currentShader && null != this.__currentShader.__alpha && (this.__currentShader.__alpha.value = Jb.__alphaValue)
        },
        applyBitmapData: function(a, b, c) {
          null == c && (c = !1);
          null != this.__currentShaderBuffer ? null != a && (Jb.__textureSizeValue[0] = a.__textureWidth, Jb.__textureSizeValue[1] = a.__textureHeight, this.__currentShaderBuffer.addFloatOverride("openfl_TextureSize", Jb.__textureSizeValue)) : null != this.__currentShader && (null != this.__currentShader.__bitmap && (this.__currentShader.__bitmap.input = a, this.__currentShader.__bitmap.filter = b && this.__allowSmoothing ? 4 : 5, this.__currentShader.__bitmap.mipFilter = 2, this.__currentShader.__bitmap.wrap =
            c ? 2 : 0), null != this.__currentShader.__texture && (this.__currentShader.__texture.input = a, this.__currentShader.__texture.filter = b && this.__allowSmoothing ? 4 : 5, this.__currentShader.__texture.mipFilter = 2, this.__currentShader.__texture.wrap = c ? 2 : 0), null != this.__currentShader.__textureSize && (null != a ? (Jb.__textureSizeValue[0] = a.__textureWidth, Jb.__textureSizeValue[1] = a.__textureHeight, this.__currentShader.__textureSize.value = Jb.__textureSizeValue) : this.__currentShader.__textureSize.value = null))
        },
        applyColorTransform: function(a) {
          var b =
            null != a && !a.__isDefault(!0);
          this.applyHasColorTransform(b);
          b ? (a.__setArrays(Jb.__colorMultipliersValue, Jb.__colorOffsetsValue), null != this.__currentShaderBuffer ? (this.__currentShaderBuffer.addFloatOverride("openfl_ColorMultiplier", Jb.__colorMultipliersValue), this.__currentShaderBuffer.addFloatOverride("openfl_ColorOffset", Jb.__colorOffsetsValue)) : null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.value = Jb.__colorMultipliersValue), null !=
            this.__currentShader.__colorOffset && (this.__currentShader.__colorOffset.value = Jb.__colorOffsetsValue))) : null != this.__currentShaderBuffer ? (this.__currentShaderBuffer.addFloatOverride("openfl_ColorMultiplier", Jb.__emptyColorValue), this.__currentShaderBuffer.addFloatOverride("openfl_ColorOffset", Jb.__emptyColorValue)) : null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.value = Jb.__emptyColorValue), null != this.__currentShader.__colorOffset &&
            (this.__currentShader.__colorOffset.value = Jb.__emptyColorValue))
        },
        applyHasColorTransform: function(a) {
          Jb.__hasColorTransformValue[0] = a;
          null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addBoolOverride("openfl_HasColorTransform", Jb.__hasColorTransformValue) : null != this.__currentShader && null != this.__currentShader.__hasColorTransform && (this.__currentShader.__hasColorTransform.value = Jb.__hasColorTransformValue)
        },
        applyMatrix: function(a) {
          null != this.__currentShaderBuffer ? this.__currentShaderBuffer.addFloatOverride("openfl_Matrix",
            a) : null != this.__currentShader && null != this.__currentShader.__matrix && (this.__currentShader.__matrix.value = a)
        },
        getMatrix: function(a) {
          null != this.gl ? (a = this.__getMatrix(a, 1), ta.set(this.__matrix, 0, a[0]), ta.set(this.__matrix, 1, a[1]), ta.set(this.__matrix, 2, a[2]), ta.set(this.__matrix, 3, a[3]), ta.set(this.__matrix, 4, a[4]), ta.set(this.__matrix, 5, a[5]), ta.set(this.__matrix, 6, a[6]), ta.set(this.__matrix, 7, a[7]), ta.set(this.__matrix, 8, a[8]), ta.set(this.__matrix, 9, a[9]), ta.set(this.__matrix, 10, a[10]), ta.set(this.__matrix,
            11, a[11]), ta.set(this.__matrix, 12, a[12]), ta.set(this.__matrix, 13, a[13]), ta.set(this.__matrix, 14, a[14]), ta.set(this.__matrix, 15, a[15])) : (ta.identity(this.__matrix), ta.set(this.__matrix, 0, a.a), ta.set(this.__matrix, 1, a.b), ta.set(this.__matrix, 4, a.c), ta.set(this.__matrix, 5, a.d), ta.set(this.__matrix, 12, a.tx), ta.set(this.__matrix, 13, a.ty));
          return this.__matrix
        },
        setShader: function(a) {
          this.__currentShaderBuffer = null;
          this.__currentShader != a && (null == a ? (this.__currentShader = null, this.__context3D.setProgram(null)) :
            (this.__currentShader = a, this.__initShader(a), this.__context3D.setProgram(a.program), this.__context3D.__flushGLProgram(), this.__currentShader.__enable(), this.__context3D.__state.shader = a))
        },
        setViewport: function() {
          this.__gl.viewport(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight)
        },
        updateShader: function() {
          null != this.__currentShader && (null != this.__currentShader.__position && (this.__currentShader.__position.__useArray = !0), null != this.__currentShader.__textureCoord && (this.__currentShader.__textureCoord.__useArray = !0), this.__context3D.setProgram(this.__currentShader.program), this.__context3D.__flushGLProgram(), this.__context3D.__flushGLTextures(), this.__currentShader.__update())
        },
        useAlphaArray: function() {
          null != this.__currentShader && null != this.__currentShader.__alpha && (this.__currentShader.__alpha.__useArray = !0)
        },
        useColorTransformArray: function() {
          null != this.__currentShader && (null != this.__currentShader.__colorMultiplier && (this.__currentShader.__colorMultiplier.__useArray = !0), null != this.__currentShader.__colorOffset &&
            (this.__currentShader.__colorOffset.__useArray = !0))
        },
        __cleanup: function() {
          0 < this.__stencilReference && (this.__stencilReference = 0, this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && (this.__numClipRects = 0, this.__scissorRect())
        },
        __clear: function() {
          null == this.__stage || this.__stage.__transparent ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1) : this.__context3D.clear(this.__stage.__colorSplit[0], this.__stage.__colorSplit[1], this.__stage.__colorSplit[2], 1, 0,
            0, 1);
          this.__cleared = !0
        },
        __clearShader: function() {
          null != this.__currentShader && (null == this.__currentShaderBuffer ? null != this.__currentShader.__bitmap && (this.__currentShader.__bitmap.input = null) : this.__currentShaderBuffer.clearOverride(), null != this.__currentShader.__texture && (this.__currentShader.__texture.input = null), null != this.__currentShader.__textureSize && (this.__currentShader.__textureSize.value = null), null != this.__currentShader.__hasColorTransform && (this.__currentShader.__hasColorTransform.value =
            null), null != this.__currentShader.__position && (this.__currentShader.__position.value = null), null != this.__currentShader.__matrix && (this.__currentShader.__matrix.value = null), this.__currentShader.__clearUseArray())
        },
        __copyShader: function(a) {
          this.__currentShader = a.__currentShader;
          this.__currentShaderBuffer = a.__currentShaderBuffer;
          this.__currentDisplayShader = a.__currentDisplayShader;
          this.__currentGraphicsShader = a.__currentGraphicsShader
        },
        __getMatrix: function(a, b) {
          var c = Ea.__pool.get();
          c.copyFrom(a);
          c.concat(this.__worldTransform);
          if (0 == b || 1 == b && 0 == c.b && 0 == c.c && 1.001 > c.a && .999 < c.a && 1.001 > c.d && .999 < c.d) c.tx = Math.round(c.tx), c.ty = Math.round(c.ty);
          ta.identity(this.__matrix);
          ta.set(this.__matrix, 0, c.a);
          ta.set(this.__matrix, 1, c.b);
          ta.set(this.__matrix, 4, c.c);
          ta.set(this.__matrix, 5, c.d);
          ta.set(this.__matrix, 12, c.tx);
          ta.set(this.__matrix, 13, c.ty);
          ta.append(this.__matrix, this.__flipped ? this.__projectionFlipped : this.__projection);
          this.__values[0] = ta.get(this.__matrix, 0);
          this.__values[1] = ta.get(this.__matrix, 1);
          this.__values[2] = ta.get(this.__matrix,
            2);
          this.__values[3] = ta.get(this.__matrix, 3);
          this.__values[4] = ta.get(this.__matrix, 4);
          this.__values[5] = ta.get(this.__matrix, 5);
          this.__values[6] = ta.get(this.__matrix, 6);
          this.__values[7] = ta.get(this.__matrix, 7);
          this.__values[8] = ta.get(this.__matrix, 8);
          this.__values[9] = ta.get(this.__matrix, 9);
          this.__values[10] = ta.get(this.__matrix, 10);
          this.__values[11] = ta.get(this.__matrix, 11);
          this.__values[12] = ta.get(this.__matrix, 12);
          this.__values[13] = ta.get(this.__matrix, 13);
          this.__values[14] = ta.get(this.__matrix,
            14);
          this.__values[15] = ta.get(this.__matrix, 15);
          Ea.__pool.release(c);
          return this.__values
        },
        __initShader: function(a) {
          return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultShader
        },
        __initDisplayShader: function(a) {
          return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultDisplayShader
        },
        __initGraphicsShader: function(a) {
          return null != a ? (null == a.__context && (a.__context = this.__context3D, a.__init()), a) : this.__defaultGraphicsShader
        },
        __initShaderBuffer: function(a) {
          return null != a ? this.__initGraphicsShader(a.shader) : this.__defaultGraphicsShader
        },
        __popMask: function() {
          if (0 != this.__stencilReference) {
            var a = this.__maskObjects.pop();
            1 < this.__stencilReference ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 255), this.__context3D.setColorMask(!1, !1, !1, !1), this.__renderDrawableMask(a), this.__stencilReference--, this.__context3D.setStencilActions(2, 1, 5, 5, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference,
              255, 0), this.__context3D.setColorMask(!0, !0, !0, !0)) : (this.__stencilReference = 0, this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0))
          }
        },
        __popMaskObject: function(a, b) {
          null == b && (b = !0);
          null != a.__mask && this.__popMask();
          b && null != a.__scrollRect && (0 != a.__renderTransform.b || 0 != a.__renderTransform.c ? (this.__scrollRectMasks.release(this.__maskObjects[this.__maskObjects.length - 1]), this.__popMask()) : this.__popMaskRect())
        },
        __popMaskRect: function() {
          0 < this.__numClipRects && (this.__numClipRects--,
            0 < this.__numClipRects ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1]) : this.__scissorRect())
        },
        __pushMask: function(a) {
          0 == this.__stencilReference && (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4), this.__updatedStencil = !0);
          this.__context3D.setStencilActions(2, 1, 2, 5, 5);
          this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 255);
          this.__context3D.setColorMask(!1, !1, !1, !1);
          this.__renderDrawableMask(a);
          this.__maskObjects.push(a);
          this.__stencilReference++;
          this.__context3D.setStencilActions(2,
            1, 5, 5, 5);
          this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0);
          this.__context3D.setColorMask(!0, !0, !0, !0)
        },
        __pushMaskObject: function(a, b) {
          null == b && (b = !0);
          b && null != a.__scrollRect && (0 != a.__renderTransform.b || 0 != a.__renderTransform.c ? (b = this.__scrollRectMasks.get(), b.get_graphics().clear(), b.get_graphics().beginFill(65280), b.get_graphics().drawRect(a.__scrollRect.x, a.__scrollRect.y, a.__scrollRect.width, a.__scrollRect.height), b.__renderTransform.copyFrom(a.__renderTransform), this.__pushMask(b)) :
            this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
          null != a.__mask && this.__pushMask(a.__mask)
        },
        __pushMaskRect: function(a, b) {
          this.__numClipRects == this.__clipRects.length && (this.__clipRects[this.__numClipRects] = new ha);
          var c = Ea.__pool.get();
          c.copyFrom(b);
          c.concat(this.__worldTransform);
          b = this.__clipRects[this.__numClipRects];
          a.__transform(b, c);
          0 < this.__numClipRects && (a = this.__clipRects[this.__numClipRects - 1], b.__contract(a.x, a.y, a.width, a.height));
          0 > b.height && (b.height = 0);
          0 > b.width && (b.width = 0);
          Ea.__pool.release(c);
          this.__scissorRect(b);
          this.__numClipRects++
        },
        __render: function(a) {
          this.__context3D.setColorMask(!0, !0, !0, !0);
          this.__context3D.setCulling(3);
          this.__context3D.setDepthTest(!1, 0);
          this.__context3D.setStencilActions();
          this.__context3D.setStencilReferenceValue(0, 0, 0);
          this.__context3D.setScissorRectangle(null);
          this.__blendMode = null;
          this.__setBlendMode(10);
          if (null == this.__defaultRenderTarget) {
            if (Jb.__scissorRectangle.setTo(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight),
              this.__context3D.setScissorRectangle(Jb.__scissorRectangle), this.__upscaled = 1 != this.__worldTransform.a || 1 != this.__worldTransform.d, this.__renderDrawable(a), 0 < this.__offsetX || 0 < this.__offsetY) 0 < this.__offsetX && (Jb.__scissorRectangle.setTo(0, 0, this.__offsetX, this.__height), this.__context3D.setScissorRectangle(Jb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT), Jb.__scissorRectangle.setTo(this.__offsetX + this.__displayWidth, 0, this.__width,
              this.__height), this.__context3D.setScissorRectangle(Jb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)), 0 < this.__offsetY && (Jb.__scissorRectangle.setTo(0, 0, this.__width, this.__offsetY), this.__context3D.setScissorRectangle(Jb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT), Jb.__scissorRectangle.setTo(0, this.__offsetY + this.__displayHeight, this.__width,
              this.__height), this.__context3D.setScissorRectangle(Jb.__scissorRectangle), this.__context3D.__flushGL(), this.__gl.clearColor(0, 0, 0, 1), this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)), this.__context3D.setScissorRectangle(null)
          } else {
            Jb.__scissorRectangle.setTo(this.__offsetX, this.__offsetY, this.__displayWidth, this.__displayHeight);
            this.__context3D.setScissorRectangle(Jb.__scissorRectangle);
            var b = a.__mask,
              c = a.__scrollRect;
            a.__mask = null;
            a.__scrollRect = null;
            this.__renderDrawable(a);
            a.__mask = b;
            a.__scrollRect =
              c
          }
          this.__context3D.present()
        },
        __renderDrawable: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 0:
              Xm.renderDrawable(a, this);
              break;
            case 2:
              wf.renderDrawable(a, this);
              break;
            case 3:
              bh.renderDrawable(a, this);
              break;
            case 4:
            case 5:
              Ym.renderDrawable(a, this);
              break;
            case 6:
              Zm.renderDrawable(a, this);
              break;
            case 7:
              ch.renderDrawable(a, this);
              break;
            case 8:
              xf.renderDrawable(a, this);
              break;
            case 9:
              fa.renderDrawable(a, this)
          }
        },
        __renderDrawableMask: function(a) {
          if (null != a) switch (a.__drawableType) {
            case 0:
              Xm.renderDrawableMask(a,
                this);
              break;
            case 2:
              wf.renderDrawableMask(a, this);
              break;
            case 3:
              bh.renderDrawableMask(a, this);
              break;
            case 4:
            case 5:
              Ym.renderDrawableMask(a, this);
              break;
            case 6:
              Zm.renderDrawableMask(a, this);
              break;
            case 7:
              ch.renderDrawableMask(a, this);
              break;
            case 8:
              xf.renderDrawableMask(a, this);
              break;
            case 9:
              fa.renderDrawableMask(a, this)
          }
        },
        __renderFilterPass: function(a, b, c, d) {
          null == d && (d = !0);
          if (null != a && null != b && null != this.__defaultRenderTarget) {
            var e = this.__context3D.__state.renderToTexture,
              f = this.__context3D.__state.renderToTextureDepthStencil,
              g = this.__context3D.__state.renderToTextureAntiAlias,
              h = this.__context3D.__state.renderToTextureSurfaceSelector;
            this.__context3D.setRenderToTexture(this.__defaultRenderTarget.getTexture(this.__context3D), !1);
            d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
            b = this.__initShader(b);
            this.setShader(b);
            this.applyAlpha(1);
            this.applyBitmapData(a, c);
            this.applyColorTransform(null);
            this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
            this.updateShader();
            c = a.getVertexBuffer(this.__context3D);
            null != b.__position && this.__context3D.setVertexBufferAt(b.__position.index,
              c, 0, 3);
            null != b.__textureCoord && this.__context3D.setVertexBufferAt(b.__textureCoord.index, c, 3, 2);
            a = a.getIndexBuffer(this.__context3D);
            this.__context3D.drawTriangles(a);
            null != e ? this.__context3D.setRenderToTexture(e, f, g, h) : this.__context3D.setRenderToBackBuffer();
            this.__clearShader()
          }
        },
        __resize: function(a, b) {
          this.__width = a;
          this.__height = b;
          a = null == this.__defaultRenderTarget ? this.__stage.stageWidth : this.__defaultRenderTarget.width;
          b = null == this.__defaultRenderTarget ? this.__stage.stageHeight : this.__defaultRenderTarget.height;
          if (null == this.__defaultRenderTarget) {
            var c = this.__worldTransform;
            c = Math.round(0 * c.a + 0 * c.c + c.tx)
          } else c = 0;
          this.__offsetX = c;
          null == this.__defaultRenderTarget ? (c = this.__worldTransform, c = Math.round(0 * c.b + 0 * c.d + c.ty)) : c = 0;
          this.__offsetY = c;
          null == this.__defaultRenderTarget ? (c = this.__worldTransform, c = Math.round(a * c.a + 0 * c.c + c.tx - this.__offsetX)) : c = a;
          this.__displayWidth = c;
          null == this.__defaultRenderTarget ? (c = this.__worldTransform, c = Math.round(0 * c.b + b * c.d + c.ty - this.__offsetY)) : c = b;
          this.__displayHeight = c;
          ta.createOrtho(this.__projection,
            0, this.__displayWidth + 2 * this.__offsetX, 0, this.__displayHeight + 2 * this.__offsetY, -1E3, 1E3);
          ta.createOrtho(this.__projectionFlipped, 0, this.__displayWidth + 2 * this.__offsetX, this.__displayHeight + 2 * this.__offsetY, 0, -1E3, 1E3)
        },
        __resumeClipAndMask: function(a) {
          0 < this.__stencilReference ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5), this.__context3D.setStencilReferenceValue(this.__stencilReference, 255, 0)) : (this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects ?
            this.__scissorRect(this.__clipRects[this.__numClipRects - 1]) : this.__scissorRect()
        },
        __scissorRect: function(a) {
          if (null != a) {
            var b = Math.floor(a.x),
              c = Math.floor(a.y),
              d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0;
            a = 0 < a.height ? Math.ceil(a.get_bottom()) - c : 0;
            0 > d && (d = 0);
            0 > a && (a = 0);
            Jb.__scissorRectangle.setTo(b, c, d, a);
            this.__context3D.setScissorRectangle(Jb.__scissorRectangle)
          } else this.__context3D.setScissorRectangle(null)
        },
        __setBlendMode: function(a) {
          null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
          if (this.__blendMode !=
            a) switch (this.__blendMode = a, a) {
            case 0:
              this.__context3D.setBlendFactors(2, 2);
              break;
            case 9:
              this.__context3D.setBlendFactors(1, 5);
              break;
            case 12:
              this.__context3D.setBlendFactors(2, 6);
              break;
            case 14:
              this.__context3D.setBlendFactors(2, 2);
              this.__context3D.__setGLBlendEquation(this.__gl.FUNC_REVERSE_SUBTRACT);
              break;
            default:
              this.__context3D.setBlendFactors(2, 5)
          }
        },
        __setRenderTarget: function(a) {
          this.__defaultRenderTarget = a;
          this.__flipped = null == a;
          null != a && this.__resize(a.width, a.height)
        },
        __setShaderBuffer: function(a) {
          this.setShader(a.shader);
          this.__currentShaderBuffer = a
        },
        __suspendClipAndMask: function() {
          0 < this.__stencilReference && (this.__context3D.setStencilActions(), this.__context3D.setStencilReferenceValue(0, 0, 0));
          0 < this.__numClipRects && this.__scissorRect()
        },
        __updateShaderBuffer: function(a) {
          null != this.__currentShader && null != this.__currentShaderBuffer && this.__currentShader.__updateFromBuffer(this.__currentShaderBuffer, a)
        },
        __class__: Jb
      });
      var Xo = function(a) {
        null == a && (a = !1);
        this.fastCompression = a
      };
      k["openfl.display.PNGEncoderOptions"] = Xo;
      Xo.__name__ = "openfl.display.PNGEncoderOptions";
      Xo.prototype = {
        fastCompression: null,
        __class__: Xo
      };
      var cp = function(a) {
        this.onComplete = new Pd;
        this.display = a;
        null != a && (a.addEventListener("unload", r(this, this.display_onUnload)), Ja.get_current().addChild(a))
      };
      k["openfl.display.Preloader"] = cp;
      cp.__name__ = "openfl.display.Preloader";
      cp.prototype = {
        onComplete: null,
        complete: null,
        display: null,
        ready: null,
        start: function() {
          this.ready = !0;
          Ja.get_current().get_loaderInfo().__complete();
          if (null != this.display) {
            var a = new ma("complete",
              !0, !0);
            this.display.dispatchEvent(a);
            a.isDefaultPrevented() || this.display.dispatchEvent(new ma("unload"))
          } else this.complete || (this.complete = !0, this.onComplete.dispatch())
        },
        update: function(a, b) {
          Ja.get_current().get_loaderInfo().__update(a, b);
          null != this.display && this.display.dispatchEvent(new Fg("progress", !0, !0, a, b))
        },
        display_onUnload: function(a) {
          null != this.display && (this.display.removeEventListener("unload", r(this, this.display_onUnload)), this.display.parent == Ja.get_current() && Ja.get_current().removeChild(this.display),
            Ja.get_current().stage.set_focus(null), this.display = null);
          this.ready && !this.complete && (this.complete = !0, this.onComplete.dispatch())
        },
        __class__: cp
      };
      var $m = function() {
        Z.call(this);
        var a = this.getBackgroundColor(),
          b = 0;
        70 > .299 * (a >> 16 & 255) + .587 * (a >> 8 & 255) + .114 * (a & 255) && (b = 16777215);
        a = this.getHeight() / 2 - 3.5;
        var c = this.getWidth() - 60;
        this.outline = new Qe;
        this.outline.get_graphics().beginFill(b, .07);
        this.outline.get_graphics().drawRect(0, 0, c, 7);
        this.outline.set_x(30);
        this.outline.set_y(a);
        this.outline.set_alpha(0);
        this.addChild(this.outline);
        this.progress = new Qe;
        this.progress.get_graphics().beginFill(b, .35);
        this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
        this.progress.set_x(32);
        this.progress.set_y(a + 2);
        this.progress.set_scaleX(0);
        this.progress.set_alpha(0);
        this.addChild(this.progress);
        this.startAnimation = Ja.getTimer() + 100;
        this.endAnimation = this.startAnimation + 1E3;
        this.addEventListener("addedToStage", r(this, this.this_onAddedToStage))
      };
      k["openfl.display.DefaultPreloader"] = $m;
      $m.__name__ = "openfl.display.DefaultPreloader";
      $m.__super__ = Z;
      $m.prototype = t(Z.prototype, {
        endAnimation: null,
        outline: null,
        progress: null,
        startAnimation: null,
        getBackgroundColor: function() {
          var a = Ja.get_current().stage.window.context.attributes;
          return Object.prototype.hasOwnProperty.call(a, "background") && null != a.background ? a.background : 0
        },
        getHeight: function() {
          var a = Ja.get_current().stage.window.__height;
          return 0 < a ? a : Ja.get_current().stage.stageHeight
        },
        getWidth: function() {
          var a = Ja.get_current().stage.window.__width;
          return 0 < a ? a : Ja.get_current().stage.stageWidth
        },
        onInit: function() {
          this.addEventListener("enterFrame", r(this, this.this_onEnterFrame))
        },
        onLoaded: function() {
          this.removeEventListener("enterFrame", r(this, this.this_onEnterFrame));
          this.dispatchEvent(new ma("unload"))
        },
        onUpdate: function(a, b) {
          var c = 0;
          0 < b && (c = a / b, 1 < c && (c = 1));
          this.progress.set_scaleX(c)
        },
        this_onAddedToStage: function(a) {
          this.removeEventListener("addedToStage", r(this, this.this_onAddedToStage));
          this.onInit();
          this.onUpdate(this.get_loaderInfo().bytesLoaded, this.get_loaderInfo().bytesTotal);
          this.addEventListener("progress",
            r(this, this.this_onProgress));
          this.addEventListener("complete", r(this, this.this_onComplete))
        },
        this_onComplete: function(a) {
          a.preventDefault();
          this.removeEventListener("progress", r(this, this.this_onProgress));
          this.removeEventListener("complete", r(this, this.this_onComplete));
          this.onLoaded()
        },
        this_onEnterFrame: function(a) {
          a = (Ja.getTimer() - this.startAnimation) / (this.endAnimation - this.startAnimation);
          0 > a && (a = 0);
          1 < a && (a = 1);
          this.outline.set_alpha(this.progress.set_alpha(a))
        },
        this_onProgress: function(a) {
          this.onUpdate(a.bytesLoaded |
            0, a.bytesTotal | 0)
        },
        __class__: $m
      });
      var bp = function(a, b, c) {
        this.name = a;
        this.labels = b;
        this.numFrames = c
      };
      k["openfl.display.Scene"] = bp;
      bp.__name__ = "openfl.display.Scene";
      bp.prototype = {
        labels: null,
        name: null,
        numFrames: null,
        __class__: bp
      };
      var zr = {
          _new: function(a) {
            return {}
          }
        },
        Nm = function() {
          this.channels = 0;
          this.filter = 5;
          this.index = this.height = 0;
          this.mipFilter = 2;
          this.wrap = this.width = 0
        };
      k["openfl.display.ShaderInput"] = Nm;
      Nm.__name__ = "openfl.display.ShaderInput";
      Nm.prototype = {
        channels: null,
        filter: null,
        height: null,
        index: null,
        input: null,
        mipFilter: null,
        name: null,
        width: null,
        wrap: null,
        __isUniform: null,
        __disableGL: function(a, b) {
          a.setTextureAt(b, null)
        },
        __updateGL: function(a, b, c, d, e, f) {
          c = null != c ? c : this.input;
          d = null != d ? d : this.filter;
          e = null != e ? e : this.mipFilter;
          f = null != f ? f : this.wrap;
          null != c ? (a.setTextureAt(b, c.getTexture(a)), a.setSamplerStateAt(b, f, d, e)) : a.setTextureAt(b, null)
        },
        __class__: Nm
      };
      var Ri = function() {
        this.index = 0
      };
      k["openfl.display.ShaderParameter"] = Ri;
      Ri.__name__ = "openfl.display.ShaderParameter";
      Ri.prototype = {
        index: null,
        name: null,
        type: null,
        value: null,
        __arrayLength: null,
        __internal: null,
        __isBool: null,
        __isFloat: null,
        __isInt: null,
        __isUniform: null,
        __length: null,
        __uniformMatrix: null,
        __useArray: null,
        __disableGL: function(a) {
          a = a.gl;
          if (!this.__isUniform)
            for (var b = 0, c = this.__arrayLength; b < c;) {
              var d = b++;
              a.disableVertexAttribArray(this.index + d)
            }
        },
        __updateGL: function(a, b) {
          a = a.gl;
          b = null != b ? b : this.value;
          var c = this.__isBool ? b : null,
            d = this.__isFloat ? b : null,
            e = this.__isInt ? b : null;
          if (this.__isUniform)
            if (null != b && b.length >=
              this.__length) switch (this.type) {
              case 0:
                a.uniform1i(this.index, c[0] ? 1 : 0);
                break;
              case 1:
                a.uniform2i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                break;
              case 2:
                a.uniform3i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0);
                break;
              case 3:
                a.uniform4i(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0, c[3] ? 1 : 0);
                break;
              case 4:
                a.uniform1f(this.index, d[0]);
                break;
              case 5:
                a.uniform2f(this.index, d[0], d[1]);
                break;
              case 6:
                a.uniform3f(this.index, d[0], d[1], d[2]);
                break;
              case 7:
                a.uniform4f(this.index, d[0], d[1], d[2], d[3]);
                break;
              case 8:
                a.uniform1i(this.index, e[0]);
                break;
              case 9:
                a.uniform2i(this.index, e[0], e[1]);
                break;
              case 10:
                a.uniform3i(this.index, e[0], e[1], e[2]);
                break;
              case 11:
                a.uniform4i(this.index, e[0], e[1], e[2], e[3]);
                break;
              case 12:
                this.__uniformMatrix[0] = d[0];
                this.__uniformMatrix[1] = d[1];
                this.__uniformMatrix[2] = d[2];
                this.__uniformMatrix[3] = d[3];
                cc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                break;
              case 16:
                this.__uniformMatrix[0] = d[0];
                this.__uniformMatrix[1] = d[1];
                this.__uniformMatrix[2] = d[2];
                this.__uniformMatrix[3] = d[3];
                this.__uniformMatrix[4] = d[4];
                this.__uniformMatrix[5] = d[5];
                this.__uniformMatrix[6] = d[6];
                this.__uniformMatrix[7] = d[7];
                this.__uniformMatrix[8] = d[8];
                cc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                break;
              case 20:
                this.__uniformMatrix[0] = d[0], this.__uniformMatrix[1] = d[1], this.__uniformMatrix[2] = d[2], this.__uniformMatrix[3] = d[3], this.__uniformMatrix[4] = d[4], this.__uniformMatrix[5] = d[5], this.__uniformMatrix[6] = d[6], this.__uniformMatrix[7] = d[7], this.__uniformMatrix[8] = d[8], this.__uniformMatrix[9] = d[9], this.__uniformMatrix[10] =
                  d[10], this.__uniformMatrix[11] = d[11], this.__uniformMatrix[12] = d[12], this.__uniformMatrix[13] = d[13], this.__uniformMatrix[14] = d[14], this.__uniformMatrix[15] = d[15], cc.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
            } else switch (this.type) {
                case 1:
                case 9:
                  a.uniform2i(this.index, 0, 0);
                  break;
                case 3:
                case 11:
                  a.uniform4i(this.index, 0, 0, 0, 0);
                  break;
                case 4:
                  a.uniform1f(this.index, 0);
                  break;
                case 5:
                  a.uniform2f(this.index, 0, 0);
                  break;
                case 6:
                  a.uniform3f(this.index, 0, 0, 0);
                  break;
                case 7:
                  a.uniform4f(this.index, 0, 0, 0,
                    0);
                  break;
                case 0:
                case 8:
                  a.uniform1i(this.index, 0);
                  break;
                case 2:
                case 10:
                  a.uniform3i(this.index, 0, 0, 0);
                  break;
                case 12:
                  this.__uniformMatrix[0] = 0;
                  this.__uniformMatrix[1] = 0;
                  this.__uniformMatrix[2] = 0;
                  this.__uniformMatrix[3] = 0;
                  cc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 16:
                  this.__uniformMatrix[0] = 0;
                  this.__uniformMatrix[1] = 0;
                  this.__uniformMatrix[2] = 0;
                  this.__uniformMatrix[3] = 0;
                  this.__uniformMatrix[4] = 0;
                  this.__uniformMatrix[5] = 0;
                  this.__uniformMatrix[6] = 0;
                  this.__uniformMatrix[7] = 0;
                  this.__uniformMatrix[8] =
                    0;
                  cc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                  break;
                case 20:
                  this.__uniformMatrix[0] = 0, this.__uniformMatrix[1] = 0, this.__uniformMatrix[2] = 0, this.__uniformMatrix[3] = 0, this.__uniformMatrix[4] = 0, this.__uniformMatrix[5] = 0, this.__uniformMatrix[6] = 0, this.__uniformMatrix[7] = 0, this.__uniformMatrix[8] = 0, this.__uniformMatrix[9] = 0, this.__uniformMatrix[10] = 0, this.__uniformMatrix[11] = 0, this.__uniformMatrix[12] = 0, this.__uniformMatrix[13] = 0, this.__uniformMatrix[14] = 0, this.__uniformMatrix[15] = 0, cc.uniformMatrix4fv(a,
                    this.index, !1, this.__uniformMatrix)
              } else if (this.__useArray || null != b && b.length != this.__length)
                for (f = 0, g = this.__arrayLength; f < g;) h = f++, a.enableVertexAttribArray(this.index + h);
              else {
                for (var f = 0, g = this.__arrayLength; f < g;) {
                  var h = f++;
                  a.disableVertexAttribArray(this.index + h)
                }
                if (null != b) switch (this.type) {
                  case 0:
                    a.vertexAttrib1f(this.index, c[0] ? 1 : 0);
                    break;
                  case 1:
                    a.vertexAttrib2f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0);
                    break;
                  case 2:
                    a.vertexAttrib3f(this.index, c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0);
                    break;
                  case 3:
                    a.vertexAttrib4f(this.index,
                      c[0] ? 1 : 0, c[1] ? 1 : 0, c[2] ? 1 : 0, c[3] ? 1 : 0);
                    break;
                  case 4:
                    a.vertexAttrib1f(this.index, d[0]);
                    break;
                  case 5:
                    a.vertexAttrib2f(this.index, d[0], d[1]);
                    break;
                  case 6:
                    a.vertexAttrib3f(this.index, d[0], d[1], d[2]);
                    break;
                  case 7:
                    a.vertexAttrib4f(this.index, d[0], d[1], d[2], d[3]);
                    break;
                  case 8:
                    a.vertexAttrib1f(this.index, e[0]);
                    break;
                  case 9:
                    a.vertexAttrib2f(this.index, e[0], e[1]);
                    break;
                  case 10:
                    a.vertexAttrib3f(this.index, e[0], e[1], e[2]);
                    break;
                  case 11:
                    a.vertexAttrib4f(this.index, e[0], e[1], e[2], e[3]);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index +
                      0, d[0], d[1]);
                    a.vertexAttrib2f(this.index + 1, d[2], d[3]);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, d[0], d[1], d[2]);
                    a.vertexAttrib3f(this.index + 1, d[3], d[4], d[5]);
                    a.vertexAttrib3f(this.index + 2, d[6], d[7], d[8]);
                    break;
                  case 20:
                    a.vertexAttrib4f(this.index + 0, d[0], d[1], d[2], d[3]), a.vertexAttrib4f(this.index + 1, d[4], d[5], d[6], d[7]), a.vertexAttrib4f(this.index + 2, d[8], d[9], d[10], d[11]), a.vertexAttrib4f(this.index + 3, d[12], d[13], d[14], d[15])
                } else switch (this.type) {
                  case 1:
                  case 5:
                  case 9:
                    a.vertexAttrib2f(this.index,
                      0, 0);
                    break;
                  case 3:
                  case 7:
                  case 11:
                    a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                    break;
                  case 0:
                  case 4:
                  case 8:
                    a.vertexAttrib1f(this.index, 0);
                    break;
                  case 2:
                  case 6:
                  case 10:
                    a.vertexAttrib3f(this.index, 0, 0, 0);
                    break;
                  case 12:
                    a.vertexAttrib2f(this.index + 0, 0, 0);
                    a.vertexAttrib2f(this.index + 1, 0, 0);
                    break;
                  case 16:
                    a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                    a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                    break;
                  case 20:
                    a.vertexAttrib4f(this.index + 0, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0), a.vertexAttrib4f(this.index +
                      2, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0)
                }
              }
        },
        __updateGLFromBuffer: function(a, b, c, d, e) {
          a = a.gl;
          if (this.__isUniform) {
            if (d >= this.__length) switch (this.type) {
              case 1:
              case 9:
                a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
                break;
              case 3:
              case 11:
                a.uniform4i(this.index, b[c] | 0, b[c + 1] | 0, b[c + 2] | 0, b[c + 3] | 0);
                break;
              case 4:
                a.uniform1f(this.index, b[c]);
                break;
              case 5:
                a.uniform2f(this.index, b[c], b[c + 1]);
                break;
              case 6:
                a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
                break;
              case 7:
                a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                break;
              case 0:
              case 8:
                a.uniform1i(this.index, b[c] | 0);
                break;
              case 2:
              case 10:
                a.uniform3i(this.index, b[c] | 0, b[c + 1] | 0, b[c + 2] | 0);
                break;
              case 12:
                this.__uniformMatrix[0] = b[c];
                this.__uniformMatrix[1] = b[c + 1];
                this.__uniformMatrix[2] = b[c + 2];
                this.__uniformMatrix[3] = b[c + 3];
                cc.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
                break;
              case 16:
                this.__uniformMatrix[0] = b[c];
                this.__uniformMatrix[1] = b[c + 1];
                this.__uniformMatrix[2] = b[c + 2];
                this.__uniformMatrix[3] = b[c + 3];
                this.__uniformMatrix[4] = b[c + 4];
                this.__uniformMatrix[5] =
                  b[c + 5];
                this.__uniformMatrix[6] = b[c + 6];
                this.__uniformMatrix[7] = b[c + 7];
                this.__uniformMatrix[8] = b[c + 8];
                cc.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
                break;
              case 20:
                this.__uniformMatrix[0] = b[c], this.__uniformMatrix[1] = b[c + 1], this.__uniformMatrix[2] = b[c + 2], this.__uniformMatrix[3] = b[c + 3], this.__uniformMatrix[4] = b[c + 4], this.__uniformMatrix[5] = b[c + 5], this.__uniformMatrix[6] = b[c + 6], this.__uniformMatrix[7] = b[c + 7], this.__uniformMatrix[8] = b[c + 8], this.__uniformMatrix[9] = b[c + 9], this.__uniformMatrix[10] =
                  b[c + 10], this.__uniformMatrix[11] = b[c + 11], this.__uniformMatrix[12] = b[c + 12], this.__uniformMatrix[13] = b[c + 13], this.__uniformMatrix[14] = b[c + 14], this.__uniformMatrix[15] = b[c + 15], cc.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix)
            }
          } else if (this.__internal || 0 != d && d != this.__length) {
            b = a.FLOAT;
            this.__isBool ? b = a.INT : this.__isInt && (b = a.INT);
            f = 0;
            for (g = this.__arrayLength; f < g;) h = f++, a.enableVertexAttribArray(this.index + h);
            if (0 < d)
              for (f = 0, g = this.__arrayLength; f < g;) h = f++, a.vertexAttribPointer(this.index + h, this.__length,
                b, !1, 4 * this.__length, 4 * (c + e * this.__length + h * this.__arrayLength))
          } else {
            for (var f = 0, g = this.__arrayLength; f < g;) {
              var h = f++;
              a.disableVertexAttribArray(this.index + h)
            }
            if (0 < d) switch (this.type) {
              case 1:
              case 5:
              case 9:
                a.vertexAttrib2f(this.index, b[c], b[c + 1]);
                break;
              case 3:
              case 7:
              case 11:
                a.vertexAttrib4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
                break;
              case 0:
              case 4:
              case 8:
                a.vertexAttrib1f(this.index, b[c]);
                break;
              case 2:
              case 6:
              case 10:
                a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
                break;
              case 12:
                a.vertexAttrib2f(this.index +
                  0, b[c], b[c + 1]);
                a.vertexAttrib2f(this.index + 1, b[c + 2], b[c + 2 + 1]);
                break;
              case 16:
                a.vertexAttrib3f(this.index + 0, b[c], b[c + 1], b[c + 2]);
                a.vertexAttrib3f(this.index + 1, b[c + 3], b[c + 3 + 1], b[c + 3 + 2]);
                a.vertexAttrib3f(this.index + 2, b[c + 6], b[c + 6 + 1], b[c + 6 + 2]);
                break;
              case 20:
                a.vertexAttrib4f(this.index + 0, b[c], b[c + 1], b[c + 2], b[c + 3]), a.vertexAttrib4f(this.index + 1, b[c + 4], b[c + 4 + 1], b[c + 4 + 2], b[c + 4 + 3]), a.vertexAttrib4f(this.index + 2, b[c + 8], b[c + 8 + 1], b[c + 8 + 2], b[c + 8 + 3]), a.vertexAttrib4f(this.index + 3, b[c + 12], b[c + 12 + 1], b[c + 12 + 2], b[c +
                  12 + 3])
            } else switch (this.type) {
              case 1:
              case 5:
              case 9:
                a.vertexAttrib2f(this.index, 0, 0);
                break;
              case 3:
              case 7:
              case 11:
                a.vertexAttrib4f(this.index, 0, 0, 0, 0);
                break;
              case 0:
              case 4:
              case 8:
                a.vertexAttrib1f(this.index, 0);
                break;
              case 2:
              case 6:
              case 10:
                a.vertexAttrib3f(this.index, 0, 0, 0);
                break;
              case 12:
                a.vertexAttrib2f(this.index + 0, 0, 0);
                a.vertexAttrib2f(this.index + 1, 0, 0);
                break;
              case 16:
                a.vertexAttrib3f(this.index + 0, 0, 0, 0);
                a.vertexAttrib3f(this.index + 1, 0, 0, 0);
                a.vertexAttrib3f(this.index + 2, 0, 0, 0);
                break;
              case 20:
                a.vertexAttrib4f(this.index +
                  0, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 1, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 2, 0, 0, 0, 0), a.vertexAttrib4f(this.index + 3, 0, 0, 0, 0)
            }
          }
        },
        set_name: function(a) {
          this.__internal = W.startsWith(a, "openfl_");
          return this.name = a
        },
        __class__: Ri,
        __properties__: {
          set_name: "set_name"
        }
      };
      var Qe = function() {
        ya.call(this);
        this.__drawableType = 3
      };
      k["openfl.display.Shape"] = Qe;
      Qe.__name__ = "openfl.display.Shape";
      Qe.__super__ = ya;
      Qe.prototype = t(ya.prototype, {
        get_graphics: function() {
          null == this.__graphics && (this.__graphics = new Ze(this));
          return this.__graphics
        },
        __class__: Qe,
        __properties__: t(ya.prototype.__properties__, {
          get_graphics: "get_graphics"
        })
      });
      var Ui = function(a, b, c, d) {
        Oa.call(this);
        this.__drawableType = 6;
        this.enabled = !0;
        this.trackAsMenu = !1;
        this.useHandCursor = !0;
        this.__upState = null != a ? a : new ya;
        this.__overState = b;
        this.__downState = c;
        this.set_hitTestState(null != d ? d : new ya);
        this.addEventListener("mouseDown", r(this, this.__this_onMouseDown));
        this.addEventListener("mouseOut", r(this, this.__this_onMouseOut));
        this.addEventListener("mouseOver",
          r(this, this.__this_onMouseOver));
        this.addEventListener("mouseUp", r(this, this.__this_onMouseUp));
        this.__tabEnabled = !0;
        this.set___currentState(this.__upState);
        null != Ui.__constructor && (a = Ui.__constructor, Ui.__constructor = null, a(this))
      };
      k["openfl.display.SimpleButton"] = Ui;
      Ui.__name__ = "openfl.display.SimpleButton";
      Ui.__super__ = Oa;
      Ui.prototype = t(Oa.prototype, {
        enabled: null,
        trackAsMenu: null,
        useHandCursor: null,
        __currentState: null,
        __downState: null,
        __hitTestState: null,
        __ignoreEvent: null,
        __overState: null,
        __previousStates: null,
        __soundTransform: null,
        __upState: null,
        __getBounds: function(a, b) {
          Oa.prototype.__getBounds.call(this, a, b);
          var c = Ea.__pool.get(),
            d = this.__currentState.__transform;
          c.a = d.a * b.a + d.b * b.c;
          c.b = d.a * b.b + d.b * b.d;
          c.c = d.c * b.a + d.d * b.c;
          c.d = d.c * b.b + d.d * b.d;
          c.tx = d.tx * b.a + d.ty * b.c + b.tx;
          c.ty = d.tx * b.b + d.ty * b.d + b.ty;
          this.__currentState.__getBounds(a, c);
          Ea.__pool.release(c)
        },
        __getRenderBounds: function(a, b) {
          if (null != this.__scrollRect) Oa.prototype.__getRenderBounds.call(this, a, b);
          else {
            Oa.prototype.__getBounds.call(this, a,
              b);
            var c = Ea.__pool.get(),
              d = this.__currentState.__transform;
            c.a = d.a * b.a + d.b * b.c;
            c.b = d.a * b.b + d.b * b.d;
            c.c = d.c * b.a + d.d * b.c;
            c.d = d.c * b.b + d.d * b.d;
            c.tx = d.tx * b.a + d.ty * b.c + b.tx;
            c.ty = d.tx * b.b + d.ty * b.d + b.ty;
            this.__currentState.__getRenderBounds(a, c);
            Ea.__pool.release(c)
          }
        },
        __getCursor: function() {
          return this.useHandCursor && !this.__ignoreEvent && this.enabled ? "button" : null
        },
        __hitTest: function(a, b, c, d, e, f) {
          var g = !1;
          null != this.get_hitTestState() ? this.get_hitTestState().__hitTest(a, b, c, d, e, f) && (null != d && (0 == d.length ?
            d[0] = f : d[d.length - 1] = f), g = !e || this.mouseEnabled) : null != this.__currentState && (!f.get_visible() || this.__isMask || e && !this.mouseEnabled || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b) ? g = !1 : this.__currentState.__hitTest(a, b, c, d, e, f) && (g = e));
          if (null != d)
            for (; 1 < d.length && d[d.length - 1] == d[d.length - 2];) d.pop();
          return g
        },
        __hitTestMask: function(a, b) {
          var c = !1;
          this.__currentState.__hitTestMask(a, b) && (c = !0);
          return c
        },
        __setStageReference: function(a) {
          Oa.prototype.__setStageReference.call(this, a);
          null !=
            this.__currentState && this.__currentState.__setStageReference(a);
          null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__setStageReference(a)
        },
        __setTransformDirty: function() {
          Oa.prototype.__setTransformDirty.call(this);
          null != this.__currentState && this.__currentState.__setTransformDirty();
          null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__setTransformDirty()
        },
        __update: function(a, b) {
          Oa.prototype.__update.call(this,
            a, b);
          b && (null != this.__currentState && this.__currentState.__update(a, !0), null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__update(a, !0))
        },
        __updateTransforms: function(a) {
          Oa.prototype.__updateTransforms.call(this, a);
          null != this.__currentState && this.__currentState.__updateTransforms();
          null != this.get_hitTestState() && this.get_hitTestState() != this.__currentState && this.get_hitTestState().__updateTransforms()
        },
        get_downState: function() {
          return this.__downState
        },
        set_downState: function(a) {
          null != this.__downState && this.__currentState == this.__downState && this.set___currentState(this.__downState);
          return this.__downState = a
        },
        get_hitTestState: function() {
          return this.__hitTestState
        },
        set_hitTestState: function(a) {
          null != this.__hitTestState && this.__hitTestState != a && this.__hitTestState != this.get_downState() && this.__hitTestState != this.get_upState() && this.__hitTestState != this.get_overState() && (this.__hitTestState.__renderParent = null);
          null != a && (a.__renderParent = this, a.__renderDirty ||
            (a.__renderDirty = !0, a.__setParentRenderDirty()));
          return this.__hitTestState = a
        },
        get_overState: function() {
          return this.__overState
        },
        set_overState: function(a) {
          null != this.__overState && this.__currentState == this.__overState && this.set___currentState(a);
          return this.__overState = a
        },
        get_soundTransform: function() {
          null == this.__soundTransform && (this.__soundTransform = new mf);
          return new mf(this.__soundTransform.volume, this.__soundTransform.pan)
        },
        set_soundTransform: function(a) {
          this.__soundTransform = new mf(a.volume,
            a.pan);
          return a
        },
        get_upState: function() {
          return this.__upState
        },
        set_upState: function(a) {
          null != this.__upState && this.__currentState == this.__upState && this.set___currentState(a);
          return this.__upState = a
        },
        set___currentState: function(a) {
          null != this.__currentState && this.__currentState != this.get_hitTestState() && (this.__currentState.__renderParent = null);
          null != a && null != a.parent && a.parent.removeChild(a);
          ya.__supportDOM && null == this.__previousStates && (this.__previousStates = Fb.toObjectVector(null));
          if (a != this.__currentState) {
            if (ya.__supportDOM) {
              null !=
                this.__currentState && (this.__currentState.__setStageReference(null), this.__previousStates.push(this.__currentState));
              var b = this.__previousStates.indexOf(a, 0); - 1 < b && this.__previousStates.splice(b, 1)
            }
            null != a && (a.__renderParent = this, a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty()));
            this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
          }
          return this.__currentState = a
        },
        __this_onMouseDown: function(a) {
          this.enabled && this.set___currentState(this.get_downState())
        },
        __this_onMouseOut: function(a) {
          this.__ignoreEvent = !1;
          this.get_upState() != this.__currentState && this.set___currentState(this.get_upState())
        },
        __this_onMouseOver: function(a) {
          a.buttonDown && (this.__ignoreEvent = !0);
          this.get_overState() != this.__currentState && null != this.get_overState() && !this.__ignoreEvent && this.enabled && this.set___currentState(this.get_overState())
        },
        __this_onMouseUp: function(a) {
          this.__ignoreEvent = !1;
          this.enabled && null != this.get_overState() ? this.set___currentState(this.get_overState()) : this.set___currentState(this.get_upState())
        },
        __class__: Ui,
        __properties__: t(Oa.prototype.__properties__, {
          set___currentState: "set___currentState",
          set_upState: "set_upState",
          get_upState: "get_upState",
          set_soundTransform: "set_soundTransform",
          get_soundTransform: "get_soundTransform",
          set_overState: "set_overState",
          get_overState: "get_overState",
          set_hitTestState: "set_hitTestState",
          get_hitTestState: "get_hitTestState",
          set_downState: "set_downState",
          get_downState: "get_downState"
        })
      });
      var Vi = function(a, b) {
        Da.call(this);
        this.__drawableType = 5;
        this.set_name(null);
        this.__color = -1;
        this.__colorSplit = [255, 255, 255];
        this.__colorString = "#FFFFFF";
        this.__contentsScaleFactor = 1;
        this.__deltaTime = this.__currentTabOrderIndex = 0;
        this.__displayState = 2;
        this.__logicalHeight = this.__logicalWidth = this.__lastClickTime = this.__mouseY = this.__mouseX = 0;
        this.__displayMatrix = new Ea;
        this.__displayRect = new ha;
        this.__renderDirty = !0;
        this.stage3Ds = Fb.toObjectVector(null);
        this.stage3Ds.push(new ci(this));
        this.stage3Ds.push(new ci(this));
        this.stage3Ds.push(new ci(this));
        this.stage3Ds.push(new ci(this));
        this.stage =
          this;
        this.align = 6;
        this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
        this.__quality = 1;
        this.__scaleMode = 2;
        this.showDefaultContextMenu = !0;
        this.softKeyboardRect = new ha;
        this.stageFocusRect = !0;
        this.__macKeyboard = /AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent) || /Mac/.test(navigator.platform);
        this.__clearBeforeRender = !0;
        this.__forceRender = !1;
        this.__stack = [];
        this.__rollOutStack = [];
        this.__mouseOutStack = [];
        this.__touchData = new Za;
        this.application = a.application;
        this.window =
          a;
        this.set_color(b);
        this.__contentsScaleFactor = a.__scale;
        this.__wasFullscreen = a.__fullscreen;
        this.__resize();
        null == Ja.get_current().stage && this.stage.addChild(Ja.get_current())
      };
      k["openfl.display.Stage"] = Vi;
      Vi.__name__ = "openfl.display.Stage";
      Vi.__interfaces__ = [Sj];
      Vi.__super__ = Da;
      Vi.prototype = t(Da.prototype, {
        align: null,
        allowsFullScreen: null,
        allowsFullScreenInteractive: null,
        application: null,
        context3D: null,
        showDefaultContextMenu: null,
        softKeyboardRect: null,
        stage3Ds: null,
        stageFocusRect: null,
        stageHeight: null,
        stageWidth: null,
        window: null,
        __cacheFocus: null,
        __clearBeforeRender: null,
        __color: null,
        __colorSplit: null,
        __colorString: null,
        __contentsScaleFactor: null,
        __currentTabOrderIndex: null,
        __deltaTime: null,
        __dirty: null,
        __displayMatrix: null,
        __displayRect: null,
        __displayState: null,
        __dragBounds: null,
        __dragObject: null,
        __dragOffsetX: null,
        __dragOffsetY: null,
        __focus: null,
        __forceRender: null,
        __fullscreen: null,
        __fullScreenSourceRect: null,
        __invalidated: null,
        __lastClickTime: null,
        __logicalWidth: null,
        __logicalHeight: null,
        __macKeyboard: null,
        __mouseDownLeft: null,
        __mouseDownMiddle: null,
        __mouseDownRight: null,
        __mouseOutStack: null,
        __mouseOverTarget: null,
        __mouseX: null,
        __mouseY: null,
        __pendingMouseEvent: null,
        __pendingMouseX: null,
        __pendingMouseY: null,
        __quality: null,
        __renderer: null,
        __rendering: null,
        __rollOutStack: null,
        __scaleMode: null,
        __stack: null,
        __touchData: null,
        __transparent: null,
        __wasDirty: null,
        __wasFullscreen: null,
        __primaryTouch: null,
        invalidate: function() {
          this.__renderDirty = this.__invalidated = !0
        },
        localToGlobal: function(a) {
          return a.clone()
        },
        __broadcastEvent: function(a) {
          if (Object.prototype.hasOwnProperty.call(ya.__broadcastEvents.h, a.type))
            for (var b = ya.__broadcastEvents.h[a.type], c = 0; c < b.length;) {
              var d = b[c];
              ++c;
              if (d.stage == this || null == d.stage) try {
                d.__dispatch(a)
              } catch (e) {
                pa.lastError = e, d = F.caught(e).unwrap(), this.__handleError(d)
              }
            }
        },
        __createRenderer: function() {
          var a = 1;
          1 < this.window.__scale && (a = this.window.devicePixelRatio || 1);
          var b = this.window.__width * this.window.__scale | 0,
            c = this.window.__height * this.window.__scale | 0;
          switch (this.window.context.type) {
            case "canvas":
              this.__renderer =
                new Dg(this.window.context.canvas2D);
              K.__cast(this.__renderer, Dg).pixelRatio = a;
              break;
            case "dom":
              this.__renderer = new Qi(this.window.context.dom), K.__cast(this.__renderer, Qi).pixelRatio = a
          }
          null != this.__renderer && (a = this.get_quality(), this.__renderer.__allowSmoothing = 2 != a, this.__renderer.__worldTransform = this.__displayMatrix, this.__renderer.__stage = this, this.__renderer.__resize(b, c))
        },
        __dispatchEvent: function(a) {
          try {
            return Da.prototype.__dispatchEvent.call(this, a)
          } catch (b) {
            return pa.lastError = b, a = F.caught(b).unwrap(),
              this.__handleError(a), !1
          }
        },
        __dispatchPendingMouseEvent: function() {
          this.__pendingMouseEvent && (this.__onMouse("mouseMove", this.__pendingMouseX, this.__pendingMouseY, 0), this.__pendingMouseEvent = !1)
        },
        __dispatchStack: function(a, b) {
          try {
            var c = b.length;
            if (0 == c) {
              a.eventPhase = 2;
              var d = a.target;
              d.__dispatch(a)
            } else {
              a.eventPhase = 1;
              a.target = b[b.length - 1];
              for (var e = 0, f = c - 1; e < f;) {
                var g = e++;
                b[g].__dispatch(a);
                if (a.__isCanceled) return
              }
              a.eventPhase = 2;
              d = a.target;
              d.__dispatch(a);
              if (!a.__isCanceled && a.bubbles)
                for (a.eventPhase =
                  3, g = c - 2; 0 <= g;) {
                  b[g].__dispatch(a);
                  if (a.__isCanceled) break;
                  --g
                }
            }
          } catch (h) {
            pa.lastError = h, a = F.caught(h).unwrap(), this.__handleError(a)
          }
        },
        __dispatchTarget: function(a, b) {
          try {
            return a.__dispatchEvent(b)
          } catch (c) {
            return pa.lastError = c, a = F.caught(c).unwrap(), this.__handleError(a), !1
          }
        },
        __drag: function(a) {
          var b = this.__dragObject.parent;
          if (null != b) {
            b = b.__getWorldTransform();
            var c = b.a * b.d - b.b * b.c;
            if (0 == c) a.x = -b.tx, a.y = -b.ty;
            else {
              var d = 1 / c * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
              a.y = 1 / c * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
              a.x = d
            }
          }
          b = a.x + this.__dragOffsetX;
          a = a.y + this.__dragOffsetY;
          null != this.__dragBounds && (b < this.__dragBounds.x ? b = this.__dragBounds.x : b > this.__dragBounds.get_right() && (b = this.__dragBounds.get_right()), a < this.__dragBounds.y ? a = this.__dragBounds.y : a > this.__dragBounds.get_bottom() && (a = this.__dragBounds.get_bottom()));
          this.__dragObject.set_x(b);
          this.__dragObject.set_y(a)
        },
        __getInteractive: function(a) {
          null != a && a.push(this);
          return !0
        },
        __globalToLocal: function(a, b) {
          a != b && b.copyFrom(a);
          return b
        },
        __handleError: function(a) {
          var b =
            new Wi("uncaughtError", !0, !0, a);
          try {
            Ja.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b)
          } catch (d) {
            pa.lastError = d
          }
          if (!b.__preventDefault) {
            b = nf.toString(nf.exceptionStack());
            console.log(b);
            b = M.string(a);
            console.log(b);
            try {
              if (null != a && Object.prototype.hasOwnProperty.call(a, "stack") && null != a.stack && "" != a.stack) console.log(a.stack), a.stack = a.stack;
              else {
                var c = nf.toString(nf.callStack());
                console.log(c)
              }
            } catch (d) {
              pa.lastError = d
            }
            throw a;
          }
        },
        __onKey: function(a, b, c) {
          this.__dispatchPendingMouseEvent();
          Ob.__altKey = Db.get_altKey(c);
          Ob.__commandKey = Db.get_metaKey(c);
          Ob.__ctrlKey = Db.get_ctrlKey(c);
          Ob.__shiftKey = Db.get_shiftKey(c);
          var d = [];
          null == this.__focus ? this.__getInteractive(d) : this.__focus.__getInteractive(d);
          if (0 < d.length) {
            switch (b) {
              case 1073741908:
              case 1073741909:
              case 1073741910:
              case 1073741911:
              case 1073741912:
              case 1073741913:
              case 1073741914:
              case 1073741915:
              case 1073741916:
              case 1073741917:
              case 1073741918:
              case 1073741919:
              case 1073741920:
              case 1073741921:
              case 1073741922:
              case 1073741923:
              case 1073742044:
                var e =
                  3;
                break;
              case 1073742048:
              case 1073742049:
              case 1073742050:
              case 1073742051:
                e = 1;
                break;
              case 1073742052:
              case 1073742053:
              case 1073742054:
              case 1073742055:
                e = 2;
                break;
              default:
                e = 0
            }
            switch (b) {
              case 8:
                b = 8;
                break;
              case 9:
                b = 9;
                break;
              case 13:
                b = 13;
                break;
              case 27:
                b = 27;
                break;
              case 32:
                b = 32;
                break;
              case 33:
                b = 49;
                break;
              case 34:
                b = 222;
                break;
              case 35:
                b = 51;
                break;
              case 36:
                b = 52;
                break;
              case 37:
                b = 53;
                break;
              case 38:
                b = 55;
                break;
              case 39:
                b = 222;
                break;
              case 40:
                b = 57;
                break;
              case 41:
                b = 48;
                break;
              case 42:
                b = 56;
                break;
              case 44:
                b = 188;
                break;
              case 45:
                b = 189;
                break;
              case 46:
                b = 190;
                break;
              case 47:
                b = 191;
                break;
              case 48:
                b = 48;
                break;
              case 49:
                b = 49;
                break;
              case 50:
                b = 50;
                break;
              case 51:
                b = 51;
                break;
              case 52:
                b = 52;
                break;
              case 53:
                b = 53;
                break;
              case 54:
                b = 54;
                break;
              case 55:
                b = 55;
                break;
              case 56:
                b = 56;
                break;
              case 57:
                b = 57;
                break;
              case 58:
                b = 186;
                break;
              case 59:
                b = 186;
                break;
              case 60:
                b = 60;
                break;
              case 61:
                b = 187;
                break;
              case 62:
                b = 190;
                break;
              case 63:
                b = 191;
                break;
              case 64:
                b = 50;
                break;
              case 91:
                b = 219;
                break;
              case 92:
                b = 220;
                break;
              case 93:
                b = 221;
                break;
              case 94:
                b = 54;
                break;
              case 95:
                b = 189;
                break;
              case 96:
                b = 192;
                break;
              case 97:
                b = 65;
                break;
              case 98:
                b = 66;
                break;
              case 99:
                b = 67;
                break;
              case 100:
                b = 68;
                break;
              case 101:
                b = 69;
                break;
              case 102:
                b = 70;
                break;
              case 103:
                b = 71;
                break;
              case 104:
                b = 72;
                break;
              case 105:
                b = 73;
                break;
              case 106:
                b = 74;
                break;
              case 107:
                b = 75;
                break;
              case 108:
                b = 76;
                break;
              case 109:
                b = 77;
                break;
              case 110:
                b = 78;
                break;
              case 111:
                b = 79;
                break;
              case 112:
                b = 80;
                break;
              case 113:
                b = 81;
                break;
              case 114:
                b = 82;
                break;
              case 115:
                b = 83;
                break;
              case 116:
                b = 84;
                break;
              case 117:
                b = 85;
                break;
              case 118:
                b = 86;
                break;
              case 119:
                b = 87;
                break;
              case 120:
                b = 88;
                break;
              case 121:
                b = 89;
                break;
              case 122:
                b = 90;
                break;
              case 127:
                b =
                  46;
                break;
              case 1073741881:
                b = 20;
                break;
              case 1073741882:
                b = 112;
                break;
              case 1073741883:
                b = 113;
                break;
              case 1073741884:
                b = 114;
                break;
              case 1073741885:
                b = 115;
                break;
              case 1073741886:
                b = 116;
                break;
              case 1073741887:
                b = 117;
                break;
              case 1073741888:
                b = 118;
                break;
              case 1073741889:
                b = 119;
                break;
              case 1073741890:
                b = 120;
                break;
              case 1073741891:
                b = 121;
                break;
              case 1073741892:
                b = 122;
                break;
              case 1073741893:
                b = 123;
                break;
              case 1073741894:
                b = 301;
                break;
              case 1073741895:
                b = 145;
                break;
              case 1073741896:
                b = 19;
                break;
              case 1073741897:
                b = 45;
                break;
              case 1073741898:
                b = 36;
                break;
              case 1073741899:
                b = 33;
                break;
              case 1073741901:
                b = 35;
                break;
              case 1073741902:
                b = 34;
                break;
              case 1073741903:
                b = 39;
                break;
              case 1073741904:
                b = 37;
                break;
              case 1073741905:
                b = 40;
                break;
              case 1073741906:
                b = 38;
                break;
              case 1073741907:
                b = 144;
                break;
              case 1073741908:
                b = 111;
                break;
              case 1073741909:
                b = 106;
                break;
              case 1073741910:
                b = 109;
                break;
              case 1073741911:
                b = 107;
                break;
              case 1073741912:
                b = 13;
                break;
              case 1073741913:
                b = 97;
                break;
              case 1073741914:
                b = 98;
                break;
              case 1073741915:
                b = 99;
                break;
              case 1073741916:
                b = 100;
                break;
              case 1073741917:
                b = 101;
                break;
              case 1073741918:
                b =
                  102;
                break;
              case 1073741919:
                b = 103;
                break;
              case 1073741920:
                b = 104;
                break;
              case 1073741921:
                b = 105;
                break;
              case 1073741922:
                b = 96;
                break;
              case 1073741923:
                b = 110;
                break;
              case 1073741925:
                b = 302;
                break;
              case 1073741928:
                b = 124;
                break;
              case 1073741929:
                b = 125;
                break;
              case 1073741930:
                b = 126;
                break;
              case 1073741982:
                b = 13;
                break;
              case 1073742044:
                b = 110;
                break;
              case 1073742048:
                b = 17;
                break;
              case 1073742049:
                b = 16;
                break;
              case 1073742050:
                b = 18;
                break;
              case 1073742051:
                b = 15;
                break;
              case 1073742052:
                b = 17;
                break;
              case 1073742053:
                b = 16;
                break;
              case 1073742054:
                b = 18;
                break;
              case 1073742055:
                b = 15
            }
            var f = Ca.__getCharCode(b, Db.get_shiftKey(c));
            if ("keyUp" == a && (32 == b || 13 == b) && this.__focus instanceof Z) {
              var g = K.__cast(this.__focus, Z);
              if (g.get_buttonMode() && 1 == g.focusRect) {
                var h = la.__pool.get(),
                  m = la.__pool.get();
                m.x = this.__mouseX;
                m.y = this.__mouseY;
                g = Ob.__create("click", 0, this.__mouseX, this.__mouseY, g.__globalToLocal(m, h), g);
                this.__dispatchStack(g, d);
                la.__pool.release(m);
                la.__pool.release(h)
              }
            }
            e = new di(a, !0, !0, f, b, e, this.__macKeyboard ? Db.get_ctrlKey(c) || Db.get_metaKey(c) : Db.get_ctrlKey(c),
              Db.get_altKey(c), Db.get_shiftKey(c), Db.get_ctrlKey(c), Db.get_metaKey(c));
            d.reverse();
            this.__dispatchStack(e, d);
            if (e.__preventDefault) "keyDown" == a ? this.window.onKeyDown.cancel() : this.window.onKeyUp.cancel();
            else if ("keyDown" == a && 9 == b) {
              d = [];
              this.__tabTest(d);
              b = -1;
              a = null;
              e = Db.get_shiftKey(c) ? -1 : 1;
              if (1 < d.length) {
                me.sort(d, function(a, b) {
                  return a.get_tabIndex() - b.get_tabIndex()
                });
                if (-1 != d[d.length - 1].get_tabIndex())
                  for (h = 0; h < d.length;) {
                    if (-1 < d[h].get_tabIndex()) {
                      0 < h && d.splice(0, h);
                      break
                    }++h
                  }
                if (null != this.get_focus()) {
                  h =
                    this.get_focus();
                  for (f = d.indexOf(h); - 1 == f && null != h;) {
                    b = h.parent;
                    if (null != b && b.get_tabChildren()) {
                      h = b.getChildIndex(h);
                      if (-1 == h) {
                        h = b;
                        continue
                      }
                      for (h += e; Db.get_shiftKey(c) ? 0 <= h : h < b.get_numChildren();) {
                        m = b.getChildAt(h);
                        if (m instanceof Oa && (f = K.__cast(m, Oa), f = d.indexOf(f), -1 != f)) {
                          e = 0;
                          break
                        }
                        h += e
                      }
                    } else Db.get_shiftKey(c) && (f = d.indexOf(b), -1 != f && (e = 0));
                    h = b
                  }
                  b = 0 > f ? 0 : f + e
                } else b = this.__currentTabOrderIndex
              } else 1 == d.length && (a = d[0], this.get_focus() == a && (a = null));
              f = 0 <= b && b < d.length;
              1 == d.length || 0 == d.length &&
                null != this.get_focus() ? b = 0 : 1 < d.length && (0 > b && (b += d.length), b %= d.length, a = d[b], a == this.get_focus() && (b += e, 0 > b && (b += d.length), b %= d.length, a = d[b]));
              e = null;
              null != this.get_focus() && (e = new Zf("keyFocusChange", !0, !0, a, Db.get_shiftKey(c), 0), d = [], this.get_focus().__getInteractive(d), d.reverse(), this.__dispatchStack(e, d), e.isDefaultPrevented() && this.window.onKeyDown.cancel());
              null != e && e.isDefaultPrevented() || (this.__currentTabOrderIndex = b, null != a && this.set_focus(a), f && this.window.onKeyDown.cancel())
            }
          }
        },
        __onLimeCreateWindow: function(a) {
          if (this.window ==
            a) {
            var b = r(this, this.__onLimeWindowActivate);
            a.onActivate.add(function() {
              b(a)
            });
            var c = r(this, this.__onLimeWindowClose);
            a.onClose.add(function() {
              c(a)
            }, !1, -9E3);
            var d = r(this, this.__onLimeWindowDeactivate);
            a.onDeactivate.add(function() {
              d(a)
            });
            var e = r(this, this.__onLimeWindowDropFile);
            var f = function(b) {
              e(a, b)
            };
            a.onDropFile.add(f);
            var g = r(this, this.__onLimeWindowEnter);
            a.onEnter.add(function() {
              g(a)
            });
            var h = r(this, this.__onLimeWindowExpose);
            a.onExpose.add(function() {
              h(a)
            });
            var m = r(this, this.__onLimeWindowFocusIn);
            a.onFocusIn.add(function() {
              m(a)
            });
            var l = r(this, this.__onLimeWindowFocusOut);
            a.onFocusOut.add(function() {
              l(a)
            });
            var p = r(this, this.__onLimeWindowFullscreen);
            a.onFullscreen.add(function() {
              p(a)
            });
            var n = r(this, this.__onLimeKeyDown);
            f = function(b, c) {
              n(a, b, c)
            };
            a.onKeyDown.add(f);
            var k = r(this, this.__onLimeKeyUp);
            f = function(b, c) {
              k(a, b, c)
            };
            a.onKeyUp.add(f);
            var q = r(this, this.__onLimeWindowLeave);
            a.onLeave.add(function() {
              q(a)
            });
            var u = r(this, this.__onLimeWindowMinimize);
            a.onMinimize.add(function() {
              u(a)
            });
            var v =
              r(this, this.__onLimeMouseDown);
            f = function(b, c, d) {
              v(a, b, c, d)
            };
            a.onMouseDown.add(f);
            var t = r(this, this.__onLimeMouseMove);
            f = function(b, c) {
              t(a, b, c)
            };
            a.onMouseMove.add(f);
            var w = r(this, this.__onLimeMouseMoveRelative);
            f = function(b, c) {
              w(a, b, c)
            };
            a.onMouseMoveRelative.add(f);
            var z = r(this, this.__onLimeMouseUp);
            f = function(b, c, d) {
              z(a, b, c, d)
            };
            a.onMouseUp.add(f);
            var Q = r(this, this.__onLimeMouseWheel);
            f = function(b, c, d) {
              Q(a, b, c, d)
            };
            a.onMouseWheel.add(f);
            var O = r(this, this.__onLimeWindowMove);
            f = function(b, c) {
              O(a, b, c)
            };
            a.onMove.add(f);
            a.onRender.add(r(this, this.__onLimeRender));
            a.onRenderContextLost.add(r(this, this.__onLimeRenderContextLost));
            a.onRenderContextRestored.add(r(this, this.__onLimeRenderContextRestored));
            var A = r(this, this.__onLimeWindowResize);
            f = function(b, c) {
              A(a, b, c)
            };
            a.onResize.add(f);
            var aa = r(this, this.__onLimeWindowRestore);
            a.onRestore.add(function() {
              aa(a)
            });
            var B = r(this, this.__onLimeTextEdit);
            f = function(b, c, d) {
              B(a, b, c, d)
            };
            a.onTextEdit.add(f);
            var D = r(this, this.__onLimeTextInput);
            f = function(b) {
              D(a,
                b)
            };
            a.onTextInput.add(f);
            this.__onLimeWindowCreate(a)
          }
        },
        __onLimeGamepadAxisMove: function(a, b, c) {
          try {
            $b.__onGamepadAxisMove(a, b, c)
          } catch (d) {
            pa.lastError = d, a = F.caught(d).unwrap(), this.__handleError(a)
          }
        },
        __onLimeGamepadButtonDown: function(a, b) {
          try {
            $b.__onGamepadButtonDown(a, b)
          } catch (c) {
            pa.lastError = c, a = F.caught(c).unwrap(), this.__handleError(a)
          }
        },
        __onLimeGamepadButtonUp: function(a, b) {
          try {
            $b.__onGamepadButtonUp(a, b)
          } catch (c) {
            pa.lastError = c, a = F.caught(c).unwrap(), this.__handleError(a)
          }
        },
        __onLimeGamepadConnect: function(a) {
          try {
            $b.__onGamepadConnect(a)
          } catch (g) {
            pa.lastError =
              g;
            var b = F.caught(g).unwrap();
            this.__handleError(b)
          }
          var c = r(this, this.__onLimeGamepadAxisMove);
          b = function(b, d) {
            c(a, b, d)
          };
          a.onAxisMove.add(b);
          var d = r(this, this.__onLimeGamepadButtonDown);
          b = function(b) {
            d(a, b)
          };
          a.onButtonDown.add(b);
          var e = r(this, this.__onLimeGamepadButtonUp);
          b = function(b) {
            e(a, b)
          };
          a.onButtonUp.add(b);
          var f = r(this, this.__onLimeGamepadDisconnect);
          a.onDisconnect.add(function() {
            f(a)
          })
        },
        __onLimeGamepadDisconnect: function(a) {
          try {
            $b.__onGamepadDisconnect(a)
          } catch (b) {
            pa.lastError = b, a = F.caught(b).unwrap(),
              this.__handleError(a)
          }
        },
        __onLimeKeyDown: function(a, b, c) {
          null != this.window && this.window == a && this.__onKey("keyDown", b, c)
        },
        __onLimeKeyUp: function(a, b, c) {
          null != this.window && this.window == a && this.__onKey("keyUp", b, c)
        },
        __onLimeModuleExit: function(a) {
          null != this.window && (a = new ma("deactivate"), this.__broadcastEvent(a))
        },
        __onLimeMouseDown: function(a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var e = "middleMouseDown";
                break;
              case 2:
                e = "rightMouseDown";
                break;
              default:
                e = "mouseDown"
            }
            this.__onMouse(e, b * a.__scale | 0, c * a.__scale | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel()
          }
        },
        __onLimeMouseMove: function(a, b, c) {
          null != this.window && this.window == a && (this.__pendingMouseEvent = !0, this.__pendingMouseX = b * a.__scale | 0, this.__pendingMouseY = c * a.__scale | 0)
        },
        __onLimeMouseMoveRelative: function(a, b, c) {},
        __onLimeMouseUp: function(a, b, c, d) {
          if (null != this.window && this.window == a) {
            this.__dispatchPendingMouseEvent();
            switch (d) {
              case 1:
                var e = "middleMouseUp";
                break;
              case 2:
                e =
                  "rightMouseUp";
                break;
              default:
                e = "mouseUp"
            }
            this.__onMouse(e, b * a.__scale | 0, c * a.__scale | 0, d);
            this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel()
          }
        },
        __onLimeMouseWheel: function(a, b, c, d) {
          null != this.window && this.window == a && (this.__dispatchPendingMouseEvent(), d == Bh.PIXELS ? this.__onMouseWheel(b * a.__scale | 0, c * a.__scale | 0, d) : this.__onMouseWheel(b | 0, c | 0, d))
        },
        __onLimeRender: function(a) {
          if (!this.__rendering) {
            this.__rendering = !0;
            this.__broadcastEvent(new ma("enterFrame"));
            this.__broadcastEvent(new ma("frameConstructed"));
            this.__broadcastEvent(new ma("exitFrame"));
            this.__renderable = !0;
            this.__enterFrame(this.__deltaTime);
            this.__deltaTime = 0;
            a = null != this.__renderer && (this.__renderDirty || this.__forceRender);
            if (this.__invalidated && a) {
              this.__invalidated = !1;
              var b = new ma("render");
              this.__broadcastEvent(b)
            }
            this.__update(!1, !0);
            if (null != this.__renderer) {
              if (null != this.context3D) {
                for (b = this.stage3Ds.iterator(); b.hasNext();) {
                  var c = b.next();
                  this.context3D.__renderStage3D(c)
                }
                this.context3D.__present && (a = !0)
              }
              a ? (null == this.context3D &&
                this.__renderer.__clear(), this.__renderer.__render(this)) : null == this.context3D && this.window.onRender.cancel();
              null != this.context3D && (this.context3D.__present ? (this.__renderer.__cleared || this.__renderer.__clear(), this.context3D.__present = !1, this.context3D.__cleared = !1) : this.window.onRender.cancel());
              this.__renderer.__cleared = !1
            }
            this.__rendering = !1
          }
        },
        __onLimeRenderContextLost: function() {
          this.context3D = this.__renderer = null;
          for (var a = this.stage3Ds.iterator(); a.hasNext();) a.next().__lostContext()
        },
        __onLimeRenderContextRestored: function(a) {
          this.__createRenderer();
          for (a = this.stage3Ds.iterator(); a.hasNext();) a.next().__restoreContext()
        },
        __onLimeTextEdit: function(a, b, c, d) {},
        __onLimeTextInput: function(a, b) {
          if (null != this.window && this.window == a) {
            var c = [];
            null == this.__focus ? this.__getInteractive(c) : this.__focus.__getInteractive(c);
            b = new hf("textInput", !0, !0, b);
            0 < c.length ? (c.reverse(), this.__dispatchStack(b, c)) : this.__dispatchEvent(b);
            b.isDefaultPrevented() && a.onTextInput.cancel()
          }
        },
        __onLimeTouchCancel: function(a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch =
            null);
          this.__onTouch("touchEnd", a, b)
        },
        __onLimeTouchMove: function(a) {
          this.__onTouch("touchMove", a, this.__primaryTouch == a)
        },
        __onLimeTouchEnd: function(a) {
          var b = this.__primaryTouch == a;
          b && (this.__primaryTouch = null);
          this.__onTouch("touchEnd", a, b)
        },
        __onLimeTouchStart: function(a) {
          null == this.__primaryTouch && (this.__primaryTouch = a);
          this.__onTouch("touchBegin", a, this.__primaryTouch == a)
        },
        __onLimeUpdate: function(a) {
          this.__deltaTime = a;
          this.__dispatchPendingMouseEvent()
        },
        __onLimeWindowActivate: function(a) {},
        __onLimeWindowClose: function(a) {
          this.window ==
            a && (this.window = null);
          this.__primaryTouch = null;
          a = new ma("deactivate");
          this.__broadcastEvent(a)
        },
        __onLimeWindowCreate: function(a) {
          null != this.window && this.window == a && null != a.context && this.__createRenderer()
        },
        __onLimeWindowDeactivate: function(a) {},
        __onLimeWindowDropFile: function(a, b) {},
        __onLimeWindowEnter: function(a) {},
        __onLimeWindowExpose: function(a) {
          null != this.window && this.window == a && (this.__renderDirty = !0)
        },
        __onLimeWindowFocusIn: function(a) {
          null != this.window && this.window == a && (this.__renderDirty = !0,
            a = new ma("activate"), this.__broadcastEvent(a), this.set_focus(this.__cacheFocus))
        },
        __onLimeWindowFocusOut: function(a) {
          null != this.window && this.window == a && (this.__primaryTouch = null, a = new ma("deactivate"), this.__broadcastEvent(a), a = this.get_focus(), this.set_focus(null), this.__cacheFocus = a, Ob.__altKey = !1, Ob.__commandKey = !1, Ob.__ctrlKey = !1, Ob.__shiftKey = !1)
        },
        __onLimeWindowFullscreen: function(a) {
          null != this.window && this.window == a && (this.__resize(), this.__wasFullscreen || (this.__wasFullscreen = !0, 2 == this.__displayState &&
            (this.__displayState = 1), this.__dispatchEvent(new dh("fullScreen", !1, !1, !0, !0))))
        },
        __onLimeWindowLeave: function(a) {
          null == this.window || this.window != a || Ob.__buttonDown || (this.__dispatchPendingMouseEvent(), a = new ma("mouseLeave"), this.__dispatchEvent(a))
        },
        __onLimeWindowMinimize: function(a) {},
        __onLimeWindowMove: function(a, b, c) {},
        __onLimeWindowResize: function(a, b, c) {
          null != this.window && this.window == a && (this.__resize(), this.__wasFullscreen && !a.__fullscreen && (this.__wasFullscreen = !1, this.__displayState = 2, this.__dispatchEvent(new dh("fullScreen",
            !1, !1, !1, !0))))
        },
        __onLimeWindowRestore: function(a) {
          null != this.window && this.window == a && this.__wasFullscreen && !a.__fullscreen && (this.__wasFullscreen = !1, this.__displayState = 2, this.__dispatchEvent(new dh("fullScreen", !1, !1, !1, !0)))
        },
        __onMouse: function(a, b, c, d) {
          if (!(2 < d)) {
            var e = la.__pool.get();
            e.setTo(b, c);
            b = this.__displayMatrix;
            c = b.a * b.d - b.b * b.c;
            if (0 == c) e.x = -b.tx, e.y = -b.ty;
            else {
              var f = 1 / c * (b.c * (b.ty - e.y) + b.d * (e.x - b.tx));
              e.y = 1 / c * (b.a * (e.y - b.ty) + b.b * (b.tx - e.x));
              e.x = f
            }
            this.__mouseX = e.x;
            this.__mouseY = e.y;
            b = [];
            this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this) ? f = b[b.length - 1] : (f = this, b = [this]);
            null == f && (f = this);
            var g = null;
            switch (a) {
              case "middleMouseDown":
                this.__mouseDownMiddle = f;
                break;
              case "middleMouseUp":
                this.__mouseDownMiddle == f && (g = "middleClick");
                this.__mouseDownMiddle = null;
                break;
              case "mouseDown":
                f.__allowMouseFocus() ? null != this.get_focus() ? (c = new Zf("mouseFocusChange", !0, !0, f, !1, 0), this.__dispatchStack(c, b), c.isDefaultPrevented() || this.set_focus(f)) : this.set_focus(f) : this.set_focus(null);
                this.__mouseDownLeft = f;
                Ob.__buttonDown = !0;
                break;
              case "mouseUp":
                if (null != this.__mouseDownLeft) {
                  Ob.__buttonDown = !1;
                  if (this.__mouseDownLeft == f) g = "click";
                  else {
                    var h = Ob.__create("releaseOutside", 1, this.__mouseX, this.__mouseY, new la(this.__mouseX, this.__mouseY), this);
                    this.__mouseDownLeft.dispatchEvent(h)
                  }
                  this.__mouseDownLeft = null
                }
                break;
              case "rightMouseDown":
                this.__mouseDownRight = f;
                break;
              case "rightMouseUp":
                this.__mouseDownRight == f && (g = "rightClick"), this.__mouseDownRight = null
            }
            c = la.__pool.get();
            h = Ob.__create(a,
              d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f);
            this.__dispatchStack(h, b);
            null != g && (h = Ob.__create(g, d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f), this.__dispatchStack(h, b), "mouseUp" == a && K.__cast(f, Oa).doubleClickEnabled && (a = Ja.getTimer(), 500 > a - this.__lastClickTime ? (h = Ob.__create("doubleClick", d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f), this.__dispatchStack(h, b), this.__lastClickTime = 0) : this.__lastClickTime = a));
            if ("auto" == te.__cursor && !te.__hidden) {
              h = null;
              if (null != this.__mouseDownLeft) h =
                this.__mouseDownLeft.__getCursor();
              else
                for (a = 0; a < b.length;)
                  if (h = b[a], ++a, h = h.__getCursor(), null != h) {
                    this.window.set_cursor(yf.toLimeCursor(h));
                    break
                  } null == h && this.window.set_cursor(qc.ARROW)
            }
            f != this.__mouseOverTarget && null != this.__mouseOverTarget && (h = Ob.__create("mouseOut", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, c), this.__mouseOverTarget), this.__dispatchStack(h, this.__mouseOutStack));
            for (a = 0; a < this.__rollOutStack.length;) g = this.__rollOutStack[a], -1 == b.indexOf(g) ? (da.remove(this.__rollOutStack,
              g), h = Ob.__create("rollOut", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, c), g), h.bubbles = !1, this.__dispatchTarget(g, h)) : ++a;
            for (a = 0; a < b.length;) g = b[a], ++a, -1 == this.__rollOutStack.indexOf(g) && null != this.__mouseOverTarget && (g.hasEventListener("rollOver") && (h = Ob.__create("rollOver", d, this.__mouseX, this.__mouseY, this.__mouseOverTarget.__globalToLocal(e, c), g), h.bubbles = !1, this.__dispatchTarget(g, h)), (g.hasEventListener("rollOut") || g.hasEventListener("rollOver")) && this.__rollOutStack.push(g));
            f != this.__mouseOverTarget && (null != f && (h = Ob.__create("mouseOver", d, this.__mouseX, this.__mouseY, f.__globalToLocal(e, c), f), this.__dispatchStack(h, b)), this.__mouseOverTarget = f, this.__mouseOutStack = b);
            null != this.__dragObject && (this.__drag(e), d = null, this.__mouseOverTarget == this.__dragObject ? (f = this.__dragObject.mouseEnabled, a = this.__dragObject.mouseChildren, this.__dragObject.mouseEnabled = !1, this.__dragObject.mouseChildren = !1, b = [], this.__hitTest(this.__mouseX, this.__mouseY, !0, b, !0, this) && (d = b[b.length - 1]),
              this.__dragObject.mouseEnabled = f, this.__dragObject.mouseChildren = a) : this.__mouseOverTarget != this && (d = this.__mouseOverTarget), this.__dragObject.dropTarget = d);
            la.__pool.release(e);
            la.__pool.release(c)
          }
        },
        __onMouseWheel: function(a, b, c) {
          var d = this.__mouseX,
            e = this.__mouseY;
          a = [];
          if (this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this)) var f = a[a.length - 1];
          else f = this, a = [this];
          null == f && (f = this);
          c = la.__pool.get();
          c.setTo(d, e);
          d = this.__displayMatrix;
          e = d.a * d.d - d.b * d.c;
          if (0 == e) c.x = -d.tx, c.y = -d.ty;
          else {
            var g =
              1 / e * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
            c.y = 1 / e * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
            c.x = g
          }
          b |= 0;
          b = Ob.__create("mouseWheel", 0, this.__mouseX, this.__mouseY, f.__globalToLocal(c, c), f, b);
          b.cancelable = !0;
          this.__dispatchStack(b, a);
          b.isDefaultPrevented() && this.window.onMouseWheel.cancel();
          la.__pool.release(c)
        },
        __onTouch: function(a, b, c) {
          var d = la.__pool.get();
          d.setTo(Math.round(b.x * this.window.__width * this.window.__scale), Math.round(b.y * this.window.__height * this.window.__scale));
          var e = this.__displayMatrix,
            f = e.a * e.d -
            e.b * e.c;
          if (0 == f) d.x = -e.tx, d.y = -e.ty;
          else {
            var g = 1 / f * (e.c * (e.ty - d.y) + e.d * (d.x - e.tx));
            d.y = 1 / f * (e.a * (d.y - e.ty) + e.b * (e.tx - d.x));
            d.x = g
          }
          e = d.x;
          f = d.y;
          g = [];
          if (this.__hitTest(e, f, !1, g, !0, this)) var h = g[g.length - 1];
          else h = this, g = [this];
          null == h && (h = this);
          var m = b.id;
          if (this.__touchData.h.hasOwnProperty(m)) var l = this.__touchData.h[m];
          else l = ei.__pool.get(), l.reset(), l.touch = b, this.__touchData.h[m] = l;
          var p = null,
            n = !1;
          switch (a) {
            case "touchBegin":
              l.touchDownTarget = h;
              break;
            case "touchEnd":
              l.touchDownTarget == h && (p = "touchTap"),
                l.touchDownTarget = null, n = !0
          }
          var k = la.__pool.get();
          a = $d.__create(a, null, e, f, h.__globalToLocal(d, k), h);
          a.touchPointID = m;
          a.isPrimaryTouchPoint = c;
          a.pressure = b.pressure;
          this.__dispatchStack(a, g);
          null != p && (a = $d.__create(p, null, e, f, h.__globalToLocal(d, k), h), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.pressure = b.pressure, this.__dispatchStack(a, g));
          p = l.touchOverTarget;
          h != p && null != p && (a = $d.__create("touchOut", null, e, f, p.__globalToLocal(d, k), p), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.pressure = b.pressure, this.__dispatchTarget(p,
            a));
          for (var q = l.rollOutStack, u, v = 0; v < q.length;) u = q[v], -1 == g.indexOf(u) ? (da.remove(q, u), a = $d.__create("touchRollOut", null, e, f, p.__globalToLocal(d, k), p), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !1, a.pressure = b.pressure, this.__dispatchTarget(u, a)) : ++v;
          for (v = 0; v < g.length;) u = g[v], ++v, -1 == q.indexOf(u) && (u.hasEventListener("touchRollOver") && (a = $d.__create("touchRollOver", null, e, f, p.__globalToLocal(d, k), u), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !1, a.pressure = b.pressure, this.__dispatchTarget(u,
            a)), u.hasEventListener("touchRollOut") && q.push(u));
          h != p && (null != h && (a = $d.__create("touchOver", null, e, f, h.__globalToLocal(d, k), h), a.touchPointID = m, a.isPrimaryTouchPoint = c, a.bubbles = !0, a.pressure = b.pressure, this.__dispatchTarget(h, a)), l.touchOverTarget = h);
          la.__pool.release(d);
          la.__pool.release(k);
          n && (this.__touchData.remove(m), l.reset(), ei.__pool.release(l))
        },
        __registerLimeModule: function(a) {
          a.onCreateWindow.add(r(this, this.__onLimeCreateWindow));
          a.onUpdate.add(r(this, this.__onLimeUpdate));
          a.onExit.add(r(this,
            this.__onLimeModuleExit), !1, 0);
          for (a = Nd.devices.iterator(); a.hasNext();) {
            var b = a.next();
            this.__onLimeGamepadConnect(b)
          }
          Nd.onConnect.add(r(this, this.__onLimeGamepadConnect));
          sd.onStart.add(r(this, this.__onLimeTouchStart));
          sd.onMove.add(r(this, this.__onLimeTouchMove));
          sd.onEnd.add(r(this, this.__onLimeTouchEnd));
          sd.onCancel.add(r(this, this.__onLimeTouchCancel))
        },
        __resize: function() {
          var a = this.stageWidth,
            b = this.stageHeight,
            c = this.window.__width * this.window.__scale | 0,
            d = this.window.__height * this.window.__scale |
            0;
          this.__logicalWidth = c;
          this.__logicalHeight = d;
          this.__displayMatrix.identity();
          if (null != this.get_fullScreenSourceRect() && this.window.__fullscreen) {
            this.stageWidth = this.get_fullScreenSourceRect().width | 0;
            this.stageHeight = this.get_fullScreenSourceRect().height | 0;
            var e = c / this.stageWidth,
              f = d / this.stageHeight;
            this.__displayMatrix.translate(-this.get_fullScreenSourceRect().x, -this.get_fullScreenSourceRect().y);
            this.__displayMatrix.scale(e, f);
            this.__displayRect.setTo(this.get_fullScreenSourceRect().get_left(),
              this.get_fullScreenSourceRect().get_right(), this.get_fullScreenSourceRect().get_top(), this.get_fullScreenSourceRect().get_bottom())
          } else {
            if (0 == this.__logicalWidth && 0 == this.__logicalHeight) this.stageWidth = c, this.stageHeight = d;
            else {
              this.stageWidth = this.__logicalWidth;
              this.stageHeight = this.__logicalHeight;
              e = Math.min(c / this.stageWidth, d / this.stageHeight);
              f = Math.round((c - this.stageWidth * e) / 2);
              var g = Math.round((d - this.stageHeight * e) / 2);
              this.__displayMatrix.scale(e, e);
              this.__displayMatrix.translate(f, g)
            }
            this.__displayRect.setTo(0,
              0, this.stageWidth, this.stageHeight)
          }
          null != this.context3D && this.context3D.configureBackBuffer(c, d, 0, !0, !0, !0);
          for (e = this.stage3Ds.iterator(); e.hasNext();) e.next().__resize(c, d);
          null != this.__renderer && this.__renderer.__resize(c, d);
          if (this.stageWidth != a || this.stageHeight != b) this.__renderDirty = !0, this.__setTransformDirty(), a = new ma("resize"), this.__dispatchEvent(a)
        },
        __setLogicalSize: function(a, b) {
          this.__logicalWidth = a;
          this.__logicalHeight = b;
          this.__resize()
        },
        __startDrag: function(a, b, c) {
          if (null == c) this.__dragBounds =
            null;
          else {
            this.__dragBounds = new ha;
            var d = c.get_right(),
              e = c.get_bottom();
            this.__dragBounds.x = d < c.x ? d : c.x;
            this.__dragBounds.y = e < c.y ? e : c.y;
            this.__dragBounds.width = Math.abs(c.width);
            this.__dragBounds.height = Math.abs(c.height)
          }
          this.__dragObject = a;
          null != this.__dragObject && (b ? this.__dragOffsetY = this.__dragOffsetX = 0 : (a = la.__pool.get(), a.setTo(this.get_mouseX(), this.get_mouseY()), b = this.__dragObject.parent, null != b && (b = b.__getWorldTransform(), c = b.a * b.d - b.b * b.c, 0 == c ? (a.x = -b.tx, a.y = -b.ty) : (d = 1 / c * (b.c * (b.ty - a.y) +
            b.d * (a.x - b.tx)), a.y = 1 / c * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x)), a.x = d)), this.__dragOffsetX = this.__dragObject.get_x() - a.x, this.__dragOffsetY = this.__dragObject.get_y() - a.y, la.__pool.release(a)))
        },
        __stopDrag: function(a) {
          this.__dragObject = this.__dragBounds = null
        },
        __unregisterLimeModule: function(a) {
          a.onCreateWindow.remove(r(this, this.__onLimeCreateWindow));
          a.onUpdate.remove(r(this, this.__onLimeUpdate));
          a.onExit.remove(r(this, this.__onLimeModuleExit));
          Nd.onConnect.remove(r(this, this.__onLimeGamepadConnect));
          sd.onStart.remove(r(this,
            this.__onLimeTouchStart));
          sd.onMove.remove(r(this, this.__onLimeTouchMove));
          sd.onEnd.remove(r(this, this.__onLimeTouchEnd));
          sd.onCancel.remove(r(this, this.__onLimeTouchCancel))
        },
        __update: function(a, b) {
          a ? this.__transformDirty && (Da.prototype.__update.call(this, !0, b), b && (this.__transformDirty = !1)) : this.__transformDirty || this.__renderDirty ? (Da.prototype.__update.call(this, !1, b), b && ya.__supportDOM && (this.__wasDirty = !0)) : !this.__renderDirty && this.__wasDirty && (Da.prototype.__update.call(this, !1, b), b && (this.__wasDirty = !1))
        },
        get_color: function() {
          return this.__color
        },
        set_color: function(a) {
          null == a ? (this.__transparent = !0, a = 0) : this.__transparent = !1;
          this.__color != a && (this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255, this.__colorSplit[1] = ((a & 65280) >>> 8) / 255, this.__colorSplit[2] = (a & 255) / 255, this.__colorString = "#" + W.hex(a & 16777215, 6), this.__renderDirty = !0, this.__color = -16777216 | a & 16777215);
          return a
        },
        get_contentsScaleFactor: function() {
          return this.__contentsScaleFactor
        },
        get_displayState: function() {
          return this.__displayState
        },
        set_displayState: function(a) {
          null != this.window && (2 == a ? this.window.__fullscreen && this.window.set_fullscreen(!1) : this.window.__fullscreen || this.window.set_fullscreen(!0));
          return this.__displayState = a
        },
        get_focus: function() {
          return this.__focus
        },
        set_focus: function(a) {
          if (a != this.__focus) {
            var b = this.__focus;
            this.__cacheFocus = this.__focus = a;
            if (null != b) {
              var c = new Zf("focusOut", !0, !1, a, !1, 0),
                d = [];
              b.__getInteractive(d);
              d.reverse();
              this.__dispatchStack(c, d)
            }
            null != a && (c = new Zf("focusIn", !0, !1, b, !1, 0), d = [], a.__getInteractive(d),
              d.reverse(), this.__dispatchStack(c, d))
          }
          return a
        },
        get_frameRate: function() {
          return null != this.window ? this.window.__backend.getFrameRate() : 0
        },
        set_frameRate: function(a) {
          return null != this.window ? this.window.__backend.setFrameRate(a) : a
        },
        get_fullScreenHeight: function() {
          return Math.ceil(this.window.get_display().currentMode.height * this.window.__scale)
        },
        get_fullScreenSourceRect: function() {
          return null == this.__fullScreenSourceRect ? null : this.__fullScreenSourceRect.clone()
        },
        set_fullScreenSourceRect: function(a) {
          null ==
            a ? null != this.__fullScreenSourceRect && (this.__fullScreenSourceRect = null, this.__resize()) : a.equals(this.__fullScreenSourceRect) || (this.__fullScreenSourceRect = a.clone(), this.__resize());
          return a
        },
        get_fullScreenWidth: function() {
          return Math.ceil(this.window.get_display().currentMode.width * this.window.__scale)
        },
        set_height: function(a) {
          return this.get_height()
        },
        get_mouseX: function() {
          return this.__mouseX
        },
        get_mouseY: function() {
          return this.__mouseY
        },
        get_quality: function() {
          return this.__quality
        },
        set_quality: function(a) {
          this.__quality =
            a;
          if (null != this.__renderer) {
            var b = this.get_quality();
            this.__renderer.__allowSmoothing = 2 != b
          }
          return a
        },
        set_rotation: function(a) {
          return 0
        },
        get_scaleMode: function() {
          return this.__scaleMode
        },
        set_scaleMode: function(a) {
          return this.__scaleMode = a
        },
        set_scaleX: function(a) {
          return 0
        },
        set_scaleY: function(a) {
          return 0
        },
        get_tabEnabled: function() {
          return !1
        },
        set_tabEnabled: function(a) {
          throw F.thrown(new qd("Error: The Stage class does not implement this property or method."));
        },
        get_tabIndex: function() {
          return -1
        },
        set_tabIndex: function(a) {
          throw F.thrown(new qd("Error: The Stage class does not implement this property or method."));
        },
        set_transform: function(a) {
          return this.get_transform()
        },
        set_width: function(a) {
          return this.get_width()
        },
        set_x: function(a) {
          return 0
        },
        set_y: function(a) {
          return 0
        },
        __class__: Vi,
        __properties__: t(Da.prototype.__properties__, {
          set_scaleMode: "set_scaleMode",
          get_scaleMode: "get_scaleMode",
          set_quality: "set_quality",
          get_quality: "get_quality",
          get_fullScreenWidth: "get_fullScreenWidth",
          set_fullScreenSourceRect: "set_fullScreenSourceRect",
          get_fullScreenSourceRect: "get_fullScreenSourceRect",
          get_fullScreenHeight: "get_fullScreenHeight",
          set_frameRate: "set_frameRate",
          get_frameRate: "get_frameRate",
          set_focus: "set_focus",
          get_focus: "get_focus",
          set_displayState: "set_displayState",
          get_displayState: "get_displayState",
          get_contentsScaleFactor: "get_contentsScaleFactor",
          set_color: "set_color",
          get_color: "get_color"
        })
      });
      var ci = function(a) {
        Ka.call(this);
        this.__stage = a;
        this.__height = 0;
        this.__projectionTransform = new ge;
        this.__renderTransform = new ge;
        this.__y = this.__x = this.__width = 0;
        this.visible = !0;
        0 < a.stageWidth && 0 < a.stageHeight && this.__resize(a.stageWidth,
          a.stageHeight)
      };
      k["openfl.display.Stage3D"] = ci;
      ci.__name__ = "openfl.display.Stage3D";
      ci.__super__ = Ka;
      ci.prototype = t(Ka.prototype, {
        context3D: null,
        visible: null,
        __contextLost: null,
        __contextRequested: null,
        __height: null,
        __indexBuffer: null,
        __projectionTransform: null,
        __renderTransform: null,
        __stage: null,
        __vertexBuffer: null,
        __width: null,
        __x: null,
        __y: null,
        __canvas: null,
        __renderContext: null,
        __style: null,
        __webgl: null,
        requestContext3D: function(a, b) {
          this.__contextLost ? this.__contextRequested = !0 : null != this.context3D ?
            (this.__contextRequested = !0, Ue.delay(r(this, this.__dispatchCreate), 1)) : this.__contextRequested || (this.__contextRequested = !0, Ue.delay(r(this, this.__createContext), 1))
        },
        requestContext3DMatchingProfiles: function(a) {
          this.requestContext3D()
        },
        __createContext: function() {
          var a = this.__stage,
            b = a.__renderer;
          if ("cairo" == b.__type || "canvas" == b.__type) this.__dispatchError();
          else if ("opengl" == b.__type) this.context3D = new ac(a, a.context3D.__contextState, this), this.__dispatchCreate();
          else if ("dom" == b.__type) {
            this.__canvas =
              window.document.createElement("canvas");
            this.__canvas.width = a.stageWidth;
            this.__canvas.height = a.stageHeight;
            var c = b.__context.attributes;
            a = Object.prototype.hasOwnProperty.call(c, "background") && null == c.background;
            b = Object.prototype.hasOwnProperty.call(c, "colorDepth") ? c.colorDepth : 32;
            c = Object.prototype.hasOwnProperty.call(c, "antialiasing") && 0 < c.antialiasing;
            this.__webgl = xq.getContextWebGL(this.__canvas, {
              alpha: a || 16 < b,
              antialias: c,
              depth: !0,
              premultipliedAlpha: !0,
              stencil: !0,
              preserveDrawingBuffer: !1
            });
            this.__dispatchError()
          }
        },
        __dispatchError: function() {
          this.__contextRequested = !1;
          this.dispatchEvent(new Ye("error", !1, !1, "Context3D not available"))
        },
        __dispatchCreate: function() {
          this.__contextRequested && (this.__contextRequested = !1, this.dispatchEvent(new ma("context3DCreate")))
        },
        __lostContext: function() {
          this.__contextLost = !0;
          null != this.context3D && (this.context3D.__dispose(), this.__contextRequested = !0)
        },
        __resize: function(a, b) {
          if (a != this.__width || b != this.__height) null != this.__canvas && (this.__canvas.width = a, this.__canvas.height =
            b), this.__projectionTransform.copyRawDataFrom(Fb.toFloatVector(null, null, null, [2 / (0 < a ? a : 1), 0, 0, 0, 0, -2 / (0 < b ? b : 1), 0, 0, 0, 0, -.001, 0, -1, 1, 0, 1])), this.__renderTransform.identity(), this.__renderTransform.appendTranslation(this.__x, this.__y, 0), this.__renderTransform.append(this.__projectionTransform), this.__width = a, this.__height = b
        },
        __restoreContext: function() {
          this.__contextLost = !1;
          this.__createContext()
        },
        get_x: function() {
          return this.__x
        },
        set_x: function(a) {
          if (this.__x == a) return a;
          this.__x = a;
          this.__renderTransform.identity();
          this.__renderTransform.appendTranslation(this.__x, this.__y, 0);
          this.__renderTransform.append(this.__projectionTransform);
          return a
        },
        get_y: function() {
          return this.__y
        },
        set_y: function(a) {
          if (this.__y == a) return a;
          this.__y = a;
          this.__renderTransform.identity();
          this.__renderTransform.appendTranslation(this.__x, this.__y, 0);
          this.__renderTransform.append(this.__projectionTransform);
          return a
        },
        __class__: ci,
        __properties__: {
          set_y: "set_y",
          get_y: "get_y",
          set_x: "set_x",
          get_x: "get_x"
        }
      });
      var sg = function(a, b, c, d, e, f, g, h) {
        null ==
          h && (h = 0);
        null == g && (g = 0);
        null == f && (f = 0);
        null == e && (e = 1);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.__id = a;
        this.__matrix = new Ea;
        0 != b && this.set_x(b);
        0 != c && this.set_y(c);
        1 != d && this.set_scaleX(d);
        1 != e && this.set_scaleY(e);
        0 != f && this.set_rotation(f);
        this.__dirty = !0;
        this.__length = 0;
        this.__originX = g;
        this.__originY = h;
        this.__alpha = 1;
        this.__blendMode = null;
        this.__visible = !0
      };
      k["openfl.display.Tile"] = sg;
      sg.__name__ = "openfl.display.Tile";
      sg.prototype = {
        data: null,
        parent: null,
        __alpha: null,
        __blendMode: null,
        __colorTransform: null,
        __dirty: null,
        __id: null,
        __length: null,
        __matrix: null,
        __originX: null,
        __originY: null,
        __rect: null,
        __rotation: null,
        __rotationCosine: null,
        __rotationSine: null,
        __scaleX: null,
        __scaleY: null,
        __shader: null,
        __tileset: null,
        __visible: null,
        clone: function() {
          var a = new sg(this.__id);
          a.__alpha = this.__alpha;
          a.__blendMode = this.__blendMode;
          a.__originX = this.__originX;
          a.__originY = this.__originY;
          null != this.__rect && (a.__rect = this.__rect.clone());
          a.set_matrix(this.__matrix.clone());
          a.__shader = this.__shader;
          a.set_tileset(this.__tileset);
          null != this.__colorTransform && (a.__colorTransform = this.__colorTransform.__clone());
          return a
        },
        getBounds: function(a) {
          var b = new ha;
          this.__findTileRect(b);
          var c = Ea.__pool.get();
          if (null != a && a != this) {
            c.copyFrom(this.__getWorldTransform());
            var d = Ea.__pool.get();
            d.copyFrom(a.__getWorldTransform());
            d.invert();
            c.concat(d);
            Ea.__pool.release(d)
          } else c.identity();
          this.__getBounds(b, c);
          Ea.__pool.release(c);
          return b
        },
        __getBounds: function(a, b) {
          a.__transform(a, b)
        },
        hitTestTile: function(a) {
          if (null !=
            a && null != a.parent && null != this.parent) {
            var b = this.getBounds(this);
            a = a.getBounds(this);
            return b.intersects(a)
          }
          return !1
        },
        invalidate: function() {
          this.__setRenderDirty()
        },
        __findTileRect: function(a) {
          if (null == this.get_tileset())
            if (null != this.parent) {
              var b = this.parent.__findTileset();
              null == b ? a.setTo(0, 0, 0, 0) : (b = b.getRect(this.get_id()), null == b ? a.setTo(0, 0, 0, 0) : a.copyFrom(b))
            } else a.setTo(0, 0, 0, 0);
          else a.copyFrom(this.get_tileset().getRect(this.get_id()));
          a.x = 0;
          a.y = 0
        },
        __findTileset: function() {
          return null !=
            this.get_tileset() ? this.get_tileset() : this.parent instanceof ih ? this.parent.get_tileset() : null == this.parent ? null : this.parent.__findTileset()
        },
        __getWorldTransform: function() {
          var a = this.get_matrix().clone();
          null != this.parent && a.concat(this.parent.__getWorldTransform());
          return a
        },
        __setRenderDirty: function() {
          this.__dirty || (this.__dirty = !0, null != this.parent && this.parent.__setRenderDirty())
        },
        get_alpha: function() {
          return this.__alpha
        },
        set_alpha: function(a) {
          a != this.__alpha && (this.__alpha = a, this.__setRenderDirty());
          return a
        },
        get_blendMode: function() {
          return this.__blendMode
        },
        set_blendMode: function(a) {
          a != this.__blendMode && (this.__blendMode = a, this.__setRenderDirty());
          return a
        },
        get_colorTransform: function() {
          return this.__colorTransform
        },
        set_colorTransform: function(a) {
          a != this.__colorTransform && (this.__colorTransform = a, this.__setRenderDirty());
          return a
        },
        get_height: function() {
          var a = ha.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.height;
          ha.__pool.release(a);
          return b
        },
        set_height: function(a) {
          var b =
            ha.__pool.get();
          this.__findTileRect(b);
          0 != b.height && this.set_scaleY(a / b.height);
          ha.__pool.release(b);
          return a
        },
        get_id: function() {
          return this.__id
        },
        set_id: function(a) {
          a != this.__id && (this.__id = a, this.__setRenderDirty());
          return a
        },
        get_matrix: function() {
          return this.__matrix
        },
        set_matrix: function(a) {
          a != this.__matrix && (this.__scaleY = this.__scaleX = this.__rotation = null, this.__matrix = a, this.__setRenderDirty());
          return a
        },
        get_originX: function() {
          return this.__originX
        },
        set_originX: function(a) {
          a != this.__originX &&
            (this.__originX = a, this.__setRenderDirty());
          return a
        },
        get_originY: function() {
          return this.__originY
        },
        set_originY: function(a) {
          a != this.__originY && (this.__originY = a, this.__setRenderDirty());
          return a
        },
        get_rect: function() {
          return this.__rect
        },
        set_rect: function(a) {
          a != this.__rect && (this.__rect = a, this.__setRenderDirty());
          return a
        },
        get_rotation: function() {
          if (null == this.__rotation)
            if (0 == this.__matrix.b && 0 == this.__matrix.c) this.__rotationSine = this.__rotation = 0, this.__rotationCosine = 1;
            else {
              var a = Math.atan2(this.__matrix.d,
                this.__matrix.c) - Math.PI / 2;
              this.__rotation = 180 / Math.PI * a;
              this.__rotationSine = Math.sin(a);
              this.__rotationCosine = Math.cos(a)
            } return this.__rotation
        },
        set_rotation: function(a) {
          if (a != this.__rotation) {
            this.__rotation = a;
            var b = Math.PI / 180 * a;
            this.__rotationSine = Math.sin(b);
            this.__rotationCosine = Math.cos(b);
            b = this.get_scaleX();
            var c = this.get_scaleY();
            this.__matrix.a = this.__rotationCosine * b;
            this.__matrix.b = this.__rotationSine * b;
            this.__matrix.c = -this.__rotationSine * c;
            this.__matrix.d = this.__rotationCosine * c;
            this.__setRenderDirty()
          }
          return a
        },
        get_scaleX: function() {
          null == this.__scaleX && (0 == this.get_matrix().b ? this.__scaleX = this.__matrix.a : this.__scaleX = Math.sqrt(this.__matrix.a * this.__matrix.a + this.__matrix.b * this.__matrix.b));
          return this.__scaleX
        },
        set_scaleX: function(a) {
          if (a != this.__scaleX) {
            this.__scaleX = a;
            if (0 == this.__matrix.b) this.__matrix.a = a;
            else {
              this.get_rotation();
              var b = this.__rotationSine * a;
              this.__matrix.a = this.__rotationCosine * a;
              this.__matrix.b = b
            }
            this.__setRenderDirty()
          }
          return a
        },
        get_scaleY: function() {
          null == this.__scaleY && (this.__scaleY =
            0 == this.__matrix.c ? this.get_matrix().d : Math.sqrt(this.__matrix.c * this.__matrix.c + this.__matrix.d * this.__matrix.d));
          return this.__scaleY
        },
        set_scaleY: function(a) {
          if (a != this.__scaleY) {
            this.__scaleY = a;
            if (0 == this.__matrix.c) this.__matrix.d = a;
            else {
              this.get_rotation();
              var b = this.__rotationCosine * a;
              this.__matrix.c = -this.__rotationSine * a;
              this.__matrix.d = b
            }
            this.__setRenderDirty()
          }
          return a
        },
        get_shader: function() {
          return this.__shader
        },
        set_shader: function(a) {
          a != this.__shader && (this.__shader = a, this.__setRenderDirty());
          return a
        },
        get_tileset: function() {
          return this.__tileset
        },
        set_tileset: function(a) {
          a != this.__tileset && (this.__tileset = a, this.__setRenderDirty());
          return a
        },
        get_visible: function() {
          return this.__visible
        },
        set_visible: function(a) {
          a != this.__visible && (this.__visible = a, this.__setRenderDirty());
          return a
        },
        get_width: function() {
          var a = ha.__pool.get();
          this.__findTileRect(a);
          this.__getBounds(a, this.get_matrix());
          var b = a.width;
          ha.__pool.release(a);
          return b
        },
        set_width: function(a) {
          var b = ha.__pool.get();
          this.__findTileRect(b);
          0 != b.width && this.set_scaleX(a / b.width);
          ha.__pool.release(b);
          return a
        },
        get_x: function() {
          return this.__matrix.tx
        },
        set_x: function(a) {
          a != this.__matrix.tx && (this.__matrix.tx = a, this.__setRenderDirty());
          return a
        },
        get_y: function() {
          return this.__matrix.ty
        },
        set_y: function(a) {
          a != this.__matrix.ty && (this.__matrix.ty = a, this.__setRenderDirty());
          return a
        },
        __class__: sg,
        __properties__: {
          set_y: "set_y",
          get_y: "get_y",
          set_x: "set_x",
          get_x: "get_x",
          set_width: "set_width",
          get_width: "get_width",
          set_visible: "set_visible",
          get_visible: "get_visible",
          set_tileset: "set_tileset",
          get_tileset: "get_tileset",
          set_shader: "set_shader",
          get_shader: "get_shader",
          set_scaleY: "set_scaleY",
          get_scaleY: "get_scaleY",
          set_scaleX: "set_scaleX",
          get_scaleX: "get_scaleX",
          set_rotation: "set_rotation",
          get_rotation: "get_rotation",
          set_rect: "set_rect",
          get_rect: "get_rect",
          set_originY: "set_originY",
          get_originY: "get_originY",
          set_originX: "set_originX",
          get_originX: "get_originX",
          set_matrix: "set_matrix",
          get_matrix: "get_matrix",
          set_id: "set_id",
          get_id: "get_id",
          set_height: "set_height",
          get_height: "get_height",
          set_colorTransform: "set_colorTransform",
          get_colorTransform: "get_colorTransform",
          set_blendMode: "set_blendMode",
          get_blendMode: "get_blendMode",
          set_alpha: "set_alpha",
          get_alpha: "get_alpha"
        }
      };
      var Xi = function(a, b, c, d, e, f, g) {
        null == g && (g = 0);
        null == f && (f = 0);
        null == e && (e = 0);
        null == d && (d = 1);
        null == c && (c = 1);
        null == b && (b = 0);
        null == a && (a = 0);
        sg.call(this, -1, a, b, c, d, e, f, g);
        this.__tiles = [];
        this.__length = 0
      };
      k["openfl.display.TileContainer"] = Xi;
      Xi.__name__ = "openfl.display.TileContainer";
      Xi.__interfaces__ = [Di];
      Xi.__super__ =
        sg;
      Xi.prototype = t(sg.prototype, {
        __tiles: null,
        addTile: function(a) {
          if (null == a) return null;
          a.parent == this && (da.remove(this.__tiles, a), this.__length--);
          this.__tiles[this.get_numTiles()] = a;
          a.parent = this;
          this.__length++;
          this.__setRenderDirty();
          return a
        },
        addTileAt: function(a, b) {
          if (null == a) return null;
          a.parent == this && (da.remove(this.__tiles, a), this.__length--);
          this.__tiles.splice(b, 0, a);
          a.parent = this;
          this.__length++;
          this.__setRenderDirty();
          return a
        },
        addTiles: function(a) {
          for (var b = 0; b < a.length;) {
            var c = a[b];
            ++b;
            this.addTile(c)
          }
          return a
        },
        clone: function() {
          for (var a = new Xi, b = 0, c = this.__tiles; b < c.length;) {
            var d = c[b];
            ++b;
            a.addTile(d.clone())
          }
          return a
        },
        contains: function(a) {
          return -1 < this.__tiles.indexOf(a)
        },
        getBounds: function(a) {
          for (var b = new ha, c, d = 0, e = this.__tiles; d < e.length;) c = e[d], ++d, c = c.getBounds(a), b.__expand(c.x, c.y, c.width, c.height);
          return b
        },
        getTileAt: function(a) {
          return 0 <= a && a < this.get_numTiles() ? this.__tiles[a] : null
        },
        getTileIndex: function(a) {
          for (var b = 0, c = this.__tiles.length; b < c;) {
            var d = b++;
            if (this.__tiles[d] ==
              a) return d
          }
          return -1
        },
        removeTile: function(a) {
          null != a && a.parent == this && (a.parent = null, da.remove(this.__tiles, a), this.__length--, this.__setRenderDirty());
          return a
        },
        removeTileAt: function(a) {
          return 0 <= a && a < this.get_numTiles() ? this.removeTile(this.__tiles[a]) : null
        },
        removeTiles: function(a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          0 > a && (a = 0);
          b > this.__tiles.length - 1 && (b = this.__tiles.length - 1);
          a = this.__tiles.splice(a, b - a + 1);
          for (b = 0; b < a.length;) {
            var c = a[b];
            ++b;
            c.parent = null
          }
          this.__length = this.__tiles.length;
          this.__setRenderDirty()
        },
        setTileIndex: function(a, b) {
          0 <= b && b <= this.get_numTiles() && a.parent == this && (da.remove(this.__tiles, a), this.__tiles.splice(b, 0, a), this.__setRenderDirty())
        },
        sortTiles: function(a) {
          this.__tiles.sort(a);
          this.__setRenderDirty()
        },
        swapTiles: function(a, b) {
          if (a.parent == this && b.parent == this) {
            var c = this.__tiles.indexOf(a),
              d = this.__tiles.indexOf(b);
            this.__tiles[c] = b;
            this.__tiles[d] = a;
            this.__setRenderDirty()
          }
        },
        swapTilesAt: function(a, b) {
          var c = this.__tiles[a];
          this.__tiles[a] = this.__tiles[b];
          this.__tiles[b] = c;
          this.__setRenderDirty()
        },
        get_numTiles: function() {
          return this.__length
        },
        get_height: function() {
          for (var a = ha.__pool.get(), b, c = 0, d = this.__tiles; c < d.length;) b = d[c], ++c, b = b.getBounds(this), a.__expand(b.x, b.y, b.width, b.height);
          this.__getBounds(a, this.get_matrix());
          c = a.height;
          ha.__pool.release(a);
          return c
        },
        set_height: function(a) {
          for (var b = ha.__pool.get(), c, d = 0, e = this.__tiles; d < e.length;) c = e[d], ++d, c = c.getBounds(this), b.__expand(c.x, c.y, c.width, c.height);
          0 != b.height && this.set_scaleY(a / b.height);
          ha.__pool.release(b);
          return a
        },
        get_width: function() {
          for (var a = ha.__pool.get(), b, c = 0, d = this.__tiles; c < d.length;) b = d[c], ++c, b = b.getBounds(this), a.__expand(b.x, b.y, b.width, b.height);
          this.__getBounds(a, this.get_matrix());
          c = a.width;
          ha.__pool.release(a);
          return c
        },
        set_width: function(a) {
          for (var b = ha.__pool.get(), c, d = 0, e = this.__tiles; d < e.length;) c = e[d], ++d, c = c.getBounds(this), b.__expand(c.x, c.y, c.width, c.height);
          0 != b.width && this.set_scaleX(a / b.width);
          ha.__pool.release(b);
          return a
        },
        __class__: Xi,
        __properties__: t(sg.prototype.__properties__, {
          get_numTiles: "get_numTiles"
        })
      });
      var ih = function(a, b, c, d) {
        null == d && (d = !0);
        ya.call(this);
        this.__drawableType = 9;
        this.__tileset = c;
        this.smoothing = d;
        this.tileColorTransformEnabled = this.tileBlendModeEnabled = this.tileAlphaEnabled = !0;
        this.__group = new Xi;
        this.__group.set_tileset(c);
        this.__width = a;
        this.__height = b
      };
      k["openfl.display.Tilemap"] = ih;
      ih.__name__ = "openfl.display.Tilemap";
      ih.__interfaces__ = [Di];
      ih.__super__ = ya;
      ih.prototype = t(ya.prototype, {
        tileAlphaEnabled: null,
        tileBlendModeEnabled: null,
        tileColorTransformEnabled: null,
        smoothing: null,
        __group: null,
        __tileset: null,
        __buffer: null,
        __bufferDirty: null,
        __height: null,
        __width: null,
        addTile: function(a) {
          return this.__group.addTile(a)
        },
        addTileAt: function(a, b) {
          return this.__group.addTileAt(a, b)
        },
        addTiles: function(a) {
          return this.__group.addTiles(a)
        },
        contains: function(a) {
          return this.__group.contains(a)
        },
        getTileAt: function(a) {
          return this.__group.getTileAt(a)
        },
        getTileIndex: function(a) {
          return this.__group.getTileIndex(a)
        },
        getTiles: function() {
          return this.__group.clone()
        },
        removeTile: function(a) {
          return this.__group.removeTile(a)
        },
        removeTileAt: function(a) {
          return this.__group.removeTileAt(a)
        },
        removeTiles: function(a, b) {
          null == b && (b = 2147483647);
          null == a && (a = 0);
          this.__group.removeTiles(a, b)
        },
        setTileIndex: function(a, b) {
          this.__group.setTileIndex(a, b)
        },
        setTiles: function(a) {
          for (var b = 0, c = this.__group.__tiles; b < c.length;) {
            var d = c[b];
            ++b;
            this.removeTile(d)
          }
          b = 0;
          for (c = a.__tiles; b < c.length;) d = c[b], ++b, this.addTile(d)
        },
        sortTiles: function(a) {
          this.__group.sortTiles(a)
        },
        swapTiles: function(a, b) {
          this.__group.swapTiles(a, b)
        },
        swapTilesAt: function(a,
          b) {
          this.__group.swapTilesAt(a, b)
        },
        __enterFrame: function(a) {
          this.__group.__dirty && !this.__renderDirty && (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        __getBounds: function(a, b) {
          var c = ha.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ha.__pool.release(c)
        },
        __hitTest: function(a, b, c, d, e, f) {
          if (!f.get_visible() || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
          this.__getRenderTransform();
          var g = this.__renderTransform,
            h = g.a * g.d - g.b * g.c;
          c = 0 == h ? -g.tx : 1 / h * (g.c * (g.ty - b) + g.d * (a - g.tx));
          g = this.__renderTransform;
          h = g.a * g.d - g.b * g.c;
          a = 0 == h ? -g.ty : 1 / h * (g.a * (b - g.ty) + g.b * (g.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height ? (null == d || e || d.push(f), !0) : !1
        },
        __renderFlash: function() {},
        get_height: function() {
          return this.__height * Math.abs(this.get_scaleY())
        },
        set_height: function(a) {
          this.__height = a | 0;
          return this.__height * Math.abs(this.get_scaleY())
        },
        get_numTiles: function() {
          return this.__group.__length
        },
        get_tileset: function() {
          return this.__tileset
        },
        set_tileset: function(a) {
          a != this.__tileset && (this.__tileset = a, this.__group.set_tileset(a), this.__group.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return a
        },
        get_width: function() {
          return this.__width * Math.abs(this.__scaleX)
        },
        set_width: function(a) {
          this.__width = a | 0;
          return this.__width * Math.abs(this.__scaleX)
        },
        __class__: ih,
        __properties__: t(ya.prototype.__properties__, {
          set_tileset: "set_tileset",
          get_tileset: "get_tileset",
          get_numTiles: "get_numTiles"
        })
      });
      var mj = function(a,
        b) {
        this.__bitmapData = a;
        this.rectData = Fb.toFloatVector(null);
        this.__data = [];
        if (null != b)
          for (a = 0; a < b.length;) {
            var c = b[a];
            ++a;
            this.addRect(c)
          }
      };
      k["openfl.display.Tileset"] = mj;
      mj.__name__ = "openfl.display.Tileset";
      mj.prototype = {
        rectData: null,
        __bitmapData: null,
        __data: null,
        addRect: function(a) {
          if (null == a) return -1;
          this.rectData.push(a.x);
          this.rectData.push(a.y);
          this.rectData.push(a.width);
          this.rectData.push(a.height);
          a = new an(a);
          a.__update(this.__bitmapData);
          this.__data.push(a);
          return this.__data.length - 1
        },
        clone: function() {
          for (var a = new mj(this.__bitmapData, null), b = ha.__pool.get(), c = 0, d = this.__data; c < d.length;) {
            var e = d[c];
            ++c;
            b.setTo(e.x, e.y, e.width, e.height);
            a.addRect(b)
          }
          ha.__pool.release(b);
          return a
        },
        hasRect: function(a) {
          for (var b = 0, c = this.__data; b < c.length;) {
            var d = c[b];
            ++b;
            if (a.x == d.x && a.y == d.y && a.width == d.width && a.height == d.height) return !0
          }
          return !1
        },
        getRect: function(a) {
          return a < this.__data.length && 0 <= a ? new ha(this.__data[a].x, this.__data[a].y, this.__data[a].width, this.__data[a].height) : null
        },
        getRectID: function(a) {
          for (var b,
              c = 0, d = this.__data.length; c < d;) {
            var e = c++;
            b = this.__data[e];
            if (a.x == b.x && a.y == b.y && a.width == b.width && a.height == b.height) return e
          }
          return null
        },
        get_bitmapData: function() {
          return this.__bitmapData
        },
        set_bitmapData: function(a) {
          this.__bitmapData = a;
          for (var b = 0, c = this.__data; b < c.length;) {
            var d = c[b];
            ++b;
            d.__update(this.__bitmapData)
          }
          return a
        },
        get_numRects: function() {
          return this.__data.length
        },
        __class__: mj,
        __properties__: {
          get_numRects: "get_numRects",
          set_bitmapData: "set_bitmapData",
          get_bitmapData: "get_bitmapData"
        }
      };
      var an = function(a) {
        null != a && (this.x = a.x | 0, this.y = a.y | 0, this.width = a.width | 0, this.height = a.height | 0)
      };
      k["openfl.display._Tileset.TileData"] = an;
      an.__name__ = "openfl.display._Tileset.TileData";
      an.prototype = {
        height: null,
        width: null,
        x: null,
        y: null,
        __bitmapData: null,
        __uvHeight: null,
        __uvWidth: null,
        __uvX: null,
        __uvY: null,
        __update: function(a) {
          if (null != a) {
            var b = a.width;
            a = a.height;
            this.__uvX = this.x / b;
            this.__uvY = this.y / a;
            this.__uvWidth = (this.x + this.width) / b;
            this.__uvHeight = (this.y + this.height) / a
          }
        },
        __class__: an
      };
      var Xq = function() {
        this.__totalFrames = this.__framesLoaded = 1;
        this.__currentLabels = [];
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1
      };
      k["openfl.display.Timeline"] = Xq;
      Xq.__name__ = "openfl.display.Timeline";
      Xq.prototype = {
        frameRate: null,
        scenes: null,
        scripts: null,
        __currentFrame: null,
        __currentFrameLabel: null,
        __currentLabel: null,
        __currentLabels: null,
        __currentScene: null,
        __frameScripts: null,
        __framesLoaded: null,
        __frameTime: null,
        __isPlaying: null,
        __lastFrameScriptEval: null,
        __lastFrameUpdate: null,
        __scope: null,
        __timeElapsed: null,
        __totalFrames: null,
        attachMovieClip: function(a) {},
        enterFrame: function(a) {},
        __addFrameScript: function(a, b) {
          0 > a || (a += 1, null != b ? (null == this.__frameScripts && (this.__frameScripts = new Za), this.__frameScripts.h[a] = function(a) {
            b()
          }) : null != this.__frameScripts && this.__frameScripts.remove(a))
        },
        __attachMovieClip: function(a) {
          this.__scope = a;
          this.__framesLoaded = this.__totalFrames = 0;
          if (null != this.scenes && 0 < this.scenes.length) {
            for (var b = 0, c = this.scenes; b < c.length;) {
              var d = c[b];
              ++b;
              this.__totalFrames +=
                d.numFrames;
              this.__framesLoaded += d.numFrames;
              null != d.labels && (this.__currentLabels = this.__currentLabels.concat(d.labels))
            }
            this.__currentScene = this.scenes[0]
          }
          if (null != this.scripts && 0 < this.scripts.length)
            for (this.__frameScripts = new Za, b = 0, c = this.scripts; b < c.length;) d = c[b], ++b, this.__frameScripts.h[d.frame] = d.script;
          this.attachMovieClip(a)
        },
        __enterFrame: function(a) {
          if (this.__isPlaying) {
            a = this.__getNextFrame(a);
            if (this.__lastFrameScriptEval == a) return;
            if (null != this.__frameScripts) {
              if (a < this.__currentFrame) {
                if (!this.__evaluateFrameScripts(this.__totalFrames)) return;
                this.__currentFrame = 1
              }
              if (!this.__evaluateFrameScripts(a)) return
            } else this.__currentFrame = a
          }
          this.__updateSymbol(this.__currentFrame)
        },
        __evaluateFrameScripts: function(a) {
          if (null == this.__frameScripts) return !0;
          var b = this.__currentFrame;
          for (a += 1; b < a;) {
            var c = b++;
            if (c != this.__lastFrameScriptEval && (this.__currentFrame = this.__lastFrameScriptEval = c, this.__frameScripts.h.hasOwnProperty(c) && (this.__updateSymbol(c), (0, this.__frameScripts.h[c])(this.__scope), this.__currentFrame != c) || !this.__isPlaying)) return !1
          }
          return !0
        },
        __getNextFrame: function(a) {
          null != this.frameRate ? (this.__timeElapsed += a, a = this.__currentFrame + Math.floor(this.__timeElapsed / this.__frameTime), 1 > a && (a = 1), a > this.__totalFrames && (a = Math.floor((a - 1) % this.__totalFrames) + 1), this.__timeElapsed %= this.__frameTime) : (a = this.__currentFrame + 1, a > this.__totalFrames && (a = 1));
          return a
        },
        __goto: function(a) {
          1 > a ? a = 1 : a > this.__totalFrames && (a = this.__totalFrames);
          this.__lastFrameScriptEval = -1;
          this.__currentFrame = a;
          this.__updateSymbol(this.__currentFrame);
          this.__evaluateFrameScripts(this.__currentFrame)
        },
        __gotoAndPlay: function(a, b) {
          this.__play();
          this.__goto(this.__resolveFrameReference(a))
        },
        __gotoAndStop: function(a, b) {
          this.__stop();
          this.__goto(this.__resolveFrameReference(a))
        },
        __nextFrame: function() {
          this.__stop();
          this.__goto(this.__currentFrame + 1)
        },
        __nextScene: function() {},
        __play: function() {
          this.__isPlaying || 2 > this.__totalFrames || (this.__isPlaying = !0, null != this.frameRate && (this.__frameTime = 1E3 / this.frameRate | 0, this.__timeElapsed = 0))
        },
        __prevFrame: function() {
          this.__stop();
          this.__goto(this.__currentFrame -
            1)
        },
        __prevScene: function() {},
        __stop: function() {
          this.__isPlaying = !1
        },
        __resolveFrameReference: function(a) {
          if ("number" == typeof a && (a | 0) === a) return a;
          if ("string" == typeof a) {
            for (var b = 0, c = this.__currentLabels; b < c.length;) {
              var d = c[b];
              ++b;
              if (d.name == a) return d.frame
            }
            throw F.thrown(new pi("Error #2109: Frame label " + a + " not found in scene."));
          }
          throw F.thrown("Invalid type for frame " + a.__name__);
        },
        __updateFrameLabel: function() {
          this.__currentFrameLabel = this.__currentLabel = null;
          for (var a = 0, b = this.__currentLabels; a <
            b.length;) {
            var c = b[a];
            ++a;
            if (c.frame < this.__currentFrame) this.__currentLabel = c.name;
            else if (c.frame == this.__currentFrame) this.__currentFrameLabel = this.__currentLabel = c.name;
            else break
          }
        },
        __updateSymbol: function(a) {
          this.__currentFrame != this.__lastFrameUpdate && (this.__updateFrameLabel(), this.enterFrame(a), this.__lastFrameUpdate = this.__currentFrame)
        },
        __class__: Xq
      };
      var bk = function(a, b) {
        Mi.call(this, a, b);
        this.stage = new Vi(this, Object.prototype.hasOwnProperty.call(b.context, "background") ? b.context.background :
          16777215);
        if (Object.prototype.hasOwnProperty.call(b, "parameters")) try {
          this.stage.get_loaderInfo().parameters = b.parameters
        } catch (c) {
          pa.lastError = c
        }
        Object.prototype.hasOwnProperty.call(b, "resizable") && !b.resizable && this.stage.__setLogicalSize(b.width, b.height);
        a.addModule(this.stage)
      };
      k["openfl.display.Window"] = bk;
      bk.__name__ = "openfl.display.Window";
      bk.__super__ = Mi;
      bk.prototype = t(Mi.prototype, {
        __class__: bk
      });
      var Yi = function(a, b, c, d, e, f, g) {
        null == g && (g = .05);
        null == f && (f = !1);
        this.stitch = f;
        this.stitch_threshold =
          g;
        this.octaves = b;
        this.channels = c;
        this.grayscale = d;
        this.calculateOctaves(e)
      };
      k["openfl.display._internal.AbstractNoise"] = Yi;
      Yi.__name__ = "openfl.display._internal.AbstractNoise";
      Yi.prototype = {
        octaves: null,
        stitch: null,
        stitch_threshold: null,
        channels: null,
        grayscale: null,
        octaves_frequencies: null,
        octaves_persistences: null,
        persistence_max: null,
        fill: function(a, b, c, d) {},
        stitching: function(a, b, c, d, e, f, g, h) {
          var m = b >> 16 & 255,
            l = b >> 8 & 255;
          b &= 255;
          if (g - e < c) {
            var p = a.getPixel32(g - c, d),
              n = p >> 8 & 255,
              k = p & 255;
            e = (g - c) / e;
            m = this.mixI(p >>
              16 & 255, m, e);
            l = this.mixI(n, l, e);
            b = this.mixI(k, b, e)
          }
          h - f < d && (p = a.getPixel32(c, h - d), n = p >> 8 & 255, k = p & 255, e = (h - d) / f, m = this.mixI(p >> 16 & 255, m, e), l = this.mixI(n, l, e), b = this.mixI(k, b, e));
          return -16777216 | m << 16 | l << 8 | b
        },
        color: function(a, b, c) {
          var d = 0,
            e = 0,
            f = 0;
          null != a && (d = this.noiseToColor(a));
          null != b && (e = this.noiseToColor(b));
          null != c && (f = this.noiseToColor(c));
          return -16777216 | d << 16 | e << 8 | f
        },
        noiseToColor: function(a) {
          return 128 * (a * this.persistence_max + 1) | 0
        },
        fade: function(a) {
          return a * a * a * (a * (6 * a - 15) + 10)
        },
        mixI: function(a,
          b, c) {
          return (1 - c) * a + c * b | 0
        },
        mix: function(a, b, c) {
          return (1 - c) * a + c * b
        },
        fastfloor: function(a) {
          return 0 < a ? a | 0 : a - 1 | 0
        },
        dot2d: function(a, b, c) {
          return a[0] * b + a[1] * c
        },
        dot: function(a, b, c, d) {
          return a[0] * b + a[1] * c + a[2] * d
        },
        calculateOctaves: function(a) {
          this.octaves_frequencies = [];
          this.octaves_persistences = [];
          for (var b = this.persistence_max = 0, c = this.octaves; b < c;) {
            var d = b++;
            var e = Math.pow(2, d);
            d = Math.pow(a, d);
            this.persistence_max += d;
            this.octaves_frequencies.push(e);
            this.octaves_persistences.push(d)
          }
          this.persistence_max =
            1 / this.persistence_max
        },
        __class__: Yi
      };
      var bn = function() {};
      k["openfl.display._internal.CairoBitmap"] = bn;
      bn.__name__ = "openfl.display._internal.CairoBitmap";
      bn.render = function(a, b) {
        if (a.__renderable) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (0 < c && null != a.__bitmapData && a.__bitmapData.__isValid) {
            var d = b.cairo;
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            b.applyMatrix(a.__renderTransform, d);
            var e = a.__bitmapData.getSurface();
            null != e && (e = Qo.createForSurface(e), Qo.set_filter(e, b.__allowSmoothing &&
              a.smoothing ? 1 : 3), d.set_source(e), 1 == c ? d.paint() : d.paintWithAlpha(c));
            b.__popMaskObject(a);
            b.__setBlendMode(10)
          }
        }
      };
      bn.renderDrawable = function(a, b) {};
      bn.renderDrawableMask = function(a, b) {
        b.cairo.rectangle(0, 0, a.get_width(), a.get_height())
      };
      var Yq = function() {};
      k["openfl.display._internal.CairoBitmapData"] = Yq;
      Yq.__name__ = "openfl.display._internal.CairoBitmapData";
      Yq.renderDrawable = function(a, b) {};
      Yq.renderDrawableMask = function(a, b) {};
      var cn = function() {};
      k["openfl.display._internal.CairoDisplayObject"] =
        cn;
      cn.__name__ = "openfl.display._internal.CairoDisplayObject";
      cn.render = function(a, b) {};
      cn.renderDrawable = function(a, b) {};
      cn.renderDrawableMask = function(a, b) {};
      var Zq = function() {};
      k["openfl.display._internal.CairoDisplayObjectContainer"] = Zq;
      Zq.__name__ = "openfl.display._internal.CairoDisplayObjectContainer";
      Zq.renderDrawable = function(a, b) {};
      Zq.renderDrawableMask = function(a, b) {};
      var dn = function() {};
      k["openfl.display._internal.CairoGraphics"] = dn;
      dn.__name__ = "openfl.display._internal.CairoGraphics";
      dn.hitTest =
        function(a, b, c) {
          return !1
        };
      dn.render = function(a, b) {};
      dn.renderMask = function(a, b) {};
      var en = function() {};
      k["openfl.display._internal.CairoShape"] = en;
      en.__name__ = "openfl.display._internal.CairoShape";
      en.render = function(a, b) {};
      en.renderDrawable = function(a, b) {};
      en.renderDrawableMask = function(a, b) {};
      var $q = function() {};
      k["openfl.display._internal.CairoSimpleButton"] = $q;
      $q.__name__ = "openfl.display._internal.CairoSimpleButton";
      $q.renderDrawable = function(a, b) {
        !a.__renderable || 0 >= a.__worldAlpha || null == a.__currentState ||
          (b.__pushMaskObject(a), b.__renderDrawable(a.__currentState), b.__popMaskObject(a), b.__renderEvent(a))
      };
      $q.renderDrawableMask = function(a, b) {
        b.__renderDrawableMask(a.__currentState)
      };
      var fn = function() {};
      k["openfl.display._internal.CairoTextField"] = fn;
      fn.__name__ = "openfl.display._internal.CairoTextField";
      fn.render = function(a, b, c) {};
      fn.renderDrawable = function(a, b) {};
      fn.renderDrawableMask = function(a, b) {};
      var fi = function() {};
      k["openfl.display._internal.CairoTilemap"] = fi;
      fi.__name__ = "openfl.display._internal.CairoTilemap";
      fi.render = function(a, b) {
        if (a.__renderable && 0 != a.__group.__tiles.length) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var d = ha.__pool.get();
            d.setTo(0, 0, a.__width, a.__height);
            b.__pushMaskRect(d, a.__renderTransform);
            fi.renderTileContainer(a.__group, b, a.__renderTransform, a.__tileset, b.__allowSmoothing && a.smoothing, a.tileAlphaEnabled, c, a.tileBlendModeEnabled, a.__worldBlendMode, null, null, null, d, new Vh);
            b.__popMaskRect();
            b.__popMaskObject(a);
            ha.__pool.release(d)
          }
        }
      };
      fi.renderTileContainer = function(a, b, c, d, e, f, g, h, m, l, p, n, k, q) {
        var u = b.cairo,
          y = Ea.__pool.get();
        a = a.__tiles;
        for (var v, r, t, w, z = null, Q = 0; Q < a.length;)
          if (v = a[Q], ++Q, y.setTo(1, 0, 0, 1, -v.get_originX(), -v.get_originY()), y.concat(v.get_matrix()), y.concat(c), r = null != v.get_tileset() ? v.get_tileset() : d, t = v.get_alpha() * g, (w = v.get_visible()) && !(0 >= t))
            if (f || (t = 1), h && (z = null != v.__blendMode ? v.__blendMode : m), 0 < v.__length) fi.renderTileContainer(v, b, y, r, e, f, t, h, z, l, p, n, k, q);
            else if (null != r) {
          w = v.get_id();
          if (-1 == w) {
            if (v = v.__rect,
              null == v || 0 >= v.width || 0 >= v.height) continue
          } else {
            v = r.__data[w];
            if (null == v) continue;
            k.setTo(v.x, v.y, v.width, v.height);
            v = k
          }
          r = r.__bitmapData;
          null != r && (r != l && (p = r.getSurface(), n = Qo.createForSurface(p), Qo.set_filter(n, e ? 1 : 3), u.set_source(n), l = r), h && b.__setBlendMode(z), b.applyMatrix(y, u), q.tx = v.x, q.ty = v.y, Qo.set_matrix(n, q), u.set_source(n), u.save(), u.newPath(), u.rectangle(0, 0, v.width, v.height), u.clip(), 1 == t ? u.paint() : u.paintWithAlpha(t), u.restore())
        }
        Ea.__pool.release(y)
      };
      fi.renderDrawable = function(a, b) {};
      fi.renderDrawableMask = function(a, b) {};
      var Pi = function() {};
      k["openfl.display._internal.CanvasBitmap"] = Pi;
      Pi.__name__ = "openfl.display._internal.CanvasBitmap";
      Pi.render = function(a, b) {
        if (a.__renderable) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (0 < c && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable) {
            var d = b.context;
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a, !1);
            va.convertToCanvas(a.__bitmapData.image);
            d.globalAlpha = c;
            c = a.__scrollRect;
            b.setTransform(a.__renderTransform,
              d);
            b.__allowSmoothing && a.smoothing || (d.imageSmoothingEnabled = !1);
            null == c ? d.drawImage(a.__bitmapData.image.get_src(), 0, 0, a.__bitmapData.image.width, a.__bitmapData.image.height) : d.drawImage(a.__bitmapData.image.get_src(), c.x, c.y, c.width, c.height);
            b.__allowSmoothing && a.smoothing || (d.imageSmoothingEnabled = !0);
            b.__popMaskObject(a, !1)
          }
        }
      };
      Pi.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData && null != a.__bitmapData.image && (a.__imageVersion = a.__bitmapData.image.version);
        if (null ==
          a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || (r = b.__getAlpha(a.__worldAlpha), 0 >= r))) {
            if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              t = b.context;
              b.setTransform(a.__renderTransform, t);
              var c = a.opaqueBackground;
              t.fillStyle = "rgb(" + (c >>> 16 & 255) + "," + (c >>> 8 & 255) + "," + (c & 255) + ")";
              t.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a)
            }
            if (null !=
              a.__graphics && a.__renderable && (r = b.__getAlpha(a.__worldAlpha), !(0 >= r))) {
              var d = a.__graphics;
              if (null != d) {
                A.render(d, b);
                var e = d.__width,
                  f = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= e && 1 <= f) {
                  var g = d.__worldTransform;
                  t = b.context;
                  w = a.__scrollRect;
                  var h = a.__worldScale9Grid;
                  if (null == w || 0 < w.width && 0 < w.height) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    t.globalAlpha = r;
                    if (null != h && 0 == g.b && 0 == g.c) {
                      t.setTransform(1, 0, 0, 1, g.tx, g.ty);
                      var m = d.__bounds,
                        l = d.__renderTransform.a,
                        p = d.__renderTransform.d,
                        n = g.a,
                        k = g.d;
                      g = Math.max(1, Math.round(h.x * l));
                      d = Math.round(h.y * p);
                      r = Math.max(1, Math.round((m.get_right() - h.get_right()) * l));
                      w = Math.round((m.get_bottom() - h.get_bottom()) * p);
                      l = Math.round(h.width * l);
                      p = Math.round(h.height * p);
                      var q = Math.round(h.x * n),
                        u = Math.round(h.y * k),
                        v = Math.round((m.get_right() - h.get_right()) * n);
                      h = Math.round((m.get_bottom() - h.get_bottom()) * k);
                      m = Math.round(e * n) - q - v;
                      n = Math.round(f * k) - u - h;
                      b.applySmoothing(t, !1);
                      0 != l && 0 != p ? (t.drawImage(c, 0, 0, g, d, 0, 0, q, u), t.drawImage(c, g, 0, l, d, q, 0, m, u), t.drawImage(c,
                        g + l, 0, r, d, q + m, 0, v, u), t.drawImage(c, 0, d, g, p, 0, u, q, n), t.drawImage(c, g, d, l, p, q, u, m, n), t.drawImage(c, g + l, d, r, p, q + m, u, v, n), t.drawImage(c, 0, d + p, g, w, 0, u + n, q, h), t.drawImage(c, g, d + p, l, w, q, u + n, m, h), t.drawImage(c, g + l, d + p, r, w, q + m, u + n, v, h)) : 0 == l && 0 != p ? (f = q + m + v, t.drawImage(c, 0, 0, e, d, 0, 0, f, u), t.drawImage(c, 0, d, e, p, 0, u, f, n), t.drawImage(c, 0, d + p, e, w, 0, u + n, f, h)) : 0 == p && 0 != l && (e = u + n + h, t.drawImage(c, 0, 0, g, f, 0, 0, q, e), t.drawImage(c, g, 0, l, f, q, 0, m, e), t.drawImage(c, g + l, 0, r, f, q + m, 0, v, e))
                    } else b.setTransform(g, t), b.__isDOM &&
                      (h = 1 / b.pixelRatio, t.scale(h, h)), t.drawImage(c, 0, 0, e, f);
                    b.__popMaskObject(a)
                  }
                }
              }
            }
          }
          a.__renderable && (r = b.__getAlpha(a.__worldAlpha), 0 < r && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable && (t = b.context, b.__setBlendMode(a.__worldBlendMode), b.__pushMaskObject(a, !1), va.convertToCanvas(a.__bitmapData.image), t.globalAlpha = r, w = a.__scrollRect, b.setTransform(a.__renderTransform, t), b.__allowSmoothing && a.smoothing || (t.imageSmoothingEnabled = !1), null == w ? t.drawImage(a.__bitmapData.image.get_src(),
            0, 0, a.__bitmapData.image.width, a.__bitmapData.image.height) : t.drawImage(a.__bitmapData.image.get_src(), w.x, w.y, w.width, w.height), b.__allowSmoothing && a.smoothing || (t.imageSmoothingEnabled = !0), b.__popMaskObject(a, !1)))
        } else if (c = a.__cacheBitmap, c.__renderable) {
          var r = b.__getAlpha(c.__worldAlpha);
          if (0 < r && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable) {
            var t = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            va.convertToCanvas(c.__bitmapData.image);
            t.globalAlpha =
              r;
            var w = c.__scrollRect;
            b.setTransform(c.__renderTransform, t);
            b.__allowSmoothing && c.smoothing || (t.imageSmoothingEnabled = !1);
            null == w ? t.drawImage(c.__bitmapData.image.get_src(), 0, 0, c.__bitmapData.image.width, c.__bitmapData.image.height) : t.drawImage(c.__bitmapData.image.get_src(), w.x, w.y, w.width, w.height);
            b.__allowSmoothing && c.smoothing || (t.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1)
          }
        }
        b.__renderEvent(a)
      };
      Pi.renderDrawableMask = function(a, b) {
        b.context.rect(0, 0, a.get_width(), a.get_height())
      };
      var Hm =
        function() {};
      k["openfl.display._internal.CanvasBitmapData"] = Hm;
      Hm.__name__ = "openfl.display._internal.CanvasBitmapData";
      Hm.renderDrawable = function(a, b) {
        if (a.readable) {
          var c = a.image;
          c.type == ye.DATA && va.convertToCanvas(c);
          var d = b.context;
          d.globalAlpha = 1;
          b.setTransform(a.__renderTransform, d);
          d.drawImage(c.get_src(), 0, 0, c.width, c.height)
        }
      };
      Hm.renderDrawableMask = function(a, b) {};
      var Dh = function() {};
      k["openfl.display._internal.CanvasDisplayObject"] = Dh;
      Dh.__name__ = "openfl.display._internal.CanvasDisplayObject";
      Dh.render = function(a, b) {
        if ((null != a.opaqueBackground || null != a.__graphics) && a.__renderable) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var d = b.context;
              b.setTransform(a.__renderTransform, d);
              var e = a.opaqueBackground;
              d.fillStyle = "rgb(" + (e >>> 16 & 255) + "," + (e >>> 8 & 255) + "," + (e & 255) + ")";
              d.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a)
            }
            if (null !=
              a.__graphics && a.__renderable && (c = b.__getAlpha(a.__worldAlpha), !(0 >= c))) {
              var f = a.__graphics;
              if (null != f) {
                A.render(f, b);
                var g = f.__width,
                  h = f.__height;
                e = f.__canvas;
                if (null != e && f.__visible && 1 <= g && 1 <= h) {
                  var m = f.__worldTransform;
                  d = b.context;
                  var l = a.__scrollRect,
                    p = a.__worldScale9Grid;
                  if (null == l || 0 < l.width && 0 < l.height) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    d.globalAlpha = c;
                    if (null != p && 0 == m.b && 0 == m.c) {
                      d.setTransform(1, 0, 0, 1, m.tx, m.ty);
                      var n = f.__bounds,
                        k = f.__renderTransform.a,
                        q = f.__renderTransform.d,
                        u = m.a,
                        v = m.d;
                      m = Math.max(1, Math.round(p.x * k));
                      f = Math.round(p.y * q);
                      c = Math.max(1, Math.round((n.get_right() - p.get_right()) * k));
                      l = Math.round((n.get_bottom() - p.get_bottom()) * q);
                      k = Math.round(p.width * k);
                      q = Math.round(p.height * q);
                      var r = Math.round(p.x * u),
                        t = Math.round(p.y * v),
                        w = Math.round((n.get_right() - p.get_right()) * u);
                      p = Math.round((n.get_bottom() - p.get_bottom()) * v);
                      n = Math.round(g * u) - r - w;
                      u = Math.round(h * v) - t - p;
                      b.applySmoothing(d, !1);
                      0 != k && 0 != q ? (d.drawImage(e, 0, 0, m, f, 0, 0, r, t), d.drawImage(e, m, 0, k, f, r, 0, n, t), d.drawImage(e,
                        m + k, 0, c, f, r + n, 0, w, t), d.drawImage(e, 0, f, m, q, 0, t, r, u), d.drawImage(e, m, f, k, q, r, t, n, u), d.drawImage(e, m + k, f, c, q, r + n, t, w, u), d.drawImage(e, 0, f + q, m, l, 0, t + u, r, p), d.drawImage(e, m, f + q, k, l, r, t + u, n, p), d.drawImage(e, m + k, f + q, c, l, r + n, t + u, w, p)) : 0 == k && 0 != q ? (h = r + n + w, d.drawImage(e, 0, 0, g, f, 0, 0, h, t), d.drawImage(e, 0, f, g, q, 0, t, h, u), d.drawImage(e, 0, f + q, g, l, 0, t + u, h, p)) : 0 == q && 0 != k && (g = t + u + p, d.drawImage(e, 0, 0, m, h, 0, 0, r, g), d.drawImage(e, m, 0, k, h, r, 0, n, g), d.drawImage(e, m + k, 0, c, h, r + n, 0, w, g))
                    } else b.setTransform(m, d), b.__isDOM &&
                      (p = 1 / b.pixelRatio, d.scale(p, p)), d.drawImage(e, 0, 0, g, h);
                    b.__popMaskObject(a)
                  }
                }
              }
            }
          }
        }
      };
      Dh.renderDrawable = function(a, b) {
        if (null == a.get_mask() || 0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
          if (b.__updateCacheBitmap(a, !1), null != a.__cacheBitmap && !a.__isCacheBitmapRender) {
            var c = a.__cacheBitmap;
            if (c.__renderable) {
              var d = b.__getAlpha(c.__worldAlpha);
              if (0 < d && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable) {
                var e = b.context;
                b.__setBlendMode(c.__worldBlendMode);
                b.__pushMaskObject(c,
                  !1);
                va.convertToCanvas(c.__bitmapData.image);
                e.globalAlpha = d;
                var f = c.__scrollRect;
                b.setTransform(c.__renderTransform, e);
                b.__allowSmoothing && c.smoothing || (e.imageSmoothingEnabled = !1);
                null == f ? e.drawImage(c.__bitmapData.image.get_src(), 0, 0, c.__bitmapData.image.width, c.__bitmapData.image.height) : e.drawImage(c.__bitmapData.image.get_src(), f.x, f.y, f.width, f.height);
                b.__allowSmoothing && c.smoothing || (e.imageSmoothingEnabled = !0);
                b.__popMaskObject(c, !1)
              }
            }
          } else if (!(null == a.opaqueBackground && null == a.__graphics ||
            !a.__renderable || (d = b.__getAlpha(a.__worldAlpha), 0 >= d || (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height() && (b.__setBlendMode(a.__worldBlendMode), b.__pushMaskObject(a), e = b.context, b.setTransform(a.__renderTransform, e), c = a.opaqueBackground, e.fillStyle = "rgb(" + (c >>> 16 & 255) + "," + (c >>> 8 & 255) + "," + (c & 255) + ")", e.fillRect(0, 0, a.get_width(), a.get_height()), b.__popMaskObject(a)), null == a.__graphics || !a.__renderable || (d = b.__getAlpha(a.__worldAlpha), 0 >= d))))) {
          var g = a.__graphics;
          if (null != g) {
            A.render(g, b);
            var h = g.__width,
              m = g.__height;
            c = g.__canvas;
            if (null != c && g.__visible && 1 <= h && 1 <= m) {
              var l = g.__worldTransform;
              e = b.context;
              f = a.__scrollRect;
              var p = a.__worldScale9Grid;
              if (null == f || 0 < f.width && 0 < f.height) {
                b.__setBlendMode(a.__worldBlendMode);
                b.__pushMaskObject(a);
                e.globalAlpha = d;
                if (null != p && 0 == l.b && 0 == l.c) {
                  e.setTransform(1, 0, 0, 1, l.tx, l.ty);
                  var n = g.__bounds,
                    k = g.__renderTransform.a,
                    q = g.__renderTransform.d,
                    u = l.a,
                    v = l.d;
                  l = Math.max(1, Math.round(p.x * k));
                  g = Math.round(p.y * q);
                  d = Math.max(1, Math.round((n.get_right() -
                    p.get_right()) * k));
                  f = Math.round((n.get_bottom() - p.get_bottom()) * q);
                  k = Math.round(p.width * k);
                  q = Math.round(p.height * q);
                  var r = Math.round(p.x * u),
                    t = Math.round(p.y * v),
                    w = Math.round((n.get_right() - p.get_right()) * u);
                  p = Math.round((n.get_bottom() - p.get_bottom()) * v);
                  n = Math.round(h * u) - r - w;
                  u = Math.round(m * v) - t - p;
                  b.applySmoothing(e, !1);
                  0 != k && 0 != q ? (e.drawImage(c, 0, 0, l, g, 0, 0, r, t), e.drawImage(c, l, 0, k, g, r, 0, n, t), e.drawImage(c, l + k, 0, d, g, r + n, 0, w, t), e.drawImage(c, 0, g, l, q, 0, t, r, u), e.drawImage(c, l, g, k, q, r, t, n, u), e.drawImage(c,
                    l + k, g, d, q, r + n, t, w, u), e.drawImage(c, 0, g + q, l, f, 0, t + u, r, p), e.drawImage(c, l, g + q, k, f, r, t + u, n, p), e.drawImage(c, l + k, g + q, d, f, r + n, t + u, w, p)) : 0 == k && 0 != q ? (m = r + n + w, e.drawImage(c, 0, 0, h, g, 0, 0, m, t), e.drawImage(c, 0, g, h, q, 0, t, m, u), e.drawImage(c, 0, g + q, h, f, 0, t + u, m, p)) : 0 == q && 0 != k && (h = t + u + p, e.drawImage(c, 0, 0, l, m, 0, 0, r, h), e.drawImage(c, l, 0, k, m, r, 0, n, h), e.drawImage(c, l + k, 0, d, m, r + n, 0, w, h))
                } else b.setTransform(l, e), b.__isDOM && (p = 1 / b.pixelRatio, e.scale(p, p)), e.drawImage(c, 0, 0, h, m);
                b.__popMaskObject(a)
              }
            }
          }
        }
        b.__renderEvent(a)
      };
      Dh.renderDrawableMask = function(a, b) {
        null != a.__graphics && A.renderMask(a.__graphics, b)
      };
      var Im = function() {};
      k["openfl.display._internal.CanvasDisplayObjectContainer"] = Im;
      Im.__name__ = "openfl.display._internal.CanvasDisplayObjectContainer";
      Im.renderDrawable = function(a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext();) {
          var d = c.next();
          null == d.stage && d.__cleanup()
        }
        a.__removedChildren.set_length(0);
        if (!(!a.__renderable || 0 >= a.__worldAlpha || null != a.get_mask() && (0 >= a.get_mask().get_width() || 0 >= a.get_mask().get_height())) &&
          (Dh.renderDrawable(a, b), null == a.__cacheBitmap || a.__isCacheBitmapRender)) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length;) {
              var e = d[c];
              ++c;
              b.__renderDrawable(e);
              e.__renderDirty = !1
            }
            a.__renderDirty = !1
          } else
            for (c = 0, d = a.__children; c < d.length;) e = d[c], ++c, b.__renderDrawable(e);
          b.__popMaskObject(a)
        }
      };
      Im.renderDrawableMask = function(a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext();) {
          var d = c.next();
          null == d.stage && d.__cleanup()
        }
        a.__removedChildren.set_length(0);
        null != a.__graphics &&
          A.renderMask(a.__graphics, b);
        c = 0;
        for (a = a.__children; c < a.length;) d = a[c], ++c, b.__renderDrawableMask(d)
      };
      var Ee = function() {
        this.__dirty = !0;
        this.t_i = this.b_i = this.f_i = this.ff_i = this.i_i = this.ii_i = this.o_i = this.__lastLength = 0;
        null == Ee.empty ? (this.types = [], this.b = [], this.i = [], this.f = [], this.o = [], this.ff = [], this.ii = [], this.objVersions = [], this.copyOnWrite = !0) : this.__initFromEmpty()
      };
      k["openfl.display._internal.DrawCommandBuffer"] = Ee;
      Ee.__name__ = "openfl.display._internal.DrawCommandBuffer";
      Ee.prototype = {
        __replace_openfl_display_TriangleCulling: function(a,
          b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_Vector_Int: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_Vector_Float: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display__internal_ShaderBuffer: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display_JointStyle: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] !=
            c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display_CapsStyle: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display_LineScaleMode: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_Int: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_Bool: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display_InterpolationMethod: function(a,
          b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display_SpreadMethod: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_Array_Float: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_Array_Int: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display_GradientType: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_Float: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        __replace_openfl_display__internal_DrawCommandType: function(a, b, c) {
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        dirty: null,
        types: null,
        b: null,
        copyOnWrite: null,
        f: null,
        ff: null,
        i: null,
        ii: null,
        o: null,
        t_i: null,
        b_i: null,
        f_i: null,
        ff_i: null,
        i_i: null,
        ii_i: null,
        o_i: null,
        objVersions: null,
        __lastLength: null,
        __dirty: null,
        append: function(a) {
          if (0 == this.get_length()) return this.types = a.types,
            this.b = a.b, this.i = a.i, this.f = a.f, this.o = a.o, this.ff = a.ff, this.ii = a.ii, this.t_i = a.t_i, this.b_i = a.b_i, this.f_i = a.f_i, this.ff_i = a.ff_i, this.i_i = a.i_i, this.ii_i = a.ii_i, this.o_i = a.o_i, this.objVersions = a.objVersions, this.copyOnWrite = a.copyOnWrite = !0, a;
          for (var b = new Xf(a), c = 0, d = a.types; c < d.length;) {
            var e = d[c];
            ++c;
            switch (e._hx_index) {
              case 0:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_BITMAP_FILL;
                e = b;
                this.beginBitmapFill(e.buffer.o[e.oPos],
                  e.buffer.o[e.oPos + 1], e.buffer.b[e.bPos], e.buffer.b[e.bPos + 1]);
                break;
              case 1:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos +=
                      2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_FILL;
                e = b;
                this.beginFill(e.buffer.i[e.iPos], e.buffer.f[e.fPos]);
                break;
              case 2:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_GRADIENT_FILL;
                e = b;
                this.beginGradientFill(e.buffer.o[e.oPos], e.buffer.ii[e.iiPos], e.buffer.ff[e.ffPos], e.buffer.ii[e.iiPos + 1],
                  e.buffer.o[e.oPos + 1], e.buffer.o[e.oPos + 2], e.buffer.o[e.oPos + 3], e.buffer.f[e.fPos]);
                break;
              case 3:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos +=
                      4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.BEGIN_SHADER_FILL;
                e = b;
                this.beginShaderFill(e.buffer.o[e.oPos]);
                break;
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.CUBIC_CURVE_TO;
                e = b;
                this.cubicCurveTo(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1], e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3], e.buffer.f[e.fPos +
                  4], e.buffer.f[e.fPos + 5]);
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos +=
                      4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.CURVE_TO;
                e = b;
                this.curveTo(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1], e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3]);
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos +=
                      4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_CIRCLE;
                e = b;
                this.drawCircle(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1], e.buffer.f[e.fPos + 2]);
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos +=
                      2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_ELLIPSE;
                e = b;
                this.drawEllipse(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1], e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3]);
                break;
              case 8:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos +=
                      5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_QUADS;
                e = b;
                this.drawQuads(e.buffer.o[e.oPos], e.buffer.o[e.oPos + 1], e.buffer.o[e.oPos + 2]);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos +=
                      2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_RECT;
                e = b;
                this.drawRect(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1], e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3]);
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos +=
                      2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_ROUND_RECT;
                e = b;
                this.drawRoundRect(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1], e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3], e.buffer.f[e.fPos + 4], e.buffer.o[e.oPos]);
                break;
              case 12:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_TRIANGLES;
                e = b;
                this.drawTriangles(e.buffer.o[e.oPos], e.buffer.o[e.oPos + 1], e.buffer.o[e.oPos + 2], e.buffer.o[e.oPos + 3]);
                break;
              case 13:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.END_FILL;
                this.endFill();
                break;
              case 14:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_BITMAP_STYLE;
                e = b;
                this.lineBitmapStyle(e.buffer.o[e.oPos], e.buffer.o[e.oPos + 1], e.buffer.b[e.bPos], e.buffer.b[e.bPos + 1]);
                break;
              case 15:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_GRADIENT_STYLE;
                e = b;
                this.lineGradientStyle(e.buffer.o[e.oPos], e.buffer.ii[e.iiPos], e.buffer.ff[e.ffPos], e.buffer.ii[e.iiPos + 1], e.buffer.o[e.oPos + 1], e.buffer.o[e.oPos + 2], e.buffer.o[e.oPos + 3], e.buffer.f[e.fPos]);
                break;
              case 16:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos +=
                      1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_STYLE;
                e = b;
                this.lineStyle(e.buffer.o[e.oPos], e.buffer.i[e.iPos],
                  e.buffer.f[e.fPos], e.buffer.b[e.bPos], e.buffer.o[e.oPos + 1], e.buffer.o[e.oPos + 2], e.buffer.o[e.oPos + 3], e.buffer.f[e.fPos + 1]);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_TO;
                e = b;
                this.lineTo(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1]);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos +=
                      6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.MOVE_TO;
                e = b;
                this.moveTo(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1]);
                break;
              case 20:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos +=
                      2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.OVERRIDE_MATRIX;
                e = b;
                this.overrideMatrix(e.buffer.o[e.oPos]);
                break;
              case 21:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.WINDING_EVEN_ODD;
                this.windingEvenOdd();
                break;
              case 22:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos +=
                      3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.WINDING_NON_ZERO;
                this.windingNonZero()
            }
          }
          b.destroy();
          return a
        },
        beginBitmapFill: function(a, b, c, d) {
          this.prepareWrite();
          var e =
            this.types,
            f = this.t_i++,
            g = ba.BEGIN_BITMAP_FILL;
          !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
          e[f] = g;
          e = this.o;
          f = this.o_i++;
          !this.__dirty && (f >= e.length || a != e[f] || a.image.version != this.objVersions[f]) && (this.__dirty = !0);
          for (e[f] = a; this.objVersions.length < f;) this.objVersions.push(0);
          this.objVersions[f] = a.image.version;
          e = this.o;
          f = this.o_i++;
          this.__dirty || !(f >= e.length) && b.equals(e[f]) || (this.__dirty = !0);
          e[f] = b;
          e = this.b;
          f = this.b_i++;
          !this.__dirty && (f >= e.length || e[f] != c) && (this.__dirty = !0);
          e[f] =
            c;
          e = this.b;
          f = this.b_i++;
          !this.__dirty && (f >= e.length || e[f] != d) && (this.__dirty = !0);
          e[f] = d
        },
        beginFill: function(a, b) {
          this.prepareWrite();
          var c = this.types,
            d = this.t_i++,
            e = ba.BEGIN_FILL;
          !this.__dirty && (d >= c.length || c[d] != e) && (this.__dirty = !0);
          c[d] = e;
          c = this.i;
          d = this.i_i++;
          !this.__dirty && (d >= c.length || c[d] != a) && (this.__dirty = !0);
          c[d] = a;
          c = this.f;
          d = this.f_i++;
          !this.__dirty && (d >= c.length || c[d] != b) && (this.__dirty = !0);
          c[d] = b
        },
        beginGradientFill: function(a, b, c, d, e, f, g, h) {
          this.prepareWrite();
          var m = this.types,
            l = this.t_i++,
            p = ba.BEGIN_GRADIENT_FILL;
          !this.__dirty && (l >= m.length || m[l] != p) && (this.__dirty = !0);
          m[l] = p;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != a) && (this.__dirty = !0);
          m[l] = a;
          m = this.ii;
          l = this.ii_i++;
          !this.__dirty && (l >= m.length || m[l] != b) && (this.__dirty = !0);
          m[l] = b;
          m = this.ff;
          l = this.ff_i++;
          !this.__dirty && (l >= m.length || m[l] != c) && (this.__dirty = !0);
          m[l] = c;
          m = this.ii;
          l = this.ii_i++;
          !this.__dirty && (l >= m.length || m[l] != d) && (this.__dirty = !0);
          m[l] = d;
          m = this.o;
          l = this.o_i++;
          this.__dirty || !(l >= m.length) && e.equals(m[l]) ||
            (this.__dirty = !0);
          m[l] = e;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != f) && (this.__dirty = !0);
          m[l] = f;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != g) && (this.__dirty = !0);
          m[l] = g;
          m = this.f;
          l = this.f_i++;
          !this.__dirty && (l >= m.length || m[l] != h) && (this.__dirty = !0);
          m[l] = h
        },
        beginShaderFill: function(a) {
          this.prepareWrite();
          var b = this.types,
            c = this.t_i++,
            d = ba.BEGIN_SHADER_FILL;
          !this.__dirty && (c >= b.length || b[c] != d) && (this.__dirty = !0);
          b[c] = d;
          b = this.o;
          c = this.o_i++;
          !this.__dirty && (c >= b.length || b[c] !=
            a) && (this.__dirty = !0);
          b[c] = a
        },
        clear: function() {
          this.o_i = this.ii_i = this.i_i = this.ff_i = this.f_i = this.b_i = this.t_i = 0
        },
        copy: function() {
          var a = new Ee;
          a.append(this);
          return a
        },
        cubicCurveTo: function(a, b, c, d, e, f) {
          this.prepareWrite();
          var g = this.types,
            h = this.t_i++,
            m = ba.CUBIC_CURVE_TO;
          !this.__dirty && (h >= g.length || g[h] != m) && (this.__dirty = !0);
          g[h] = m;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != a) && (this.__dirty = !0);
          g[h] = a;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != b) && (this.__dirty = !0);
          g[h] = b;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != c) && (this.__dirty = !0);
          g[h] = c;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != d) && (this.__dirty = !0);
          g[h] = d;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != e) && (this.__dirty = !0);
          g[h] = e;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != f) && (this.__dirty = !0);
          g[h] = f
        },
        curveTo: function(a, b, c, d) {
          this.prepareWrite();
          var e = this.types,
            f = this.t_i++,
            g = ba.CURVE_TO;
          !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
          e[f] =
            g;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
          e[f] = a;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != b) && (this.__dirty = !0);
          e[f] = b;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != c) && (this.__dirty = !0);
          e[f] = c;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != d) && (this.__dirty = !0);
          e[f] = d
        },
        destroy: function() {
          this.ii = this.ff = this.o = this.f = this.i = this.b = this.types = null
        },
        drawCircle: function(a, b, c) {
          this.prepareWrite();
          var d = this.types,
            e = this.t_i++,
            f = ba.DRAW_CIRCLE;
          !this.__dirty && (e >= d.length || d[e] != f) && (this.__dirty = !0);
          d[e] = f;
          d = this.f;
          e = this.f_i++;
          !this.__dirty && (e >= d.length || d[e] != a) && (this.__dirty = !0);
          d[e] = a;
          d = this.f;
          e = this.f_i++;
          !this.__dirty && (e >= d.length || d[e] != b) && (this.__dirty = !0);
          d[e] = b;
          d = this.f;
          e = this.f_i++;
          !this.__dirty && (e >= d.length || d[e] != c) && (this.__dirty = !0);
          d[e] = c
        },
        drawEllipse: function(a, b, c, d) {
          this.prepareWrite();
          var e = this.types,
            f = this.t_i++,
            g = ba.DRAW_ELLIPSE;
          !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
          e[f] = g;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
          e[f] = a;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != b) && (this.__dirty = !0);
          e[f] = b;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != c) && (this.__dirty = !0);
          e[f] = c;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != d) && (this.__dirty = !0);
          e[f] = d
        },
        drawQuads: function(a, b, c) {
          this.prepareWrite();
          var d = this.types,
            e = this.t_i++,
            f = ba.DRAW_QUADS;
          !this.__dirty && (e >= d.length || d[e] != f) && (this.__dirty = !0);
          d[e] = f;
          d = this.o;
          e = this.o_i++;
          !this.__dirty && (e >= d.length || d[e] != a) && (this.__dirty = !0);
          d[e] = a;
          d = this.o;
          e = this.o_i++;
          !this.__dirty && (e >= d.length || d[e] != b) && (this.__dirty = !0);
          d[e] = b;
          d = this.o;
          e = this.o_i++;
          !this.__dirty && (e >= d.length || d[e] != c) && (this.__dirty = !0);
          d[e] = c
        },
        drawRect: function(a, b, c, d) {
          this.prepareWrite();
          var e = this.types,
            f = this.t_i++,
            g = ba.DRAW_RECT;
          !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
          e[f] = g;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
          e[f] = a;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != b) && (this.__dirty = !0);
          e[f] = b;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != c) && (this.__dirty = !0);
          e[f] = c;
          e = this.f;
          f = this.f_i++;
          !this.__dirty && (f >= e.length || e[f] != d) && (this.__dirty = !0);
          e[f] = d
        },
        drawRoundRect: function(a, b, c, d, e, f) {
          this.prepareWrite();
          var g = this.types,
            h = this.t_i++,
            m = ba.DRAW_ROUND_RECT;
          !this.__dirty && (h >= g.length || g[h] != m) && (this.__dirty = !0);
          g[h] = m;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != a) && (this.__dirty = !0);
          g[h] = a;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != b) && (this.__dirty = !0);
          g[h] = b;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != c) && (this.__dirty = !0);
          g[h] = c;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != d) && (this.__dirty = !0);
          g[h] = d;
          g = this.f;
          h = this.f_i++;
          !this.__dirty && (h >= g.length || g[h] != e) && (this.__dirty = !0);
          g[h] = e;
          !this.__dirty && (this.o_i >= this.o.length || this.o[this.o_i] != f) && (this.__dirty = !0);
          this.o[this.o_i++] = f
        },
        drawTriangles: function(a, b, c, d) {
          this.prepareWrite();
          var e = this.types,
            f = this.t_i++,
            g = ba.DRAW_TRIANGLES;
          !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
          e[f] = g;
          e = this.o;
          f = this.o_i++;
          !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
          e[f] = a;
          e = this.o;
          f = this.o_i++;
          !this.__dirty && (f >= e.length || e[f] != b) && (this.__dirty = !0);
          e[f] = b;
          e = this.o;
          f = this.o_i++;
          !this.__dirty && (f >= e.length || e[f] != c) && (this.__dirty = !0);
          e[f] = c;
          e = this.o;
          f = this.o_i++;
          !this.__dirty && (f >= e.length || e[f] != d) && (this.__dirty = !0);
          e[f] = d
        },
        endFill: function() {
          this.prepareWrite();
          var a =
            this.types,
            b = this.t_i++,
            c = ba.END_FILL;
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        lineBitmapStyle: function(a, b, c, d) {
          this.prepareWrite();
          var e = this.types,
            f = this.t_i++,
            g = ba.LINE_BITMAP_STYLE;
          !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
          e[f] = g;
          e = this.o;
          f = this.o_i++;
          !this.__dirty && (f >= e.length || a != e[f] || a.image.version != this.objVersions[f]) && (this.__dirty = !0);
          for (e[f] = a; this.objVersions.length < f;) this.objVersions.push(0);
          this.objVersions[f] = a.image.version;
          e = this.o;
          f =
            this.o_i++;
          this.__dirty || !(f >= e.length) && b.equals(e[f]) || (this.__dirty = !0);
          e[f] = b;
          e = this.b;
          f = this.b_i++;
          !this.__dirty && (f >= e.length || e[f] != c) && (this.__dirty = !0);
          e[f] = c;
          e = this.b;
          f = this.b_i++;
          !this.__dirty && (f >= e.length || e[f] != d) && (this.__dirty = !0);
          e[f] = d
        },
        lineGradientStyle: function(a, b, c, d, e, f, g, h) {
          this.prepareWrite();
          var m = this.types,
            l = this.t_i++,
            p = ba.LINE_GRADIENT_STYLE;
          !this.__dirty && (l >= m.length || m[l] != p) && (this.__dirty = !0);
          m[l] = p;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != a) && (this.__dirty = !0);
          m[l] = a;
          m = this.ii;
          l = this.ii_i++;
          !this.__dirty && (l >= m.length || m[l] != b) && (this.__dirty = !0);
          m[l] = b;
          m = this.ff;
          l = this.ff_i++;
          !this.__dirty && (l >= m.length || m[l] != c) && (this.__dirty = !0);
          m[l] = c;
          m = this.ii;
          l = this.ii_i++;
          !this.__dirty && (l >= m.length || m[l] != d) && (this.__dirty = !0);
          m[l] = d;
          m = this.o;
          l = this.o_i++;
          this.__dirty || !(l >= m.length) && e.equals(m[l]) || (this.__dirty = !0);
          m[l] = e;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != f) && (this.__dirty = !0);
          m[l] = f;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length ||
            m[l] != g) && (this.__dirty = !0);
          m[l] = g;
          m = this.f;
          l = this.f_i++;
          !this.__dirty && (l >= m.length || m[l] != h) && (this.__dirty = !0);
          m[l] = h
        },
        lineStyle: function(a, b, c, d, e, f, g, h) {
          this.prepareWrite();
          var m = this.types,
            l = this.t_i++,
            p = ba.LINE_STYLE;
          !this.__dirty && (l >= m.length || m[l] != p) && (this.__dirty = !0);
          m[l] = p;
          !this.__dirty && (this.o_i >= this.o.length || this.o[this.o_i] != a) && (this.__dirty = !0);
          this.o[this.o_i++] = a;
          m = this.i;
          l = this.i_i++;
          !this.__dirty && (l >= m.length || m[l] != b) && (this.__dirty = !0);
          m[l] = b;
          m = this.f;
          l = this.f_i++;
          !this.__dirty &&
            (l >= m.length || m[l] != c) && (this.__dirty = !0);
          m[l] = c;
          m = this.b;
          l = this.b_i++;
          !this.__dirty && (l >= m.length || m[l] != d) && (this.__dirty = !0);
          m[l] = d;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != e) && (this.__dirty = !0);
          m[l] = e;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != f) && (this.__dirty = !0);
          m[l] = f;
          m = this.o;
          l = this.o_i++;
          !this.__dirty && (l >= m.length || m[l] != g) && (this.__dirty = !0);
          m[l] = g;
          m = this.f;
          l = this.f_i++;
          !this.__dirty && (l >= m.length || m[l] != h) && (this.__dirty = !0);
          m[l] = h
        },
        lineTo: function(a, b) {
          this.prepareWrite();
          var c = this.types,
            d = this.t_i++,
            e = ba.LINE_TO;
          !this.__dirty && (d >= c.length || c[d] != e) && (this.__dirty = !0);
          c[d] = e;
          c = this.f;
          d = this.f_i++;
          !this.__dirty && (d >= c.length || c[d] != a) && (this.__dirty = !0);
          c[d] = a;
          c = this.f;
          d = this.f_i++;
          !this.__dirty && (d >= c.length || c[d] != b) && (this.__dirty = !0);
          c[d] = b
        },
        markAsClean: function() {
          this.__dirty = !1
        },
        moveTo: function(a, b) {
          this.prepareWrite();
          var c = this.types,
            d = this.t_i++,
            e = ba.MOVE_TO;
          !this.__dirty && (d >= c.length || c[d] != e) && (this.__dirty = !0);
          c[d] = e;
          c = this.f;
          d = this.f_i++;
          !this.__dirty &&
            (d >= c.length || c[d] != a) && (this.__dirty = !0);
          c[d] = a;
          c = this.f;
          d = this.f_i++;
          !this.__dirty && (d >= c.length || c[d] != b) && (this.__dirty = !0);
          c[d] = b
        },
        prepareWrite: function() {
          this.copyOnWrite && (this.types = this.types.slice(), this.b = this.b.slice(), this.i = this.i.slice(), this.f = this.f.slice(), this.o = this.o.slice(), this.ff = this.ff.slice(), this.ii = this.ii.slice(), this.objVersions = this.objVersions.slice(), this.copyOnWrite = !1)
        },
        overrideBlendMode: function(a) {
          this.prepareWrite();
          this.types.push(ba.OVERRIDE_BLEND_MODE);
          this.o.push(a)
        },
        overrideMatrix: function(a) {
          this.prepareWrite();
          var b = this.types,
            c = this.t_i++,
            d = ba.OVERRIDE_MATRIX;
          !this.__dirty && (c >= b.length || b[c] != d) && (this.__dirty = !0);
          b[c] = d;
          b = this.o;
          c = this.o_i++;
          this.__dirty || !(c >= b.length) && a.equals(b[c]) || (this.__dirty = !0);
          b[c] = a
        },
        windingEvenOdd: function() {
          this.prepareWrite();
          var a = this.types,
            b = this.t_i++,
            c = ba.WINDING_EVEN_ODD;
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        windingNonZero: function() {
          this.prepareWrite();
          var a = this.types,
            b = this.t_i++,
            c = ba.WINDING_NON_ZERO;
          !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
          a[b] = c
        },
        get_dirty: function() {
          return this.__dirty
        },
        get_length: function() {
          return this.t_i
        },
        __initFromEmpty: function() {
          this.types = Ee.empty.types;
          this.b = Ee.empty.b;
          this.i = Ee.empty.i;
          this.f = Ee.empty.f;
          this.o = Ee.empty.o;
          this.ff = Ee.empty.ff;
          this.ii = Ee.empty.ii;
          this.objVersions = Ee.empty.objVersions;
          this.copyOnWrite = !0
        },
        __endBuffer: function() {
          this.__lastLength != this.t_i && (this.__dirty = !0);
          this.__lastLength = this.t_i
        },
        __replaceMtx: function(a, b, c) {
          this.__dirty ||
            !(b >= a.length) && c.equals(a[b]) || (this.__dirty = !0);
          a[b] = c
        },
        __replaceBmp: function(a, b, c) {
          !this.__dirty && (b >= a.length || c != a[b] || c.image.version != this.objVersions[b]) && (this.__dirty = !0);
          for (a[b] = c; this.objVersions.length < b;) this.objVersions.push(0);
          this.objVersions[b] = c.image.version
        },
        __class__: Ee,
        __properties__: {
          get_length: "get_length",
          get_dirty: "get_dirty"
        }
      };
      var A = function() {};
      k["openfl.display._internal.CanvasGraphics"] = A;
      A.__name__ = "openfl.display._internal.CanvasGraphics";
      A.closePath = function(a) {
        null ==
          a && (a = !1);
        null != A.context.strokeStyle && (a || A.context.closePath(), A.context.stroke(), a && A.context.closePath(), A.context.beginPath())
      };
      A.createBitmapFill = function(a, b, c) {
        va.convertToCanvas(a.image);
        A.setSmoothing(c);
        return A.context.createPattern(a.image.get_src(), b ? "repeat" : "no-repeat")
      };
      A.createGradientPattern = function(a, b, c, d, e, f, g, h) {
        f = null;
        g = !1;
        null == e && (e = Ea.__pool.get(), e.identity(), g = !0);
        switch (a) {
          case 0:
            f = A.context.createLinearGradient(-819.2, 0, 819.2, 0);
            A.pendingMatrix = e.clone();
            A.inversePendingMatrix =
              e.clone();
            A.inversePendingMatrix.invert();
            break;
          case 1:
            1 < h ? h = 1 : -1 > h && (h = -1), f = A.context.createRadialGradient(819.2 * h, 0, 0, 0, 0, 819.2), A.pendingMatrix = e.clone(), A.inversePendingMatrix = e.clone(), A.inversePendingMatrix.invert()
        }
        for (var m, l, p, n = 0, k = b.length; n < k;) p = n++, m = b[p], a = c[p], h = (m & 16711680) >>> 16, l = (m & 65280) >>> 8, m &= 255, p = d[p] / 255, 0 > p && (p = 0), 1 < p && (p = 1), f.addColorStop(p, "rgba(" + h + ", " + l + ", " + m + ", " + a + ")");
        g && Ea.__pool.release(e);
        return f
      };
      A.createTempPatternCanvas = function(a, b, c, d) {
        var e = window.document.createElement("canvas"),
          f = e.getContext("2d");
        e.width = c;
        e.height = d;
        a = a.image.get_src();
        f.fillStyle = f.createPattern(a, b ? "repeat" : "no-repeat");
        f.beginPath();
        f.moveTo(0, 0);
        f.lineTo(0, d);
        f.lineTo(c, d);
        f.lineTo(c, 0);
        f.lineTo(0, 0);
        f.closePath();
        A.hitTesting || f.fill(A.windingRule);
        return e
      };
      A.drawRoundRect = function(a, b, c, d, e, f) {
        null == f && (f = e);
        e *= .5;
        f *= .5;
        e > c / 2 && (e = c / 2);
        f > d / 2 && (f = d / 2);
        c = a + c;
        d = b + d;
        var g = -e + .7071067811865476 * e,
          h = -e + .41421356237309503 * e,
          m = -f + .7071067811865476 * f,
          l = -f + .41421356237309503 * f;
        A.context.moveTo(c, d - f);
        A.context.quadraticCurveTo(c,
          d + l, c + g, d + m);
        A.context.quadraticCurveTo(c + h, d, c - e, d);
        A.context.lineTo(a + e, d);
        A.context.quadraticCurveTo(a - h, d, a - g, d + m);
        A.context.quadraticCurveTo(a, d + l, a, d - f);
        A.context.lineTo(a, b + f);
        A.context.quadraticCurveTo(a, b - l, a - g, b - m);
        A.context.quadraticCurveTo(a - h, b, a + e, b);
        A.context.lineTo(c - e, b);
        A.context.quadraticCurveTo(c + h, b, c + g, b - m);
        A.context.quadraticCurveTo(c, b - l, c, b + f);
        A.context.lineTo(c, d - f)
      };
      A.endFill = function() {
        A.context.beginPath();
        A.playCommands(A.fillCommands, !1);
        A.fillCommands.clear()
      };
      A.endStroke =
        function() {
          A.context.beginPath();
          A.playCommands(A.strokeCommands, !0);
          A.context.closePath();
          A.strokeCommands.clear()
        };
      A.hitTest = function(a, b, c) {
        A.bounds = a.__bounds;
        A.graphics = a;
        if (0 == a.__commands.get_length() || null == A.bounds || 0 >= A.bounds.width || 0 >= A.bounds.height) return !1;
        A.hitTesting = !0;
        var d = a.__renderTransform,
          e = b * d.b + c * d.d + d.ty;
        b = b * d.a + c * d.c + d.tx - (A.bounds.x * d.a + A.bounds.y * d.c + d.tx);
        c = e - (A.bounds.x * d.b + A.bounds.y * d.d + d.ty);
        e = a.__canvas;
        var f = a.__context;
        a.__canvas = A.hitTestCanvas;
        a.__context = A.hitTestContext;
        A.context = a.__context;
        A.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
        A.fillCommands.clear();
        A.strokeCommands.clear();
        A.hasFill = !1;
        A.hasStroke = !1;
        A.bitmapFill = null;
        A.bitmapRepeat = !1;
        A.windingRule = "evenodd";
        d = new Xf(a.__commands);
        for (var g = a.__commands.types, h = 0, m = a.__commands.get_length(); h < m;) {
          var l = h++;
          l = g[l];
          switch (l._hx_index) {
            case 0:
            case 1:
            case 2:
            case 3:
              A.endFill();
              if (A.hasFill && A.context.isPointInPath(b, c, A.windingRule)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
              A.endStroke();
              if (A.hasStroke &&
                A.context.isPointInStroke(b, c)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
              if (l == ba.BEGIN_BITMAP_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1
                }
                d.prev = ba.BEGIN_BITMAP_FILL;
                l = d;
                A.fillCommands.beginBitmapFill(l.buffer.o[l.oPos], l.buffer.o[l.oPos + 1], l.buffer.b[l.bPos], l.buffer.b[l.bPos + 1]);
                A.strokeCommands.beginBitmapFill(l.buffer.o[l.oPos], l.buffer.o[l.oPos + 1], l.buffer.b[l.bPos], l.buffer.b[l.bPos + 1])
              } else if (l == ba.BEGIN_GRADIENT_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos +=
                      2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos +=
                      2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1
                }
                d.prev = ba.BEGIN_GRADIENT_FILL;
                l = d;
                A.fillCommands.beginGradientFill(l.buffer.o[l.oPos], l.buffer.ii[l.iiPos], l.buffer.ff[l.ffPos], l.buffer.ii[l.iiPos + 1], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos]);
                A.strokeCommands.beginGradientFill(l.buffer.o[l.oPos], l.buffer.ii[l.iiPos], l.buffer.ff[l.ffPos], l.buffer.ii[l.iiPos + 1], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos])
              } else if (l == ba.BEGIN_SHADER_FILL) {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos +=
                      2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos += 5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos +=
                      2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1
                }
                d.prev = ba.BEGIN_SHADER_FILL;
                l = d;
                A.fillCommands.beginShaderFill(l.buffer.o[l.oPos]);
                A.strokeCommands.beginShaderFill(l.buffer.o[l.oPos])
              } else {
                switch (d.prev._hx_index) {
                  case 0:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 1:
                    d.iPos += 1;
                    d.fPos += 1;
                    break;
                  case 2:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 3:
                    d.oPos += 1;
                    break;
                  case 4:
                    d.fPos += 6;
                    break;
                  case 5:
                    d.fPos += 4;
                    break;
                  case 6:
                    d.fPos += 3;
                    break;
                  case 7:
                    d.fPos += 4;
                    break;
                  case 8:
                    d.oPos += 3;
                    break;
                  case 9:
                    d.fPos += 4;
                    break;
                  case 10:
                    d.fPos +=
                      5;
                    d.oPos += 1;
                    break;
                  case 12:
                    d.oPos += 4;
                    break;
                  case 14:
                    d.oPos += 2;
                    d.bPos += 2;
                    break;
                  case 15:
                    d.oPos += 4;
                    d.iiPos += 2;
                    d.ffPos += 1;
                    d.fPos += 1;
                    break;
                  case 16:
                    d.oPos += 4;
                    d.iPos += 1;
                    d.fPos += 2;
                    d.bPos += 1;
                    break;
                  case 17:
                    d.fPos += 2;
                    break;
                  case 18:
                    d.fPos += 2;
                    break;
                  case 19:
                    d.oPos += 1;
                    break;
                  case 20:
                    d.oPos += 1
                }
                d.prev = ba.BEGIN_FILL;
                l = d;
                A.fillCommands.beginFill(l.buffer.i[l.iPos], 1);
                A.strokeCommands.beginFill(l.buffer.i[l.iPos], 1)
              }
              break;
            case 4:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos +=
                    1
              }
              d.prev = ba.CUBIC_CURVE_TO;
              l = d;
              A.fillCommands.cubicCurveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.f[l.fPos + 5]);
              A.strokeCommands.cubicCurveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.f[l.fPos + 5]);
              break;
            case 5:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos +=
                    1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.CURVE_TO;
              l = d;
              A.fillCommands.curveTo(l.buffer.f[l.fPos],
                l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
              A.strokeCommands.curveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
              break;
            case 6:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos +=
                    5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.DRAW_CIRCLE;
              l = d;
              A.fillCommands.drawCircle(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2]);
              A.strokeCommands.drawCircle(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2]);
              break;
            case 7:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos +=
                    2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos +=
                    2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.DRAW_ELLIPSE;
              l = d;
              A.fillCommands.drawEllipse(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
              A.strokeCommands.drawEllipse(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
              break;
            case 9:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.DRAW_RECT;
              l = d;
              A.fillCommands.drawRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos +
                2], l.buffer.f[l.fPos + 3]);
              A.strokeCommands.drawRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
              break;
            case 10:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos +=
                    4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.DRAW_ROUND_RECT;
              l = d;
              A.fillCommands.drawRoundRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.o[l.oPos]);
              A.strokeCommands.drawRoundRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos +
                2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.o[l.oPos]);
              break;
            case 13:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos +=
                    2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.END_FILL;
              A.endFill();
              if (A.hasFill && A.context.isPointInPath(b, c, A.windingRule)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
              A.endStroke();
              if (A.hasStroke && A.context.isPointInStroke(b, c)) return d.destroy(), a.__canvas = e, a.__context = f, !0;
              A.hasFill = !1;
              A.bitmapFill = null;
              break;
            case 14:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos +=
                    2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos +=
                    2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.LINE_BITMAP_STYLE;
              l = d;
              A.strokeCommands.lineBitmapStyle(l.buffer.o[l.oPos], l.buffer.o[l.oPos + 1], l.buffer.b[l.bPos], l.buffer.b[l.bPos + 1]);
              break;
            case 15:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos +=
                    4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.LINE_GRADIENT_STYLE;
              l = d;
              A.strokeCommands.lineGradientStyle(l.buffer.o[l.oPos], l.buffer.ii[l.iiPos], l.buffer.ff[l.ffPos], l.buffer.ii[l.iiPos + 1], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos +
                3], l.buffer.f[l.fPos]);
              break;
            case 16:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos +=
                    4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.LINE_STYLE;
              l = d;
              A.strokeCommands.lineStyle(l.buffer.o[l.oPos], l.buffer.i[l.iPos], 1, l.buffer.b[l.bPos], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos + 1]);
              break;
            case 17:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.LINE_TO;
              l = d;
              A.fillCommands.lineTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos +
                1]);
              A.strokeCommands.lineTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]);
              break;
            case 18:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos +=
                    2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos += 1
              }
              d.prev = ba.MOVE_TO;
              l = d;
              A.fillCommands.moveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]);
              A.strokeCommands.moveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]);
              break;
            case 21:
              A.windingRule = "evenodd";
              break;
            case 22:
              A.windingRule = "nonzero";
              break;
            default:
              switch (d.prev._hx_index) {
                case 0:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 1:
                  d.iPos += 1;
                  d.fPos += 1;
                  break;
                case 2:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 3:
                  d.oPos += 1;
                  break;
                case 4:
                  d.fPos += 6;
                  break;
                case 5:
                  d.fPos += 4;
                  break;
                case 6:
                  d.fPos += 3;
                  break;
                case 7:
                  d.fPos += 4;
                  break;
                case 8:
                  d.oPos += 3;
                  break;
                case 9:
                  d.fPos += 4;
                  break;
                case 10:
                  d.fPos += 5;
                  d.oPos += 1;
                  break;
                case 12:
                  d.oPos += 4;
                  break;
                case 14:
                  d.oPos += 2;
                  d.bPos += 2;
                  break;
                case 15:
                  d.oPos += 4;
                  d.iiPos += 2;
                  d.ffPos += 1;
                  d.fPos += 1;
                  break;
                case 16:
                  d.oPos += 4;
                  d.iPos += 1;
                  d.fPos += 2;
                  d.bPos += 1;
                  break;
                case 17:
                  d.fPos += 2;
                  break;
                case 18:
                  d.fPos += 2;
                  break;
                case 19:
                  d.oPos += 1;
                  break;
                case 20:
                  d.oPos +=
                    1
              }
              d.prev = l
          }
        }
        g = !1;
        0 < A.fillCommands.get_length() && A.endFill();
        A.hasFill && A.context.isPointInPath(b, c, A.windingRule) && (g = !0);
        0 < A.strokeCommands.get_length() && A.endStroke();
        A.hasStroke && A.context.isPointInStroke(b, c) && (g = !0);
        d.destroy();
        a.__canvas = e;
        a.__context = f;
        return g
      };
      A.isCCW = function(a, b, c, d, e, f) {
        return 0 > (c - a) * (f - b) - (d - b) * (e - a)
      };
      A.normalizeUVT = function(a, b) {
        null == b && (b = !1);
        for (var c = -Infinity, d, e = a.get_length(), f = 1, g = e + 1; f < g;) d = f++, b && 0 == d % 3 || (d = a.get(d - 1), c < d && (c = d));
        if (!b) return {
          max: c,
          uvt: a
        };
        var h = Fb.toFloatVector(null);
        f = 1;
        for (g = e + 1; f < g;) d = f++, b && 0 == d % 3 || h.push(a.get(d - 1));
        return {
          max: c,
          uvt: h
        }
      };
      A.playCommands = function(a, b) {
        null == b && (b = !1);
        A.bounds = A.graphics.__bounds;
        var c = A.bounds.x,
          d = A.bounds.y,
          e = 0,
          f = 0,
          g = !1,
          h = 0,
          m = 0,
          l = !1;
        A.windingRule = "evenodd";
        A.setSmoothing(!0);
        var p = !1,
          n = new Xf(a),
          k, q, u, v = null,
          r = null,
          t = a.types,
          w = 0,
          z = a.get_length();
        a: for (; w < z;) {
          var Q = w++,
            O = t[Q];
          switch (O._hx_index) {
            case 0:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos +=
                    4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.BEGIN_BITMAP_FILL;
              var aa = n;
              A.bitmapFill = aa.buffer.o[aa.oPos];
              A.context.fillStyle = A.createBitmapFill(aa.buffer.o[aa.oPos], aa.buffer.b[aa.bPos], aa.buffer.b[aa.bPos + 1]);
              A.hasFill = !0;
              null != aa.buffer.o[aa.oPos + 1] ? (A.pendingMatrix = aa.buffer.o[aa.oPos + 1], A.inversePendingMatrix = aa.buffer.o[aa.oPos + 1].clone(), A.inversePendingMatrix.invert()) : (A.pendingMatrix = null, A.inversePendingMatrix = null);
              break;
            case 1:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos +=
                    1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.BEGIN_FILL;
              var B = n;
              if (.005 >
                B.buffer.f[B.fPos]) A.hasFill = !1;
              else {
                if (1 == B.buffer.f[B.fPos]) {
                  var D = W.hex(B.buffer.i[B.iPos] & 16777215, 6);
                  A.context.fillStyle = "#" + D
                } else {
                  var F = (B.buffer.i[B.iPos] & 16711680) >>> 16;
                  var x = (B.buffer.i[B.iPos] & 65280) >>> 8;
                  var G = B.buffer.i[B.iPos] & 255;
                  A.context.fillStyle = "rgba(" + F + ", " + x + ", " + G + ", " + B.buffer.f[B.fPos] + ")"
                }
                A.bitmapFill = null;
                A.setSmoothing(!0);
                A.hasFill = !0
              }
              break;
            case 2:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos +=
                    1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.BEGIN_GRADIENT_FILL;
              var C = n;
              A.context.fillStyle = A.createGradientPattern(C.buffer.o[C.oPos], C.buffer.ii[C.iiPos], C.buffer.ff[C.ffPos], C.buffer.ii[C.iiPos + 1], C.buffer.o[C.oPos + 1], C.buffer.o[C.oPos + 2], C.buffer.o[C.oPos + 3], C.buffer.f[C.fPos]);
              A.bitmapFill = null;
              A.setSmoothing(!0);
              A.hasFill = !0;
              break;
            case 3:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos +=
                    3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.BEGIN_SHADER_FILL;
              var H = n,
                E = H.buffer.o[H.oPos];
              0 < E.inputCount && (A.bitmapFill = E.inputs[0], A.context.fillStyle = A.createBitmapFill(A.bitmapFill,
                0 != E.inputWrap[0], 5 != E.inputFilter[0]), A.hasFill = !0, A.pendingMatrix = null, A.inversePendingMatrix = null);
              break;
            case 4:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos +=
                    2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.CUBIC_CURVE_TO;
              var K = n;
              p = !0;
              A.context.bezierCurveTo(K.buffer.f[K.fPos] - c, K.buffer.f[K.fPos + 1] - d, K.buffer.f[K.fPos + 2] - c, K.buffer.f[K.fPos + 3] - d, K.buffer.f[K.fPos + 4] - c, K.buffer.f[K.fPos + 5] - d);
              break;
            case 5:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos +=
                    1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos +=
                    1
              }
              n.prev = ba.CURVE_TO;
              var N = n;
              p = !0;
              A.context.quadraticCurveTo(N.buffer.f[N.fPos] - c, N.buffer.f[N.fPos + 1] - d, N.buffer.f[N.fPos + 2] - c, N.buffer.f[N.fPos + 3] - d);
              break;
            case 6:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.DRAW_CIRCLE;
              var M = n;
              p = !0;
              A.context.moveTo(M.buffer.f[M.fPos] - c + M.buffer.f[M.fPos + 2], M.buffer.f[M.fPos + 1] - d);
              A.context.arc(M.buffer.f[M.fPos] - c, M.buffer.f[M.fPos + 1] - d, M.buffer.f[M.fPos + 2], 0, 2 * Math.PI, !0);
              break;
            case 7:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos +=
                    2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos +=
                    2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.DRAW_ELLIPSE;
              var S = n;
              p = !0;
              var P = S.buffer.f[S.fPos];
              var za = S.buffer.f[S.fPos + 1];
              var qb = S.buffer.f[S.fPos + 2];
              var da = S.buffer.f[S.fPos + 3];
              P -= c;
              za -= d;
              var U = qb / 2 * .5522848;
              var X = da / 2 * .5522848;
              var R = P + qb;
              var V = za + da;
              var vb = P + qb / 2;
              var L = za + da / 2;
              A.context.moveTo(P, L);
              A.context.bezierCurveTo(P, L - X, vb - U, za, vb, za);
              A.context.bezierCurveTo(vb + U, za, R, L - X, R, L);
              A.context.bezierCurveTo(R, L + X, vb + U, V, vb, V);
              A.context.bezierCurveTo(vb - U, V, P, L + X, P, L);
              break;
            case 8:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos +=
                    2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos +=
                    2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.DRAW_QUADS;
              var J = n,
                I = J.buffer.o[J.oPos],
                Z = J.buffer.o[J.oPos + 1],
                Y = J.buffer.o[J.oPos + 2],
                ea = null != Z,
                zd = !1,
                ia = !1,
                nb = ea ? Z.get_length() : Math.floor(I.get_length() / 4);
              if (0 == nb) return;
              null != Y && (Y.get_length() >= 6 * nb ? ia = zd = !0 : Y.get_length() >= 4 * nb ? zd = !0 : Y.get_length() >= 2 * nb && (ia = !0));
              var re = ha.__pool.get(),
                fa = Ea.__pool.get(),
                ka = A.graphics.__renderTransform;
              A.context.save();
              for (var Bc = 0, $e = nb; Bc < $e;) {
                var ma = Bc++;
                var na = ea ? 4 * Z.get(ma) : 4 * ma;
                if (!(0 > na ||
                    (re.setTo(I.get(na), I.get(na + 1), I.get(na + 2), I.get(na + 3)), 0 >= re.width || 0 >= re.height))) {
                  if (zd && ia) {
                    var Ae = 6 * ma;
                    fa.setTo(Y.get(Ae), Y.get(Ae + 1), Y.get(Ae + 2), Y.get(Ae + 3), Y.get(Ae + 4), Y.get(Ae + 5))
                  } else zd ? (Ae = 4 * ma, fa.setTo(Y.get(Ae), Y.get(Ae + 1), Y.get(Ae + 2), Y.get(Ae + 3), re.x, re.y)) : ia ? (Ae = 2 * ma, fa.tx = Y.get(Ae), fa.ty = Y.get(Ae + 1)) : (fa.tx = re.x, fa.ty = re.y);
                  fa.tx += e - c;
                  fa.ty += f - d;
                  fa.concat(ka);
                  A.context.setTransform(fa.a, fa.b, fa.c, fa.d, fa.tx, fa.ty);
                  null != A.bitmapFill ? A.context.drawImage(A.bitmapFill.image.get_src(),
                    re.x, re.y, re.width, re.height, 0, 0, re.width, re.height) : A.context.fillRect(0, 0, re.width, re.height)
                }
              }
              ha.__pool.release(re);
              Ea.__pool.release(fa);
              A.context.restore();
              break;
            case 9:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos +=
                    1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.DRAW_RECT;
              var ca = n;
              var pa = !1;
              if (null != A.bitmapFill && !A.hitTesting) {
                var Qa = u = q = k = 0;
                var ra = !0;
                if (null != A.pendingMatrix)
                  if (0 != A.pendingMatrix.b || 0 != A.pendingMatrix.c) ra = !1;
                  else {
                    null == v && (v = la.__pool.get());
                    null == r && (r = la.__pool.get());
                    v.setTo(ca.buffer.f[ca.fPos], ca.buffer.f[ca.fPos + 1]);
                    var oa = A.inversePendingMatrix,
                      sa = v.x,
                      ob = v.y;
                    v.x = sa * oa.a + ob * oa.c + oa.tx;
                    v.y = sa * oa.b + ob * oa.d + oa.ty;
                    r.setTo(ca.buffer.f[ca.fPos] + ca.buffer.f[ca.fPos + 2], ca.buffer.f[ca.fPos + 1] + ca.buffer.f[ca.fPos + 3]);
                    var Ga = A.inversePendingMatrix,
                      xa = r.x,
                      ya = r.y;
                    r.x = xa * Ga.a + ya * Ga.c + Ga.tx;
                    r.y = xa * Ga.b + ya * Ga.d + Ga.ty;
                    k = v.y;
                    Qa = v.x;
                    u = r.y;
                    q = r.x
                  }
                else k = ca.buffer.f[ca.fPos + 1], Qa = ca.buffer.f[ca.fPos], u = ca.buffer.f[ca.fPos + 1] + ca.buffer.f[ca.fPos + 3], q = ca.buffer.f[ca.fPos] + ca.buffer.f[ca.fPos +
                  2];
                ra && 0 <= k && 0 <= Qa && q <= A.bitmapFill.width && u <= A.bitmapFill.height && (pa = !0, A.hitTesting || A.context.drawImage(A.bitmapFill.image.get_src(), Qa, k, q - Qa, u - k, ca.buffer.f[ca.fPos] - c, ca.buffer.f[ca.fPos + 1] - d, ca.buffer.f[ca.fPos + 2], ca.buffer.f[ca.fPos + 3]))
              }
              pa || (p = !0, A.context.rect(ca.buffer.f[ca.fPos] - c, ca.buffer.f[ca.fPos + 1] - d, ca.buffer.f[ca.fPos + 2], ca.buffer.f[ca.fPos + 3]));
              break;
            case 10:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.DRAW_ROUND_RECT;
              var qa = n;
              p = !0;
              A.drawRoundRect(qa.buffer.f[qa.fPos] - c, qa.buffer.f[qa.fPos + 1] - d, qa.buffer.f[qa.fPos + 2], qa.buffer.f[qa.fPos + 3], qa.buffer.f[qa.fPos + 4], qa.buffer.o[qa.oPos]);
              break;
            case 12:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos +=
                    5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.DRAW_TRIANGLES;
              var ua = n,
                ta = ua.buffer.o[ua.oPos],
                wa = ua.buffer.o[ua.oPos + 1],
                se = ua.buffer.o[ua.oPos + 2],
                va = null,
                db = null == A.bitmapFill;
              if (db && null != se) break a;
              if (!db) {
                if (null == se) {
                  se = Fb.toFloatVector(null);
                  for (var Aa = 0, Ba =
                      ta.get_length() / 2 | 0; Aa < Ba;) {
                    var Ya = Aa++;
                    se.push(ta.get(2 * Ya) - c / A.bitmapFill.width);
                    se.push(ta.get(2 * Ya + 1) - d / A.bitmapFill.height)
                  }
                }
                var Ca = se.get_length() != ta.get_length(),
                  Da = A.normalizeUVT(se, Ca),
                  Ia = Da.max;
                se = Da.uvt;
                va = 1 < Ia ? A.createTempPatternCanvas(A.bitmapFill, A.bitmapRepeat, A.bounds.width | 0, A.bounds.height | 0) : A.createTempPatternCanvas(A.bitmapFill, A.bitmapRepeat, A.bitmapFill.width, A.bitmapFill.height)
              }
              for (var Fa = 0, Ja = wa.get_length(), Ha, Ka, La, Na, Oa, Pa, Ra, Wa, $a, Sa, Ua, Ta, Va, Pb, Xa, rb, cb, Za, ab, bb, Re,
                  fb, ib, jb, kb, lb, ec, mb; Fa < Ja;) {
                Ha = Fa;
                Ka = Fa + 1;
                La = Fa + 2;
                Na = 2 * wa.get(Ha);
                Oa = 2 * wa.get(Ha) + 1;
                Pa = 2 * wa.get(Ka);
                Ra = 2 * wa.get(Ka) + 1;
                Wa = 2 * wa.get(La);
                $a = 2 * wa.get(La) + 1;
                Sa = ta.get(Na) - c;
                Ua = ta.get(Oa) - d;
                Ta = ta.get(Pa) - c;
                Va = ta.get(Ra) - d;
                Pb = ta.get(Wa) - c;
                Xa = ta.get($a) - d;
                switch (ua.buffer.o[ua.oPos + 3]) {
                  case 0:
                    if (0 > (Ta - Sa) * (Xa - Ua) - (Va - Ua) * (Pb - Sa)) {
                      Fa += 3;
                      continue
                    }
                    break;
                  case 2:
                    if (!(0 > (Ta - Sa) * (Xa - Ua) - (Va - Ua) * (Pb - Sa))) {
                      Fa += 3;
                      continue
                    }
                }
                db ? (A.context.beginPath(), A.context.moveTo(Sa, Ua), A.context.lineTo(Ta, Va), A.context.lineTo(Pb,
                  Xa), A.context.closePath(), A.hitTesting || A.context.fill(A.windingRule), Fa += 3) : (rb = se.get(Na) * va.width, Za = se.get(Pa) * va.width, bb = se.get(Wa) * va.width, cb = se.get(Oa) * va.height, ab = se.get(Ra) * va.height, Re = se.get($a) * va.height, fb = rb * (Re - ab) - Za * Re + bb * ab + (Za - bb) * cb, 0 == fb ? (Fa += 3, A.context.restore()) : (A.context.save(), A.context.beginPath(), A.context.moveTo(Sa, Ua), A.context.lineTo(Ta, Va), A.context.lineTo(Pb, Xa), A.context.closePath(), A.context.clip(), ib = -(cb * (Pb - Ta) - ab * Pb + Re * Ta + (ab - Re) * Sa) / fb, jb = (ab * Xa + cb * (Va -
                  Xa) - Re * Va + (Re - ab) * Ua) / fb, kb = (rb * (Pb - Ta) - Za * Pb + bb * Ta + (Za - bb) * Sa) / fb, lb = -(Za * Xa + rb * (Va - Xa) - bb * Va + (bb - Za) * Ua) / fb, ec = (rb * (Re * Ta - ab * Pb) + cb * (Za * Pb - bb * Ta) + (bb * ab - Za * Re) * Sa) / fb, mb = (rb * (Re * Va - ab * Xa) + cb * (Za * Xa - bb * Va) + (bb * ab - Za * Re) * Ua) / fb, A.context.transform(ib, jb, kb, lb, ec, mb), A.context.drawImage(va, 0, 0, va.width, va.height), A.context.restore(), Fa += 3))
              }
              break;
            case 14:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.LINE_BITMAP_STYLE;
              var gb = n;
              b && A.hasStroke &&
                A.closePath();
              A.context.moveTo(e - c, f - d);
              A.context.strokeStyle = A.createBitmapFill(gb.buffer.o[gb.oPos], gb.buffer.b[gb.bPos], gb.buffer.b[gb.bPos + 1]);
              A.hasStroke = !0;
              break;
            case 15:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.LINE_GRADIENT_STYLE;
              var eb = n;
              b && A.hasStroke && A.closePath();
              A.context.moveTo(e - c, f - d);
              A.context.strokeStyle = A.createGradientPattern(eb.buffer.o[eb.oPos], eb.buffer.ii[eb.iiPos], eb.buffer.ff[eb.ffPos], eb.buffer.ii[eb.iiPos +
                1], eb.buffer.o[eb.oPos + 1], eb.buffer.o[eb.oPos + 2], eb.buffer.o[eb.oPos + 3], eb.buffer.f[eb.fPos]);
              A.setSmoothing(!0);
              A.hasStroke = !0;
              break;
            case 16:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.LINE_STYLE;
              var Ma = n;
              b && A.hasStroke && A.closePath(!0);
              A.context.moveTo(e - c, f - d);
              if (null == Ma.buffer.o[Ma.oPos]) A.hasStroke = !1;
              else {
                A.context.lineWidth = 0 < Ma.buffer.o[Ma.oPos] ? Ma.buffer.o[Ma.oPos] : 1;
                var sb = null == Ma.buffer.o[Ma.oPos + 3] ? "round" : Wq.toString(Ma.buffer.o[Ma.oPos +
                  3]).toLowerCase();
                A.context.lineJoin = sb;
                var tb = null == Ma.buffer.o[Ma.oPos + 2] ? "round" : 0 == Ma.buffer.o[Ma.oPos + 2] ? "butt" : Tq.toString(Ma.buffer.o[Ma.oPos + 2]).toLowerCase();
                A.context.lineCap = tb;
                A.context.miterLimit = Ma.buffer.f[Ma.fPos + 1];
                if (1 == Ma.buffer.f[Ma.fPos]) {
                  var ub = W.hex(Ma.buffer.i[Ma.iPos] & 16777215, 6);
                  A.context.strokeStyle = "#" + ub
                } else F = (Ma.buffer.i[Ma.iPos] & 16711680) >>> 16, x = (Ma.buffer.i[Ma.iPos] & 65280) >>> 8, G = Ma.buffer.i[Ma.iPos] & 255, A.context.strokeStyle = "rgba(" + F + ", " + x + ", " + G + ", " + Ma.buffer.f[Ma.fPos] +
                  ")";
                A.setSmoothing(!0);
                A.hasStroke = !0
              }
              break;
            case 17:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.LINE_TO;
              var pb = n;
              p = !0;
              A.context.lineTo(pb.buffer.f[pb.fPos] - c, pb.buffer.f[pb.fPos + 1] - d);
              e = pb.buffer.f[pb.fPos];
              f = pb.buffer.f[pb.fPos + 1];
              e == h && f == m && (g = !0);
              break;
            case 18:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos +=
                    6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos += 4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = ba.MOVE_TO;
              var hb = n;
              A.context.moveTo(hb.buffer.f[hb.fPos] - c, hb.buffer.f[hb.fPos +
                1] - d);
              e = hb.buffer.f[hb.fPos];
              f = hb.buffer.f[hb.fPos + 1];
              l && hb.buffer.f[hb.fPos] != h && hb.buffer.f[hb.fPos + 1] != m && (g = !0);
              h = hb.buffer.f[hb.fPos];
              m = hb.buffer.f[hb.fPos + 1];
              l = !0;
              break;
            case 21:
              A.windingRule = "evenodd";
              break;
            case 22:
              A.windingRule = "nonzero";
              break;
            default:
              switch (n.prev._hx_index) {
                case 0:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 1:
                  n.iPos += 1;
                  n.fPos += 1;
                  break;
                case 2:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 3:
                  n.oPos += 1;
                  break;
                case 4:
                  n.fPos += 6;
                  break;
                case 5:
                  n.fPos += 4;
                  break;
                case 6:
                  n.fPos += 3;
                  break;
                case 7:
                  n.fPos +=
                    4;
                  break;
                case 8:
                  n.oPos += 3;
                  break;
                case 9:
                  n.fPos += 4;
                  break;
                case 10:
                  n.fPos += 5;
                  n.oPos += 1;
                  break;
                case 12:
                  n.oPos += 4;
                  break;
                case 14:
                  n.oPos += 2;
                  n.bPos += 2;
                  break;
                case 15:
                  n.oPos += 4;
                  n.iiPos += 2;
                  n.ffPos += 1;
                  n.fPos += 1;
                  break;
                case 16:
                  n.oPos += 4;
                  n.iPos += 1;
                  n.fPos += 2;
                  n.bPos += 1;
                  break;
                case 17:
                  n.fPos += 2;
                  break;
                case 18:
                  n.fPos += 2;
                  break;
                case 19:
                  n.oPos += 1;
                  break;
                case 20:
                  n.oPos += 1
              }
              n.prev = O
          }
        }
        null != v && la.__pool.release(v);
        null != r && la.__pool.release(r);
        n.destroy();
        p && (b && A.hasStroke && (A.hasFill && g ? (A.context.lineTo(h - c, m - d), A.closePath(!1)) :
          g && e == h && f == m && A.closePath(!1), A.hitTesting || A.context.stroke()), b || !A.hasFill && null == A.bitmapFill || (A.context.translate(-A.bounds.x, -A.bounds.y), null != A.pendingMatrix ? (A.context.transform(A.pendingMatrix.a, A.pendingMatrix.b, A.pendingMatrix.c, A.pendingMatrix.d, A.pendingMatrix.tx, A.pendingMatrix.ty), A.hitTesting || A.context.fill(A.windingRule), A.context.transform(A.inversePendingMatrix.a, A.inversePendingMatrix.b, A.inversePendingMatrix.c, A.inversePendingMatrix.d, A.inversePendingMatrix.tx, A.inversePendingMatrix.ty)) :
          A.hitTesting || A.context.fill(A.windingRule), A.context.translate(A.bounds.x, A.bounds.y), A.context.closePath()))
      };
      A.render = function(a, b) {
        a.__update(b.__worldTransform);
        a.__commands.__endBuffer();
        if (a.__softwareDirty && a.__commands.get_dirty()) {
          A.hitTesting = !1;
          A.graphics = a;
          A.allowSmoothing = b.__allowSmoothing;
          A.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
          A.bounds = a.__bounds;
          var c = a.__width,
            d = a.__height;
          if (!a.__visible || 0 == a.__commands.get_length() || null == A.bounds || 1 > c || 1 > d) a.__canvas = null, a.__context =
            null, a.__bitmap = null;
          else {
            null == a.__canvas && (a.__canvas = window.document.createElement("canvas"), a.__context = a.__canvas.getContext("2d"));
            A.context = a.__context;
            var e = a.__renderTransform,
              f = a.__canvas,
              g = b.pixelRatio,
              h = c * g | 0,
              m = d * g | 0;
            b.__setBlendModeContext(A.context, 10);
            b.__isDOM ? (f.width == h && f.height == m ? A.context.clearRect(0, 0, h, m) : (f.width = h, f.height = m, f.style.width = c + "px", f.style.height = d + "px"), c = a.__renderTransform, A.context.setTransform(c.a * g, c.b * g, c.c * g, c.d * g, c.tx * g, c.ty * g)) : (f.width == h && f.height ==
              m ? (A.context.closePath(), A.context.setTransform(1, 0, 0, 1, 0, 0), A.context.clearRect(0, 0, h, m)) : (f.width = c, f.height = d), A.context.setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty));
            A.fillCommands.clear();
            A.strokeCommands.clear();
            A.hasFill = !1;
            A.hasStroke = !1;
            A.bitmapFill = null;
            g = A.bitmapRepeat = !1;
            d = c = 0;
            A.windingRule = "evenodd";
            e = new Xf(a.__commands);
            f = a.__commands.types;
            h = 0;
            for (m = a.__commands.get_length(); h < m;) {
              var l = h++;
              l = f[l];
              switch (l._hx_index) {
                case 0:
                case 1:
                case 2:
                case 3:
                  A.endFill();
                  A.endStroke();
                  if (l == ba.BEGIN_BITMAP_FILL) {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos +=
                          2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos +=
                          2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1
                    }
                    e.prev = ba.BEGIN_BITMAP_FILL;
                    l = e;
                    A.fillCommands.beginBitmapFill(l.buffer.o[l.oPos], l.buffer.o[l.oPos + 1], l.buffer.b[l.bPos], l.buffer.b[l.bPos + 1]);
                    A.strokeCommands.beginBitmapFill(l.buffer.o[l.oPos], l.buffer.o[l.oPos + 1], l.buffer.b[l.bPos], l.buffer.b[l.bPos + 1])
                  } else if (l == ba.BEGIN_GRADIENT_FILL) {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos +=
                          1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1
                    }
                    e.prev = ba.BEGIN_GRADIENT_FILL;
                    l = e;
                    A.fillCommands.beginGradientFill(l.buffer.o[l.oPos],
                      l.buffer.ii[l.iiPos], l.buffer.ff[l.ffPos], l.buffer.ii[l.iiPos + 1], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos]);
                    A.strokeCommands.beginGradientFill(l.buffer.o[l.oPos], l.buffer.ii[l.iiPos], l.buffer.ff[l.ffPos], l.buffer.ii[l.iiPos + 1], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos])
                  } else if (l == ba.BEGIN_SHADER_FILL) {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1
                    }
                    e.prev = ba.BEGIN_SHADER_FILL;
                    l = e;
                    A.fillCommands.beginShaderFill(l.buffer.o[l.oPos]);
                    A.strokeCommands.beginShaderFill(l.buffer.o[l.oPos])
                  } else {
                    switch (e.prev._hx_index) {
                      case 0:
                        e.oPos += 2;
                        e.bPos += 2;
                        break;
                      case 1:
                        e.iPos += 1;
                        e.fPos += 1;
                        break;
                      case 2:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 3:
                        e.oPos += 1;
                        break;
                      case 4:
                        e.fPos += 6;
                        break;
                      case 5:
                        e.fPos += 4;
                        break;
                      case 6:
                        e.fPos += 3;
                        break;
                      case 7:
                        e.fPos += 4;
                        break;
                      case 8:
                        e.oPos += 3;
                        break;
                      case 9:
                        e.fPos += 4;
                        break;
                      case 10:
                        e.fPos += 5;
                        e.oPos += 1;
                        break;
                      case 12:
                        e.oPos += 4;
                        break;
                      case 14:
                        e.oPos += 2;
                        e.bPos +=
                          2;
                        break;
                      case 15:
                        e.oPos += 4;
                        e.iiPos += 2;
                        e.ffPos += 1;
                        e.fPos += 1;
                        break;
                      case 16:
                        e.oPos += 4;
                        e.iPos += 1;
                        e.fPos += 2;
                        e.bPos += 1;
                        break;
                      case 17:
                        e.fPos += 2;
                        break;
                      case 18:
                        e.fPos += 2;
                        break;
                      case 19:
                        e.oPos += 1;
                        break;
                      case 20:
                        e.oPos += 1
                    }
                    e.prev = ba.BEGIN_FILL;
                    l = e;
                    A.fillCommands.beginFill(l.buffer.i[l.iPos], l.buffer.f[l.fPos]);
                    A.strokeCommands.beginFill(l.buffer.i[l.iPos], l.buffer.f[l.fPos])
                  }
                  break;
                case 4:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos +=
                        1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.CUBIC_CURVE_TO;
                  l = e;
                  A.fillCommands.cubicCurveTo(l.buffer.f[l.fPos],
                    l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.f[l.fPos + 5]);
                  g ? A.strokeCommands.cubicCurveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.f[l.fPos + 5]) : (c = l.buffer.f[l.fPos + 4], d = l.buffer.f[l.fPos + 5]);
                  break;
                case 5:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos +=
                        6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.CURVE_TO;
                  l = e;
                  A.fillCommands.curveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1],
                    l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
                  g ? A.strokeCommands.curveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]) : (c = l.buffer.f[l.fPos + 2], d = l.buffer.f[l.fPos + 3]);
                  break;
                case 6:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos +=
                        4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.DRAW_CIRCLE;
                  l = e;
                  A.fillCommands.drawCircle(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2]);
                  g && A.strokeCommands.drawCircle(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos +
                    2]);
                  break;
                case 7:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos +=
                        2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.DRAW_ELLIPSE;
                  l = e;
                  A.fillCommands.drawEllipse(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
                  g && A.strokeCommands.drawEllipse(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
                  break;
                case 8:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos +=
                        1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.DRAW_QUADS;
                  l = e;
                  A.fillCommands.drawQuads(l.buffer.o[l.oPos],
                    l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2]);
                  break;
                case 9:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos +=
                        1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.DRAW_RECT;
                  l = e;
                  A.fillCommands.drawRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
                  g && A.strokeCommands.drawRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3]);
                  break;
                case 10:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos +=
                        4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.DRAW_ROUND_RECT;
                  l = e;
                  A.fillCommands.drawRoundRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.o[l.oPos]);
                  g && A.strokeCommands.drawRoundRect(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1], l.buffer.f[l.fPos + 2], l.buffer.f[l.fPos + 3], l.buffer.f[l.fPos + 4], l.buffer.o[l.oPos]);
                  break;
                case 12:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos +=
                        6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.DRAW_TRIANGLES;
                  l = e;
                  A.fillCommands.drawTriangles(l.buffer.o[l.oPos], l.buffer.o[l.oPos +
                    1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3]);
                  break;
                case 13:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos +=
                        1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.END_FILL;
                  A.endFill();
                  A.endStroke();
                  g = A.hasFill = !1;
                  A.bitmapFill = null;
                  d = c = 0;
                  break;
                case 14:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos +=
                        4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.LINE_BITMAP_STYLE;
                  l = e;
                  g || 0 == c && 0 == d || (A.strokeCommands.moveTo(c, d), d = c = 0);
                  g = !0;
                  A.strokeCommands.lineBitmapStyle(l.buffer.o[l.oPos], l.buffer.o[l.oPos +
                    1], l.buffer.b[l.bPos], l.buffer.b[l.bPos + 1]);
                  break;
                case 15:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos +=
                        1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.LINE_GRADIENT_STYLE;
                  l = e;
                  g || 0 == c && 0 == d || (A.strokeCommands.moveTo(c, d), d = c = 0);
                  g = !0;
                  A.strokeCommands.lineGradientStyle(l.buffer.o[l.oPos], l.buffer.ii[l.iiPos], l.buffer.ff[l.ffPos], l.buffer.ii[l.iiPos + 1], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos]);
                  break;
                case 16:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos +=
                        2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.LINE_STYLE;
                  l = e;
                  g || null == l.buffer.o[l.oPos] || 0 == c && 0 == d || (A.strokeCommands.moveTo(c, d), d = c = 0);
                  g = null != l.buffer.o[l.oPos];
                  A.strokeCommands.lineStyle(l.buffer.o[l.oPos], l.buffer.i[l.iPos], l.buffer.f[l.fPos], l.buffer.b[l.bPos], l.buffer.o[l.oPos + 1], l.buffer.o[l.oPos + 2], l.buffer.o[l.oPos + 3], l.buffer.f[l.fPos + 1]);
                  break;
                case 17:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.LINE_TO;
                  l = e;
                  A.fillCommands.lineTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]);
                  g ? A.strokeCommands.lineTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]) : (c = l.buffer.f[l.fPos], d = l.buffer.f[l.fPos + 1]);
                  break;
                case 18:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos +=
                        5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.MOVE_TO;
                  l = e;
                  A.fillCommands.moveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]);
                  g ? A.strokeCommands.moveTo(l.buffer.f[l.fPos], l.buffer.f[l.fPos + 1]) : (c = l.buffer.f[l.fPos], d = l.buffer.f[l.fPos + 1]);
                  break;
                case 19:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos +=
                        2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos +=
                        2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.OVERRIDE_BLEND_MODE;
                  l = e;
                  b.__setBlendModeContext(A.context, l.buffer.o[l.oPos]);
                  break;
                case 21:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos +=
                        4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.WINDING_EVEN_ODD;
                  A.fillCommands.windingEvenOdd();
                  A.windingRule = "evenodd";
                  break;
                case 22:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos += 1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = ba.WINDING_NON_ZERO;
                  A.fillCommands.windingNonZero();
                  A.windingRule =
                    "nonzero";
                  break;
                default:
                  switch (e.prev._hx_index) {
                    case 0:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 1:
                      e.iPos += 1;
                      e.fPos += 1;
                      break;
                    case 2:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 3:
                      e.oPos += 1;
                      break;
                    case 4:
                      e.fPos += 6;
                      break;
                    case 5:
                      e.fPos += 4;
                      break;
                    case 6:
                      e.fPos += 3;
                      break;
                    case 7:
                      e.fPos += 4;
                      break;
                    case 8:
                      e.oPos += 3;
                      break;
                    case 9:
                      e.fPos += 4;
                      break;
                    case 10:
                      e.fPos += 5;
                      e.oPos += 1;
                      break;
                    case 12:
                      e.oPos += 4;
                      break;
                    case 14:
                      e.oPos += 2;
                      e.bPos += 2;
                      break;
                    case 15:
                      e.oPos += 4;
                      e.iiPos += 2;
                      e.ffPos += 1;
                      e.fPos += 1;
                      break;
                    case 16:
                      e.oPos += 4;
                      e.iPos +=
                        1;
                      e.fPos += 2;
                      e.bPos += 1;
                      break;
                    case 17:
                      e.fPos += 2;
                      break;
                    case 18:
                      e.fPos += 2;
                      break;
                    case 19:
                      e.oPos += 1;
                      break;
                    case 20:
                      e.oPos += 1
                  }
                  e.prev = l
              }
            }
            0 < A.fillCommands.get_length() && A.endFill();
            0 < A.strokeCommands.get_length() && A.endStroke();
            e.destroy();
            a.__bitmap = wa.fromCanvas(a.__canvas)
          }
          a.__softwareDirty = !1;
          a.set___dirty(!1)
        }
      };
      A.renderMask = function(a, b) {
        if (0 != a.__commands.get_length()) {
          A.context = b.context;
          b = new Xf(a.__commands);
          var c = a.__commands.types,
            d = 0;
          for (a = a.__commands.get_length(); d < a;) {
            var e = d++;
            e = c[e];
            switch (e._hx_index) {
              case 4:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos +=
                      2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.CUBIC_CURVE_TO;
                e = b;
                A.context.bezierCurveTo(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0, e.buffer.f[e.fPos + 2] - 0, e.buffer.f[e.fPos + 3] - 0, e.buffer.f[e.fPos + 4] - 0, e.buffer.f[e.fPos + 5] - 0);
                break;
              case 5:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos +=
                      4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.CURVE_TO;
                e = b;
                A.context.quadraticCurveTo(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0, e.buffer.f[e.fPos + 2] - 0, e.buffer.f[e.fPos + 3] - 0);
                break;
              case 6:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos +=
                      2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos +=
                      2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_CIRCLE;
                e = b;
                A.context.arc(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0, e.buffer.f[e.fPos + 2], 0, 2 * Math.PI, !0);
                break;
              case 7:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos +=
                      5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_ELLIPSE;
                var f = b;
                e = f.buffer.f[f.fPos];
                var g = f.buffer.f[f.fPos + 1];
                var h = f.buffer.f[f.fPos + 2];
                var m = f.buffer.f[f.fPos + 3];
                e -= 0;
                g -= 0;
                f = h / 2 * .5522848;
                var l = m / 2 * .5522848;
                var p = e + h;
                var n = g + m;
                h = e + h / 2;
                m = g + m / 2;
                A.context.moveTo(e,
                  m);
                A.context.bezierCurveTo(e, m - l, h - f, g, h, g);
                A.context.bezierCurveTo(h + f, g, p, m - l, p, m);
                A.context.bezierCurveTo(p, m + l, h + f, n, h, n);
                A.context.bezierCurveTo(h - f, n, e, m + l, e, m);
                break;
              case 9:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos +=
                      5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_RECT;
                e = b;
                A.context.beginPath();
                A.context.rect(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0, e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3]);
                A.context.closePath();
                break;
              case 10:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos +=
                      2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.DRAW_ROUND_RECT;
                e = b;
                A.drawRoundRect(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0, e.buffer.f[e.fPos + 2], e.buffer.f[e.fPos + 3], e.buffer.f[e.fPos + 4], e.buffer.o[e.oPos]);
                break;
              case 17:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos +=
                      3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = ba.LINE_TO;
                e = b;
                A.context.lineTo(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0);
                break;
              case 18:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos +=
                      1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos +=
                      1
                }
                b.prev = ba.MOVE_TO;
                e = b;
                A.context.moveTo(e.buffer.f[e.fPos] - 0, e.buffer.f[e.fPos + 1] - 0);
                break;
              default:
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos +=
                      4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = e
            }
          }
          b.destroy()
        }
      };
      A.setSmoothing = function(a) {
        A.allowSmoothing || (a = !1);
        A.context.imageSmoothingEnabled != a && (A.context.imageSmoothingEnabled = a)
      };
      var ar = function() {};
      k["openfl.display._internal.CanvasShape"] = ar;
      ar.__name__ = "openfl.display._internal.CanvasShape";
      ar.render = function(a, b) {
        if (a.__renderable) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            var d = a.__graphics;
            if (null != d) {
              A.render(d, b);
              var e = d.__width,
                f = d.__height,
                g = d.__canvas;
              if (null != g && d.__visible && 1 <= e && 1 <= f) {
                var h = d.__worldTransform,
                  m = b.context,
                  l = a.__scrollRect,
                  p = a.__worldScale9Grid;
                if (null == l || 0 < l.width && 0 < l.height) {
                  b.__setBlendMode(a.__worldBlendMode);
                  b.__pushMaskObject(a);
                  m.globalAlpha = c;
                  if (null != p && 0 == h.b && 0 == h.c) {
                    m.setTransform(1, 0, 0, 1, h.tx, h.ty);
                    var n = d.__bounds,
                      k = d.__renderTransform.a,
                      q = d.__renderTransform.d,
                      u = h.a,
                      v = h.d;
                    h = Math.max(1, Math.round(p.x * k));
                    d = Math.round(p.y *
                      q);
                    c = Math.max(1, Math.round((n.get_right() - p.get_right()) * k));
                    l = Math.round((n.get_bottom() - p.get_bottom()) * q);
                    k = Math.round(p.width * k);
                    q = Math.round(p.height * q);
                    var r = Math.round(p.x * u),
                      t = Math.round(p.y * v),
                      w = Math.round((n.get_right() - p.get_right()) * u);
                    p = Math.round((n.get_bottom() - p.get_bottom()) * v);
                    n = Math.round(e * u) - r - w;
                    u = Math.round(f * v) - t - p;
                    b.applySmoothing(m, !1);
                    0 != k && 0 != q ? (m.drawImage(g, 0, 0, h, d, 0, 0, r, t), m.drawImage(g, h, 0, k, d, r, 0, n, t), m.drawImage(g, h + k, 0, c, d, r + n, 0, w, t), m.drawImage(g, 0, d, h, q, 0, t, r, u),
                      m.drawImage(g, h, d, k, q, r, t, n, u), m.drawImage(g, h + k, d, c, q, r + n, t, w, u), m.drawImage(g, 0, d + q, h, l, 0, t + u, r, p), m.drawImage(g, h, d + q, k, l, r, t + u, n, p), m.drawImage(g, h + k, d + q, c, l, r + n, t + u, w, p)) : 0 == k && 0 != q ? (f = r + n + w, m.drawImage(g, 0, 0, e, d, 0, 0, f, t), m.drawImage(g, 0, d, e, q, 0, t, f, u), m.drawImage(g, 0, d + q, e, l, 0, t + u, f, p)) : 0 == q && 0 != k && (e = t + u + p, m.drawImage(g, 0, 0, h, f, 0, 0, r, e), m.drawImage(g, h, 0, k, f, r, 0, n, e), m.drawImage(g, h + k, 0, c, f, r + n, 0, w, e))
                  } else b.setTransform(h, m), b.__isDOM && (p = 1 / b.pixelRatio, m.scale(p, p)), m.drawImage(g, 0, 0, e,
                    f);
                  b.__popMaskObject(a)
                }
              }
            }
          }
        }
      };
      var Jm = function() {};
      k["openfl.display._internal.CanvasSimpleButton"] = Jm;
      Jm.__name__ = "openfl.display._internal.CanvasSimpleButton";
      Jm.renderDrawable = function(a, b) {
        !a.__renderable || 0 >= a.__worldAlpha || null == a.__currentState || (b.__pushMaskObject(a), b.__renderDrawable(a.__currentState), b.__popMaskObject(a), b.__renderEvent(a))
      };
      Jm.renderDrawableMask = function(a, b) {
        b.__renderDrawableMask(a.__currentState)
      };
      var X = function() {};
      k["openfl.display._internal.CanvasTextField"] = X;
      X.__name__ =
        "openfl.display._internal.CanvasTextField";
      X.render = function(a, b, c) {
        var d = a.__textEngine,
          e = !(d.background || d.border),
          f = e ? d.textBounds : d.bounds,
          g = a.__graphics,
          h = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == g.__bounds && (g.__bounds = new ha);
          if (0 == a.get_text().length) {
            h = d.bounds.width - 4;
            c = a.get_defaultTextFormat().align;
            h = 3 == c ? 0 : 4 == c ? h : h / 2;
            switch (c) {
              case 0:
                h += a.get_defaultTextFormat().leftMargin / 2;
                h -= a.get_defaultTextFormat().rightMargin / 2;
                h += a.get_defaultTextFormat().indent / 2;
                h += a.get_defaultTextFormat().blockIndent /
                  2;
                break;
              case 2:
                h += a.get_defaultTextFormat().leftMargin;
                h += a.get_defaultTextFormat().indent;
                h += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                h += a.get_defaultTextFormat().leftMargin;
                h += a.get_defaultTextFormat().indent;
                h += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                h -= a.get_defaultTextFormat().rightMargin
            }
            e && (f.y = d.bounds.y, f.x = h)
          }
          g.__bounds.copyFrom(f)
        }
        g.__update(b.__worldTransform);
        if (a.__dirty || g.__softwareDirty) {
          var m = g.__width,
            l = g.__height;
          if (!(null != d.text && "" != d.text || d.background ||
              d.border || d.__hasFocus || 1 == d.type && d.selectable) || (0 >= d.width || 0 >= d.height) && 2 != d.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap = null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1), a.__dirty = !1;
          else {
            null == a.__graphics.__canvas && (a.__graphics.__canvas = window.document.createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
            X.context = g.__context;
            c = g.__renderTransform;
            if (b.__isDOM) {
              var p = b.pixelRatio;
              g.__canvas.width =
                m * p | 0;
              g.__canvas.height = l * p | 0;
              g.__canvas.style.width = m + "px";
              g.__canvas.style.height = l + "px";
              m = Ea.__pool.get();
              m.copyFrom(c);
              m.scale(p, p);
              b.setTransform(m, X.context);
              Ea.__pool.release(m)
            } else g.__canvas.width = m, g.__canvas.height = l, X.context.setTransform(c.a, c.b, c.c, c.d, c.tx, c.ty);
            null == X.clearRect && (X.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
            X.clearRect && X.context.clearRect(0, 0, g.__canvas.width, g.__canvas.height);
            if (null != d.text && "" != d.text || d.__hasFocus) {
              e =
                d.text;
              g.__context.imageSmoothingEnabled = !b.__allowSmoothing || 0 == d.antiAliasType && 400 == d.sharpness ? !1 : !0;
              if (d.border || d.background) {
                X.context.rect(.5, .5, f.width - 1, f.height - 1);
                if (d.background) {
                  var n = W.hex(d.backgroundColor & 16777215, 6);
                  X.context.fillStyle = "#" + n;
                  X.context.fill()
                }
                d.border && (X.context.lineWidth = 1, n = W.hex(d.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke())
              }
              X.context.textBaseline = "alphabetic";
              X.context.textAlign = "start";
              b = -a.get_scrollH();
              var k = h = 0;
              for (n = a.get_scrollV() -
                1; k < n;) {
                var q = k++;
                h -= d.lineHeights.get(q)
              }
              for (c = d.layoutGroups.iterator(); c.hasNext();)
                if (p = c.next(), !(p.lineIndex < a.get_scrollV() - 1)) {
                  if (p.lineIndex > d.get_bottomScrollV() - 1) break;
                  m = "#" + W.hex(p.format.color & 16777215, 6);
                  X.context.font = Ub.getFont(p.format);
                  X.context.fillStyle = m;
                  X.context.fillText(e.substring(p.startIndex, p.endIndex), p.offsetX + b - f.x, p.offsetY + p.ascent + h - f.y);
                  if (-1 < a.__caretIndex && d.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (a.__showCursor && p.startIndex <= a.__caretIndex && p.endIndex >=
                        a.__caretIndex) {
                        k = l = 0;
                        for (n = a.__caretIndex - p.startIndex; k < n;) {
                          q = k++;
                          if (p.positions.length <= q) break;
                          l += p.positions[q]
                        }
                        k = 0;
                        n = a.get_scrollV();
                        for (q = p.lineIndex + 1; n < q;) {
                          var u = n++;
                          k += d.lineHeights.get(u - 1)
                        }
                        X.context.beginPath();
                        n = W.hex(p.format.color & 16777215, 6);
                        X.context.strokeStyle = "#" + n;
                        X.context.moveTo(p.offsetX + l - a.get_scrollH() - f.x, k + 2 - f.y);
                        X.context.lineWidth = 1;
                        X.context.lineTo(p.offsetX + l - a.get_scrollH() - f.x, k + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1 - f.y);
                        X.context.stroke();
                        X.context.closePath()
                      }
                    } else if (p.startIndex <=
                    a.__caretIndex && p.endIndex >= a.__caretIndex || p.startIndex <= a.__selectionIndex && p.endIndex >= a.__selectionIndex || p.startIndex > a.__caretIndex && p.endIndex < a.__selectionIndex || p.startIndex > a.__selectionIndex && p.endIndex < a.__caretIndex) l = Math.min(a.__selectionIndex, a.__caretIndex) | 0, k = Math.max(a.__selectionIndex, a.__caretIndex) | 0, p.startIndex > l && (l = p.startIndex), p.endIndex < k && (k = p.endIndex), q = a.getCharBoundaries(l), k >= p.endIndex ? (n = a.getCharBoundaries(p.endIndex - 1), null != n && (n.x += n.width + 2)) : n = a.getCharBoundaries(k),
                    null != q && null != n && (X.context.fillStyle = "#000000", X.context.fillRect(q.x + b - f.x, q.y + h, n.x - q.x, p.height), X.context.fillStyle = "#FFFFFF", X.context.fillText(e.substring(l, k), b + q.x - f.x, p.offsetY + p.ascent + h));
                  p.format.underline && (X.context.beginPath(), X.context.strokeStyle = m, X.context.lineWidth = 1, m = p.offsetX + b - f.x, l = Math.floor(p.offsetY + h + p.ascent - f.y) + .5, X.context.moveTo(m, l), X.context.lineTo(m + p.width, l), X.context.stroke(), X.context.closePath())
                }
            } else {
              if (d.border || d.background) d.border ? X.context.rect(.5,
                .5, f.width - 1, f.height - 1) : X.context.rect(0, 0, f.width, f.height), d.background && (n = W.hex(d.backgroundColor & 16777215, 6), X.context.fillStyle = "#" + n, X.context.fill()), d.border && (X.context.lineWidth = 1, X.context.lineCap = "square", n = W.hex(d.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke());
              if (-1 < a.__caretIndex && d.selectable && a.__showCursor) {
                b = -a.get_scrollH() + (e ? 0 : h);
                k = h = 0;
                for (n = a.get_scrollV() - 1; k < n;) q = k++, h += d.lineHeights.get(q);
                X.context.beginPath();
                n = W.hex(a.get_defaultTextFormat().color &
                  16777215, 6);
                X.context.strokeStyle = "#" + n;
                X.context.moveTo(b + 2.5, h + 2.5);
                X.context.lineWidth = 1;
                X.context.lineTo(b + 2.5, h + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1);
                X.context.stroke();
                X.context.closePath()
              }
            }
            g.__bitmap = wa.fromCanvas(a.__graphics.__canvas);
            g.__visible = !0;
            a.__dirty = !1;
            g.__softwareDirty = !1;
            g.set___dirty(!1)
          }
        }
      };
      X.renderDrawable = function(a, b) {
        b.__isDOM && !a.__renderedOnCanvasWhileOnDOM && (a.__renderedOnCanvasWhileOnDOM = !0, 1 == a.get_type() && a.replaceText(0, a.__text.length, a.__text), a.__isHTML &&
          a.__updateText(Ab.parse(a.__text, a.__textFormat, a.__textEngine.textFormatRanges)), a.__dirty = !0, a.__layoutDirty = !0, a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty()));
        if (null == a.get_mask() || 0 < a.get_mask().get_width() && 0 < a.get_mask().get_height())
          if (b.__updateCacheBitmap(a, a.__dirty), null == a.__cacheBitmap || a.__isCacheBitmapRender) {
            var c = a.__textEngine,
              d = !(c.background || c.border),
              e = d ? c.textBounds : c.bounds,
              f = a.__graphics,
              g = 0;
            if (a.__dirty) {
              a.__updateLayout();
              null == f.__bounds && (f.__bounds =
                new ha);
              if (0 == a.get_text().length) {
                var h = c.bounds.width - 4,
                  m = a.get_defaultTextFormat().align;
                g = 3 == m ? 0 : 4 == m ? h : h / 2;
                switch (m) {
                  case 0:
                    g += a.get_defaultTextFormat().leftMargin / 2;
                    g -= a.get_defaultTextFormat().rightMargin / 2;
                    g += a.get_defaultTextFormat().indent / 2;
                    g += a.get_defaultTextFormat().blockIndent / 2;
                    break;
                  case 2:
                    g += a.get_defaultTextFormat().leftMargin;
                    g += a.get_defaultTextFormat().indent;
                    g += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 3:
                    g += a.get_defaultTextFormat().leftMargin;
                    g += a.get_defaultTextFormat().indent;
                    g += a.get_defaultTextFormat().blockIndent;
                    break;
                  case 4:
                    g -= a.get_defaultTextFormat().rightMargin
                }
                d && (e.y = c.bounds.y, e.x = g)
              }
              f.__bounds.copyFrom(e)
            }
            f.__update(b.__worldTransform);
            if (a.__dirty || f.__softwareDirty)
              if (m = f.__width, h = f.__height, !(null != c.text && "" != c.text || c.background || c.border || c.__hasFocus || 1 == c.type && c.selectable) || (0 >= c.width || 0 >= c.height) && 2 != c.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap = null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1),
                a.__dirty = !1;
              else {
                null == a.__graphics.__canvas && (a.__graphics.__canvas = window.document.createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
                X.context = f.__context;
                var l = f.__renderTransform;
                if (b.__isDOM) {
                  var p = b.pixelRatio;
                  f.__canvas.width = m * p | 0;
                  f.__canvas.height = h * p | 0;
                  f.__canvas.style.width = m + "px";
                  f.__canvas.style.height = h + "px";
                  m = Ea.__pool.get();
                  m.copyFrom(l);
                  m.scale(p, p);
                  b.setTransform(m, X.context);
                  Ea.__pool.release(m)
                } else f.__canvas.width = m, f.__canvas.height = h, X.context.setTransform(l.a,
                  l.b, l.c, l.d, l.tx, l.ty);
                null == X.clearRect && (X.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
                X.clearRect && X.context.clearRect(0, 0, f.__canvas.width, f.__canvas.height);
                if (null != c.text && "" != c.text || c.__hasFocus) {
                  m = c.text;
                  f.__context.imageSmoothingEnabled = !b.__allowSmoothing || 0 == c.antiAliasType && 400 == c.sharpness ? !1 : !0;
                  if (c.border || c.background) {
                    X.context.rect(.5, .5, e.width - 1, e.height - 1);
                    if (c.background) {
                      var n = W.hex(c.backgroundColor & 16777215, 6);
                      X.context.fillStyle =
                        "#" + n;
                      X.context.fill()
                    }
                    c.border && (X.context.lineWidth = 1, n = W.hex(c.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke())
                  }
                  X.context.textBaseline = "alphabetic";
                  X.context.textAlign = "start";
                  h = -a.get_scrollH();
                  var k = d = 0;
                  for (n = a.get_scrollV() - 1; k < n;) {
                    var q = k++;
                    d -= c.lineHeights.get(q)
                  }
                  var u;
                  for (g = c.layoutGroups.iterator(); g.hasNext();)
                    if (p = g.next(), !(p.lineIndex < a.get_scrollV() - 1)) {
                      if (p.lineIndex > c.get_bottomScrollV() - 1) break;
                      l = "#" + W.hex(p.format.color & 16777215, 6);
                      X.context.font = Ub.getFont(p.format);
                      X.context.fillStyle = l;
                      X.context.fillText(m.substring(p.startIndex, p.endIndex), p.offsetX + h - e.x, p.offsetY + p.ascent + d - e.y);
                      if (-1 < a.__caretIndex && c.selectable)
                        if (a.__selectionIndex == a.__caretIndex) {
                          if (a.__showCursor && p.startIndex <= a.__caretIndex && p.endIndex >= a.__caretIndex) {
                            k = u = 0;
                            for (n = a.__caretIndex - p.startIndex; k < n;) {
                              q = k++;
                              if (p.positions.length <= q) break;
                              u += p.positions[q]
                            }
                            k = 0;
                            n = a.get_scrollV();
                            for (q = p.lineIndex + 1; n < q;) {
                              var v = n++;
                              k += c.lineHeights.get(v - 1)
                            }
                            X.context.beginPath();
                            n = W.hex(p.format.color &
                              16777215, 6);
                            X.context.strokeStyle = "#" + n;
                            X.context.moveTo(p.offsetX + u - a.get_scrollH() - e.x, k + 2 - e.y);
                            X.context.lineWidth = 1;
                            X.context.lineTo(p.offsetX + u - a.get_scrollH() - e.x, k + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1 - e.y);
                            X.context.stroke();
                            X.context.closePath()
                          }
                        } else if (p.startIndex <= a.__caretIndex && p.endIndex >= a.__caretIndex || p.startIndex <= a.__selectionIndex && p.endIndex >= a.__selectionIndex || p.startIndex > a.__caretIndex && p.endIndex < a.__selectionIndex || p.startIndex > a.__selectionIndex && p.endIndex <
                        a.__caretIndex) u = Math.min(a.__selectionIndex, a.__caretIndex) | 0, k = Math.max(a.__selectionIndex, a.__caretIndex) | 0, p.startIndex > u && (u = p.startIndex), p.endIndex < k && (k = p.endIndex), q = a.getCharBoundaries(u), k >= p.endIndex ? (n = a.getCharBoundaries(p.endIndex - 1), null != n && (n.x += n.width + 2)) : n = a.getCharBoundaries(k), null != q && null != n && (X.context.fillStyle = "#000000", X.context.fillRect(q.x + h - e.x, q.y + d, n.x - q.x, p.height), X.context.fillStyle = "#FFFFFF", X.context.fillText(m.substring(u, k), h + q.x - e.x, p.offsetY + p.ascent + d));
                      p.format.underline && (X.context.beginPath(), X.context.strokeStyle = l, X.context.lineWidth = 1, l = p.offsetX + h - e.x, u = Math.floor(p.offsetY + d + p.ascent - e.y) + .5, X.context.moveTo(l, u), X.context.lineTo(l + p.width, u), X.context.stroke(), X.context.closePath())
                    }
                } else {
                  if (c.border || c.background) c.border ? X.context.rect(.5, .5, e.width - 1, e.height - 1) : X.context.rect(0, 0, e.width, e.height), c.background && (n = W.hex(c.backgroundColor & 16777215, 6), X.context.fillStyle = "#" + n, X.context.fill()), c.border && (X.context.lineWidth = 1, X.context.lineCap =
                    "square", n = W.hex(c.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke());
                  if (-1 < a.__caretIndex && c.selectable && a.__showCursor) {
                    h = -a.get_scrollH() + (d ? 0 : g);
                    k = d = 0;
                    for (n = a.get_scrollV() - 1; k < n;) q = k++, d += c.lineHeights.get(q);
                    X.context.beginPath();
                    n = W.hex(a.get_defaultTextFormat().color & 16777215, 6);
                    X.context.strokeStyle = "#" + n;
                    X.context.moveTo(h + 2.5, d + 2.5);
                    X.context.lineWidth = 1;
                    X.context.lineTo(h + 2.5, d + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1);
                    X.context.stroke();
                    X.context.closePath()
                  }
                }
                f.__bitmap =
                  wa.fromCanvas(a.__graphics.__canvas);
                f.__visible = !0;
                a.__dirty = !1;
                f.__softwareDirty = !1;
                f.set___dirty(!1)
              } d = !1;
            0 == a.__textEngine.antiAliasType && 1 == a.__textEngine.gridFitType && (d = b.context.imageSmoothingEnabled) && (b.context.imageSmoothingEnabled = !1);
            if ((null != a.opaqueBackground || null != a.__graphics) && a.__renderable && (e = b.__getAlpha(a.__worldAlpha), !(0 >= e) && (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height() && (b.__setBlendMode(a.__worldBlendMode), b.__pushMaskObject(a),
                c = b.context, b.setTransform(a.__renderTransform, c), l = a.opaqueBackground, c.fillStyle = "rgb(" + (l >>> 16 & 255) + "," + (l >>> 8 & 255) + "," + (l & 255) + ")", c.fillRect(0, 0, a.get_width(), a.get_height()), b.__popMaskObject(a)), null != a.__graphics && a.__renderable && (e = b.__getAlpha(a.__worldAlpha), !(0 >= e) && (f = a.__graphics, null != f && (A.render(f, b), m = f.__width, h = f.__height, g = f.__canvas, null != g && f.__visible && 1 <= m && 1 <= h && (l = f.__worldTransform, c = b.context, u = a.__scrollRect, p = a.__worldScale9Grid, null == u || 0 < u.width && 0 < u.height))))))) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              c.globalAlpha = e;
              if (null != p && 0 == l.b && 0 == l.c) {
                c.setTransform(1, 0, 0, 1, l.tx, l.ty);
                e = f.__bounds;
                n = f.__renderTransform.a;
                var r = f.__renderTransform.d;
                q = l.a;
                v = l.d;
                f = Math.max(1, Math.round(p.x * n));
                l = Math.round(p.y * r);
                u = Math.max(1, Math.round((e.get_right() - p.get_right()) * n));
                k = Math.round((e.get_bottom() - p.get_bottom()) * r);
                n = Math.round(p.width * n);
                r = Math.round(p.height * r);
                var t = Math.round(p.x * q),
                  w = Math.round(p.y * v),
                  z = Math.round((e.get_right() - p.get_right()) * q);
                e = Math.round((e.get_bottom() -
                  p.get_bottom()) * v);
                p = Math.round(m * q) - t - z;
                q = Math.round(h * v) - w - e;
                b.applySmoothing(c, !1);
                0 != n && 0 != r ? (c.drawImage(g, 0, 0, f, l, 0, 0, t, w), c.drawImage(g, f, 0, n, l, t, 0, p, w), c.drawImage(g, f + n, 0, u, l, t + p, 0, z, w), c.drawImage(g, 0, l, f, r, 0, w, t, q), c.drawImage(g, f, l, n, r, t, w, p, q), c.drawImage(g, f + n, l, u, r, t + p, w, z, q), c.drawImage(g, 0, l + r, f, k, 0, w + q, t, e), c.drawImage(g, f, l + r, n, k, t, w + q, p, e), c.drawImage(g, f + n, l + r, u, k, t + p, w + q, z, e)) : 0 == n && 0 != r ? (f = t + p + z, c.drawImage(g, 0, 0, m, l, 0, 0, f, w), c.drawImage(g, 0, l, m, r, 0, w, f, q), c.drawImage(g, 0, l +
                  r, m, k, 0, w + q, f, e)) : 0 == r && 0 != n && (e = w + q + e, c.drawImage(g, 0, 0, f, h, 0, 0, t, e), c.drawImage(g, f, 0, n, h, t, 0, p, e), c.drawImage(g, f + n, 0, u, h, t + p, 0, z, e))
              } else b.setTransform(l, c), b.__isDOM && (e = 1 / b.pixelRatio, c.scale(e, e)), c.drawImage(g, 0, 0, m, h);
              b.__popMaskObject(a)
            }
            d && (b.context.imageSmoothingEnabled = !0)
          } else a = a.__cacheBitmap, a.__renderable && (e = b.__getAlpha(a.__worldAlpha), 0 < e && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable && (c = b.context, b.__setBlendMode(a.__worldBlendMode), b.__pushMaskObject(a,
            !1), va.convertToCanvas(a.__bitmapData.image), c.globalAlpha = e, u = a.__scrollRect, b.setTransform(a.__renderTransform, c), b.__allowSmoothing && a.smoothing || (c.imageSmoothingEnabled = !1), null == u ? c.drawImage(a.__bitmapData.image.get_src(), 0, 0, a.__bitmapData.image.width, a.__bitmapData.image.height) : c.drawImage(a.__bitmapData.image.get_src(), u.x, u.y, u.width, u.height), b.__allowSmoothing && a.smoothing || (c.imageSmoothingEnabled = !0), b.__popMaskObject(a, !1)))
      };
      X.renderDrawableMask = function(a, b) {
        Dh.renderDrawableMask(a,
          b)
      };
      var Vf = function() {};
      k["openfl.display._internal.CanvasTilemap"] = Vf;
      Vf.__name__ = "openfl.display._internal.CanvasTilemap";
      Vf.render = function(a, b) {
        if (a.__renderable && 0 != a.__group.__tiles.length) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            var d = b.context;
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var e = ha.__pool.get();
            e.setTo(0, 0, a.__width, a.__height);
            b.__pushMaskRect(e, a.__renderTransform);
            b.__allowSmoothing && a.smoothing || (d.imageSmoothingEnabled = !1);
            Vf.renderTileContainer(a.__group,
              b, a.__renderTransform, a.__tileset, b.__allowSmoothing && a.smoothing, a.tileAlphaEnabled, c, a.tileBlendModeEnabled, a.__worldBlendMode, null, null, e);
            b.__allowSmoothing && a.smoothing || (d.imageSmoothingEnabled = !0);
            b.__popMaskRect();
            b.__popMaskObject(a);
            ha.__pool.release(e)
          }
        }
      };
      Vf.renderTileContainer = function(a, b, c, d, e, f, g, h, m, l, p, n) {
        var k = b.context,
          q = b.__roundPixels,
          u = Ea.__pool.get(),
          v = a.__tiles,
          r, y = null,
          t = 0;
        for (a = a.__length; t < a;) {
          var w = t++;
          var z = v[w];
          u.setTo(1, 0, 0, 1, -z.get_originX(), -z.get_originY());
          u.concat(z.get_matrix());
          u.concat(c);
          q && (u.tx = Math.round(u.tx), u.ty = Math.round(u.ty));
          var Q = null != z.get_tileset() ? z.get_tileset() : d;
          w = z.get_alpha() * g;
          if ((r = z.get_visible()) && !(0 >= w))
            if (f || (w = 1), h && (y = null != z.__blendMode ? z.__blendMode : m), 0 < z.__length) Vf.renderTileContainer(z, b, u, Q, e, f, w, h, y, l, p, n);
            else if (null != Q) {
            r = z.get_id();
            if (-1 == r) {
              if (z = z.__rect, null == z || 0 >= z.width || 0 >= z.height) continue
            } else {
              z = Q.__data[r];
              if (null == z) continue;
              n.setTo(z.x, z.y, z.width, z.height);
              z = n
            }
            Q = Q.__bitmapData;
            null != Q && (Q != l && (null == Q.image.buffer.__srcImage &&
              va.convertToCanvas(Q.image), p = Q.image.get_src(), l = Q), k.globalAlpha = w, h && b.__setBlendMode(y), b.setTransform(u, k), k.drawImage(p, z.x, z.y, z.width, z.height, 0, 0, z.width, z.height))
          }
        }
        Ea.__pool.release(u)
      };
      Vf.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || (r = b.__getAlpha(a.__worldAlpha), 0 >= r))) {
            if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              t = b.context;
              b.setTransform(a.__renderTransform, t);
              var c = a.opaqueBackground;
              t.fillStyle = "rgb(" + (c >>> 16 & 255) + "," + (c >>> 8 & 255) + "," + (c & 255) + ")";
              t.fillRect(0, 0, a.get_width(), a.get_height());
              b.__popMaskObject(a)
            }
            if (null != a.__graphics && a.__renderable && (r = b.__getAlpha(a.__worldAlpha), !(0 >= r))) {
              var d = a.__graphics;
              if (null != d) {
                A.render(d, b);
                var e = d.__width,
                  f = d.__height;
                c = d.__canvas;
                if (null != c && d.__visible && 1 <= e && 1 <= f) {
                  var g = d.__worldTransform;
                  t = b.context;
                  w = a.__scrollRect;
                  var h = a.__worldScale9Grid;
                  if (null == w || 0 < w.width && 0 < w.height) {
                    b.__setBlendMode(a.__worldBlendMode);
                    b.__pushMaskObject(a);
                    t.globalAlpha = r;
                    if (null != h && 0 == g.b && 0 == g.c) {
                      t.setTransform(1, 0, 0, 1, g.tx, g.ty);
                      var m = d.__bounds,
                        l = d.__renderTransform.a,
                        p = d.__renderTransform.d,
                        n = g.a,
                        k = g.d;
                      g = Math.max(1, Math.round(h.x * l));
                      d = Math.round(h.y * p);
                      r = Math.max(1, Math.round((m.get_right() - h.get_right()) * l));
                      w = Math.round((m.get_bottom() - h.get_bottom()) * p);
                      l = Math.round(h.width * l);
                      p = Math.round(h.height * p);
                      var q = Math.round(h.x * n),
                        u = Math.round(h.y * k),
                        v =
                        Math.round((m.get_right() - h.get_right()) * n);
                      h = Math.round((m.get_bottom() - h.get_bottom()) * k);
                      m = Math.round(e * n) - q - v;
                      n = Math.round(f * k) - u - h;
                      b.applySmoothing(t, !1);
                      0 != l && 0 != p ? (t.drawImage(c, 0, 0, g, d, 0, 0, q, u), t.drawImage(c, g, 0, l, d, q, 0, m, u), t.drawImage(c, g + l, 0, r, d, q + m, 0, v, u), t.drawImage(c, 0, d, g, p, 0, u, q, n), t.drawImage(c, g, d, l, p, q, u, m, n), t.drawImage(c, g + l, d, r, p, q + m, u, v, n), t.drawImage(c, 0, d + p, g, w, 0, u + n, q, h), t.drawImage(c, g, d + p, l, w, q, u + n, m, h), t.drawImage(c, g + l, d + p, r, w, q + m, u + n, v, h)) : 0 == l && 0 != p ? (f = q + m + v, t.drawImage(c,
                        0, 0, e, d, 0, 0, f, u), t.drawImage(c, 0, d, e, p, 0, u, f, n), t.drawImage(c, 0, d + p, e, w, 0, u + n, f, h)) : 0 == p && 0 != l && (e = u + n + h, t.drawImage(c, 0, 0, g, f, 0, 0, q, e), t.drawImage(c, g, 0, l, f, q, 0, m, e), t.drawImage(c, g + l, 0, r, f, q + m, 0, v, e))
                    } else b.setTransform(g, t), b.__isDOM && (h = 1 / b.pixelRatio, t.scale(h, h)), t.drawImage(c, 0, 0, e, f);
                    b.__popMaskObject(a)
                  }
                }
              }
            }
          }
          a.__renderable && 0 != a.__group.__tiles.length && (r = b.__getAlpha(a.__worldAlpha), 0 >= r || (t = b.context, b.__setBlendMode(a.__worldBlendMode), b.__pushMaskObject(a), c = ha.__pool.get(), c.setTo(0,
            0, a.__width, a.__height), b.__pushMaskRect(c, a.__renderTransform), b.__allowSmoothing && a.smoothing || (t.imageSmoothingEnabled = !1), Vf.renderTileContainer(a.__group, b, a.__renderTransform, a.__tileset, b.__allowSmoothing && a.smoothing, a.tileAlphaEnabled, r, a.tileBlendModeEnabled, a.__worldBlendMode, null, null, c), b.__allowSmoothing && a.smoothing || (t.imageSmoothingEnabled = !0), b.__popMaskRect(), b.__popMaskObject(a), ha.__pool.release(c)))
        } else if (c = a.__cacheBitmap, c.__renderable) {
          var r = b.__getAlpha(c.__worldAlpha);
          if (0 < r && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable) {
            var t = b.context;
            b.__setBlendMode(c.__worldBlendMode);
            b.__pushMaskObject(c, !1);
            va.convertToCanvas(c.__bitmapData.image);
            t.globalAlpha = r;
            var w = c.__scrollRect;
            b.setTransform(c.__renderTransform, t);
            b.__allowSmoothing && c.smoothing || (t.imageSmoothingEnabled = !1);
            null == w ? t.drawImage(c.__bitmapData.image.get_src(), 0, 0, c.__bitmapData.image.width, c.__bitmapData.image.height) : t.drawImage(c.__bitmapData.image.get_src(), w.x, w.y, w.width,
              w.height);
            b.__allowSmoothing && c.smoothing || (t.imageSmoothingEnabled = !0);
            b.__popMaskObject(c, !1)
          }
        }
        b.__renderEvent(a)
      };
      Vf.renderDrawableMask = function(a, b) {};
      var ai = function() {};
      k["openfl.display._internal.CanvasVideo"] = ai;
      ai.__name__ = "openfl.display._internal.CanvasVideo";
      ai.render = function(a, b) {
        if (a.__renderable && null != a.__stream) {
          var c = b.__getAlpha(a.__worldAlpha);
          if (!(0 >= c)) {
            var d = b.context;
            if (null != a.__stream.__video) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              d.globalAlpha = c;
              c =
                a.__scrollRect;
              var e = a.smoothing;
              b.setTransform(a.__worldTransform, d);
              e || (d.imageSmoothingEnabled = !1);
              null == c ? d.drawImage(a.__stream.__video, 0, 0, a.get_width(), a.get_height()) : d.drawImage(a.__stream.__video, c.x, c.y, c.width, c.height, c.x, c.y, c.width, c.height);
              e || (d.imageSmoothingEnabled = !0);
              b.__popMaskObject(a)
            }
          }
        }
      };
      ai.renderDrawable = function(a, b) {
        ai.render(a, b);
        b.__renderEvent(a)
      };
      ai.renderDrawableMask = function(a, b) {};
      var wf = function() {};
      k["openfl.display._internal.Context3DBitmap"] = wf;
      wf.__name__ = "openfl.display._internal.Context3DBitmap";
      wf.render = function(a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha) && null != a.__bitmapData && a.__bitmapData.__isValid) {
          var c = b.__context3D;
          b.__setBlendMode(a.__worldBlendMode);
          b.__pushMaskObject(a);
          var d = b.__initDisplayShader(a.__worldShader);
          b.setShader(d);
          b.applyBitmapData(a.__bitmapData, b.__allowSmoothing && (a.smoothing || b.__upscaled));
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var e = a.__bitmapData.getVertexBuffer(c);
          null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
          d = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(d);
          b.__clearShader();
          b.__popMaskObject(a)
        }
      };
      wf.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        null != a.__bitmapData && null != a.__bitmapData.image && (a.__imageVersion = a.__bitmapData.image.version);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable ||
              0 >= a.__worldAlpha)) {
            if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = ha.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var e = a.opaqueBackground;
              c.clear((e >>> 16 & 255) / 255, (e >>> 8 & 255) / 255, (e & 255) / 255, 1, 0, 0, 1);
              b.__popMaskRect();
              b.__popMaskObject(a);
              ha.__pool.release(d)
            }
            null != a.__graphics && $f.render(a, b)
          }
          wf.render(a, b)
        } else wf.render(a.__cacheBitmap,
          b);
        b.__renderEvent(a)
      };
      wf.renderDrawableMask = function(a, b) {
        wf.renderMask(a, b)
      };
      wf.renderMask = function(a, b) {
        if (null != a.__bitmapData && a.__bitmapData.__isValid) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(bi.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
          b.updateShader();
          var e = a.__bitmapData.getVertexBuffer(c);
          null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index,
            e, 3, 2);
          a = a.__bitmapData.getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader()
        }
      };
      var Xm = function() {};
      k["openfl.display._internal.Context3DBitmapData"] = Xm;
      Xm.__name__ = "openfl.display._internal.Context3DBitmapData";
      Xm.renderDrawable = function(a, b) {
        var c = b.__context3D;
        b.__setBlendMode(10);
        var d = b.__defaultDisplayShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.applyAlpha(a.__worldAlpha);
        b.applyColorTransform(a.__worldColorTransform);
        b.updateShader();
        var e = a.getVertexBuffer(c);
        null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
        null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader()
      };
      Xm.renderDrawableMask = function(a, b) {
        var c = b.__context3D,
          d = b.__maskShader;
        b.setShader(d);
        b.applyBitmapData(a, b.__upscaled);
        b.applyMatrix(b.__getMatrix(a.__worldTransform, 1));
        b.updateShader();
        var e = a.getVertexBuffer(c);
        null != d.__position && c.setVertexBufferAt(d.__position.index,
          e, 0, 3);
        null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
        a = a.getIndexBuffer(c);
        c.drawTriangles(a);
        b.__clearShader()
      };
      var Fh = function(a, b, c, d) {
        this.context3D = a;
        this.elementType = b;
        this.dataPerVertex = d;
        this.vertexCount = this.indexCount = 0;
        this.resize(c)
      };
      k["openfl.display._internal.Context3DBuffer"] = Fh;
      Fh.__name__ = "openfl.display._internal.Context3DBuffer";
      Fh.prototype = {
        dataPerVertex: null,
        elementCount: null,
        elementType: null,
        indexBufferData: null,
        indexBuffers: null,
        indexCount: null,
        vertexBuffer: null,
        vertexBufferData: null,
        vertexCount: null,
        context3D: null,
        drawElements: function(a, b) {
          null == b && (b = -1);
          if (0 != this.indexCount && 0 != this.vertexCount && 0 == this.elementType._hx_index)
            if (-1 == b && (b = 2 * this.elementCount), 10922 > a && 10922 > b - a) this.context3D.drawTriangles(this.indexBuffers[0], a, 2 * b);
            else
              for (var c = a + b; a < c;) {
                var d = Math.floor(a / 10922);
                b = Math.min(c - a, 10922) | 0;
                if (0 >= b) break;
                this.context3D.drawTriangles(this.indexBuffers[d], 3 * (a - 10922 * d), 2 * b);
                a += b
              }
        },
        flushVertexBufferData: function() {
          this.vertexBufferData.length >
            this.vertexCount && (this.vertexCount = this.vertexBufferData.length, this.vertexBuffer = this.context3D.createVertexBuffer(this.vertexCount, this.dataPerVertex, 0));
          this.vertexBuffer.uploadFromTypedArray(Xg.toArrayBufferView(this.vertexBufferData))
        },
        resize: function(a, b) {
          null == b && (b = -1);
          this.elementCount = a; - 1 == b && (b = this.dataPerVertex);
          b != this.dataPerVertex && (this.vertexBuffer = null, this.vertexCount = 0, this.dataPerVertex = b);
          var c = 0;
          switch (this.elementType._hx_index) {
            case 0:
              c = 4 * a;
              break;
            case 1:
              c = 3 * a;
              break;
            case 2:
              c =
                3 * a
          }
          b *= c;
          if (null == this.vertexBufferData) {
            var d = c = null,
              e = null,
              f = null,
              g = null;
            this.vertexBufferData = b = null != b ? new Float32Array(b) : null != c ? new Float32Array(c) : null != d ? new Float32Array(d.__array) : null != e ? new Float32Array(e) : null != f ? null == g ? new Float32Array(f, 0) : new Float32Array(f, 0, g) : null
          } else b > this.vertexBufferData.length && (a = this.vertexBufferData, g = f = e = d = c = null, this.vertexBufferData = b = null != b ? new Float32Array(b) : null != c ? new Float32Array(c) : null != d ? new Float32Array(d.__array) : null != e ? new Float32Array(e) :
            null != f ? null == g ? new Float32Array(f, 0) : new Float32Array(f, 0, g) : null, this.vertexBufferData.set(a))
        },
        __class__: Fh
      };
      var gn = O["openfl.display._internal.Context3DElementType"] = {
        __ename__: "openfl.display._internal.Context3DElementType",
        __constructs__: null,
        QUADS: {
          _hx_name: "QUADS",
          _hx_index: 0,
          __enum__: "openfl.display._internal.Context3DElementType",
          toString: v
        },
        TRIANGLES: {
          _hx_name: "TRIANGLES",
          _hx_index: 1,
          __enum__: "openfl.display._internal.Context3DElementType",
          toString: v
        },
        TRIANGLE_INDICES: {
          _hx_name: "TRIANGLE_INDICES",
          _hx_index: 2,
          __enum__: "openfl.display._internal.Context3DElementType",
          toString: v
        }
      };
      gn.__constructs__ = [gn.QUADS, gn.TRIANGLES, gn.TRIANGLE_INDICES];
      var bh = function() {};
      k["openfl.display._internal.Context3DDisplayObject"] = bh;
      bh.__name__ = "openfl.display._internal.Context3DDisplayObject";
      bh.render = function(a, b) {
        if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || 0 >= a.__worldAlpha)) {
          if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var c = b.__context3D,
              d = ha.__pool.get();
            d.setTo(0, 0, a.get_width(), a.get_height());
            b.__pushMaskRect(d, a.__renderTransform);
            var e = a.opaqueBackground;
            c.clear((e >>> 16 & 255) / 255, (e >>> 8 & 255) / 255, (e & 255) / 255, 1, 0, 0, 1);
            b.__popMaskRect();
            b.__popMaskObject(a);
            ha.__pool.release(d)
          }
          null != a.__graphics && $f.render(a, b)
        }
      };
      bh.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null != a.__cacheBitmap && !a.__isCacheBitmapRender) wf.render(a.__cacheBitmap, b);
        else if (!(null == a.opaqueBackground &&
            null == a.__graphics || !a.__renderable || 0 >= a.__worldAlpha)) {
          if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var c = b.__context3D,
              d = ha.__pool.get();
            d.setTo(0, 0, a.get_width(), a.get_height());
            b.__pushMaskRect(d, a.__renderTransform);
            var e = a.opaqueBackground;
            c.clear((e >>> 16 & 255) / 255, (e >>> 8 & 255) / 255, (e & 255) / 255, 1, 0, 0, 1);
            b.__popMaskRect();
            b.__popMaskObject(a);
            ha.__pool.release(d)
          }
          null != a.__graphics && $f.render(a,
            b)
        }
        b.__renderEvent(a)
      };
      bh.renderDrawableMask = function(a, b) {
        null != a.__graphics && $f.renderMask(a, b)
      };
      bh.renderMask = function(a, b) {
        if (null != a.opaqueBackground || null != a.__graphics) null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height(), null != a.__graphics && $f.renderMask(a, b)
      };
      var Ym = function() {};
      k["openfl.display._internal.Context3DDisplayObjectContainer"] = Ym;
      Ym.__name__ = "openfl.display._internal.Context3DDisplayObjectContainer";
      Ym.renderDrawable = function(a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext();) {
          var d =
            c.next();
          null == d.stage && d.__cleanup()
        }
        a.__removedChildren.set_length(0);
        if (a.__renderable && !(0 >= a.__worldAlpha) && (bh.renderDrawable(a, b), null == a.__cacheBitmap || a.__isCacheBitmapRender)) {
          if (0 < a.__children.length)
            if (b.__pushMaskObject(a), null != b.__stage) {
              c = 0;
              for (d = a.__children; c < d.length;) {
                var e = d[c];
                ++c;
                b.__renderDrawable(e);
                e.__renderDirty = !1
              }
              a.__renderDirty = !1
            } else
              for (c = 0, d = a.__children; c < d.length;) e = d[c], ++c, b.__renderDrawable(e);
          0 < a.__children.length && b.__popMaskObject(a)
        }
      };
      Ym.renderDrawableMask =
        function(a, b) {
          for (var c = a.__removedChildren.iterator(); c.hasNext();) {
            var d = c.next();
            null == d.stage && d.__cleanup()
          }
          a.__removedChildren.set_length(0);
          null != a.__graphics && $f.renderMask(a, b);
          c = 0;
          for (a = a.__children; c < a.length;) d = a[c], ++c, b.__renderDrawableMask(d)
        };
      var Uc = function() {};
      k["openfl.display._internal.Context3DGraphics"] = Uc;
      Uc.__name__ = "openfl.display._internal.Context3DGraphics";
      Uc.buildBuffer = function(a, b) {
        var c, d = c = 0,
          e = 0,
          f = new Xf(a.__commands);
        b = b.__context3D;
        for (var g = ha.__pool.get(), h = Ea.__pool.get(),
            m = null, l = 0, p = a.__commands.types; l < p.length;) {
          var n = p[l];
          ++l;
          switch (n._hx_index) {
            case 0:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos +=
                    4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1
              }
              f.prev = ba.BEGIN_BITMAP_FILL;
              m = f;
              m = m.buffer.o[m.oPos];
              break;
            case 1:
              m = null;
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos +=
                    4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1
              }
              f.prev = n;
              break;
            case 3:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos +=
                    1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1
              }
              f.prev = ba.BEGIN_SHADER_FILL;
              m = f;
              n = m.buffer.o[m.oPos];
              m = null;
              if (null != n)
                for (var k = 0, q = n.inputCount; k < q;) {
                  var u = k++;
                  if ("bitmap" == n.inputRefs[u].name) {
                    m = n.inputs[u];
                    break
                  }
                }
              break;
            case 8:
              if (null != m) {
                switch (f.prev._hx_index) {
                  case 0:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 1:
                    f.iPos += 1;
                    f.fPos += 1;
                    break;
                  case 2:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 3:
                    f.oPos += 1;
                    break;
                  case 4:
                    f.fPos += 6;
                    break;
                  case 5:
                    f.fPos += 4;
                    break;
                  case 6:
                    f.fPos += 3;
                    break;
                  case 7:
                    f.fPos += 4;
                    break;
                  case 8:
                    f.oPos += 3;
                    break;
                  case 9:
                    f.fPos += 4;
                    break;
                  case 10:
                    f.fPos += 5;
                    f.oPos += 1;
                    break;
                  case 12:
                    f.oPos += 4;
                    break;
                  case 14:
                    f.oPos += 2;
                    f.bPos += 2;
                    break;
                  case 15:
                    f.oPos += 4;
                    f.iiPos += 2;
                    f.ffPos += 1;
                    f.fPos += 1;
                    break;
                  case 16:
                    f.oPos += 4;
                    f.iPos += 1;
                    f.fPos += 2;
                    f.bPos += 1;
                    break;
                  case 17:
                    f.fPos += 2;
                    break;
                  case 18:
                    f.fPos += 2;
                    break;
                  case 19:
                    f.oPos += 1;
                    break;
                  case 20:
                    f.oPos += 1
                }
                f.prev = ba.DRAW_QUADS;
                q = f;
                n = q.buffer.o[q.oPos];
                k = q.buffer.o[q.oPos + 1];
                q = q.buffer.o[q.oPos + 2];
                u = null != k;
                var v = !1,
                  r = !1,
                  t = u ? k.get_length() : Math.floor(n.get_length() / 4);
                if (0 == t) return;
                null != q && (q.get_length() >= 6 * t ? r = v = !0 : q.get_length() >= 4 * t ? v = !0 : q.get_length() >= 2 * t && (r = !0));
                null == a.__quadBuffer ? a.__quadBuffer = new Fh(b, gn.QUADS, t, 4) : a.__quadBuffer.resize(c + t, 4);
                for (var w, z, Q, O, A, aa, B, D, F, C, x, G, H, E, K = a.__quadBuffer.vertexBufferData, N = m.width, W = m.height, M = 0, S = t; M < S;) O = M++, w = 16 * (c + O), z = u ? 4 * k.get(O) : 4 * O, 0 > z || (g.setTo(n.get(z), n.get(z + 1), n.get(z + 2), n.get(z + 3)), z = g.width, Q = g.height, 0 >= z || 0 >= Q || (v && r ? (O *= 6, h.setTo(q.get(O), q.get(O + 1), q.get(O + 2), q.get(O + 3), q.get(O + 4), q.get(O + 5))) : v ? (O *= 4, h.setTo(q.get(O), q.get(O + 1), q.get(O + 2), q.get(O + 3), g.x, g.y)) : r ? (O *= 2, h.tx = q.get(O), h.ty = q.get(O +
                  1)) : (h.tx = g.x, h.ty = g.y), O = g.x / N, A = g.y / W, aa = g.get_right() / N, B = g.get_bottom() / W, D = 0 * h.a + 0 * h.c + h.tx, F = 0 * h.b + 0 * h.d + h.ty, C = z * h.a + 0 * h.c + h.tx, x = z * h.b + 0 * h.d + h.ty, G = 0 * h.a + Q * h.c + h.tx, H = 0 * h.b + Q * h.d + h.ty, E = z * h.a + Q * h.c + h.tx, z = z * h.b + Q * h.d + h.ty, K[w] = D, K[w + 1] = F, K[w + 2] = O, K[w + 3] = A, K[w + 4] = C, K[w + 4 + 1] = x, K[w + 4 + 2] = aa, K[w + 4 + 3] = A, K[w + 8] = G, K[w + 8 + 1] = H, K[w + 8 + 2] = O, K[w + 8 + 3] = B, K[w + 12] = E, K[w + 12 + 1] = z, K[w + 12 + 2] = aa, K[w + 12 + 3] = B));
                c += t
              }
              break;
            case 12:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos +=
                    1
              }
              f.prev = ba.DRAW_TRIANGLES;
              q = f;
              n = q.buffer.o[q.oPos];
              k = q.buffer.o[q.oPos + 1];
              q = q.buffer.o[q.oPos + 2];
              u = null != k;
              t = Math.floor(n.get_length() / 2);
              v = u ? k.get_length() : t;
              w = (t = (r = null != q) && q.get_length() >= 3 * t) ? 4 : 2;
              K = t ? 3 : 2;
              N = w + 2;
              W = t ? e : d;
              Uc.resizeVertexBuffer(a, t, W + v * N);
              M = t ? a.__vertexBufferDataUVT : a.__vertexBufferData;
              Q = 0;
              for (O = v; Q < O;) A = Q++, S = W + A * N, z = u ? 2 * k.get(A) : 2 * A, A = u ? k.get(A) * K : A * K, t ? (aa = q.get(A + 2), M[S] = n.get(z) / aa, M[S + 1] = n.get(z + 1) / aa, M[S + 2] = 0, M[S + 3] = 1 / aa) : (M[S] = n.get(z), M[S + 1] = n.get(z + 1)), M[S + w] = r ? q.get(A) :
                0, M[S + w + 1] = r ? q.get(A + 1) : 0;
              t ? e += v * N : d += v * N;
              break;
            case 13:
              m = null;
              break;
            default:
              switch (f.prev._hx_index) {
                case 0:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 1:
                  f.iPos += 1;
                  f.fPos += 1;
                  break;
                case 2:
                  f.oPos += 4;
                  f.iiPos += 2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 3:
                  f.oPos += 1;
                  break;
                case 4:
                  f.fPos += 6;
                  break;
                case 5:
                  f.fPos += 4;
                  break;
                case 6:
                  f.fPos += 3;
                  break;
                case 7:
                  f.fPos += 4;
                  break;
                case 8:
                  f.oPos += 3;
                  break;
                case 9:
                  f.fPos += 4;
                  break;
                case 10:
                  f.fPos += 5;
                  f.oPos += 1;
                  break;
                case 12:
                  f.oPos += 4;
                  break;
                case 14:
                  f.oPos += 2;
                  f.bPos += 2;
                  break;
                case 15:
                  f.oPos += 4;
                  f.iiPos +=
                    2;
                  f.ffPos += 1;
                  f.fPos += 1;
                  break;
                case 16:
                  f.oPos += 4;
                  f.iPos += 1;
                  f.fPos += 2;
                  f.bPos += 1;
                  break;
                case 17:
                  f.fPos += 2;
                  break;
                case 18:
                  f.fPos += 2;
                  break;
                case 19:
                  f.oPos += 1;
                  break;
                case 20:
                  f.oPos += 1
              }
              f.prev = n
          }
        }
        0 < c && a.__quadBuffer.flushVertexBufferData();
        if (0 < d) {
          c = a.__vertexBuffer;
          if (null == c || d > a.__vertexBufferCount) c = b.createVertexBuffer(d, 4, 0), a.__vertexBuffer = c, a.__vertexBufferCount = d;
          c.uploadFromTypedArray(Xg.toArrayBufferView(a.__vertexBufferData))
        }
        if (0 < e) {
          c = a.__vertexBufferUVT;
          if (null == c || e > a.__vertexBufferCountUVT) c =
            b.createVertexBuffer(e, 6, 0), a.__vertexBufferUVT = c, a.__vertexBufferCountUVT = e;
          c.uploadFromTypedArray(Xg.toArrayBufferView(a.__vertexBufferDataUVT))
        }
        ha.__pool.release(g);
        Ea.__pool.release(h)
      };
      Uc.isCompatible = function(a) {
        if (null != a.__owner.__worldScale9Grid) return !1;
        var b = new Xf(a.__commands),
          c = !1,
          d = !1,
          e = !1,
          f = 0;
        for (a = a.__commands.types; f < a.length;) {
          var g = a[f];
          ++f;
          switch (g._hx_index) {
            case 0:
              d = !0;
              e = c = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos +=
                    4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1
              }
              b.prev = g;
              break;
            case 1:
              d = !1;
              c = !0;
              e = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1
              }
              b.prev = g;
              break;
            case 3:
              c = d = !1;
              e = !0;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1
              }
              b.prev = g;
              break;
            case 8:
              if (d || e) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = g
              } else return b.destroy(), !1;
              break;
            case 9:
              if (c) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos +=
                      1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = g
              } else return b.destroy(), !1;
              break;
            case 12:
              if (d || e) {
                switch (b.prev._hx_index) {
                  case 0:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 1:
                    b.iPos += 1;
                    b.fPos += 1;
                    break;
                  case 2:
                    b.oPos += 4;
                    b.iiPos += 2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 3:
                    b.oPos += 1;
                    break;
                  case 4:
                    b.fPos += 6;
                    break;
                  case 5:
                    b.fPos += 4;
                    break;
                  case 6:
                    b.fPos += 3;
                    break;
                  case 7:
                    b.fPos += 4;
                    break;
                  case 8:
                    b.oPos += 3;
                    break;
                  case 9:
                    b.fPos += 4;
                    break;
                  case 10:
                    b.fPos += 5;
                    b.oPos += 1;
                    break;
                  case 12:
                    b.oPos += 4;
                    break;
                  case 14:
                    b.oPos += 2;
                    b.bPos += 2;
                    break;
                  case 15:
                    b.oPos += 4;
                    b.iiPos +=
                      2;
                    b.ffPos += 1;
                    b.fPos += 1;
                    break;
                  case 16:
                    b.oPos += 4;
                    b.iPos += 1;
                    b.fPos += 2;
                    b.bPos += 1;
                    break;
                  case 17:
                    b.fPos += 2;
                    break;
                  case 18:
                    b.fPos += 2;
                    break;
                  case 19:
                    b.oPos += 1;
                    break;
                  case 20:
                    b.oPos += 1
                }
                b.prev = g
              } else return b.destroy(), !1;
              break;
            case 13:
              e = c = d = !1;
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos +=
                    3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1
              }
              b.prev = g;
              break;
            case 18:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos +=
                    1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos += 2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1
              }
              b.prev = g;
              break;
            case 19:
              switch (b.prev._hx_index) {
                case 0:
                  b.oPos +=
                    2;
                  b.bPos += 2;
                  break;
                case 1:
                  b.iPos += 1;
                  b.fPos += 1;
                  break;
                case 2:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 3:
                  b.oPos += 1;
                  break;
                case 4:
                  b.fPos += 6;
                  break;
                case 5:
                  b.fPos += 4;
                  break;
                case 6:
                  b.fPos += 3;
                  break;
                case 7:
                  b.fPos += 4;
                  break;
                case 8:
                  b.oPos += 3;
                  break;
                case 9:
                  b.fPos += 4;
                  break;
                case 10:
                  b.fPos += 5;
                  b.oPos += 1;
                  break;
                case 12:
                  b.oPos += 4;
                  break;
                case 14:
                  b.oPos += 2;
                  b.bPos += 2;
                  break;
                case 15:
                  b.oPos += 4;
                  b.iiPos += 2;
                  b.ffPos += 1;
                  b.fPos += 1;
                  break;
                case 16:
                  b.oPos += 4;
                  b.iPos += 1;
                  b.fPos += 2;
                  b.bPos += 1;
                  break;
                case 17:
                  b.fPos += 2;
                  break;
                case 18:
                  b.fPos +=
                    2;
                  break;
                case 19:
                  b.oPos += 1;
                  break;
                case 20:
                  b.oPos += 1
              }
              b.prev = g;
              break;
            default:
              return b.destroy(), !1
          }
        }
        b.destroy();
        return !0
      };
      Uc.render = function(a, b) {
        if (a.__visible && 0 != a.__commands.get_length())
          if (null != a.__bitmap && !a.__dirty || !Uc.isCompatible(a)) {
            var c = b.__softwareRenderer.__worldTransform;
            b.__softwareRenderer.__worldTransform = b.__worldTransform;
            A.render(a, b.__softwareRenderer);
            b.__softwareRenderer.__worldTransform = c
          } else {
            a.__bitmap = null;
            a.__update(b.__worldTransform);
            var d = a.__width,
              e = a.__height;
            if (null !=
              a.__bounds && 1 <= d && 1 <= e) {
              (a.__hardwareDirty || null == a.__quadBuffer && null == a.__vertexBuffer && null == a.__vertexBufferUVT) && Uc.buildBuffer(a, b);
              c = new Xf(a.__commands);
              for (var f = b.__context3D, g = Ea.__pool.get(), h = null, m = null, l = !1, p = !1, n = null, q = 0, k = 0, u = 0, v = 0, r = 0, t = a.__commands.types; r < t.length;) switch (d = t[r], ++r, d._hx_index) {
                case 0:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos +=
                        6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = ba.BEGIN_BITMAP_FILL;
                  p = c;
                  m = p.buffer.o[p.oPos];
                  l = p.buffer.b[p.bPos];
                  p = p.buffer.b[p.bPos +
                    1];
                  n = h = null;
                  break;
                case 1:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos +=
                        1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = ba.BEGIN_FILL;
                  m = c;
                  n = (m.buffer.i[m.iPos] | 0) & 16777215 | (255 * m.buffer.f[m.fPos] | 0) << 24;
                  m = h = null;
                  break;
                case 3:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos +=
                        3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = ba.BEGIN_SHADER_FILL;
                  k = c;
                  h = k.buffer.o[k.oPos];
                  k = 0;
                  m = null == h || null == h.shader || null == h.shader.__bitmap ? null : h.shader.__bitmap.input;
                  n = null;
                  break;
                case 8:
                  if (null != m) {
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos +=
                          2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos +=
                          2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1
                    }
                    c.prev = ba.DRAW_QUADS;
                    var w = c;
                    d = w.buffer.o[w.oPos];
                    w = w.buffer.o[w.oPos + 1];
                    d = null != w ? w.get_length() : Math.floor(d.get_length() / 4);
                    var z = b.__getMatrix(a.__owner.__renderTransform, 1);
                    null == h || Uc.maskRender ? (w = Uc.maskRender ? b.__maskShader : b.__initGraphicsShader(null), b.setShader(w), b.applyMatrix(z), b.applyBitmapData(m, p, l), b.applyAlpha(a.__owner.__worldAlpha), b.applyColorTransform(a.__owner.__worldColorTransform), b.updateShader()) : (w = b.__initShaderBuffer(h),
                      b.__setShaderBuffer(h), b.applyMatrix(z), b.applyBitmapData(m, !1, l), b.applyAlpha(a.__owner.__worldAlpha), b.applyColorTransform(a.__owner.__worldColorTransform));
                    for (z = q + d; q < z;) {
                      d = Math.min(z - q, f.__quadIndexBufferElements) | 0;
                      if (0 >= d) break;
                      null == h || Uc.maskRender || b.__updateShaderBuffer(k);
                      null != w.__position && f.setVertexBufferAt(w.__position.index, a.__quadBuffer.vertexBuffer, 16 * q, 2);
                      null != w.__textureCoord && f.setVertexBufferAt(w.__textureCoord.index, a.__quadBuffer.vertexBuffer, 16 * q + 2, 2);
                      f.drawTriangles(f.__quadIndexBuffer,
                        0, 2 * d);
                      k += 4 * d;
                      q += d
                    }
                    b.__clearShader()
                  }
                  break;
                case 9:
                  if (null != n) {
                    switch (c.prev._hx_index) {
                      case 0:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 1:
                        c.iPos += 1;
                        c.fPos += 1;
                        break;
                      case 2:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 3:
                        c.oPos += 1;
                        break;
                      case 4:
                        c.fPos += 6;
                        break;
                      case 5:
                        c.fPos += 4;
                        break;
                      case 6:
                        c.fPos += 3;
                        break;
                      case 7:
                        c.fPos += 4;
                        break;
                      case 8:
                        c.oPos += 3;
                        break;
                      case 9:
                        c.fPos += 4;
                        break;
                      case 10:
                        c.fPos += 5;
                        c.oPos += 1;
                        break;
                      case 12:
                        c.oPos += 4;
                        break;
                      case 14:
                        c.oPos += 2;
                        c.bPos += 2;
                        break;
                      case 15:
                        c.oPos += 4;
                        c.iiPos += 2;
                        c.ffPos += 1;
                        c.fPos += 1;
                        break;
                      case 16:
                        c.oPos += 4;
                        c.iPos += 1;
                        c.fPos += 2;
                        c.bPos += 1;
                        break;
                      case 17:
                        c.fPos += 2;
                        break;
                      case 18:
                        c.fPos += 2;
                        break;
                      case 19:
                        c.oPos += 1;
                        break;
                      case 20:
                        c.oPos += 1
                    }
                    c.prev = ba.DRAW_RECT;
                    var Q = c;
                    w = Q.buffer.f[Q.fPos];
                    z = Q.buffer.f[Q.fPos + 1];
                    d = Q.buffer.f[Q.fPos + 2];
                    e = Q.buffer.f[Q.fPos + 3];
                    Q = n;
                    Uc.tempColorTransform.redOffset = Q >>> 16 & 255;
                    Uc.tempColorTransform.greenOffset = Q >>> 8 & 255;
                    Uc.tempColorTransform.blueOffset = Q & 255;
                    Uc.tempColorTransform.__combine(a.__owner.__worldColorTransform);
                    g.identity();
                    g.scale(d, e);
                    g.tx =
                      w;
                    g.ty = z;
                    g.concat(a.__owner.__renderTransform);
                    d = Uc.maskRender ? b.__maskShader : b.__initGraphicsShader(null);
                    b.setShader(d);
                    b.applyMatrix(b.__getMatrix(g, 1));
                    b.applyBitmapData(Uc.blankBitmapData, !0, l);
                    b.applyAlpha((Q >>> 24 & 255) / 255 * a.__owner.__worldAlpha);
                    b.applyColorTransform(Uc.tempColorTransform);
                    b.updateShader();
                    w = Uc.blankBitmapData.getVertexBuffer(f);
                    null != d.__position && f.setVertexBufferAt(d.__position.index, w, 0, 3);
                    null != d.__textureCoord && f.setVertexBufferAt(d.__textureCoord.index, w, 3, 2);
                    d = Uc.blankBitmapData.getIndexBuffer(f);
                    f.drawTriangles(d);
                    k += 4;
                    b.__clearShader()
                  }
                  break;
                case 12:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos +=
                        1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = ba.DRAW_TRIANGLES;
                  e = c;
                  w = e.buffer.o[e.oPos + 1];
                  z = e.buffer.o[e.oPos + 2];
                  d = e.buffer.o[e.oPos + 3];
                  Q = null != w;
                  e = Math.floor(e.buffer.o[e.oPos].get_length() / 2);
                  w = Q ? w.get_length() : e;
                  Q = (z = null != z && z.get_length() >= 3 * e) ? 4 : 2;
                  e = Q + 2;
                  var O = z ? a.__vertexBufferUVT : a.__vertexBuffer,
                    aa = z ? v : u,
                    B = b.__getMatrix(a.__owner.__renderTransform, 1);
                  if (null == h || Uc.maskRender) {
                    var D =
                      Uc.maskRender ? b.__maskShader : b.__initGraphicsShader(null);
                    b.setShader(D);
                    b.applyMatrix(B);
                    b.applyBitmapData(m, p, l);
                    b.applyAlpha(a.__owner.__worldAlpha);
                    b.applyColorTransform(a.__owner.__worldColorTransform);
                    b.updateShader()
                  } else D = b.__initShaderBuffer(h), b.__setShaderBuffer(h), b.applyMatrix(B), b.applyBitmapData(m, !1, l), b.applyAlpha(1), b.applyColorTransform(null), b.__updateShaderBuffer(k);
                  null != D.__position && f.setVertexBufferAt(D.__position.index, O, aa, z ? 4 : 2);
                  null != D.__textureCoord && f.setVertexBufferAt(D.__textureCoord.index,
                    O, aa + Q, 2);
                  switch (d) {
                    case 0:
                      f.setCulling(0);
                      break;
                    case 1:
                      f.setCulling(3);
                      break;
                    case 2:
                      f.setCulling(1)
                  }
                  f.__drawTriangles(0, w);
                  k += w;
                  z ? v += e * w : u += e * w;
                  switch (d) {
                    case 1:
                    case 2:
                      f.setCulling(0)
                  }
                  b.__clearShader();
                  break;
                case 13:
                  h = n = m = null;
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos +=
                        3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = d;
                  f.setCulling(3);
                  break;
                case 18:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = ba.MOVE_TO;
                  break;
                case 19:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos +=
                        2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos +=
                        2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = ba.OVERRIDE_BLEND_MODE;
                  d = c;
                  b.__setBlendMode(d.buffer.o[d.oPos]);
                  break;
                default:
                  switch (c.prev._hx_index) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos +=
                        2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1
                  }
                  c.prev = d
              }
              Ea.__pool.release(g)
            }
            a.__hardwareDirty = !1;
            a.set___dirty(!1)
          }
      };
      Uc.renderMask = function(a, b) {
        Uc.maskRender = !0;
        Uc.render(a, b);
        Uc.maskRender = !1
      };
      Uc.resizeIndexBuffer = function(a, b, c) {
        if (!b) {
          var d = b ? null : a.__triangleIndexBufferData,
            e = null;
          if (null == d) {
            var f = e = null,
              g = null,
              h = null,
              m = null;
            e = c = null != c ? new Uint16Array(c) : null != e ? new Uint16Array(e) : null != f ? new Uint16Array(f.__array) : null != g ? new Uint16Array(g) : null != h ? null == m ? new Uint16Array(h, 0) : new Uint16Array(h, 0, m) : null
          } else c > d.length && (m = h = g = f = e = null, e = c = null != c ? new Uint16Array(c) : null != e ? new Uint16Array(e) : null != f ? new Uint16Array(f.__array) : null != g ? new Uint16Array(g) : null != h ? null == m ? new Uint16Array(h, 0) : new Uint16Array(h, 0, m) : null, e.set(d));
          null == e || b || (a.__triangleIndexBufferData = e)
        }
      };
      Uc.resizeVertexBuffer = function(a, b, c) {
        var d =
          b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
          e = null;
        if (null == d) {
          var f = e = null,
            g = null,
            h = null,
            m = null;
          e = c = null != c ? new Float32Array(c) : null != e ? new Float32Array(e) : null != f ? new Float32Array(f.__array) : null != g ? new Float32Array(g) : null != h ? null == m ? new Float32Array(h, 0) : new Float32Array(h, 0, m) : null
        } else c > d.length && (m = h = g = f = e = null, e = c = null != c ? new Float32Array(c) : null != e ? new Float32Array(e) : null != f ? new Float32Array(f.__array) : null != g ? new Float32Array(g) : null != h ? null == m ? new Float32Array(h, 0) : new Float32Array(h,
          0, m) : null, e.set(d));
        null != e && (b ? a.__vertexBufferDataUVT = e : a.__vertexBufferData = e)
      };
      var bi = function() {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tdiscard;\n\n\t\t\t} else {\n\n\t\t\t\tgl_FragColor = color;\n\n\t\t\t}\n\n\t\t}");
        null == this.__glVertexSource && (this.__glVertexSource =
          "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        gf.call(this);
        this.__isGenerated = !0;
        this.__initGL()
      };
      k["openfl.display._internal.Context3DMaskShader"] = bi;
      bi.__name__ = "openfl.display._internal.Context3DMaskShader";
      bi.__super__ = gf;
      bi.prototype = t(gf.prototype, {
        openfl_Position: null,
        openfl_TextureCoord: null,
        openfl_Matrix: null,
        openfl_Texture: null,
        __class__: bi
      });
      var $f = function() {};
      k["openfl.display._internal.Context3DShape"] = $f;
      $f.__name__ = "openfl.display._internal.Context3DShape";
      $f.render = function(a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha)) {
          var c = a.__graphics;
          if (null != c) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            Uc.render(c, b);
            if (null != c.__bitmap && c.__visible) {
              var d = b.__context3D,
                e = b.__initDisplayShader(a.__worldShader);
              b.setShader(e);
              b.applyBitmapData(c.__bitmap, !0);
              b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
              b.applyAlpha(a.__worldAlpha);
              b.applyColorTransform(a.__worldColorTransform);
              b.updateShader();
              var f = c.__bitmap.getVertexBuffer(d);
              null != e.__position && d.setVertexBufferAt(e.__position.index, f, 0, 3);
              null != e.__textureCoord && d.setVertexBufferAt(e.__textureCoord.index, f, 3, 2);
              c = c.__bitmap.getIndexBuffer(d);
              d.drawTriangles(c);
              b.__clearShader()
            }
            b.__popMaskObject(a)
          }
        }
      };
      $f.renderMask = function(a, b) {
        var c = a.__graphics;
        if (null !=
          c && (Uc.renderMask(c, b), null != c.__bitmap)) {
          a = b.__context3D;
          var d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(c.__bitmap, !0);
          b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
          b.updateShader();
          var e = c.__bitmap.getVertexBuffer(a);
          null != d.__position && a.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord && a.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
          c = c.__bitmap.getIndexBuffer(a);
          a.drawTriangles(c);
          b.__clearShader()
        }
      };
      var Zm = function() {};
      k["openfl.display._internal.Context3DSimpleButton"] =
        Zm;
      Zm.__name__ = "openfl.display._internal.Context3DSimpleButton";
      Zm.renderDrawable = function(a, b) {
        !a.__renderable || 0 >= a.__worldAlpha || null == a.__currentState || (b.__pushMaskObject(a), b.__renderDrawable(a.__currentState), b.__popMaskObject(a), b.__renderEvent(a))
      };
      Zm.renderDrawableMask = function(a, b) {
        null != a.__currentState && b.__renderDrawableMask(a.__currentState)
      };
      var ch = function() {};
      k["openfl.display._internal.Context3DTextField"] = ch;
      ch.__name__ = "openfl.display._internal.Context3DTextField";
      ch.render = function(a,
        b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          e = d ? b.textBounds : b.bounds,
          f = a.__graphics,
          g = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == f.__bounds && (f.__bounds = new ha);
          if (0 == a.get_text().length) {
            g = b.bounds.width - 4;
            var h = a.get_defaultTextFormat().align;
            g = 3 == h ? 0 : 4 == h ? g : g / 2;
            switch (h) {
              case 0:
                g += a.get_defaultTextFormat().leftMargin / 2;
                g -= a.get_defaultTextFormat().rightMargin / 2;
                g += a.get_defaultTextFormat().indent / 2;
                g += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                g += a.get_defaultTextFormat().leftMargin;
                g += a.get_defaultTextFormat().indent;
                g += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                g += a.get_defaultTextFormat().leftMargin;
                g += a.get_defaultTextFormat().indent;
                g += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                g -= a.get_defaultTextFormat().rightMargin
            }
            d && (e.y = b.bounds.y, e.x = g)
          }
          f.__bounds.copyFrom(e)
        }
        f.__update(c.__worldTransform);
        if (a.__dirty || f.__softwareDirty) {
          var m = f.__width,
            l = f.__height;
          if (!(null != b.text && "" != b.text || b.background || b.border || b.__hasFocus || 1 == b.type && b.selectable) || (0 >=
              b.width || 0 >= b.height) && 2 != b.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap = null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1), a.__dirty = !1;
          else {
            null == a.__graphics.__canvas && (a.__graphics.__canvas = window.document.createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
            X.context = f.__context;
            h = f.__renderTransform;
            if (c.__isDOM) {
              var p = c.pixelRatio;
              f.__canvas.width = m * p | 0;
              f.__canvas.height = l * p | 0;
              f.__canvas.style.width = m +
                "px";
              f.__canvas.style.height = l + "px";
              m = Ea.__pool.get();
              m.copyFrom(h);
              m.scale(p, p);
              c.setTransform(m, X.context);
              Ea.__pool.release(m)
            } else f.__canvas.width = m, f.__canvas.height = l, X.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
            null == X.clearRect && (X.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
            X.clearRect && X.context.clearRect(0, 0, f.__canvas.width, f.__canvas.height);
            if (null != b.text && "" != b.text || b.__hasFocus) {
              d = b.text;
              f.__context.imageSmoothingEnabled = !c.__allowSmoothing ||
                0 == b.antiAliasType && 400 == b.sharpness ? !1 : !0;
              if (b.border || b.background) {
                X.context.rect(.5, .5, e.width - 1, e.height - 1);
                if (b.background) {
                  var n = W.hex(b.backgroundColor & 16777215, 6);
                  X.context.fillStyle = "#" + n;
                  X.context.fill()
                }
                b.border && (X.context.lineWidth = 1, n = W.hex(b.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke())
              }
              X.context.textBaseline = "alphabetic";
              X.context.textAlign = "start";
              c = -a.get_scrollH();
              var q = g = 0;
              for (n = a.get_scrollV() - 1; q < n;) {
                var k = q++;
                g -= b.lineHeights.get(k)
              }
              for (h = b.layoutGroups.iterator(); h.hasNext();)
                if (p =
                  h.next(), !(p.lineIndex < a.get_scrollV() - 1)) {
                  if (p.lineIndex > b.get_bottomScrollV() - 1) break;
                  m = "#" + W.hex(p.format.color & 16777215, 6);
                  X.context.font = Ub.getFont(p.format);
                  X.context.fillStyle = m;
                  X.context.fillText(d.substring(p.startIndex, p.endIndex), p.offsetX + c - e.x, p.offsetY + p.ascent + g - e.y);
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (a.__showCursor && p.startIndex <= a.__caretIndex && p.endIndex >= a.__caretIndex) {
                        q = l = 0;
                        for (n = a.__caretIndex - p.startIndex; q < n;) {
                          k = q++;
                          if (p.positions.length <=
                            k) break;
                          l += p.positions[k]
                        }
                        q = 0;
                        n = a.get_scrollV();
                        for (k = p.lineIndex + 1; n < k;) {
                          var u = n++;
                          q += b.lineHeights.get(u - 1)
                        }
                        X.context.beginPath();
                        n = W.hex(p.format.color & 16777215, 6);
                        X.context.strokeStyle = "#" + n;
                        X.context.moveTo(p.offsetX + l - a.get_scrollH() - e.x, q + 2 - e.y);
                        X.context.lineWidth = 1;
                        X.context.lineTo(p.offsetX + l - a.get_scrollH() - e.x, q + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1 - e.y);
                        X.context.stroke();
                        X.context.closePath()
                      }
                    } else if (p.startIndex <= a.__caretIndex && p.endIndex >= a.__caretIndex || p.startIndex <=
                    a.__selectionIndex && p.endIndex >= a.__selectionIndex || p.startIndex > a.__caretIndex && p.endIndex < a.__selectionIndex || p.startIndex > a.__selectionIndex && p.endIndex < a.__caretIndex) l = Math.min(a.__selectionIndex, a.__caretIndex) | 0, q = Math.max(a.__selectionIndex, a.__caretIndex) | 0, p.startIndex > l && (l = p.startIndex), p.endIndex < q && (q = p.endIndex), k = a.getCharBoundaries(l), q >= p.endIndex ? (n = a.getCharBoundaries(p.endIndex - 1), null != n && (n.x += n.width + 2)) : n = a.getCharBoundaries(q), null != k && null != n && (X.context.fillStyle = "#000000",
                    X.context.fillRect(k.x + c - e.x, k.y + g, n.x - k.x, p.height), X.context.fillStyle = "#FFFFFF", X.context.fillText(d.substring(l, q), c + k.x - e.x, p.offsetY + p.ascent + g));
                  p.format.underline && (X.context.beginPath(), X.context.strokeStyle = m, X.context.lineWidth = 1, m = p.offsetX + c - e.x, l = Math.floor(p.offsetY + g + p.ascent - e.y) + .5, X.context.moveTo(m, l), X.context.lineTo(m + p.width, l), X.context.stroke(), X.context.closePath())
                }
            } else {
              if (b.border || b.background) b.border ? X.context.rect(.5, .5, e.width - 1, e.height - 1) : X.context.rect(0, 0, e.width,
                e.height), b.background && (n = W.hex(b.backgroundColor & 16777215, 6), X.context.fillStyle = "#" + n, X.context.fill()), b.border && (X.context.lineWidth = 1, X.context.lineCap = "square", n = W.hex(b.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke());
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : g);
                q = g = 0;
                for (n = a.get_scrollV() - 1; q < n;) k = q++, g += b.lineHeights.get(k);
                X.context.beginPath();
                n = W.hex(a.get_defaultTextFormat().color & 16777215, 6);
                X.context.strokeStyle = "#" + n;
                X.context.moveTo(c +
                  2.5, g + 2.5);
                X.context.lineWidth = 1;
                X.context.lineTo(c + 2.5, g + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1);
                X.context.stroke();
                X.context.closePath()
              }
            }
            f.__bitmap = wa.fromCanvas(a.__graphics.__canvas);
            f.__visible = !0;
            a.__dirty = !1;
            f.__softwareDirty = !1;
            f.set___dirty(!1)
          }
        }
        a.__graphics.__hardwareDirty = !1
      };
      ch.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (ch.render(a, b), !(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || 0 >= a.__worldAlpha)) {
            if (null !=
              a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = ha.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var e = a.opaqueBackground;
              c.clear((e >>> 16 & 255) / 255, (e >>> 8 & 255) / 255, (e & 255) / 255, 1, 0, 0, 1);
              b.__popMaskRect();
              b.__popMaskObject(a);
              ha.__pool.release(d)
            }
            null != a.__graphics && $f.render(a, b)
          }
        } else wf.render(a.__cacheBitmap, b);
        b.__renderEvent(a)
      };
      ch.renderDrawableMask =
        function(a, b) {
          ch.renderMask(a, b);
          bh.renderDrawableMask(a, b)
        };
      ch.renderMask = function(a, b) {
        var c = b.__softwareRenderer;
        b = a.__textEngine;
        var d = !(b.background || b.border),
          e = d ? b.textBounds : b.bounds,
          f = a.__graphics,
          g = 0;
        if (a.__dirty) {
          a.__updateLayout();
          null == f.__bounds && (f.__bounds = new ha);
          if (0 == a.get_text().length) {
            g = b.bounds.width - 4;
            var h = a.get_defaultTextFormat().align;
            g = 3 == h ? 0 : 4 == h ? g : g / 2;
            switch (h) {
              case 0:
                g += a.get_defaultTextFormat().leftMargin / 2;
                g -= a.get_defaultTextFormat().rightMargin / 2;
                g += a.get_defaultTextFormat().indent /
                  2;
                g += a.get_defaultTextFormat().blockIndent / 2;
                break;
              case 2:
                g += a.get_defaultTextFormat().leftMargin;
                g += a.get_defaultTextFormat().indent;
                g += a.get_defaultTextFormat().blockIndent;
                break;
              case 3:
                g += a.get_defaultTextFormat().leftMargin;
                g += a.get_defaultTextFormat().indent;
                g += a.get_defaultTextFormat().blockIndent;
                break;
              case 4:
                g -= a.get_defaultTextFormat().rightMargin
            }
            d && (e.y = b.bounds.y, e.x = g)
          }
          f.__bounds.copyFrom(e)
        }
        f.__update(c.__worldTransform);
        if (a.__dirty || f.__softwareDirty) {
          var m = f.__width,
            l = f.__height;
          if (!(null != b.text && "" != b.text || b.background || b.border || b.__hasFocus || 1 == b.type && b.selectable) || (0 >= b.width || 0 >= b.height) && 2 != b.autoSize) a.__graphics.__canvas = null, a.__graphics.__context = null, a.__graphics.__bitmap = null, a.__graphics.__softwareDirty = !1, a.__graphics.set___dirty(!1), a.__dirty = !1;
          else {
            null == a.__graphics.__canvas && (a.__graphics.__canvas = window.document.createElement("canvas"), a.__graphics.__context = a.__graphics.__canvas.getContext("2d"));
            X.context = f.__context;
            h = f.__renderTransform;
            if (c.__isDOM) {
              var p =
                c.pixelRatio;
              f.__canvas.width = m * p | 0;
              f.__canvas.height = l * p | 0;
              f.__canvas.style.width = m + "px";
              f.__canvas.style.height = l + "px";
              m = Ea.__pool.get();
              m.copyFrom(h);
              m.scale(p, p);
              c.setTransform(m, X.context);
              Ea.__pool.release(m)
            } else f.__canvas.width = m, f.__canvas.height = l, X.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
            null == X.clearRect && (X.clearRect = "undefined" !== typeof navigator && "undefined" !== typeof navigator.isCocoonJS);
            X.clearRect && X.context.clearRect(0, 0, f.__canvas.width, f.__canvas.height);
            if (null != b.text &&
              "" != b.text || b.__hasFocus) {
              d = b.text;
              f.__context.imageSmoothingEnabled = !c.__allowSmoothing || 0 == b.antiAliasType && 400 == b.sharpness ? !1 : !0;
              if (b.border || b.background) {
                X.context.rect(.5, .5, e.width - 1, e.height - 1);
                if (b.background) {
                  var n = W.hex(b.backgroundColor & 16777215, 6);
                  X.context.fillStyle = "#" + n;
                  X.context.fill()
                }
                b.border && (X.context.lineWidth = 1, n = W.hex(b.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke())
              }
              X.context.textBaseline = "alphabetic";
              X.context.textAlign = "start";
              c = -a.get_scrollH();
              var q = g = 0;
              for (n = a.get_scrollV() - 1; q < n;) {
                var k = q++;
                g -= b.lineHeights.get(k)
              }
              for (h = b.layoutGroups.iterator(); h.hasNext();)
                if (p = h.next(), !(p.lineIndex < a.get_scrollV() - 1)) {
                  if (p.lineIndex > b.get_bottomScrollV() - 1) break;
                  m = "#" + W.hex(p.format.color & 16777215, 6);
                  X.context.font = Ub.getFont(p.format);
                  X.context.fillStyle = m;
                  X.context.fillText(d.substring(p.startIndex, p.endIndex), p.offsetX + c - e.x, p.offsetY + p.ascent + g - e.y);
                  if (-1 < a.__caretIndex && b.selectable)
                    if (a.__selectionIndex == a.__caretIndex) {
                      if (a.__showCursor && p.startIndex <=
                        a.__caretIndex && p.endIndex >= a.__caretIndex) {
                        q = l = 0;
                        for (n = a.__caretIndex - p.startIndex; q < n;) {
                          k = q++;
                          if (p.positions.length <= k) break;
                          l += p.positions[k]
                        }
                        q = 0;
                        n = a.get_scrollV();
                        for (k = p.lineIndex + 1; n < k;) {
                          var u = n++;
                          q += b.lineHeights.get(u - 1)
                        }
                        X.context.beginPath();
                        n = W.hex(p.format.color & 16777215, 6);
                        X.context.strokeStyle = "#" + n;
                        X.context.moveTo(p.offsetX + l - a.get_scrollH() - e.x, q + 2 - e.y);
                        X.context.lineWidth = 1;
                        X.context.lineTo(p.offsetX + l - a.get_scrollH() - e.x, q + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1 - e.y);
                        X.context.stroke();
                        X.context.closePath()
                      }
                    } else if (p.startIndex <= a.__caretIndex && p.endIndex >= a.__caretIndex || p.startIndex <= a.__selectionIndex && p.endIndex >= a.__selectionIndex || p.startIndex > a.__caretIndex && p.endIndex < a.__selectionIndex || p.startIndex > a.__selectionIndex && p.endIndex < a.__caretIndex) l = Math.min(a.__selectionIndex, a.__caretIndex) | 0, q = Math.max(a.__selectionIndex, a.__caretIndex) | 0, p.startIndex > l && (l = p.startIndex), p.endIndex < q && (q = p.endIndex), k = a.getCharBoundaries(l), q >= p.endIndex ? (n = a.getCharBoundaries(p.endIndex -
                    1), null != n && (n.x += n.width + 2)) : n = a.getCharBoundaries(q), null != k && null != n && (X.context.fillStyle = "#000000", X.context.fillRect(k.x + c - e.x, k.y + g, n.x - k.x, p.height), X.context.fillStyle = "#FFFFFF", X.context.fillText(d.substring(l, q), c + k.x - e.x, p.offsetY + p.ascent + g));
                  p.format.underline && (X.context.beginPath(), X.context.strokeStyle = m, X.context.lineWidth = 1, m = p.offsetX + c - e.x, l = Math.floor(p.offsetY + g + p.ascent - e.y) + .5, X.context.moveTo(m, l), X.context.lineTo(m + p.width, l), X.context.stroke(), X.context.closePath())
                }
            } else {
              if (b.border ||
                b.background) b.border ? X.context.rect(.5, .5, e.width - 1, e.height - 1) : X.context.rect(0, 0, e.width, e.height), b.background && (n = W.hex(b.backgroundColor & 16777215, 6), X.context.fillStyle = "#" + n, X.context.fill()), b.border && (X.context.lineWidth = 1, X.context.lineCap = "square", n = W.hex(b.borderColor & 16777215, 6), X.context.strokeStyle = "#" + n, X.context.stroke());
              if (-1 < a.__caretIndex && b.selectable && a.__showCursor) {
                c = -a.get_scrollH() + (d ? 0 : g);
                q = g = 0;
                for (n = a.get_scrollV() - 1; q < n;) k = q++, g += b.lineHeights.get(k);
                X.context.beginPath();
                n = W.hex(a.get_defaultTextFormat().color & 16777215, 6);
                X.context.strokeStyle = "#" + n;
                X.context.moveTo(c + 2.5, g + 2.5);
                X.context.lineWidth = 1;
                X.context.lineTo(c + 2.5, g + Ub.getFormatHeight(a.get_defaultTextFormat()) - 1);
                X.context.stroke();
                X.context.closePath()
              }
            }
            f.__bitmap = wa.fromCanvas(a.__graphics.__canvas);
            f.__visible = !0;
            a.__dirty = !1;
            f.__softwareDirty = !1;
            f.set___dirty(!1)
          }
        }
        a.__graphics.__hardwareDirty = !1
      };
      var fa = function() {};
      k["openfl.display._internal.Context3DTilemap"] = fa;
      fa.__name__ = "openfl.display._internal.Context3DTilemap";
      fa.buildBuffer = function(a, b) {
        if (!a.__renderable || 0 == a.__group.__tiles.length || 0 >= a.__worldAlpha) a.__group.__dirty = !1;
        else {
          fa.numTiles = 0;
          fa.vertexBufferData = null != a.__buffer ? a.__buffer.vertexBufferData : null;
          fa.vertexDataPosition = 0;
          var c = ha.__pool.get(),
            d = Ea.__pool.get(),
            e = Ea.__pool.get();
          fa.dataPerVertex = 4;
          a.tileAlphaEnabled && fa.dataPerVertex++;
          a.tileColorTransformEnabled && (fa.dataPerVertex += 8);
          fa.buildBufferTileContainer(a, a.__group, b, e, a.__tileset, a.tileAlphaEnabled, a.__worldAlpha, a.tileColorTransformEnabled,
            a.__worldColorTransform, null, c, d);
          a.__buffer.flushVertexBufferData();
          ha.__pool.release(c);
          Ea.__pool.release(d);
          Ea.__pool.release(e)
        }
      };
      fa.buildBufferTileContainer = function(a, b, c, d, e, f, g, h, m, l, p, n, q) {
        null == q && (q = !0);
        var k = Ea.__pool.get(),
          u = c.__roundPixels,
          v = b.__tiles,
          r = null;
        r = function(a) {
          a = a.__tiles;
          for (var b = 0, c = 0; c < a.length;) {
            var d = a[c];
            ++c;
            0 < d.__length ? b += r(d) : ++b
          }
          return b
        };
        q && fa.resizeBuffer(a, fa.numTiles + r(b));
        q = null;
        for (var t, w, y, z, Q, O, A, aa, B, D, F = f ? 5 : 4, C = 0; C < v.length;) {
          var x = v[C];
          ++C;
          k.setTo(1,
            0, 0, 1, -x.get_originX(), -x.get_originY());
          k.concat(x.get_matrix());
          k.concat(d);
          u && (k.tx = Math.round(k.tx), k.ty = Math.round(k.ty));
          var G = null != x.get_tileset() ? x.get_tileset() : e;
          var H = x.get_alpha() * g;
          var E = x.get_visible();
          x.__dirty = !1;
          if (E && !(0 >= H))
            if (h && (null != x.get_colorTransform() ? null == m ? q = x.get_colorTransform() : (null == fa.cacheColorTransform && (fa.cacheColorTransform = new Ec), q = fa.cacheColorTransform, q.redMultiplier = m.redMultiplier * x.get_colorTransform().redMultiplier, q.greenMultiplier = m.greenMultiplier *
                x.get_colorTransform().greenMultiplier, q.blueMultiplier = m.blueMultiplier * x.get_colorTransform().blueMultiplier, q.alphaMultiplier = m.alphaMultiplier * x.get_colorTransform().alphaMultiplier, q.redOffset = m.redOffset + x.get_colorTransform().redOffset, q.greenOffset = m.greenOffset + x.get_colorTransform().greenOffset, q.blueOffset = m.blueOffset + x.get_colorTransform().blueOffset, q.alphaOffset = m.alphaOffset + x.get_colorTransform().alphaOffset) : q = m), f || (H = 1), 0 < x.__length) fa.buildBufferTileContainer(a, x, c, k, G, f, H, h,
              q, l, p, n, !1);
            else if (null != G && (E = x.get_id(), t = G.__bitmapData, null != t)) {
            if (-1 == E) {
              w = x.__rect;
              if (null == w || 0 >= w.width || 0 >= w.height) continue;
              x = w.x / t.width;
              G = w.y / t.height;
              E = w.get_right() / t.width;
              z = w.get_bottom() / t.height
            } else {
              t = G.__data[E];
              if (null == t) continue;
              p.setTo(t.x, t.y, t.width, t.height);
              w = p;
              x = t.__uvX;
              G = t.__uvY;
              E = t.__uvWidth;
              z = t.__uvHeight
            }
            t = w.width;
            y = w.height;
            w = 0 * k.a + 0 * k.c + k.tx;
            Q = 0 * k.b + 0 * k.d + k.ty;
            O = t * k.a + 0 * k.c + k.tx;
            A = t * k.b + 0 * k.d + k.ty;
            aa = 0 * k.a + y * k.c + k.tx;
            B = 0 * k.b + y * k.d + k.ty;
            D = t * k.a + y * k.c + k.tx;
            y = t * k.b +
              y * k.d + k.ty;
            t = fa.vertexDataPosition;
            fa.vertexBufferData[t] = w;
            fa.vertexBufferData[t + 1] = Q;
            fa.vertexBufferData[t + 2] = x;
            fa.vertexBufferData[t + 3] = G;
            fa.vertexBufferData[t + fa.dataPerVertex] = O;
            fa.vertexBufferData[t + fa.dataPerVertex + 1] = A;
            fa.vertexBufferData[t + fa.dataPerVertex + 2] = E;
            fa.vertexBufferData[t + fa.dataPerVertex + 3] = G;
            fa.vertexBufferData[t + 2 * fa.dataPerVertex] = aa;
            fa.vertexBufferData[t + 2 * fa.dataPerVertex + 1] = B;
            fa.vertexBufferData[t + 2 * fa.dataPerVertex + 2] = x;
            fa.vertexBufferData[t + 2 * fa.dataPerVertex + 3] = z;
            fa.vertexBufferData[t +
              3 * fa.dataPerVertex] = D;
            fa.vertexBufferData[t + 3 * fa.dataPerVertex + 1] = y;
            fa.vertexBufferData[t + 3 * fa.dataPerVertex + 2] = E;
            fa.vertexBufferData[t + 3 * fa.dataPerVertex + 3] = z;
            f && (fa.vertexBufferData[t + 0 * fa.dataPerVertex + 4] = H, fa.vertexBufferData[t + fa.dataPerVertex + 4] = H, fa.vertexBufferData[t + 2 * fa.dataPerVertex + 4] = H, fa.vertexBufferData[t + 3 * fa.dataPerVertex + 4] = H);
            if (h)
              if (null != q)
                for (H = 0; 4 > H;) x = H++, fa.vertexBufferData[t + fa.dataPerVertex * x + F] = q.redMultiplier, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 1] = q.greenMultiplier,
                  fa.vertexBufferData[t + fa.dataPerVertex * x + F + 2] = q.blueMultiplier, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 3] = q.alphaMultiplier, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 4] = q.redOffset, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 5] = q.greenOffset, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 6] = q.blueOffset, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 7] = q.alphaOffset;
              else
                for (H = 0; 4 > H;) x = H++, fa.vertexBufferData[t + fa.dataPerVertex * x + F] = 1, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 1] = 1, fa.vertexBufferData[t +
                  fa.dataPerVertex * x + F + 2] = 1, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 3] = 1, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 4] = 0, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 5] = 0, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 6] = 0, fa.vertexBufferData[t + fa.dataPerVertex * x + F + 7] = 0;
            fa.vertexDataPosition += 4 * fa.dataPerVertex
          }
        }
        b.__dirty = !1;
        Ea.__pool.release(k)
      };
      fa.flush = function(a, b, c) {
        null == fa.currentShader && (fa.currentShader = b.__defaultDisplayShader);
        if (fa.bufferPosition > fa.lastFlushedPosition && null != fa.currentBitmapData &&
          null != fa.currentShader) {
          var d = b.__initDisplayShader(fa.currentShader);
          b.setShader(d);
          b.applyBitmapData(fa.currentBitmapData, a.smoothing);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          a.tileAlphaEnabled ? b.useAlphaArray() : b.applyAlpha(a.__worldAlpha);
          a.tileBlendModeEnabled && b.__setBlendMode(c);
          a.tileColorTransformEnabled ? (b.applyHasColorTransform(!0), b.useColorTransformArray()) : b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          c = a.__buffer.vertexBuffer;
          for (var e = fa.lastFlushedPosition *
              fa.dataPerVertex * 4, f; fa.lastFlushedPosition < fa.bufferPosition;) {
            f = Math.min(fa.bufferPosition - fa.lastFlushedPosition, fa.context.__quadIndexBufferElements) | 0;
            if (0 >= f) break;
            null != d.__position && fa.context.setVertexBufferAt(d.__position.index, c, e, 2);
            null != d.__textureCoord && fa.context.setVertexBufferAt(d.__textureCoord.index, c, e + 2, 2);
            a.tileAlphaEnabled && null != d.__alpha && fa.context.setVertexBufferAt(d.__alpha.index, c, e + 4, 1);
            if (a.tileColorTransformEnabled) {
              var g = a.tileAlphaEnabled ? 5 : 4;
              null != d.__colorMultiplier &&
                fa.context.setVertexBufferAt(d.__colorMultiplier.index, c, e + g, 4);
              null != d.__colorOffset && fa.context.setVertexBufferAt(d.__colorOffset.index, c, e + g + 4, 4)
            }
            fa.context.drawTriangles(fa.context.__quadIndexBuffer, 0, 2 * f);
            fa.lastFlushedPosition += f
          }
          b.__clearShader()
        }
        fa.lastUsedBitmapData = fa.currentBitmapData;
        fa.lastUsedShader = fa.currentShader
      };
      fa.render = function(a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha) && (fa.context = b.__context3D, fa.buildBuffer(a, b), 0 != fa.numTiles)) {
          fa.bufferPosition = 0;
          fa.lastFlushedPosition =
            0;
          fa.lastUsedBitmapData = null;
          fa.lastUsedShader = null;
          fa.currentBitmapData = null;
          fa.currentShader = null;
          fa.currentBlendMode = a.__worldBlendMode;
          a.tileBlendModeEnabled || b.__setBlendMode(fa.currentBlendMode);
          b.__pushMaskObject(a);
          var c = ha.__pool.get();
          c.setTo(0, 0, a.__width, a.__height);
          b.__pushMaskRect(c, a.__renderTransform);
          fa.renderTileContainer(a, b, a.__group, a.__worldShader, a.__tileset, a.__worldAlpha, a.tileBlendModeEnabled, fa.currentBlendMode, null);
          fa.flush(a, b, fa.currentBlendMode);
          b.__popMaskRect();
          b.__popMaskObject(a);
          ha.__pool.release(c)
        }
      };
      fa.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          if (!(null == a.opaqueBackground && null == a.__graphics || !a.__renderable || 0 >= a.__worldAlpha)) {
            if (null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && 0 < a.get_height()) {
              b.__setBlendMode(a.__worldBlendMode);
              b.__pushMaskObject(a);
              var c = b.__context3D,
                d = ha.__pool.get();
              d.setTo(0, 0, a.get_width(), a.get_height());
              b.__pushMaskRect(d, a.__renderTransform);
              var e = a.opaqueBackground;
              c.clear((e >>> 16 & 255) / 255, (e >>> 8 & 255) / 255, (e & 255) / 255, 1, 0, 0, 1);
              b.__popMaskRect();
              b.__popMaskObject(a);
              ha.__pool.release(d)
            }
            null != a.__graphics && $f.render(a, b)
          }
          fa.render(a, b)
        } else wf.render(a.__cacheBitmap, b);
        b.__renderEvent(a)
      };
      fa.renderDrawableMask = function(a, b) {
        if (null != a.opaqueBackground || null != a.__graphics) null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height(), null != a.__graphics && $f.renderMask(a, b);
        fa.renderMask(a, b)
      };
      fa.renderTileContainer = function(a, b, c, d, e, f, g, h,
        m) {
        c = c.__tiles;
        for (var l, p, n, q, k = null, u, v = 0; v < c.length;)
          if (l = c[v], ++v, p = null != l.get_tileset() ? l.get_tileset() : e, n = l.get_alpha() * f, (q = l.get_visible()) && !(0 >= n))
            if (q = null != l.get_shader() ? l.get_shader() : d, g && (k = null != l.__blendMode ? l.__blendMode : h), 0 < l.__length) fa.renderTileContainer(a, b, l, q, p, n, g, k, m);
            else if (null != p && (u = l.get_id(), n = p.__bitmapData, null != n)) {
          if (-1 == u) {
            if (l = l.__rect, null == l || 0 >= l.width || 0 >= l.height) continue
          } else if (l = p.__data[u], null == l) continue;
          (q != fa.currentShader || n != fa.currentBitmapData &&
            null != fa.currentBitmapData || fa.currentBlendMode != k) && fa.flush(a, b, fa.currentBlendMode);
          fa.currentBitmapData = n;
          fa.currentShader = q;
          fa.currentBlendMode = k;
          fa.bufferPosition++
        }
      };
      fa.renderMask = function(a, b) {};
      fa.resizeBuffer = function(a, b) {
        fa.numTiles = b;
        null == a.__buffer ? a.__buffer = new Fh(fa.context, gn.QUADS, fa.numTiles, fa.dataPerVertex) : a.__buffer.resize(fa.numTiles, fa.dataPerVertex);
        fa.vertexBufferData = a.__buffer.vertexBufferData
      };
      var xf = function() {};
      k["openfl.display._internal.Context3DVideo"] = xf;
      xf.__name__ =
        "openfl.display._internal.Context3DVideo";
      xf.render = function(a, b) {
        if (a.__renderable && !(0 >= a.__worldAlpha) && null != a.__stream && null != a.__stream.__video) {
          var c = b.__context3D,
            d = c.gl;
          if (null != a.__getTexture(c)) {
            b.__setBlendMode(a.__worldBlendMode);
            b.__pushMaskObject(a);
            var e = b.__initDisplayShader(a.__worldShader);
            b.setShader(e);
            b.applyBitmapData(null, !0, !1);
            b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
            b.applyAlpha(a.__worldAlpha);
            b.applyColorTransform(a.__worldColorTransform);
            null != e.__textureSize &&
              (xf.__textureSizeValue[0] = null != a.__stream ? a.__stream.__video.videoWidth : 0, xf.__textureSizeValue[1] = null != a.__stream ? a.__stream.__video.videoHeight : 0, e.__textureSize.value = xf.__textureSizeValue);
            b.updateShader();
            c.setTextureAt(0, a.__getTexture(c));
            c.__flushGLTextures();
            d.uniform1i(e.__texture.index, 0);
            a.smoothing ? (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.LINEAR), d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MIN_FILTER, d.LINEAR)) : (d.texParameteri(d.TEXTURE_2D, d.TEXTURE_MAG_FILTER, d.NEAREST), d.texParameteri(d.TEXTURE_2D,
              d.TEXTURE_MIN_FILTER, d.NEAREST));
            d = a.__getVertexBuffer(c);
            null != e.__position && c.setVertexBufferAt(e.__position.index, d, 0, 3);
            null != e.__textureCoord && c.setVertexBufferAt(e.__textureCoord.index, d, 3, 2);
            e = a.__getIndexBuffer(c);
            c.drawTriangles(e);
            b.__clearShader();
            b.__popMaskObject(a)
          }
        }
      };
      xf.renderDrawable = function(a, b) {
        xf.render(a, b);
        b.__renderEvent(a)
      };
      xf.renderDrawableMask = function(a, b) {
        xf.renderMask(a, b)
      };
      xf.renderMask = function(a, b) {
        if (null != a.__stream && null != a.__stream.__video) {
          var c = b.__context3D,
            d = b.__maskShader;
          b.setShader(d);
          b.applyBitmapData(bi.opaqueBitmapData, !0);
          b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
          b.updateShader();
          var e = a.__getVertexBuffer(c);
          null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
          null != d.__textureCoord && c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
          a = a.__getIndexBuffer(c);
          c.drawTriangles(a);
          b.__clearShader()
        }
      };
      var Vc = function() {};
      k["openfl.display._internal.DOMBitmap"] = Vc;
      Vc.__name__ = "openfl.display._internal.DOMBitmap";
      Vc.clear = function(a,
        b) {
        null != a.__cacheBitmap && Vc.clear(a.__cacheBitmap, b);
        null != a.__image && (b.element.removeChild(a.__image), a.__image = null, a.__style = null);
        null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null, a.__style = null)
      };
      Vc.render = function(a, b) {
        null != a.stage && a.__worldVisible && a.__renderable && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable ? (b.__pushMaskObject(a), null != a.__bitmapData.image.buffer.__srcImage ? Vc.renderImage(a, b) : Vc.renderCanvas(a, b), b.__popMaskObject(a)) : Vc.clear(a,
          b)
      };
      Vc.renderCanvas = function(a, b) {
        null != a.__image && (b.element.removeChild(a.__image), a.__image = null);
        null == a.__canvas && (a.__canvas = window.document.createElement("canvas"), a.__context = a.__canvas.getContext("2d"), a.__imageVersion = -1, b.__allowSmoothing && a.smoothing || (a.__context.imageSmoothingEnabled = !1), b.__initializeElement(a, a.__canvas));
        a.__imageVersion != a.__bitmapData.image.version && (va.convertToCanvas(a.__bitmapData.image), a.__canvas.width = a.__bitmapData.width + 1, a.__canvas.width = a.__bitmapData.width,
          a.__canvas.height = a.__bitmapData.height, a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0), a.__imageVersion = a.__bitmapData.image.version);
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0)
      };
      Vc.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height();
          var c = a.__graphics;
          if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
            A.render(c, b.__canvasRenderer);
            if (c.__softwareDirty || a.__worldAlphaChanged || a.__canvas != c.__canvas) null != c.__canvas ? a.__canvas != c.__canvas && (null != a.__canvas && b.element.removeChild(a.__canvas), a.__canvas = c.__canvas, a.__context = c.__context, b.__initializeElement(a, a.__canvas)) : qf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty && (c.__transformDirty = !1, a.__renderTransformChanged = !0);
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform =
                d;
              b.__popMaskObject(a)
            }
          } else qf.clear(a, b);
          null != a.stage && a.__worldVisible && a.__renderable && null != a.__bitmapData && a.__bitmapData.__isValid && a.__bitmapData.readable ? (b.__pushMaskObject(a), null != a.__bitmapData.image.buffer.__srcImage ? Vc.renderImage(a, b) : Vc.renderCanvas(a, b), b.__popMaskObject(a)) : Vc.clear(a, b)
        } else b.__renderDrawableClear(a), a.__cacheBitmap.stage = a.stage, c = a.__cacheBitmap, null != c.stage && c.__worldVisible && c.__renderable && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable ?
          (b.__pushMaskObject(c), null != c.__bitmapData.image.buffer.__srcImage ? Vc.renderImage(c, b) : Vc.renderCanvas(c, b), b.__popMaskObject(c)) : Vc.clear(c, b);
        b.__renderEvent(a)
      };
      Vc.renderDrawableClear = function(a, b) {
        Vc.clear(a, b)
      };
      Vc.renderImage = function(a, b) {
        null != a.__canvas && (b.element.removeChild(a.__canvas), a.__canvas = null);
        null == a.__image && (a.__image = window.document.createElement("img"), a.__image.crossOrigin = "Anonymous", a.__image.src = a.__bitmapData.image.buffer.__srcImage.src, b.__initializeElement(a, a.__image));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0)
      };
      var Wf = function() {};
      k["openfl.display._internal.DOMDisplayObject"] = Wf;
      Wf.__name__ = "openfl.display._internal.DOMDisplayObject";
      Wf.clear = function(a, b) {
        null != a.__cacheBitmap && Vc.clear(a.__cacheBitmap, b);
        qf.clear(a, b)
      };
      Wf.render = function(a, b) {
        null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height();
        var c = a.__graphics;
        if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
          A.render(c, b.__canvasRenderer);
          if (c.__softwareDirty ||
            a.__worldAlphaChanged || a.__canvas != c.__canvas) null != c.__canvas ? a.__canvas != c.__canvas && (null != a.__canvas && b.element.removeChild(a.__canvas), a.__canvas = c.__canvas, a.__context = c.__context, b.__initializeElement(a, a.__canvas)) : qf.clear(a, b);
          if (null != a.__canvas) {
            b.__pushMaskObject(a);
            var d = a.__renderTransform;
            a.__renderTransform = c.__worldTransform;
            c.__transformDirty && (c.__transformDirty = !1, a.__renderTransformChanged = !0);
            b.__updateClip(a);
            b.__applyStyle(a, !0, !0, !0);
            a.__renderTransform = d;
            b.__popMaskObject(a)
          }
        } else qf.clear(a,
          b)
      };
      Wf.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height();
          var c = a.__graphics;
          if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
            A.render(c, b.__canvasRenderer);
            if (c.__softwareDirty || a.__worldAlphaChanged || a.__canvas != c.__canvas) null != c.__canvas ? a.__canvas != c.__canvas && (null != a.__canvas && b.element.removeChild(a.__canvas), a.__canvas = c.__canvas, a.__context =
              c.__context, b.__initializeElement(a, a.__canvas)) : qf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty && (c.__transformDirty = !1, a.__renderTransformChanged = !0);
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a)
            }
          } else qf.clear(a, b)
        } else b.__renderDrawableClear(a), a.__cacheBitmap.stage = a.stage, c = a.__cacheBitmap, null != c.stage && c.__worldVisible && c.__renderable && null != c.__bitmapData &&
          c.__bitmapData.__isValid && c.__bitmapData.readable ? (b.__pushMaskObject(c), null != c.__bitmapData.image.buffer.__srcImage ? Vc.renderImage(c, b) : Vc.renderCanvas(c, b), b.__popMaskObject(c)) : Vc.clear(c, b);
        b.__renderEvent(a)
      };
      Wf.renderDrawableClear = function(a, b) {
        Wf.clear(a, b)
      };
      var Lm = function() {};
      k["openfl.display._internal.DOMDisplayObjectContainer"] = Lm;
      Lm.__name__ = "openfl.display._internal.DOMDisplayObjectContainer";
      Lm.renderDrawable = function(a, b) {
        for (var c = a.__removedChildren.iterator(); c.hasNext();) {
          var d =
            c.next();
          null == d.stage && b.__renderDrawable(d)
        }
        for (c = a.__removedChildren.iterator(); c.hasNext();) d = c.next(), null == d.stage && d.__cleanup();
        a.__removedChildren.set_length(0);
        Wf.renderDrawable(a, b);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          b.__pushMaskObject(a);
          if (null != b.__stage) {
            c = 0;
            for (d = a.__children; c < d.length;) {
              var e = d[c];
              ++c;
              b.__renderDrawable(e);
              e.__renderDirty = !1
            }
            a.__renderDirty = !1
          } else
            for (c = 0, d = a.__children; c < d.length;) e = d[c], ++c, b.__renderDrawable(e);
          b.__popMaskObject(a)
        }
      };
      Lm.renderDrawableClear =
        function(a, b) {
          for (var c = a.__removedChildren.iterator(); c.hasNext();) {
            var d = c.next();
            null == d.stage && b.__renderDrawableClear(d)
          }
          for (c = a.__removedChildren.iterator(); c.hasNext();) d = c.next(), null == d.stage && d.__cleanup();
          a.__removedChildren.set_length(0);
          c = 0;
          for (a = a.__children; c < a.length;) d = a[c], ++c, b.__renderDrawableClear(d)
        };
      var qf = function() {};
      k["openfl.display._internal.DOMShape"] = qf;
      qf.__name__ = "openfl.display._internal.DOMShape";
      qf.clear = function(a, b) {
        null != a.__canvas && (b.element.removeChild(a.__canvas),
          a.__canvas = null, a.__style = null)
      };
      qf.render = function(a, b) {
        var c = a.__graphics;
        if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
          A.render(c, b.__canvasRenderer);
          if (c.__softwareDirty || a.__worldAlphaChanged || a.__canvas != c.__canvas) null != c.__canvas ? a.__canvas != c.__canvas && (null != a.__canvas && b.element.removeChild(a.__canvas), a.__canvas = c.__canvas, a.__context = c.__context, b.__initializeElement(a, a.__canvas)) : qf.clear(a, b);
          if (null != a.__canvas) {
            b.__pushMaskObject(a);
            var d = a.__renderTransform;
            a.__renderTransform =
              c.__worldTransform;
            c.__transformDirty && (c.__transformDirty = !1, a.__renderTransformChanged = !0);
            b.__updateClip(a);
            b.__applyStyle(a, !0, !0, !0);
            a.__renderTransform = d;
            b.__popMaskObject(a)
          }
        } else qf.clear(a, b)
      };
      var Mm = function() {};
      k["openfl.display._internal.DOMSimpleButton"] = Mm;
      Mm.__name__ = "openfl.display._internal.DOMSimpleButton";
      Mm.renderDrawable = function(a, b) {
        b.__pushMaskObject(a);
        for (var c = a.__previousStates.iterator(); c.hasNext();) {
          var d = c.next();
          b.__renderDrawable(d)
        }
        a.__previousStates.set_length(0);
        null != a.__currentState && (a.__currentState.stage != a.stage && a.__currentState.__setStageReference(a.stage), b.__renderDrawable(a.__currentState));
        b.__popMaskObject(a);
        b.__renderEvent(a)
      };
      Mm.renderDrawableClear = function(a, b) {
        Wf.renderDrawableClear(a, b)
      };
      var dc = function() {};
      k["openfl.display._internal.DOMTextField"] = dc;
      dc.__name__ = "openfl.display._internal.DOMTextField";
      dc.clear = function(a, b) {
        null != a.__cacheBitmap && Vc.clear(a.__cacheBitmap, b);
        null != a.__div && (b.element.removeChild(a.__div), a.__div = null,
          a.__style = null)
      };
      dc.measureText = function(a) {
        var b = a.__textEngine,
          c = a.__div;
        null == c && (c = window.document.createElement("div"), c.innerHTML = b.text.replace(/\n/g, "<br>"), c.style.setProperty("font", Ub.getFont(a.__textFormat), null), c.style.setProperty("pointer-events", "none", null), c.style.position = "absolute", c.style.top = "110%", window.document.body.appendChild(c));
        b.__measuredWidth = c.clientWidth;
        null == a.__div && (c.style.width = M.string(b.width - 4) + "px");
        b.__measuredHeight = c.clientHeight;
        null == a.__div && window.document.body.removeChild(c)
      };
      dc.render = function(a, b) {
        var c = a.__textEngine;
        if (null != a.stage && a.__worldVisible && a.__renderable) {
          if (a.__dirty || a.__renderTransformChanged || null == a.__div)
            if ("" != c.text || c.background || c.border || 1 == c.type) {
              null == a.__div && (a.__div = window.document.createElement("div"), b.__initializeElement(a, a.__div), a.__style.setProperty("outline", "none", null), a.__div.addEventListener("input", function(b) {
                b.preventDefault();
                a.get_htmlText() != a.__div.innerHTML && (a.set_htmlText(a.__div.innerHTML), a.__dirty = !1, a.dispatchEvent(new hf("textInput",
                  !1, !1, a.get_htmlText())))
              }, !0));
              c.wordWrap ? a.__style.setProperty("word-wrap", "break-word", null) : a.__style.setProperty("white-space", "nowrap", null);
              a.__style.setProperty("overflow", "hidden", null);
              c.selectable ? (a.__style.setProperty("cursor", "text", null), a.__style.setProperty("-webkit-user-select", "text", null), a.__style.setProperty("-moz-user-select", "text", null), a.__style.setProperty("-ms-user-select", "text", null), a.__style.setProperty("-o-user-select", "text", null)) : a.__style.setProperty("cursor",
                "inherit", null);
              a.__div.contentEditable = 1 == c.type;
              var d = a.__style;
              c.background ? d.setProperty("background-color", "#" + W.hex(c.backgroundColor & 16777215, 6), null) : d.removeProperty("background-color");
              var e = c.width,
                f = c.height,
                g = 1,
                h = a.__textFormat.size,
                m = h,
                l = a.__renderTransform;
              if (1 != l.a || 1 != l.d) l.a == l.d ? (g = l.a, l.a = l.d = 1) : l.a > l.d ? (g = l.a, l.d /= l.a, l.a = 1) : (g = l.d, l.a /= l.d, l.d = 1), m *= g, e = Math.ceil(e * g), f = Math.ceil(f * g);
              a.__textFormat.size = m;
              l = c.text;
              var p = 0;
              if (a.__isHTML) {
                for (var n = l; dc.__regexFont.match(n);) {
                  n =
                    dc.__regexFont.matched(0);
                  var q = "";
                  dc.__regexFace.match(n) && (q += "font-family:'" + dc.__getAttributeMatch(dc.__regexFace) + "';");
                  dc.__regexColor.match(n) && (q += "color:#" + dc.__getAttributeMatch(dc.__regexColor) + ";");
                  if (dc.__regexSize.match(n)) {
                    p = dc.__getAttributeMatch(dc.__regexSize);
                    var k = da.cca(p, 0);
                    p = parseFloat(p) * g;
                    q += "font-size:" + (43 == k || 45 == k ? m + p : p) + "px;"
                  }
                  l = W.replace(l, n, "<span style='" + q + "'>");
                  n = dc.__regexFont.matchedRight()
                }
                l = l.replace(dc.__regexCloseFont.r, "</span>")
              } else l = W.htmlEscape(l);
              l = W.replace(l,
                "<p ", "<p style='margin-top:0; margin-bottom:0;' ");
              g = a.__textFormat.leading;
              a.__textFormat.leading += p | 0;
              m = /\r\n/g;
              l = l.replace(m, "<br>");
              a.__div.innerHTML = l;
              m = /\n/g;
              l = a.__div.innerHTML.replace(m, "<br>");
              a.__div.innerHTML = l;
              m = /\r/g;
              l = a.__div.innerHTML.replace(m, "<br>");
              a.__div.innerHTML = l;
              d.setProperty("font", Ub.getFont(a.__textFormat), null);
              a.__textFormat.size = h;
              a.__textFormat.leading = g;
              d.setProperty("top", "3px", null);
              c.border ? (d.setProperty("border", "solid 1px #" + W.hex(c.borderColor & 16777215, 6),
                null), a.__renderTransform.translate(-1, -1), a.__renderTransformChanged = !0, a.__transformDirty = !0) : "" != d.border && (d.removeProperty("border"), a.__renderTransformChanged = !0);
              d.setProperty("color", "#" + W.hex(a.__textFormat.color & 16777215, 6), null);
              d.setProperty("width", e + "px", null);
              d.setProperty("height", f + "px", null);
              switch (a.__textFormat.align) {
                case 0:
                  d.setProperty("text-align", "center", null);
                  break;
                case 4:
                  d.setProperty("text-align", "right", null);
                  break;
                default:
                  d.setProperty("text-align", "left", null)
              }
              a.__dirty = !1
            } else null != a.__div && (b.element.removeChild(a.__div), a.__div = null);
          null != a.__div && (c = b.__roundPixels, b.__roundPixels = !0, b.__updateClip(a), b.__applyStyle(a, !0, !0, !0), b.__roundPixels = c)
        } else dc.clear(a, b)
      };
      dc.renderDrawable = function(a, b) {
        a.__domRender = !0;
        b.__updateCacheBitmap(a, a.__forceCachedBitmapUpdate);
        a.__forceCachedBitmapUpdate = !1;
        a.__domRender = !1;
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          a.__renderedOnCanvasWhileOnDOM && (a.__renderedOnCanvasWhileOnDOM = !1, a.__isHTML && null != a.__rawHtmlText &&
            (a.__updateText(a.__rawHtmlText), a.__dirty = !0, a.__layoutDirty = !0, a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty())));
          var c = a.__textEngine;
          if (null != a.stage && a.__worldVisible && a.__renderable) {
            if (a.__dirty || a.__renderTransformChanged || null == a.__div)
              if ("" != c.text || c.background || c.border || 1 == c.type) {
                null == a.__div && (a.__div = window.document.createElement("div"), b.__initializeElement(a, a.__div), a.__style.setProperty("outline", "none", null), a.__div.addEventListener("input", function(b) {
                  b.preventDefault();
                  a.get_htmlText() != a.__div.innerHTML && (a.set_htmlText(a.__div.innerHTML), a.__dirty = !1, a.dispatchEvent(new hf("textInput", !1, !1, a.get_htmlText())))
                }, !0));
                c.wordWrap ? a.__style.setProperty("word-wrap", "break-word", null) : a.__style.setProperty("white-space", "nowrap", null);
                a.__style.setProperty("overflow", "hidden", null);
                c.selectable ? (a.__style.setProperty("cursor", "text", null), a.__style.setProperty("-webkit-user-select", "text", null), a.__style.setProperty("-moz-user-select", "text", null), a.__style.setProperty("-ms-user-select",
                  "text", null), a.__style.setProperty("-o-user-select", "text", null)) : a.__style.setProperty("cursor", "inherit", null);
                a.__div.contentEditable = 1 == c.type;
                var d = a.__style;
                c.background ? d.setProperty("background-color", "#" + W.hex(c.backgroundColor & 16777215, 6), null) : d.removeProperty("background-color");
                var e = c.width,
                  f = c.height,
                  g = 1,
                  h = a.__textFormat.size,
                  m = h,
                  l = a.__renderTransform;
                if (1 != l.a || 1 != l.d) l.a == l.d ? (g = l.a, l.a = l.d = 1) : l.a > l.d ? (g = l.a, l.d /= l.a, l.a = 1) : (g = l.d, l.a /= l.d, l.d = 1), m *= g, e = Math.ceil(e * g), f = Math.ceil(f *
                  g);
                a.__textFormat.size = m;
                l = c.text;
                var p = 0;
                if (a.__isHTML) {
                  for (var n = l; dc.__regexFont.match(n);) {
                    n = dc.__regexFont.matched(0);
                    var q = "";
                    dc.__regexFace.match(n) && (q += "font-family:'" + dc.__getAttributeMatch(dc.__regexFace) + "';");
                    dc.__regexColor.match(n) && (q += "color:#" + dc.__getAttributeMatch(dc.__regexColor) + ";");
                    if (dc.__regexSize.match(n)) {
                      p = dc.__getAttributeMatch(dc.__regexSize);
                      var k = da.cca(p, 0);
                      p = parseFloat(p) * g;
                      q += "font-size:" + (43 == k || 45 == k ? m + p : p) + "px;"
                    }
                    l = W.replace(l, n, "<span style='" + q + "'>");
                    n = dc.__regexFont.matchedRight()
                  }
                  l =
                    l.replace(dc.__regexCloseFont.r, "</span>")
                } else l = W.htmlEscape(l);
                l = W.replace(l, "<p ", "<p style='margin-top:0; margin-bottom:0;' ");
                g = a.__textFormat.leading;
                a.__textFormat.leading += p | 0;
                m = /\r\n/g;
                l = l.replace(m, "<br>");
                a.__div.innerHTML = l;
                m = /\n/g;
                l = a.__div.innerHTML.replace(m, "<br>");
                a.__div.innerHTML = l;
                m = /\r/g;
                l = a.__div.innerHTML.replace(m, "<br>");
                a.__div.innerHTML = l;
                d.setProperty("font", Ub.getFont(a.__textFormat), null);
                a.__textFormat.size = h;
                a.__textFormat.leading = g;
                d.setProperty("top", "3px", null);
                c.border ? (d.setProperty("border", "solid 1px #" + W.hex(c.borderColor & 16777215, 6), null), a.__renderTransform.translate(-1, -1), a.__renderTransformChanged = !0, a.__transformDirty = !0) : "" != d.border && (d.removeProperty("border"), a.__renderTransformChanged = !0);
                d.setProperty("color", "#" + W.hex(a.__textFormat.color & 16777215, 6), null);
                d.setProperty("width", e + "px", null);
                d.setProperty("height", f + "px", null);
                switch (a.__textFormat.align) {
                  case 0:
                    d.setProperty("text-align", "center", null);
                    break;
                  case 4:
                    d.setProperty("text-align",
                      "right", null);
                    break;
                  default:
                    d.setProperty("text-align", "left", null)
                }
                a.__dirty = !1
              } else null != a.__div && (b.element.removeChild(a.__div), a.__div = null);
            null != a.__div && (c = b.__roundPixels, b.__roundPixels = !0, b.__updateClip(a), b.__applyStyle(a, !0, !0, !0), b.__roundPixels = c)
          } else dc.clear(a, b)
        } else b.__renderDrawableClear(a), a.__cacheBitmap.stage = a.stage, c = a.__cacheBitmap, null != c.stage && c.__worldVisible && c.__renderable && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable ? (b.__pushMaskObject(c),
          null != c.__bitmapData.image.buffer.__srcImage ? Vc.renderImage(c, b) : Vc.renderCanvas(c, b), b.__popMaskObject(c)) : Vc.clear(c, b);
        b.__renderEvent(a)
      };
      dc.renderDrawableClear = function(a, b) {
        dc.clear(a, b)
      };
      dc.__getAttributeMatch = function(a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3)
      };
      var Eg = function() {};
      k["openfl.display._internal.DOMTilemap"] = Eg;
      Eg.__name__ = "openfl.display._internal.DOMTilemap";
      Eg.clear = function(a, b) {
        null != a.__cacheBitmap && Vc.clear(a.__cacheBitmap, b);
        null != a.__canvas && (b.element.removeChild(a.__canvas),
          a.__canvas = null, a.__style = null)
      };
      Eg.render = function(a, b) {
        if (null != a.stage && a.__worldVisible && a.__renderable && 0 < a.__group.__tiles.length) {
          null == a.__canvas && (a.__canvas = window.document.createElement("canvas"), a.__context = a.__canvas.getContext("2d"), b.__initializeElement(a, a.__canvas));
          a.__canvas.width = a.__width;
          a.__canvas.height = a.__height;
          b.__canvasRenderer.context = a.__context;
          var c = b.__canvasRenderer;
          if (a.__renderable && 0 != a.__group.__tiles.length) {
            var d = c.__getAlpha(a.__worldAlpha);
            if (!(0 >= d)) {
              var e =
                c.context;
              c.__setBlendMode(a.__worldBlendMode);
              c.__pushMaskObject(a);
              var f = ha.__pool.get();
              f.setTo(0, 0, a.__width, a.__height);
              c.__pushMaskRect(f, a.__renderTransform);
              c.__allowSmoothing && a.smoothing || (e.imageSmoothingEnabled = !1);
              Vf.renderTileContainer(a.__group, c, a.__renderTransform, a.__tileset, c.__allowSmoothing && a.smoothing, a.tileAlphaEnabled, d, a.tileBlendModeEnabled, a.__worldBlendMode, null, null, f);
              c.__allowSmoothing && a.smoothing || (e.imageSmoothingEnabled = !0);
              c.__popMaskRect();
              c.__popMaskObject(a);
              ha.__pool.release(f)
            }
          }
          b.__canvasRenderer.context = null;
          b.__updateClip(a);
          b.__applyStyle(a, !0, !1, !0)
        } else Eg.clear(a, b)
      };
      Eg.renderDrawable = function(a, b) {
        b.__updateCacheBitmap(a, !1);
        if (null == a.__cacheBitmap || a.__isCacheBitmapRender) {
          null != a.opaqueBackground && !a.__isCacheBitmapRender && 0 < a.get_width() && a.get_height();
          var c = a.__graphics;
          if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
            A.render(c, b.__canvasRenderer);
            if (c.__softwareDirty || a.__worldAlphaChanged || a.__canvas != c.__canvas) null != c.__canvas ?
              a.__canvas != c.__canvas && (null != a.__canvas && b.element.removeChild(a.__canvas), a.__canvas = c.__canvas, a.__context = c.__context, b.__initializeElement(a, a.__canvas)) : qf.clear(a, b);
            if (null != a.__canvas) {
              b.__pushMaskObject(a);
              var d = a.__renderTransform;
              a.__renderTransform = c.__worldTransform;
              c.__transformDirty && (c.__transformDirty = !1, a.__renderTransformChanged = !0);
              b.__updateClip(a);
              b.__applyStyle(a, !0, !0, !0);
              a.__renderTransform = d;
              b.__popMaskObject(a)
            }
          } else qf.clear(a, b);
          if (null != a.stage && a.__worldVisible && a.__renderable &&
            0 < a.__group.__tiles.length) {
            null == a.__canvas && (a.__canvas = window.document.createElement("canvas"), a.__context = a.__canvas.getContext("2d"), b.__initializeElement(a, a.__canvas));
            a.__canvas.width = a.__width;
            a.__canvas.height = a.__height;
            b.__canvasRenderer.context = a.__context;
            c = b.__canvasRenderer;
            if (a.__renderable && 0 != a.__group.__tiles.length && (d = c.__getAlpha(a.__worldAlpha), !(0 >= d))) {
              var e = c.context;
              c.__setBlendMode(a.__worldBlendMode);
              c.__pushMaskObject(a);
              var f = ha.__pool.get();
              f.setTo(0, 0, a.__width, a.__height);
              c.__pushMaskRect(f, a.__renderTransform);
              c.__allowSmoothing && a.smoothing || (e.imageSmoothingEnabled = !1);
              Vf.renderTileContainer(a.__group, c, a.__renderTransform, a.__tileset, c.__allowSmoothing && a.smoothing, a.tileAlphaEnabled, d, a.tileBlendModeEnabled, a.__worldBlendMode, null, null, f);
              c.__allowSmoothing && a.smoothing || (e.imageSmoothingEnabled = !0);
              c.__popMaskRect();
              c.__popMaskObject(a);
              ha.__pool.release(f)
            }
            b.__canvasRenderer.context = null;
            b.__updateClip(a);
            b.__applyStyle(a, !0, !1, !0)
          } else Eg.clear(a, b)
        } else b.__renderDrawableClear(a),
          a.__cacheBitmap.stage = a.stage, c = a.__cacheBitmap, null != c.stage && c.__worldVisible && c.__renderable && null != c.__bitmapData && c.__bitmapData.__isValid && c.__bitmapData.readable ? (b.__pushMaskObject(c), null != c.__bitmapData.image.buffer.__srcImage ? Vc.renderImage(c, b) : Vc.renderCanvas(c, b), b.__popMaskObject(c)) : Vc.clear(c, b);
        b.__renderEvent(a)
      };
      Eg.renderDrawableClear = function(a, b) {
        Eg.clear(a, b)
      };
      var ah = function() {};
      k["openfl.display._internal.DOMVideo"] = ah;
      ah.__name__ = "openfl.display._internal.DOMVideo";
      ah.clear =
        function(a, b) {
          a.__active && (b.element.removeChild(a.__stream.__video), a.__active = !1)
        };
      ah.render = function(a, b) {
        null != a.stage && null != a.__stream && a.__worldVisible && a.__renderable ? (a.__active || (b.__initializeElement(a, a.__stream.__video), a.__active = !0, a.__dirty = !0), a.__dirty && (a.__stream.__video.width = a.__width | 0, a.__stream.__video.height = a.__height | 0, a.__dirty = !1), b.__updateClip(a), b.__applyStyle(a, !0, !0, !0)) : ah.clear(a, b)
      };
      ah.renderDrawable = function(a, b) {
        ah.render(a, b);
        b.__renderEvent(a)
      };
      ah.renderDrawableClear =
        function(a, b) {
          Wf.renderDrawableClear(a, b)
        };
      var Xf = function(a) {
        this.buffer = a;
        this.bPos = this.iPos = this.fPos = this.oPos = this.ffPos = this.iiPos = this.tsPos = 0;
        this.prev = ba.UNKNOWN
      };
      k["openfl.display._internal.DrawCommandReader"] = Xf;
      Xf.__name__ = "openfl.display._internal.DrawCommandReader";
      Xf.prototype = {
        buffer: null,
        bPos: null,
        iiPos: null,
        iPos: null,
        ffPos: null,
        fPos: null,
        oPos: null,
        prev: null,
        tsPos: null,
        advance: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos +=
                1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos +=
                2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
        },
        bool: function(a) {
          return this.buffer.b[this.bPos + a]
        },
        destroy: function() {
          this.buffer = null;
          this.reset()
        },
        fArr: function(a) {
          return this.buffer.ff[this.ffPos + a]
        },
        float: function(a) {
          return this.buffer.f[this.fPos + a]
        },
        iArr: function(a) {
          return this.buffer.ii[this.iiPos + a]
        },
        int: function(a) {
          return this.buffer.i[this.iPos + a]
        },
        obj: function(a) {
          return this.buffer.o[this.oPos + a]
        },
        readBeginBitmapFill: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.BEGIN_BITMAP_FILL;
          return this
        },
        readBeginFill: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.BEGIN_FILL;
          return this
        },
        readBeginGradientFill: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.BEGIN_GRADIENT_FILL;
          return this
        },
        readBeginShaderFill: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.BEGIN_SHADER_FILL;
          return this
        },
        readCubicCurveTo: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.CUBIC_CURVE_TO;
          return this
        },
        readCurveTo: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.CURVE_TO;
          return this
        },
        readDrawCircle: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.DRAW_CIRCLE;
          return this
        },
        readDrawEllipse: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.DRAW_ELLIPSE;
          return this
        },
        readDrawQuads: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.DRAW_QUADS;
          return this
        },
        readDrawRect: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.DRAW_RECT;
          return this
        },
        readDrawRoundRect: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.DRAW_ROUND_RECT;
          return this
        },
        readDrawTriangles: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.DRAW_TRIANGLES;
          return this
        },
        readEndFill: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.END_FILL;
          return this
        },
        readLineBitmapStyle: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.LINE_BITMAP_STYLE;
          return this
        },
        readLineGradientStyle: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.LINE_GRADIENT_STYLE;
          return this
        },
        readLineStyle: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.LINE_STYLE;
          return this
        },
        readLineTo: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.LINE_TO;
          return this
        },
        readMoveTo: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.MOVE_TO;
          return this
        },
        readOverrideBlendMode: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.OVERRIDE_BLEND_MODE;
          return this
        },
        readOverrideMatrix: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.OVERRIDE_MATRIX;
          return this
        },
        readWindingEvenOdd: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos +=
                2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos +=
                4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.WINDING_EVEN_ODD;
          return this
        },
        readWindingNonZero: function() {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos +=
                4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = ba.WINDING_NON_ZERO;
          return this
        },
        reset: function() {
          this.bPos = this.iPos = this.fPos = this.oPos =
            this.ffPos = this.iiPos = this.tsPos = 0
        },
        skip: function(a) {
          switch (this.prev._hx_index) {
            case 0:
              this.oPos += 2;
              this.bPos += 2;
              break;
            case 1:
              this.iPos += 1;
              this.fPos += 1;
              break;
            case 2:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 3:
              this.oPos += 1;
              break;
            case 4:
              this.fPos += 6;
              break;
            case 5:
              this.fPos += 4;
              break;
            case 6:
              this.fPos += 3;
              break;
            case 7:
              this.fPos += 4;
              break;
            case 8:
              this.oPos += 3;
              break;
            case 9:
              this.fPos += 4;
              break;
            case 10:
              this.fPos += 5;
              this.oPos += 1;
              break;
            case 12:
              this.oPos += 4;
              break;
            case 14:
              this.oPos += 2;
              this.bPos +=
                2;
              break;
            case 15:
              this.oPos += 4;
              this.iiPos += 2;
              this.ffPos += 1;
              this.fPos += 1;
              break;
            case 16:
              this.oPos += 4;
              this.iPos += 1;
              this.fPos += 2;
              this.bPos += 1;
              break;
            case 17:
              this.fPos += 2;
              break;
            case 18:
              this.fPos += 2;
              break;
            case 19:
              this.oPos += 1;
              break;
            case 20:
              this.oPos += 1
          }
          this.prev = a
        },
        __class__: Xf
      };
      var ba = O["openfl.display._internal.DrawCommandType"] = {
        __ename__: "openfl.display._internal.DrawCommandType",
        __constructs__: null,
        BEGIN_BITMAP_FILL: {
          _hx_name: "BEGIN_BITMAP_FILL",
          _hx_index: 0,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        BEGIN_FILL: {
          _hx_name: "BEGIN_FILL",
          _hx_index: 1,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        BEGIN_GRADIENT_FILL: {
          _hx_name: "BEGIN_GRADIENT_FILL",
          _hx_index: 2,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        BEGIN_SHADER_FILL: {
          _hx_name: "BEGIN_SHADER_FILL",
          _hx_index: 3,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        CUBIC_CURVE_TO: {
          _hx_name: "CUBIC_CURVE_TO",
          _hx_index: 4,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        CURVE_TO: {
          _hx_name: "CURVE_TO",
          _hx_index: 5,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_CIRCLE: {
          _hx_name: "DRAW_CIRCLE",
          _hx_index: 6,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_ELLIPSE: {
          _hx_name: "DRAW_ELLIPSE",
          _hx_index: 7,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_QUADS: {
          _hx_name: "DRAW_QUADS",
          _hx_index: 8,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_RECT: {
          _hx_name: "DRAW_RECT",
          _hx_index: 9,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_ROUND_RECT: {
          _hx_name: "DRAW_ROUND_RECT",
          _hx_index: 10,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_TILES: {
          _hx_name: "DRAW_TILES",
          _hx_index: 11,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        DRAW_TRIANGLES: {
          _hx_name: "DRAW_TRIANGLES",
          _hx_index: 12,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        END_FILL: {
          _hx_name: "END_FILL",
          _hx_index: 13,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        LINE_BITMAP_STYLE: {
          _hx_name: "LINE_BITMAP_STYLE",
          _hx_index: 14,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        LINE_GRADIENT_STYLE: {
          _hx_name: "LINE_GRADIENT_STYLE",
          _hx_index: 15,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        LINE_STYLE: {
          _hx_name: "LINE_STYLE",
          _hx_index: 16,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        LINE_TO: {
          _hx_name: "LINE_TO",
          _hx_index: 17,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        MOVE_TO: {
          _hx_name: "MOVE_TO",
          _hx_index: 18,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        OVERRIDE_BLEND_MODE: {
          _hx_name: "OVERRIDE_BLEND_MODE",
          _hx_index: 19,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        OVERRIDE_MATRIX: {
          _hx_name: "OVERRIDE_MATRIX",
          _hx_index: 20,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        WINDING_EVEN_ODD: {
          _hx_name: "WINDING_EVEN_ODD",
          _hx_index: 21,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        WINDING_NON_ZERO: {
          _hx_name: "WINDING_NON_ZERO",
          _hx_index: 22,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        },
        UNKNOWN: {
          _hx_name: "UNKNOWN",
          _hx_index: 23,
          __enum__: "openfl.display._internal.DrawCommandType",
          toString: v
        }
      };
      ba.__constructs__ = [ba.BEGIN_BITMAP_FILL, ba.BEGIN_FILL, ba.BEGIN_GRADIENT_FILL, ba.BEGIN_SHADER_FILL, ba.CUBIC_CURVE_TO, ba.CURVE_TO, ba.DRAW_CIRCLE, ba.DRAW_ELLIPSE, ba.DRAW_QUADS, ba.DRAW_RECT, ba.DRAW_ROUND_RECT, ba.DRAW_TILES, ba.DRAW_TRIANGLES, ba.END_FILL, ba.LINE_BITMAP_STYLE, ba.LINE_GRADIENT_STYLE, ba.LINE_STYLE, ba.LINE_TO, ba.MOVE_TO, ba.OVERRIDE_BLEND_MODE, ba.OVERRIDE_MATRIX, ba.WINDING_EVEN_ODD, ba.WINDING_NON_ZERO,
        ba.UNKNOWN
      ];
      var Gh = function() {};
      k["openfl.display._internal.FlashRenderer"] = Gh;
      Gh.__name__ = "openfl.display._internal.FlashRenderer";
      Gh.register = function(a) {
        null == Gh.instances && (Gh.instances = Hr.toObjectMap(null, !0), Ja.get_current().stage.addEventListener("enterFrame", Gh.render, !1, -2147483648));
        Gh.instances.set(a, !0)
      };
      Gh.render = function(a) {
        for (a = Gh.instances.keys(); a.hasNext();) a.next().__renderFlash()
      };
      var dp = function() {};
      k["openfl.display._internal.IDisplayObject"] = dp;
      dp.__name__ = "openfl.display._internal.IDisplayObject";
      dp.__isInterface__ = !0;
      dp.prototype = {
        __renderFlash: null,
        __class__: dp
      };
      var gi = function() {};
      k["openfl.display._internal.FlashTilemap"] = gi;
      gi.__name__ = "openfl.display._internal.FlashTilemap";
      gi.render = function(a) {};
      gi.renderTileContainer = function(a, b, c, d, e, f, g, h, m, l, p, n) {};
      var $h = function(a, b, c, d, e, f, g) {
        null == g && (g = .05);
        null == f && (f = !1);
        Yi.call(this, a, b, c, d, e, f, g);
        this.p_perm = [];
        for (b = 0; 512 > b;) c = b++, this.p_perm[c] = $h.P[c & 255];
        this.base_factor = .03125;
        this.setSeed(a)
      };
      k["openfl.display._internal.PerlinNoise"] =
        $h;
      $h.__name__ = "openfl.display._internal.PerlinNoise";
      $h.__super__ = Yi;
      $h.prototype = t(Yi.prototype, {
        p_perm: null,
        x_offset: null,
        y_offset: null,
        z_offset: null,
        base_factor: null,
        fill: function(a, b, c, d) {
          var e = a.width,
            f = a.height,
            g = this.octaves,
            h = this.octaves_frequencies,
            m = this.octaves_persistences,
            l = 1 == (1 & this.channels),
            p = 2 == (2 & this.channels),
            n = 4 == (4 & this.channels),
            q = 0;
          l && ++q;
          p && ++q;
          n && ++q;
          var k = this.grayscale,
            u = this.stitch_threshold * e | 0,
            v = this.stitch_threshold * f | 0,
            r = b * this.base_factor + this.x_offset;
          c = c * this.base_factor +
            this.y_offset;
          d = d * this.base_factor + this.z_offset;
          for (var t = 0; t < f;) {
            var w = t++;
            b = r;
            for (var z = 0, Q = e; z < Q;) {
              for (var O = z++, A = 0, aa = 0, B = 0, D = 0, x = g; D < x;) {
                var F = D++,
                  C = h[F];
                F = m[F];
                A += this.noise(b * C, c * C, d * C) * F;
                k || (1 < q && (aa += this.noise((b + 1) * C, (c + 1) * C, d * C) * F), 2 < q && (B += this.noise((b + 2) * C, (c + 2) * C, d * C) * F))
              }
              D = 0;
              k ? D = this.color(A, A, A) : l && p && n ? D = this.color(A, aa, B) : l && p ? D = this.color(A, aa, null) : l && n ? D = this.color(A, null, aa) : p && n ? D = this.color(null, A, aa) : l ? D = this.color(A, null, null) : p ? D = this.color(null, A, null) : n && (D = this.color(null,
                null, A));
              this.stitch && (D = this.stitching(a, D, O, w, u, v, e, f));
              a.setPixel32(O, w, D);
              b += this.base_factor
            }
            c += this.base_factor
          }
        },
        noise: function(a, b, c) {
          var d = a - a % 1,
            e = b - b % 1,
            f = c - c % 1;
          a -= d;
          b -= e;
          c -= f;
          var g = (d | 0) & 255,
            h = (e | 0) & 255,
            m = (f | 0) & 255;
          f = this.fade(a);
          e = this.fade(b);
          d = this.fade(c);
          var l = this.p_perm[g] + h,
            p = this.p_perm[l] + m;
          l = this.p_perm[l + 1] + m;
          h = this.p_perm[g + 1] + h;
          g = this.p_perm[h] + m;
          var n = this.p_perm[h + 1] + m,
            q = a - 1,
            k = b - 1,
            u = c - 1,
            v = this.p_perm[n + 1] & 15;
          m = (0 == (v & 1) ? 8 > v ? q : k : 8 > v ? -q : -k) + (0 == (v & 2) ? 4 > v ? k : 12 == v ? q : u : 4 > v ? -k :
            14 == v ? -q : -u);
          v = this.p_perm[l + 1] & 15;
          h = (0 == (v & 1) ? 8 > v ? a : k : 8 > v ? -a : -k) + (0 == (v & 2) ? 4 > v ? k : 12 == v ? a : u : 4 > v ? -k : 14 == v ? -a : -u);
          v = this.p_perm[g + 1] & 15;
          var r = (0 == (v & 1) ? 8 > v ? q : b : 8 > v ? -q : -b) + (0 == (v & 2) ? 4 > v ? b : 12 == v ? q : u : 4 > v ? -b : 14 == v ? -q : -u);
          v = this.p_perm[p + 1] & 15;
          u = (0 == (v & 1) ? 8 > v ? a : b : 8 > v ? -a : -b) + (0 == (v & 2) ? 4 > v ? b : 12 == v ? a : u : 4 > v ? -b : 14 == v ? -a : -u);
          v = this.p_perm[n] & 15;
          n = (0 == (v & 1) ? 8 > v ? q : k : 8 > v ? -q : -k) + (0 == (v & 2) ? 4 > v ? k : 12 == v ? q : c : 4 > v ? -k : 14 == v ? -q : -c);
          v = this.p_perm[l] & 15;
          l = (0 == (v & 1) ? 8 > v ? a : k : 8 > v ? -a : -k) + (0 == (v & 2) ? 4 > v ? k : 12 == v ? a : c : 4 > v ? -k : 14 == v ?
            -a : -c);
          v = this.p_perm[g] & 15;
          g = (0 == (v & 1) ? 8 > v ? q : b : 8 > v ? -q : -b) + (0 == (v & 2) ? 4 > v ? b : 12 == v ? q : c : 4 > v ? -b : 14 == v ? -q : -c);
          v = this.p_perm[p] & 15;
          a = (0 == (v & 1) ? 8 > v ? a : b : 8 > v ? -a : -b) + (0 == (v & 2) ? 4 > v ? b : 12 == v ? a : c : 4 > v ? -b : 14 == v ? -a : -c);
          u += f * (r - u);
          a += f * (g - a);
          a += e * (l + f * (n - l) - a);
          return a + d * (u + e * (h + f * (m - h) - u) - a)
        },
        setSeed: function(a) {
          this.x_offset = a = 16807 * a % 2147483647 | 0;
          this.y_offset = a = 16807 * a % 2147483647 | 0;
          this.z_offset = 16807 * a % 2147483647 | 0
        },
        __class__: $h
      });
      var Tg = function(a, b, c, d, e, f, g) {
        null == g && (g = !1);
        null == f && (f = !1);
        null == e && (e = !1);
        null ==
          d && (d = 0);
        null == c && (c = 2);
        null == b && (b = 5);
        null == a && (a = 0);
        this.wrap = a;
        this.filter = b;
        this.mipfilter = c;
        this.lodBias = d;
        this.ignoreSampler = e;
        this.centroid = f;
        this.textureAlpha = g
      };
      k["openfl.display._internal.SamplerState"] = Tg;
      Tg.__name__ = "openfl.display._internal.SamplerState";
      Tg.prototype = {
        centroid: null,
        filter: null,
        ignoreSampler: null,
        lodBias: null,
        mipfilter: null,
        mipmapGenerated: null,
        textureAlpha: null,
        wrap: null,
        clone: function() {
          var a = new Tg(this.wrap, this.filter, this.mipfilter, this.lodBias, this.ignoreSampler,
            this.centroid, this.textureAlpha);
          a.mipmapGenerated = this.mipmapGenerated;
          return a
        },
        copyFrom: function(a) {
          null == a || a.ignoreSampler || (this.wrap = a.wrap, this.filter = a.filter, this.mipfilter = a.mipfilter, this.lodBias = a.lodBias, this.centroid = a.centroid, this.textureAlpha = a.textureAlpha)
        },
        equals: function(a) {
          return null == a ? !1 : this.wrap == a.wrap && this.filter == a.filter && this.mipfilter == a.mipfilter && this.lodBias == a.lodBias ? this.textureAlpha == a.textureAlpha : !1
        },
        __class__: Tg
      };
      var Pm = function() {
        this.inputRefs = [];
        this.inputFilter = [];
        this.inputMipFilter = [];
        this.inputs = [];
        this.inputWrap = [];
        this.overrideIntNames = [];
        this.overrideIntValues = [];
        this.overrideFloatNames = [];
        this.overrideFloatValues = [];
        this.overrideBoolNames = [];
        this.overrideBoolValues = [];
        this.paramLengths = [];
        this.paramPositions = [];
        this.paramRefs_Bool = [];
        this.paramRefs_Float = [];
        this.paramRefs_Int = [];
        this.paramTypes = []
      };
      k["openfl.display._internal.ShaderBuffer"] = Pm;
      Pm.__name__ = "openfl.display._internal.ShaderBuffer";
      Pm.prototype = {
        inputCount: null,
        inputRefs: null,
        inputFilter: null,
        inputMipFilter: null,
        inputs: null,
        inputWrap: null,
        overrideBoolCount: null,
        overrideBoolNames: null,
        overrideBoolValues: null,
        overrideFloatCount: null,
        overrideFloatNames: null,
        overrideFloatValues: null,
        overrideIntCount: null,
        overrideIntNames: null,
        overrideIntValues: null,
        paramBoolCount: null,
        paramCount: null,
        paramData: null,
        paramDataBuffer: null,
        paramDataLength: null,
        paramFloatCount: null,
        paramIntCount: null,
        paramLengths: null,
        paramPositions: null,
        paramRefs_Bool: null,
        paramRefs_Float: null,
        paramRefs_Int: null,
        paramTypes: null,
        shader: null,
        addBoolOverride: function(a, b) {
          this.overrideBoolNames[this.overrideBoolCount] = a;
          this.overrideBoolValues[this.overrideBoolCount] = b;
          this.overrideBoolCount++
        },
        addFloatOverride: function(a, b) {
          this.overrideFloatNames[this.overrideFloatCount] = a;
          this.overrideFloatValues[this.overrideFloatCount] = b;
          this.overrideFloatCount++
        },
        addIntOverride: function(a, b) {
          this.overrideIntNames[this.overrideIntCount] = a;
          this.overrideIntValues[this.overrideIntCount] = b;
          this.overrideIntCount++
        },
        clearOverride: function() {
          this.overrideBoolCount =
            this.overrideFloatCount = this.overrideIntCount = 0
        },
        update: function(a) {
          this.paramIntCount = this.paramFloatCount = this.paramDataLength = this.paramCount = this.paramBoolCount = this.overrideBoolCount = this.overrideFloatCount = this.overrideIntCount = this.inputCount = 0;
          this.shader = null;
          if (null != a) {
            a.__init();
            this.inputCount = a.__inputBitmapData.length;
            for (var b, c = 0, d = this.inputCount; c < d;) {
              var e = c++;
              b = a.__inputBitmapData[e];
              this.inputs[e] = b.input;
              this.inputFilter[e] = b.filter;
              this.inputMipFilter[e] = b.mipFilter;
              this.inputRefs[e] =
                b;
              this.inputWrap[e] = b.wrap
            }
            b = a.__paramBool.length;
            var f = a.__paramFloat.length,
              g = a.__paramInt.length;
            this.paramCount = b + f + g;
            this.paramBoolCount = b;
            this.paramFloatCount = f;
            this.paramIntCount = g;
            var h = 0;
            c = 0;
            for (d = b; c < d;) {
              e = c++;
              var m = a.__paramBool[e];
              this.paramPositions[h] = this.paramDataLength;
              var l = null != m.value ? m.value.length : 0;
              this.paramLengths[h] = l;
              this.paramDataLength += l;
              this.paramTypes[h] = 0;
              this.paramRefs_Bool[e] = m;
              ++h
            }
            c = 0;
            for (d = f; c < d;) e = c++, m = a.__paramFloat[e], this.paramPositions[h] = this.paramDataLength,
              l = null != m.value ? m.value.length : 0, this.paramLengths[h] = l, this.paramDataLength += l, this.paramTypes[h] = 1, this.paramRefs_Float[e] = m, ++h;
            c = 0;
            for (d = g; c < d;) e = c++, m = a.__paramInt[e], this.paramPositions[h] = this.paramDataLength, l = null != m.value ? m.value.length : 0, this.paramLengths[h] = l, this.paramDataLength += l, this.paramTypes[h] = 2, this.paramRefs_Int[e] = m, ++h;
            if (0 < this.paramDataLength)
              if (null == this.paramData) {
                c = this.paramDataLength;
                var p = m = h = g = d = null;
                this.paramData = c = null != c ? new Float32Array(c) : null != d ? new Float32Array(d) :
                  null != g ? new Float32Array(g.__array) : null != h ? new Float32Array(h) : null != m ? null == p ? new Float32Array(m, 0) : new Float32Array(m, 0, p) : null
              } else this.paramDataLength > this.paramData.length && (c = this.paramDataLength, p = m = h = g = d = null, c = null != c ? new Float32Array(c) : null != d ? new Float32Array(d) : null != g ? new Float32Array(g.__array) : null != h ? new Float32Array(h) : null != m ? null == p ? new Float32Array(m, 0) : new Float32Array(m, 0, p) : null, c.set(this.paramData), this.paramData = c);
            c = p = m = h = g = 0;
            for (d = this.paramCount; c < d;)
              if (e = c++, l = this.paramLengths[e],
                e < b) {
                e = this.paramRefs_Bool[g];
                ++g;
                for (var n = 0; n < l;) {
                  var q = n++;
                  this.paramData[p] = e.value[q] ? 1 : 0;
                  ++p
                }
              } else if (e < b + f)
              for (e = this.paramRefs_Float[h], ++h, n = 0; n < l;) q = n++, this.paramData[p] = e.value[q], ++p;
            else
              for (e = this.paramRefs_Int[m], ++m, n = 0; n < l;) q = n++, this.paramData[p] = e.value[q], ++p;
            this.shader = a
          }
        },
        __class__: Pm
      };
      var ac = function(a, b, c) {
        this.profile = 3;
        this.driverInfo = "OpenGL (Direct blitting)";
        this.backBufferHeight = this.backBufferWidth = 0;
        Ka.call(this);
        this.__stage = a;
        this.__contextState = b;
        this.__stage3D =
          c;
        this.__context = a.window.context;
        this.gl = this.__context.webgl;
        null == this.__contextState && (this.__contextState = new dk);
        this.__state = new dk;
        var d;
        this.__vertexConstants = a = new Float32Array(512);
        this.__fragmentConstants = a = new Float32Array(512);
        var e = null;
        a = [1, 1, 1, 1];
        var f = d = c = b = null;
        this.__positionScale = a = null != e ? new Float32Array(e) : null != a ? new Float32Array(a) : null != b ? new Float32Array(b.__array) : null != c ? new Float32Array(c) : null != d ? null == f ? new Float32Array(d, 0) : new Float32Array(d, 0, f) : null;
        this.__programs =
          new ua; - 1 == ac.__glMaxViewportDims && (ac.__glMaxViewportDims = this.gl.getParameter(this.gl.MAX_VIEWPORT_DIMS));
        this.maxBackBufferHeight = this.maxBackBufferWidth = ac.__glMaxViewportDims; - 1 == ac.__glMaxTextureMaxAnisotropy && (a = this.gl.getExtension("EXT_texture_filter_anisotropic"), null != a && Object.prototype.hasOwnProperty.call(a, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") || (a = this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic")), null != a && Object.prototype.hasOwnProperty.call(a, "MAX_TEXTURE_MAX_ANISOTROPY_EXT") ||
          (a = this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")), null != a ? (ac.__glTextureMaxAnisotropy = a.TEXTURE_MAX_ANISOTROPY_EXT, ac.__glMaxTextureMaxAnisotropy = this.gl.getParameter(a.MAX_TEXTURE_MAX_ANISOTROPY_EXT)) : (ac.__glTextureMaxAnisotropy = 0, ac.__glMaxTextureMaxAnisotropy = 0)); - 1 == ac.__glDepthStencil && (ac.__glDepthStencil = this.gl.DEPTH_STENCIL); - 1 == ac.__glMemoryTotalAvailable && (a = this.gl.getExtension("NVX_gpu_memory_info"), null != a && (ac.__glMemoryTotalAvailable = a.GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX,
          ac.__glMemoryCurrentAvailable = a.GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX));
        null == ac.__driverInfo && (a = this.gl.getParameter(this.gl.VENDOR), b = this.gl.getParameter(this.gl.VERSION), c = this.gl.getParameter(this.gl.RENDERER), d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION), ac.__driverInfo = "OpenGL Vendor=" + a + " Version=" + b + " Renderer=" + c + " GLSL=" + d);
        this.driverInfo = ac.__driverInfo;
        this.__quadIndexBufferElements = 16383;
        e = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
        f = d = c = b = a = null;
        a = null != e ? new Uint16Array(e) : null != a ? new Uint16Array(a) : null != b ? new Uint16Array(b.__array) : null != c ? new Uint16Array(c) : null != d ? null == f ? new Uint16Array(d, 0) : new Uint16Array(d, 0, f) : null;
        d = c = b = 0;
        for (f = this.__quadIndexBufferElements; d < f;) d++, a[b] = c, a[b + 1] = c + 1, a[b + 2] = c + 2, a[b + 3] = c + 2, a[b + 4] = c + 1, a[b + 5] = c + 3, b += 6, c += 4;
        this.__quadIndexBuffer = this.createIndexBuffer(this.__quadIndexBufferCount);
        this.__quadIndexBuffer.uploadFromTypedArray(a)
      };
      k["openfl.display3D.Context3D"] = ac;
      ac.__name__ = "openfl.display3D.Context3D";
      ac.__super__ = Ka;
      ac.prototype = t(Ka.prototype, {
        backBufferHeight: null,
        backBufferWidth: null,
        driverInfo: null,
        maxBackBufferHeight: null,
        maxBackBufferWidth: null,
        profile: null,
        gl: null,
        __backBufferAntiAlias: null,
        __backBufferTexture: null,
        __backBufferWantsBestResolution: null,
        __backBufferWantsBestResolutionOnBrowserZoom: null,
        __cleared: null,
        __context: null,
        __contextState: null,
        __renderStage3DProgram: null,
        __enableErrorChecking: null,
        __fragmentConstants: null,
        __frontBufferTexture: null,
        __positionScale: null,
        __present: null,
        __programs: null,
        __quadIndexBuffer: null,
        __quadIndexBufferCount: null,
        __quadIndexBufferElements: null,
        __stage: null,
        __stage3D: null,
        __state: null,
        __vertexConstants: null,
        clear: function(a, b, c, d, e, f, g) {
          null == g && (g = 7);
          null == f && (f = 0);
          null == e && (e = 1);
          null == d && (d = 1);
          null == c && (c = 0);
          null == b && (b = 0);
          null == a && (a = 0);
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          var h = 0;
          if (0 != (g & 1)) {
            null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared || (this.__stage.__renderer.__cleared = !0), this.__cleared = !0);
            h |= this.gl.COLOR_BUFFER_BIT;
            if (1 != this.__contextState.colorMaskRed || 1 != this.__contextState.colorMaskGreen || 1 != this.__contextState.colorMaskBlue || 1 != this.__contextState.colorMaskAlpha) this.gl.colorMask(!0, !0, !0, !0), this.__contextState.colorMaskRed = !0, this.__contextState.colorMaskGreen = !0, this.__contextState.colorMaskBlue = !0, this.__contextState.colorMaskAlpha = !0;
            this.gl.clearColor(a, b, c, d)
          }
          0 != (g & 2) && (h |= this.gl.DEPTH_BUFFER_BIT, 1 != this.__contextState.depthMask && (this.gl.depthMask(!0),
            this.__contextState.depthMask = !0), this.gl.clearDepth(e));
          0 != (g & 4) && (h |= this.gl.STENCIL_BUFFER_BIT, 255 != this.__contextState.stencilWriteMask && (this.gl.stencilMask(255), this.__contextState.stencilWriteMask = 255), this.gl.clearStencil(f), this.__contextState.stencilWriteMask = 255);
          0 != h && (this.__setGLScissorTest(!1), this.gl.clear(h))
        },
        configureBackBuffer: function(a, b, c, d, e, f) {
          null == f && (f = !1);
          null == e && (e = !1);
          null == d && (d = !0);
          if (null == this.__stage3D) this.backBufferWidth = a, this.backBufferHeight = b, this.__backBufferAntiAlias =
            c, this.__state.backBufferEnableDepthAndStencil = d, this.__backBufferWantsBestResolution = e, this.__backBufferWantsBestResolutionOnBrowserZoom = f;
          else {
            if (null == this.__backBufferTexture || this.backBufferWidth != a || this.backBufferHeight != b) {
              null != this.__backBufferTexture && this.__backBufferTexture.dispose();
              null != this.__frontBufferTexture && this.__frontBufferTexture.dispose();
              this.__backBufferTexture = this.createRectangleTexture(a, b, 1, !0);
              this.__frontBufferTexture = this.createRectangleTexture(a, b, 1, !0);
              null == this.__stage3D.__vertexBuffer &&
                (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
              var g = Fb.toFloatVector(null, null, null, [a, b, 0, 1, 1, 0, b, 0, 0, 1, a, 0, 0, 1, 0, 0, 0, 0, 0, 0]);
              this.__stage3D.__vertexBuffer.uploadFromVector(g, 0, 20);
              null == this.__stage3D.__indexBuffer && (this.__stage3D.__indexBuffer = this.createIndexBuffer(6), g = Fb.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3]), this.__stage3D.__indexBuffer.uploadFromVector(g, 0, 6))
            }
            this.backBufferWidth = a;
            this.backBufferHeight = b;
            this.__backBufferAntiAlias = c;
            this.__state.backBufferEnableDepthAndStencil =
              d;
            this.__backBufferWantsBestResolution = e;
            this.__backBufferWantsBestResolutionOnBrowserZoom = f;
            this.__state.__primaryGLFramebuffer = this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
            this.__frontBufferTexture.__getGLFramebuffer(d, c, 0)
          }
        },
        createCubeTexture: function(a, b, c, d) {
          null == d && (d = 0);
          return new Zi(this, a, b, c, d)
        },
        createIndexBuffer: function(a, b) {
          null == b && (b = 1);
          return new ep(this, a, b)
        },
        createProgram: function(a) {
          null == a && (a = 0);
          return new fp(this, a)
        },
        createRectangleTexture: function(a, b, c, d) {
          return new ek(this,
            a, b, fk.toString(c), d)
        },
        createTexture: function(a, b, c, d, e) {
          null == e && (e = 0);
          return new hi(this, a, b, c, d, e)
        },
        createVertexBuffer: function(a, b, c) {
          null == c && (c = 1);
          return new gp(this, a, b, br.toString(c))
        },
        createVideoTexture: function() {
          return new hn(this)
        },
        dispose: function(a) {
          this.gl = null;
          this.__dispose()
        },
        drawToBitmapData: function(a, b, c) {
          if (null != a)
            if (b = null != b ? b.__toLimeRectangle() : new Td(0, 0, this.backBufferWidth, this.backBufferHeight), c = null != c ? c.__toLimeVector2() : new be, this.__stage.context3D == this) {
              if (null !=
                this.__stage.window) {
                if (null != this.__stage3D) {
                  var d = -this.__stage3D.get_x() | 0,
                    e = -this.__stage3D.get_y() | 0;
                  c.x = d;
                  c.y = e
                }
                e = this.__stage.window.readPixels();
                a.image.copyPixels(e, b, c)
              }
            } else if (null != this.__backBufferTexture) {
            d = this.__state.renderToTexture;
            this.setRenderToBackBuffer();
            this.__flushGLFramebuffer();
            this.__flushGLViewport();
            e = this.backBufferWidth * this.backBufferHeight * 4;
            var f = e = null != e ? new Uint8Array(e) : null;
            e = this.gl;
            e.readPixels(0, 0, this.backBufferWidth, this.backBufferHeight, this.__backBufferTexture.__format,
              this.gl.UNSIGNED_BYTE, f);
            e = new Hb(new Rf(f, this.backBufferWidth, this.backBufferHeight, 32, 2));
            a.image.copyPixels(e, b, c);
            null != d && this.setRenderToTexture(d, this.__state.renderToTextureDepthStencil, this.__state.renderToTextureAntiAlias, this.__state.renderToTextureSurfaceSelector)
          }
        },
        drawTriangles: function(a, b, c) {
          null == c && (c = -1);
          null == b && (b = 0);
          null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1) : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          c = -1 == c ? a.__numIndices : 3 * c;
          this.__bindGLElementArrayBuffer(a.__id);
          this.gl.drawElements(this.gl.TRIANGLES, c, this.gl.UNSIGNED_SHORT, 2 * b)
        },
        present: function() {
          this.setRenderToBackBuffer();
          if (null != this.__stage3D && null != this.__backBufferTexture) {
            this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
            var a = this.__backBufferTexture;
            this.__backBufferTexture = this.__frontBufferTexture;
            this.__frontBufferTexture = a;
            this.__state.__primaryGLFramebuffer =
              this.__backBufferTexture.__getGLFramebuffer(this.__state.backBufferEnableDepthAndStencil, this.__backBufferAntiAlias, 0);
            this.__cleared = !1
          }
          this.__present = !0
        },
        setBlendFactors: function(a, b) {
          this.setBlendFactorsSeparate(a, b, a, b)
        },
        setBlendFactorsSeparate: function(a, b, c, d) {
          this.__state.blendSourceRGBFactor = a;
          this.__state.blendDestinationRGBFactor = b;
          this.__state.blendSourceAlphaFactor = c;
          this.__state.blendDestinationAlphaFactor = d;
          this.__setGLBlendEquation(this.gl.FUNC_ADD)
        },
        setColorMask: function(a, b, c, d) {
          this.__state.colorMaskRed =
            a;
          this.__state.colorMaskGreen = b;
          this.__state.colorMaskBlue = c;
          this.__state.colorMaskAlpha = d
        },
        setCulling: function(a) {
          this.__state.culling = a
        },
        setDepthTest: function(a, b) {
          this.__state.depthMask = a;
          this.__state.depthCompareMode = b
        },
        setProgram: function(a) {
          this.__state.program = a;
          this.__state.shader = null;
          if (null != a)
            for (var b = 0, c = a.__samplerStates.length; b < c;) {
              var d = b++;
              null == this.__state.samplerStates[d] ? this.__state.samplerStates[d] = a.__samplerStates[d].clone() : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d])
            }
        },
        setProgramConstantsFromByteArray: function(a, b, c, d, e) {
          if (0 != c && null != this.__state.program && (null == this.__state.program || 1 != this.__state.program.__format)) {
            -1 == c && (c = (Cb.get_length(d) >>> 2) - e);
            var f = (a = 1 == a) ? this.__vertexConstants : this.__fragmentConstants,
              g = Cb.toBytes(d),
              h = 0;
            d = Cb.get_length(d);
            null == h && (h = 0);
            d = null == h ? new Float32Array(g.b.bufferValue) : null == d ? new Float32Array(g.b.bufferValue, h) : new Float32Array(g.b.bufferValue, h, d);
            g = 4 * b;
            e = Ya.toFloat(e) / Ya.toFloat(4) | 0;
            h = 0;
            for (var m = 4 * c; h < m;) {
              var l =
                h++;
              f[g + l] = d[e + l]
            }
            null != this.__state.program && this.__state.program.__markDirty(a, b, c)
          }
        },
        setProgramConstantsFromMatrix: function(a, b, c, d) {
          null == d && (d = !1);
          if (null != this.__state.program && 1 == this.__state.program.__format) this.__flushGLProgram(), a = new Float32Array(16), a[0] = c.rawData.get(0), a[1] = c.rawData.get(1), a[2] = c.rawData.get(2), a[3] = c.rawData.get(3), a[4] = c.rawData.get(4), a[5] = c.rawData.get(5), a[6] = c.rawData.get(6), a[7] = c.rawData.get(7), a[8] = c.rawData.get(8), a[9] = c.rawData.get(9), a[10] = c.rawData.get(10),
            a[11] = c.rawData.get(11), a[12] = c.rawData.get(12), a[13] = c.rawData.get(13), a[14] = c.rawData.get(14), a[15] = c.rawData.get(15), cc.uniformMatrix4fv(this.gl, b, d, a);
          else {
            var e = (a = 1 == a) ? this.__vertexConstants : this.__fragmentConstants;
            c = c.rawData;
            var f = 4 * b;
            d ? (e[f++] = c.get(0), e[f++] = c.get(4), e[f++] = c.get(8), e[f++] = c.get(12), e[f++] = c.get(1), e[f++] = c.get(5), e[f++] = c.get(9), e[f++] = c.get(13), e[f++] = c.get(2), e[f++] = c.get(6), e[f++] = c.get(10), e[f++] = c.get(14), e[f++] = c.get(3), e[f++] = c.get(7), e[f++] = c.get(11)) : (e[f++] =
              c.get(0), e[f++] = c.get(1), e[f++] = c.get(2), e[f++] = c.get(3), e[f++] = c.get(4), e[f++] = c.get(5), e[f++] = c.get(6), e[f++] = c.get(7), e[f++] = c.get(8), e[f++] = c.get(9), e[f++] = c.get(10), e[f++] = c.get(11), e[f++] = c.get(12), e[f++] = c.get(13), e[f++] = c.get(14));
            e[f++] = c.get(15);
            null != this.__state.program && this.__state.program.__markDirty(a, b, 4)
          }
        },
        setProgramConstantsFromVector: function(a, b, c, d) {
          null == d && (d = -1);
          if (0 != d && (null == this.__state.program || 1 != this.__state.program.__format)) {
            -1 == d && (d = c.get_length() >> 2);
            for (var e =
                (a = 1 == a) ? this.__vertexConstants : this.__fragmentConstants, f = 0, g = 4 * b, h = 0, m = d; h < m;) h++, e[g++] = c.get(f++), e[g++] = c.get(f++), e[g++] = c.get(f++), e[g++] = c.get(f++);
            null != this.__state.program && this.__state.program.__markDirty(a, b, d)
          }
        },
        setRenderToBackBuffer: function() {
          this.__state.renderToTexture = null
        },
        setRenderToTexture: function(a, b, c, d) {
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = !1);
          this.__state.renderToTexture = a;
          this.__state.renderToTextureDepthStencil = b;
          this.__state.renderToTextureAntiAlias = c;
          this.__state.renderToTextureSurfaceSelector =
            d
        },
        setSamplerStateAt: function(a, b, c, d) {
          null == this.__state.samplerStates[a] && (this.__state.samplerStates[a] = new Tg);
          a = this.__state.samplerStates[a];
          a.wrap = b;
          a.filter = c;
          a.mipfilter = d
        },
        setScissorRectangle: function(a) {
          null != a ? (this.__state.scissorEnabled = !0, this.__state.scissorRectangle.copyFrom(a)) : this.__state.scissorEnabled = !1
        },
        setStencilActions: function(a, b, c, d, e) {
          null == e && (e = 5);
          null == d && (d = 5);
          null == c && (c = 5);
          null == b && (b = 0);
          null == a && (a = 2);
          this.__state.stencilTriangleFace = a;
          this.__state.stencilCompareMode =
            b;
          this.__state.stencilPass = c;
          this.__state.stencilDepthFail = d;
          this.__state.stencilFail = e
        },
        setStencilReferenceValue: function(a, b, c) {
          null == c && (c = 255);
          null == b && (b = 255);
          this.__state.stencilReferenceValue = a;
          this.__state.stencilReadMask = b;
          this.__state.stencilWriteMask = c
        },
        setTextureAt: function(a, b) {
          this.__state.textures[a] = b
        },
        setVertexBufferAt: function(a, b, c, d) {
          null == d && (d = 4);
          null == c && (c = 0);
          if (null == b) this.gl.disableVertexAttribArray(a), this.__bindGLArrayBuffer(null);
          else switch (this.__bindGLArrayBuffer(b.__id),
            this.gl.enableVertexAttribArray(a), c *= 4, d) {
            case 0:
              this.gl.vertexAttribPointer(a, 4, this.gl.UNSIGNED_BYTE, !0, b.__stride, c);
              break;
            case 1:
              this.gl.vertexAttribPointer(a, 1, this.gl.FLOAT, !1, b.__stride, c);
              break;
            case 2:
              this.gl.vertexAttribPointer(a, 2, this.gl.FLOAT, !1, b.__stride, c);
              break;
            case 3:
              this.gl.vertexAttribPointer(a, 3, this.gl.FLOAT, !1, b.__stride, c);
              break;
            case 4:
              this.gl.vertexAttribPointer(a, 4, this.gl.FLOAT, !1, b.__stride, c);
              break;
            default:
              throw F.thrown(new qd);
          }
        },
        __bindGLArrayBuffer: function(a) {
          this.__contextState.__currentGLArrayBuffer !=
            a && (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a), this.__contextState.__currentGLArrayBuffer = a)
        },
        __bindGLElementArrayBuffer: function(a) {
          this.__contextState.__currentGLElementArrayBuffer != a && (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a), this.__contextState.__currentGLElementArrayBuffer = a)
        },
        __bindGLFramebuffer: function(a) {
          this.__contextState.__currentGLFramebuffer != a && (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a), this.__contextState.__currentGLFramebuffer = a)
        },
        __bindGLTexture2D: function(a) {
          this.gl.bindTexture(this.gl.TEXTURE_2D,
            a);
          this.__contextState.__currentGLTexture2D = a
        },
        __bindGLTextureCubeMap: function(a) {
          this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
          this.__contextState.__currentGLTextureCubeMap = a
        },
        __dispose: function() {
          this.driverInfo += " (Disposed)";
          null != this.__stage3D && (this.__stage3D.__indexBuffer = null, this.__stage3D.__vertexBuffer = null, this.__stage3D = this.__stage3D.context3D = null);
          this.__positionScale = this.__frontBufferTexture = this.__fragmentConstants = this.__renderStage3DProgram = this.__context = this.__backBufferTexture =
            null;
          this.__present = !1;
          this.__vertexConstants = this.__stage = this.__quadIndexBuffer = null
        },
        __drawTriangles: function(a, b) {
          null == a && (a = 0);
          null == this.__state.renderToTexture && (this.__stage.context3D != this || this.__stage.__renderer.__cleared ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1) : this.__stage.__renderer.__clear());
          this.__flushGL();
          null != this.__state.program && this.__state.program.__flush();
          this.gl.drawArrays(this.gl.TRIANGLES, a, b)
        },
        __flushGL: function() {
          this.__flushGLProgram();
          this.__flushGLFramebuffer();
          this.__flushGLViewport();
          this.__flushGLBlend();
          if (this.__contextState.colorMaskRed != this.__state.colorMaskRed || this.__contextState.colorMaskGreen != this.__state.colorMaskGreen || this.__contextState.colorMaskBlue != this.__state.colorMaskBlue || this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha) this.gl.colorMask(this.__state.colorMaskRed, this.__state.colorMaskGreen, this.__state.colorMaskBlue, this.__state.colorMaskAlpha), this.__contextState.colorMaskRed = this.__state.colorMaskRed, this.__contextState.colorMaskGreen =
            this.__state.colorMaskGreen, this.__contextState.colorMaskBlue = this.__state.colorMaskBlue, this.__contextState.colorMaskAlpha = this.__state.colorMaskAlpha;
          this.__flushGLCulling();
          this.__flushGLDepth();
          this.__flushGLScissor();
          this.__flushGLStencil();
          this.__flushGLTextures()
        },
        __flushGLBlend: function() {
          if (this.__contextState.blendDestinationRGBFactor != this.__state.blendDestinationRGBFactor || this.__contextState.blendSourceRGBFactor != this.__state.blendSourceRGBFactor || this.__contextState.blendDestinationAlphaFactor !=
            this.__state.blendDestinationAlphaFactor || this.__contextState.blendSourceAlphaFactor != this.__state.blendSourceAlphaFactor) this.__setGLBlend(!0), this.__state.blendDestinationRGBFactor == this.__state.blendDestinationAlphaFactor && this.__state.blendSourceRGBFactor == this.__state.blendSourceAlphaFactor ? this.gl.blendFunc(this.__getGLBlend(this.__state.blendSourceRGBFactor), this.__getGLBlend(this.__state.blendDestinationRGBFactor)) : this.gl.blendFuncSeparate(this.__getGLBlend(this.__state.blendSourceRGBFactor),
            this.__getGLBlend(this.__state.blendDestinationRGBFactor), this.__getGLBlend(this.__state.blendSourceAlphaFactor), this.__getGLBlend(this.__state.blendDestinationAlphaFactor)), this.__contextState.blendDestinationRGBFactor = this.__state.blendDestinationRGBFactor, this.__contextState.blendSourceRGBFactor = this.__state.blendSourceRGBFactor, this.__contextState.blendDestinationAlphaFactor = this.__state.blendDestinationAlphaFactor, this.__contextState.blendSourceAlphaFactor = this.__state.blendSourceAlphaFactor
        },
        __flushGLColor: function() {
          if (this.__contextState.colorMaskRed != this.__state.colorMaskRed || this.__contextState.colorMaskGreen != this.__state.colorMaskGreen || this.__contextState.colorMaskBlue != this.__state.colorMaskBlue || this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha) this.gl.colorMask(this.__state.colorMaskRed, this.__state.colorMaskGreen, this.__state.colorMaskBlue, this.__state.colorMaskAlpha), this.__contextState.colorMaskRed = this.__state.colorMaskRed, this.__contextState.colorMaskGreen =
            this.__state.colorMaskGreen, this.__contextState.colorMaskBlue = this.__state.colorMaskBlue, this.__contextState.colorMaskAlpha = this.__state.colorMaskAlpha
        },
        __flushGLCulling: function() {
          if (this.__contextState.culling != this.__state.culling) {
            if (3 == this.__state.culling) this.__setGLCullFace(!1);
            else switch (this.__setGLCullFace(!0), this.__state.culling) {
              case 0:
                this.gl.cullFace(this.gl.BACK);
                break;
              case 1:
                this.gl.cullFace(this.gl.FRONT);
                break;
              case 2:
                this.gl.cullFace(this.gl.FRONT_AND_BACK);
                break;
              case 3:
                break;
              default:
                throw F.thrown(new qd);
            }
            this.__contextState.culling = this.__state.culling
          }
        },
        __flushGLDepth: function() {
          var a = this.__state.depthMask && (null != this.__state.renderToTexture ? this.__state.renderToTextureDepthStencil : this.__state.backBufferEnableDepthAndStencil);
          this.__contextState.depthMask != a && (this.gl.depthMask(a), this.__contextState.depthMask = a);
          if (this.__contextState.depthCompareMode != this.__state.depthCompareMode) {
            switch (this.__state.depthCompareMode) {
              case 0:
                this.gl.depthFunc(this.gl.ALWAYS);
                break;
              case 1:
                this.gl.depthFunc(this.gl.EQUAL);
                break;
              case 2:
                this.gl.depthFunc(this.gl.GREATER);
                break;
              case 3:
                this.gl.depthFunc(this.gl.GEQUAL);
                break;
              case 4:
                this.gl.depthFunc(this.gl.LESS);
                break;
              case 5:
                this.gl.depthFunc(this.gl.LEQUAL);
                break;
              case 6:
                this.gl.depthFunc(this.gl.NEVER);
                break;
              case 7:
                this.gl.depthFunc(this.gl.NOTEQUAL);
                break;
              default:
                throw F.thrown(new qd);
            }
            this.__contextState.depthCompareMode = this.__state.depthCompareMode
          }
        },
        __flushGLFramebuffer: function() {
          if (null != this.__state.renderToTexture) {
            if (this.__contextState.renderToTexture !=
              this.__state.renderToTexture || this.__contextState.renderToTextureSurfaceSelector != this.__state.renderToTextureSurfaceSelector) {
              var a = this.__state.renderToTexture.__getGLFramebuffer(this.__state.renderToTextureDepthStencil, this.__state.renderToTextureAntiAlias, this.__state.renderToTextureSurfaceSelector);
              this.__bindGLFramebuffer(a);
              this.__contextState.renderToTexture = this.__state.renderToTexture;
              this.__contextState.renderToTextureAntiAlias = this.__state.renderToTextureAntiAlias;
              this.__contextState.renderToTextureDepthStencil =
                this.__state.renderToTextureDepthStencil;
              this.__contextState.renderToTextureSurfaceSelector = this.__state.renderToTextureSurfaceSelector
            }
            this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
            this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
            this.__setGLFrontFace(!0)
          } else {
            if (null == this.__stage && 0 == this.backBufferWidth && 0 == this.backBufferHeight) throw F.thrown(new jd("Context3D backbuffer has not been configured"));
            if (null != this.__contextState.renderToTexture || this.__contextState.__currentGLFramebuffer !=
              this.__state.__primaryGLFramebuffer || this.__contextState.backBufferEnableDepthAndStencil != this.__state.backBufferEnableDepthAndStencil) this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer), this.__contextState.renderToTexture = null, this.__contextState.backBufferEnableDepthAndStencil = this.__state.backBufferEnableDepthAndStencil;
            this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLStencilTest(this.__state.backBufferEnableDepthAndStencil);
            this.__setGLFrontFace(this.__stage.context3D !=
              this)
          }
        },
        __flushGLProgram: function() {
          var a = this.__state.shader,
            b = this.__state.program;
          this.__contextState.shader != a && (null != this.__contextState.shader && this.__contextState.shader.__disable(), null != a && a.__enable(), this.__contextState.shader = a);
          this.__contextState.program != b && (null != this.__contextState.program && this.__contextState.program.__disable(), null != b && b.__enable(), this.__contextState.program = b);
          null != b && 0 == b.__format && (this.__positionScale[1] = this.__stage.context3D == this && null == this.__state.renderToTexture ?
            1 : -1, b.__setPositionScale(this.__positionScale))
        },
        __flushGLScissor: function() {
          if (this.__state.scissorEnabled) {
            this.__setGLScissorTest(!0);
            this.__contextState.scissorEnabled = !0;
            var a = this.__state.scissorRectangle.x | 0,
              b = this.__state.scissorRectangle.y | 0,
              c = this.__state.scissorRectangle.width | 0,
              d = this.__state.scissorRectangle.height | 0;
            null == this.__state.renderToTexture && null == this.__stage3D && (b = (this.__stage.window.__height * this.__stage.window.__scale | 0) - (this.__state.scissorRectangle.height | 0) - b);
            if (this.__contextState.scissorRectangle.x !=
              a || this.__contextState.scissorRectangle.y != b || this.__contextState.scissorRectangle.width != c || this.__contextState.scissorRectangle.height != d) this.gl.scissor(a, b, c, d), this.__contextState.scissorRectangle.setTo(a, b, c, d)
          } else this.__contextState.scissorEnabled != this.__state.scissorEnabled && (this.__setGLScissorTest(!1), this.__contextState.scissorEnabled = !1)
        },
        __flushGLStencil: function() {
          if (this.__contextState.stencilTriangleFace != this.__state.stencilTriangleFace || this.__contextState.stencilPass != this.__state.stencilPass ||
            this.__contextState.stencilDepthFail != this.__state.stencilDepthFail || this.__contextState.stencilFail != this.__state.stencilFail) this.gl.stencilOpSeparate(this.__getGLTriangleFace(this.__state.stencilTriangleFace), this.__getGLStencilAction(this.__state.stencilFail), this.__getGLStencilAction(this.__state.stencilDepthFail), this.__getGLStencilAction(this.__state.stencilPass)), this.__contextState.stencilTriangleFace = this.__state.stencilTriangleFace, this.__contextState.stencilPass = this.__state.stencilPass,
            this.__contextState.stencilDepthFail = this.__state.stencilDepthFail, this.__contextState.stencilFail = this.__state.stencilFail;
          this.__contextState.stencilWriteMask != this.__state.stencilWriteMask && (this.gl.stencilMask(this.__state.stencilWriteMask), this.__contextState.stencilWriteMask = this.__state.stencilWriteMask);
          if (this.__contextState.stencilCompareMode != this.__state.stencilCompareMode || this.__contextState.stencilReferenceValue != this.__state.stencilReferenceValue || this.__contextState.stencilReadMask !=
            this.__state.stencilReadMask) this.gl.stencilFunc(this.__getGLCompareMode(this.__state.stencilCompareMode), this.__state.stencilReferenceValue, this.__state.stencilReadMask), this.__contextState.stencilCompareMode = this.__state.stencilCompareMode, this.__contextState.stencilReferenceValue = this.__state.stencilReferenceValue, this.__contextState.stencilReadMask = this.__state.stencilReadMask
        },
        __flushGLTextures: function() {
          for (var a = 0, b, c, d = 0, e = this.__state.textures.length; d < e;) {
            var f = d++;
            b = this.__state.textures[f];
            c = this.__state.samplerStates[f];
            null == c && (this.__state.samplerStates[f] = new Tg, c = this.__state.samplerStates[f]);
            this.gl.activeTexture(this.gl.TEXTURE0 + a);
            null != b ? (b.__textureTarget == this.gl.TEXTURE_2D ? this.__bindGLTexture2D(b.__getTexture()) : this.__bindGLTextureCubeMap(b.__getTexture()), this.__contextState.textures[f] = b, b.__setSamplerState(c)) : this.__bindGLTexture2D(null);
            null != this.__state.program && 0 == this.__state.program.__format && c.textureAlpha && (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4), null !=
              b && null != b.__alphaTexture ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture()) : this.__bindGLTextureCubeMap(b.__alphaTexture.__getTexture()), b.__alphaTexture.__setSamplerState(c), this.gl.uniform1i(this.__state.program.__agalAlphaSamplerEnabled[a].location, 1)) : (this.__bindGLTexture2D(null), null != this.__state.program.__agalAlphaSamplerEnabled[a] && this.gl.uniform1i(this.__state.program.__agalAlphaSamplerEnabled[a].location, 0)));
            ++a
          }
        },
        __flushGLViewport: function() {
          if (null ==
            this.__state.renderToTexture)
            if (this.__stage.context3D == this) {
              var a = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
                b = this.__stage.window.__height * this.__stage.window.__scale - this.backBufferHeight - (null == this.__stage3D ? 0 : this.__stage3D.get_y()) | 0;
              this.gl.viewport(a, b, this.backBufferWidth, this.backBufferHeight)
            } else this.gl.viewport(0, 0, this.backBufferWidth, this.backBufferHeight);
          else b = a = 0, this.__state.renderToTexture instanceof hi ? (b = this.__state.renderToTexture, a = b.__width, b = b.__height) : this.__state.renderToTexture instanceof
          ek ? (b = this.__state.renderToTexture, a = b.__width, b = b.__height) : this.__state.renderToTexture instanceof Zi && (b = this.__state.renderToTexture, b = a = b.__size), this.gl.viewport(0, 0, a, b)
        },
        __getGLBlend: function(a) {
          switch (a) {
            case 0:
              return this.gl.DST_ALPHA;
            case 1:
              return this.gl.DST_COLOR;
            case 2:
              return this.gl.ONE;
            case 3:
              return this.gl.ONE_MINUS_DST_ALPHA;
            case 4:
              return this.gl.ONE_MINUS_DST_COLOR;
            case 5:
              return this.gl.ONE_MINUS_SRC_ALPHA;
            case 6:
              return this.gl.ONE_MINUS_SRC_COLOR;
            case 7:
              return this.gl.SRC_ALPHA;
            case 8:
              return this.gl.SRC_COLOR;
            case 9:
              return this.gl.ZERO;
            default:
              throw F.thrown(new qd);
          }
        },
        __getGLCompareMode: function(a) {
          switch (a) {
            case 0:
              return this.gl.ALWAYS;
            case 1:
              return this.gl.EQUAL;
            case 2:
              return this.gl.GREATER;
            case 3:
              return this.gl.GEQUAL;
            case 4:
              return this.gl.LESS;
            case 5:
              return this.gl.LEQUAL;
            case 6:
              return this.gl.NEVER;
            case 7:
              return this.gl.NOTEQUAL;
            default:
              return this.gl.EQUAL
          }
        },
        __getGLStencilAction: function(a) {
          switch (a) {
            case 0:
              return this.gl.DECR;
            case 1:
              return this.gl.DECR_WRAP;
            case 2:
              return this.gl.INCR;
            case 3:
              return this.gl.INCR_WRAP;
            case 4:
              return this.gl.INVERT;
            case 5:
              return this.gl.KEEP;
            case 6:
              return this.gl.REPLACE;
            case 7:
              return this.gl.ZERO;
            default:
              return this.gl.KEEP
          }
        },
        __getGLTriangleFace: function(a) {
          switch (a) {
            case 0:
              return this.gl.BACK;
            case 1:
              return this.gl.FRONT;
            case 2:
              return this.gl.FRONT_AND_BACK;
            case 3:
              return this.gl.NONE;
            default:
              return this.gl.FRONT_AND_BACK
          }
        },
        __renderStage3D: function(a) {
          var b = a.context3D;
          if (null != b && b != this && null != b.__frontBufferTexture && a.visible && 0 < this.backBufferHeight &&
            0 < this.backBufferWidth) {
            if (null == this.__renderStage3DProgram) {
              var c = new U;
              c.assemble(cr.toString(1), "m44 op, va0, vc0\nmov v0, va1");
              var d = new U;
              d.assemble(cr.toString(0), "tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1");
              this.__renderStage3DProgram = this.createProgram();
              this.__renderStage3DProgram.upload(c.agalcode, d.agalcode)
            }
            this.setProgram(this.__renderStage3DProgram);
            this.setBlendFactors(2, 9);
            this.setColorMask(!0, !0, !0, !0);
            this.setCulling(3);
            this.setDepthTest(!1, 0);
            this.setStencilActions();
            this.setStencilReferenceValue(0,
              0, 0);
            this.setScissorRectangle(null);
            this.setTextureAt(0, b.__frontBufferTexture);
            this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
            this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
            this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
            this.drawTriangles(a.__indexBuffer);
            this.__present = !0
          }
        },
        __setGLBlend: function(a) {
          this.__contextState.__enableGLBlend != a && (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND), this.__contextState.__enableGLBlend = a)
        },
        __setGLBlendEquation: function(a) {
          this.__contextState.__glBlendEquation !=
            a && (this.gl.blendEquation(a), this.__contextState.__glBlendEquation = a)
        },
        __setGLCullFace: function(a) {
          this.__contextState.__enableGLCullFace != a && (a ? this.gl.enable(this.gl.CULL_FACE) : this.gl.disable(this.gl.CULL_FACE), this.__contextState.__enableGLCullFace = a)
        },
        __setGLDepthTest: function(a) {
          this.__contextState.__enableGLDepthTest != a && (a ? this.gl.enable(this.gl.DEPTH_TEST) : this.gl.disable(this.gl.DEPTH_TEST), this.__contextState.__enableGLDepthTest = a)
        },
        __setGLFrontFace: function(a) {
          this.__contextState.__frontFaceGLCCW !=
            a && (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW), this.__contextState.__frontFaceGLCCW = a)
        },
        __setGLScissorTest: function(a) {
          this.__contextState.__enableGLScissorTest != a && (a ? this.gl.enable(this.gl.SCISSOR_TEST) : this.gl.disable(this.gl.SCISSOR_TEST), this.__contextState.__enableGLScissorTest = a)
        },
        __setGLStencilTest: function(a) {
          this.__contextState.__enableGLStencilTest != a && (a ? this.gl.enable(this.gl.STENCIL_TEST) : this.gl.disable(this.gl.STENCIL_TEST), this.__contextState.__enableGLStencilTest = a)
        },
        get_enableErrorChecking: function() {
          return this.__enableErrorChecking
        },
        set_enableErrorChecking: function(a) {
          return this.__enableErrorChecking = a
        },
        get_totalGPUMemory: function() {
          if (-1 != ac.__glMemoryCurrentAvailable) {
            var a = this.gl.getParameter(ac.__glMemoryCurrentAvailable),
              b = this.gl.getParameter(ac.__glMemoryTotalAvailable);
            if (0 < b) return 1024 * (b - a)
          }
          return 0
        },
        __class__: ac,
        __properties__: {
          get_totalGPUMemory: "get_totalGPUMemory",
          set_enableErrorChecking: "set_enableErrorChecking",
          get_enableErrorChecking: "get_enableErrorChecking"
        }
      });
      var br = {
          fromString: function(a) {
            switch (a) {
              case "dynamicDraw":
                return 0;
              case "staticDraw":
                return 1;
              default:
                return null
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "dynamicDraw";
              case 1:
                return "staticDraw";
              default:
                return null
            }
          }
        },
        cr = {
          fromString: function(a) {
            switch (a) {
              case "fragment":
                return 0;
              case "vertex":
                return 1;
              default:
                return null
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "fragment";
              case 1:
                return "vertex";
              default:
                return null
            }
          }
        },
        fk = {
          fromString: function(a) {
            switch (a) {
              case "bgrPacked565":
                return 0;
              case "bgra":
                return 1;
              case "bgraPacked4444":
                return 2;
              case "compressed":
                return 3;
              case "compressedAlpha":
                return 4;
              case "rgbaHalfFloat":
                return 5;
              default:
                return null
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "bgrPacked565";
              case 1:
                return "bgra";
              case 2:
                return "bgraPacked4444";
              case 3:
                return "compressed";
              case 4:
                return "compressedAlpha";
              case 5:
                return "rgbaHalfFloat";
              default:
                return null
            }
          }
        },
        ep = function(a, b, c) {
          this.__context = a;
          this.__numIndices = b;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW
        };
      k["openfl.display3D.IndexBuffer3D"] = ep;
      ep.__name__ =
        "openfl.display3D.IndexBuffer3D";
      ep.prototype = {
        __context: null,
        __id: null,
        __memoryUsage: null,
        __numIndices: null,
        __tempUInt16Array: null,
        __usage: null,
        dispose: function() {
          this.__context.gl.deleteBuffer(this.__id)
        },
        uploadFromByteArray: function(a, b, c, d) {
          b += 2 * c;
          a = Cb.toArrayBuffer(a);
          null == b && (b = 0);
          d = null != a ? null == d ? new Uint16Array(a, b) : new Uint16Array(a, b, d) : null;
          this.uploadFromTypedArray(d)
        },
        uploadFromTypedArray: function(a, b) {
          null != a && (b = this.__context.gl, this.__context.__bindGLElementArrayBuffer(this.__id),
            cc.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage))
        },
        uploadFromVector: function(a, b, c) {
          if (null != a) {
            var d = b + c,
              e = this.__tempUInt16Array;
            if (null == this.__tempUInt16Array || this.__tempUInt16Array.length < c) this.__tempUInt16Array = null != c ? new Uint16Array(c) : null, null != e && this.__tempUInt16Array.set(e);
            for (c = b; c < d;) e = c++, this.__tempUInt16Array[e - b] = a.get(e);
            this.uploadFromTypedArray(this.__tempUInt16Array)
          }
        },
        __class__: ep
      };
      var fp = function(a, b) {
        this.__context = a;
        this.__format = b;
        0 == this.__format ? (this.__agalSamplerUsageMask =
          0, this.__agalUniforms = new bb, this.__agalSamplerUniforms = new bb, this.__agalAlphaSamplerUniforms = new bb, this.__agalAlphaSamplerEnabled = []) : (this.__glslAttribNames = [], this.__glslAttribTypes = [], this.__glslSamplerNames = [], this.__glslUniformLocations = [], this.__glslUniformNames = [], this.__glslUniformTypes = []);
        this.__samplerStates = []
      };
      k["openfl.display3D.Program3D"] = fp;
      fp.__name__ = "openfl.display3D.Program3D";
      fp.prototype = {
        __agalAlphaSamplerEnabled: null,
        __agalAlphaSamplerUniforms: null,
        __agalFragmentUniformMap: null,
        __agalPositionScale: null,
        __agalSamplerUniforms: null,
        __agalSamplerUsageMask: null,
        __agalUniforms: null,
        __agalVertexUniformMap: null,
        __context: null,
        __format: null,
        __glFragmentShader: null,
        __glFragmentSource: null,
        __glProgram: null,
        __glslAttribNames: null,
        __glslAttribTypes: null,
        __glslSamplerNames: null,
        __glslUniformLocations: null,
        __glslUniformNames: null,
        __glslUniformTypes: null,
        __glVertexShader: null,
        __glVertexSource: null,
        __samplerStates: null,
        dispose: function() {
          this.__deleteShaders()
        },
        getAttributeIndex: function(a) {
          if (0 ==
            this.__format) return W.startsWith(a, "va") ? M.parseInt(a.substring(2)) : -1;
          for (var b = 0, c = this.__glslAttribNames.length; b < c;) {
            var d = b++;
            if (this.__glslAttribNames[d] == a) return d
          }
          return -1
        },
        getConstantIndex: function(a) {
          if (0 == this.__format) return W.startsWith(a, "vc") ? M.parseInt(a.substring(2)) : W.startsWith(a, "fc") ? M.parseInt(a.substring(2)) : -1;
          for (var b = 0, c = this.__glslUniformNames.length; b < c;) {
            var d = b++;
            if (this.__glslUniformNames[d] == a) return this.__glslUniformLocations[d]
          }
          return -1
        },
        upload: function(a, b) {
          if (0 ==
            this.__format) {
            var c = [];
            a = Fe.convertToGLSL(a, null);
            b = Fe.convertToGLSL(b, c);
            5 == Na.level && (Na.info(a, {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 399,
              className: "openfl.display3D.Program3D",
              methodName: "upload"
            }), Na.info(b, {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 400,
              className: "openfl.display3D.Program3D",
              methodName: "upload"
            }));
            this.__deleteShaders();
            this.__uploadFromGLSL(a, b);
            this.__buildAGALUniformList();
            b = 0;
            for (a = c.length; b < a;) {
              var d = b++;
              this.__samplerStates[d] = c[d]
            }
          }
        },
        uploadSources: function(a,
          b) {
          if (1 == this.__format) {
            var c = "#ifdef GL_ES\n\t\t\t#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\tprecision highp float;\n\t\t\t#else\n\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t#endif\n\t\t\t" + a,
              d = "#ifdef GL_ES\n\t\t\t#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\tprecision highp float;\n\t\t\t#else\n\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t#endif\n\t\t\t" + b;
            if (c != this.__glVertexSource || d != this.__glFragmentSource) {
              this.__processGLSLData(a, "attribute");
              this.__processGLSLData(a, "uniform");
              this.__processGLSLData(b, "uniform");
              this.__deleteShaders();
              this.__uploadFromGLSL(c, d);
              var e = this.__glslSamplerNames;
              d = this.__glslAttribNames;
              var f = this.__glslAttribTypes;
              a = this.__glslUniformNames;
              this.__glslSamplerNames = [];
              this.__glslAttribNames = [];
              this.__glslAttribTypes = [];
              this.__glslUniformLocations = [];
              b = this.__context.gl;
              for (c = 0; c < e.length;) {
                var g = e[c];
                ++c;
                var h = b.getUniformLocation(this.__glProgram, g);
                this.__glslSamplerNames[h] = g
              }
              c = 0;
              for (e = d.length; c < e;) g = c++, h = b.getAttribLocation(this.__glProgram,
                d[g]), this.__glslAttribNames[h] = d[g], this.__glslAttribTypes[h] = f[g];
              c = 0;
              for (e = a.length; c < e;) g = c++, d = b.getUniformLocation(this.__glProgram, a[g]), this.__glslUniformLocations[g] = d
            }
          }
        },
        __buildAGALUniformList: function() {
          if (1 != this.__format) {
            var a = this.__context.gl;
            this.__agalUniforms.clear();
            this.__agalSamplerUniforms.clear();
            this.__agalAlphaSamplerUniforms.clear();
            this.__agalAlphaSamplerEnabled = [];
            this.__agalSamplerUsageMask = 0;
            var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
            for (var c = new bb,
                d = new bb, e = 0; e < b;) {
              var f = e++,
                g = a.getActiveUniform(this.__glProgram, f),
                h = g.name,
                m = g.size,
                l = g.type;
              g = new jn(this.__context);
              g.name = h;
              g.size = m;
              g.type = l;
              g.location = a.getUniformLocation(this.__glProgram, g.name);
              h = g.name.indexOf("[");
              0 <= h && (g.name = g.name.substring(0, h));
              switch (g.type) {
                case 35674:
                  g.regCount = 2;
                  break;
                case 35675:
                  g.regCount = 3;
                  break;
                case 35676:
                  g.regCount = 4;
                  break;
                default:
                  g.regCount = 1
              }
              g.regCount *= g.size;
              this.__agalUniforms.add(g);
              if ("vcPositionScale" == g.name) this.__agalPositionScale = g;
              else if (W.startsWith(g.name,
                  "vc")) g.regIndex = M.parseInt(g.name.substring(2)), g.regData = this.__context.__vertexConstants, c.add(g);
              else if (W.startsWith(g.name, "fc")) g.regIndex = M.parseInt(g.name.substring(2)), g.regData = this.__context.__fragmentConstants, d.add(g);
              else if (W.startsWith(g.name, "sampler") && -1 == g.name.indexOf("alpha"))
                for (g.regIndex = M.parseInt(g.name.substring(7)), this.__agalSamplerUniforms.add(g), h = 0, m = g.regCount; h < m;) l = h++, this.__agalSamplerUsageMask |= 1 << g.regIndex + l;
              else W.startsWith(g.name, "sampler") && W.endsWith(g.name,
                "_alpha") ? (h = g.name.indexOf("_") - 7, g.regIndex = M.parseInt(g.name.substring(7, 7 + h)) + 4, this.__agalAlphaSamplerUniforms.add(g)) : W.startsWith(g.name, "sampler") && W.endsWith(g.name, "_alphaEnabled") && (g.regIndex = M.parseInt(g.name.substring(7)), this.__agalAlphaSamplerEnabled[g.regIndex] = g);
              5 == Na.level && Na.verbose("" + f + " name:" + g.name + " type:" + g.type + " size:" + g.size + " location:" + M.string(g.location), {
                fileName: "openfl/display3D/Program3D.hx",
                lineNumber: 577,
                className: "openfl.display3D.Program3D",
                methodName: "__buildAGALUniformList"
              })
            }
            this.__agalVertexUniformMap =
              new gk(ca.array(c));
            this.__agalFragmentUniformMap = new gk(ca.array(d))
          }
        },
        __deleteShaders: function() {
          var a = this.__context.gl;
          null != this.__glProgram && (this.__glProgram = null);
          null != this.__glVertexShader && (a.deleteShader(this.__glVertexShader), this.__glVertexShader = null);
          null != this.__glFragmentShader && (a.deleteShader(this.__glFragmentShader), this.__glFragmentShader = null)
        },
        __disable: function() {},
        __enable: function() {
          var a = this.__context.gl;
          a.useProgram(this.__glProgram);
          if (0 == this.__format) {
            this.__agalVertexUniformMap.markAllDirty();
            this.__agalFragmentUniformMap.markAllDirty();
            for (var b = this.__agalSamplerUniforms.h; null != b;) {
              var c = b.item;
              b = b.next;
              if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
              else throw F.thrown(new qd("!!! TODO: uniform location on webgl"));
            }
            for (b = this.__agalAlphaSamplerUniforms.h; null != b;)
              if (c = b.item, b = b.next, 1 == c.regCount) a.uniform1i(c.location, c.regIndex);
              else throw F.thrown(new qd("!!! TODO: uniform location on webgl"));
          }
        },
        __flush: function() {
          0 == this.__format && (this.__agalVertexUniformMap.flush(), this.__agalFragmentUniformMap.flush())
        },
        __getSamplerState: function(a) {
          return this.__samplerStates[a]
        },
        __markDirty: function(a, b, c) {
          1 != this.__format && (a ? this.__agalVertexUniformMap.markDirty(b, c) : this.__agalFragmentUniformMap.markDirty(b, c))
        },
        __processGLSLData: function(a, b) {
          var c = 0,
            d;
          for (d = "uniform" == b ? new nb("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "") : new nb("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", ""); d.matchSub(a, c);) {
            var e = d.matched(1);
            var f = d.matched(2);
            if (!W.startsWith(f, "gl_")) {
              if (W.startsWith(e, "sampler")) this.__glslSamplerNames.push(f);
              else {
                switch (e) {
                  case "bool":
                    c = 0;
                    break;
                  case "bvec2":
                    c = 1;
                    break;
                  case "bvec3":
                    c = 2;
                    break;
                  case "bvec4":
                    c = 3;
                    break;
                  case "dvec2":
                  case "vec2":
                    c = 5;
                    break;
                  case "dvec3":
                  case "vec3":
                    c = 6;
                    break;
                  case "double":
                  case "float":
                    c = 4;
                    break;
                  case "ivec3":
                  case "uvec3":
                    c = 10;
                    break;
                  case "ivec4":
                  case "uvec4":
                    c = 11;
                    break;
                  case "mat2":
                  case "mat2x2":
                    c = 12;
                    break;
                  case "mat2x3":
                    c = 13;
                    break;
                  case "mat2x4":
                    c = 14;
                    break;
                  case "mat3x2":
                    c = 15;
                    break;
                  case "mat3":
                  case "mat3x3":
                    c = 16;
                    break;
                  case "mat3x4":
                    c = 17;
                    break;
                  case "mat4":
                  case "mat4x4":
                    c = 20;
                    break;
                  case "mat4x2":
                    c =
                      18;
                    break;
                  case "mat4x3":
                    c = 19;
                    break;
                  case "int":
                  case "uint":
                    c = 8;
                    break;
                  case "ivec2":
                  case "uvec2":
                    c = 9;
                    break;
                  case "dvec4":
                  case "vec4":
                    c = 7;
                    break;
                  default:
                    c = null
                }
                "uniform" == b ? (this.__glslUniformNames.push(f), this.__glslUniformTypes.push(c)) : (this.__glslAttribNames.push(f), this.__glslAttribTypes.push(c))
              }
              f = d.matchedPos();
              c = f.pos + f.len
            }
          }
        },
        __setPositionScale: function(a) {
          1 != this.__format && null != this.__agalPositionScale && this.__context.gl.uniform4fv(this.__agalPositionScale.location, a)
        },
        __setSamplerState: function(a,
          b) {
          this.__samplerStates[a] = b
        },
        __uploadFromGLSL: function(a, b) {
          var c = this.__context.gl;
          this.__glVertexSource = a;
          this.__glFragmentSource = b;
          this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
          c.shaderSource(this.__glVertexShader, a);
          c.compileShader(this.__glVertexShader);
          if (0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)) {
            var d = "Error compiling vertex shader\n" + c.getShaderInfoLog(this.__glVertexShader);
            Na.error(d + ("\n" + a), {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 869,
              className: "openfl.display3D.Program3D",
              methodName: "__uploadFromGLSL"
            })
          }
          this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
          c.shaderSource(this.__glFragmentShader, b);
          c.compileShader(this.__glFragmentShader);
          0 == c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) && (d = "Error compiling fragment shader\n" + c.getShaderInfoLog(this.__glFragmentShader), Na.error(d + ("\n" + b), {
            fileName: "openfl/display3D/Program3D.hx",
            lineNumber: 881,
            className: "openfl.display3D.Program3D",
            methodName: "__uploadFromGLSL"
          }));
          this.__glProgram = c.createProgram();
          if (0 == this.__format)
            for (b = 0; 16 > b;) {
              var e = b++;
              d = "va" + e; - 1 != a.indexOf(" " + d) && c.bindAttribLocation(this.__glProgram, e, d)
            } else
              for (b = 0, a = this.__glslAttribNames; b < a.length;)
                if (d = a[b], ++b, -1 < d.indexOf("Position") && W.startsWith(d, "openfl_")) {
                  c.bindAttribLocation(this.__glProgram, 0, d);
                  break
                } c.attachShader(this.__glProgram, this.__glVertexShader);
          c.attachShader(this.__glProgram, this.__glFragmentShader);
          c.linkProgram(this.__glProgram);
          0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) && (d = "Unable to initialize the shader program\n" +
            c.getProgramInfoLog(this.__glProgram), Na.error(d, {
              fileName: "openfl/display3D/Program3D.hx",
              lineNumber: 922,
              className: "openfl.display3D.Program3D",
              methodName: "__uploadFromGLSL"
            }))
        },
        __class__: fp
      };
      var jn = function(a) {
        this.context = a;
        this.isDirty = !0;
        this.regDataPointer = new Uf(null, 0)
      };
      k["openfl.display3D.Uniform"] = jn;
      jn.__name__ = "openfl.display3D.Uniform";
      jn.prototype = {
        name: null,
        location: null,
        type: null,
        size: null,
        regData: null,
        regIndex: null,
        regCount: null,
        isDirty: null,
        context: null,
        regDataPointer: null,
        flush: function() {
          var a =
            this.context.gl,
            b = 4 * this.regIndex;
          switch (this.type) {
            case 35664:
              wr.uniform2fv(a, this.location, this.regData.subarray(b, b + 2 * this.regCount));
              break;
            case 35665:
              var c = this.location;
              b = this.regData.subarray(b, b + 3 * this.regCount);
              var d = null;
              null != d ? a.uniform3fv(c, b, d, null) : a.uniform3fv(c, b);
              break;
            case 35666:
              c = this.location;
              b = this.regData.subarray(b, b + 4 * this.regCount);
              d = null;
              null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b);
              break;
            case 35674:
              cc.uniformMatrix2fv(a, this.location, !1, this.regData.subarray(b, b + 4 *
                this.size));
              break;
            case 35675:
              cc.uniformMatrix3fv(a, this.location, !1, this.regData.subarray(b, b + 9 * this.size));
              break;
            case 35676:
              cc.uniformMatrix4fv(a, this.location, !1, this.regData.subarray(b, b + 16 * this.size));
              break;
            default:
              c = this.location, b = this.regData.subarray(b, b + 4 * this.regCount), d = null, null != d ? a.uniform4fv(c, b, d, null) : a.uniform4fv(c, b)
          }
        },
        __getUniformRegisters: function(a, b) {
          return this.regData.subarray(a, a + b)
        },
        __class__: jn
      };
      var gk = function(a) {
        this.__uniforms = a;
        this.__uniforms.sort(function(a, b) {
          return Y.compare(a.regIndex,
            b.regIndex)
        });
        var b = 0;
        a = 0;
        for (var c = this.__uniforms; a < c.length;) {
          var d = c[a];
          ++a;
          d.regIndex + d.regCount > b && (b = d.regIndex + d.regCount)
        }
        this.__registerLookup = Fb.toObjectVector(null, b);
        a = 0;
        for (c = this.__uniforms; a < c.length;) {
          d = c[a];
          ++a;
          b = 0;
          for (var e = d.regCount; b < e;) {
            var f = b++;
            this.__registerLookup.set(d.regIndex + f, d)
          }
        }
        this.__anyDirty = this.__allDirty = !0
      };
      k["openfl.display3D.UniformMap"] = gk;
      gk.__name__ = "openfl.display3D.UniformMap";
      gk.prototype = {
        __allDirty: null,
        __anyDirty: null,
        __registerLookup: null,
        __uniforms: null,
        flush: function() {
          if (this.__anyDirty) {
            for (var a = 0, b = this.__uniforms; a < b.length;) {
              var c = b[a];
              ++a;
              if (this.__allDirty || c.isDirty) c.flush(), c.isDirty = !1
            }
            this.__anyDirty = this.__allDirty = !1
          }
        },
        markAllDirty: function() {
          this.__anyDirty = this.__allDirty = !0
        },
        markDirty: function(a, b) {
          if (!this.__allDirty)
            for (b = a + b, b > this.__registerLookup.get_length() && (b = this.__registerLookup.get_length()); a < b;) {
              var c = this.__registerLookup.get(a);
              null != c ? (this.__anyDirty = c.isDirty = !0, a = c.regIndex + c.regCount) : ++a
            }
        },
        __class__: gk
      };
      var gp =
        function(a, b, c, d) {
          this.__context = a;
          this.__numVertices = b;
          this.__vertexSize = c;
          a = this.__context.gl;
          this.__id = a.createBuffer();
          this.__stride = 4 * this.__vertexSize;
          this.__usage = 0 == br.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW
        };
      k["openfl.display3D.VertexBuffer3D"] = gp;
      gp.__name__ = "openfl.display3D.VertexBuffer3D";
      gp.prototype = {
        __context: null,
        __data: null,
        __id: null,
        __memoryUsage: null,
        __numVertices: null,
        __stride: null,
        __tempFloat32Array: null,
        __usage: null,
        __vertexSize: null,
        dispose: function() {
          this.__context.gl.deleteBuffer(this.__id)
        },
        uploadFromByteArray: function(a, b, c, d) {
          b += c * this.__stride;
          d *= this.__vertexSize;
          a = Cb.toArrayBuffer(a);
          null == b && (b = 0);
          a = null != a ? null == d ? new Float32Array(a, b) : new Float32Array(a, b, d) : null;
          this.uploadFromTypedArray(Xg.toArrayBufferView(a))
        },
        uploadFromTypedArray: function(a, b) {
          null != a && (b = this.__context.gl, this.__context.__bindGLArrayBuffer(this.__id), cc.bufferData(b, b.ARRAY_BUFFER, a, this.__usage))
        },
        uploadFromVector: function(a, b, c) {
          if (null != a) {
            b *= this.__vertexSize;
            var d = c * this.__vertexSize;
            c = b + d;
            var e = this.__tempFloat32Array;
            if (null == this.__tempFloat32Array || this.__tempFloat32Array.length < d) this.__tempFloat32Array = null != d ? new Float32Array(d) : null, null != e && this.__tempFloat32Array.set(e);
            for (d = b; d < c;) e = d++, this.__tempFloat32Array[e - b] = a.get(e);
            this.uploadFromTypedArray(Xg.toArrayBufferView(this.__tempFloat32Array))
          }
        },
        __class__: gp
      };
      var Fe = function() {};
      k["openfl.display3D._internal.AGALConverter"] = Fe;
      Fe.__name__ = "openfl.display3D._internal.AGALConverter";
      Fe.prefixFromType = function(a, b) {
        switch (a) {
          case 0:
            return "va";
          case 1:
            return b ==
              Gg.VERTEX ? "vc" : "fc";
          case 2:
            return b == Gg.VERTEX ? "vt" : "ft";
          case 3:
            return "output_";
          case 4:
            return "v";
          case 5:
            return "sampler";
          default:
            throw F.thrown(new qd("Invalid data!"));
        }
      };
      Fe.readUInt64 = function(a) {
        var b = a.readInt();
        a = a.readInt();
        return new ab(a, b)
      };
      Fe.convertToGLSL = function(a, b) {
        a.position = 0;
        a.__endian = 1;
        var c = a.readByte() & 255;
        if (176 == c) return a.readUTF();
        if (160 != c) throw F.thrown(new qd("Magic value must be 0xA0, may not be AGAL"));
        var d = a.readInt();
        if (1 != d) throw F.thrown(new qd("Version must be 1"));
        if (161 != (a.readByte() & 255)) throw F.thrown(new qd("Shader type ID must be 0xA1"));
        c = 0 == (a.readByte() & 255) ? Gg.VERTEX : Gg.FRAGMENT;
        for (var e = new kn, f = "";;) {
          d = a.position;
          if (!Ya.gt(Cb.get_length(a), d)) break;
          var g = a.readInt();
          d = a.readUnsignedInt();
          var h = Fe.readUInt64(a),
            m = Fe.readUInt64(a);
          d = $i.parse(d, c);
          h = ii.parse(h, c, d.mask);
          var l = ii.parse(m, c, d.mask);
          f += "\t";
          switch (g) {
            case 0:
              f += M.string(d.toGLSL() + " = " + h.toGLSL() + "; // mov");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 1:
              f += M.string(d.toGLSL() +
                " = " + h.toGLSL() + " + " + l.toGLSL() + "; // add");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 2:
              f += M.string(d.toGLSL() + " = " + h.toGLSL() + " - " + l.toGLSL() + "; // sub");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 3:
              f += M.string(d.toGLSL() + " = " + h.toGLSL() + " * " + l.toGLSL() + "; // mul");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 4:
              f += M.string(d.toGLSL() + " = " + h.toGLSL() + " / " + l.toGLSL() + "; // div");
              e.addDR(d,
                xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 5:
              f = -1 < h.toGLSL().indexOf(".") ? f + M.string(d.toGLSL() + " = 1.0 / " + h.toGLSL() + "; // rcp") : f + M.string(d.toGLSL() + " = vec4(1) / " + h.toGLSL() + "; // rcp");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 6:
              f += M.string(d.toGLSL() + " = min(" + h.toGLSL() + ", " + l.toGLSL() + "); // min");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 7:
              f += M.string(d.toGLSL() + " = max(" + h.toGLSL() + ", " + l.toGLSL() + "); // max");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 8:
              f += M.string(d.toGLSL() + " = fract(" + h.toGLSL() + "); // frc");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 9:
              f += M.string(d.toGLSL() + " = sqrt(" + h.toGLSL() + "); // sqrt");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 10:
              f += M.string(d.toGLSL() + " = inversesqrt(" + h.toGLSL() + "); // rsq");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 11:
              f += M.string(d.toGLSL() + " = pow(" + h.toGLSL() + ", " + l.toGLSL() +
                "); // pow");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 12:
              f += M.string(d.toGLSL() + " = log2(" + h.toGLSL() + "); // log");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 13:
              f += M.string(d.toGLSL() + " = exp2(" + h.toGLSL() + "); // exp");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 14:
              f += M.string(d.toGLSL() + " = normalize(" + h.toGLSL() + "); // normalize");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 15:
              f += M.string(d.toGLSL() + " = sin(" + h.toGLSL() +
                "); // sin");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 16:
              f += M.string(d.toGLSL() + " = cos(" + h.toGLSL() + "); // cos");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 17:
              h.sourceMask = l.sourceMask = 7;
              f += M.string(d.toGLSL() + " = cross(vec3(" + h.toGLSL() + "), vec3(" + l.toGLSL() + ")); // crs");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 18:
              h.sourceMask = l.sourceMask = 7;
              f += M.string(d.toGLSL() + " = vec4(dot(vec3(" + h.toGLSL() + "), vec3(" + l.toGLSL() + ")))" + d.getWriteMask() +
                "; // dp3");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 19:
              h.sourceMask = l.sourceMask = 15;
              f += M.string(d.toGLSL() + " = vec4(dot(vec4(" + h.toGLSL() + "), vec4(" + l.toGLSL() + ")))" + d.getWriteMask() + "; // dp4");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 20:
              f += M.string(d.toGLSL() + " = abs(" + h.toGLSL() + "); // abs");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 21:
              f += M.string(d.toGLSL() + " = -" + h.toGLSL() + "; // neg");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 22:
              f += M.string(d.toGLSL() + " = clamp(" + h.toGLSL() + ", 0.0, 1.0); // saturate");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              break;
            case 23:
              g = e.getRegisterUsage(l);
              g != xa.VECTOR_4 && g != xa.VECTOR_4_ARRAY ? (f += M.string(d.toGLSL() + " = " + h.toGLSL() + " * mat3(" + l.toGLSL(!1) + "); // m33"), e.addDR(d, xa.VECTOR_4), e.addSR(h, xa.VECTOR_4), e.addSR(l, xa.MATRIX_4_4)) : (h.sourceMask = l.sourceMask = 7, f += M.string(d.toGLSL() + " = vec3(dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 0) + "), dot(" + h.toGLSL(!0) +
                "," + l.toGLSL(!0, 1) + "),dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 2) + ")); // m33"), e.addDR(d, xa.VECTOR_4), e.addSR(h, xa.VECTOR_4), e.addSR(l, xa.VECTOR_4, 0), e.addSR(l, xa.VECTOR_4, 1), e.addSR(l, xa.VECTOR_4, 2));
              break;
            case 24:
              g = e.getRegisterUsage(l);
              g != xa.VECTOR_4 && g != xa.VECTOR_4_ARRAY ? (f += M.string(d.toGLSL() + " = " + h.toGLSL() + " * " + l.toGLSL(!1) + "; // m44"), e.addDR(d, xa.VECTOR_4), e.addSR(h, xa.VECTOR_4), e.addSR(l, xa.MATRIX_4_4)) : (h.sourceMask = l.sourceMask = 15, f += M.string(d.toGLSL() + " = vec4(dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0,
                0) + "), dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 1) + "), dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 2) + "), dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 3) + ")); // m44"), e.addDR(d, xa.VECTOR_4), e.addSR(h, xa.VECTOR_4), e.addSR(l, xa.VECTOR_4, 0), e.addSR(l, xa.VECTOR_4, 1), e.addSR(l, xa.VECTOR_4, 2), e.addSR(l, xa.VECTOR_4, 3));
              break;
            case 25:
              d.mask &= 7;
              g = e.getRegisterUsage(l);
              g != xa.VECTOR_4 && g != xa.VECTOR_4_ARRAY ? (f += M.string(d.toGLSL() + " = " + h.toGLSL() + " * " + l.toGLSL(!1) + "; // m34"), e.addDR(d, xa.VECTOR_4), e.addSR(h, xa.VECTOR_4), e.addSR(l,
                xa.MATRIX_4_4)) : (h.sourceMask = l.sourceMask = 15, f += M.string(d.toGLSL() + " = vec3(dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 0) + "), dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 1) + "),dot(" + h.toGLSL(!0) + "," + l.toGLSL(!0, 2) + ")); // m34"), e.addDR(d, xa.VECTOR_4), e.addSR(h, xa.VECTOR_4), e.addSR(l, xa.VECTOR_4, 0), e.addSR(l, xa.VECTOR_4, 1), e.addSR(l, xa.VECTOR_4, 2));
              break;
            case 39:
              h.sourceMask = 15;
              f += M.string("if (any(lessThan(" + h.toGLSL() + ", vec4(0)))) discard;");
              e.addSR(h, xa.VECTOR_4);
              break;
            case 40:
              l = aj.parse(m, c);
              switch (l.d) {
                case 0:
                  2 ==
                    l.t ? (h.sourceMask = 3, e.addSaR(l, xa.SAMPLER_2D_ALPHA), f += M.string("if (" + l.toGLSL() + "_alphaEnabled) {\n"), f += M.string("\t\t" + d.toGLSL() + " = vec4(texture2D(" + l.toGLSL() + ", " + h.toGLSL() + ").xyz, texture2D(" + l.toGLSL() + "_alpha, " + h.toGLSL() + ").x); // tex + alpha\n"), f += "\t} else {\n", f += M.string("\t\t" + d.toGLSL() + " = texture2D(" + l.toGLSL() + ", " + h.toGLSL() + "); // tex\n"), f += "\t}") : (h.sourceMask = 3, e.addSaR(l, xa.SAMPLER_2D), f += M.string(d.toGLSL() + " = texture2D(" + l.toGLSL() + ", " + h.toGLSL() + "); // tex"));
                  break;
                case 1:
                  2 == l.t ? (h.sourceMask = 7, e.addSaR(l, xa.SAMPLER_CUBE_ALPHA), f += M.string("if (" + l.toGLSL() + "_alphaEnabled) {\n"), f += M.string("\t\t" + d.toGLSL() + " = vec4(textureCube(" + l.toGLSL() + ", " + h.toGLSL() + ").xyz, textureCube(" + l.toGLSL() + "_alpha, " + h.toGLSL() + ").x); // tex + alpha\n"), f += "\t} else {\n", f += M.string("\t\t" + d.toGLSL() + " = textureCube(" + l.toGLSL() + ", " + h.toGLSL() + "); // tex"), f += "\t}") : (h.sourceMask = 7, f += M.string(d.toGLSL() + " = textureCube(" + l.toGLSL() + ", " + h.toGLSL() + "); // tex"), e.addSaR(l,
                    xa.SAMPLER_CUBE))
              }
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              null != b && (b[l.n] = l.toSamplerState());
              break;
            case 41:
              h.sourceMask = l.sourceMask = 15;
              f += M.string(d.toGLSL() + " = vec4(greaterThanEqual(" + h.toGLSL() + ", " + l.toGLSL() + "))" + d.getWriteMask() + "; // ste");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 42:
              h.sourceMask = l.sourceMask = 15;
              f += M.string(d.toGLSL() + " = vec4(lessThan(" + h.toGLSL() + ", " + l.toGLSL() + "))" + d.getWriteMask() + "; // slt");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h,
                xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 44:
              h.sourceMask = l.sourceMask = 15;
              f += M.string(d.toGLSL() + " = vec4(equal(" + h.toGLSL() + ", " + l.toGLSL() + "))" + d.getWriteMask() + "; // seq");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            case 45:
              h.sourceMask = l.sourceMask = 15;
              f += M.string(d.toGLSL() + " = vec4(notEqual(" + h.toGLSL() + ", " + l.toGLSL() + "))" + d.getWriteMask() + "; // sne");
              e.addDR(d, xa.VECTOR_4);
              e.addSR(h, xa.VECTOR_4);
              e.addSR(l, xa.VECTOR_4);
              break;
            default:
              throw F.thrown(new qd("Opcode " +
                g));
          }
          f += "\n"
        }
        null == Fe.limitedProfile && (d = q.context.getParameter(7938), Fe.limitedProfile = -1 < d.indexOf("OpenGL ES") || -1 < d.indexOf("WebGL"));
        a = "" + M.string("// AGAL " + (c == Gg.VERTEX ? "vertex" : "fragment") + " shader\n");
        a = Fe.limitedProfile ? a + "#version 100\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n" : a + "#version 120\n";
        a += M.string(e.toGLSL(!1));
        c == Gg.VERTEX && (a += "uniform vec4 vcPositionScale;\n");
        a = a + "void main() {\n" + M.string(e.toGLSL(!0));
        a += M.string(f);
        c == Gg.VERTEX && (a += "\tgl_Position *= vcPositionScale;\n");
        return a + "}\n"
      };
      var $i = function() {};
      k["openfl.display3D._internal._AGALConverter.DestRegister"] = $i;
      $i.__name__ = "openfl.display3D._internal._AGALConverter.DestRegister";
      $i.parse = function(a, b) {
        var c = new $i;
        c.programType = b;
        c.type = a >>> 24 & 15;
        c.mask = a >>> 16 & 15;
        c.n = a & 65535;
        return c
      };
      $i.prototype = {
        mask: null,
        n: null,
        programType: null,
        type: null,
        getWriteMask: function() {
          var a = ".";
          0 != (this.mask & 1) && (a += "x");
          0 != (this.mask & 2) && (a += "y");
          0 != (this.mask & 4) && (a +=
            "z");
          0 != (this.mask & 8) && (a += "w");
          return a
        },
        toGLSL: function(a) {
          null == a && (a = !0);
          var b = 3 == this.type ? this.programType == Gg.VERTEX ? "gl_Position" : "gl_FragColor" : Fe.prefixFromType(this.type, this.programType) + this.n;
          a && 15 != this.mask && (b += this.getWriteMask());
          return b
        },
        __class__: $i
      };
      var Gg = O["openfl.display3D._internal._AGALConverter.ProgramType"] = {
        __ename__: "openfl.display3D._internal._AGALConverter.ProgramType",
        __constructs__: null,
        VERTEX: {
          _hx_name: "VERTEX",
          _hx_index: 0,
          __enum__: "openfl.display3D._internal._AGALConverter.ProgramType",
          toString: v
        },
        FRAGMENT: {
          _hx_name: "FRAGMENT",
          _hx_index: 1,
          __enum__: "openfl.display3D._internal._AGALConverter.ProgramType",
          toString: v
        }
      };
      Gg.__constructs__ = [Gg.VERTEX, Gg.FRAGMENT];
      var kn = function() {
        this.mEntries = []
      };
      k["openfl.display3D._internal.RegisterMap"] = kn;
      kn.__name__ = "openfl.display3D._internal.RegisterMap";
      kn.prototype = {
        mEntries: null,
        add: function(a, b, c, d) {
          for (var e = 0, f = this.mEntries; e < f.length;) {
            var g = f[e];
            ++e;
            if (g.type == a && g.name == b && g.number == c) {
              if (g.usage != d) throw F.thrown(new qd("Cannot use register in multiple ways yet (mat4/vec4)"));
              return
            }
          }
          g = new hp;
          g.type = a;
          g.name = b;
          g.number = c;
          g.usage = d;
          this.mEntries.push(g)
        },
        addDR: function(a, b) {
          this.add(a.type, a.toGLSL(!1), a.n, b)
        },
        addSaR: function(a, b) {
          this.add(a.type, a.toGLSL(), a.n, b)
        },
        addSR: function(a, b, c) {
          null == c && (c = 0);
          0 != a.d ? (this.add(a.itype, Fe.prefixFromType(a.itype, a.programType) + a.n, a.n, xa.VECTOR_4), this.add(a.type, Fe.prefixFromType(a.type, a.programType) + a.o, a.o, xa.VECTOR_4_ARRAY)) : this.add(a.type, a.toGLSL(!1, c), a.n + c, b)
        },
        getRegisterUsage: function(a) {
          return 0 != a.d ? xa.VECTOR_4_ARRAY :
            this.getUsage(a.type, a.toGLSL(!1), a.n)
        },
        getUsage: function(a, b, c) {
          for (var d = 0, e = this.mEntries; d < e.length;) {
            var f = e[d];
            ++d;
            if (f.type == a && f.name == b && f.number == c) return f.usage
          }
          return xa.UNUSED
        },
        toGLSL: function(a) {
          this.mEntries.sort(function(a, b) {
            return a.number - b.number
          });
          this.mEntries.sort(function(a, b) {
            return K.__cast(a.type, rc) - K.__cast(b.type, rc)
          });
          for (var b = "", c = 0, d = this.mEntries.length; c < d;) {
            var e = c++;
            e = this.mEntries[e];
            if (!(a && 2 != e.type || !a && 2 == e.type) && 3 != e.type) {
              switch (e.type) {
                case 0:
                  b += "attribute ";
                  break;
                case 1:
                  b += "uniform ";
                  break;
                case 2:
                  b += "\t";
                  break;
                case 3:
                  break;
                case 4:
                  b += "varying ";
                  break;
                case 5:
                  b += "uniform ";
                  break;
                default:
                  throw F.thrown(new qd);
              }
              switch (e.usage._hx_index) {
                case 0:
                  Na.info("Missing switch patten: RegisterUsage.UNUSED", {
                    fileName: "openfl/display3D/_internal/AGALConverter.hx",
                    lineNumber: 750,
                    className: "openfl.display3D._internal.RegisterMap",
                    methodName: "toGLSL"
                  });
                  break;
                case 1:
                  b += "vec4 ";
                  break;
                case 2:
                  b += "mat4 ";
                  break;
                case 3:
                  b += "sampler2D ";
                  break;
                case 5:
                  b += "samplerCube ";
                  break;
                case 7:
                  b +=
                    "vec4 "
              }
              e.usage == xa.SAMPLER_2D_ALPHA ? (b += "sampler2D ", b += M.string(e.name), b += ";\n", b += "uniform ", b += "sampler2D ", b += M.string(e.name + "_alpha"), b += ";\n", b += "uniform ", b += "bool ", b += M.string(e.name + "_alphaEnabled")) : e.usage == xa.SAMPLER_CUBE_ALPHA ? (b += "samplerCube ", b += M.string(e.name), b += ";\n", b += "uniform ", b += "samplerCube ", b += M.string(e.name + "_alpha"), b += ";\n", b += "uniform ", b += "bool ", b += M.string(e.name + "_alphaEnabled")) : b = e.usage == xa.VECTOR_4_ARRAY ? b + M.string(e.name + "[128]") : b + M.string(e.name);
              b +=
                ";\n"
            }
          }
          return b
        },
        __class__: kn
      };
      var hp = function() {};
      k["openfl.display3D._internal._AGALConverter.RegisterMapEntry"] = hp;
      hp.__name__ = "openfl.display3D._internal._AGALConverter.RegisterMapEntry";
      hp.prototype = {
        name: null,
        number: null,
        type: null,
        usage: null,
        __class__: hp
      };
      var xa = O["openfl.display3D._internal._AGALConverter.RegisterUsage"] = {
        __ename__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
        __constructs__: null,
        UNUSED: {
          _hx_name: "UNUSED",
          _hx_index: 0,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        VECTOR_4: {
          _hx_name: "VECTOR_4",
          _hx_index: 1,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        MATRIX_4_4: {
          _hx_name: "MATRIX_4_4",
          _hx_index: 2,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        SAMPLER_2D: {
          _hx_name: "SAMPLER_2D",
          _hx_index: 3,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        SAMPLER_2D_ALPHA: {
          _hx_name: "SAMPLER_2D_ALPHA",
          _hx_index: 4,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        SAMPLER_CUBE: {
          _hx_name: "SAMPLER_CUBE",
          _hx_index: 5,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        SAMPLER_CUBE_ALPHA: {
          _hx_name: "SAMPLER_CUBE_ALPHA",
          _hx_index: 6,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        },
        VECTOR_4_ARRAY: {
          _hx_name: "VECTOR_4_ARRAY",
          _hx_index: 7,
          __enum__: "openfl.display3D._internal._AGALConverter.RegisterUsage",
          toString: v
        }
      };
      xa.__constructs__ = [xa.UNUSED, xa.VECTOR_4, xa.MATRIX_4_4, xa.SAMPLER_2D, xa.SAMPLER_2D_ALPHA,
        xa.SAMPLER_CUBE, xa.SAMPLER_CUBE_ALPHA, xa.VECTOR_4_ARRAY
      ];
      var aj = function() {};
      k["openfl.display3D._internal._AGALConverter.SamplerRegister"] = aj;
      aj.__name__ = "openfl.display3D._internal._AGALConverter.SamplerRegister";
      aj.parse = function(a, b) {
        var c = new aj;
        c.programType = b;
        b = 60;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
        b = b.low & 15;
        c.f = b;
        b = 56;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b -
          32);
        b = b.low & 15;
        c.m = b;
        b = 52;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
        b = b.low & 15;
        c.w = b;
        b = 48;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
        b = b.low & 15;
        c.s = b;
        b = 44;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
        b = b.low & 15;
        c.d = b;
        b = 40;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31,
          a.high >> b - 32);
        b = b.low & 15;
        c.t = b;
        b = 32;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
        b = b.low & 15;
        c.type = b;
        b = 16;
        b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
        b = b.low & 255;
        c.b = b;
        b = a.low & 65535;
        c.n = b;
        return c
      };
      aj.prototype = {
        b: null,
        d: null,
        f: null,
        m: null,
        n: null,
        programType: null,
        s: null,
        t: null,
        type: null,
        w: null,
        toGLSL: function() {
          return Fe.prefixFromType(this.type, this.programType) + this.n
        },
        toSamplerState: function() {
          switch (this.f) {
            case 0:
              var a =
                5;
              break;
            case 1:
              a = 4;
              break;
            default:
              throw F.thrown(new qd);
          }
          switch (this.m) {
            case 0:
              var b = 2;
              break;
            case 1:
              b = 1;
              break;
            case 2:
              b = 0;
              break;
            default:
              throw F.thrown(new qd);
          }
          switch (this.w) {
            case 0:
              var c = 0;
              break;
            case 1:
              c = 2;
              break;
            default:
              throw F.thrown(new qd);
          }
          return new Tg(c, a, b, (this.b << 24 >> 24) / 8, 4 == (this.s & 4), 1 == (this.s & 1), 2 == this.t)
        },
        __class__: aj
      };
      var ii = function() {};
      k["openfl.display3D._internal._AGALConverter.SourceRegister"] = ii;
      ii.__name__ = "openfl.display3D._internal._AGALConverter.SourceRegister";
      ii.parse =
        function(a, b, c) {
          var d = new ii;
          d.programType = b;
          b = 63;
          b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
          b = b.low & 1;
          d.d = b;
          b = 48;
          b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
          b = b.low & 3;
          d.q = b;
          b = 40;
          b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
          b = b.low & 15;
          d.itype = b;
          b = 32;
          b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>>
            b) : new ab(a.high >> 31, a.high >> b - 32);
          b = b.low & 15;
          d.type = b;
          b = 24;
          b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
          b = b.low & 255;
          d.s = b;
          b = 16;
          b = 0 == b ? new ab(a.high, a.low) : 32 > b ? new ab(a.high >> b, a.high << 32 - b | a.low >>> b) : new ab(a.high >> 31, a.high >> b - 32);
          b = b.low & 255;
          d.o = b;
          b = a.low & 65535;
          d.n = b;
          d.sourceMask = c;
          return d
        };
      ii.prototype = {
        d: null,
        itype: null,
        n: null,
        o: null,
        programType: null,
        q: null,
        s: null,
        sourceMask: null,
        type: null,
        toGLSL: function(a, b) {
          null == b && (b = 0);
          null ==
            a && (a = !0);
          if (3 == this.type) return this.programType == Gg.VERTEX ? "gl_Position" : "gl_FragColor";
          var c = 228 == this.s && 15 == this.sourceMask,
            d = "";
          if (5 != this.type && !c) {
            if (0 != (this.sourceMask & 1)) switch (this.s & 3) {
              case 0:
                d += "x";
                break;
              case 1:
                d += "y";
                break;
              case 2:
                d += "z";
                break;
              case 3:
                d += "w"
            }
            if (0 != (this.sourceMask & 2)) switch (this.s >> 2 & 3) {
              case 0:
                d += "x";
                break;
              case 1:
                d += "y";
                break;
              case 2:
                d += "z";
                break;
              case 3:
                d += "w"
            }
            if (0 != (this.sourceMask & 4)) switch (this.s >> 4 & 3) {
              case 0:
                d += "x";
                break;
              case 1:
                d += "y";
                break;
              case 2:
                d += "z";
                break;
              case 3:
                d +=
                  "w"
            }
            if (0 != (this.sourceMask & 8)) switch (this.s >> 6 & 3) {
              case 0:
                d += "x";
                break;
              case 1:
                d += "y";
                break;
              case 2:
                d += "z";
                break;
              case 3:
                d += "w"
            }
          }
          c = Fe.prefixFromType(this.type, this.programType);
          if (0 == this.d) c += this.n + b;
          else {
            c += this.o;
            var e = "";
            switch (this.q) {
              case 0:
                e = "x";
                break;
              case 1:
                e = "y";
                break;
              case 2:
                e = "z";
                break;
              case 3:
                e = "w"
            }
            e = Fe.prefixFromType(this.itype, this.programType) + this.n + "." + e;
            c += "[ int(" + e + ") +" + b + "]"
          }
          a && "" != d && (c += "." + d);
          return c
        },
        __class__: ii
      };
      var hk = function(a, b) {
        this.version = 0;
        a.position = b;
        var c = a.readUTFBytes(3);
        a.position = b;
        if ("ATF" != c) throw F.thrown(new qd("ATF signature not found"));
        255 == a.b[b + 6] ? (this.version = a.b[b + 7], a.position = b + 8, c = this.__readUInt32(a)) : (this.version = 0, a.position = b + 3, c = this.__readUInt24(a));
        if (Ya.gt(K.__cast(b + c, rc), Cb.get_length(a))) throw F.thrown(new qd("ATF length exceeds byte array length"));
        this.data = a
      };
      k["openfl.display3D._internal.ATFReader"] = hk;
      hk.__name__ = "openfl.display3D._internal.ATFReader";
      hk.prototype = {
        atfFormat: null,
        cubeMap: null,
        data: null,
        height: null,
        mipCount: null,
        version: null,
        width: null,
        readHeader: function(a, b, c) {
          var d = this.data.readUnsignedByte(),
            e = d >>> 7;
          if (!c && 0 != e) throw F.thrown(new qd("ATF Cube map not expected"));
          if (c && 1 != e) throw F.thrown(new qd("ATF Cube map expected"));
          this.cubeMap = c;
          this.atfFormat = d & 127;
          3 != this.atfFormat && 5 != this.atfFormat && Na.warn("Only ATF block compressed textures without JPEG-XR+LZMA are supported", {
            fileName: "openfl/display3D/_internal/ATFReader.hx",
            lineNumber: 96,
            className: "openfl.display3D._internal.ATFReader",
            methodName: "readHeader"
          });
          this.width =
            1 << this.data.readUnsignedByte();
          this.height = 1 << this.data.readUnsignedByte();
          if (this.width != a || this.height != b) throw F.thrown(new qd("ATF width and height dont match"));
          this.mipCount = this.data.readUnsignedByte();
          return 5 == this.atfFormat
        },
        readTextures: function(a) {
          for (var b = 3 > this.version ? 3 : 4, c = 0, d = this.cubeMap ? 6 : 1; c < d;)
            for (var e = c++, f = 0, g = this.mipCount; f < g;)
              for (var h = f++, m = 0, l = b; m < l;) {
                var p = m++,
                  n = 0 == this.version ? this.__readUInt24(this.data) : this.__readUInt32(this.data);
                if (Ya.gt(this.data.position + n,
                    Cb.get_length(this.data))) throw F.thrown(new qd("Block length exceeds ATF file length"));
                if (Ya.gt(n, 0)) {
                  var q = new ib(new ArrayBuffer(n)),
                    k = this.data,
                    u = Cb.fromBytes(q),
                    v = 0,
                    r = n;
                  null == r && (r = 0);
                  null == v && (v = 0);
                  k.readBytes(u, v, r);
                  a(e, h, p, this.width >> h, this.height >> h, n, q)
                }
              }
        },
        __readUInt24: function(a) {
          var b = a.readUnsignedByte() << 16;
          b |= a.readUnsignedByte() << 8;
          return b |= a.readUnsignedByte()
        },
        __readUInt32: function(a) {
          var b = a.readUnsignedByte() << 24;
          b |= a.readUnsignedByte() << 16;
          b |= a.readUnsignedByte() << 8;
          return b |=
            a.readUnsignedByte()
        },
        __class__: hk
      };
      var dk = function() {
        this.backBufferEnableDepthAndStencil = !1;
        this.blendDestinationAlphaFactor = 9;
        this.blendSourceAlphaFactor = 2;
        this.blendDestinationRGBFactor = 9;
        this.blendSourceRGBFactor = 2;
        this.colorMaskAlpha = this.colorMaskBlue = this.colorMaskGreen = this.colorMaskRed = !0;
        this.culling = 3;
        this.depthCompareMode = 4;
        this.depthMask = !0;
        this.samplerStates = [];
        this.scissorRectangle = new ha;
        this.stencilCompareMode = 0;
        this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
        this.stencilReadMask =
          255;
        this.stencilReferenceValue = 0;
        this.stencilTriangleFace = 2;
        this.stencilWriteMask = 255;
        this.textures = [];
        this.__frontFaceGLCCW = !0;
        this.__glBlendEquation = 32774
      };
      k["openfl.display3D._internal.Context3DState"] = dk;
      dk.__name__ = "openfl.display3D._internal.Context3DState";
      dk.prototype = {
        backBufferEnableDepthAndStencil: null,
        blendDestinationAlphaFactor: null,
        blendSourceAlphaFactor: null,
        blendDestinationRGBFactor: null,
        blendSourceRGBFactor: null,
        colorMaskRed: null,
        colorMaskGreen: null,
        colorMaskBlue: null,
        colorMaskAlpha: null,
        culling: null,
        depthCompareMode: null,
        depthMask: null,
        program: null,
        renderToTexture: null,
        renderToTextureAntiAlias: null,
        renderToTextureDepthStencil: null,
        renderToTextureSurfaceSelector: null,
        samplerStates: null,
        scissorEnabled: null,
        scissorRectangle: null,
        stencilCompareMode: null,
        stencilDepthFail: null,
        stencilFail: null,
        stencilPass: null,
        stencilReadMask: null,
        stencilReferenceValue: null,
        stencilTriangleFace: null,
        stencilWriteMask: null,
        textures: null,
        shader: null,
        __currentGLArrayBuffer: null,
        __currentGLElementArrayBuffer: null,
        __currentGLFramebuffer: null,
        __currentGLTexture2D: null,
        __currentGLTextureCubeMap: null,
        __enableGLBlend: null,
        __enableGLCullFace: null,
        __enableGLDepthTest: null,
        __enableGLScissorTest: null,
        __enableGLStencilTest: null,
        __frontFaceGLCCW: null,
        __glBlendEquation: null,
        __primaryGLFramebuffer: null,
        __rttDepthGLRenderbuffer: null,
        __rttGLFramebuffer: null,
        __rttGLRenderbuffer: null,
        __rttStencilGLRenderbuffer: null,
        __class__: dk
      };
      var fc = function(a) {
        Ka.call(this);
        this.__context = a;
        var b = this.__context.gl;
        this.__textureID = b.createTexture();
        this.__textureContext = this.__context.__context;
        if (null == fc.__supportsBGRA) {
          fc.__textureInternalFormat = b.RGBA;
          fc.__supportsBGRA = !1;
          fc.__textureFormat = b.RGBA;
          fc.__compressedFormats = new Za;
          fc.__compressedFormatsAlpha = new Za;
          a = b.getExtension("WEBGL_compressed_texture_s3tc");
          var c = b.getExtension("WEBGL_compressed_texture_etc1");
          b = b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
          if (null != a) {
            var d = a.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            fc.__compressedFormats.h[0] = d;
            d = a.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            fc.__compressedFormatsAlpha.h[0] =
              d
          }
          null != c && (d = c.COMPRESSED_RGB_ETC1_WEBGL, fc.__compressedFormats.h[2] = d, d = c.COMPRESSED_RGB_ETC1_WEBGL, fc.__compressedFormatsAlpha.h[2] = d);
          null != b && (d = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG, fc.__compressedFormats.h[1] = d, d = b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, fc.__compressedFormatsAlpha.h[1] = d)
        }
        this.__internalFormat = fc.__textureInternalFormat;
        this.__format = fc.__textureFormat
      };
      k["openfl.display3D.textures.TextureBase"] = fc;
      fc.__name__ = "openfl.display3D.textures.TextureBase";
      fc.__super__ = Ka;
      fc.prototype = t(Ka.prototype, {
        __alphaTexture: null,
        __context: null,
        __format: null,
        __glDepthRenderbuffer: null,
        __glFramebuffer: null,
        __glStencilRenderbuffer: null,
        __height: null,
        __internalFormat: null,
        __optimizeForRenderToTexture: null,
        __samplerState: null,
        __streamingLevels: null,
        __textureContext: null,
        __textureID: null,
        __textureTarget: null,
        __width: null,
        dispose: function() {
          var a = this.__context.gl;
          null != this.__alphaTexture && (this.__alphaTexture.dispose(), this.__alphaTexture = null);
          null != this.__textureID && (a.deleteTexture(this.__textureID), this.__textureID =
            null);
          null != this.__glFramebuffer && (a.deleteFramebuffer(this.__glFramebuffer), this.__glFramebuffer = null);
          null != this.__glDepthRenderbuffer && (a.deleteRenderbuffer(this.__glDepthRenderbuffer), this.__glDepthRenderbuffer = null);
          null != this.__glStencilRenderbuffer && (a.deleteRenderbuffer(this.__glStencilRenderbuffer), this.__glStencilRenderbuffer = null)
        },
        __getGLFramebuffer: function(a, b, c) {
          b = this.__context.gl;
          null == this.__glFramebuffer && (this.__glFramebuffer = b.createFramebuffer(), this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            b.framebufferTexture2D(b.FRAMEBUFFER, b.COLOR_ATTACHMENT0, b.TEXTURE_2D, this.__textureID, 0), this.__context.__enableErrorChecking && (c = b.checkFramebufferStatus(b.FRAMEBUFFER), c != b.FRAMEBUFFER_COMPLETE && Na.warn("Error: Context3D.setRenderToTexture status:" + c + " width:" + this.__width + " height:" + this.__height, {
              fileName: "openfl/display3D/textures/TextureBase.hx",
              lineNumber: 201,
              className: "openfl.display3D.textures.TextureBase",
              methodName: "__getGLFramebuffer"
            })));
          a && null == this.__glDepthRenderbuffer && (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
            0 != ac.__glDepthStencil ? (this.__glStencilRenderbuffer = this.__glDepthRenderbuffer = b.createRenderbuffer(), b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER, ac.__glDepthStencil, this.__width, this.__height), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.DEPTH_STENCIL_ATTACHMENT, b.RENDERBUFFER, this.__glDepthRenderbuffer)) : (this.__glDepthRenderbuffer = b.createRenderbuffer(), this.__glStencilRenderbuffer = b.createRenderbuffer(), b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
              b.renderbufferStorage(b.RENDERBUFFER, b.DEPTH_COMPONENT16, this.__width, this.__height), b.bindRenderbuffer(b.RENDERBUFFER, this.__glStencilRenderbuffer), b.renderbufferStorage(b.RENDERBUFFER, b.STENCIL_INDEX8, this.__width, this.__height), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.DEPTH_ATTACHMENT, b.RENDERBUFFER, this.__glDepthRenderbuffer), b.framebufferRenderbuffer(b.FRAMEBUFFER, b.STENCIL_ATTACHMENT, b.RENDERBUFFER, this.__glStencilRenderbuffer)), this.__context.__enableErrorChecking && (c = b.checkFramebufferStatus(b.FRAMEBUFFER),
              c != b.FRAMEBUFFER_COMPLETE && Na.warn("Error: Context3D.setRenderToTexture status:" + c + " width:" + this.__width + " height:" + this.__height, {
                fileName: "openfl/display3D/textures/TextureBase.hx",
                lineNumber: 239,
                className: "openfl.display3D.textures.TextureBase",
                methodName: "__getGLFramebuffer"
              })), b.bindRenderbuffer(b.RENDERBUFFER, null));
          return this.__glFramebuffer
        },
        __getImage: function(a) {
          var b = a.image;
          if (!a.__isValid || null == b) return null;
          va.sync(b, !1);
          a = this.__context.gl;
          b.type == ye.DATA || b.get_premultiplied() ?
            !b.get_premultiplied() && b.get_transparent() && (a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0), b = b.clone(), b.set_premultiplied(!0)) : a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
          0 != b.get_format() && (b = b.clone(), b.set_format(0), b.buffer.premultiplied = !0);
          return b
        },
        __getTexture: function() {
          return this.__textureID
        },
        __setSamplerState: function(a) {
          if (!a.equals(this.__samplerState)) {
            var b = this.__context.gl;
            this.__textureTarget == this.__context.gl.TEXTURE_CUBE_MAP ? this.__context.__bindGLTextureCubeMap(this.__textureID) :
              this.__context.__bindGLTexture2D(this.__textureID);
            var c;
            switch (a.wrap) {
              case 0:
                var d = c = b.CLAMP_TO_EDGE;
                break;
              case 1:
                c = b.CLAMP_TO_EDGE;
                d = b.REPEAT;
                break;
              case 2:
                d = c = b.REPEAT;
                break;
              case 3:
                c = b.REPEAT;
                d = b.CLAMP_TO_EDGE;
                break;
              default:
                throw F.thrown(new jd("wrap bad enum"));
            }
            var e = 5 == a.filter ? b.NEAREST : b.LINEAR;
            switch (a.mipfilter) {
              case 0:
                var f = 5 == a.filter ? b.NEAREST_MIPMAP_LINEAR : b.LINEAR_MIPMAP_LINEAR;
                break;
              case 1:
                f = 5 == a.filter ? b.NEAREST_MIPMAP_NEAREST : b.LINEAR_MIPMAP_NEAREST;
                break;
              case 2:
                f = 5 == a.filter ? b.NEAREST :
                  b.LINEAR;
                break;
              default:
                throw F.thrown(new jd("mipfiter bad enum"));
            }
            b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, f);
            b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, e);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
            b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
            null == this.__samplerState && (this.__samplerState = a.clone());
            this.__samplerState.copyFrom(a);
            return !0
          }
          return !1
        },
        __uploadFromImage: function(a) {
          var b = this.__context.gl,
            c;
          if (this.__textureTarget == b.TEXTURE_2D) {
            if (1 ==
              a.buffer.bitsPerPixel) var d = c = b.ALPHA;
            else c = fc.__textureInternalFormat, d = fc.__textureFormat;
            this.__context.__bindGLTexture2D(this.__textureID);
            a.type == ye.DATA || a.get_premultiplied() ? !a.get_premultiplied() && a.get_transparent() && b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1) : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
            a.type == ye.DATA ? cc.texImage2D(b, b.TEXTURE_2D, 0, c, a.buffer.width, a.buffer.height, 0, d, b.UNSIGNED_BYTE, a.get_data()) : cc.texImage2D(b, b.TEXTURE_2D, 0, c, d, b.UNSIGNED_BYTE, a.get_src());
            this.__context.__bindGLTexture2D(null)
          }
        },
        __class__: fc
      });
      var Zi = function(a, b, c, d, e) {
        fc.call(this, a);
        this.__width = this.__height = this.__size = b;
        this.__optimizeForRenderToTexture = d;
        this.__streamingLevels = e;
        this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
        this.__uploadedSides = 0
      };
      k["openfl.display3D.textures.CubeTexture"] = Zi;
      Zi.__name__ = "openfl.display3D.textures.CubeTexture";
      Zi.__super__ = fc;
      Zi.prototype = t(fc.prototype, {
        __framebufferSurface: null,
        __size: null,
        __uploadedSides: null,
        uploadCompressedTextureFromByteArray: function(a,
          b, c) {
          null == c && (c = !1);
          var d = this;
          c ? Ue.delay(function() {
            d.__uploadCompressedTextureFromByteArray(a, b);
            var c = new ma("textureReady");
            d.dispatchEvent(c)
          }, 1) : this.__uploadCompressedTextureFromByteArray(a, b)
        },
        uploadFromBitmapData: function(a, b, c, d) {
          null == c && (c = 0);
          if (null != a && (d = this.__size >> c, 0 != d && (a = this.__getImage(a), null != a)))
            if (0 == c && null != a.buffer && null == a.buffer.data && null != a.buffer.get_src()) {
              var e = this.__context.gl;
              d = this.__size >> c;
              0 != d && (d = this.__sideToTarget(b), this.__context.__bindGLTextureCubeMap(this.__textureID),
                cc.texImage2D(e, d, c, this.__internalFormat, this.__format, e.UNSIGNED_BYTE, a.buffer.get_src()), this.__context.__bindGLTextureCubeMap(null), this.__uploadedSides |= 1 << b)
            } else this.uploadFromTypedArray(a.get_data(), b, c)
        },
        uploadFromByteArray: function(a, b, c, d) {
          null == d && (d = 0);
          0 == b ? this.uploadFromTypedArray(a.b, c, d) : (a = Cb.toArrayBuffer(a), null == b && (b = 0), b = null != a ? new Uint8Array(a, b) : null, this.uploadFromTypedArray(b, c, d))
        },
        uploadFromTypedArray: function(a, b, c) {
          null == c && (c = 0);
          if (null != a) {
            var d = this.__context.gl,
              e = this.__size >> c;
            if (0 != e) {
              var f = this.__sideToTarget(b);
              this.__context.__bindGLTextureCubeMap(this.__textureID);
              cc.texImage2D(d, f, c, this.__internalFormat, e, e, 0, this.__format, d.UNSIGNED_BYTE, a);
              this.__context.__bindGLTextureCubeMap(null);
              this.__uploadedSides |= 1 << b
            }
          }
        },
        __getGLFramebuffer: function(a, b, c) {
          var d = this.__context.gl;
          null == this.__glFramebuffer && (this.__glFramebuffer = d.createFramebuffer(), this.__framebufferSurface = -1);
          if (this.__framebufferSurface != c && (this.__framebufferSurface = c, this.__context.__bindGLFramebuffer(this.__glFramebuffer),
              d.framebufferTexture2D(d.FRAMEBUFFER, d.COLOR_ATTACHMENT0, d.TEXTURE_CUBE_MAP_POSITIVE_X + c, this.__textureID, 0), this.__context.__enableErrorChecking)) {
            var e = d.checkFramebufferStatus(d.FRAMEBUFFER);
            e != d.FRAMEBUFFER_COMPLETE && Na.error("Error: Context3D.setRenderToTexture status:" + e + " width:" + this.__width + " height:" + this.__height, {
              fileName: "openfl/display3D/textures/CubeTexture.hx",
              lineNumber: 278,
              className: "openfl.display3D.textures.CubeTexture",
              methodName: "__getGLFramebuffer"
            })
          }
          return fc.prototype.__getGLFramebuffer.call(this,
            a, b, c)
        },
        __setSamplerState: function(a) {
          if (fc.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter || this.__samplerState.mipmapGenerated || (b.generateMipmap(b.TEXTURE_CUBE_MAP), this.__samplerState.mipmapGenerated = !0);
            if (0 != ac.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1
              }
              a > ac.__glMaxTextureMaxAnisotropy && (a = ac.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_CUBE_MAP, ac.__glTextureMaxAnisotropy,
                a)
            }
            return !0
          }
          return !1
        },
        __sideToTarget: function(a) {
          var b = this.__context.gl;
          switch (a) {
            case 0:
              return b.TEXTURE_CUBE_MAP_POSITIVE_X;
            case 1:
              return b.TEXTURE_CUBE_MAP_NEGATIVE_X;
            case 2:
              return b.TEXTURE_CUBE_MAP_POSITIVE_Y;
            case 3:
              return b.TEXTURE_CUBE_MAP_NEGATIVE_Y;
            case 4:
              return b.TEXTURE_CUBE_MAP_POSITIVE_Z;
            case 5:
              return b.TEXTURE_CUBE_MAP_NEGATIVE_Z;
            default:
              throw F.thrown(new qd);
          }
        },
        __uploadCompressedTextureFromByteArray: function(a, b) {
          var c = this;
          a = new hk(a, b);
          var d = a.readHeader(this.__size, this.__size,
              !0),
            e = this.__context.gl;
          this.__context.__bindGLTextureCubeMap(this.__textureID);
          var f = !1;
          a.readTextures(function(a, b, g, h, l, m, p) {
            var n = d ? fc.__compressedFormatsAlpha.h[g] : fc.__compressedFormats.h[g];
            if (0 != n)
              if (f = !0, a = c.__sideToTarget(a), c.__format = n, c.__internalFormat = n, d && 2 == g) {
                m = m / 2 | 0;
                var q = g = null,
                  k = null,
                  u = null,
                  v = p.b.buffer,
                  r = 0;
                null == r && (r = 0);
                g = null != g ? new Uint8Array(g) : null != q ? new Uint8Array(q) : null != k ? new Uint8Array(k.__array) : null != u ? new Uint8Array(u) : null != v ? null == m ? new Uint8Array(v, r) : new Uint8Array(v,
                  r, m) : null;
                cc.compressedTexImage2D(e, a, b, c.__internalFormat, h, l, 0, g);
                var t = new Zi(c.__context, c.__size, 3, c.__optimizeForRenderToTexture, c.__streamingLevels);
                t.__format = n;
                t.__internalFormat = n;
                c.__context.__bindGLTextureCubeMap(t.__textureID);
                u = k = q = g = null;
                v = p.b.buffer;
                r = m;
                null == r && (r = 0);
                g = null != g ? new Uint8Array(g) : null != q ? new Uint8Array(q) : null != k ? new Uint8Array(k.__array) : null != u ? new Uint8Array(u) : null != v ? null == m ? new Uint8Array(v, r) : new Uint8Array(v, r, m) : null;
                cc.compressedTexImage2D(e, a, b, t.__internalFormat,
                  h, l, 0, g);
                c.__alphaTexture = t
              } else u = k = q = g = null, v = p.b.buffer, r = 0, null == r && (r = 0), g = null != g ? new Uint8Array(g) : null != q ? new Uint8Array(q) : null != k ? new Uint8Array(k.__array) : null != u ? new Uint8Array(u) : null != v ? null == m ? new Uint8Array(v, r) : new Uint8Array(v, r, m) : null, cc.compressedTexImage2D(e, a, b, c.__internalFormat, h, l, 0, g)
          });
          if (!f) {
            a = this.__size * this.__size * 4;
            var g = b = null,
              h = null,
              m = null,
              l = null;
            a = null != a ? new Uint8Array(a) : null != b ? new Uint8Array(b) : null != g ? new Uint8Array(g.__array) : null != h ? new Uint8Array(h) : null !=
              m ? null == l ? new Uint8Array(m, 0) : new Uint8Array(m, 0, l) : null;
            cc.texImage2D(e, this.__sideToTarget(0), 0, this.__internalFormat, this.__size, this.__size, 0, this.__format, e.UNSIGNED_BYTE, a);
            a = this.__size * this.__size * 4;
            l = m = h = g = b = null;
            a = null != a ? new Uint8Array(a) : null != b ? new Uint8Array(b) : null != g ? new Uint8Array(g.__array) : null != h ? new Uint8Array(h) : null != m ? null == l ? new Uint8Array(m, 0) : new Uint8Array(m, 0, l) : null;
            cc.texImage2D(e, this.__sideToTarget(1), 0, this.__internalFormat, this.__size, this.__size, 0, this.__format,
              e.UNSIGNED_BYTE, a);
            a = this.__size * this.__size * 4;
            l = m = h = g = b = null;
            a = null != a ? new Uint8Array(a) : null != b ? new Uint8Array(b) : null != g ? new Uint8Array(g.__array) : null != h ? new Uint8Array(h) : null != m ? null == l ? new Uint8Array(m, 0) : new Uint8Array(m, 0, l) : null;
            cc.texImage2D(e, this.__sideToTarget(2), 0, this.__internalFormat, this.__size, this.__size, 0, this.__format, e.UNSIGNED_BYTE, a);
            a = this.__size * this.__size * 4;
            l = m = h = g = b = null;
            a = null != a ? new Uint8Array(a) : null != b ? new Uint8Array(b) : null != g ? new Uint8Array(g.__array) : null != h ? new Uint8Array(h) :
              null != m ? null == l ? new Uint8Array(m, 0) : new Uint8Array(m, 0, l) : null;
            cc.texImage2D(e, this.__sideToTarget(3), 0, this.__internalFormat, this.__size, this.__size, 0, this.__format, e.UNSIGNED_BYTE, a);
            a = this.__size * this.__size * 4;
            l = m = h = g = b = null;
            a = null != a ? new Uint8Array(a) : null != b ? new Uint8Array(b) : null != g ? new Uint8Array(g.__array) : null != h ? new Uint8Array(h) : null != m ? null == l ? new Uint8Array(m, 0) : new Uint8Array(m, 0, l) : null;
            cc.texImage2D(e, this.__sideToTarget(4), 0, this.__internalFormat, this.__size, this.__size, 0, this.__format,
              e.UNSIGNED_BYTE, a);
            a = this.__size * this.__size * 4;
            l = m = h = g = b = null;
            a = null != a ? new Uint8Array(a) : null != b ? new Uint8Array(b) : null != g ? new Uint8Array(g.__array) : null != h ? new Uint8Array(h) : null != m ? null == l ? new Uint8Array(m, 0) : new Uint8Array(m, 0, l) : null;
            cc.texImage2D(e, this.__sideToTarget(5), 0, this.__internalFormat, this.__size, this.__size, 0, this.__format, e.UNSIGNED_BYTE, a)
          }
          this.__context.__bindGLTextureCubeMap(null)
        },
        __class__: Zi
      });
      var ek = function(a, b, c, d, e) {
        fc.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture =
          e;
        this.__textureTarget = this.__context.gl.TEXTURE_2D;
        this.uploadFromTypedArray(null);
        e && this.__getGLFramebuffer(!0, 0, 0)
      };
      k["openfl.display3D.textures.RectangleTexture"] = ek;
      ek.__name__ = "openfl.display3D.textures.RectangleTexture";
      ek.__super__ = fc;
      ek.prototype = t(fc.prototype, {
        uploadFromBitmapData: function(a) {
          if (null != a && (a = this.__getImage(a), null != a))
            if (null != a.buffer && null == a.buffer.data && null != a.buffer.get_src()) {
              var b = this.__context.gl;
              this.__context.__bindGLTexture2D(this.__textureID);
              cc.texImage2D(b,
                this.__textureTarget, 0, this.__internalFormat, this.__format, b.UNSIGNED_BYTE, a.buffer.get_src());
              this.__context.__bindGLTexture2D(null)
            } else this.uploadFromTypedArray(a.get_data())
        },
        uploadFromByteArray: function(a, b) {
          0 == b ? this.uploadFromTypedArray(a.b) : (a = Cb.toArrayBuffer(a), null == b && (b = 0), b = null != a ? new Uint8Array(a, b) : null, this.uploadFromTypedArray(b))
        },
        uploadFromTypedArray: function(a) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          cc.texImage2D(b, this.__textureTarget, 0,
            this.__internalFormat, this.__width, this.__height, 0, this.__format, b.UNSIGNED_BYTE, a);
          this.__context.__bindGLTexture2D(null)
        },
        __setSamplerState: function(a) {
          if (fc.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            if (0 != ac.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1
              }
              a > ac.__glMaxTextureMaxAnisotropy && (a = ac.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, ac.__glTextureMaxAnisotropy, a)
            }
            return !0
          }
          return !1
        },
        __class__: ek
      });
      var hi = function(a, b, c, d, e, f) {
        fc.call(this, a);
        this.__width = b;
        this.__height = c;
        this.__optimizeForRenderToTexture = e;
        this.__streamingLevels = f;
        a = this.__context.gl;
        this.__textureTarget = a.TEXTURE_2D;
        this.__context.__bindGLTexture2D(this.__textureID);
        cc.texImage2D(a, this.__textureTarget, 0, this.__internalFormat, this.__width, this.__height, 0, this.__format, a.UNSIGNED_BYTE, null);
        this.__context.__bindGLTexture2D(null);
        e && this.__getGLFramebuffer(!0, 0, 0)
      };
      k["openfl.display3D.textures.Texture"] = hi;
      hi.__name__ =
        "openfl.display3D.textures.Texture";
      hi.__super__ = fc;
      hi.prototype = t(fc.prototype, {
        uploadCompressedTextureFromByteArray: function(a, b, c) {
          null == c && (c = !1);
          var d = this;
          c ? Ue.delay(function() {
            d.__uploadCompressedTextureFromByteArray(a, b);
            var c = new ma("textureReady");
            d.dispatchEvent(c)
          }, 1) : this.__uploadCompressedTextureFromByteArray(a, b)
        },
        uploadFromBitmapData: function(a, b, c) {
          null == b && (b = 0);
          if (null != a) {
            c = this.__width >> b;
            var d = this.__height >> b;
            if (0 != c || 0 != d) {
              0 == c && (c = 1);
              0 == d && (d = 1);
              if (a.width != c || a.height != d) c =
                new wa(c, d, !0, 0), c.draw(a), a = c;
              a = this.__getImage(a);
              if (null != a)
                if (0 == b && null != a.buffer && null == a.buffer.data && null != a.buffer.get_src()) {
                  var e = this.__context.gl;
                  c = this.__width >> b;
                  d = this.__height >> b;
                  if (0 != c || 0 != d) this.__context.__bindGLTexture2D(this.__textureID), cc.texImage2D(e, this.__textureTarget, b, this.__internalFormat, this.__format, e.UNSIGNED_BYTE, a.buffer.get_src()), this.__context.__bindGLTexture2D(null)
                } else this.uploadFromTypedArray(a.get_data(), b)
            }
          }
        },
        uploadFromByteArray: function(a, b, c) {
          null ==
            c && (c = 0);
          0 == b ? this.uploadFromTypedArray(a.b, c) : (a = Cb.toArrayBuffer(a), null == b && (b = 0), b = null != a ? new Uint8Array(a, b) : null, this.uploadFromTypedArray(b, c))
        },
        uploadFromTypedArray: function(a, b) {
          null == b && (b = 0);
          if (null != a) {
            var c = this.__context.gl,
              d = this.__width >> b,
              e = this.__height >> b;
            if (0 != d || 0 != e) 0 == d && (d = 1), 0 == e && (e = 1), this.__context.__bindGLTexture2D(this.__textureID), cc.texImage2D(c, this.__textureTarget, b, this.__internalFormat, d, e, 0, this.__format, c.UNSIGNED_BYTE, a), this.__context.__bindGLTexture2D(null)
          }
        },
        __setSamplerState: function(a) {
          if (fc.prototype.__setSamplerState.call(this, a)) {
            var b = this.__context.gl;
            2 == a.mipfilter || this.__samplerState.mipmapGenerated || (b.generateMipmap(b.TEXTURE_2D), this.__samplerState.mipmapGenerated = !0);
            if (0 != ac.__glMaxTextureMaxAnisotropy) {
              switch (a.filter) {
                case 0:
                  a = 16;
                  break;
                case 1:
                  a = 2;
                  break;
                case 2:
                  a = 4;
                  break;
                case 3:
                  a = 8;
                  break;
                default:
                  a = 1
              }
              a > ac.__glMaxTextureMaxAnisotropy && (a = ac.__glMaxTextureMaxAnisotropy);
              b.texParameterf(b.TEXTURE_2D, ac.__glTextureMaxAnisotropy, a)
            }
            return !0
          }
          return !1
        },
        __uploadCompressedTextureFromByteArray: function(a, b) {
          var c = this;
          a = new hk(a, b);
          var d = a.readHeader(this.__width, this.__height, !1),
            e = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          var f = !1;
          a.readTextures(function(a, b, m, l, p, n, q) {
            a = d ? fc.__compressedFormatsAlpha.h[m] : fc.__compressedFormats.h[m];
            if (0 != a)
              if (f = !0, c.__format = a, c.__internalFormat = a, d && 2 == m) {
                n = n / 2 | 0;
                var g = m = null,
                  h = null,
                  k = null,
                  u = q.b.buffer,
                  v = 0;
                null == v && (v = 0);
                m = null != m ? new Uint8Array(m) : null != g ? new Uint8Array(g) : null != h ? new Uint8Array(h.__array) :
                  null != k ? new Uint8Array(k) : null != u ? null == n ? new Uint8Array(u, v) : new Uint8Array(u, v, n) : null;
                cc.compressedTexImage2D(e, c.__textureTarget, b, c.__internalFormat, l, p, 0, m);
                var r = new hi(c.__context, c.__width, c.__height, 3, c.__optimizeForRenderToTexture, c.__streamingLevels);
                r.__format = a;
                r.__internalFormat = a;
                c.__context.__bindGLTexture2D(r.__textureID);
                k = h = g = m = null;
                u = q.b.buffer;
                v = n;
                null == v && (v = 0);
                m = null != m ? new Uint8Array(m) : null != g ? new Uint8Array(g) : null != h ? new Uint8Array(h.__array) : null != k ? new Uint8Array(k) :
                  null != u ? null == n ? new Uint8Array(u, v) : new Uint8Array(u, v, n) : null;
                cc.compressedTexImage2D(e, r.__textureTarget, b, r.__internalFormat, l, p, 0, m);
                c.__alphaTexture = r
              } else k = h = g = m = null, u = q.b.buffer, v = 0, null == v && (v = 0), m = null != m ? new Uint8Array(m) : null != g ? new Uint8Array(g) : null != h ? new Uint8Array(h.__array) : null != k ? new Uint8Array(k) : null != u ? null == n ? new Uint8Array(u, v) : new Uint8Array(u, v, n) : null, cc.compressedTexImage2D(e, c.__textureTarget, b, c.__internalFormat, l, p, 0, m)
          });
          f || (a = this.__width * this.__height * 4, a = null !=
            a ? new Uint8Array(a) : null, cc.texImage2D(e, this.__textureTarget, 0, this.__internalFormat, this.__width, this.__height, 0, this.__format, e.UNSIGNED_BYTE, a));
          this.__context.__bindGLTexture2D(null)
        },
        __class__: hi
      });
      var hn = function(a) {
        fc.call(this, a);
        this.__textureTarget = this.__context.gl.TEXTURE_2D
      };
      k["openfl.display3D.textures.VideoTexture"] = hn;
      hn.__name__ = "openfl.display3D.textures.VideoTexture";
      hn.__super__ = fc;
      hn.prototype = t(fc.prototype, {
        videoHeight: null,
        videoWidth: null,
        __cacheTime: null,
        __netStream: null,
        attachNetStream: function(a) {
          var b = this;
          null != this.__netStream && this.__netStream.__video.removeEventListener("canplay", r(this, this.__onCanPlay), !1);
          this.__cacheTime = -1;
          this.__netStream = a;
          null != this.__netStream && (2 <= this.__netStream.__video.readyState ? Ue.delay(function() {
            b.__textureReady()
          }, 0) : this.__netStream.__video.addEventListener("canplay", r(this, this.__onCanPlay), !1))
        },
        dispose: function() {
          null != this.__netStream && null != this.__netStream.__video && this.__netStream.__video.removeEventListener("timeupdate",
            r(this, this.__onTimeUpdate));
          fc.prototype.dispose.call(this)
        },
        __onCanPlay: function(a) {
          this.__netStream.__video.addEventListener("timeupdate", r(this, this.__onTimeUpdate));
          this.__textureReady()
        },
        __onTimeUpdate: function(a) {
          null != this.__netStream && this.__netStream.__video.currentTime != this.__cacheTime && 2 <= this.__netStream.__video.readyState && this.__textureReady()
        },
        __getTexture: function() {
          if (this.__netStream.__video.currentTime != this.__cacheTime && 2 <= this.__netStream.__video.readyState) {
            var a = this.__context.gl;
            this.__context.__bindGLTexture2D(this.__textureID);
            cc.texImage2D(a, a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, this.__netStream.__video);
            this.__cacheTime = this.__netStream.__video.currentTime
          }
          return this.__textureID
        },
        __textureReady: function() {
          this.videoWidth = this.__netStream.__video.videoWidth;
          this.videoHeight = this.__netStream.__video.videoHeight;
          var a = new ma("textureReady");
          this.dispatchEvent(a)
        },
        __class__: hn
      });
      var jd = function(a, b) {
        null == b && (b = 0);
        null == a && (a = "");
        this.message = a;
        this.errorID = b;
        this.name =
          "Error"
      };
      k["openfl.errors.Error"] = jd;
      jd.__name__ = "openfl.errors.Error";
      jd.prototype = {
        errorID: null,
        message: null,
        name: null,
        getStackTrace: function() {
          return nf.toString(nf.exceptionStack())
        },
        toString: function() {
          return null != this.message ? this.message : "Error"
        },
        __class__: jd
      };
      var pi = function(a) {
        null == a && (a = "");
        jd.call(this, a);
        this.name = "ArgumentError"
      };
      k["openfl.errors.ArgumentError"] = pi;
      pi.__name__ = "openfl.errors.ArgumentError";
      pi.__super__ = jd;
      pi.prototype = t(jd.prototype, {
        __class__: pi
      });
      var bj = function(a) {
        null ==
          a && (a = "");
        jd.call(this, a);
        this.name = "IOError"
      };
      k["openfl.errors.IOError"] = bj;
      bj.__name__ = "openfl.errors.IOError";
      bj.__super__ = jd;
      bj.prototype = t(jd.prototype, {
        __class__: bj
      });
      var eh = function(a, b) {
        bj.call(this, "End of file was encountered");
        this.name = "EOFError";
        this.errorID = 2030
      };
      k["openfl.errors.EOFError"] = eh;
      eh.__name__ = "openfl.errors.EOFError";
      eh.__super__ = bj;
      eh.prototype = t(bj.prototype, {
        __class__: eh
      });
      var qd = function(a) {
        null == a && (a = "");
        jd.call(this, a, 0);
        this.name = "IllegalOperationError"
      };
      k["openfl.errors.IllegalOperationError"] =
        qd;
      qd.__name__ = "openfl.errors.IllegalOperationError";
      qd.__super__ = jd;
      qd.prototype = t(jd.prototype, {
        __class__: qd
      });
      var Jh = function(a) {
        null == a && (a = "");
        jd.call(this, a, 0);
        this.name = "RangeError"
      };
      k["openfl.errors.RangeError"] = Jh;
      Jh.__name__ = "openfl.errors.RangeError";
      Jh.__super__ = jd;
      Jh.prototype = t(jd.prototype, {
        __class__: Jh
      });
      var ip = function(a) {
        null == a && (a = "");
        jd.call(this, a, 0);
        this.name = "SecurityError"
      };
      k["openfl.errors.SecurityError"] = ip;
      ip.__name__ = "openfl.errors.SecurityError";
      ip.__super__ = jd;
      ip.prototype =
        t(jd.prototype, {
          __class__: ip
        });
      var pj = function(a) {
        null == a && (a = "");
        jd.call(this, a, 0);
        this.name = "TypeError"
      };
      k["openfl.errors.TypeError"] = pj;
      pj.__name__ = "openfl.errors.TypeError";
      pj.__super__ = jd;
      pj.prototype = t(jd.prototype, {
        __class__: pj
      });
      var fh = function(a, b, c, d) {
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        ma.call(this, a, b, c);
        this.activating = d
      };
      k["openfl.events.ActivityEvent"] = fh;
      fh.__name__ = "openfl.events.ActivityEvent";
      fh.__super__ = ma;
      fh.prototype = t(ma.prototype, {
        activating: null,
        clone: function() {
          var a =
            new fh(this.type, this.bubbles, this.cancelable, this.activating);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("ActivityEvent", ["type", "bubbles", "cancelable", "activating"])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.activating = !1
        },
        __class__: fh
      });
      var hf = function(a, b, c, d) {
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !1);
        ma.call(this, a, b, c);
        this.text = d
      };
      k["openfl.events.TextEvent"] = hf;
      hf.__name__ =
        "openfl.events.TextEvent";
      hf.__super__ = ma;
      hf.prototype = t(ma.prototype, {
        text: null,
        clone: function() {
          var a = new hf(this.type, this.bubbles, this.cancelable, this.text);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("TextEvent", ["type", "bubbles", "cancelable", "text"])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.text = ""
        },
        __class__: hf
      });
      var Ye = function(a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = "");
        null == c &&
          (c = !1);
        null == b && (b = !1);
        hf.call(this, a, b, c, d);
        this.errorID = e
      };
      k["openfl.events.ErrorEvent"] = Ye;
      Ye.__name__ = "openfl.events.ErrorEvent";
      Ye.__super__ = hf;
      Ye.prototype = t(hf.prototype, {
        errorID: null,
        clone: function() {
          var a = new Ye(this.type, this.bubbles, this.cancelable, this.text, this.errorID);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("ErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
        },
        __init: function() {
          hf.prototype.__init.call(this);
          this.errorID = 0
        },
        __class__: Ye
      });
      var oj = function(a) {
        this.active = !1;
        this.reset(a)
      };
      k["openfl.events._EventDispatcher.DispatchIterator"] = oj;
      oj.__name__ = "openfl.events._EventDispatcher.DispatchIterator";
      oj.prototype = {
        active: null,
        index: null,
        isCopy: null,
        list: null,
        copy: function() {
          this.isCopy || (this.list = this.list.slice(), this.isCopy = !0)
        },
        hasNext: function() {
          return this.index < this.list.length
        },
        next: function() {
          return this.list[this.index++]
        },
        remove: function(a, b) {
          if (this.active)
            if (this.isCopy) {
              b = this.index;
              for (var c =
                  this.list.length; b < c;) {
                var d = b++;
                if (this.list[d] == a) {
                  this.list.splice(d, 1);
                  break
                }
              }
            } else b < this.index && this.index--
        },
        reset: function(a) {
          this.list = a;
          this.isCopy = !1;
          this.index = 0
        },
        start: function() {
          this.active = !0
        },
        stop: function() {
          this.active = !1
        },
        __class__: oj
      };
      var nj = function(a, b, c) {
        this.callback = a;
        this.useCapture = b;
        this.priority = c
      };
      k["openfl.events._EventDispatcher.Listener"] = nj;
      nj.__name__ = "openfl.events._EventDispatcher.Listener";
      nj.prototype = {
        callback: null,
        priority: null,
        useCapture: null,
        match: function(a,
          b) {
          return Y.compareMethods(this.callback, a) ? this.useCapture == b : !1
        },
        __class__: nj
      };
      var Zf = function(a, b, c, d, e, f) {
        null == f && (f = 0);
        null == e && (e = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        ma.call(this, a, b, c);
        this.keyCode = f;
        this.shiftKey = e;
        this.relatedObject = d
      };
      k["openfl.events.FocusEvent"] = Zf;
      Zf.__name__ = "openfl.events.FocusEvent";
      Zf.__super__ = ma;
      Zf.prototype = t(ma.prototype, {
        keyCode: null,
        relatedObject: null,
        shiftKey: null,
        clone: function() {
          var a = new Zf(this.type, this.bubbles, this.cancelable, this.relatedObject, this.shiftKey,
            this.keyCode);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("FocusEvent", "type bubbles cancelable relatedObject shiftKey keyCode".split(" "))
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.keyCode = 0;
          this.shiftKey = !1;
          this.relatedObject = null
        },
        __class__: Zf
      });
      var dh = function(a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = !1);
        null == c && (c = !1);
        null == b && (b = !1);
        fh.call(this, a, b, c);
        this.fullScreen = d;
        this.interactive =
          e
      };
      k["openfl.events.FullScreenEvent"] = dh;
      dh.__name__ = "openfl.events.FullScreenEvent";
      dh.__super__ = fh;
      dh.prototype = t(fh.prototype, {
        fullScreen: null,
        interactive: null,
        clone: function() {
          var a = new dh(this.type, this.bubbles, this.cancelable, this.fullScreen, this.interactive);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("FullscreenEvent", ["type", "bubbles", "cancelable", "fullscreen", "interactive"])
        },
        __init: function() {
          fh.prototype.__init.call(this);
          this.interactive = this.fullScreen = !1
        },
        __class__: dh
      });
      var Hg = function(a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !0);
        ma.call(this, a, b, c);
        this.device = d
      };
      k["openfl.events.GameInputEvent"] = Hg;
      Hg.__name__ = "openfl.events.GameInputEvent";
      Hg.__super__ = ma;
      Hg.prototype = t(ma.prototype, {
        device: null,
        clone: function() {
          var a = new Hg(this.type, this.bubbles, this.cancelable, this.device);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("GameInputEvent",
            ["type", "bubbles", "cancelable", "device"])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.device = null
        },
        __class__: Hg
      });
      var ji = function(a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        this.status = d;
        this.redirected = e;
        ma.call(this, a, b, c)
      };
      k["openfl.events.HTTPStatusEvent"] = ji;
      ji.__name__ = "openfl.events.HTTPStatusEvent";
      ji.__super__ = ma;
      ji.prototype = t(ma.prototype, {
        redirected: null,
        responseHeaders: null,
        responseURL: null,
        status: null,
        clone: function() {
          var a = new ji(this.type,
            this.bubbles, this.cancelable, this.status, this.redirected);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("HTTPStatusEvent", ["type", "bubbles", "cancelable", "status", "redirected"])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.status = 0;
          this.redirected = !1
        },
        __class__: ji
      });
      var og = function(a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !0);
        Ye.call(this, a, b, c, d, e)
      };
      k["openfl.events.IOErrorEvent"] =
        og;
      og.__name__ = "openfl.events.IOErrorEvent";
      og.__super__ = Ye;
      og.prototype = t(Ye.prototype, {
        clone: function() {
          var a = new og(this.type, this.bubbles, this.cancelable, this.text, this.errorID);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("IOErrorEvent", ["type", "bubbles", "cancelable", "text", "errorID"])
        },
        __class__: og
      });
      var di = function(a, b, c, d, e, f, g, h, m, l, p) {
        null == p && (p = !1);
        null == l && (l = !1);
        null == m && (m = !1);
        null == h &&
          (h = !1);
        null == g && (g = !1);
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        ma.call(this, a, b, c);
        this.charCode = d;
        this.keyCode = e;
        this.keyLocation = null != f ? f : 0;
        this.ctrlKey = g;
        this.altKey = h;
        this.shiftKey = m;
        this.controlKey = l;
        this.commandKey = p
      };
      k["openfl.events.KeyboardEvent"] = di;
      di.__name__ = "openfl.events.KeyboardEvent";
      di.__super__ = ma;
      di.prototype = t(ma.prototype, {
        altKey: null,
        charCode: null,
        commandKey: null,
        controlKey: null,
        ctrlKey: null,
        keyCode: null,
        keyLocation: null,
        shiftKey: null,
        clone: function() {
          var a =
            new di(this.type, this.bubbles, this.cancelable, this.charCode, this.keyCode, this.keyLocation, this.ctrlKey, this.altKey, this.shiftKey, this.controlKey, this.commandKey);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("KeyboardEvent", "type bubbles cancelable charCode keyCode keyLocation ctrlKey altKey shiftKey".split(" "))
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.keyLocation = this.keyCode = this.charCode =
            0;
          this.commandKey = this.controlKey = this.shiftKey = this.altKey = this.ctrlKey = !1
        },
        __class__: di
      });
      var Ob = function(a, b, c, d, e, f, g, h, m, l, p, n, q) {
        null == q && (q = 0);
        null == n && (n = !1);
        null == p && (p = 0);
        null == l && (l = !1);
        null == m && (m = !1);
        null == h && (h = !1);
        null == g && (g = !1);
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        ma.call(this, a, b, c);
        this.shiftKey = m;
        this.altKey = h;
        this.ctrlKey = g;
        this.bubbles = b;
        this.relatedObject = f;
        this.delta = p;
        this.localX = d;
        this.localY = e;
        this.buttonDown = l;
        this.commandKey = n;
        this.clickCount =
          q;
        this.isRelatedObjectInaccessible = !1;
        this.stageY = this.stageX = NaN
      };
      k["openfl.events.MouseEvent"] = Ob;
      Ob.__name__ = "openfl.events.MouseEvent";
      Ob.__create = function(a, b, c, d, e, f, g) {
        null == g && (g = 0);
        a = new Ob(a, !0, !1, e.x, e.y, null, Ob.__ctrlKey, Ob.__altKey, Ob.__shiftKey, Ob.__buttonDown, g, Ob.__commandKey);
        a.stageX = c;
        a.stageY = d;
        a.target = f;
        return a
      };
      Ob.__super__ = ma;
      Ob.prototype = t(ma.prototype, {
        altKey: null,
        buttonDown: null,
        commandKey: null,
        clickCount: null,
        ctrlKey: null,
        delta: null,
        isRelatedObjectInaccessible: null,
        localX: null,
        localY: null,
        relatedObject: null,
        shiftKey: null,
        stageX: null,
        stageY: null,
        clone: function() {
          var a = new Ob(this.type, this.bubbles, this.cancelable, this.localX, this.localY, this.relatedObject, this.ctrlKey, this.altKey, this.shiftKey, this.buttonDown, this.delta, this.commandKey, this.clickCount);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("MouseEvent", "type bubbles cancelable localX localY relatedObject ctrlKey altKey shiftKey buttonDown delta".split(" "))
        },
        updateAfterEvent: function() {},
        __init: function() {
          ma.prototype.__init.call(this);
          this.bubbles = this.ctrlKey = this.altKey = this.shiftKey = !1;
          this.relatedObject = null;
          this.localY = this.localX = this.delta = 0;
          this.commandKey = this.buttonDown = !1;
          this.clickCount = 0;
          this.isRelatedObjectInaccessible = !1;
          this.stageY = this.stageX = NaN
        },
        __class__: Ob
      });
      var ki = function(a, b, c, d) {
        null == c && (c = !1);
        null == b && (b = !1);
        this.info = d;
        ma.call(this, a, b, c)
      };
      k["openfl.events.NetStatusEvent"] = ki;
      ki.__name__ = "openfl.events.NetStatusEvent";
      ki.__super__ =
        ma;
      ki.prototype = t(ma.prototype, {
        info: null,
        clone: function() {
          var a = new ki(this.type, this.bubbles, this.cancelable, this.info);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("NetStatusEvent", ["type", "bubbles", "cancelable", "info"])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.info = null
        },
        __class__: ki
      });
      var Fg = function(a, b, c, d, e) {
        null == e && (e = 0);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !1);
        ma.call(this,
          a, b, c);
        this.bytesLoaded = d;
        this.bytesTotal = e
      };
      k["openfl.events.ProgressEvent"] = Fg;
      Fg.__name__ = "openfl.events.ProgressEvent";
      Fg.__super__ = ma;
      Fg.prototype = t(ma.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        clone: function() {
          var a = new Fg(this.type, this.bubbles, this.cancelable, this.bytesLoaded, this.bytesTotal);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("ProgressEvent", ["type", "bubbles", "cancelable", "bytesLoaded",
            "bytesTotal"
          ])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.bytesTotal = this.bytesLoaded = 0
        },
        __class__: Fg
      });
      var tg = function(a, b, c, d, e, f) {
        null == f && (f = !0);
        null == c && (c = !1);
        null == b && (b = !1);
        ma.call(this, a, b, c);
        this.objectMatrix = d;
        this.objectColorTransform = e;
        this.allowSmoothing = f
      };
      k["openfl.events.RenderEvent"] = tg;
      tg.__name__ = "openfl.events.RenderEvent";
      tg.__super__ = ma;
      tg.prototype = t(ma.prototype, {
        allowSmoothing: null,
        objectColorTransform: null,
        objectMatrix: null,
        renderer: null,
        clone: function() {
          var a =
            new tg(this.type, this.bubbles, this.cancelable, this.objectMatrix.clone(), this.objectColorTransform.__clone(), this.allowSmoothing);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("RenderEvent", ["type", "bubbles", "cancelable"])
        },
        __init: function() {
          ma.prototype.__init.call(this);
          this.objectColorTransform = this.objectMatrix = null;
          this.allowSmoothing = !1;
          this.renderer = null
        },
        __class__: tg
      });
      var cj = function(a, b, c, d,
        e) {
        null == e && (e = 0);
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !1);
        Ye.call(this, a, b, c, d, e)
      };
      k["openfl.events.SecurityErrorEvent"] = cj;
      cj.__name__ = "openfl.events.SecurityErrorEvent";
      cj.__super__ = Ye;
      cj.prototype = t(Ye.prototype, {
        clone: function() {
          var a = new cj(this.type, this.bubbles, this.cancelable, this.text, this.errorID);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("SecurityErrorEvent", ["type", "bubbles", "cancelable",
            "text", "errorID"
          ])
        },
        __class__: cj
      });
      var $d = function(a, b, c, d, e, f, g, h, m, l, p, n, q, k, u, v, r, t, w, z) {
        null == v && (v = !1);
        null == u && (u = !1);
        null == k && (k = !1);
        null == q && (q = !1);
        null == n && (n = !1);
        null == l && (l = 0);
        null == m && (m = 0);
        null == h && (h = 0);
        null == g && (g = 0);
        null == f && (f = 0);
        null == e && (e = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        null == b && (b = !0);
        ma.call(this, a, b, c);
        this.touchPointID = d;
        this.isPrimaryTouchPoint = e;
        this.localX = f;
        this.localY = g;
        this.sizeX = h;
        this.sizeY = m;
        this.pressure = l;
        this.relatedObject = p;
        this.ctrlKey = n;
        this.altKey = q;
        this.shiftKey =
          k;
        this.commandKey = u;
        this.controlKey = v;
        this.stageY = this.stageX = NaN
      };
      k["openfl.events.TouchEvent"] = $d;
      $d.__name__ = "openfl.events.TouchEvent";
      $d.__create = function(a, b, c, d, e, f) {
        a = new $d(a, !0, !1, 0, !0, e.x, e.y, 1, 1, 1);
        a.stageX = c;
        a.stageY = d;
        a.target = f;
        return a
      };
      $d.__super__ = ma;
      $d.prototype = t(ma.prototype, {
        altKey: null,
        commandKey: null,
        controlKey: null,
        ctrlKey: null,
        delta: null,
        isPrimaryTouchPoint: null,
        localX: null,
        localY: null,
        pressure: null,
        relatedObject: null,
        shiftKey: null,
        sizeX: null,
        sizeY: null,
        stageX: null,
        stageY: null,
        touchPointID: null,
        clone: function() {
          var a = new $d(this.type, this.bubbles, this.cancelable, this.touchPointID, this.isPrimaryTouchPoint, this.localX, this.localY, this.sizeX, this.sizeY, this.pressure, this.relatedObject, this.ctrlKey, this.altKey, this.shiftKey, this.commandKey, this.controlKey);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("TouchEvent", "type bubbles cancelable touchPointID isPrimaryTouchPoint localX localY sizeX sizeY pressure relatedObject ctrlKey altKey shiftKey commandKey controlKey".split(" "))
        },
        updateAfterEvent: function() {},
        __init: function() {
          ma.prototype.__init.call(this);
          this.touchPointID = 0;
          this.isPrimaryTouchPoint = !1;
          this.pressure = this.sizeY = this.sizeX = this.localY = this.localX = 0;
          this.relatedObject = null;
          this.controlKey = this.commandKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
          this.stageY = this.stageX = NaN
        },
        __class__: $d
      });
      var Wi = function(a, b, c, d) {
        null == c && (c = !0);
        null == b && (b = !0);
        Ye.call(this, a, b, c);
        this.error = d
      };
      k["openfl.events.UncaughtErrorEvent"] = Wi;
      Wi.__name__ = "openfl.events.UncaughtErrorEvent";
      Wi.__super__ = Ye;
      Wi.prototype = t(Ye.prototype, {
        error: null,
        clone: function() {
          var a = new Wi(this.type, this.bubbles, this.cancelable, this.error);
          a.target = this.target;
          a.currentTarget = this.currentTarget;
          a.eventPhase = this.eventPhase;
          return a
        },
        toString: function() {
          return this.__formatToString("UncaughtErrorEvent", ["type", "bubbles", "cancelable", "error"])
        },
        __init: function() {
          Ye.prototype.__init.call(this);
          this.error = null
        },
        __class__: Wi
      });
      var Wm = function() {
        Ka.call(this)
      };
      k["openfl.events.UncaughtErrorEvents"] = Wm;
      Wm.__name__ =
        "openfl.events.UncaughtErrorEvents";
      Wm.__super__ = Ka;
      Wm.prototype = t(Ka.prototype, {
        __class__: Wm
      });
      var dj = function() {
        this.__leftExtension = this.__bottomExtension = 0;
        this.__needSecondBitmapData = !0;
        this.__numShaderPasses = 0;
        this.__preserveObject = !1;
        this.__rightExtension = 0;
        this.__shaderBlendMode = 10;
        this.__topExtension = 0;
        this.__smooth = !0
      };
      k["openfl.filters.BitmapFilter"] = dj;
      dj.__name__ = "openfl.filters.BitmapFilter";
      dj.prototype = {
        __bottomExtension: null,
        __leftExtension: null,
        __needSecondBitmapData: null,
        __numShaderPasses: null,
        __preserveObject: null,
        __renderDirty: null,
        __rightExtension: null,
        __shaderBlendMode: null,
        __smooth: null,
        __topExtension: null,
        clone: function() {
          return new dj
        },
        __applyFilter: function(a, b, c, d) {
          return b
        },
        __initShader: function(a, b, c) {
          return null
        },
        __class__: dj
      };
      var ej = function(a) {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t}");
        null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t}");
        gf.call(this, a);
        this.__isGenerated = !0;
        this.__initGL()
      };
      k["openfl.filters.BitmapFilterShader"] = ej;
      ej.__name__ = "openfl.filters.BitmapFilterShader";
      ej.__super__ = gf;
      ej.prototype = t(gf.prototype, {
        openfl_Position: null,
        openfl_TextureCoord: null,
        openfl_Matrix: null,
        openfl_TextureSize: null,
        openfl_Texture: null,
        __class__: ej
      });
      var ik = function() {
        null == this.__glFragmentSource && (this.__glFragmentSource = "varying vec2 openfl_TextureCoordv;\n\t\tuniform sampler2D openfl_Texture;\n\n\t\tuniform mat4 uMultipliers;\n\t\tuniform vec4 uOffsets;\n\n\t\tvoid main(void) {\n\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\n\t\t\tif (color.a == 0.0) {\n\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\n\t\t\t} else {\n\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = uOffsets + color * uMultipliers;\n\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a, color.a);\n\n\t\t\t}\n\n\t\t}");
        null == this.__glVertexSource && (this.__glVertexSource = "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\n\t\tvarying vec2 openfl_TextureCoordv;\n\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\n\t\tvoid main(void) {\n\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\n\t\t}");
        ej.call(this);
        this.uMultipliers.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        this.uOffsets.value = [0, 0, 0, 0];
        this.__isGenerated = !0;
        this.__initGL()
      };
      k["openfl.filters._ColorMatrixFilter.ColorMatrixShader"] = ik;
      ik.__name__ = "openfl.filters._ColorMatrixFilter.ColorMatrixShader";
      ik.__super__ = ej;
      ik.prototype = t(ej.prototype, {
        init: function(a) {
          var b = this.uMultipliers.value,
            c = this.uOffsets.value;
          b[0] = a[0];
          b[1] = a[1];
          b[2] = a[2];
          b[3] = a[3];
          b[4] = a[5];
          b[5] = a[6];
          b[6] = a[7];
          b[7] = a[8];
          b[8] = a[10];
          b[9] = a[11];
          b[10] = a[12];
          b[11] = a[13];
          b[12] = a[15];
          b[13] = a[16];
          b[14] = a[17];
          b[15] = a[18];
          c[0] = a[4] / 255;
          c[1] = a[9] / 255;
          c[2] = a[14] / 255;
          c[3] = a[19] / 255
        },
        uMultipliers: null,
        uOffsets: null,
        __class__: ik
      });
      var gg = function(a) {
        dj.call(this);
        this.set_matrix(a);
        this.__numShaderPasses = 1;
        this.__needSecondBitmapData = !1
      };
      k["openfl.filters.ColorMatrixFilter"] = gg;
      gg.__name__ = "openfl.filters.ColorMatrixFilter";
      gg.__super__ = dj;
      gg.prototype = t(dj.prototype, {
        __matrix: null,
        clone: function() {
          return new gg(this.__matrix)
        },
        __applyFilter: function(a, b, c, d) {
          var e = b.image,
            f = a.image;
          va.convertToData(e);
          va.convertToData(f);
          var g = e.get_data(),
            h = f.get_data(),
            m = d.x - c.x | 0;
          d = d.y - c.y | 0;
          b = 4 * b.width;
          var l =
            4 * a.width,
            p = e.buffer.format,
            n = f.buffer.format;
          e = e.buffer.premultiplied;
          f = f.buffer.premultiplied;
          for (var q, k = 0, u, v, r = c.y | 0, t = c.height | 0; r < t;)
            for (var w = r++, z = c.x | 0, Q = c.width | 0; z < Q;) {
              v = z++;
              u = w * b + 4 * v;
              v = (w + m) * l + 4 * (v + d);
              var O = p,
                A = e;
              null == A && (A = !1);
              null == O && (O = 0);
              switch (O) {
                case 0:
                  q = (g[u] & 255) << 24 | (g[u + 1] & 255) << 16 | (g[u + 2] & 255) << 8 | g[u + 3] & 255;
                  break;
                case 1:
                  q = (g[u + 1] & 255) << 24 | (g[u + 2] & 255) << 16 | (g[u + 3] & 255) << 8 | g[u] & 255;
                  break;
                case 2:
                  q = (g[u + 2] & 255) << 24 | (g[u + 1] & 255) << 16 | (g[u] & 255) << 8 | g[u + 3] & 255
              }
              A && 0 != (q & 255) && 255 !=
                (q & 255) && (G.unmult = 255 / (q & 255), q = (G.__clamp[Math.round((q >>> 24 & 255) * G.unmult)] & 255) << 24 | (G.__clamp[Math.round((q >>> 16 & 255) * G.unmult)] & 255) << 16 | (G.__clamp[Math.round((q >>> 8 & 255) * G.unmult)] & 255) << 8 | q & 255);
              0 == (q & 255) ? k = 0 : (k = ((Math.max(0, Math.min(this.__matrix[0] * (q >>> 24 & 255) + this.__matrix[1] * (q >>> 16 & 255) + this.__matrix[2] * (q >>> 8 & 255) + this.__matrix[3] * (q & 255) + this.__matrix[4], 255)) | 0) & 255) << 24 | (k >>> 16 & 255) << 16 | (k >>> 8 & 255) << 8 | k & 255, k = (k >>> 24 & 255) << 24 | ((Math.max(0, Math.min(this.__matrix[5] * (q >>> 24 & 255) +
                this.__matrix[6] * (q >>> 16 & 255) + this.__matrix[7] * (q >>> 8 & 255) + this.__matrix[8] * (q & 255) + this.__matrix[9], 255)) | 0) & 255) << 16 | (k >>> 8 & 255) << 8 | k & 255, k = (k >>> 24 & 255) << 24 | (k >>> 16 & 255) << 16 | ((Math.max(0, Math.min(this.__matrix[10] * (q >>> 24 & 255) + this.__matrix[11] * (q >>> 16 & 255) + this.__matrix[12] * (q >>> 8 & 255) + this.__matrix[13] * (q & 255) + this.__matrix[14], 255)) | 0) & 255) << 8 | k & 255, k = (k >>> 24 & 255) << 24 | (k >>> 16 & 255) << 16 | (k >>> 8 & 255) << 8 | (Math.max(0, Math.min(this.__matrix[15] * (q >>> 24 & 255) + this.__matrix[16] * (q >>> 16 & 255) + this.__matrix[17] *
                (q >>> 8 & 255) + this.__matrix[18] * (q & 255) + this.__matrix[19], 255)) | 0) & 255);
              u = n;
              O = f;
              null == O && (O = !1);
              null == u && (u = 0);
              O && (0 == (k & 255) ? 0 != k && (k = 0) : 255 != (k & 255) && (G.a16 = G.__alpha16[k & 255], k = ((k >>> 24 & 255) * G.a16 >> 16 & 255) << 24 | ((k >>> 16 & 255) * G.a16 >> 16 & 255) << 16 | ((k >>> 8 & 255) * G.a16 >> 16 & 255) << 8 | k & 255));
              switch (u) {
                case 0:
                  h[v] = k >>> 24 & 255;
                  h[v + 1] = k >>> 16 & 255;
                  h[v + 2] = k >>> 8 & 255;
                  h[v + 3] = k & 255;
                  break;
                case 1:
                  h[v] = k & 255;
                  h[v + 1] = k >>> 24 & 255;
                  h[v + 2] = k >>> 16 & 255;
                  h[v + 3] = k >>> 8 & 255;
                  break;
                case 2:
                  h[v] = k >>> 8 & 255, h[v + 1] = k >>> 16 & 255, h[v + 2] = k >>> 24 &
                    255, h[v + 3] = k & 255
              }
            }
          a.image.dirty = !0;
          return a
        },
        __initShader: function(a, b, c) {
          gg.__colorMatrixShader.init(this.get_matrix());
          return gg.__colorMatrixShader
        },
        get_matrix: function() {
          return this.__matrix
        },
        set_matrix: function(a) {
          null == a && (a = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]);
          return this.__matrix = a
        },
        __class__: gg,
        __properties__: {
          set_matrix: "set_matrix",
          get_matrix: "get_matrix"
        }
      });
      var ge = function(a) {
        null != a && 16 == a.get_length() ? this.rawData = a.concat(null) : this.rawData = Fb.toFloatVector(null, null, null, [1,
          0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1
        ])
      };
      k["openfl.geom.Matrix3D"] = ge;
      ge.__name__ = "openfl.geom.Matrix3D";
      ge.create2D = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 1);
        var e = d * Math.PI / 180;
        d = Math.cos(e);
        e = Math.sin(e);
        return new ge(Fb.toFloatVector(null, null, null, [d * c, -e * c, 0, 0, e * c, d * c, 0, 0, 0, 0, 1, 0, a, b, 0, 1]))
      };
      ge.createABCD = function(a, b, c, d, e, f) {
        return new ge(Fb.toFloatVector(null, null, null, [a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, e, f, 0, 1]))
      };
      ge.createOrtho = function(a, b, c, d, e, f) {
        var g = 1 / (b - a),
          h = 1 / (d - c),
          m = 1 / (f - e);
        return new ge(Fb.toFloatVector(null,
          null, null, [2 * g, 0, 0, 0, 0, 2 * h, 0, 0, 0, 0, -2 * m, 0, -(a + b) * g, -(c + d) * h, -(e + f) * m, 1]))
      };
      ge.interpolate = function(a, b, c) {
        for (var d = new ge, e = 0; 16 > e;) {
          var f = e++;
          d.rawData.set(f, a.rawData.get(f) + (b.rawData.get(f) - a.rawData.get(f)) * c)
        }
        return d
      };
      ge.__getAxisRotation = function(a, b, c, d) {
        var e = new ge;
        a = new td(a, b, c);
        d = Math.PI / 180 * -d;
        c = Math.cos(d);
        d = Math.sin(d);
        b = 1 - c;
        e.rawData.set(0, c + a.x * a.x * b);
        e.rawData.set(5, c + a.y * a.y * b);
        e.rawData.set(10, c + a.z * a.z * b);
        c = a.x * a.y * b;
        var f = a.z * d;
        e.rawData.set(4, c + f);
        e.rawData.set(1, c - f);
        c =
          a.x * a.z * b;
        f = a.y * d;
        e.rawData.set(8, c - f);
        e.rawData.set(2, c + f);
        c = a.y * a.z * b;
        f = a.x * d;
        e.rawData.set(9, c + f);
        e.rawData.set(6, c - f);
        return e
      };
      ge.prototype = {
        rawData: null,
        append: function(a) {
          var b = this.rawData.get(0),
            c = this.rawData.get(4),
            d = this.rawData.get(8),
            e = this.rawData.get(12),
            f = this.rawData.get(1),
            g = this.rawData.get(5),
            h = this.rawData.get(9),
            m = this.rawData.get(13),
            l = this.rawData.get(2),
            p = this.rawData.get(6),
            n = this.rawData.get(10),
            q = this.rawData.get(14),
            k = this.rawData.get(3),
            u = this.rawData.get(7),
            v = this.rawData.get(11),
            r = this.rawData.get(15),
            t = a.rawData.get(0),
            w = a.rawData.get(4),
            z = a.rawData.get(8),
            Q = a.rawData.get(12),
            O = a.rawData.get(1),
            A = a.rawData.get(5),
            aa = a.rawData.get(9),
            B = a.rawData.get(13),
            D = a.rawData.get(2),
            x = a.rawData.get(6),
            F = a.rawData.get(10),
            C = a.rawData.get(14),
            G = a.rawData.get(3),
            H = a.rawData.get(7),
            E = a.rawData.get(11);
          a = a.rawData.get(15);
          this.rawData.set(0, b * t + f * w + l * z + k * Q);
          this.rawData.set(1, b * O + f * A + l * aa + k * B);
          this.rawData.set(2, b * D + f * x + l * F + k * C);
          this.rawData.set(3, b * G + f * H + l * E + k * a);
          this.rawData.set(4, c * t +
            g * w + p * z + u * Q);
          this.rawData.set(5, c * O + g * A + p * aa + u * B);
          this.rawData.set(6, c * D + g * x + p * F + u * C);
          this.rawData.set(7, c * G + g * H + p * E + u * a);
          this.rawData.set(8, d * t + h * w + n * z + v * Q);
          this.rawData.set(9, d * O + h * A + n * aa + v * B);
          this.rawData.set(10, d * D + h * x + n * F + v * C);
          this.rawData.set(11, d * G + h * H + n * E + v * a);
          this.rawData.set(12, e * t + m * w + q * z + r * Q);
          this.rawData.set(13, e * O + m * A + q * aa + r * B);
          this.rawData.set(14, e * D + m * x + q * F + r * C);
          this.rawData.set(15, e * G + m * H + q * E + r * a)
        },
        appendRotation: function(a, b, c) {
          var d = 0,
            e = d,
            f = e;
          null != c && (f = c.x, e = c.y, d = c.z);
          c = a * Math.PI /
            180;
          a = Math.cos(c);
          c = Math.sin(c);
          var g = b.x,
            h = b.y;
          b = b.z;
          var m = g * g,
            l = h * h,
            p = b * b,
            n = m + l + p;
          if (0 != n) {
            var q = Math.sqrt(n);
            g /= q;
            h /= q;
            b /= q;
            m /= n;
            l /= n;
            p /= n
          }
          n = 1 - a;
          q = new ge;
          var k = q.rawData;
          k.set(0, m + (l + p) * a);
          k.set(1, g * h * n + b * c);
          k.set(2, g * b * n - h * c);
          k.set(4, g * h * n - b * c);
          k.set(5, l + (m + p) * a);
          k.set(6, h * b * n + g * c);
          k.set(8, g * b * n + h * c);
          k.set(9, h * b * n - g * c);
          k.set(10, p + (m + l) * a);
          k.set(12, (f * (l + p) - g * (e * h + d * b)) * n + (e * b - d * h) * c);
          k.set(13, (e * (m + p) - h * (f * g + d * b)) * n + (d * g - f * b) * c);
          k.set(14, (d * (m + l) - b * (f * g + e * h)) * n + (f * h - e * g) * c);
          this.append(q)
        },
        appendScale: function(a,
          b, c) {
          this.append(new ge(Fb.toFloatVector(null, null, null, [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1])))
        },
        appendTranslation: function(a, b, c) {
          var d = this.rawData;
          d.set(12, d.get(12) + a);
          d = this.rawData;
          d.set(13, d.get(13) + b);
          d = this.rawData;
          d.set(14, d.get(14) + c)
        },
        clone: function() {
          return new ge(this.rawData.copy())
        },
        copyColumnFrom: function(a, b) {
          switch (a) {
            case 0:
              this.rawData.set(0, b.x);
              this.rawData.set(1, b.y);
              this.rawData.set(2, b.z);
              this.rawData.set(3, b.w);
              break;
            case 1:
              this.rawData.set(4, b.x);
              this.rawData.set(5, b.y);
              this.rawData.set(6,
                b.z);
              this.rawData.set(7, b.w);
              break;
            case 2:
              this.rawData.set(8, b.x);
              this.rawData.set(9, b.y);
              this.rawData.set(10, b.z);
              this.rawData.set(11, b.w);
              break;
            case 3:
              this.rawData.set(12, b.x), this.rawData.set(13, b.y), this.rawData.set(14, b.z), this.rawData.set(15, b.w)
          }
        },
        copyColumnTo: function(a, b) {
          switch (a) {
            case 0:
              b.x = this.rawData.get(0);
              b.y = this.rawData.get(1);
              b.z = this.rawData.get(2);
              b.w = this.rawData.get(3);
              break;
            case 1:
              b.x = this.rawData.get(4);
              b.y = this.rawData.get(5);
              b.z = this.rawData.get(6);
              b.w = this.rawData.get(7);
              break;
            case 2:
              b.x = this.rawData.get(8);
              b.y = this.rawData.get(9);
              b.z = this.rawData.get(10);
              b.w = this.rawData.get(11);
              break;
            case 3:
              b.x = this.rawData.get(12), b.y = this.rawData.get(13), b.z = this.rawData.get(14), b.w = this.rawData.get(15)
          }
        },
        copyFrom: function(a) {
          this.rawData = a.rawData.copy()
        },
        copyRawDataFrom: function(a, b, c) {
          null == c && (c = !1);
          null == b && (b = 0);
          c && this.transpose();
          for (var d = 0, e = a.get_length() - b; d < e;) {
            var f = d++;
            this.rawData.set(f, a.get(f + b))
          }
          c && this.transpose()
        },
        copyRawDataTo: function(a, b, c) {
          null == c && (c = !1);
          null == b && (b = 0);
          c && this.transpose();
          for (var d = 0, e = this.rawData.get_length(); d < e;) {
            var f = d++;
            a.set(f + b, this.rawData.get(f))
          }
          c && this.transpose()
        },
        copyRowFrom: function(a, b) {
          switch (a) {
            case 0:
              this.rawData.set(0, b.x);
              this.rawData.set(4, b.y);
              this.rawData.set(8, b.z);
              this.rawData.set(12, b.w);
              break;
            case 1:
              this.rawData.set(1, b.x);
              this.rawData.set(5, b.y);
              this.rawData.set(9, b.z);
              this.rawData.set(13, b.w);
              break;
            case 2:
              this.rawData.set(2, b.x);
              this.rawData.set(6, b.y);
              this.rawData.set(10, b.z);
              this.rawData.set(14,
                b.w);
              break;
            case 3:
              this.rawData.set(3, b.x), this.rawData.set(7, b.y), this.rawData.set(11, b.z), this.rawData.set(15, b.w)
          }
        },
        copyRowTo: function(a, b) {
          switch (a) {
            case 0:
              b.x = this.rawData.get(0);
              b.y = this.rawData.get(4);
              b.z = this.rawData.get(8);
              b.w = this.rawData.get(12);
              break;
            case 1:
              b.x = this.rawData.get(1);
              b.y = this.rawData.get(5);
              b.z = this.rawData.get(9);
              b.w = this.rawData.get(13);
              break;
            case 2:
              b.x = this.rawData.get(2);
              b.y = this.rawData.get(6);
              b.z = this.rawData.get(10);
              b.w = this.rawData.get(14);
              break;
            case 3:
              b.x = this.rawData.get(3),
                b.y = this.rawData.get(7), b.z = this.rawData.get(11), b.w = this.rawData.get(15)
          }
        },
        copyToMatrix3D: function(a) {
          a.rawData = this.rawData.copy()
        },
        decompose: function(a) {
          null == a && (a = 1);
          var b = Fb.toObjectVector(null),
            c = this.clone().rawData.copy(),
            d = new td(c.get(12), c.get(13), c.get(14));
          c.set(12, 0);
          c.set(13, 0);
          c.set(14, 0);
          var e = new td;
          e.x = Math.sqrt(c.get(0) * c.get(0) + c.get(1) * c.get(1) + c.get(2) * c.get(2));
          e.y = Math.sqrt(c.get(4) * c.get(4) + c.get(5) * c.get(5) + c.get(6) * c.get(6));
          e.z = Math.sqrt(c.get(8) * c.get(8) + c.get(9) * c.get(9) +
            c.get(10) * c.get(10));
          0 > c.get(0) * (c.get(5) * c.get(10) - c.get(6) * c.get(9)) - c.get(1) * (c.get(4) * c.get(10) - c.get(6) * c.get(8)) + c.get(2) * (c.get(4) * c.get(9) - c.get(5) * c.get(8)) && (e.z = -e.z);
          var f = c;
          f.set(0, f.get(0) / e.x);
          f = c;
          f.set(1, f.get(1) / e.x);
          f = c;
          f.set(2, f.get(2) / e.x);
          f = c;
          f.set(4, f.get(4) / e.y);
          f = c;
          f.set(5, f.get(5) / e.y);
          f = c;
          f.set(6, f.get(6) / e.y);
          f = c;
          f.set(8, f.get(8) / e.z);
          f = c;
          f.set(9, f.get(9) / e.z);
          f = c;
          f.set(10, f.get(10) / e.z);
          f = new td;
          switch (a) {
            case 0:
              f.w = Math.acos((c.get(0) + c.get(5) + c.get(10) - 1) / 2);
              a = Math.sqrt((c.get(6) -
                c.get(9)) * (c.get(6) - c.get(9)) + (c.get(8) - c.get(2)) * (c.get(8) - c.get(2)) + (c.get(1) - c.get(4)) * (c.get(1) - c.get(4)));
              0 != a ? (f.x = (c.get(6) - c.get(9)) / a, f.y = (c.get(8) - c.get(2)) / a, f.z = (c.get(1) - c.get(4)) / a) : f.x = f.y = f.z = 0;
              break;
            case 1:
              f.y = Math.asin(-c.get(2));
              1 != c.get(2) && -1 != c.get(2) ? (f.x = Math.atan2(c.get(6), c.get(10)), f.z = Math.atan2(c.get(1), c.get(0))) : (f.z = 0, f.x = Math.atan2(c.get(4), c.get(5)));
              break;
            case 2:
              a = c.get(0) + c.get(5) + c.get(10), 0 < a ? (f.w = Math.sqrt(1 + a) / 2, f.x = (c.get(6) - c.get(9)) / (4 * f.w), f.y = (c.get(8) -
                c.get(2)) / (4 * f.w), f.z = (c.get(1) - c.get(4)) / (4 * f.w)) : c.get(0) > c.get(5) && c.get(0) > c.get(10) ? (f.x = Math.sqrt(1 + c.get(0) - c.get(5) - c.get(10)) / 2, f.w = (c.get(6) - c.get(9)) / (4 * f.x), f.y = (c.get(1) + c.get(4)) / (4 * f.x), f.z = (c.get(8) + c.get(2)) / (4 * f.x)) : c.get(5) > c.get(10) ? (f.y = Math.sqrt(1 + c.get(5) - c.get(0) - c.get(10)) / 2, f.x = (c.get(1) + c.get(4)) / (4 * f.y), f.w = (c.get(8) - c.get(2)) / (4 * f.y), f.z = (c.get(6) + c.get(9)) / (4 * f.y)) : (f.z = Math.sqrt(1 + c.get(10) - c.get(0) - c.get(5)) / 2, f.x = (c.get(8) + c.get(2)) / (4 * f.z), f.y = (c.get(6) + c.get(9)) /
                (4 * f.z), f.w = (c.get(1) - c.get(4)) / (4 * f.z))
          }
          b.push(d);
          b.push(f);
          b.push(e);
          return b
        },
        deltaTransformVector: function(a) {
          var b = a.x,
            c = a.y;
          a = a.z;
          return new td(b * this.rawData.get(0) + c * this.rawData.get(4) + a * this.rawData.get(8), b * this.rawData.get(1) + c * this.rawData.get(5) + a * this.rawData.get(9), b * this.rawData.get(2) + c * this.rawData.get(6) + a * this.rawData.get(10), b * this.rawData.get(3) + c * this.rawData.get(7) + a * this.rawData.get(11))
        },
        identity: function() {
          this.rawData = Fb.toFloatVector(null, null, null, [1, 0, 0, 0, 0, 1, 0, 0, 0,
            0, 1, 0, 0, 0, 0, 1
          ])
        },
        interpolateTo: function(a, b) {
          for (var c = 0; 16 > c;) {
            var d = c++;
            this.rawData.set(d, this.rawData.get(d) + (a.rawData.get(d) - this.rawData.get(d)) * b)
          }
        },
        invert: function() {
          var a = this.get_determinant(),
            b = 1E-11 < Math.abs(a);
          if (b) {
            a = 1 / a;
            var c = this.rawData.get(0),
              d = this.rawData.get(4),
              e = this.rawData.get(8),
              f = this.rawData.get(12),
              g = this.rawData.get(1),
              h = this.rawData.get(5),
              m = this.rawData.get(9),
              l = this.rawData.get(13),
              p = this.rawData.get(2),
              n = this.rawData.get(6),
              k = this.rawData.get(10),
              q = this.rawData.get(14),
              u = this.rawData.get(3),
              v = this.rawData.get(7),
              r = this.rawData.get(11),
              t = this.rawData.get(15);
            this.rawData.set(0, a * (h * (k * t - q * r) - m * (n * t - q * v) + l * (n * r - k * v)));
            this.rawData.set(1, -a * (g * (k * t - q * r) - m * (p * t - q * u) + l * (p * r - k * u)));
            this.rawData.set(2, a * (g * (n * t - q * v) - h * (p * t - q * u) + l * (p * v - n * u)));
            this.rawData.set(3, -a * (g * (n * r - k * v) - h * (p * r - k * u) + m * (p * v - n * u)));
            this.rawData.set(4, -a * (d * (k * t - q * r) - e * (n * t - q * v) + f * (n * r - k * v)));
            this.rawData.set(5, a * (c * (k * t - q * r) - e * (p * t - q * u) + f * (p * r - k * u)));
            this.rawData.set(6, -a * (c * (n * t - q * v) - d * (p * t - q * u) + f *
              (p * v - n * u)));
            this.rawData.set(7, a * (c * (n * r - k * v) - d * (p * r - k * u) + e * (p * v - n * u)));
            this.rawData.set(8, a * (d * (m * t - l * r) - e * (h * t - l * v) + f * (h * r - m * v)));
            this.rawData.set(9, -a * (c * (m * t - l * r) - e * (g * t - l * u) + f * (g * r - m * u)));
            this.rawData.set(10, a * (c * (h * t - l * v) - d * (g * t - l * u) + f * (g * v - h * u)));
            this.rawData.set(11, -a * (c * (h * r - m * v) - d * (g * r - m * u) + e * (g * v - h * u)));
            this.rawData.set(12, -a * (d * (m * q - l * k) - e * (h * q - l * n) + f * (h * k - m * n)));
            this.rawData.set(13, a * (c * (m * q - l * k) - e * (g * q - l * p) + f * (g * k - m * p)));
            this.rawData.set(14, -a * (c * (h * q - l * n) - d * (g * q - l * p) + f * (g * n - h * p)));
            this.rawData.set(15, a * (c * (h * k - m * n) - d * (g * k - m * p) + e * (g * n - h * p)))
          }
          return b
        },
        pointAt: function(a, b, c) {
          null == b && (b = new td(0, 0, -1));
          null == c && (c = new td(0, -1, 0));
          b = b.subtract(a);
          c = c.clone();
          b.normalize();
          c.normalize();
          var d = b.clone();
          d.scaleBy(c.dotProduct(b));
          c = c.subtract(d);
          0 < c.get_length() ? c.normalize() : c = 0 != b.x ? new td(-b.y, b.x, 0) : new td(1, 0, 0);
          d = c.crossProduct(b);
          d.normalize();
          this.rawData.set(0, d.x);
          this.rawData.set(4, d.y);
          this.rawData.set(8, d.z);
          this.rawData.set(12, 0);
          this.rawData.set(1, c.x);
          this.rawData.set(5,
            c.y);
          this.rawData.set(9, c.z);
          this.rawData.set(13, 0);
          this.rawData.set(2, b.x);
          this.rawData.set(6, b.y);
          this.rawData.set(10, b.z);
          this.rawData.set(14, 0);
          this.rawData.set(3, a.x);
          this.rawData.set(7, a.y);
          this.rawData.set(11, a.z);
          this.rawData.set(15, 1)
        },
        prepend: function(a) {
          var b = a.rawData.get(0),
            c = a.rawData.get(4),
            d = a.rawData.get(8),
            e = a.rawData.get(12),
            f = a.rawData.get(1),
            g = a.rawData.get(5),
            h = a.rawData.get(9),
            m = a.rawData.get(13),
            l = a.rawData.get(2),
            p = a.rawData.get(6),
            n = a.rawData.get(10),
            k = a.rawData.get(14),
            q = a.rawData.get(3),
            u = a.rawData.get(7),
            v = a.rawData.get(11);
          a = a.rawData.get(15);
          var r = this.rawData.get(0),
            t = this.rawData.get(4),
            w = this.rawData.get(8),
            z = this.rawData.get(12),
            Q = this.rawData.get(1),
            O = this.rawData.get(5),
            A = this.rawData.get(9),
            aa = this.rawData.get(13),
            B = this.rawData.get(2),
            D = this.rawData.get(6),
            x = this.rawData.get(10),
            F = this.rawData.get(14),
            C = this.rawData.get(3),
            G = this.rawData.get(7),
            H = this.rawData.get(11),
            E = this.rawData.get(15);
          this.rawData.set(0, b * r + f * t + l * w + q * z);
          this.rawData.set(1, b * Q + f *
            O + l * A + q * aa);
          this.rawData.set(2, b * B + f * D + l * x + q * F);
          this.rawData.set(3, b * C + f * G + l * H + q * E);
          this.rawData.set(4, c * r + g * t + p * w + u * z);
          this.rawData.set(5, c * Q + g * O + p * A + u * aa);
          this.rawData.set(6, c * B + g * D + p * x + u * F);
          this.rawData.set(7, c * C + g * G + p * H + u * E);
          this.rawData.set(8, d * r + h * t + n * w + v * z);
          this.rawData.set(9, d * Q + h * O + n * A + v * aa);
          this.rawData.set(10, d * B + h * D + n * x + v * F);
          this.rawData.set(11, d * C + h * G + n * H + v * E);
          this.rawData.set(12, e * r + m * t + k * w + a * z);
          this.rawData.set(13, e * Q + m * O + k * A + a * aa);
          this.rawData.set(14, e * B + m * D + k * x + a * F);
          this.rawData.set(15,
            e * C + m * G + k * H + a * E)
        },
        prependRotation: function(a, b, c) {
          var d = 0,
            e = d,
            f = e;
          null != c && (f = c.x, e = c.y, d = c.z);
          c = a * Math.PI / 180;
          a = Math.cos(c);
          c = Math.sin(c);
          var g = b.x,
            h = b.y;
          b = b.z;
          var m = g * g,
            l = h * h,
            p = b * b,
            n = m + l + p;
          if (0 != n) {
            var k = Math.sqrt(n);
            g /= k;
            h /= k;
            b /= k;
            m /= n;
            l /= n;
            p /= n
          }
          n = 1 - a;
          k = new ge;
          var q = k.rawData;
          q.set(0, m + (l + p) * a);
          q.set(1, g * h * n + b * c);
          q.set(2, g * b * n - h * c);
          q.set(4, g * h * n - b * c);
          q.set(5, l + (m + p) * a);
          q.set(6, h * b * n + g * c);
          q.set(8, g * b * n + h * c);
          q.set(9, h * b * n - g * c);
          q.set(10, p + (m + l) * a);
          q.set(12, (f * (l + p) - g * (e * h + d * b)) * n + (e * b - d * h) * c);
          q.set(13,
            (e * (m + p) - h * (f * g + d * b)) * n + (d * g - f * b) * c);
          q.set(14, (d * (m + l) - b * (f * g + e * h)) * n + (f * h - e * g) * c);
          this.prepend(k)
        },
        prependScale: function(a, b, c) {
          this.prepend(new ge(Fb.toFloatVector(null, null, null, [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1])))
        },
        prependTranslation: function(a, b, c) {
          var d = new ge;
          d.set_position(new td(a, b, c));
          this.prepend(d)
        },
        recompose: function(a, b) {
          null == b && (b = 1);
          if (3 > a.get_length() || 0 == a.get(2).x || 0 == a.get(2).y || 0 == a.get(2).z) return !1;
          this.identity();
          var c = [];
          c[0] = c[1] = c[2] = a.get(2).x;
          c[4] = c[5] = c[6] = a.get(2).y;
          c[8] = c[9] = c[10] = a.get(2).z;
          if (1 == b) {
            b = Math.cos(a.get(1).x);
            var d = Math.cos(a.get(1).y),
              e = Math.cos(a.get(1).z),
              f = Math.sin(a.get(1).x),
              g = Math.sin(a.get(1).y),
              h = Math.sin(a.get(1).z);
            this.rawData.set(0, d * e * c[0]);
            this.rawData.set(1, d * h * c[1]);
            this.rawData.set(2, -g * c[2]);
            this.rawData.set(3, 0);
            this.rawData.set(4, (f * g * e - b * h) * c[4]);
            this.rawData.set(5, (f * g * h + b * e) * c[5]);
            this.rawData.set(6, f * d * c[6]);
            this.rawData.set(7, 0);
            this.rawData.set(8, (b * g * e + f * h) * c[8]);
            this.rawData.set(9, (b * g * h - f * e) * c[9]);
            this.rawData.set(10,
              b * d * c[10])
          } else d = a.get(1).x, e = a.get(1).y, f = a.get(1).z, g = a.get(1).w, 0 == b && (d *= Math.sin(g / 2), e *= Math.sin(g / 2), f *= Math.sin(g / 2), g = Math.cos(g / 2)), this.rawData.set(0, (1 - 2 * e * e - 2 * f * f) * c[0]), this.rawData.set(1, (2 * d * e + 2 * g * f) * c[1]), this.rawData.set(2, (2 * d * f - 2 * g * e) * c[2]), this.rawData.set(3, 0), this.rawData.set(4, (2 * d * e - 2 * g * f) * c[4]), this.rawData.set(5, (1 - 2 * d * d - 2 * f * f) * c[5]), this.rawData.set(6, (2 * e * f + 2 * g * d) * c[6]), this.rawData.set(7, 0), this.rawData.set(8, (2 * d * f + 2 * g * e) * c[8]), this.rawData.set(9, (2 * e * f - 2 * g * d) * c[9]),
            this.rawData.set(10, (1 - 2 * d * d - 2 * e * e) * c[10]);
          this.rawData.set(11, 0);
          this.rawData.set(12, a.get(0).x);
          this.rawData.set(13, a.get(0).y);
          this.rawData.set(14, a.get(0).z);
          this.rawData.set(15, 1);
          0 == a.get(2).x && this.rawData.set(0, 1E-15);
          0 == a.get(2).y && this.rawData.set(5, 1E-15);
          0 == a.get(2).z && this.rawData.set(10, 1E-15);
          return !(0 == a.get(2).x || 0 == a.get(2).y || 0 == a.get(2).y)
        },
        transformVector: function(a) {
          var b = a.x,
            c = a.y;
          a = a.z;
          return new td(b * this.rawData.get(0) + c * this.rawData.get(4) + a * this.rawData.get(8) + this.rawData.get(12),
            b * this.rawData.get(1) + c * this.rawData.get(5) + a * this.rawData.get(9) + this.rawData.get(13), b * this.rawData.get(2) + c * this.rawData.get(6) + a * this.rawData.get(10) + this.rawData.get(14), b * this.rawData.get(3) + c * this.rawData.get(7) + a * this.rawData.get(11) + this.rawData.get(15))
        },
        transformVectors: function(a, b) {
          for (var c = 0, d, e, f; c + 3 <= a.get_length();) d = a.get(c), e = a.get(c + 1), f = a.get(c + 2), b.set(c, d * this.rawData.get(0) + e * this.rawData.get(4) + f * this.rawData.get(8) + this.rawData.get(12)), b.set(c + 1, d * this.rawData.get(1) + e *
            this.rawData.get(5) + f * this.rawData.get(9) + this.rawData.get(13)), b.set(c + 2, d * this.rawData.get(2) + e * this.rawData.get(6) + f * this.rawData.get(10) + this.rawData.get(14)), c += 3
        },
        transpose: function() {
          var a = this.rawData.copy();
          this.rawData.set(1, a.get(4));
          this.rawData.set(2, a.get(8));
          this.rawData.set(3, a.get(12));
          this.rawData.set(4, a.get(1));
          this.rawData.set(6, a.get(9));
          this.rawData.set(7, a.get(13));
          this.rawData.set(8, a.get(2));
          this.rawData.set(9, a.get(6));
          this.rawData.set(11, a.get(14));
          this.rawData.set(12,
            a.get(3));
          this.rawData.set(13, a.get(7));
          this.rawData.set(14, a.get(11))
        },
        get_determinant: function() {
          return (this.rawData.get(0) * this.rawData.get(5) - this.rawData.get(4) * this.rawData.get(1)) * (this.rawData.get(10) * this.rawData.get(15) - this.rawData.get(14) * this.rawData.get(11)) - (this.rawData.get(0) * this.rawData.get(9) - this.rawData.get(8) * this.rawData.get(1)) * (this.rawData.get(6) * this.rawData.get(15) - this.rawData.get(14) * this.rawData.get(7)) + (this.rawData.get(0) * this.rawData.get(13) - this.rawData.get(12) *
            this.rawData.get(1)) * (this.rawData.get(6) * this.rawData.get(11) - this.rawData.get(10) * this.rawData.get(7)) + (this.rawData.get(4) * this.rawData.get(9) - this.rawData.get(8) * this.rawData.get(5)) * (this.rawData.get(2) * this.rawData.get(15) - this.rawData.get(14) * this.rawData.get(3)) - (this.rawData.get(4) * this.rawData.get(13) - this.rawData.get(12) * this.rawData.get(5)) * (this.rawData.get(2) * this.rawData.get(11) - this.rawData.get(10) * this.rawData.get(3)) + (this.rawData.get(8) * this.rawData.get(13) - this.rawData.get(12) *
            this.rawData.get(9)) * (this.rawData.get(2) * this.rawData.get(7) - this.rawData.get(6) * this.rawData.get(3))
        },
        get_position: function() {
          return new td(this.rawData.get(12), this.rawData.get(13), this.rawData.get(14))
        },
        set_position: function(a) {
          this.rawData.set(12, a.x);
          this.rawData.set(13, a.y);
          this.rawData.set(14, a.z);
          return a
        },
        __class__: ge,
        __properties__: {
          set_position: "set_position",
          get_position: "get_position",
          get_determinant: "get_determinant"
        }
      };
      var uk = function(a) {
        this.__colorTransform = new Ec;
        this.concatenatedColorTransform =
          new Ec;
        this.pixelBounds = new ha;
        this.__displayObject = a;
        this.__hasMatrix = !0
      };
      k["openfl.geom.Transform"] = uk;
      uk.__name__ = "openfl.geom.Transform";
      uk.prototype = {
        concatenatedColorTransform: null,
        pixelBounds: null,
        __colorTransform: null,
        __displayObject: null,
        __hasMatrix: null,
        __hasMatrix3D: null,
        get_colorTransform: function() {
          return this.__colorTransform
        },
        set_colorTransform: function(a) {
          this.__colorTransform.__equals(a, !1) || (this.__colorTransform.__copyFrom(a), null != a && this.__displayObject.set_alpha(a.alphaMultiplier),
            a = this.__displayObject, a.__renderDirty || (a.__renderDirty = !0, a.__setParentRenderDirty()));
          return this.__colorTransform
        },
        get_concatenatedMatrix: function() {
          return this.__hasMatrix ? this.__displayObject.__getWorldTransform().clone() : null
        },
        get_matrix: function() {
          return this.__hasMatrix ? this.__displayObject.__transform.clone() : null
        },
        set_matrix: function(a) {
          if (null == a) return this.__hasMatrix = !1, null;
          this.__hasMatrix = !0;
          this.__hasMatrix3D = !1;
          null != this.__displayObject && this.__setTransform(a.a, a.b, a.c, a.d, a.tx,
            a.ty);
          return a
        },
        get_matrix3D: function() {
          if (this.__hasMatrix3D) {
            var a = this.__displayObject.__transform;
            return new ge(Fb.toFloatVector(null, null, null, [a.a, a.b, 0, 0, a.c, a.d, 0, 0, 0, 0, 1, 0, a.tx, a.ty, 0, 1]))
          }
          return null
        },
        set_matrix3D: function(a) {
          if (null == a) return this.__hasMatrix3D = !1, null;
          this.__hasMatrix = !1;
          this.__hasMatrix3D = !0;
          this.__setTransform(a.rawData.get(0), a.rawData.get(1), a.rawData.get(5), a.rawData.get(6), a.rawData.get(12), a.rawData.get(13));
          return a
        },
        __setTransform: function(a, b, c, d, e, f) {
          if (null !=
            this.__displayObject) {
            var g = this.__displayObject.__transform;
            if (g.a != a || g.b != b || g.c != c || g.d != d || g.tx != e || g.ty != f) {
              var h = 0 == b ? a : Math.sqrt(a * a + b * b);
              var m = 0 == c ? d : Math.sqrt(c * c + d * d);
              this.__displayObject.__scaleX = h;
              this.__displayObject.__scaleY = m;
              h = 180 / Math.PI * Math.atan2(d, c) - 90;
              h != this.__displayObject.__rotation && (this.__displayObject.__rotation = h, h *= Math.PI / 180, this.__displayObject.__rotationSine = Math.sin(h), this.__displayObject.__rotationCosine = Math.cos(h));
              g.a = a;
              g.b = b;
              g.c = c;
              g.d = d;
              g.tx = e;
              g.ty = f;
              this.__displayObject.__setTransformDirty()
            }
          }
        },
        __class__: uk,
        __properties__: {
          set_matrix3D: "set_matrix3D",
          get_matrix3D: "get_matrix3D",
          set_matrix: "set_matrix",
          get_matrix: "get_matrix",
          get_concatenatedMatrix: "get_concatenatedMatrix",
          set_colorTransform: "set_colorTransform",
          get_colorTransform: "get_colorTransform"
        }
      };
      var td = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.w = d;
        this.x = a;
        this.y = b;
        this.z = c
      };
      k["openfl.geom.Vector3D"] = td;
      td.__name__ = "openfl.geom.Vector3D";
      td.__properties__ = {
        get_Z_AXIS: "get_Z_AXIS",
        get_Y_AXIS: "get_Y_AXIS",
        get_X_AXIS: "get_X_AXIS"
      };
      td.angleBetween = function(a, b) {
        var c = a.get_length(),
          d = b.get_length();
        a = a.dotProduct(b);
        0 != c && (a /= c);
        0 != d && (a /= d);
        return Math.acos(a)
      };
      td.distance = function(a, b) {
        var c = b.x - a.x,
          d = b.y - a.y;
        a = b.z - a.z;
        return Math.sqrt(c * c + d * d + a * a)
      };
      td.get_X_AXIS = function() {
        return new td(1, 0, 0)
      };
      td.get_Y_AXIS = function() {
        return new td(0, 1, 0)
      };
      td.get_Z_AXIS = function() {
        return new td(0, 0, 1)
      };
      td.prototype = {
        w: null,
        x: null,
        y: null,
        z: null,
        add: function(a) {
          return new td(this.x + a.x, this.y + a.y, this.z + a.z)
        },
        clone: function() {
          return new td(this.x,
            this.y, this.z, this.w)
        },
        copyFrom: function(a) {
          this.x = a.x;
          this.y = a.y;
          this.z = a.z
        },
        crossProduct: function(a) {
          return new td(this.y * a.z - this.z * a.y, this.z * a.x - this.x * a.z, this.x * a.y - this.y * a.x, 1)
        },
        decrementBy: function(a) {
          this.x -= a.x;
          this.y -= a.y;
          this.z -= a.z
        },
        dotProduct: function(a) {
          return this.x * a.x + this.y * a.y + this.z * a.z
        },
        equals: function(a, b) {
          null == b && (b = !1);
          return this.x == a.x && this.y == a.y && this.z == a.z ? b ? this.w == a.w : !0 : !1
        },
        incrementBy: function(a) {
          this.x += a.x;
          this.y += a.y;
          this.z += a.z
        },
        nearEquals: function(a, b, c) {
          null ==
            c && (c = !1);
          return Math.abs(this.x - a.x) < b && Math.abs(this.y - a.y) < b && Math.abs(this.z - a.z) < b ? c ? Math.abs(this.w - a.w) < b : !0 : !1
        },
        negate: function() {
          this.x *= -1;
          this.y *= -1;
          this.z *= -1
        },
        normalize: function() {
          var a = this.get_length();
          0 != a && (this.x /= a, this.y /= a, this.z /= a);
          return a
        },
        project: function() {
          this.x /= this.w;
          this.y /= this.w;
          this.z /= this.w
        },
        scaleBy: function(a) {
          this.x *= a;
          this.y *= a;
          this.z *= a
        },
        setTo: function(a, b, c) {
          this.x = a;
          this.y = b;
          this.z = c
        },
        subtract: function(a) {
          return new td(this.x - a.x, this.y - a.y, this.z - a.z)
        },
        toString: function() {
          return "Vector3D(" + this.x + ", " + this.y + ", " + this.z + ")"
        },
        get_length: function() {
          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        get_lengthSquared: function() {
          return this.x * this.x + this.y * this.y + this.z * this.z
        },
        __class__: td,
        __properties__: {
          get_lengthSquared: "get_lengthSquared",
          get_length: "get_length"
        }
      };
      var jp = function() {};
      k["openfl.media.ID3Info"] = jp;
      jp.__name__ = "openfl.media.ID3Info";
      jp.prototype = {
        album: null,
        artist: null,
        comment: null,
        genre: null,
        songName: null,
        track: null,
        year: null,
        __class__: jp
      };
      var zf = function(a, b) {
        Ka.call(this, this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.isBuffering = !1;
        this.url = null;
        null != a && this.load(a, b)
      };
      k["openfl.media.Sound"] = zf;
      zf.__name__ = "openfl.media.Sound";
      zf.fromAudioBuffer = function(a) {
        var b = new zf;
        b.__buffer = a;
        return b
      };
      zf.fromFile = function(a) {
        return zf.fromAudioBuffer(Zc.fromFile(a))
      };
      zf.loadFromFile = function(a) {
        return Zc.loadFromFile(a).then(function(a) {
          return lb.withValue(zf.fromAudioBuffer(a))
        })
      };
      zf.loadFromFiles = function(a) {
        return Zc.loadFromFiles(a).then(function(a) {
          return lb.withValue(zf.fromAudioBuffer(a))
        })
      };
      zf.__super__ = Ka;
      zf.prototype = t(Ka.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        isBuffering: null,
        url: null,
        __buffer: null,
        close: function() {
          null != this.__buffer && (this.__buffer.dispose(), this.__buffer = null)
        },
        load: function(a, b) {
          var c = this;
          this.url = a.url;
          a = sa.getLibrary("default");
          if (null != a && Object.prototype.hasOwnProperty.call(a.cachedAudioBuffers.h, this.url)) this.AudioBuffer_onURLLoad(a.cachedAudioBuffers.h[this.url]);
          else Zc.loadFromFile(this.url).onComplete(r(this, this.AudioBuffer_onURLLoad)).onError(function(a) {
            c.AudioBuffer_onURLLoad(null)
          })
        },
        loadCompressedDataFromByteArray: function(a, b) {
          if (null == a || 0 >= b) this.dispatchEvent(new og("ioError"));
          else {
            if (Ya.gt(a.position, 0) || Ya.gt(Cb.get_length(a), b)) {
              var c = b;
              null == c && (c = 0);
              var d = new sc(c),
                e = a.position;
              c = b;
              null == c && (c = 0);
              null == e && (e = 0);
              d.writeBytes(a, e, c);
              a = d
            }
            this.__buffer = Zc.fromBytes(Cb.toBytes(a));
            null == this.__buffer ? this.dispatchEvent(new og("ioError")) : this.dispatchEvent(new ma("complete"))
          }
        },
        loadPCMFromByteArray: function(a, b, c, d, e) {
          null == e && (e = 44100);
          null == d && (d = !0);
          null == c && (c = "float");
          if (null == a) this.dispatchEvent(new og("ioError"));
          else {
            c = "float" == c ? 32 : 16;
            d = d ? 2 : 1;
            b = c / 8 * d * b | 0;
            if (Ya.gt(a.position, 0) || Ya.gt(Cb.get_length(a), b)) {
              var f = b;
              null == f && (f = 0);
              var g = f = new sc(f),
                h = a.position;
              f = b;
              null == f && (f = 0);
              null == h && (h = 0);
              g.writeBytes(a, h, f);
              a = g
            }
            b = new Zc;
            b.bitsPerSample = c;
            b.channels = d;
            a = Cb.toArrayBuffer(a);
            f = null != a ? new Uint8Array(a, 0) : null;
            b.data = f;
            b.sampleRate = e | 0;
            this.__buffer = b;
            this.dispatchEvent(new ma("complete"))
          }
        },
        play: function(a, b, c) {
          null == b && (b = 0);
          null == a && (a = 0);
          if (null == this.__buffer ||
            32 <= yd.__soundChannels.length) return null;
          c = null == c ? new mf : c.clone();
          var d = yd.__soundTransform.pan + c.pan;
          1 < d && (d = 1); - 1 > d && (d = -1);
          var e = yd.__soundTransform.volume * c.volume,
            f = new Wj(this.__buffer);
          f.offset = a | 0;
          1 < b && f.set_loops(b - 1);
          f.set_gain(e);
          0 != d && f.set_pan(d);
          return new ln(f, c)
        },
        get_id3: function() {
          return new jp
        },
        get_length: function() {
          return null != this.__buffer ? 1E3 * this.__buffer.get_src().duration() | 0 : 0
        },
        AudioBuffer_onURLLoad: function(a) {
          null == a ? this.dispatchEvent(new og("ioError")) : (this.__buffer =
            a, this.dispatchEvent(new ma("complete")))
        },
        __class__: zf,
        __properties__: {
          get_length: "get_length",
          get_id3: "get_id3"
        }
      });
      var ln = function(a, b) {
        Ka.call(this, this);
        this.rightPeak = this.leftPeak = 1;
        this.__soundTransform = null != b ? b : new mf;
        null != a && (this.__source = a, this.__source.onComplete.add(r(this, this.source_onComplete)), this.__isValid = !0, this.__source.play());
        yd.__registerSoundChannel(this)
      };
      k["openfl.media.SoundChannel"] = ln;
      ln.__name__ = "openfl.media.SoundChannel";
      ln.__super__ = Ka;
      ln.prototype = t(Ka.prototype, {
        leftPeak: null,
        rightPeak: null,
        __isValid: null,
        __soundTransform: null,
        __source: null,
        stop: function() {
          yd.__unregisterSoundChannel(this);
          this.__isValid && (this.__source.stop(), this.__dispose())
        },
        __dispose: function() {
          this.__isValid && (this.__source.onComplete.remove(r(this, this.source_onComplete)), this.__source.dispose(), this.__source = null, this.__isValid = !1)
        },
        __updateTransform: function() {
          this.set_soundTransform(this.get_soundTransform())
        },
        get_position: function() {
          return this.__isValid ? this.__source.get_currentTime() +
            this.__source.offset : 0
        },
        set_position: function(a) {
          if (!this.__isValid) return 0;
          this.__source.set_currentTime((a | 0) - this.__source.offset);
          return a
        },
        get_soundTransform: function() {
          return this.__soundTransform.clone()
        },
        set_soundTransform: function(a) {
          if (null != a) {
            this.__soundTransform.pan = a.pan;
            this.__soundTransform.volume = a.volume;
            var b = yd.__soundTransform.pan + this.__soundTransform.pan; - 1 > b && (b = -1);
            1 < b && (b = 1);
            var c = yd.__soundTransform.volume * this.__soundTransform.volume;
            this.__isValid && (this.__source.set_gain(c),
              0 == b && null == this.__source.get_pan() || this.__source.set_pan(b))
          }
          return a
        },
        source_onComplete: function() {
          yd.__unregisterSoundChannel(this);
          this.__dispose();
          this.dispatchEvent(new ma("soundComplete"))
        },
        __class__: ln,
        __properties__: {
          set_soundTransform: "set_soundTransform",
          get_soundTransform: "get_soundTransform",
          set_position: "set_position",
          get_position: "get_position"
        }
      });
      var dr = function(a, b) {
        null == b && (b = !1);
        null == a && (a = 1E3);
        this.bufferTime = a;
        this.checkPolicyFile = b
      };
      k["openfl.media.SoundLoaderContext"] = dr;
      dr.__name__ = "openfl.media.SoundLoaderContext";
      dr.prototype = {
        bufferTime: null,
        checkPolicyFile: null,
        __class__: dr
      };
      var yd = function() {};
      k["openfl.media.SoundMixer"] = yd;
      yd.__name__ = "openfl.media.SoundMixer";
      yd.__properties__ = {
        set_soundTransform: "set_soundTransform",
        get_soundTransform: "get_soundTransform"
      };
      yd.areSoundsInaccessible = function() {
        return !1
      };
      yd.stopAll = function() {
        for (var a = 0, b = yd.__soundChannels; a < b.length;) {
          var c = b[a];
          ++a;
          c.stop()
        }
      };
      yd.__registerSoundChannel = function(a) {
        yd.__soundChannels.push(a)
      };
      yd.__unregisterSoundChannel = function(a) {
        da.remove(yd.__soundChannels, a)
      };
      yd.get_soundTransform = function() {
        return yd.__soundTransform
      };
      yd.set_soundTransform = function(a) {
        yd.__soundTransform = a.clone();
        for (var b = 0, c = yd.__soundChannels; b < c.length;) {
          var d = c[b];
          ++b;
          d.__updateTransform()
        }
        return a
      };
      var mn = function(a, b) {
        null == b && (b = 240);
        null == a && (a = 320);
        ya.call(this);
        this.__drawableType = 8;
        this.__width = a;
        this.__height = b;
        this.__textureTime = -1;
        this.smoothing = !1;
        this.deblocking = 0
      };
      k["openfl.media.Video"] = mn;
      mn.__name__ =
        "openfl.media.Video";
      mn.__super__ = ya;
      mn.prototype = t(ya.prototype, {
        deblocking: null,
        smoothing: null,
        __active: null,
        __buffer: null,
        __bufferAlpha: null,
        __bufferColorTransform: null,
        __bufferContext: null,
        __bufferData: null,
        __dirty: null,
        __height: null,
        __indexBuffer: null,
        __indexBufferContext: null,
        __indexBufferData: null,
        __stream: null,
        __texture: null,
        __textureTime: null,
        __uvRect: null,
        __vertexBuffer: null,
        __vertexBufferContext: null,
        __vertexBufferData: null,
        __width: null,
        attachNetStream: function(a) {
          this.__stream = a;
          null ==
            this.__stream || null == this.__stream.__video || this.__stream.__closed || this.__stream.__video.play()
        },
        clear: function() {},
        __enterFrame: function(a) {
          this.__renderable && null != this.__stream && !this.__renderDirty && (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        __getBounds: function(a, b) {
          var c = ha.__pool.get();
          c.setTo(0, 0, this.__width, this.__height);
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ha.__pool.release(c)
        },
        __getIndexBuffer: function(a) {
          if (null == this.__indexBuffer || this.__indexBufferContext !=
            a.__context) this.__indexBufferData = new Uint16Array(6), this.__indexBufferData[0] = 0, this.__indexBufferData[1] = 1, this.__indexBufferData[2] = 2, this.__indexBufferData[3] = 2, this.__indexBufferData[4] = 1, this.__indexBufferData[5] = 3, this.__indexBufferContext = a.__context, this.__indexBuffer = a.createIndexBuffer(6), this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
          return this.__indexBuffer
        },
        __getTexture: function(a) {
          if (null == this.__stream || null == this.__stream.__video) return null;
          var b = a.__context.webgl,
            c = b.RGBA,
            d = b.RGBA;
          this.__stream.__closed || this.__stream.__video.currentTime == this.__textureTime || (null == this.__texture && (this.__texture = a.createRectangleTexture(this.__stream.__video.videoWidth, this.__stream.__video.videoHeight, 1, !1)), a.__bindGLTexture2D(this.__texture.__textureID), cc.texImage2D(b, b.TEXTURE_2D, 0, c, d, b.UNSIGNED_BYTE, this.__stream.__video), this.__textureTime = this.__stream.__video.currentTime);
          return this.__texture
        },
        __getVertexBuffer: function(a) {
          if (null == this.__vertexBuffer || this.__vertexBufferContext !=
            a.__context) this.__vertexBufferData = new Float32Array(20), this.__vertexBufferData[0] = this.get_width(), this.__vertexBufferData[1] = this.get_height(), this.__vertexBufferData[3] = 1, this.__vertexBufferData[4] = 1, this.__vertexBufferData[6] = this.get_height(), this.__vertexBufferData[9] = 1, this.__vertexBufferData[10] = this.get_width(), this.__vertexBufferData[13] = 1, this.__vertexBufferContext = a.__context, this.__vertexBuffer = a.createVertexBuffer(3, 5), this.__vertexBuffer.uploadFromTypedArray(Xg.toArrayBufferView(this.__vertexBufferData));
          return this.__vertexBuffer
        },
        __hitTest: function(a, b, c, d, e, f) {
          if (!f.get_visible() || this.__isMask || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
          this.__getRenderTransform();
          var g = this.__renderTransform,
            h = g.a * g.d - g.b * g.c;
          c = 0 == h ? -g.tx : 1 / h * (g.c * (g.ty - b) + g.d * (a - g.tx));
          g = this.__renderTransform;
          h = g.a * g.d - g.b * g.c;
          a = 0 == h ? -g.ty : 1 / h * (g.a * (b - g.ty) + g.b * (g.tx - a));
          return 0 < c && 0 < a && c <= this.__width && a <= this.__height ? (null == d || e || d.push(f), !0) : !1
        },
        __hitTestMask: function(a, b) {
          var c = la.__pool.get();
          c.setTo(a, b);
          this.__globalToLocal(c, c);
          a = 0 < c.x && 0 < c.y && c.x <= this.__width && c.y <= this.__height;
          la.__pool.release(c);
          return a
        },
        get_height: function() {
          return this.__height * this.get_scaleY()
        },
        set_height: function(a) {
          if (1 != this.get_scaleY() || a != this.__height) this.__setTransformDirty(), this.__dirty = !0;
          this.set_scaleY(1);
          return this.__height = a
        },
        get_videoHeight: function() {
          return null != this.__stream && null != this.__stream.__video ? this.__stream.__video.videoHeight | 0 : 0
        },
        get_videoWidth: function() {
          return null != this.__stream &&
            null != this.__stream.__video ? this.__stream.__video.videoWidth | 0 : 0
        },
        get_width: function() {
          return this.__width * this.__scaleX
        },
        set_width: function(a) {
          if (1 != this.__scaleX || this.__width != a) this.__setTransformDirty(), this.__dirty = !0;
          this.set_scaleX(1);
          return this.__width = a
        },
        __class__: mn,
        __properties__: t(ya.prototype.__properties__, {
          get_videoWidth: "get_videoWidth",
          get_videoHeight: "get_videoHeight"
        })
      });
      var jk = function() {
        Ka.call(this)
      };
      k["openfl.net.NetConnection"] = jk;
      jk.__name__ = "openfl.net.NetConnection";
      jk.__super__ =
        Ka;
      jk.prototype = t(Ka.prototype, {
        connect: function(a, b, c, d, e, f) {
          if (null != a) throw F.thrown('Error: Can only connect in "HTTP streaming" mode');
          this.dispatchEvent(new ki("netStatus", !1, !0, {
            code: "NetConnection.Connect.Success"
          }))
        },
        __class__: jk
      });
      var nn = function(a, b) {
        Ka.call(this);
        this.__connection = a;
        this.__soundTransform = new mf;
        this.__video = window.document.createElement("video");
        this.__video.setAttribute("playsinline", "");
        this.__video.setAttribute("webkit-playsinline", "");
        this.__video.setAttribute("crossorigin",
          "anonymous");
        this.__video.addEventListener("error", r(this, this.video_onError), !1);
        this.__video.addEventListener("waiting", r(this, this.video_onWaiting), !1);
        this.__video.addEventListener("ended", r(this, this.video_onEnd), !1);
        this.__video.addEventListener("pause", r(this, this.video_onPause), !1);
        this.__video.addEventListener("seeking", r(this, this.video_onSeeking), !1);
        this.__video.addEventListener("playing", r(this, this.video_onPlaying), !1);
        this.__video.addEventListener("timeupdate", r(this, this.video_onTimeUpdate),
          !1);
        this.__video.addEventListener("loadstart", r(this, this.video_onLoadStart), !1);
        this.__video.addEventListener("stalled", r(this, this.video_onStalled), !1);
        this.__video.addEventListener("durationchanged", r(this, this.video_onDurationChanged), !1);
        this.__video.addEventListener("canplay", r(this, this.video_onCanPlay), !1);
        this.__video.addEventListener("canplaythrough", r(this, this.video_onCanPlayThrough), !1);
        this.__video.addEventListener("loadedmetadata", r(this, this.video_onLoadMetaData), !1)
      };
      k["openfl.net.NetStream"] =
        nn;
      nn.__name__ = "openfl.net.NetStream";
      nn.__super__ = Ka;
      nn.prototype = t(Ka.prototype, {
        audioCodec: null,
        bufferLength: null,
        bufferTime: null,
        bytesLoaded: null,
        bytesTotal: null,
        checkPolicyFile: null,
        client: null,
        currentFPS: null,
        decodedFrames: null,
        liveDelay: null,
        objectEncoding: null,
        time: null,
        videoCode: null,
        __closed: null,
        __connection: null,
        __soundTransform: null,
        __timer: null,
        __video: null,
        close: function() {
          null != this.__video && (this.__closed = !0, this.__video.pause(), this.__video.src = "", this.time = 0)
        },
        dispose: function() {
          this.close();
          this.__video = null
        },
        pause: function() {
          null != this.__video && this.__video.pause()
        },
        play: function(a, b, c, d, e, f) {
          null != this.__video && (this.__video.volume = yd.__soundTransform.volume * this.__soundTransform.volume, "string" == typeof a ? this.__video.src = a : this.__video.srcObject = a, this.__video.play())
        },
        requestVideoStatus: function() {
          var a = this;
          null != this.__video && (null == this.__timer && (this.__timer = new Ue(1)), this.__timer.run = function() {
            a.__video.paused ? a.__playStatus("NetStream.Play.pause") : a.__playStatus("NetStream.Play.playing");
            a.__timer.stop()
          })
        },
        resume: function() {
          null != this.__video && this.__video.play()
        },
        seek: function(a) {
          null != this.__video && (0 > a ? a = 0 : a > this.__video.duration && (a = this.__video.duration), this.__dispatchStatus("NetStream.SeekStart.Notify"), this.__video.currentTime = a)
        },
        togglePause: function() {
          null != this.__video && (this.__video.paused ? this.__video.play() : this.__video.pause())
        },
        __dispatchStatus: function(a) {
          a = new ki("netStatus", !1, !1, {
            code: a
          });
          this.__connection.dispatchEvent(a);
          this.dispatchEvent(a)
        },
        __playStatus: function(a) {
          if (null !=
            this.__video && null != this.client) try {
            var b = this.client.onPlayStatus;
            b({
              code: a,
              duration: this.__video.duration,
              position: this.__video.currentTime,
              speed: this.__video.playbackRate,
              start: this.__video.startTime
            })
          } catch (c) {
            pa.lastError = c
          }
        },
        video_onCanPlay: function(a) {
          this.__playStatus("NetStream.Play.canplay")
        },
        video_onCanPlayThrough: function(a) {
          this.__playStatus("NetStream.Play.canplaythrough")
        },
        video_onDurationChanged: function(a) {
          this.__playStatus("NetStream.Play.durationchanged")
        },
        video_onEnd: function(a) {
          this.__dispatchStatus("NetStream.Play.Stop");
          this.__dispatchStatus("NetStream.Play.Complete");
          this.__playStatus("NetStream.Play.Complete")
        },
        video_onError: function(a) {
          this.__dispatchStatus("NetStream.Play.Stop");
          this.__playStatus("NetStream.Play.error")
        },
        video_onLoadMetaData: function(a) {
          if (null != this.__video && null != this.client) try {
            var b = this.client.onMetaData;
            b({
              width: this.__video.videoWidth,
              height: this.__video.videoHeight,
              duration: this.__video.duration
            })
          } catch (c) {
            pa.lastError = c
          }
        },
        video_onLoadStart: function(a) {
          this.__playStatus("NetStream.Play.loadstart")
        },
        video_onPause: function(a) {
          this.__playStatus("NetStream.Play.pause")
        },
        video_onPlaying: function(a) {
          this.__dispatchStatus("NetStream.Play.Start");
          this.__playStatus("NetStream.Play.playing")
        },
        video_onSeeking: function(a) {
          this.__playStatus("NetStream.Play.seeking");
          this.__dispatchStatus("NetStream.Seek.Complete")
        },
        video_onStalled: function(a) {
          this.__playStatus("NetStream.Play.stalled")
        },
        video_onTimeUpdate: function(a) {
          null != this.__video && (this.time = this.__video.currentTime, this.__playStatus("NetStream.Play.timeupdate"))
        },
        video_onWaiting: function(a) {
          this.__playStatus("NetStream.Play.waiting")
        },
        get_soundTransform: function() {
          return this.__soundTransform.clone()
        },
        set_soundTransform: function(a) {
          null != a && (this.__soundTransform.pan = a.pan, this.__soundTransform.volume = a.volume, null != this.__video && (this.__video.volume = yd.__soundTransform.volume * this.__soundTransform.volume));
          return a
        },
        get_speed: function() {
          return null != this.__video ? this.__video.playbackRate : 1
        },
        set_speed: function(a) {
          return null != this.__video ? this.__video.playbackRate =
            a : a
        },
        __class__: nn,
        __properties__: {
          set_speed: "set_speed",
          get_speed: "get_speed",
          set_soundTransform: "set_soundTransform",
          get_soundTransform: "get_soundTransform"
        }
      });
      var ed = function() {
        Ka.call(this);
        this.client = this;
        this.objectEncoding = ed.defaultObjectEncoding
      };
      k["openfl.net.SharedObject"] = ed;
      ed.__name__ = "openfl.net.SharedObject";
      ed.getLocal = function(a, b, c) {
        c = " ~%&\\;:\"',<>?#".split("");
        var d = !0;
        if (null == a || "" == a) d = !1;
        else
          for (var e = 0; e < c.length;) {
            var f = c[e];
            ++e;
            if (-1 < a.indexOf(f)) {
              d = !1;
              break
            }
          }
        if (!d) throw F.thrown(new jd("Error #2134: Cannot create SharedObject."));
        null == ed.__sharedObjects && (ed.__sharedObjects = new ua, null != Ad.current && Ad.current.onExit.add(ed.application_onExit));
        c = b + "/" + a;
        if (!Object.prototype.hasOwnProperty.call(ed.__sharedObjects.h, c)) {
          d = null;
          try {
            var g = Wg.getLocalStorage();
            null == b && (null != g && (d = g.getItem(window.location.href + ":" + a), g.removeItem(window.location.href + ":" + a)), b = window.location.pathname);
            null != g && null == d && (d = g.getItem(b + ":" + a))
          } catch (m) {
            pa.lastError = m
          }
          g = new ed;
          g.data = {};
          g.__localPath = b;
          g.__name = a;
          if (null != d && "" != d) try {
            var h = new Le(d);
            h.setResolver({
              resolveEnum: Qb.resolveEnum,
              resolveClass: ed.__resolveClass
            });
            g.data = h.unserialize()
          } catch (m) {
            pa.lastError = m
          }
          ed.__sharedObjects.h[c] = g
        }
        return ed.__sharedObjects.h[c]
      };
      ed.getRemote = function(a, b, c, d) {
        Kc.notImplemented({
          fileName: "openfl/net/SharedObject.hx",
          lineNumber: 808,
          className: "openfl.net.SharedObject",
          methodName: "getRemote"
        });
        return null
      };
      ed.__getPath = function(a, b) {
        a = Wa.get_applicationStorageDirectory() + "/" + a + "/";
        b = W.replace(b, "//", "/");
        b = W.replace(b, "//", "/");
        W.startsWith(b, "/") &&
          (b = da.substr(b, 1, null));
        W.endsWith(b, "/") && (b = b.substring(0, b.length - 1));
        if (-1 < b.indexOf("/")) {
          var c = b.split("/");
          b = "";
          for (var d = 0, e = c.length - 1; d < e;) {
            var f = d++;
            b += "#" + c[f] + "/"
          }
          b += c[c.length - 1]
        }
        return a + b + ".sol"
      };
      ed.__mkdir = function(a) {};
      ed.__resolveClass = function(a) {
        return null != a ? (W.startsWith(a, "neash.") && (a = W.replace(a, "neash.", "openfl.")), W.startsWith(a, "native.") && (a = W.replace(a, "native.", "openfl.")), W.startsWith(a, "flash.") && (a = W.replace(a, "flash.", "openfl.")), W.startsWith(a, "openfl._v2.") &&
          (a = W.replace(a, "openfl._v2.", "openfl.")), W.startsWith(a, "openfl._legacy.") && (a = W.replace(a, "openfl._legacy.", "openfl.")), k[a]) : null
      };
      ed.application_onExit = function(a) {
        a = ed.__sharedObjects.h;
        for (var b = Object.keys(a), c = b.length, d = 0; d < c;) a[b[d++]].flush()
      };
      ed.__super__ = Ka;
      ed.prototype = t(Ka.prototype, {
        client: null,
        data: null,
        fps: null,
        objectEncoding: null,
        __localPath: null,
        __name: null,
        clear: function() {
          this.data = {};
          try {
            var a = Wg.getLocalStorage();
            null != a && a.removeItem(this.__localPath + ":" + this.__name)
          } catch (b) {
            pa.lastError =
              b
          }
        },
        close: function() {},
        connect: function(a, b) {
          Kc.notImplemented({
            fileName: "openfl/net/SharedObject.hx",
            lineNumber: 392,
            className: "openfl.net.SharedObject",
            methodName: "connect"
          })
        },
        flush: function(a) {
          if (0 == Y.fields(this.data).length) return 0;
          a = Ce.run(this.data);
          try {
            var b = Wg.getLocalStorage();
            null != b && (b.removeItem(this.__localPath + ":" + this.__name), b.setItem(this.__localPath + ":" + this.__name, a))
          } catch (c) {
            return pa.lastError = c, 1
          }
          return 0
        },
        send: function(a) {
          Kc.notImplemented({
            fileName: "openfl/net/SharedObject.hx",
            lineNumber: 824,
            className: "openfl.net.SharedObject",
            methodName: "send"
          })
        },
        setDirty: function(a) {},
        setProperty: function(a, b) {
          null != this.data && (this.data[a] = b)
        },
        get_size: function() {
          try {
            var a = Ce.run(this.data);
            return ib.ofString(a).length
          } catch (b) {
            return pa.lastError = b, 0
          }
        },
        __class__: ed,
        __properties__: {
          get_size: "get_size"
        }
      });
      var th = function(a) {
        Ka.call(this);
        this.bytesTotal = this.bytesLoaded = 0;
        this.dataFormat = 1;
        null != a && this.load(a)
      };
      k["openfl.net.URLLoader"] = th;
      th.__name__ = "openfl.net.URLLoader";
      th.__super__ =
        Ka;
      th.prototype = t(Ka.prototype, {
        bytesLoaded: null,
        bytesTotal: null,
        data: null,
        dataFormat: null,
        __httpRequest: null,
        close: function() {
          null != this.__httpRequest && this.__httpRequest.cancel()
        },
        load: function(a) {
          var b = this;
          if (0 == this.dataFormat) {
            var c = new Bm;
            this.__prepareRequest(c, a);
            c.load().onProgress(r(this, this.httpRequest_onProgress)).onError(r(this, this.httpRequest_onError)).onComplete(function(a) {
              b.__dispatchStatus();
              b.data = a;
              a = new ma("complete");
              b.dispatchEvent(a)
            })
          } else c = new Xj, this.__prepareRequest(c,
            a), c.load().onProgress(r(this, this.httpRequest_onProgress)).onError(r(this, this.httpRequest_onError)).onComplete(function(a) {
            b.__dispatchStatus();
            b.data = a;
            a = new ma("complete");
            b.dispatchEvent(a)
          })
        },
        __dispatchStatus: function() {
          var a = new ji("httpStatus", !1, !1, this.__httpRequest.responseStatus);
          a.responseURL = this.__httpRequest.uri;
          var b = [];
          if (this.__httpRequest.enableResponseHeaders && null != this.__httpRequest.responseHeaders)
            for (var c = 0, d = this.__httpRequest.responseHeaders; c < d.length;) {
              var e = d[c];
              ++c;
              b.push(new kp(e.name, e.value))
            }
          a.responseHeaders = b;
          this.dispatchEvent(a)
        },
        __prepareRequest: function(a, b) {
          this.__httpRequest = a;
          this.__httpRequest.uri = b.url;
          this.__httpRequest.method = b.method;
          if (null != b.data)
            if (Qb.typeof(b.data) == ec.TObject) {
              var c = Y.fields(b.data);
              for (a = 0; a < c.length;) {
                var d = c[a];
                ++a;
                this.__httpRequest.formData.h[d] = Y.field(b.data, d)
              }
            } else this.__httpRequest.data = b.data instanceof ib ? b.data : ib.ofString(M.string(b.data));
          this.__httpRequest.contentType = b.contentType;
          if (null != b.requestHeaders)
            for (a =
              0, c = b.requestHeaders; a < c.length;) d = c[a], ++a, this.__httpRequest.headers.push(new lm(d.name, d.value));
          this.__httpRequest.followRedirects = b.followRedirects;
          this.__httpRequest.timeout = b.idleTimeout | 0;
          this.__httpRequest.withCredentials = b.manageCookies;
          this.__httpRequest.userAgent = b.userAgent;
          this.__httpRequest.enableResponseHeaders = !0
        },
        httpRequest_onError: function(a) {
          this.__dispatchStatus();
          var b = 403 == a ? new cj("securityError") : new og("ioError");
          b.text = M.string(a);
          this.dispatchEvent(b)
        },
        httpRequest_onProgress: function(a,
          b) {
          var c = new Fg("progress");
          c.bytesLoaded = a;
          c.bytesTotal = b;
          this.dispatchEvent(c)
        },
        __class__: th
      });
      var Sg = function(a) {
        null != a && (this.url = a);
        this.contentType = null;
        this.followRedirects = Hh.followRedirects;
        this.idleTimeout = 0 < Hh.idleTimeout ? Hh.idleTimeout : 3E4;
        this.manageCookies = Hh.manageCookies;
        this.method = "GET";
        this.requestHeaders = [];
        this.userAgent = Hh.userAgent
      };
      k["openfl.net.URLRequest"] = Sg;
      Sg.__name__ = "openfl.net.URLRequest";
      Sg.prototype = {
        contentType: null,
        data: null,
        followRedirects: null,
        idleTimeout: null,
        manageCookies: null,
        method: null,
        requestHeaders: null,
        url: null,
        userAgent: null,
        __class__: Sg
      };
      var Hh = function() {};
      k["openfl.net.URLRequestDefaults"] = Hh;
      Hh.__name__ = "openfl.net.URLRequestDefaults";
      var kp = function(a, b) {
        null == b && (b = "");
        null == a && (a = "");
        this.name = a;
        this.value = b
      };
      k["openfl.net.URLRequestHeader"] = kp;
      kp.__name__ = "openfl.net.URLRequestHeader";
      kp.prototype = {
        name: null,
        value: null,
        __class__: kp
      };
      var nr = {
          _new: function(a) {
            var b = {};
            null != a && nr.decode(b, a);
            return b
          },
          decode: function(a, b) {
            for (var c = Y.fields(a),
                d = 0; d < c.length;) {
              var e = c[d];
              ++d;
              Y.deleteField(a, e)
            }
            c = b.split(";").join("&").split("&");
            for (d = 0; d < c.length;)
              if (e = c[d], ++d, b = e.indexOf("="), 0 < b) {
                var f = da.substr(e, 0, b);
                f = decodeURIComponent(f.split("+").join(" "));
                e = da.substr(e, b + 1, null);
                a[f] = decodeURIComponent(e.split("+").join(" "))
              } else 0 != b && (a[decodeURIComponent(e.split("+").join(" "))] = "")
          },
          toString: function(a) {
            for (var b = [], c = Y.fields(a), d = 0; d < c.length;) {
              var e = c[d];
              ++d;
              var f = Y.field(a, e);
              if (-1 < e.indexOf("[]") && f instanceof Array) {
                var g = [];
                for (f =
                  I(f); f.hasNext();) {
                  var h = f.next();
                  g.push(encodeURIComponent(h))
                }
                g = g.join("&amp;" + e + "=");
                b.push(encodeURIComponent(e) + "=" + g)
              } else b.push(encodeURIComponent(e) + "=" + encodeURIComponent(f))
            }
            return b.join("&")
          }
        },
        Ti = function(a) {
          this.parentDomain = null != a ? a : Ti.currentDomain
        };
      k["openfl.system.ApplicationDomain"] = Ti;
      Ti.__name__ = "openfl.system.ApplicationDomain";
      Ti.prototype = {
        parentDomain: null,
        getDefinition: function(a) {
          return k[a]
        },
        hasDefinition: function(a) {
          return null != k[a]
        },
        __class__: Ti
      };
      var zc = function() {};
      k["openfl.system.Capabilities"] = zc;
      zc.__name__ = "openfl.system.Capabilities";
      zc.__properties__ = {
        get_version: "get_version",
        get_screenResolutionY: "get_screenResolutionY",
        get_screenResolutionX: "get_screenResolutionX",
        get_screenDPI: "get_screenDPI",
        get_pixelAspectRatio: "get_pixelAspectRatio",
        get_os: "get_os",
        get_manufacturer: "get_manufacturer",
        get_language: "get_language",
        get_cpuArchitecture: "get_cpuArchitecture"
      };
      zc.hasMultiChannelAudio = function(a) {
        return !1
      };
      zc.get_cpuArchitecture = function() {
        return "x86"
      };
      zc.get_language = function() {
        var a = We.get_language(We.get_currentLocale());
        if (null != a) switch (a = a.toLowerCase(), a) {
          case "cs":
          case "da":
          case "de":
          case "en":
          case "es":
          case "fi":
          case "fr":
          case "hu":
          case "it":
          case "ja":
          case "ko":
          case "nb":
          case "nl":
          case "pl":
          case "pt":
          case "ru":
          case "sv":
          case "tr":
            return a;
          case "zh":
            a = We.get_region(We.get_currentLocale());
            if (null != a) switch (a.toUpperCase()) {
              case "HANT":
              case "TW":
                return "zh-TW"
            }
            return "zh-CN";
          default:
            return "xu"
        }
        return "en"
      };
      zc.get_manufacturer = function() {
        var a =
          Wa.get_platformName();
        return "OpenFL" + (null != a ? " " + a : "")
      };
      zc.get_os = function() {
        var a = Wa.get_platformLabel();
        return null != a ? a : ""
      };
      zc.get_pixelAspectRatio = function() {
        return 1
      };
      zc.get_screenDPI = function() {
        var a = null != Kc.application ? Kc.application.__window : null,
          b = 72;
        null != a && (b *= a.__scale);
        return b
      };
      zc.get_screenResolutionX = function() {
        var a = Kc.current.stage,
          b = 0;
        if (null == a) return 0;
        if (null != a.window) {
          var c = a.window.get_display();
          null != c && (b = Math.ceil(c.currentMode.width * a.window.__scale))
        }
        return 0 < b ? b :
          a.stageWidth
      };
      zc.get_screenResolutionY = function() {
        var a = Kc.current.stage,
          b = 0;
        if (null == a) return 0;
        if (null != a.window) {
          var c = a.window.get_display();
          null != c && (b = Math.ceil(c.currentMode.height * a.window.__scale))
        }
        return 0 < b ? b : a.stageHeight
      };
      zc.get_version = function() {
        return "WEB " + (W.replace("9.1.0", ".", ",") + ",0")
      };
      var er = function(a, b, c) {
        null == a && (a = !1);
        this.checkPolicyFile = a;
        this.securityDomain = c;
        this.applicationDomain = b;
        this.allowLoadBytesCodeExecution = this.allowCodeImport = !0
      };
      k["openfl.system.LoaderContext"] =
        er;
      er.__name__ = "openfl.system.LoaderContext";
      er.prototype = {
        allowCodeImport: null,
        allowLoadBytesCodeExecution: null,
        applicationDomain: null,
        checkPolicyFile: null,
        securityDomain: null,
        __class__: er
      };
      var kk = function() {};
      k["openfl.system.SecurityDomain"] = kk;
      kk.__name__ = "openfl.system.SecurityDomain";
      kk.prototype = {
        __class__: kk
      };
      var cg = function() {};
      k["openfl.system.System"] = cg;
      cg.__name__ = "openfl.system.System";
      cg.__properties__ = {
        get_vmVersion: "get_vmVersion",
        get_totalMemory: "get_totalMemory"
      };
      cg.disposeXML =
        function(a) {};
      cg.exit = function(a) {
        Wa.exit(a)
      };
      cg.gc = function() {};
      cg.pause = function() {
        Kc.notImplemented({
          fileName: "openfl/system/System.hx",
          lineNumber: 213,
          className: "openfl.system.System",
          methodName: "pause"
        })
      };
      cg.resume = function() {
        Kc.notImplemented({
          fileName: "openfl/system/System.hx",
          lineNumber: 229,
          className: "openfl.system.System",
          methodName: "resume"
        })
      };
      cg.setClipboard = function(a) {
        oe.set_text(a)
      };
      cg.get_totalMemory = function() {
        return window.performance && window.performance.memory ? window.performance.memory.usedJSHeapSize :
          0
      };
      cg.get_vmVersion = function() {
        return "1.0.0"
      };
      var Wc = function(a) {
        Qd.call(this, a)
      };
      k["openfl.text.Font"] = Wc;
      Wc.__name__ = "openfl.text.Font";
      Wc.enumerateFonts = function(a) {
        return Wc.__registeredFonts
      };
      Wc.fromBytes = function(a) {
        var b = new Wc;
        b.__fromBytes(Cb.toBytes(a));
        return b
      };
      Wc.fromFile = function(a) {
        var b = new Wc;
        b.__fromFile(a);
        return b
      };
      Wc.loadFromBytes = function(a) {
        return Qd.loadFromBytes(Cb.toBytes(a)).then(function(a) {
          var b = new Wc;
          b.__fromLimeFont(a);
          return lb.withValue(b)
        })
      };
      Wc.loadFromFile = function(a) {
        return Qd.loadFromFile(a).then(function(a) {
          var b =
            new Wc;
          b.__fromLimeFont(a);
          return lb.withValue(b)
        })
      };
      Wc.loadFromName = function(a) {
        return Qd.loadFromName(a).then(function(a) {
          var b = new Wc;
          b.__fromLimeFont(a);
          return lb.withValue(b)
        })
      };
      Wc.registerFont = function(a) {
        a = null == K.getClass(a) ? K.__cast(Qb.createInstance(a, []), Wc) : K.__cast(a, Wc);
        null != a && (Wc.__registeredFonts.push(a), Wc.__fontByName.h[a.name] = a)
      };
      Wc.__super__ = Qd;
      Wc.prototype = t(Qd.prototype, {
        fontStyle: null,
        fontType: null,
        __initialized: null,
        __fromLimeFont: function(a) {
          this.__copyFrom(a)
        },
        __initialize: function() {
          return this.__initialized
        },
        get_fontName: function() {
          return this.name
        },
        set_fontName: function(a) {
          return this.name = a
        },
        __class__: Wc,
        __properties__: {
          set_fontName: "set_fontName",
          get_fontName: "get_fontName"
        }
      });
      var Se = function() {
        this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
        Oa.call(this);
        this.__drawableType = 7;
        this.__caretIndex = -1;
        this.__displayAsPassword = !1;
        this.__graphics = new Ze(this);
        this.__textEngine = new Ub(this);
        this.__layoutDirty = !0;
        this.__offsetY = this.__offsetX = 0;
        this.__mouseWheelEnabled = !0;
        this.__text = "";
        this.doubleClickEnabled = !0;
        null == Se.__defaultTextFormat && (Se.__defaultTextFormat = new wg("Times New Roman", 12, 0, !1, !1, !1, "", "", 3, 0, 0, 0, 0), Se.__defaultTextFormat.blockIndent = 0, Se.__defaultTextFormat.bullet = !1, Se.__defaultTextFormat.letterSpacing = 0, Se.__defaultTextFormat.kerning = !1);
        this.__textFormat = Se.__defaultTextFormat.clone();
        this.__textEngine.textFormatRanges.push(new jf(this.__textFormat, 0, 0));
        this.addEventListener("mouseDown", r(this, this.this_onMouseDown));
        this.addEventListener("focusIn", r(this,
          this.this_onFocusIn));
        this.addEventListener("focusOut", r(this, this.this_onFocusOut));
        this.addEventListener("keyDown", r(this, this.this_onKeyDown));
        this.addEventListener("mouseWheel", r(this, this.this_onMouseWheel));
        this.addEventListener("doubleClick", r(this, this.this_onDoubleClick))
      };
      k["openfl.text.TextField"] = Se;
      Se.__name__ = "openfl.text.TextField";
      Se.__super__ = Oa;
      Se.prototype = t(Oa.prototype, {
        __bounds: null,
        __caretIndex: null,
        __cursorTimer: null,
        __dirty: null,
        __displayAsPassword: null,
        __domRender: null,
        __inputEnabled: null,
        __isHTML: null,
        __layoutDirty: null,
        __mouseWheelEnabled: null,
        __offsetX: null,
        __offsetY: null,
        __selectionIndex: null,
        __showCursor: null,
        __text: null,
        __htmlText: null,
        __textEngine: null,
        __textFormat: null,
        __div: null,
        __renderedOnCanvasWhileOnDOM: null,
        __rawHtmlText: null,
        __forceCachedBitmapUpdate: null,
        appendText: function(a) {
          null != a && "" != a && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__updateText(this.__text + a), this.__textEngine.textFormatRanges.get(this.__textEngine.textFormatRanges.get_length() -
            1).end = this.__text.length, this.setSelection(this.__text.length, this.__text.length))
        },
        getCharBoundaries: function(a) {
          if (0 > a || a > this.__text.length - 1) return null;
          var b = new ha;
          return this.__getCharBoundaries(a, b) ? b : null
        },
        getCharIndexAtPoint: function(a, b) {
          if (2 >= a || a > this.get_width() + 4 || 0 >= b || b > this.get_height() + 4) return -1;
          this.__updateLayout();
          a += this.get_scrollH();
          for (var c = 0, d = this.get_scrollV() - 1; c < d;) {
            var e = c++;
            b += this.__textEngine.lineHeights.get(e)
          }
          for (c = this.__textEngine.layoutGroups.iterator(); c.hasNext();) {
            var f =
              c.next();
            if (b >= f.offsetY && b <= f.offsetY + f.height && a >= f.offsetX && a <= f.offsetX + f.width) {
              c = b = 0;
              for (d = f.positions.length; c < d;)
                if (e = c++, b += f.positions[e], a <= f.offsetX + b) return f.startIndex + e;
              return f.endIndex
            }
          }
          return -1
        },
        getFirstCharInParagraph: function(a) {
          if (0 > a || a > this.get_text().length) return -1;
          for (var b = this.__textEngine.getLineBreakIndex(), c = 0; - 1 < b;) {
            if (b < a) c = b + 1;
            else if (b >= a) break;
            b = this.__textEngine.getLineBreakIndex(b + 1)
          }
          return c
        },
        getLineIndexAtPoint: function(a, b) {
          this.__updateLayout();
          if (2 >= a ||
            a > this.get_width() + 4 || 0 >= b || b > this.get_height() + 4) return -1;
          a = 0;
          for (var c = this.get_scrollV() - 1; a < c;) {
            var d = a++;
            b += this.__textEngine.lineHeights.get(d)
          }
          for (a = this.__textEngine.layoutGroups.iterator(); a.hasNext();)
            if (c = a.next(), b >= c.offsetY && b <= c.offsetY + c.height) return c.lineIndex;
          return -1
        },
        getLineIndexOfChar: function(a) {
          if (0 > a || a > this.__text.length) return -1;
          this.__updateLayout();
          for (var b = this.__textEngine.layoutGroups.iterator(); b.hasNext();) {
            var c = b.next();
            if (c.startIndex <= a && c.endIndex >= a) return c.lineIndex
          }
          return -1
        },
        getLineLength: function(a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return 0;
          for (var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator(); d.hasNext();) {
            var e = d.next();
            if (e.lineIndex == a) - 1 == b && (b = e.startIndex);
            else if (e.lineIndex == a + 1) {
              c = e.startIndex;
              break
            }
          } - 1 == c && (c = this.__text.length);
          return c - b
        },
        getLineMetrics: function(a) {
          this.__updateLayout();
          var b = this.__textEngine.lineAscents.get(a),
            c = this.__textEngine.lineDescents.get(a),
            d = this.__textEngine.lineLeadings.get(a),
            e = this.__textEngine.lineHeights.get(a);
          a = this.__textEngine.lineWidths.get(a);
          switch (this.__textFormat.align) {
            case 0:
              var f = (this.__textEngine.width - a) / 2;
              break;
            case 1:
            case 4:
              f = this.__textEngine.width - a - 2;
              break;
            case 2:
            case 3:
            case 5:
              f = 2
          }
          return new lp(f, a, e, b, c, d)
        },
        getLineOffset: function(a) {
          this.__updateLayout();
          if (0 > a || a > this.__textEngine.numLines - 1) return -1;
          for (var b = this.__textEngine.layoutGroups.iterator(); b.hasNext();) {
            var c = b.next();
            if (c.lineIndex == a) return c.startIndex
          }
          return 0
        },
        getLineText: function(a) {
          this.__updateLayout();
          if (0 > a ||
            a > this.__textEngine.numLines - 1) return null;
          for (var b = -1, c = -1, d = this.__textEngine.layoutGroups.iterator(); d.hasNext();) {
            var e = d.next();
            if (e.lineIndex == a) - 1 == b && (b = e.startIndex);
            else if (e.lineIndex == a + 1) {
              c = e.startIndex;
              break
            }
          } - 1 == c && (c = this.__text.length);
          return this.__textEngine.text.substring(b, c)
        },
        getParagraphLength: function(a) {
          if (0 > a || a > this.get_text().length) return -1;
          var b = this.getFirstCharInParagraph(a);
          if (a >= this.get_text().length) return this.get_text().length - b + 1;
          a = this.__textEngine.getLineBreakIndex(a) +
            1;
          0 == a && (a = this.__text.length);
          return a - b
        },
        getTextFormat: function(a, b) {
          null == b && (b = -1);
          null == a && (a = -1);
          var c = null;
          if (a >= this.get_text().length || -1 > a || b > this.get_text().length || -1 > b) throw F.thrown(new Jh("The supplied index is out of bounds")); - 1 == a && (a = 0); - 1 == b && (b = this.get_text().length);
          if (a >= b) return new wg;
          for (var d = this.__textEngine.textFormatRanges.iterator(); d.hasNext();) {
            var e = d.next();
            if (e.start <= a && e.end > a || e.start < b && e.end >= b) null == c ? c = e.format.clone() : (e.format.font != c.font && (c.font = null),
              e.format.size != c.size && (c.size = null), e.format.color != c.color && (c.color = null), e.format.bold != c.bold && (c.bold = null), e.format.italic != c.italic && (c.italic = null), e.format.underline != c.underline && (c.underline = null), e.format.url != c.url && (c.url = null), e.format.target != c.target && (c.target = null), e.format.align != c.align && (c.align = null), e.format.leftMargin != c.leftMargin && (c.leftMargin = null), e.format.rightMargin != c.rightMargin && (c.rightMargin = null), e.format.indent != c.indent && (c.indent = null), e.format.leading != c.leading &&
              (c.leading = null), e.format.blockIndent != c.blockIndent && (c.blockIndent = null), e.format.bullet != c.bullet && (c.bullet = null), e.format.kerning != c.kerning && (c.kerning = null), e.format.letterSpacing != c.letterSpacing && (c.letterSpacing = null), e.format.tabStops != c.tabStops && (c.tabStops = null))
          }
          null == c && (c = new wg);
          return c
        },
        replaceSelectedText: function(a) {
          this.__replaceSelectedText(a, !1)
        },
        replaceText: function(a, b, c) {
          this.__replaceText(a, b, c, !1)
        },
        setSelection: function(a, b) {
          this.__selectionIndex = a;
          this.__caretIndex =
            b;
          this.__updateScrollV();
          this.__updateScrollH();
          null != this.stage && this.stage.get_focus() == this && (this.__stopCursorTimer(), this.__startCursorTimer())
        },
        setTextFormat: function(a, b, c) {
          null == c && (c = -1);
          null == b && (b = -1);
          var d = this.get_text().length; - 1 == b ? (-1 == c && (c = d), b = 0) : -1 == c && (c = b + 1);
          if (b != c) {
            if (0 > b || 0 >= c || c < b || b >= d || c > d) throw F.thrown(new Jh);
            if (0 == b && c == d) {
              this.__textEngine.textFormatRanges.set_length(1);
              var e = this.__textEngine.textFormatRanges.get(0);
              e.start = 0;
              e.end = d;
              e.format.__merge(a)
            } else {
              d = 0;
              for (var f; d < this.__textEngine.textFormatRanges.get_length();)
                if (e = this.__textEngine.textFormatRanges.get(d), e.end <= b) ++d;
                else if (e.start >= c) break;
              else if (e.start <= b && e.end >= c)
                if (e.start == b && e.end == c) {
                  e.format = e.format.clone();
                  e.format.__merge(a);
                  break
                } else if (e.start == b) f = new jf(e.format.clone(), b, c), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(d, f), e.start = c, d += 2;
              else {
                e.end == c ? (f = new jf(e.format.clone(), b, c), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(d + 1, f)) :
                  (f = new jf(e.format.clone(), b, c), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(d + 1, f), f = new jf(e.format.clone(), c, e.end), this.__textEngine.textFormatRanges.insertAt(d + 2, f));
                e.end = b;
                break
              } else if (e.start >= b && e.end <= c) e.start == b ? (e.format = e.format.clone(), e.format.__merge(a), e.end = c) : this.__textEngine.textFormatRanges.removeAt(d);
              else if (e.start > b && e.end > b) {
                e.start = c;
                break
              } else e.start < b && e.end <= c ? (f = new jf(e.format.clone(), b, c), f.format.__merge(a), this.__textEngine.textFormatRanges.insertAt(d +
                1, f), e.end = b, d += 2) : (++d, Na.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                fileName: "openfl/text/TextField.hx",
                lineNumber: 1571,
                className: "openfl.text.TextField",
                methodName: "setTextFormat"
              }))
            }
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
          }
        },
        __allowMouseFocus: function() {
          return 1 == this.__textEngine.type || this.get_tabEnabled() ? !0 : this.get_selectable()
        },
        __caretBeginningOfLine: function() {
          this.__caretIndex = this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex))
        },
        __caretBeginningOfNextLine: function() {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex = a < this.__textEngine.numLines - 1 ? this.getLineOffset(a + 1) : this.__text.length
        },
        __caretBeginningOfPreviousLine: function() {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          if (0 < a) {
            var b = this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex));
            this.__caretIndex = this.__caretIndex ==
              b ? this.getLineOffset(a - 1) : b
          }
        },
        __caretEndOfLine: function() {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          this.__caretIndex = a < this.__textEngine.numLines - 1 ? this.getLineOffset(a + 1) - 1 : this.__text.length
        },
        __caretNextCharacter: function() {
          this.__caretIndex < this.__text.length && this.__caretIndex++
        },
        __caretNextLine: function() {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          a < this.__textEngine.numLines - 1 && (this.__caretIndex = this.__getCharIndexOnDifferentLine(this.get_caretIndex(), a + 1))
        },
        __caretPreviousCharacter: function() {
          0 <
            this.__caretIndex && this.__caretIndex--
        },
        __caretPreviousLine: function() {
          var a = this.getLineIndexOfChar(this.__caretIndex);
          0 < a && (this.__caretIndex = this.__getCharIndexOnDifferentLine(this.get_caretIndex(), a - 1))
        },
        __disableInput: function() {
          this.__inputEnabled && null != this.stage && (this.stage.window.__backend.setTextInputEnabled(!1), this.stage.window.onTextInput.remove(r(this, this.window_onTextInput)), this.stage.window.onKeyDown.remove(r(this, this.window_onKeyDown)), this.__inputEnabled = !1, this.__stopCursorTimer())
        },
        __dispatch: function(a) {
          if (2 == a.eventPhase && "mouseUp" == a.type) {
            var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
            null != b && (b = b.format.url, null != b && "" != b && (W.startsWith(b, "event:") ? this.dispatchEvent(new hf("link", !1, !1, da.substr(b, 6, null))) : Ja.getURL(new Sg(b))))
          }
          return Oa.prototype.__dispatch.call(this, a)
        },
        __enableInput: function() {
          null != this.stage && (this.stage.window.__backend.setTextInputEnabled(!0), this.__inputEnabled || (this.stage.window.__backend.setTextInputEnabled(!0), this.stage.window.onTextInput.has(r(this,
            this.window_onTextInput)) || (this.stage.window.onTextInput.add(r(this, this.window_onTextInput)), this.stage.window.onKeyDown.add(r(this, this.window_onKeyDown))), this.__inputEnabled = !0, this.__startCursorTimer()))
        },
        __getAdvance: function(a) {
          return a
        },
        __getBounds: function(a, b) {
          this.__updateLayout();
          var c = ha.__pool.get();
          c.copyFrom(this.__textEngine.bounds);
          b.tx += this.__offsetX;
          b.ty += this.__offsetY;
          c.__transform(c, b);
          a.__expand(c.x, c.y, c.width, c.height);
          ha.__pool.release(c)
        },
        __getCharBoundaries: function(a,
          b) {
          if (0 > a || a > this.__text.length - 1) return !1;
          this.__updateLayout();
          for (var c = this.__textEngine.layoutGroups.iterator(); c.hasNext();) {
            var d = c.next();
            if (a >= d.startIndex && a < d.endIndex) try {
              for (var e = d.offsetX, f = 0, g = a - d.startIndex; f < g;) {
                var h = f++;
                e += d.positions[h]
              }
              b.setTo(e, d.offsetY, d.positions[a - d.startIndex], d.ascent + d.descent);
              return !0
            } catch (m) {
              pa.lastError = m
            }
          }
          return !1
        },
        __getCharIndexOnDifferentLine: function(a, b) {
          if (0 > a || a > this.__text.length || 0 > b || b > this.__textEngine.numLines - 1) return -1;
          for (var c = null,
              d = null, e = this.__textEngine.layoutGroups.iterator(); e.hasNext();) {
            var f = e.next();
            if (a >= f.startIndex && a <= f.endIndex) {
              c = f.offsetX;
              for (var g = 0, h = a - f.startIndex; g < h;) {
                var m = g++;
                c += f.positions[m]
              }
              if (null != d) return this.__getPosition(c, d)
            }
            if (f.lineIndex == b) {
              d = f.offsetY + f.height / 2;
              f = 0;
              for (g = this.get_scrollV() - 1; f < g;) h = f++, d -= this.__textEngine.lineHeights.get(h);
              if (null != c) return this.__getPosition(c, d)
            }
          }
          return -1
        },
        __getCursor: function() {
          var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
          return null !=
            a && "" != a.format.url ? "button" : this.__textEngine.selectable ? "ibeam" : null
        },
        __getGroup: function(a, b, c) {
          null == c && (c = !1);
          this.__updateLayout();
          a += this.get_scrollH();
          for (var d = 0, e = this.get_scrollV() - 1; d < e;) {
            var f = d++;
            b += this.__textEngine.lineHeights.get(f)
          }!c && b > this.__textEngine.textHeight && (b = this.__textEngine.textHeight);
          var g = !0;
          d = 0;
          for (e = this.__textEngine.layoutGroups.get_length(); d < e;) {
            f = d++;
            var h = this.__textEngine.layoutGroups.get(f);
            f = f < this.__textEngine.layoutGroups.get_length() - 1 ? this.__textEngine.layoutGroups.get(f +
              1) : null;
            g && (b < h.offsetY && (b = h.offsetY), a < h.offsetX && (a = h.offsetX), g = !1);
            if (b >= h.offsetY && b <= h.offsetY + h.height || !c && null == f)
              if (a >= h.offsetX && a <= h.offsetX + h.width || !c && (null == f || f.lineIndex != h.lineIndex)) return h
          }
          return null
        },
        __getPosition: function(a, b) {
          b = this.__getGroup(a, b);
          if (null == b) return this.__text.length;
          for (var c = 0, d = 0, e = b.positions.length; d < e;) {
            var f = d++;
            c += b.positions[f];
            if (a <= b.offsetX + c) {
              if (a <= b.offsetX + (c - b.positions[f]) + b.positions[f] / 2) return b.startIndex + f;
              if (b.startIndex + f < b.endIndex) return b.startIndex +
                f + 1;
              break
            }
          }
          return b.endIndex
        },
        __hitTest: function(a, b, c, d, e, f) {
          if (!f.get_visible() || this.__isMask || e && !this.mouseEnabled || null != this.get_mask() && !this.get_mask().__hitTestMask(a, b)) return !1;
          this.__getRenderTransform();
          this.__updateLayout();
          c = this.__renderTransform;
          e = c.a * c.d - c.b * c.c;
          var g = 0 == e ? -c.tx : 1 / e * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          e = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(g, 0 == e ? -c.ty : 1 / e * (c.a * (b - c.ty) + c.b * (c.tx - a))) ? (null != d && d.push(f), !0) : !1
        },
        __hitTestMask: function(a,
          b) {
          this.__getRenderTransform();
          this.__updateLayout();
          var c = this.__renderTransform,
            d = c.a * c.d - c.b * c.c,
            e = 0 == d ? -c.tx : 1 / d * (c.c * (c.ty - b) + c.d * (a - c.tx));
          c = this.__renderTransform;
          d = c.a * c.d - c.b * c.c;
          return this.__textEngine.bounds.contains(e, 0 == d ? -c.ty : 1 / d * (c.a * (b - c.ty) + c.b * (c.tx - a))) ? !0 : !1
        },
        __replaceSelectedText: function(a, b) {
          null == b && (b = !0);
          null == a && (a = "");
          if ("" != a || this.__selectionIndex != this.__caretIndex) {
            var c = this.__caretIndex < this.__selectionIndex ? this.__caretIndex : this.__selectionIndex,
              d = this.__caretIndex >
              this.__selectionIndex ? this.__caretIndex : this.__selectionIndex;
            if (!(c == d && 0 < this.__textEngine.maxChars && this.__text.length == this.__textEngine.maxChars)) {
              c > this.__text.length && (c = this.__text.length);
              d > this.__text.length && (d = this.__text.length);
              if (d < c) {
                var e = d;
                d = c;
                c = e
              }
              0 > c && (c = 0);
              this.__replaceText(c, d, a, b)
            }
          }
        },
        __replaceText: function(a, b, c, d) {
          if (!(b < a || 0 > a || b > this.__text.length || null == c)) {
            d && (c = this.__textEngine.restrictText(c), 0 < this.__textEngine.maxChars && (d = this.__textEngine.maxChars - this.__text.length +
              (b - a), 0 >= d ? c = "" : d < c.length && (c = da.substr(c, 0, d))));
            this.__updateText(this.__text.substring(0, a) + c + this.__text.substring(b));
            d = c.length - (b - a);
            for (var e = 0, f; e < this.__textEngine.textFormatRanges.get_length();) f = this.__textEngine.textFormatRanges.get(e), a == b ? f.start == f.end ? 0 != f.start ? Na.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
              fileName: "openfl/text/TextField.hx",
              lineNumber: 2060,
              className: "openfl.text.TextField",
              methodName: "__replaceText"
            }) : f.end += d : f.end >= a && (f.start >= a ? (f.start += d, f.end += d) : f.start < a && f.end >= b && (f.end += d)) : f.end > a && (f.start > b ? (f.start += d, f.end += d) : f.start <= a && f.end > b ? f.end += d : f.start >= a && f.end <= b ? this.__textEngine.textFormatRanges.splice(e--, 1) : f.end > b && f.start > a && f.start <= b ? (f.start = a, f.end += d) : f.start < a && f.end > a && f.end <= b && (f.end = a)), ++e;
            0 == this.__textEngine.textFormatRanges.get_length() ? this.__textEngine.textFormatRanges.push(new jf(this.get_defaultTextFormat().clone(), 0, c.length)) :
              a == b && 0 < this.__textEngine.textFormatRanges.get(0).start ? this.__textEngine.textFormatRanges.unshift(new jf(this.get_defaultTextFormat().clone(), 0, this.__textEngine.textFormatRanges.get(0).start)) : a != b && this.__textEngine.textFormatRanges.get(this.__textEngine.textFormatRanges.get_length() - 1).end < this.__text.length && this.__textEngine.textFormatRanges.push(new jf(this.get_defaultTextFormat().clone(), this.__textEngine.textFormatRanges.get(this.__textEngine.textFormatRanges.get_length() - 1).end, this.__text.length));
            this.setSelection(a + c.length, a + c.length);
            this.__layoutDirty = this.__dirty = !0;
            this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
          }
        },
        __startCursorTimer: function() {
          this.__cursorTimer = Ue.delay(r(this, this.__startCursorTimer), 600);
          this.__showCursor = !this.__showCursor;
          this.__dirty = !0;
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())
        },
        __startTextInput: function() {
          0 > this.__caretIndex && (this.__selectionIndex = this.__caretIndex = this.__text.length);
          (ya.__supportDOM ?
            this.__renderedOnCanvasWhileOnDOM : 1) && this.__enableInput()
        },
        __stopCursorTimer: function() {
          null != this.__cursorTimer && (this.__cursorTimer.stop(), this.__cursorTimer = null);
          this.__showCursor && (this.__showCursor = !1, this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()))
        },
        __stopTextInput: function() {
          (ya.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) && this.__disableInput()
        },
        __updateLayout: function() {
          if (this.__layoutDirty) {
            var a = this.__textEngine.width;
            this.__textEngine.update();
            if (2 != this.__textEngine.autoSize) {
              if (this.__textEngine.width != a) switch (this.__textEngine.autoSize) {
                case 0:
                  this.set_x(this.get_x() + (a - this.__textEngine.width) / 2);
                  break;
                case 3:
                  this.set_x(this.get_x() + (a - this.__textEngine.width))
              }
              this.__textEngine.getBounds()
            }
            this.__layoutDirty = !1
          }
        },
        __updateScrollH: function() {
          this.__updateLayout();
          if (this.get_textWidth() <= this.get_width() - 4) this.set_scrollH(0);
          else {
            var a = this.get_scrollH();
            if (0 == this.__caretIndex || this.getLineOffset(this.getLineIndexOfChar(this.__caretIndex)) ==
              this.__caretIndex) a = 0;
            else {
              var b = ha.__pool.get(),
                c = !1;
              this.__caretIndex < this.__text.length && (c = this.__getCharBoundaries(this.__caretIndex, b));
              c || (this.__getCharBoundaries(this.__caretIndex - 1, b), b.x += b.width);
              for (; b.x < a && 0 < a;) a -= 24;
              for (; b.x > a + this.get_width() - 4;) a += 24;
              ha.__pool.release(b)
            }
            0 < a && 1 != this.get_type() && (b = this.getLineLength(this.getLineIndexOfChar(this.__caretIndex)), this.get_scrollH() + this.get_width() - 4 > b && this.set_scrollH(Math.ceil(b - this.get_width() + 4)));
            0 > a ? this.set_scrollH(0) : a > this.get_maxScrollH() ?
              this.set_scrollH(this.get_maxScrollH()) : this.set_scrollH(a)
          }
        },
        __updateScrollV: function() {
          this.__updateLayout();
          if (this.get_textHeight() <= this.get_height() - 4) this.set_scrollV(1);
          else {
            var a = this.getLineIndexOfChar(this.__caretIndex); - 1 == a && 0 < this.__caretIndex && (a = this.getLineIndexOfChar(this.__caretIndex - 1) + 1);
            if (a + 1 < this.get_scrollV()) this.set_scrollV(a + 1);
            else if (a + 1 > this.get_bottomScrollV()) {
              for (var b = 0; 0 <= a;)
                if (b + this.__textEngine.lineHeights.get(a) <= this.get_height() - 4) b += this.__textEngine.lineHeights.get(a),
                  --a;
                else break;
              this.set_scrollV(a + 2)
            } else this.set_scrollV(this.get_scrollV())
          }
        },
        __updateText: function(a) {
          ya.__supportDOM && this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = this.__text != a);
          this.__textEngine.set_text(a);
          this.__text = this.__textEngine.text;
          this.__text.length < this.__caretIndex && (this.__selectionIndex = this.__caretIndex = this.__text.length);
          if (!this.__displayAsPassword || ya.__supportDOM && !this.__renderedOnCanvasWhileOnDOM) this.__textEngine.set_text(this.__text);
          else {
            a = "";
            for (var b = 0, c = this.get_text().length; b < c;) b++, a += "*";
            this.__textEngine.set_text(a)
          }
        },
        __updateTransforms: function(a) {
          Oa.prototype.__updateTransforms.call(this, a);
          a = this.__renderTransform;
          var b = this.__offsetX,
            c = this.__offsetY;
          a.tx = b * a.a + c * a.c + a.tx;
          a.ty = b * a.b + c * a.d + a.ty
        },
        get_antiAliasType: function() {
          return this.__textEngine.antiAliasType
        },
        set_antiAliasType: function(a) {
          return this.__textEngine.antiAliasType = a
        },
        get_autoSize: function() {
          return this.__textEngine.autoSize
        },
        set_autoSize: function(a) {
          a != this.__textEngine.autoSize &&
            (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.autoSize = a
        },
        get_background: function() {
          return this.__textEngine.background
        },
        set_background: function(a) {
          a != this.__textEngine.background && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.background = a
        },
        get_backgroundColor: function() {
          return this.__textEngine.backgroundColor
        },
        set_backgroundColor: function(a) {
          a !=
            this.__textEngine.backgroundColor && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.backgroundColor = a
        },
        get_border: function() {
          return this.__textEngine.border
        },
        set_border: function(a) {
          a != this.__textEngine.border && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.border = a
        },
        get_borderColor: function() {
          return this.__textEngine.borderColor
        },
        set_borderColor: function(a) {
          a !=
            this.__textEngine.borderColor && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.borderColor = a
        },
        get_bottomScrollV: function() {
          this.__updateLayout();
          return this.__textEngine.get_bottomScrollV()
        },
        get_caretIndex: function() {
          return this.__caretIndex
        },
        get_defaultTextFormat: function() {
          return this.__textFormat.clone()
        },
        set_defaultTextFormat: function(a) {
          this.__textFormat.__merge(a);
          this.__dirty = this.__layoutDirty = !0;
          this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          return a
        },
        get_displayAsPassword: function() {
          return this.__displayAsPassword
        },
        set_displayAsPassword: function(a) {
          a != this.__displayAsPassword && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__displayAsPassword = a, this.__updateText(this.__text));
          return a
        },
        get_embedFonts: function() {
          return this.__textEngine.embedFonts
        },
        set_embedFonts: function(a) {
          return this.__textEngine.embedFonts = a
        },
        get_gridFitType: function() {
          return this.__textEngine.gridFitType
        },
        set_gridFitType: function(a) {
          return this.__textEngine.gridFitType = a
        },
        get_height: function() {
          this.__updateLayout();
          return this.__textEngine.height * Math.abs(this.get_scaleY())
        },
        set_height: function(a) {
          a != this.__textEngine.height && (this.__setTransformDirty(), this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.height = a);
          return this.__textEngine.height * Math.abs(this.get_scaleY())
        },
        get_htmlText: function() {
          return this.__isHTML ? this.__rawHtmlText :
            this.__text
        },
        set_htmlText: function(a) {
          this.__isHTML && this.__text == a || (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          this.__isHTML = !0;
          this.__rawHtmlText = a;
          a = Ab.parse(a, this.__textFormat, this.__textEngine.textFormatRanges);
          if (ya.__supportDOM) {
            1 < this.__textEngine.textFormatRanges.get_length() && this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.get_length() - 1);
            var b = this.__textEngine.textFormatRanges.get(0);
            b.format =
              this.__textFormat;
            b.start = 0;
            this.__renderedOnCanvasWhileOnDOM ? (b.end = a.length, this.__updateText(a)) : (b.end = this.__rawHtmlText.length, this.__updateText(this.__rawHtmlText))
          } else this.__updateText(a);
          this.setSelection(this.get_length(), this.get_length());
          return a
        },
        get_length: function() {
          return null != this.__text ? this.__text.length : 0
        },
        get_maxChars: function() {
          return this.__textEngine.maxChars
        },
        set_maxChars: function(a) {
          a != this.__textEngine.maxChars && (this.__textEngine.maxChars = a, this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return a
        },
        get_maxScrollH: function() {
          this.__updateLayout();
          return this.__textEngine.maxScrollH
        },
        get_maxScrollV: function() {
          this.__updateLayout();
          return this.__textEngine.get_maxScrollV()
        },
        get_mouseWheelEnabled: function() {
          return this.__mouseWheelEnabled
        },
        set_mouseWheelEnabled: function(a) {
          return this.__mouseWheelEnabled = a
        },
        get_multiline: function() {
          return this.__textEngine.multiline
        },
        set_multiline: function(a) {
          a != this.__textEngine.multiline &&
            (this.__layoutDirty = this.__dirty = !0, this.__updateText(this.__text), this.__updateScrollH(), this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.multiline = a
        },
        get_numLines: function() {
          this.__updateLayout();
          return this.__textEngine.numLines
        },
        get_restrict: function() {
          return this.__textEngine.restrict
        },
        set_restrict: function(a) {
          this.__textEngine.restrict != a && (this.__textEngine.set_restrict(a), this.__updateText(this.__text));
          return a
        },
        get_scrollH: function() {
          return this.__textEngine.scrollH
        },
        set_scrollH: function(a) {
          this.__updateLayout();
          a > this.__textEngine.maxScrollH && (a = this.__textEngine.maxScrollH);
          0 > a && (a = 0);
          a != this.__textEngine.scrollH && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.scrollH = a, this.dispatchEvent(new ma("scroll")));
          return this.__textEngine.scrollH
        },
        get_scrollV: function() {
          return this.__textEngine.get_scrollV()
        },
        set_scrollV: function(a) {
          this.__updateLayout();
          0 < a && a != this.__textEngine.get_scrollV() && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.set_scrollV(a), this.dispatchEvent(new ma("scroll")));
          return this.__textEngine.get_scrollV()
        },
        get_selectable: function() {
          return this.__textEngine.selectable
        },
        set_selectable: function(a) {
          a != this.__textEngine.selectable && 1 == this.get_type() && (null != this.stage && this.stage.get_focus() == this ? this.__startTextInput() : a || this.__stopTextInput());
          return this.__textEngine.selectable = a
        },
        get_selectionBeginIndex: function() {
          return Math.min(this.__caretIndex,
            this.__selectionIndex) | 0
        },
        get_selectionEndIndex: function() {
          return Math.max(this.__caretIndex, this.__selectionIndex) | 0
        },
        get_sharpness: function() {
          return this.__textEngine.sharpness
        },
        set_sharpness: function(a) {
          a != this.__textEngine.sharpness && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.sharpness = a
        },
        get_tabEnabled: function() {
          return null == this.__tabEnabled ? 1 == this.__textEngine.type : this.__tabEnabled
        },
        get_text: function() {
          return this.__text
        },
        set_text: function(a) {
          if (this.__isHTML || this.__text != a) this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty());
          else return a;
          1 < this.__textEngine.textFormatRanges.get_length() && this.__textEngine.textFormatRanges.splice(1, this.__textEngine.textFormatRanges.get_length() - 1);
          var b = this.__textEngine.textFormatRanges.get(0);
          b.format = this.__textFormat;
          b.start = 0;
          b.end = a.length;
          this.__isHTML = !1;
          this.__updateText(a);
          this.setSelection(0, 0);
          return a
        },
        get_textColor: function() {
          return this.__textFormat.color
        },
        set_textColor: function(a) {
          a != this.__textFormat.color && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          for (var b = this.__textEngine.textFormatRanges.iterator(); b.hasNext();) b.next().format.color = a;
          return this.__textFormat.color = a
        },
        get_textWidth: function() {
          this.__updateLayout();
          return this.__textEngine.textWidth
        },
        get_textHeight: function() {
          this.__updateLayout();
          return this.__textEngine.textHeight
        },
        get_type: function() {
          return this.__textEngine.type
        },
        set_type: function(a) {
          a !=
            this.__textEngine.type && (1 == a ? (this.addEventListener("addedToStage", r(this, this.this_onAddedToStage)), this.this_onFocusIn(null), this.__textEngine.__useIntAdvances = !0) : (this.removeEventListener("addedToStage", r(this, this.this_onAddedToStage)), this.__stopTextInput(), this.__textEngine.__useIntAdvances = null), this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.type = a
        },
        get_width: function() {
          this.__updateLayout();
          return this.__textEngine.width *
            Math.abs(this.__scaleX)
        },
        set_width: function(a) {
          a != this.__textEngine.width && (this.__setTransformDirty(), this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()), this.__textEngine.width = a);
          return this.__textEngine.width * Math.abs(this.__scaleX)
        },
        get_wordWrap: function() {
          return this.__textEngine.wordWrap
        },
        set_wordWrap: function(a) {
          a != this.__textEngine.wordWrap && (this.__layoutDirty = this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()));
          return this.__textEngine.wordWrap = a
        },
        get_x: function() {
          return this.__transform.tx + this.__offsetX
        },
        set_x: function(a) {
          a != this.__transform.tx + this.__offsetX && this.__setTransformDirty();
          return this.__transform.tx = a - this.__offsetX
        },
        get_y: function() {
          return this.__transform.ty + this.__offsetY
        },
        set_y: function(a) {
          a != this.__transform.ty + this.__offsetY && this.__setTransformDirty();
          return this.__transform.ty = a - this.__offsetY
        },
        stage_onMouseMove: function(a) {
          null != this.stage && this.get_selectable() && 0 <= this.__selectionIndex &&
            (this.__updateLayout(), a = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY()), a != this.__caretIndex && (this.__caretIndex = a, a = !0, ya.__supportDOM && (this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0), a = !1), a && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()))))
        },
        stage_onMouseUp: function(a) {
          if (null != this.stage && (this.stage.removeEventListener("mouseMove", r(this, this.stage_onMouseMove)), this.stage.removeEventListener("mouseUp",
              r(this, this.stage_onMouseUp)), this.stage.get_focus() == this)) {
            this.__getWorldTransform();
            this.__updateLayout();
            a = this.__getPosition(this.get_mouseX() + this.get_scrollH(), this.get_mouseY());
            var b = Math.max(this.__selectionIndex, a) | 0;
            this.__selectionIndex = Math.min(this.__selectionIndex, a) | 0;
            this.__caretIndex = b;
            this.__inputEnabled && (this.this_onFocusIn(null), this.__stopCursorTimer(), this.__startCursorTimer(), ya.__supportDOM && this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0))
          }
        },
        this_onAddedToStage: function(a) {
          this.this_onFocusIn(null)
        },
        this_onFocusIn: function(a) {
          1 == this.get_type() && null != this.stage && this.stage.get_focus() == this && this.__startTextInput()
        },
        this_onFocusOut: function(a) {
          this.__stopCursorTimer();
          null != a.relatedObject && a.relatedObject instanceof Se ? (null != this.stage && (this.stage.window.onTextInput.remove(r(this, this.window_onTextInput)), this.stage.window.onKeyDown.remove(r(this, this.window_onKeyDown))), this.__inputEnabled = !1) : this.__stopTextInput();
          this.__selectionIndex != this.__caretIndex && (this.__selectionIndex = this.__caretIndex,
            this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty()))
        },
        this_onKeyDown: function(a) {
          this.get_selectable() && 1 != this.get_type() && 67 == a.keyCode && (a.commandKey || a.ctrlKey) && this.__caretIndex != this.__selectionIndex && oe.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex))
        },
        this_onMouseDown: function(a) {
          if (this.get_selectable() || 1 == this.get_type()) this.__updateLayout(), this.__selectionIndex = this.__caretIndex = this.__getPosition(this.get_mouseX() + this.get_scrollH(),
            this.get_mouseY()), ya.__supportDOM || (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())), this.stage.addEventListener("mouseMove", r(this, this.stage_onMouseMove)), this.stage.addEventListener("mouseUp", r(this, this.stage_onMouseUp))
        },
        this_onMouseWheel: function(a) {
          this.get_mouseWheelEnabled() && this.set_scrollV(this.get_scrollV() - a.delta)
        },
        this_onDoubleClick: function(a) {
          if (this.get_selectable()) {
            this.__updateLayout();
            a = "\n.!?, ;:()-_/".split("");
            var b = this.__text,
              c = -1,
              d = b.length,
              e = Math.max(this.__caretIndex, 1) | 0;
            if (0 < b.length && 0 <= this.__caretIndex && d >= this.__caretIndex) {
              for (var f = 0; f < a.length;) {
                var g = a[f];
                ++f;
                var h = b.lastIndexOf(g, e - 1);
                h > c && (c = h + 1);
                h = b.indexOf(g, e);
                h < d && -1 != h && (d = h)
              }
              c != d && (this.setSelection(c, d), a = !0, ya.__supportDOM && (this.__renderedOnCanvasWhileOnDOM && (this.__forceCachedBitmapUpdate = !0), a = !1), a && (this.__dirty = !0, this.__renderDirty || (this.__renderDirty = !0, this.__setParentRenderDirty())))
            }
          }
        },
        window_onKeyDown: function(a, b) {
          switch (a) {
            case 8:
              this.__selectionIndex ==
                this.__caretIndex && 0 < this.__caretIndex && (this.__selectionIndex = this.__caretIndex - 1);
              this.__selectionIndex != this.__caretIndex ? (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new ma("change", !0))) : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 97:
              this.get_selectable() && (Db.get_metaKey(b) || Db.get_ctrlKey(b)) && (this.__caretIndex = this.__text.length, this.__selectionIndex = 0);
              break;
            case 99:
              (Db.get_metaKey(b) || Db.get_ctrlKey(b)) && this.__caretIndex !=
                this.__selectionIndex && oe.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex));
              break;
            case 120:
              (Db.get_metaKey(b) || Db.get_ctrlKey(b)) && this.__caretIndex != this.__selectionIndex && (oe.set_text(this.__text.substring(this.__caretIndex, this.__selectionIndex)), this.replaceSelectedText(""), this.dispatchEvent(new ma("change", !0)));
              break;
            case 127:
              this.__selectionIndex == this.__caretIndex && this.__caretIndex < this.__text.length && (this.__selectionIndex = this.__caretIndex + 1);
              this.__selectionIndex !=
                this.__caretIndex ? (this.replaceSelectedText(""), this.__selectionIndex = this.__caretIndex, this.dispatchEvent(new ma("change", !0))) : (this.__stopCursorTimer(), this.__startCursorTimer());
              break;
            case 1073741898:
              this.get_selectable() && (Db.get_metaKey(b) || Db.get_ctrlKey(b) ? this.__caretIndex = 0 : this.__caretBeginningOfLine(), Db.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex), this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741901:
              this.get_selectable() && (Db.get_metaKey(b) ||
                Db.get_ctrlKey(b) ? this.__caretIndex = this.__text.length : this.__caretEndOfLine(), Db.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex), this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741903:
              this.get_selectable() && (Db.get_metaKey(b) || Db.get_ctrlKey(b) ? this.__caretBeginningOfNextLine() : this.__caretNextCharacter(), Db.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex), this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741904:
              this.get_selectable() &&
                (Db.get_metaKey(b) || Db.get_ctrlKey(b) ? this.__caretBeginningOfPreviousLine() : this.__caretPreviousCharacter(), Db.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex), this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741905:
              this.get_selectable() && (Db.get_metaKey(b) || Db.get_ctrlKey(b) ? this.__caretIndex = this.__text.length : this.__caretNextLine(), Db.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex), this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 1073741906:
              this.get_selectable() && (Db.get_metaKey(b) || Db.get_ctrlKey(b) ? this.__caretIndex = 0 : this.__caretPreviousLine(), Db.get_shiftKey(b) || (this.__selectionIndex = this.__caretIndex), this.setSelection(this.__selectionIndex, this.__caretIndex));
              break;
            case 13:
            case 1073741912:
              this.__textEngine.multiline ? (a = new hf("textInput", !0, !0, "\n"), this.dispatchEvent(a), a.isDefaultPrevented() || (this.__replaceSelectedText("\n", !0), this.dispatchEvent(new ma("change", !0)))) : (this.__stopCursorTimer(), this.__startCursorTimer())
          }
        },
        window_onTextInput: function(a) {
          this.__replaceSelectedText(a, !0);
          this.dispatchEvent(new ma("change", !0))
        },
        __class__: Se,
        __properties__: t(Oa.prototype.__properties__, {
          set_wordWrap: "set_wordWrap",
          get_wordWrap: "get_wordWrap",
          set_type: "set_type",
          get_type: "get_type",
          get_textWidth: "get_textWidth",
          get_textHeight: "get_textHeight",
          set_textColor: "set_textColor",
          get_textColor: "get_textColor",
          set_text: "set_text",
          get_text: "get_text",
          set_sharpness: "set_sharpness",
          get_sharpness: "get_sharpness",
          get_selectionEndIndex: "get_selectionEndIndex",
          get_selectionBeginIndex: "get_selectionBeginIndex",
          set_selectable: "set_selectable",
          get_selectable: "get_selectable",
          set_scrollV: "set_scrollV",
          get_scrollV: "get_scrollV",
          set_scrollH: "set_scrollH",
          get_scrollH: "get_scrollH",
          set_restrict: "set_restrict",
          get_restrict: "get_restrict",
          get_numLines: "get_numLines",
          set_multiline: "set_multiline",
          get_multiline: "get_multiline",
          set_mouseWheelEnabled: "set_mouseWheelEnabled",
          get_mouseWheelEnabled: "get_mouseWheelEnabled",
          get_maxScrollV: "get_maxScrollV",
          get_maxScrollH: "get_maxScrollH",
          set_maxChars: "set_maxChars",
          get_maxChars: "get_maxChars",
          get_length: "get_length",
          set_htmlText: "set_htmlText",
          get_htmlText: "get_htmlText",
          set_gridFitType: "set_gridFitType",
          get_gridFitType: "get_gridFitType",
          set_embedFonts: "set_embedFonts",
          get_embedFonts: "get_embedFonts",
          set_displayAsPassword: "set_displayAsPassword",
          get_displayAsPassword: "get_displayAsPassword",
          set_defaultTextFormat: "set_defaultTextFormat",
          get_defaultTextFormat: "get_defaultTextFormat",
          get_caretIndex: "get_caretIndex",
          get_bottomScrollV: "get_bottomScrollV",
          set_borderColor: "set_borderColor",
          get_borderColor: "get_borderColor",
          set_border: "set_border",
          get_border: "get_border",
          set_backgroundColor: "set_backgroundColor",
          get_backgroundColor: "get_backgroundColor",
          set_background: "set_background",
          get_background: "get_background",
          set_autoSize: "set_autoSize",
          get_autoSize: "get_autoSize",
          set_antiAliasType: "set_antiAliasType",
          get_antiAliasType: "get_antiAliasType"
        })
      });
      var wg = function(a, b, c, d, e, f, g, h, m, l, p, n, q) {
        this.font = a;
        this.size = b;
        this.color = c;
        this.bold = d;
        this.italic =
          e;
        this.underline = f;
        this.url = g;
        this.target = h;
        this.align = m;
        this.leftMargin = l;
        this.rightMargin = p;
        this.indent = n;
        this.leading = q
      };
      k["openfl.text.TextFormat"] = wg;
      wg.__name__ = "openfl.text.TextFormat";
      wg.prototype = {
        align: null,
        blockIndent: null,
        bold: null,
        bullet: null,
        color: null,
        font: null,
        indent: null,
        italic: null,
        kerning: null,
        leading: null,
        leftMargin: null,
        letterSpacing: null,
        rightMargin: null,
        size: null,
        tabStops: null,
        target: null,
        underline: null,
        url: null,
        __ascent: null,
        __descent: null,
        clone: function() {
          var a = new wg(this.font,
            this.size, this.color, this.bold, this.italic, this.underline, this.url, this.target);
          a.align = this.align;
          a.leftMargin = this.leftMargin;
          a.rightMargin = this.rightMargin;
          a.indent = this.indent;
          a.leading = this.leading;
          a.blockIndent = this.blockIndent;
          a.bullet = this.bullet;
          a.kerning = this.kerning;
          a.letterSpacing = this.letterSpacing;
          a.tabStops = this.tabStops;
          a.__ascent = this.__ascent;
          a.__descent = this.__descent;
          return a
        },
        __merge: function(a) {
          null != a.font && (this.font = a.font);
          null != a.size && (this.size = a.size);
          null != a.color &&
            (this.color = a.color);
          null != a.bold && (this.bold = a.bold);
          null != a.italic && (this.italic = a.italic);
          null != a.underline && (this.underline = a.underline);
          null != a.url && (this.url = a.url);
          null != a.target && (this.target = a.target);
          null != a.align && (this.align = a.align);
          null != a.leftMargin && (this.leftMargin = a.leftMargin);
          null != a.rightMargin && (this.rightMargin = a.rightMargin);
          null != a.indent && (this.indent = a.indent);
          null != a.leading && (this.leading = a.leading);
          null != a.blockIndent && (this.blockIndent = a.blockIndent);
          null != a.bullet &&
            (this.bullet = a.bullet);
          null != a.kerning && (this.kerning = a.kerning);
          null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
          null != a.tabStops && (this.tabStops = a.tabStops);
          null != a.__ascent && (this.__ascent = a.__ascent);
          null != a.__descent && (this.__descent = a.__descent)
        },
        __class__: wg
      };
      var lk = {
          fromString: function(a) {
            switch (a) {
              case "center":
                return 0;
              case "end":
                return 1;
              case "justify":
                return 2;
              case "left":
                return 3;
              case "right":
                return 4;
              case "start":
                return 5;
              default:
                return null
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "center";
              case 1:
                return "end";
              case 2:
                return "justify";
              case 3:
                return "left";
              case 4:
                return "right";
              case 5:
                return "start";
              default:
                return null
            }
          }
        },
        lp = function(a, b, c, d, e, f) {
          this.x = a;
          this.width = b;
          this.height = c;
          this.ascent = d;
          this.descent = e;
          this.leading = f
        };
      k["openfl.text.TextLineMetrics"] = lp;
      lp.__name__ = "openfl.text.TextLineMetrics";
      lp.prototype = {
        ascent: null,
        descent: null,
        height: null,
        leading: null,
        width: null,
        x: null,
        __class__: lp
      };
      var mp = function(a, b, c) {
        this.glyph = a;
        this.advance = b;
        this.offset = null != c ? c : new be
      };
      k["openfl.text._internal.GlyphPosition"] =
        mp;
      mp.__name__ = "openfl.text._internal.GlyphPosition";
      mp.prototype = {
        advance: null,
        glyph: null,
        offset: null,
        __class__: mp
      };
      var Ab = function() {};
      k["openfl.text._internal.HTMLParser"] = Ab;
      Ab.__name__ = "openfl.text._internal.HTMLParser";
      Ab.parse = function(a, b, c) {
        a = a.replace(Ab.__regexBreakTag.r, "\n");
        a = a.replace(Ab.__regexEntities[5].r, " ");
        var d = a.split("<");
        if (1 == d.length) a = W.htmlUnescape(a.replace(Ab.__regexHTMLTag.r, "")), 1 < c.get_length() && c.splice(1, c.get_length() - 1), c = c.get(0), c.format = b, c.start = 0, c.end =
          a.length;
        else {
          c.splice(0, c.get_length());
          a = "";
          for (var e, f = [b.clone()], g = [], h = !1, m = 0; m < d.length;)
            if (e = d[m], ++m, "" != e) {
              var l = "/" == da.substr(e, 0, 1),
                p = e.indexOf(">"),
                n = p + 1,
                q = e.indexOf(" ");
              q = e.substring(l ? 1 : 0, -1 < q && q < p ? q : p);
              if (l) 0 == g.length || q.toLowerCase() != g[g.length - 1].toLowerCase() ? Na.info("Invalid HTML, unexpected closing tag ignored: " + q, {
                fileName: "openfl/text/_internal/HTMLParser.hx",
                lineNumber: 82,
                className: "openfl.text._internal.HTMLParser",
                methodName: "parse"
              }) : (g.pop(), f.pop(), l = f[f.length - 1].clone(),
                "p" == q.toLowerCase() && 0 < c.get_length() && (a += "\n", h = !0), n < e.length && (e = W.htmlUnescape(da.substr(e, n, null)), c.push(new jf(l, a.length, a.length + e.length)), a += e, h = !1));
              else if (l = f[f.length - 1].clone(), -1 < p) {
                switch (q.toLowerCase()) {
                  case "a":
                    Ab.__regexHref.match(e) && (l.url = Ab.__getAttributeMatch(Ab.__regexHref));
                    break;
                  case "b":
                    l.bold = !0;
                    break;
                  case "em":
                  case "i":
                    l.italic = !0;
                    break;
                  case "font":
                    Ab.__regexFace.match(e) && (l.font = Ab.__getAttributeMatch(Ab.__regexFace));
                    Ab.__regexColor.match(e) && (l.color = M.parseInt("0x" +
                      Ab.__getAttributeMatch(Ab.__regexColor)));
                    if (Ab.__regexSize.match(e)) {
                      p = Ab.__getAttributeMatch(Ab.__regexSize);
                      var k = da.cca(p, 0);
                      l.size = 43 == k || 45 == k ? (2 <= f.length ? f[f.length - 2] : b).size + M.parseInt(p) : M.parseInt(p)
                    }
                    break;
                  case "p":
                    0 < c.get_length() && !h && (a += "\n");
                    Ab.__regexAlign.match(e) && (p = Ab.__getAttributeMatch(Ab.__regexAlign).toLowerCase(), l.align = lk.fromString(p));
                    break;
                  case "textformat":
                    Ab.__regexBlockIndent.match(e) && (l.blockIndent = M.parseInt(Ab.__getAttributeMatch(Ab.__regexBlockIndent)));
                    Ab.__regexIndent.match(e) &&
                      (l.indent = M.parseInt(Ab.__getAttributeMatch(Ab.__regexIndent)));
                    Ab.__regexLeading.match(e) && (l.leading = M.parseInt(Ab.__getAttributeMatch(Ab.__regexLeading)));
                    Ab.__regexLeftMargin.match(e) && (l.leftMargin = M.parseInt(Ab.__getAttributeMatch(Ab.__regexLeftMargin)));
                    Ab.__regexRightMargin.match(e) && (l.rightMargin = M.parseInt(Ab.__getAttributeMatch(Ab.__regexRightMargin)));
                    if (Ab.__regexTabStops.match(e)) {
                      p = Ab.__getAttributeMatch(Ab.__regexTabStops).split(" ");
                      k = [];
                      for (var u = 0; u < p.length;) {
                        var v = p[u];
                        ++u;
                        k.push(M.parseInt(v))
                      }
                      l.tabStops =
                        k
                    }
                    break;
                  case "u":
                    l.underline = !0
                }
                f.push(l);
                g.push(q);
                n < e.length && (e = W.htmlUnescape(e.substring(n)), c.push(new jf(l, a.length, a.length + e.length)), a += e, h = !1)
              } else e = W.htmlUnescape(e), c.push(new jf(l, a.length, a.length + e.length)), a += e, h = !1
            } 0 == c.get_length() && c.push(new jf(f[0], 0, 0))
        }
        return a
      };
      Ab.__getAttributeMatch = function(a) {
        return null != a.matched(2) ? a.matched(2) : a.matched(3)
      };
      var Ub = function(a) {
        this.textField = a;
        this.height = this.width = 100;
        this.set_text("");
        this.bounds = new ha(0, 0, 0, 0);
        this.textBounds =
          new ha(0, 0, 0, 0);
        this.type = 0;
        this.autoSize = 2;
        this.embedFonts = !1;
        this.selectable = !0;
        this.borderColor = 0;
        this.border = !1;
        this.backgroundColor = 16777215;
        this.background = !1;
        this.gridFitType = 1;
        this.maxChars = 0;
        this.multiline = !1;
        this.numLines = 1;
        this.scrollH = this.sharpness = 0;
        this.set_scrollV(1);
        this.wordWrap = !1;
        this.lineAscents = Fb.toFloatVector(null);
        this.lineBreaks = Fb.toIntVector(null);
        this.lineDescents = Fb.toFloatVector(null);
        this.lineLeadings = Fb.toFloatVector(null);
        this.lineHeights = Fb.toFloatVector(null);
        this.lineWidths =
          Fb.toFloatVector(null);
        this.layoutGroups = Fb.toObjectVector(null);
        this.textFormatRanges = Fb.toObjectVector(null);
        null == Ub.__context && (Ub.__context = window.document.createElement("canvas").getContext("2d"))
      };
      k["openfl.text._internal.TextEngine"] = Ub;
      Ub.__name__ = "openfl.text._internal.TextEngine";
      Ub.findFont = function(a) {
        return Wc.__fontByName.h[a]
      };
      Ub.findFontVariant = function(a) {
        var b = a.font,
          c = a.bold;
        a = a.italic;
        null == b && (b = "_serif");
        var d = W.replace(W.replace(b, " Normal", ""), " Regular", "");
        return c && a &&
          Object.prototype.hasOwnProperty.call(Wc.__fontByName.h, d + " Bold Italic") ? Ub.findFont(d + " Bold Italic") : c && Object.prototype.hasOwnProperty.call(Wc.__fontByName.h, d + " Bold") ? Ub.findFont(d + " Bold") : a && Object.prototype.hasOwnProperty.call(Wc.__fontByName.h, d + " Italic") ? Ub.findFont(d + " Italic") : Ub.findFont(b)
      };
      Ub.getFormatHeight = function(a) {
        Ub.__context.font = Ub.getFont(a);
        var b = Ub.getFontInstance(a);
        if (null != a.__ascent) {
          var c = a.size * a.__ascent;
          b = a.size * a.__descent
        } else null != b && 0 != b.unitsPerEM ? (c = b.ascender /
          b.unitsPerEM * a.size, b = Math.abs(b.descender / b.unitsPerEM * a.size)) : (c = a.size, b = .185 * a.size);
        return c + b + a.leading
      };
      Ub.getFont = function(a) {
        var b = a.font,
          c = a.bold,
          d = a.italic;
        null == b && (b = "_serif");
        var e = W.replace(W.replace(b, " Normal", ""), " Regular", "");
        c && d && Object.prototype.hasOwnProperty.call(Wc.__fontByName.h, e + " Bold Italic") ? (b = e + " Bold Italic", d = c = !1) : c && Object.prototype.hasOwnProperty.call(Wc.__fontByName.h, e + " Bold") ? (b = e + " Bold", c = !1) : d && Object.prototype.hasOwnProperty.call(Wc.__fontByName.h, e +
          " Italic") ? (b = e + " Italic", d = !1) : (c && (-1 < b.indexOf(" Bold ") || W.endsWith(b, " Bold")) && (c = !1), d && (-1 < b.indexOf(" Italic ") || W.endsWith(b, " Italic")) && (d = !1));
        c = (d ? "italic " : "normal ") + "normal " + (c ? "bold " : "normal ");
        c += a.size + "px";
        c += "/" + (a.leading + a.size + 3) + "px ";
        switch (b) {
          case "_sans":
            a = "sans-serif";
            break;
          case "_serif":
            a = "serif";
            break;
          case "_typewriter":
            a = "monospace";
            break;
          default:
            a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, "$1") + "'"
        }
        return c += "" + a
      };
      Ub.getFontInstance = function(a) {
        return Ub.findFontVariant(a)
      };
      Ub.prototype = {
        antiAliasType: null,
        autoSize: null,
        background: null,
        backgroundColor: null,
        border: null,
        borderColor: null,
        bottomScrollV: null,
        bounds: null,
        caretIndex: null,
        embedFonts: null,
        gridFitType: null,
        height: null,
        layoutGroups: null,
        lineAscents: null,
        lineBreaks: null,
        lineDescents: null,
        lineLeadings: null,
        lineHeights: null,
        lineWidths: null,
        maxChars: null,
        maxScrollH: null,
        maxScrollV: null,
        multiline: null,
        numLines: null,
        restrict: null,
        scrollH: null,
        scrollV: null,
        selectable: null,
        sharpness: null,
        text: null,
        textBounds: null,
        textHeight: null,
        textFormatRanges: null,
        textWidth: null,
        type: null,
        width: null,
        wordWrap: null,
        textField: null,
        __cursorTimer: null,
        __hasFocus: null,
        __isKeyDown: null,
        __measuredHeight: null,
        __measuredWidth: null,
        __restrictRegexp: null,
        __selectionStart: null,
        __showCursor: null,
        __textFormat: null,
        __textLayout: null,
        __texture: null,
        __useIntAdvances: null,
        __cairoFont: null,
        __font: null,
        createRestrictRegexp: function(a) {
          var b = "",
            c = [];
          0 < (new nb("\\^(.-.|.)", "gu")).map(a, function(a) {
            b += a.matched(1);
            return ""
          }).length && c.push("[^" + a + "]");
          0 < b.length &&
            c.push("[" + b + "]");
          return new nb("(" + c.join("|") + ")", "g")
        },
        getBounds: function() {
          var a = this.border ? 1 : 0;
          this.bounds.width = this.width + a;
          this.bounds.height = this.height + a;
          for (var b = a = this.width, c = this.layoutGroups.iterator(); c.hasNext();) {
            var d = c.next();
            d.offsetX < a && (a = d.offsetX);
            d.offsetY < b && (b = d.offsetY)
          }
          a >= this.width && (a = 2);
          b >= this.height && (b = 2);
          this.textBounds.setTo(Math.max(a - 2, 0), Math.max(b - 2, 0), Math.min(this.textWidth + 4, this.bounds.width + 4), Math.min(1.185 * this.textHeight + 4, this.bounds.height + 4))
        },
        getLine: function(a) {
          return 0 > a || a > this.lineBreaks.get_length() + 1 ? null : 0 == this.lineBreaks.get_length() ? this.text : this.text.substring(0 < a ? this.lineBreaks.get(a - 1) : 0, this.lineBreaks.get(a))
        },
        getLineBreakIndex: function(a) {
          null == a && (a = 0);
          var b = this.text.indexOf("\n", a);
          a = this.text.indexOf("\r", a);
          return -1 == b ? a : -1 == a ? b : b < a ? b : a
        },
        getLineMeasurements: function() {
          this.lineAscents.set_length(0);
          this.lineDescents.set_length(0);
          this.lineLeadings.set_length(0);
          this.lineHeights.set_length(0);
          this.lineWidths.set_length(0);
          var a = 0,
            b = 0,
            c = null,
            d = 0,
            e = 0,
            f;
          this.textHeight = this.textWidth = 0;
          this.numLines = 1;
          this.maxScrollH = 0;
          for (var g = this.layoutGroups.iterator(); g.hasNext();) {
            for (f = g.next(); f.lineIndex > this.numLines - 1;) this.lineAscents.push(a), this.lineDescents.push(b), this.lineLeadings.push(null != c ? c : 0), this.lineHeights.push(d), this.lineWidths.push(e), b = a = 0, c = null, e = d = 0, this.numLines++;
            a = Math.max(a, f.ascent);
            b = Math.max(b, f.descent);
            c = null == c ? f.leading : Math.max(c, f.leading) | 0;
            d = Math.max(d, f.height);
            e = f.offsetX - 2 + f.width;
            e >
              this.textWidth && (this.textWidth = e);
            f = f.offsetY - 2 + f.ascent + f.descent;
            f > this.textHeight && (this.textHeight = f)
          }
          0 == this.textHeight && null != this.textField && 1 == this.textField.get_type() && (a = this.textField.__textFormat, b = Ub.getFontInstance(a), null != a.__ascent ? (g = a.size * a.__ascent, f = a.size * a.__descent) : null != b && 0 != b.unitsPerEM ? (g = b.ascender / b.unitsPerEM * a.size, f = Math.abs(b.descender / b.unitsPerEM * a.size)) : (g = a.size, f = .185 * a.size), c = a.leading, a = g, b = f, this.textHeight = g + f);
          this.lineAscents.push(a);
          this.lineDescents.push(b);
          this.lineLeadings.push(null != c ? c : 0);
          this.lineHeights.push(d);
          this.lineWidths.push(e);
          1 == this.numLines && 0 < c && (this.textHeight += c);
          0 < this.layoutGroups.get_length() && (g = this.layoutGroups.get(this.layoutGroups.get_length() - 1), null != g && g.startIndex == g.endIndex && (this.textHeight -= d));
          if (2 != this.autoSize) switch (this.autoSize) {
            case 0:
            case 1:
            case 3:
              this.wordWrap || (this.width = this.textWidth + 4), this.height = this.textHeight + 4, this.bottomScrollV = this.numLines
          }
          this.maxScrollH = this.textWidth > this.width - 4 ? this.textWidth -
            this.width + 4 | 0 : 0;
          this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH)
        },
        getLayoutGroups: function() {
          var a = this;
          this.layoutGroups.set_length(0);
          if (null != this.text && "" != this.text) {
            var b = -1,
              c = null,
              d = null,
              e = Se.__defaultTextFormat.clone(),
              f = 0,
              g = 0,
              h = 0,
              m = 0,
              l = 3,
              p = 0,
              n = 0,
              q = 0,
              k = 0,
              u = !0,
              v = null,
              r = null,
              t = 0,
              w = 0,
              z = 0,
              Q = -2,
              O = -1,
              A = this.text.indexOf(" "),
              aa = this.getLineBreakIndex(),
              B = 0,
              D = 0,
              x = 0,
              F = 0,
              C = function(b, c, d) {
                var e = [];
                if (null == a.__useIntAdvances) {
                  var f = new nb("Trident/7.0", "");
                  a.__useIntAdvances = f.match(L.navigator.userAgent)
                }
                if (a.__useIntAdvances) {
                  var g =
                    0;
                  for (f = c; f < d;) {
                    var h = f++;
                    h = Ub.__context.measureText(b.substring(c, h + 1)).width;
                    e.push(h - g);
                    g = h
                  }
                } else
                  for (f = c; f < d;) h = f++, h < b.length - 1 ? (c = Ub.__context.measureText(b.charAt(h + 1)).width, c = Ub.__context.measureText(da.substr(b, h, 2)).width - c) : c = Ub.__context.measureText(b.charAt(h)).width, e.push(c);
                return e
              },
              G = function(a) {
                for (var b = 0, c = 0; c < a.length;) {
                  var d = a[c];
                  ++c;
                  b += d
                }
                return b
              },
              H = function() {
                return 2 + q + p + (u ? n : 0)
              },
              E = function() {
                return a.width - 2 - k - H()
              },
              K = function(b, d) {
                null == v || v.startIndex != v.endIndex ? (v = new on(c.format,
                  b, d), a.layoutGroups.push(v)) : (v.format = c.format, v.startIndex = b, v.endIndex = d)
              },
              N = function() {
                null != e.__ascent ? (g = e.size * e.__ascent, m = e.size * e.__descent) : null != d && 0 != d.unitsPerEM ? (g = d.ascender / d.unitsPerEM * e.size, m = Math.abs(d.descender / d.unitsPerEM * e.size)) : (g = e.size, m = .185 * e.size);
                f = e.leading;
                w = Math.ceil(g + m + f);
                w > z && (z = w);
                g > h && (h = g)
              },
              M = function() {
                u = !0;
                l = null != e.align ? e.align : 3;
                p = null != e.blockIndent ? e.blockIndent : 0;
                n = null != e.indent ? e.indent : 0;
                q = null != e.leftMargin ? e.leftMargin : 0;
                k = null != e.rightMargin ?
                  e.rightMargin : 0
              },
              W = function() {
                return b < a.textFormatRanges.get_length() - 1 ? (b += 1, c = a.textFormatRanges.get(b), e.__merge(c.format), Ub.__context.font = Ub.getFont(e), d = Ub.getFontInstance(e), !0) : !1
              },
              S = function(d, e) {
                if (d >= e) r = [], t = 0;
                else if (e <= c.end) r = C(a.text, d, e), t = G(r);
                else {
                  var f = d;
                  d = c.end;
                  var g = 0;
                  r = [];
                  for (t = 0;;)
                    if (f != d && (f = C(a.text, f, d), r = r.concat(f)), d != e) {
                      if (!W()) {
                        Na.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                          fileName: "openfl/text/_internal/TextEngine.hx",
                          lineNumber: 1064,
                          className: "openfl.text._internal.TextEngine",
                          methodName: "getLayoutGroups"
                        });
                        break
                      }
                      f = d;
                      d = e < c.end ? e : c.end;
                      ++g
                    } else {
                      t = G(r);
                      break
                    } b -= g + 1;
                  W()
                }
              },
              P = function(b) {
                if (b <= c.end) {
                  r = C(a.text, x, b);
                  t = G(r);
                  K(x, b);
                  v.positions = r;
                  var d = B,
                    e = H();
                  v.offsetX = d + e;
                  v.ascent = g;
                  v.descent = m;
                  v.leading = f;
                  v.lineIndex = F;
                  v.offsetY = D + 2;
                  v.width = t;
                  v.height = w;
                  B += t;
                  b == c.end && (v = null, W(), N())
                } else
                  for (;;) {
                    var h = b < c.end ? b : c.end;
                    x != h && (r = C(a.text, x, h), t = G(r), K(x, h), v.positions =
                      r, d = B, e = H(), v.offsetX = d + e, v.ascent = g, v.descent = m, v.leading = f, v.lineIndex = F, v.offsetY = D + 2, v.width = t, v.height = w, B += t, x = h);
                    h == c.end && (v = null);
                    if (h == b) break;
                    if (!W()) {
                      Na.warn("You found a bug in OpenFL's text code! Please save a copy of your project and contact Joshua Granick (@singmajesty) so we can fix this.", {
                        fileName: "openfl/text/_internal/TextEngine.hx",
                        lineNumber: 1152,
                        className: "openfl.text._internal.TextEngine",
                        methodName: "getLayoutGroups"
                      });
                      break
                    }
                    N()
                  }
                x = b
              },
              za = function() {
                N();
                for (var b = a.layoutGroups.get_length(); - 1 <
                  --b;) {
                  var c = a.layoutGroups.get(b);
                  if (c.lineIndex < F) break;
                  c.lineIndex > F || (c.ascent = h, c.height = z)
                }
                D += z;
                z = h = 0;
                F += 1;
                B = 0;
                u = !1
              },
              qb = function(b) {
                if (4 <= a.width && a.wordWrap) {
                  var c = r,
                    d, e, f;
                  for (d = G(c); 0 < c.length && B + d > E();) {
                    for (f = d = e = 0; B + f < E();) {
                      var g = c[d];
                      0 == g ? (++d, ++e) : (f += g, ++d)
                    }
                    if (d == e) d = e + 1;
                    else
                      for (; 1 < d && B + f > E();) --d, 0 < d - e ? (S(x, x + d - e), f = t) : (d = 1, e = 0, S(x, x + 1), f = 0);
                    c = x + d - e;
                    P(c);
                    za();
                    S(c, b);
                    c = r;
                    d = t
                  }
                }
                P(b)
              };
            W();
            M();
            N();
            for (var U, X = this.text.length + 1; x < X;)
              if (-1 < aa && (-1 == A || aa < A)) x <= aa ? (S(x, aa), qb(aa), v = null) : null !=
                v && v.startIndex != v.endIndex && (v.endIndex == A && (v.width -= v.positions[v.positions.length - 1]), v = null), za(), c.end == aa && (W(), N()), x = aa + 1, O = aa, aa = this.getLineBreakIndex(x), M();
              else if (-1 < A)
              for (null != v && v.startIndex != v.endIndex && (v = null), U = !1; x < this.text.length;) {
                var R = -1; - 1 == A ? R = aa : (R = A + 1, -1 < aa && aa < R && (R = aa)); - 1 == R && (R = this.text.length);
                S(x, R);
                if (2 == l) {
                  if (0 < r.length && x == Q) {
                    x += 1;
                    var V = r.shift();
                    t -= V;
                    B += V
                  }
                  0 < r.length && R == A + 1 && (--R, V = r.pop(), t -= V)
                }
                this.wordWrap && B + t > E() && (U = !0, 0 < r.length && R == A + 1 && B + t - r[r.length -
                  1] <= E() && (U = !1));
                if (U) {
                  2 != l && (null != v || 0 < this.layoutGroups.get_length()) && (U = v, null == U && (U = this.layoutGroups.get(this.layoutGroups.get_length() - 1)), U.width -= U.positions[U.positions.length - 1], U.endIndex--);
                  U = this.layoutGroups.get_length() - 1;
                  for (V = 0;;) {
                    v = this.layoutGroups.get(U);
                    if (0 < U && v.startIndex > Q) ++V;
                    else break;
                    --U
                  }
                  x == Q + 1 && za();
                  B = 0;
                  if (0 < V) {
                    U = this.layoutGroups.get(this.layoutGroups.get_length() - V).offsetX;
                    V = this.layoutGroups.get_length() - V;
                    for (var vb = this.layoutGroups.get_length(); V < vb;) {
                      var J =
                        V++;
                      v = this.layoutGroups.get(J);
                      v.offsetX -= U;
                      v.offsetY = D + 2;
                      v.lineIndex = F;
                      B += v.width
                    }
                  }
                  qb(R);
                  U = !1
                } else null != v && x == A ? (2 != l && (v.endIndex = A, v.positions = v.positions.concat(r), v.width += t), B += t, x = R) : (null == v || 2 == l ? qb(R) : (V = R < c.end ? R : c.end, V < R && (r = C(this.text, x, V), t = G(r)), v.endIndex = V, v.positions = v.positions.concat(r), v.width += t, B += t, V == c.end && (v = null, W(), N(), x = V, V != R && P(R)), aa == R && ++R, x = R), R == this.text.length && za());
                R = this.text.indexOf(" ", x);
                aa == Q && (v.endIndex = aa, 0 > aa - v.startIndex - v.positions.length && v.positions.push(0),
                  x = aa + 1);
                Q = A;
                A = R;
                if (-1 < aa && aa <= x && (A > aa || -1 == A) || x > this.text.length) break
              } else x < this.text.length && (S(x, this.text.length), qb(this.text.length), za()), x += 1;
            O == x - 2 && -1 < O && (K(x - 1, x - 1), v.positions = [], v.ascent = g, v.descent = m, v.leading = f, v.lineIndex = F - 1, v.offsetX = H(), v.offsetY = D + 2 - w, v.width = 0, v.height = w)
          }
        },
        restrictText: function(a) {
          if (null == a) return a;
          null != this.__restrictRegexp && (a = this.__restrictRegexp.split(a).join(""));
          return a
        },
        setTextAlignment: function() {
          for (var a = -1, b = 0, c, d, e = !1, f = 0, g = this.layoutGroups.get_length(); f <
            g;) {
            var h = f++;
            c = this.layoutGroups.get(h);
            if (c.lineIndex != a) switch (a = c.lineIndex, b = this.width - 4 - c.format.rightMargin, c.format.align) {
              case 0:
                b = this.lineWidths.get(a) < b ? Math.round((b - this.lineWidths.get(a)) / 2) : 0;
                break;
              case 2:
                if (this.lineWidths.get(a) < b) {
                  d = 1;
                  for (var m = h + 1, l = this.layoutGroups.get_length(); m < l;) {
                    var p = m++;
                    if (this.layoutGroups.get(p).lineIndex == a) 0 != p && 32 != da.cca(this.text, this.layoutGroups.get(p).startIndex - 1) || ++d;
                    else break
                  }
                  if (1 < d && (c = this.layoutGroups.get(h + d - 1), m = da.cca(this.text, c.endIndex),
                      c.endIndex < this.text.length && 10 != m && 13 != m))
                    for (b = (b - this.lineWidths.get(a)) / (d - 1), e = !0, m = 1; this.layoutGroups.get(h + m).offsetX += b * m, ++m < d;);
                }
                b = 0;
                break;
              case 4:
                b = this.lineWidths.get(a) < b ? Math.round(b - this.lineWidths.get(a)) : 0;
                break;
              default:
                b = 0
            }
            0 < b && (c.offsetX += b)
          }
          e && this.getLineMeasurements()
        },
        trimText: function(a) {
          if (null == a) return a;
          0 < this.maxChars && a.length > this.maxChars && (a = da.substr(a, 0, this.maxChars));
          return a
        },
        update: function() {
          null == this.text || 0 == this.textFormatRanges.get_length() ? (this.lineAscents.set_length(0),
            this.lineBreaks.set_length(0), this.lineDescents.set_length(0), this.lineLeadings.set_length(0), this.lineHeights.set_length(0), this.lineWidths.set_length(0), this.layoutGroups.set_length(0), this.textHeight = this.textWidth = 0, this.numLines = 1, this.maxScrollH = 0, this.bottomScrollV = this.maxScrollV = 1) : (this.getLayoutGroups(), this.getLineMeasurements(), this.setTextAlignment());
          this.getBounds()
        },
        get_bottomScrollV: function() {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (var a = this.lineHeights.get_length(),
              b = this.lineLeadings.get_length() == a ? -this.lineLeadings.get(a - 1) : 0, c = this.get_scrollV() - 1, d = this.lineHeights.get_length(); c < d;) {
            var e = c++;
            if (b + this.lineHeights.get(e) <= this.height - 4) b += this.lineHeights.get(e);
            else {
              a = e;
              break
            }
          }
          return a < this.get_scrollV() ? this.get_scrollV() : a
        },
        get_maxScrollV: function() {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          for (var a = this.numLines - 1, b = 0, c = a; 0 <= a;)
            if (b + this.lineHeights.get(a) <= this.height - 4) b += this.lineHeights.get(a), --a;
            else break;
          a = a == c ? this.numLines : a +
            2;
          return 1 > a ? 1 : a
        },
        set_restrict: function(a) {
          if (this.restrict == a) return this.restrict;
          this.restrict = a;
          this.__restrictRegexp = null == this.restrict || 0 == this.restrict.length ? null : this.createRestrictRegexp(a);
          return this.restrict
        },
        get_scrollV: function() {
          if (1 == this.numLines || null == this.lineHeights) return 1;
          var a = this.get_maxScrollV();
          return this.scrollV > a ? a : this.scrollV
        },
        set_scrollV: function(a) {
          1 > a && (a = 1);
          return this.scrollV = a
        },
        set_text: function(a) {
          return this.text = a
        },
        __class__: Ub,
        __properties__: {
          set_text: "set_text",
          set_scrollV: "set_scrollV",
          get_scrollV: "get_scrollV",
          set_restrict: "set_restrict",
          get_maxScrollV: "get_maxScrollV",
          get_bottomScrollV: "get_bottomScrollV"
        }
      };
      var jf = function(a, b, c) {
        this.format = a;
        this.start = b;
        this.end = c
      };
      k["openfl.text._internal.TextFormatRange"] = jf;
      jf.__name__ = "openfl.text._internal.TextFormatRange";
      jf.prototype = {
        end: null,
        format: null,
        start: null,
        __class__: jf
      };
      var Wd = function(a, b, c, d, e, f) {
        null == f && (f = "en");
        null == e && (e = "Zyyy");
        null == d && (d = 4);
        null == c && (c = 12);
        null == a && (a = "");
        this.letterSpacing =
          0;
        this.set_text(a);
        this.set_font(b);
        this.set_size(c);
        this.__direction = d;
        this.__script = e;
        this.__language = f;
        this.positions = [];
        this.__dirty = !0;
        this.__create(this.__direction, this.__script, this.__language)
      };
      k["openfl.text._internal.TextLayout"] = Wd;
      Wd.__name__ = "openfl.text._internal.TextLayout";
      Wd.prototype = {
        autoHint: null,
        font: null,
        glyphs: null,
        letterSpacing: null,
        positions: null,
        size: null,
        text: null,
        __buffer: null,
        __direction: null,
        __dirty: null,
        __handle: null,
        __language: null,
        __script: null,
        __font: null,
        __hbBuffer: null,
        __hbFont: null,
        __create: function(a, b, c) {
          4 == c.length && (this.__hbBuffer = Fr._new(), xr._new(c))
        },
        __position: function() {
          this.positions = []
        },
        get_positions: function() {
          this.__dirty && (this.__dirty = !1, this.__position());
          return this.positions
        },
        get_direction: function() {
          return this.__direction
        },
        set_direction: function(a) {
          if (a == this.__direction) return a;
          this.__direction = a;
          this.__dirty = !0;
          return a
        },
        set_font: function(a) {
          if (a == this.font) return a;
          this.font = a;
          this.__dirty = !0;
          return a
        },
        get_glyphs: function() {
          for (var a = [],
              b = 0, c = this.get_positions(); b < c.length;) {
            var d = c[b];
            ++b;
            a.push(d.glyph)
          }
          return a
        },
        get_language: function() {
          return this.__language
        },
        set_language: function(a) {
          if (a == this.__language) return a;
          this.__language = a;
          this.__dirty = !0;
          return a
        },
        get_script: function() {
          return this.__script
        },
        set_script: function(a) {
          if (a == this.__script) return a;
          this.__script = a;
          this.__dirty = !0;
          return a
        },
        set_size: function(a) {
          if (a == this.size) return a;
          this.size = a;
          this.__dirty = !0;
          return a
        },
        set_text: function(a) {
          if (a == this.text) return a;
          this.text =
            a;
          this.__dirty = !0;
          return a
        },
        __class__: Wd,
        __properties__: {
          set_text: "set_text",
          set_size: "set_size",
          set_script: "set_script",
          get_script: "get_script",
          get_positions: "get_positions",
          set_language: "set_language",
          get_language: "get_language",
          get_glyphs: "get_glyphs",
          set_font: "set_font",
          set_direction: "set_direction",
          get_direction: "get_direction"
        }
      };
      var on = function(a, b, c) {
        this.format = a;
        this.startIndex = b;
        this.endIndex = c
      };
      k["openfl.text._internal.TextLayoutGroup"] = on;
      on.__name__ = "openfl.text._internal.TextLayoutGroup";
      on.prototype = {
        ascent: null,
        descent: null,
        endIndex: null,
        format: null,
        height: null,
        leading: null,
        lineIndex: null,
        offsetX: null,
        offsetY: null,
        positions: null,
        startIndex: null,
        width: null,
        getAdvance: function(a) {
          return this.positions[a]
        },
        __class__: on
      };
      var $b = function() {
        Ka.call(this);
        $b.__instances.push(this)
      };
      k["openfl.ui.GameInput"] = $b;
      $b.__name__ = "openfl.ui.GameInput";
      $b.getDeviceAt = function(a) {
        return 0 <= a && a < $b.__deviceList.length ? $b.__deviceList[a] : null
      };
      $b.__getDevice = function(a) {
        if (null == a) return null;
        if (null ==
          $b.__devices.h.__keys__[a.__id__]) {
          var b = bd.__getDeviceData(),
            c = b[a.id].id;
          b = bd.__getDeviceData();
          b = new pn(c, b[a.id].id);
          $b.__deviceList.push(b);
          $b.__devices.set(a, b);
          $b.numDevices = $b.__deviceList.length
        }
        return $b.__devices.h[a.__id__]
      };
      $b.__onGamepadAxisMove = function(a, b, c) {
        a = $b.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__axis.h.hasOwnProperty(b)) {
            if (null == b) var d = "null";
            else switch (b) {
              case 0:
                d = "LEFT_X";
                break;
              case 1:
                d = "LEFT_Y";
                break;
              case 2:
                d = "RIGHT_X";
                break;
              case 3:
                d = "RIGHT_Y";
                break;
              case 4:
                d = "TRIGGER_LEFT";
                break;
              case 5:
                d = "TRIGGER_RIGHT";
                break;
              default:
                d = "UNKNOWN (" + b + ")"
            }
            d = new Af(a, "AXIS_" + d, -1, 1);
            a.__axis.h[b] = d;
            a.__controls.push(d)
          }
          d = a.__axis.h[b];
          d.value = c;
          d.dispatchEvent(new ma("change"))
        }
      };
      $b.__onGamepadButtonDown = function(a, b) {
        a = $b.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null == b) var c = "null";
            else switch (b) {
              case 0:
                c = "A";
                break;
              case 1:
                c = "B";
                break;
              case 2:
                c = "X";
                break;
              case 3:
                c = "Y";
                break;
              case 4:
                c = "BACK";
                break;
              case 5:
                c = "GUIDE";
                break;
              case 6:
                c = "START";
                break;
              case 7:
                c =
                  "LEFT_STICK";
                break;
              case 8:
                c = "RIGHT_STICK";
                break;
              case 9:
                c = "LEFT_SHOULDER";
                break;
              case 10:
                c = "RIGHT_SHOULDER";
                break;
              case 11:
                c = "DPAD_UP";
                break;
              case 12:
                c = "DPAD_DOWN";
                break;
              case 13:
                c = "DPAD_LEFT";
                break;
              case 14:
                c = "DPAD_RIGHT";
                break;
              default:
                c = "UNKNOWN (" + b + ")"
            }
            c = new Af(a, "BUTTON_" + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c)
          }
          c = a.__button.h[b];
          c.value = 1;
          c.dispatchEvent(new ma("change"))
        }
      };
      $b.__onGamepadButtonUp = function(a, b) {
        a = $b.__getDevice(a);
        if (null != a && a.enabled) {
          if (!a.__button.h.hasOwnProperty(b)) {
            if (null ==
              b) var c = "null";
            else switch (b) {
              case 0:
                c = "A";
                break;
              case 1:
                c = "B";
                break;
              case 2:
                c = "X";
                break;
              case 3:
                c = "Y";
                break;
              case 4:
                c = "BACK";
                break;
              case 5:
                c = "GUIDE";
                break;
              case 6:
                c = "START";
                break;
              case 7:
                c = "LEFT_STICK";
                break;
              case 8:
                c = "RIGHT_STICK";
                break;
              case 9:
                c = "LEFT_SHOULDER";
                break;
              case 10:
                c = "RIGHT_SHOULDER";
                break;
              case 11:
                c = "DPAD_UP";
                break;
              case 12:
                c = "DPAD_DOWN";
                break;
              case 13:
                c = "DPAD_LEFT";
                break;
              case 14:
                c = "DPAD_RIGHT";
                break;
              default:
                c = "UNKNOWN (" + b + ")"
            }
            c = new Af(a, "BUTTON_" + c, 0, 1);
            a.__button.h[b] = c;
            a.__controls.push(c)
          }
          c =
            a.__button.h[b];
          c.value = 0;
          c.dispatchEvent(new ma("change"))
        }
      };
      $b.__onGamepadConnect = function(a) {
        a = $b.__getDevice(a);
        if (null != a)
          for (var b = 0, c = $b.__instances; b < c.length;) {
            var d = c[b];
            ++b;
            d.dispatchEvent(new Hg("deviceAdded", !0, !1, a))
          }
      };
      $b.__onGamepadDisconnect = function(a) {
        var b = $b.__devices.h[a.__id__];
        if (null != b) {
          null != $b.__devices.h.__keys__[a.__id__] && (da.remove($b.__deviceList, $b.__devices.h[a.__id__]), $b.__devices.remove(a));
          $b.numDevices = $b.__deviceList.length;
          a = 0;
          for (var c = $b.__instances; a < c.length;) {
            var d =
              c[a];
            ++a;
            d.dispatchEvent(new Hg("deviceRemoved", !0, !1, b))
          }
        }
      };
      $b.__super__ = Ka;
      $b.prototype = t(Ka.prototype, {
        addEventListener: function(a, b, c, d, e) {
          null == e && (e = !1);
          null == d && (d = 0);
          null == c && (c = !1);
          Ka.prototype.addEventListener.call(this, a, b, c, d, e);
          if ("deviceAdded" == a)
            for (a = 0, b = $b.__deviceList; a < b.length;) c = b[a], ++a, this.dispatchEvent(new Hg("deviceAdded", !0, !1, c))
        },
        __class__: $b
      });
      var Af = function(a, b, c, d, e) {
        null == e && (e = 0);
        Ka.call(this);
        this.device = a;
        this.id = b;
        this.minValue = c;
        this.maxValue = d;
        this.value = e
      };
      k["openfl.ui.GameInputControl"] = Af;
      Af.__name__ = "openfl.ui.GameInputControl";
      Af.__super__ = Ka;
      Af.prototype = t(Ka.prototype, {
        device: null,
        id: null,
        maxValue: null,
        minValue: null,
        value: null,
        __class__: Af
      });
      var pn = function(a, b) {
        this.__controls = [];
        this.__button = new Za;
        this.__axis = new Za;
        this.id = a;
        this.name = b;
        a = new Af(this, "AXIS_0", -1, 1);
        this.__axis.h[0] = a;
        this.__controls.push(a);
        a = new Af(this, "AXIS_1", -1, 1);
        this.__axis.h[1] = a;
        this.__controls.push(a);
        a = new Af(this, "AXIS_2", -1, 1);
        this.__axis.h[2] = a;
        this.__controls.push(a);
        a = new Af(this, "AXIS_3", -1, 1);
        this.__axis.h[3] = a;
        this.__controls.push(a);
        a = new Af(this, "AXIS_4", -1, 1);
        this.__axis.h[4] = a;
        this.__controls.push(a);
        a = new Af(this, "AXIS_5", -1, 1);
        this.__axis.h[5] = a;
        this.__controls.push(a);
        for (b = 0; 15 > b;) {
          var c = b++;
          a = new Af(this, "BUTTON_" + c, 0, 1);
          this.__button.h[c] = a;
          this.__controls.push(a)
        }
      };
      k["openfl.ui.GameInputDevice"] = pn;
      pn.__name__ = "openfl.ui.GameInputDevice";
      pn.prototype = {
        enabled: null,
        id: null,
        name: null,
        sampleInterval: null,
        __axis: null,
        __button: null,
        __controls: null,
        __gamepad: null,
        getCachedSamples: function(a, b) {
          return 0
        },
        getControlAt: function(a) {
          return 0 <= a && a < this.__controls.length ? this.__controls[a] : null
        },
        startCachingSamples: function(a, b) {},
        stopCachingSamples: function() {},
        get_numControls: function() {
          return this.__controls.length
        },
        __class__: pn,
        __properties__: {
          get_numControls: "get_numControls"
        }
      };
      var Ca = function() {};
      k["openfl.ui.Keyboard"] = Ca;
      Ca.__name__ = "openfl.ui.Keyboard";
      Ca.isAccessible = function() {
        return !1
      };
      Ca.__convertKeyCode = function(a) {
        switch (a) {
          case 8:
            return 8;
          case 9:
            return 9;
          case 13:
            return 13;
          case 27:
            return 27;
          case 32:
            return 32;
          case 33:
            return 49;
          case 34:
            return 222;
          case 35:
            return 51;
          case 36:
            return 52;
          case 37:
            return 53;
          case 38:
            return 55;
          case 39:
            return 222;
          case 40:
            return 57;
          case 41:
            return 48;
          case 42:
            return 56;
          case 44:
            return 188;
          case 45:
            return 189;
          case 46:
            return 190;
          case 47:
            return 191;
          case 48:
            return 48;
          case 49:
            return 49;
          case 50:
            return 50;
          case 51:
            return 51;
          case 52:
            return 52;
          case 53:
            return 53;
          case 54:
            return 54;
          case 55:
            return 55;
          case 56:
            return 56;
          case 57:
            return 57;
          case 58:
            return 186;
          case 59:
            return 186;
          case 60:
            return 60;
          case 61:
            return 187;
          case 62:
            return 190;
          case 63:
            return 191;
          case 64:
            return 50;
          case 91:
            return 219;
          case 92:
            return 220;
          case 93:
            return 221;
          case 94:
            return 54;
          case 95:
            return 189;
          case 96:
            return 192;
          case 97:
            return 65;
          case 98:
            return 66;
          case 99:
            return 67;
          case 100:
            return 68;
          case 101:
            return 69;
          case 102:
            return 70;
          case 103:
            return 71;
          case 104:
            return 72;
          case 105:
            return 73;
          case 106:
            return 74;
          case 107:
            return 75;
          case 108:
            return 76;
          case 109:
            return 77;
          case 110:
            return 78;
          case 111:
            return 79;
          case 112:
            return 80;
          case 113:
            return 81;
          case 114:
            return 82;
          case 115:
            return 83;
          case 116:
            return 84;
          case 117:
            return 85;
          case 118:
            return 86;
          case 119:
            return 87;
          case 120:
            return 88;
          case 121:
            return 89;
          case 122:
            return 90;
          case 127:
            return 46;
          case 1073741881:
            return 20;
          case 1073741882:
            return 112;
          case 1073741883:
            return 113;
          case 1073741884:
            return 114;
          case 1073741885:
            return 115;
          case 1073741886:
            return 116;
          case 1073741887:
            return 117;
          case 1073741888:
            return 118;
          case 1073741889:
            return 119;
          case 1073741890:
            return 120;
          case 1073741891:
            return 121;
          case 1073741892:
            return 122;
          case 1073741893:
            return 123;
          case 1073741894:
            return 301;
          case 1073741895:
            return 145;
          case 1073741896:
            return 19;
          case 1073741897:
            return 45;
          case 1073741898:
            return 36;
          case 1073741899:
            return 33;
          case 1073741901:
            return 35;
          case 1073741902:
            return 34;
          case 1073741903:
            return 39;
          case 1073741904:
            return 37;
          case 1073741905:
            return 40;
          case 1073741906:
            return 38;
          case 1073741907:
            return 144;
          case 1073741908:
            return 111;
          case 1073741909:
            return 106;
          case 1073741910:
            return 109;
          case 1073741911:
            return 107;
          case 1073741912:
            return 13;
          case 1073741913:
            return 97;
          case 1073741914:
            return 98;
          case 1073741915:
            return 99;
          case 1073741916:
            return 100;
          case 1073741917:
            return 101;
          case 1073741918:
            return 102;
          case 1073741919:
            return 103;
          case 1073741920:
            return 104;
          case 1073741921:
            return 105;
          case 1073741922:
            return 96;
          case 1073741923:
            return 110;
          case 1073741925:
            return 302;
          case 1073741928:
            return 124;
          case 1073741929:
            return 125;
          case 1073741930:
            return 126;
          case 1073741982:
            return 13;
          case 1073742044:
            return 110;
          case 1073742048:
            return 17;
          case 1073742049:
            return 16;
          case 1073742050:
            return 18;
          case 1073742051:
            return 15;
          case 1073742052:
            return 17;
          case 1073742053:
            return 16;
          case 1073742054:
            return 18;
          case 1073742055:
            return 15;
          default:
            return a
        }
      };
      Ca.__getCharCode = function(a, b) {
        null == b && (b = !1);
        if (b) {
          switch (a) {
            case 48:
              return 41;
            case 49:
              return 33;
            case 50:
              return 64;
            case 51:
              return 35;
            case 52:
              return 36;
            case 53:
              return 37;
            case 54:
              return 94;
            case 55:
              return 38;
            case 56:
              return 42;
            case 57:
              return 40;
            case 186:
              return 58;
            case 187:
              return 43;
            case 188:
              return 60;
            case 189:
              return 95;
            case 190:
              return 62;
            case 191:
              return 63;
            case 192:
              return 126;
            case 219:
              return 123;
            case 220:
              return 124;
            case 221:
              return 125;
            case 222:
              return 34
          }
          if (65 <= a && 90 >= a) return a - 65 + 65
        } else {
          switch (a) {
            case 8:
              return 8;
            case 9:
              return 9;
            case 13:
              return 13;
            case 27:
              return 27;
            case 32:
              return 32;
            case 186:
              return 59;
            case 187:
              return 61;
            case 188:
              return 44;
            case 189:
              return 45;
            case 190:
              return 46;
            case 191:
              return 47;
            case 192:
              return 96;
            case 219:
              return 91;
            case 220:
              return 92;
            case 221:
              return 93;
            case 222:
              return 39
          }
          if (48 <=
            a && 57 >= a) return a - 48 + 48;
          if (65 <= a && 90 >= a) return a - 65 + 97
        }
        if (96 <= a && 105 >= a) return a - 96 + 48;
        switch (a) {
          case 8:
            return 8;
          case 13:
            return 13;
          case 46:
            return 127;
          case 106:
            return 42;
          case 107:
            return 43;
          case 108:
            return 44;
          case 110:
            return 45;
          case 111:
            return 46
        }
        return 0
      };
      Ca.__getKeyLocation = function(a) {
        switch (a) {
          case 1073741908:
          case 1073741909:
          case 1073741910:
          case 1073741911:
          case 1073741912:
          case 1073741913:
          case 1073741914:
          case 1073741915:
          case 1073741916:
          case 1073741917:
          case 1073741918:
          case 1073741919:
          case 1073741920:
          case 1073741921:
          case 1073741922:
          case 1073741923:
          case 1073742044:
            return 3;
          case 1073742048:
          case 1073742049:
          case 1073742050:
          case 1073742051:
            return 1;
          case 1073742052:
          case 1073742053:
          case 1073742054:
          case 1073742055:
            return 2;
          default:
            return 0
        }
      };
      var te = function() {};
      k["openfl.ui.Mouse"] = te;
      te.__name__ = "openfl.ui.Mouse";
      te.__properties__ = {
        set_cursor: "set_cursor",
        get_cursor: "get_cursor"
      };
      te.hide = function() {
        te.__hidden = !0;
        for (var a = 0, b = Ad.current.__windows; a < b.length;) {
          var c = b[a];
          ++a;
          c.set_cursor(null)
        }
      };
      te.show = function() {
        te.__hidden = !1;
        var a = te.__cursor;
        te.__cursor = null;
        te.set_cursor(a)
      };
      te.get_cursor = function() {
        return te.__cursor
      };
      te.set_cursor = function(a) {
        null == a && (a = "auto");
        var b = null;
        switch (a) {
          case "arrow":
            b = qc.ARROW;
            break;
          case "button":
            b = qc.POINTER;
            break;
          case "crosshair":
            b = qc.CROSSHAIR;
            break;
          case "custom":
            b = qc.CUSTOM;
            break;
          case "hand":
            b = qc.MOVE;
            break;
          case "ibeam":
            b = qc.TEXT;
            break;
          case "resize_nesw":
            b = qc.RESIZE_NESW;
            break;
          case "resize_ns":
            b = qc.RESIZE_NS;
            break;
          case "resize_nwse":
            b = qc.RESIZE_NWSE;
            break;
          case "resize_we":
            b = qc.RESIZE_WE;
            break;
          case "wait":
            b = qc.WAIT;
            break;
          case "waitarrow":
            b =
              qc.WAIT_ARROW
        }
        if (null != b && !te.__hidden)
          for (var c = 0, d = Ad.current.__windows; c < d.length;) {
            var e = d[c];
            ++c;
            e.set_cursor(b)
          }
        return te.__cursor = a
      };
      var yf = {
          fromLimeCursor: function(a) {
            switch (a._hx_index) {
              case 0:
                return "arrow";
              case 1:
                return "crosshair";
              case 2:
                return "auto";
              case 3:
                return "hand";
              case 4:
                return "button";
              case 5:
                return "resize_nesw";
              case 6:
                return "resize_ns";
              case 7:
                return "resize_nwse";
              case 8:
                return "resize_we";
              case 9:
                return "ibeam";
              case 10:
                return "wait";
              case 11:
                return "waitarrow";
              case 12:
                return "custom"
            }
          },
          toLimeCursor: function(a) {
            switch (a) {
              case "arrow":
                return qc.ARROW;
              case "auto":
                return qc.DEFAULT;
              case "button":
                return qc.POINTER;
              case "crosshair":
                return qc.CROSSHAIR;
              case "custom":
                return qc.CUSTOM;
              case "hand":
                return qc.MOVE;
              case "ibeam":
                return qc.TEXT;
              case "resize_nesw":
                return qc.RESIZE_NESW;
              case "resize_ns":
                return qc.RESIZE_NS;
              case "resize_nwse":
                return qc.RESIZE_NWSE;
              case "resize_we":
                return qc.RESIZE_WE;
              case "wait":
                return qc.WAIT;
              case "waitarrow":
                return qc.WAIT_ARROW;
              default:
                return qc.DEFAULT
            }
          }
        },
        xe = function() {};
      k["openfl.ui.Multitouch"] = xe;
      xe.__name__ = "openfl.ui.Multitouch";
      xe.__properties__ = {
        get_supportsTouchEvents: "get_supportsTouchEvents"
      };
      xe.get_supportsTouchEvents = function() {
        return "ontouchstart" in document.documentElement || window.DocumentTouch && document instanceof DocumentTouch || window.navigator.maxTouchPoints || "ontouchstart" in document ? !0 : !1
      };
      var U = function(a) {
        null == a && (a = !1);
        this.debugEnabled = a;
        U.initialized || U.init()
      };
      k["openfl.utils.AGALMiniAssembler"] = U;
      U.__name__ = "openfl.utils.AGALMiniAssembler";
      U.init = function() {
        U.initialized = !0;
        var a = U.OPMAP,
          b = new bc("mov",
            2, 0, 0);
        a.h.mov = b;
        a = U.OPMAP;
        b = new bc("add", 3, 1, 0);
        a.h.add = b;
        a = U.OPMAP;
        b = new bc("sub", 3, 2, 0);
        a.h.sub = b;
        a = U.OPMAP;
        b = new bc("mul", 3, 3, 0);
        a.h.mul = b;
        a = U.OPMAP;
        b = new bc("div", 3, 4, 0);
        a.h.div = b;
        a = U.OPMAP;
        b = new bc("rcp", 2, 5, 0);
        a.h.rcp = b;
        a = U.OPMAP;
        b = new bc("min", 3, 6, 0);
        a.h.min = b;
        a = U.OPMAP;
        b = new bc("max", 3, 7, 0);
        a.h.max = b;
        a = U.OPMAP;
        b = new bc("frc", 2, 8, 0);
        a.h.frc = b;
        a = U.OPMAP;
        b = new bc("sqt", 2, 9, 0);
        a.h.sqt = b;
        a = U.OPMAP;
        b = new bc("rsq", 2, 10, 0);
        a.h.rsq = b;
        a = U.OPMAP;
        b = new bc("pow", 3, 11, 0);
        a.h.pow = b;
        a = U.OPMAP;
        b = new bc("log",
          2, 12, 0);
        a.h.log = b;
        a = U.OPMAP;
        b = new bc("exp", 2, 13, 0);
        a.h.exp = b;
        a = U.OPMAP;
        b = new bc("nrm", 2, 14, 0);
        a.h.nrm = b;
        a = U.OPMAP;
        b = new bc("sin", 2, 15, 0);
        a.h.sin = b;
        a = U.OPMAP;
        b = new bc("cos", 2, 16, 0);
        a.h.cos = b;
        a = U.OPMAP;
        b = new bc("crs", 3, 17, 0);
        a.h.crs = b;
        a = U.OPMAP;
        b = new bc("dp3", 3, 18, 0);
        a.h.dp3 = b;
        a = U.OPMAP;
        b = new bc("dp4", 3, 19, 0);
        a.h.dp4 = b;
        a = U.OPMAP;
        b = new bc("abs", 2, 20, 0);
        a.h.abs = b;
        a = U.OPMAP;
        b = new bc("neg", 2, 21, 0);
        a.h.neg = b;
        a = U.OPMAP;
        b = new bc("sat", 2, 22, 0);
        a.h.sat = b;
        a = U.OPMAP;
        b = new bc("m33", 3, 23, 16);
        a.h.m33 = b;
        a = U.OPMAP;
        b = new bc("m44", 3, 24, 16);
        a.h.m44 = b;
        a = U.OPMAP;
        b = new bc("m34", 3, 25, 16);
        a.h.m34 = b;
        a = U.OPMAP;
        b = new bc("ddx", 2, 26, 288);
        a.h.ddx = b;
        a = U.OPMAP;
        b = new bc("ddy", 2, 27, 288);
        a.h.ddy = b;
        a = U.OPMAP;
        b = new bc("ife", 2, 28, 897);
        a.h.ife = b;
        a = U.OPMAP;
        b = new bc("ine", 2, 29, 897);
        a.h.ine = b;
        a = U.OPMAP;
        b = new bc("ifg", 2, 30, 897);
        a.h.ifg = b;
        a = U.OPMAP;
        b = new bc("ifl", 2, 31, 897);
        a.h.ifl = b;
        a = U.OPMAP;
        b = new bc("els", 0, 32, 1921);
        a.h.els = b;
        a = U.OPMAP;
        b = new bc("eif", 0, 33, 1409);
        a.h.eif = b;
        a = U.OPMAP;
        b = new bc("kil", 1, 39, 160);
        a.h.kil = b;
        a = U.OPMAP;
        b = new bc("tex",
          3, 40, 40);
        a.h.tex = b;
        a = U.OPMAP;
        b = new bc("sge", 3, 41, 0);
        a.h.sge = b;
        a = U.OPMAP;
        b = new bc("slt", 3, 42, 0);
        a.h.slt = b;
        a = U.OPMAP;
        b = new bc("sgn", 2, 43, 0);
        a.h.sgn = b;
        a = U.OPMAP;
        b = new bc("seq", 3, 44, 0);
        a.h.seq = b;
        a = U.OPMAP;
        b = new bc("sne", 3, 45, 0);
        a.h.sne = b;
        a = U.SAMPLEMAP;
        b = new cd("rgba", 8, 0);
        a.h.rgba = b;
        a = U.SAMPLEMAP;
        b = new cd("compressed", 8, 1);
        a.h.compressed = b;
        a = U.SAMPLEMAP;
        b = new cd("compressedalpha", 8, 2);
        a.h.compressedalpha = b;
        a = U.SAMPLEMAP;
        b = new cd("dxt1", 8, 1);
        a.h.dxt1 = b;
        a = U.SAMPLEMAP;
        b = new cd("dxt5", 8, 2);
        a.h.dxt5 = b;
        a = U.SAMPLEMAP;
        b = new cd("video", 8, 3);
        a.h.video = b;
        a = U.SAMPLEMAP;
        b = new cd("2d", 12, 0);
        a.h["2d"] = b;
        a = U.SAMPLEMAP;
        b = new cd("3d", 12, 2);
        a.h["3d"] = b;
        a = U.SAMPLEMAP;
        b = new cd("cube", 12, 1);
        a.h.cube = b;
        a = U.SAMPLEMAP;
        b = new cd("mipnearest", 24, 1);
        a.h.mipnearest = b;
        a = U.SAMPLEMAP;
        b = new cd("miplinear", 24, 2);
        a.h.miplinear = b;
        a = U.SAMPLEMAP;
        b = new cd("mipnone", 24, 0);
        a.h.mipnone = b;
        a = U.SAMPLEMAP;
        b = new cd("nomip", 24, 0);
        a.h.nomip = b;
        a = U.SAMPLEMAP;
        b = new cd("nearest", 28, 0);
        a.h.nearest = b;
        a = U.SAMPLEMAP;
        b = new cd("linear", 28, 1);
        a.h.linear = b;
        a = U.SAMPLEMAP;
        b = new cd("anisotropic2x", 28, 2);
        a.h.anisotropic2x = b;
        a = U.SAMPLEMAP;
        b = new cd("anisotropic4x", 28, 3);
        a.h.anisotropic4x = b;
        a = U.SAMPLEMAP;
        b = new cd("anisotropic8x", 28, 4);
        a.h.anisotropic8x = b;
        a = U.SAMPLEMAP;
        b = new cd("anisotropic16x", 28, 5);
        a.h.anisotropic16x = b;
        a = U.SAMPLEMAP;
        b = new cd("centroid", 16, 1);
        a.h.centroid = b;
        a = U.SAMPLEMAP;
        b = new cd("single", 16, 2);
        a.h.single = b;
        a = U.SAMPLEMAP;
        b = new cd("ignoresampler", 16, 4);
        a.h.ignoresampler = b;
        a = U.SAMPLEMAP;
        b = new cd("repeat", 20, 1);
        a.h.repeat = b;
        a = U.SAMPLEMAP;
        b = new cd("wrap", 20,
          1);
        a.h.wrap = b;
        a = U.SAMPLEMAP;
        b = new cd("clamp", 20, 0);
        a.h.clamp = b;
        a = U.SAMPLEMAP;
        b = new cd("clamp_u_repeat_v", 20, 2);
        a.h.clamp_u_repeat_v = b;
        a = U.SAMPLEMAP;
        b = new cd("repeat_u_clamp_v", 20, 3);
        a.h.repeat_u_clamp_v = b
      };
      U.prototype = {
        agalcode: null,
        error: null,
        verbose: null,
        debugEnabled: null,
        assemble2: function(a, b, c, d) {
          c = this.assemble("vertex", c, b);
          b = this.assemble("fragment", d, b);
          a = a.createProgram();
          a.upload(c, b);
          return a
        },
        assemble: function(a, b, c, d) {
          null == d && (d = !1);
          null == c && (c = 1);
          var e = Ja.getTimer();
          this.agalcode =
            new sc(0);
          this.error = "";
          var f = !1;
          "fragment" == a ? f = !0 : "vertex" != a && (this.error = 'ERROR: mode needs to be "fragment" or "vertex" but is "' + a + '".');
          this.agalcode.__endian = 1;
          this.agalcode.writeByte(160);
          this.agalcode.writeUnsignedInt(c);
          this.agalcode.writeByte(161);
          this.agalcode.writeByte(f ? 1 : 0);
          this.initregmap(c, d);
          a = W.replace(b, "\r", "\n").split("\n");
          b = 0;
          d = a.length;
          for (var g = new nb("<.*>", "g"), h = new nb("([\\w\\.\\-\\+]+)", "gi"), m = new nb("^\\w{3}", "ig"), l = new nb("vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?",
              "gi"), p = new nb("\\[.*\\]", "ig"), n = new nb("^\\b[A-Za-z]{1,3}", "ig"), q = new nb("\\d+", ""), k = new nb("(\\.[xyzw]{1,4})", ""), u = new nb("[A-Za-z]{1,3}", "ig"), v = new nb("(\\.[xyzw]{1,1})", ""), r = new nb("\\+\\d{1,3}", "ig"), t = 0; t < d && "" == this.error;) {
            var w = W.trim(a[t]),
              z = w.indexOf("//"); - 1 != z && (w = da.substr(w, 0, z));
            var Q = g.match(w) ? g.matchedPos().pos : -1;
            z = null; - 1 != Q && (z = this.match(da.substr(w, Q, null), h), w = da.substr(w, 0, Q));
            var O = null;
            m.match(w) && (Q = m.matched(0), O = U.OPMAP.h[Q]);
            if (null == O) 3 <= w.length && Na.warn("warning: bad line " +
              t + ": " + a[t], {
                fileName: "openfl/utils/AGALMiniAssembler.hx",
                lineNumber: 262,
                className: "openfl.utils.AGALMiniAssembler",
                methodName: "assemble"
              });
            else if (this.debugEnabled && Na.info(O, {
                fileName: "openfl/utils/AGALMiniAssembler.hx",
                lineNumber: 272,
                className: "openfl.utils.AGALMiniAssembler",
                methodName: "assemble"
              }), null == O) 3 <= w.length && Na.warn("warning: bad line " + t + ": " + a[t], {
              fileName: "openfl/utils/AGALMiniAssembler.hx",
              lineNumber: 279,
              className: "openfl.utils.AGALMiniAssembler",
              methodName: "assemble"
            });
            else {
              w =
                da.substr(w, w.indexOf(O.name) + O.name.length, null);
              if (0 != (O.flags & 256) && 2 > c) {
                this.error = "error: opcode requires version 2.";
                break
              }
              if (0 != (O.flags & 64) && f) {
                this.error = "error: opcode is only allowed in vertex programs.";
                break
              }
              if (0 != (O.flags & 32) && !f) {
                this.error = "error: opcode is only allowed in fragment programs.";
                break
              }
              this.verbose && Na.info("emit opcode=" + M.string(O), {
                fileName: "openfl/utils/AGALMiniAssembler.hx",
                lineNumber: 308,
                className: "openfl.utils.AGALMiniAssembler",
                methodName: "assemble"
              });
              this.agalcode.writeUnsignedInt(O.emitCode);
              ++b;
              if (4096 < b) {
                this.error = "error: too many opcodes. maximum is 4096.";
                break
              }
              var A = this.match(w, l);
              if (A.length != O.numRegister) {
                this.error = "error: wrong number of operands. found " + A.length + " but expected " + O.numRegister + ".";
                break
              }
              var aa = !1,
                B = 160;
              w = 0;
              for (Q = A.length; w < Q;) {
                var x = w++,
                  D = !1,
                  F = this.match(A[x], p);
                0 < F.length && (A[x] = W.replace(A[x], F[0], "0"), this.verbose && Na.info("IS REL", {
                    fileName: "openfl/utils/AGALMiniAssembler.hx",
                    lineNumber: 344,
                    className: "openfl.utils.AGALMiniAssembler",
                    methodName: "assemble"
                  }),
                  D = !0);
                var C = this.match(A[x], n);
                if (0 == C.length) {
                  this.error = "error: could not parse operand " + x + " (" + A[x] + ").";
                  aa = !0;
                  break
                }
                var G = U.REGMAP.h[C[0]];
                this.debugEnabled && Na.info(G, {
                  fileName: "openfl/utils/AGALMiniAssembler.hx",
                  lineNumber: 363,
                  className: "openfl.utils.AGALMiniAssembler",
                  methodName: "assemble"
                });
                if (null == G) {
                  this.error = "error: could not find register name for operand " + x + " (" + A[x] + ").";
                  aa = !0;
                  break
                }
                if (f) {
                  if (0 == (G.flags & 32)) {
                    this.error = "error: register operand " + x + " (" + A[x] + ") only allowed in vertex programs.";
                    aa = !0;
                    break
                  }
                  if (D) {
                    this.error = "error: register operand " + x + " (" + A[x] + ") relative adressing not allowed in fragment programs.";
                    aa = !0;
                    break
                  }
                } else if (0 == (G.flags & 64)) {
                  this.error = "error: register operand " + x + " (" + A[x] + ") only allowed in fragment programs.";
                  aa = !0;
                  break
                }
                A[x] = da.substr(A[x], A[x].indexOf(G.name) + G.name.length, null);
                var H = D ? this.match(F[0], q) : this.match(A[x], q);
                C = 0;
                0 < H.length && (C = M.parseInt(H[0]));
                if (Ya.gt(C, G.range)) {
                  w = G.range + 1;
                  this.error = "error: register operand " + x + " (" + A[x] + ") index exceeds limit of " +
                    (null == w ? "null" : M.string(Ya.toFloat(w))) + ".";
                  aa = !0;
                  break
                }
                var E = this.match(A[x], k),
                  K = 0 == x && 0 == (O.flags & 128),
                  N = 2 == x && 0 != (O.flags & 8),
                  S = 0,
                  P = 0,
                  za = 0;
                if (K && D) {
                  this.error = "error: relative can not be destination";
                  aa = !0;
                  break
                }
                if (0 < E.length) {
                  for (var R = H = 0, qb = E[0].length, V = 1; V < qb;) R = da.cca(E[0], V) - 120, Ya.gt(R, 2) && (R = 3), H = K ? H | 1 << R : H | R << (V - 1 << 1), ++V;
                  if (!K)
                    for (; 4 >= V;) H |= R << (V - 1 << 1), ++V
                } else H = K ? 15 : 228;
                if (D) {
                  E = this.match(F[0], u);
                  S = U.REGMAP.h[E[0]];
                  if (null == S) {
                    this.error = "error: bad index register";
                    aa = !0;
                    break
                  }
                  S =
                    S.emitCode;
                  R = this.match(F[0], v);
                  if (0 == R.length) {
                    this.error = "error: bad index register select";
                    aa = !0;
                    break
                  }
                  P = da.cca(R[0], 1) - 120;
                  Ya.gt(P, 2) && (P = 3);
                  F = this.match(F[0], r);
                  0 < F.length && (za = M.parseInt(F[0]));
                  if (0 > za || 255 < za) {
                    this.error = "error: index offset " + za + " out of bounds. [0..255]";
                    aa = !0;
                    break
                  }
                  this.verbose && Na.info("RELATIVE: type=" + S + "==" + E[0] + " sel=" + (null == P ? "null" : M.string(Ya.toFloat(P))) + "==" + R[0] + " idx=" + (null == C ? "null" : M.string(Ya.toFloat(C))) + " offset=" + za, {
                    fileName: "openfl/utils/AGALMiniAssembler.hx",
                    lineNumber: 518,
                    className: "openfl.utils.AGALMiniAssembler",
                    methodName: "assemble"
                  })
                }
                this.verbose && Na.info("  emit argcode=" + M.string(G) + "[" + (null == C ? "null" : M.string(Ya.toFloat(C))) + "][" + H + "]", {
                  fileName: "openfl/utils/AGALMiniAssembler.hx",
                  lineNumber: 525,
                  className: "openfl.utils.AGALMiniAssembler",
                  methodName: "assemble"
                });
                if (K) this.agalcode.writeShort(C), this.agalcode.writeByte(H), this.agalcode.writeByte(G.emitCode), B -= 32;
                else {
                  if (N) {
                    this.verbose && Na.info("  emit sampler", {
                      fileName: "openfl/utils/AGALMiniAssembler.hx",
                      lineNumber: 541,
                      className: "openfl.utils.AGALMiniAssembler",
                      methodName: "assemble"
                    });
                    x = 5;
                    F = D = 0;
                    for (G = null == z ? 0 : z.length; F < G;) H = F++, this.verbose && Na.info("    opt: " + z[H], {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 552,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble"
                      }), K = U.SAMPLEMAP.h[z[H]], null == K ? (D = parseFloat(z[H]), this.verbose && Na.info("    bias: " + D, {
                        fileName: "openfl/utils/AGALMiniAssembler.hx",
                        lineNumber: 565,
                        className: "openfl.utils.AGALMiniAssembler",
                        methodName: "assemble"
                      })) :
                      (16 != K.flag && (x &= ~(15 << K.flag)), x |= K.mask << K.flag);
                    this.agalcode.writeShort(C);
                    this.agalcode.writeByte(8 * D | 0);
                    this.agalcode.writeByte(0);
                    this.agalcode.writeUnsignedInt(x);
                    this.verbose && Na.info("    bits: " + (x - 5), {
                      fileName: "openfl/utils/AGALMiniAssembler.hx",
                      lineNumber: 586,
                      className: "openfl.utils.AGALMiniAssembler",
                      methodName: "assemble"
                    })
                  } else 0 == x && (this.agalcode.writeUnsignedInt(0), B -= 32), this.agalcode.writeShort(C), this.agalcode.writeByte(za), this.agalcode.writeByte(H), this.agalcode.writeByte(G.emitCode),
                    this.agalcode.writeByte(S), this.agalcode.writeShort(D ? P | 32768 : 0);
                  B -= 64
                }
              }
              for (w = 0; w < B;) this.agalcode.writeByte(0), w += 8;
              if (aa) break
            }++t
          }
          "" != this.error && (this.error += "\n  at line " + t + " " + a[t], Cb.set_length(this.agalcode, 0), Na.info(this.error, {
            fileName: "openfl/utils/AGALMiniAssembler.hx",
            lineNumber: 631,
            className: "openfl.utils.AGALMiniAssembler",
            methodName: "assemble"
          }));
          if (this.debugEnabled) {
            c = "generated bytecode:";
            f = Cb.get_length(this.agalcode);
            w = 0;
            for (Q = f; w < Q;) f = w++, 0 == f % 16 && (c += "\n"), 0 == f % 4 && (c += " "),
              f = W.hex(this.agalcode.b[f], 2), 2 > f.length && (f = "0" + f), c += f;
            Na.info(c, {
              fileName: "openfl/utils/AGALMiniAssembler.hx",
              lineNumber: 662,
              className: "openfl.utils.AGALMiniAssembler",
              methodName: "assemble"
            })
          }
          this.verbose && Na.info("AGALMiniAssembler.assemble time: " + (Ja.getTimer() - e) / 1E3 + "s", {
            fileName: "openfl/utils/AGALMiniAssembler.hx",
            lineNumber: 667,
            className: "openfl.utils.AGALMiniAssembler",
            methodName: "assemble"
          });
          return this.agalcode
        },
        initregmap: function(a, b) {
          var c = U.REGMAP,
            d = new rf("va", "vertex attribute",
              0, b ? 1024 : 1 == a || 2 == a ? 7 : 15, 66);
          c.h.va = d;
          c = U.REGMAP;
          d = new rf("vc", "vertex constant", 1, b ? 1024 : 1 == a ? 127 : 249, 66);
          c.h.vc = d;
          c = U.REGMAP;
          d = new rf("vt", "vertex temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 67);
          c.h.vt = d;
          c = U.REGMAP;
          d = new rf("vo", "vertex output", 3, b ? 1024 : 0, 65);
          c.h.vo = d;
          c = U.REGMAP;
          d = new rf("vi", "varying", 4, b ? 1024 : 1 == a ? 7 : 9, 99);
          c.h.vi = d;
          c = U.REGMAP;
          d = new rf("fc", "fragment constant", 1, b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199, 34);
          c.h.fc = d;
          c = U.REGMAP;
          d = new rf("ft", "fragment temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 35);
          c.h.ft = d;
          c = U.REGMAP;
          d =
            new rf("fs", "texture sampler", 5, b ? 1024 : 7, 34);
          c.h.fs = d;
          c = U.REGMAP;
          d = new rf("fo", "fragment output", 3, b ? 1024 : 1 == a ? 0 : 3, 33);
          c.h.fo = d;
          c = U.REGMAP;
          d = new rf("fd", "fragment depth output", 6, b ? 1024 : 1 == a ? -1 : 0, 33);
          c.h.fd = d;
          c = U.REGMAP;
          d = new rf("iid", "instance id", 7, b ? 1024 : 0, 66);
          c.h.iid = d;
          d = U.REGMAP.h.vo;
          U.REGMAP.h.op = d;
          d = U.REGMAP.h.vi;
          U.REGMAP.h.i = d;
          d = U.REGMAP.h.vi;
          U.REGMAP.h.v = d;
          d = U.REGMAP.h.fo;
          U.REGMAP.h.oc = d;
          d = U.REGMAP.h.fd;
          U.REGMAP.h.od = d;
          d = U.REGMAP.h.vi;
          U.REGMAP.h.fi = d
        },
        match: function(a, b) {
          for (var c = [], d = 0; b.matchSub(a,
              d);) d = b.matched(0), c.push(d), d = b.matchedPos().pos + d.length;
          return c
        },
        __class__: U
      };
      var bc = function(a, b, c, d) {
        this.name = a;
        this.numRegister = b;
        this.emitCode = c;
        this.flags = d
      };
      k["openfl.utils._AGALMiniAssembler.OpCode"] = bc;
      bc.__name__ = "openfl.utils._AGALMiniAssembler.OpCode";
      bc.prototype = {
        emitCode: null,
        flags: null,
        name: null,
        numRegister: null,
        toString: function() {
          return '[OpCode name="' + this.name + '", numRegister=' + this.numRegister + ", emitCode=" + this.emitCode + ", flags=" + this.flags + "]"
        },
        __class__: bc
      };
      var rf = function(a,
        b, c, d, e) {
        this.name = a;
        this.longName = b;
        this.emitCode = c;
        this.range = d;
        this.flags = e
      };
      k["openfl.utils._AGALMiniAssembler.Register"] = rf;
      rf.__name__ = "openfl.utils._AGALMiniAssembler.Register";
      rf.prototype = {
        emitCode: null,
        name: null,
        longName: null,
        flags: null,
        range: null,
        toString: function() {
          return '[Register name="' + this.name + '", longName="' + this.longName + '", emitCode=' + (null == this.emitCode ? "null" : M.string(Ya.toFloat(this.emitCode))) + ", range=" + (null == this.range ? "null" : M.string(Ya.toFloat(this.range))) + ", flags=" +
            (null == this.flags ? "null" : M.string(Ya.toFloat(this.flags))) + "]"
        },
        __class__: rf
      };
      var cd = function(a, b, c) {
        this.name = a;
        this.flag = b;
        this.mask = c
      };
      k["openfl.utils._AGALMiniAssembler.Sampler"] = cd;
      cd.__name__ = "openfl.utils._AGALMiniAssembler.Sampler";
      cd.prototype = {
        flag: null,
        mask: null,
        name: null,
        toString: function() {
          return '[Sampler name="' + this.name + '", flag="' + (null == this.flag ? "null" : M.string(Ya.toFloat(this.flag))) + '", mask=' + (null == this.mask ? "null" : M.string(Ya.toFloat(this.mask))) + "]"
        },
        __class__: cd
      };
      var qn =
        function() {};
      k["openfl.utils.IAssetCache"] = qn;
      qn.__name__ = "openfl.utils.IAssetCache";
      qn.__isInterface__ = !0;
      qn.prototype = {
        get_enabled: null,
        set_enabled: null,
        clear: null,
        getBitmapData: null,
        getFont: null,
        getSound: null,
        hasBitmapData: null,
        hasFont: null,
        hasSound: null,
        removeBitmapData: null,
        removeFont: null,
        removeSound: null,
        setBitmapData: null,
        setFont: null,
        setSound: null,
        __class__: qn,
        __properties__: {
          set_enabled: "set_enabled",
          get_enabled: "get_enabled"
        }
      };
      var rn = function() {
        this.__enabled = !0;
        this.bitmapData = new ua;
        this.font = new ua;
        this.sound = new ua
      };
      k["openfl.utils.AssetCache"] = rn;
      rn.__name__ = "openfl.utils.AssetCache";
      rn.__interfaces__ = [qn];
      rn.prototype = {
        bitmapData: null,
        font: null,
        sound: null,
        __enabled: null,
        clear: function(a) {
          if (null == a) this.bitmapData = new ua, this.font = new ua, this.sound = new ua;
          else {
            var b = this.bitmapData.h;
            b = Object.keys(b);
            for (var c = b.length, d = 0; d < c;) {
              var e = b[d++];
              W.startsWith(e, a) && this.removeBitmapData(e)
            }
            b = this.font.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c;) e = b[d++], W.startsWith(e, a) && this.removeFont(e);
            b = this.sound.h;
            b = Object.keys(b);
            c = b.length;
            for (d = 0; d < c;) e = b[d++], W.startsWith(e, a) && this.removeSound(e)
          }
        },
        getBitmapData: function(a) {
          return this.bitmapData.h[a]
        },
        getFont: function(a) {
          return this.font.h[a]
        },
        getSound: function(a) {
          return this.sound.h[a]
        },
        hasBitmapData: function(a) {
          return Object.prototype.hasOwnProperty.call(this.bitmapData.h, a)
        },
        hasFont: function(a) {
          return Object.prototype.hasOwnProperty.call(this.font.h, a)
        },
        hasSound: function(a) {
          return Object.prototype.hasOwnProperty.call(this.sound.h, a)
        },
        removeBitmapData: function(a) {
          var b = sa.cache.image;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          b = this.bitmapData;
          return Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], !0) : !1
        },
        removeFont: function(a) {
          var b = sa.cache.font;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          b = this.font;
          return Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], !0) : !1
        },
        removeSound: function(a) {
          var b = sa.cache.audio;
          Object.prototype.hasOwnProperty.call(b.h, a) && delete b.h[a];
          b = this.sound;
          return Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], !0) : !1
        },
        setBitmapData: function(a, b) {
          this.bitmapData.h[a] = b
        },
        setFont: function(a, b) {
          this.font.h[a] = b
        },
        setSound: function(a, b) {
          this.sound.h[a] = b
        },
        get_enabled: function() {
          return this.__enabled
        },
        set_enabled: function(a) {
          return this.__enabled = a
        },
        __class__: rn,
        __properties__: {
          set_enabled: "set_enabled",
          get_enabled: "get_enabled"
        }
      };
      var qe = function() {
        yb.call(this)
      };
      k["openfl.utils.AssetLibrary"] = qe;
      qe.__name__ = "openfl.utils.AssetLibrary";
      qe.fromBytes =
        function(a, b) {
          return qe.fromManifest(Pc.fromBytes(Cb.toLimeBytes(a), b))
        };
      qe.fromFile = function(a, b) {
        return qe.fromManifest(Pc.fromFile(a, b))
      };
      qe.fromManifest = function(a) {
        a = yb.fromManifest(a);
        if (null != a) {
          if (a instanceof qe) return a;
          var b = new qe;
          b.__proxy = a;
          return b
        }
        return null
      };
      qe.loadFromBytes = function(a, b) {
        return Pc.loadFromBytes(Cb.toLimeBytes(a), b).then(function(a) {
          return qe.loadFromManifest(a)
        })
      };
      qe.loadFromFile = function(a, b) {
        return Pc.loadFromFile(a, b).then(function(a) {
          return qe.loadFromManifest(a)
        })
      };
      qe.loadFromManifest = function(a) {
        a = qe.fromManifest(a);
        return null != a ? a.load().then(function(a) {
          return lb.withValue(a)
        }) : lb.withError("Could not load asset manifest")
      };
      qe.__super__ = yb;
      qe.prototype = t(yb.prototype, {
        __proxy: null,
        exists: function(a, b) {
          return null != this.__proxy ? this.__proxy.exists(a, b) : yb.prototype.exists.call(this, a, b)
        },
        getAsset: function(a, b) {
          return null != this.__proxy ? this.__proxy.getAsset(a, b) : yb.prototype.getAsset.call(this, a, b)
        },
        getAudioBuffer: function(a) {
          return null != this.__proxy ? this.__proxy.getAudioBuffer(a) :
            yb.prototype.getAudioBuffer.call(this, a)
        },
        getBytes: function(a) {
          return null != this.__proxy ? this.__proxy.getBytes(a) : yb.prototype.getBytes.call(this, a)
        },
        getFont: function(a) {
          return null != this.__proxy ? this.__proxy.getFont(a) : yb.prototype.getFont.call(this, a)
        },
        getImage: function(a) {
          return null != this.__proxy ? this.__proxy.getImage(a) : yb.prototype.getImage.call(this, a)
        },
        getMovieClip: function(a) {
          return null
        },
        getPath: function(a) {
          return null != this.__proxy ? this.__proxy.getPath(a) : yb.prototype.getPath.call(this,
            a)
        },
        getText: function(a) {
          return null != this.__proxy ? this.__proxy.getText(a) : yb.prototype.getText.call(this, a)
        },
        isLocal: function(a, b) {
          return null != this.__proxy ? this.__proxy.isLocal(a, b) : yb.prototype.isLocal.call(this, a, b)
        },
        list: function(a) {
          return null != this.__proxy ? this.__proxy.list(a) : yb.prototype.list.call(this, a)
        },
        loadAsset: function(a, b) {
          return null != this.__proxy ? this.__proxy.loadAsset(a, b) : yb.prototype.loadAsset.call(this, a, b)
        },
        load: function() {
          return null != this.__proxy ? this.__proxy.load() : yb.prototype.load.call(this)
        },
        loadAudioBuffer: function(a) {
          return null != this.__proxy ? this.__proxy.loadAudioBuffer(a) : yb.prototype.loadAudioBuffer.call(this, a)
        },
        loadBytes: function(a) {
          return null != this.__proxy ? this.__proxy.loadBytes(a) : yb.prototype.loadBytes.call(this, a)
        },
        loadFont: function(a) {
          return null != this.__proxy ? this.__proxy.loadFont(a) : yb.prototype.loadFont.call(this, a)
        },
        loadImage: function(a) {
          return null != this.__proxy ? this.__proxy.loadImage(a) : yb.prototype.loadImage.call(this, a)
        },
        loadMovieClip: function(a) {
          return lb.withValue(this.getMovieClip(a))
        },
        loadText: function(a) {
          return null != this.__proxy ? this.__proxy.loadText(a) : yb.prototype.loadText.call(this, a)
        },
        unload: function() {
          null != this.__proxy ? this.__proxy.unload() : yb.prototype.unload.call(this)
        },
        __class__: qe
      });
      var Aa = function() {};
      k["openfl.utils.Assets"] = Aa;
      Aa.__name__ = "openfl.utils.Assets";
      Aa.addEventListener = function(a, b, c, d, e) {
        null == e && (e = !1);
        null == d && (d = 0);
        null == c && (c = !1);
        sa.onChange.has(Aa.LimeAssets_onChange) || sa.onChange.add(Aa.LimeAssets_onChange);
        Aa.dispatcher.addEventListener(a, b, c,
          d, e)
      };
      Aa.dispatchEvent = function(a) {
        return Aa.dispatcher.dispatchEvent(a)
      };
      Aa.exists = function(a, b) {
        return sa.exists(a, b)
      };
      Aa.getBitmapData = function(a, b) {
        null == b && (b = !0);
        if (b && Aa.cache.get_enabled() && Aa.cache.hasBitmapData(a)) {
          var c = Aa.cache.getBitmapData(a);
          if (Aa.isValidBitmapData(c)) return c
        }
        c = sa.getImage(a, !1);
        return null != c ? (c = wa.fromImage(c), b && Aa.cache.get_enabled() && Aa.cache.setBitmapData(a, c), c) : null
      };
      Aa.getBytes = function(a) {
        return Cb.fromLimeBytes(sa.getBytes(a))
      };
      Aa.getFont = function(a, b) {
        null ==
          b && (b = !0);
        if (b && Aa.cache.get_enabled() && Aa.cache.hasFont(a)) return Aa.cache.getFont(a);
        var c = sa.getFont(a, !1);
        if (null != c) {
          var d = new Wc;
          d.__fromLimeFont(c);
          b && Aa.cache.get_enabled() && Aa.cache.setFont(a, d);
          return d
        }
        return new Wc
      };
      Aa.getLibrary = function(a) {
        return sa.getLibrary(a)
      };
      Aa.getMovieClip = function(a) {
        var b = a.substring(0, a.indexOf(":")),
          c = da.substr(a, a.indexOf(":") + 1, null),
          d = Aa.getLibrary(b);
        if (null != d) {
          if (d instanceof qe && d.exists(c, "MOVIE_CLIP")) {
            if (d.isLocal(c, "MOVIE_CLIP")) return d.getMovieClip(c);
            Na.error('MovieClip asset "' + a + '" exists, but only asynchronously', {
              fileName: "openfl/utils/Assets.hx",
              lineNumber: 207,
              className: "openfl.utils.Assets",
              methodName: "getMovieClip"
            });
            return null
          }
          Na.error('There is no MovieClip asset with an ID of "' + a + '"', {
            fileName: "openfl/utils/Assets.hx",
            lineNumber: 213,
            className: "openfl.utils.Assets",
            methodName: "getMovieClip"
          })
        } else Na.error('There is no asset library named "' + b + '"', {
          fileName: "openfl/utils/Assets.hx",
          lineNumber: 217,
          className: "openfl.utils.Assets",
          methodName: "getMovieClip"
        });
        return null
      };
      Aa.getMusic = function(a, b) {
        null == b && (b = !0);
        return Aa.getSound(a, b)
      };
      Aa.getPath = function(a) {
        return sa.getPath(a)
      };
      Aa.getSound = function(a, b) {
        null == b && (b = !0);
        if (b && Aa.cache.get_enabled() && Aa.cache.hasSound(a)) {
          var c = Aa.cache.getSound(a);
          if (Aa.isValidSound(c)) return c
        }
        c = sa.getAudioBuffer(a, !1);
        return null != c ? (c = zf.fromAudioBuffer(c), b && Aa.cache.get_enabled() && Aa.cache.setSound(a, c), c) : null
      };
      Aa.getText = function(a) {
        return sa.getText(a)
      };
      Aa.hasEventListener = function(a) {
        return Aa.dispatcher.hasEventListener(a)
      };
      Aa.hasLibrary = function(a) {
        return sa.hasLibrary(a)
      };
      Aa.isLocal = function(a, b, c) {
        null == c && (c = !0);
        if (c && Aa.cache.get_enabled() && (("IMAGE" == b || null == b) && Aa.cache.hasBitmapData(a) || ("FONT" == b || null == b) && Aa.cache.hasFont(a) || ("SOUND" == b || "MUSIC" == b || null == b) && Aa.cache.hasSound(a))) return !0;
        c = a.substring(0, a.indexOf(":"));
        a = da.substr(a, a.indexOf(":") + 1, null);
        c = Aa.getLibrary(c);
        return null != c ? c.isLocal(a, b) : !1
      };
      Aa.isValidBitmapData = function(a) {
        return null != a && null != a.image
      };
      Aa.isValidSound = function(a) {
        return !0
      };
      Aa.list = function(a) {
        return sa.list(a)
      };
      Aa.loadBitmapData = function(a, b) {
        null == b && (b = !0);
        null == b && (b = !0);
        var c = new ee;
        if (b && Aa.cache.get_enabled() && Aa.cache.hasBitmapData(a)) {
          var d = Aa.cache.getBitmapData(a);
          if (Aa.isValidBitmapData(d)) return c.complete(d), c.future
        }
        sa.loadImage(a, !1).onComplete(function(d) {
          null != d ? (d = wa.fromImage(d), b && Aa.cache.get_enabled() && Aa.cache.setBitmapData(a, d), c.complete(d)) : c.error('[Assets] Could not load Image "' + a + '"')
        }).onError(r(c, c.error)).onProgress(r(c, c.progress));
        return c.future
      };
      Aa.loadBytes = function(a) {
        var b = new ee;
        a = sa.loadBytes(a);
        a.onComplete(function(a) {
          b.complete(Cb.fromLimeBytes(a))
        });
        a.onProgress(function(a, d) {
          b.progress(a, d)
        });
        a.onError(function(a) {
          b.error(a)
        });
        return b.future
      };
      Aa.loadFont = function(a, b) {
        null == b && (b = !0);
        null == b && (b = !0);
        var c = new ee;
        if (b && Aa.cache.get_enabled() && Aa.cache.hasFont(a)) return c.complete(Aa.cache.getFont(a)), c.future;
        sa.loadFont(a).onComplete(function(d) {
          var e = new Wc;
          e.__fromLimeFont(d);
          b && Aa.cache.get_enabled() && Aa.cache.setFont(a,
            e);
          c.complete(e)
        }).onError(r(c, c.error)).onProgress(r(c, c.progress));
        return c.future
      };
      Aa.loadLibrary = function(a) {
        return sa.loadLibrary(a).then(function(b) {
          var c = null;
          null != b && (b instanceof qe ? c = b : (c = new qe, c.__proxy = b, sa.registerLibrary(a, c)));
          return lb.withValue(c)
        })
      };
      Aa.loadMusic = function(a, b) {
        null == b && (b = !0);
        null == b && (b = !0);
        return new lb(function() {
          return Aa.getMusic(a, b)
        })
      };
      Aa.loadMovieClip = function(a) {
        var b = new ee,
          c = a.substring(0, a.indexOf(":")),
          d = da.substr(a, a.indexOf(":") + 1, null),
          e = Aa.getLibrary(c);
        if (null != e) {
          if (e instanceof qe && e.exists(d, "MOVIE_CLIP")) return b.completeWith(e.loadMovieClip(d)), b.future;
          b.error('[Assets] There is no MovieClip asset with an ID of "' + a + '"')
        } else b.error('[Assets] There is no asset library named "' + c + '"');
        return b.future
      };
      Aa.loadSound = function(a, b) {
        null == b && (b = !0);
        null == b && (b = !0);
        var c = new ee;
        sa.loadAudioBuffer(a, b).onComplete(function(d) {
          null != d ? (d = zf.fromAudioBuffer(d), b && Aa.cache.get_enabled() && Aa.cache.setSound(a, d), c.complete(d)) : c.error('[Assets] Could not load Sound "' +
            a + '"')
        }).onError(r(c, c.error)).onProgress(r(c, c.progress));
        return c.future
      };
      Aa.loadText = function(a) {
        return sa.loadText(a)
      };
      Aa.registerLibrary = function(a, b) {
        sa.registerLibrary(a, b)
      };
      Aa.removeEventListener = function(a, b, c) {
        null == c && (c = !1);
        Aa.dispatcher.removeEventListener(a, b, c)
      };
      Aa.resolveClass = function(a) {
        return k[a]
      };
      Aa.resolveEnum = function(a) {
        return O[a]
      };
      Aa.unloadLibrary = function(a) {
        sa.unloadLibrary(a)
      };
      Aa.LimeAssets_onChange = function() {
        Aa.dispatchEvent(new ma("change"))
      };
      var Cb = {
          __properties__: {
            set_position: "set_position",
            get_position: "get_position",
            set_length: "set_length",
            get_length: "get_length",
            get_bytesAvailable: "get_bytesAvailable",
            set_defaultObjectEncoding: "set_defaultObjectEncoding",
            get_defaultObjectEncoding: "get_defaultObjectEncoding",
            set_defaultEndian: "set_defaultEndian",
            get_defaultEndian: "get_defaultEndian"
          },
          _new: function(a) {
            null == a && (a = 0);
            return new sc(a)
          },
          clear: function(a) {
            a.clear()
          },
          compress: function(a, b) {
            a.compress(b)
          },
          deflate: function(a) {
            a.deflate()
          },
          fromArrayBuffer: function(a) {
            return null == a ? null : sc.fromBytes(ib.ofData(a))
          },
          fromBytes: function(a) {
            return null == a ? null : a instanceof sc ? a : sc.fromBytes(a)
          },
          fromBytesData: function(a) {
            return null == a ? null : sc.fromBytes(ib.ofData(a))
          },
          fromFile: function(a) {
            return Cb.fromLimeBytes(mc.fromFile(a))
          },
          fromLimeBytes: function(a) {
            return Cb.fromBytes(a)
          },
          get: function(a, b) {
            return a.b[b]
          },
          inflate: function(a) {
            a.inflate()
          },
          loadFromBytes: function(a) {
            return mc.loadFromBytes(a).then(function(a) {
              a = Cb.fromLimeBytes(a);
              return lb.withValue(a)
            })
          },
          loadFromFile: function(a) {
            return mc.loadFromFile(a).then(function(a) {
              a =
                Cb.fromLimeBytes(a);
              return lb.withValue(a)
            })
          },
          readBoolean: function(a) {
            return a.readBoolean()
          },
          readByte: function(a) {
            return a.readByte()
          },
          readBytes: function(a, b, c, d) {
            null == d && (d = 0);
            null == c && (c = 0);
            a.readBytes(b, c, d)
          },
          readDouble: function(a) {
            return a.readDouble()
          },
          readFloat: function(a) {
            return a.readFloat()
          },
          readInt: function(a) {
            return a.readInt()
          },
          readMultiByte: function(a, b, c) {
            return a.readMultiByte(b, c)
          },
          readObject: function(a) {
            return a.readObject()
          },
          readShort: function(a) {
            return a.readShort()
          },
          readUTF: function(a) {
            return a.readUTF()
          },
          readUTFBytes: function(a, b) {
            return a.readUTFBytes(b)
          },
          readUnsignedByte: function(a) {
            return a.readUnsignedByte()
          },
          readUnsignedInt: function(a) {
            return a.readUnsignedInt()
          },
          readUnsignedShort: function(a) {
            return a.readUnsignedShort()
          },
          set: function(a, b, c) {
            a.__resize(b + 1);
            a.b[b] = c & 255;
            return c
          },
          toArrayBuffer: function(a) {
            return a.b.bufferValue
          },
          toBytePointer: function(a) {
            Gr.set(Cb.__bytePointer, a, null, null, a.position);
            return Cb.__bytePointer
          },
          toBytes: function(a) {
            return a
          },
          toBytesData: function(a) {
            return a.b.bufferValue
          },
          toLimeBytes: function(a) {
            return a
          },
          toString: function(a) {
            return a.toString()
          },
          uncompress: function(a, b) {
            a.uncompress(b)
          },
          writeBoolean: function(a, b) {
            a.writeBoolean(b)
          },
          writeByte: function(a, b) {
            a.writeByte(b)
          },
          writeBytes: function(a, b, c, d) {
            null == d && (d = 0);
            null == c && (c = 0);
            a.writeBytes(b, c, d)
          },
          writeDouble: function(a, b) {
            a.writeDouble(b)
          },
          writeFloat: function(a, b) {
            a.writeFloat(b)
          },
          writeInt: function(a, b) {
            a.writeInt(b)
          },
          writeMultiByte: function(a, b, c) {
            a.writeMultiByte(b, c)
          },
          writeObject: function(a, b) {
            a.writeObject(b)
          },
          writeShort: function(a, b) {
            a.writeShort(b)
          },
          writeUTF: function(a, b) {
            a.writeUTF(b)
          },
          writeUTFBytes: function(a, b) {
            a.writeUTFBytes(b)
          },
          writeUnsignedInt: function(a, b) {
            a.writeUnsignedInt(b)
          },
          get_bytesAvailable: function(a) {
            return a.length - a.position
          },
          get_defaultEndian: function() {
            null == sc.__defaultEndian && (Wa.get_endianness() == Cg.LITTLE_ENDIAN ? sc.__defaultEndian = 1 : sc.__defaultEndian = 0);
            return sc.__defaultEndian
          },
          set_defaultEndian: function(a) {
            return sc.__defaultEndian = a
          },
          get_defaultObjectEncoding: function() {
            return sc.defaultObjectEncoding
          },
          set_defaultObjectEncoding: function(a) {
            return sc.defaultObjectEncoding = a
          },
          get_endian: function(a) {
            return a.__endian
          },
          set_endian: function(a, b) {
            return a.__endian = b
          },
          get_length: function(a) {
            return null == a ? 0 : a.length
          },
          set_length: function(a, b) {
            0 < b && (a.__resize(b), b < a.position && (a.position = b));
            return a.length = b
          },
          get_objectEncoding: function(a) {
            return a.objectEncoding
          },
          set_objectEncoding: function(a, b) {
            return a.objectEncoding = b
          },
          get_position: function(a) {
            return a.position
          },
          set_position: function(a, b) {
            return a.position =
              b
          }
        },
        sn = function() {};
      k["openfl.utils.IDataOutput"] = sn;
      sn.__name__ = "openfl.utils.IDataOutput";
      sn.__isInterface__ = !0;
      sn.prototype = {
        get_endian: null,
        set_endian: null,
        objectEncoding: null,
        writeBoolean: null,
        writeByte: null,
        writeBytes: null,
        writeDouble: null,
        writeFloat: null,
        writeInt: null,
        writeMultiByte: null,
        writeObject: null,
        writeShort: null,
        writeUnsignedInt: null,
        writeUTF: null,
        writeUTFBytes: null,
        __class__: sn,
        __properties__: {
          set_endian: "set_endian",
          get_endian: "get_endian"
        }
      };
      var tn = function() {};
      k["openfl.utils.IDataInput"] =
        tn;
      tn.__name__ = "openfl.utils.IDataInput";
      tn.__isInterface__ = !0;
      tn.prototype = {
        get_bytesAvailable: null,
        get_endian: null,
        set_endian: null,
        objectEncoding: null,
        readBoolean: null,
        readByte: null,
        readBytes: null,
        readDouble: null,
        readFloat: null,
        readInt: null,
        readMultiByte: null,
        readObject: null,
        readShort: null,
        readUnsignedByte: null,
        readUnsignedInt: null,
        readUnsignedShort: null,
        readUTF: null,
        readUTFBytes: null,
        __class__: tn,
        __properties__: {
          set_endian: "set_endian",
          get_endian: "get_endian",
          get_bytesAvailable: "get_bytesAvailable"
        }
      };
      var sc = function(a) {
        null == a && (a = 0);
        var b = new ib(new ArrayBuffer(a));
        ib.call(this, b.b.buffer);
        this.__length = a;
        null == sc.__defaultEndian && (Wa.get_endianness() == Cg.LITTLE_ENDIAN ? sc.__defaultEndian = 1 : sc.__defaultEndian = 0);
        this.__endian = sc.__defaultEndian;
        this.objectEncoding = sc.defaultObjectEncoding;
        this.position = 0
      };
      k["openfl.utils.ByteArrayData"] = sc;
      sc.__name__ = "openfl.utils.ByteArrayData";
      sc.__interfaces__ = [sn, tn];
      sc.__properties__ = {
        set_defaultEndian: "set_defaultEndian",
        get_defaultEndian: "get_defaultEndian"
      };
      sc.fromBytes = function(a) {
        var b = new sc;
        b.__fromBytes(a);
        return b
      };
      sc.get_defaultEndian = function() {
        null == sc.__defaultEndian && (Wa.get_endianness() == Cg.LITTLE_ENDIAN ? sc.__defaultEndian = 1 : sc.__defaultEndian = 0);
        return sc.__defaultEndian
      };
      sc.set_defaultEndian = function(a) {
        return sc.__defaultEndian = a
      };
      sc.__super__ = ib;
      sc.prototype = t(ib.prototype, {
        objectEncoding: null,
        position: null,
        __endian: null,
        __length: null,
        clear: function() {
          this.position = this.length = 0
        },
        compress: function(a) {
          null == a && (a = 2);
          if (this.__length > this.length) {
            var b =
              this.length;
            this.length = this.__length;
            var c = new ib(new ArrayBuffer(b));
            c.blit(0, this, 0, b);
            this.b = c.b;
            this.__length = c.length;
            this.data = c.data;
            this.length = b
          }
          switch (a) {
            case 0:
              a = mc.compress(this, fe.DEFLATE);
              break;
            case 1:
              a = mc.compress(this, fe.LZMA);
              break;
            default:
              a = mc.compress(this, fe.ZLIB)
          }
          null != a && (this.b = a.b, this.__length = a.length, this.data = a.data, this.position = this.length = this.__length)
        },
        deflate: function() {
          this.compress(0)
        },
        inflate: function() {
          this.uncompress(0)
        },
        readBoolean: function() {
          if (this.position <
            this.length) return 0 != this.b[this.position++];
          throw F.thrown(new eh);
        },
        readByte: function() {
          var a = this.readUnsignedByte();
          return 0 != (a & 128) ? a - 256 : a
        },
        readBytes: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          0 == c && (c = this.length - this.position);
          if (this.position + c > this.length) throw F.thrown(new eh);
          a.length < b + c && a.__resize(b + c);
          a.blit(b, this, this.position, c);
          this.position += c
        },
        readDouble: function() {
          if (1 == this.__endian) {
            if (this.position + 8 > this.length) throw F.thrown(new eh);
            this.position += 8;
            return this.getDouble(this.position -
              8)
          }
          var a = this.readInt(),
            b = this.readInt();
          return de.i64ToDouble(b, a)
        },
        readFloat: function() {
          if (1 == this.__endian) {
            if (this.position + 4 > this.length) throw F.thrown(new eh);
            this.position += 4;
            return this.getFloat(this.position - 4)
          }
          return de.i32ToFloat(this.readInt())
        },
        readInt: function() {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian ? d << 24 | c << 16 | b << 8 | a : a << 24 | b << 16 | c << 8 | d
        },
        readMultiByte: function(a, b) {
          return this.readUTFBytes(a)
        },
        readObject: function() {
          switch (this.objectEncoding) {
            case 10:
              var a = this.readUTF();
              return Le.run(a);
            case 12:
              return a = this.readUTF(), JSON.parse(a);
            default:
              return null
          }
        },
        readShort: function() {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          a = 1 == this.__endian ? b << 8 | a : a << 8 | b;
          return 0 != (a & 32768) ? a - 65536 : a
        },
        readUnsignedByte: function() {
          if (this.position < this.length) return this.b[this.position++];
          throw F.thrown(new eh);
        },
        readUnsignedInt: function() {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte(),
            c = this.readUnsignedByte(),
            d = this.readUnsignedByte();
          return 1 == this.__endian ? d << 24 | c << 16 | b << 8 | a : a << 24 | b << 16 | c << 8 | d
        },
        readUnsignedShort: function() {
          var a = this.readUnsignedByte(),
            b = this.readUnsignedByte();
          return 1 == this.__endian ? (b << 8) + a : a << 8 | b
        },
        readUTF: function() {
          var a = this.readUnsignedShort();
          return this.readUTFBytes(a)
        },
        readUTFBytes: function(a) {
          if (this.position + a > this.length) throw F.thrown(new eh);
          this.position += a;
          return this.getString(this.position - a, a)
        },
        uncompress: function(a) {
          null == a && (a = 2);
          if (this.__length >
            this.length) {
            var b = this.length;
            this.length = this.__length;
            var c = new ib(new ArrayBuffer(b));
            c.blit(0, this, 0, b);
            this.b = c.b;
            this.__length = c.length;
            this.data = c.data;
            this.length = b
          }
          switch (a) {
            case 0:
              a = mc.decompress(this, fe.DEFLATE);
              break;
            case 1:
              a = mc.decompress(this, fe.LZMA);
              break;
            default:
              a = mc.decompress(this, fe.ZLIB)
          }
          null != a && (this.b = a.b, this.__length = a.length, this.data = a.data, this.length = this.__length);
          this.position = 0
        },
        writeBoolean: function(a) {
          this.writeByte(a ? 1 : 0)
        },
        writeByte: function(a) {
          this.__resize(this.position +
            1);
          this.b[this.position++] = a & 255
        },
        writeBytes: function(a, b, c) {
          null == c && (c = 0);
          null == b && (b = 0);
          0 != Cb.get_length(a) && (0 == c && (c = Cb.get_length(a) - b), this.__resize(this.position + c), this.blit(this.position, a, b, c), this.position += c)
        },
        writeDouble: function(a) {
          a = de.doubleToI64(a);
          1 == this.__endian ? (this.writeInt(a.low), this.writeInt(a.high)) : (this.writeInt(a.high), this.writeInt(a.low))
        },
        writeFloat: function(a) {
          1 == this.__endian ? (this.__resize(this.position + 4), this.setFloat(this.position, a), this.position += 4) : (a = de.floatToI32(a),
            this.writeInt(a))
        },
        writeInt: function(a) {
          this.__resize(this.position + 4);
          1 == this.__endian ? (this.b[this.position++] = a & 255, this.b[this.position++] = a >> 8 & 255, this.b[this.position++] = a >> 16 & 255, this.b[this.position++] = a >> 24 & 255) : (this.b[this.position++] = a >> 24 & 255, this.b[this.position++] = a >> 16 & 255, this.b[this.position++] = a >> 8 & 255, this.b[this.position++] = a & 255)
        },
        writeMultiByte: function(a, b) {
          this.writeUTFBytes(a)
        },
        writeObject: function(a) {
          switch (this.objectEncoding) {
            case 10:
              a = Ce.run(a);
              this.writeUTF(a);
              break;
            case 12:
              a = JSON.stringify(a), this.writeUTF(a)
          }
        },
        writeShort: function(a) {
          this.__resize(this.position + 2);
          1 == this.__endian ? (this.b[this.position++] = a & 255, this.b[this.position++] = a >> 8 & 255) : (this.b[this.position++] = a >> 8 & 255, this.b[this.position++] = a & 255)
        },
        writeUnsignedInt: function(a) {
          this.writeInt(a)
        },
        writeUTF: function(a) {
          a = ib.ofString(a);
          this.writeShort(a.length);
          this.writeBytes(Cb.fromBytes(a))
        },
        writeUTFBytes: function(a) {
          a = ib.ofString(a);
          this.writeBytes(Cb.fromBytes(a))
        },
        __fromBytes: function(a) {
          this.b =
            a.b;
          this.__length = a.length;
          this.data = a.data;
          this.length = a.length
        },
        __resize: function(a) {
          if (a > this.__length) {
            var b = new ib(new ArrayBuffer(3 * (a + 1) >> 1));
            if (0 < this.__length) {
              var c = this.length;
              this.length = this.__length;
              b.blit(0, this, 0, this.__length);
              this.length = c
            }
            this.b = b.b;
            this.__length = b.length;
            this.data = b.data
          }
          this.length < a && (this.length = a)
        },
        __setData: function(a) {
          this.b = a.b;
          this.__length = a.length;
          this.data = a.data
        },
        get_bytesAvailable: function() {
          return this.length - this.position
        },
        get_endian: function() {
          return this.__endian
        },
        set_endian: function(a) {
          return this.__endian = a
        },
        __class__: sc,
        __properties__: {
          set_endian: "set_endian",
          get_endian: "get_endian",
          get_bytesAvailable: "get_bytesAvailable"
        }
      });
      var Hr = {
          exists: function(a, b) {
            return a.exists(b)
          },
          get: function(a, b) {
            return a.get(b)
          },
          keyValueIterator: function(a) {
            return a.keyValueIterator()
          },
          remove: function(a, b) {
            return a.remove(b)
          },
          set: function(a, b, c) {
            a.set(b, c);
            return c
          },
          iterator: function(a) {
            return a.keys()
          },
          each: function(a) {
            return a.iterator()
          },
          toStringMap: function(a, b) {
            return new ua
          },
          toIntMap: function(a, b) {
            return new Za
          },
          toFloatMap: function(a, b) {
            return new fj
          },
          toEnumValueMapMap: function(a, b) {
            return new Pj
          },
          toObjectMap: function(a, b) {
            return new pc
          },
          toUtilsObjectMap: function(a, b) {
            return new gj
          },
          toClassMap: function(a, b) {
            return new hj
          },
          fromStringMap: function(a) {
            return a
          },
          fromIntMap: function(a) {
            return a
          },
          fromFloatMap: function(a) {
            return a
          },
          fromObjectMap: function(a) {
            return a
          },
          fromUtilsObjectMap: function(a) {
            return a
          },
          fromClassMap: function(a) {
            return a
          }
        },
        hj = function() {
          this.types = new ua;
          this.values = new ua
        };
      k["openfl.utils._Dictionary.ClassMap"] = hj;
      hj.__name__ = "openfl.utils._Dictionary.ClassMap";
      hj.__interfaces__ = [kd];
      hj.prototype = {
        types: null,
        values: null,
        clear: function() {
          this.types.h = Object.create(null);
          this.values.h = Object.create(null)
        },
        copy: function() {
          for (var a = new hj, b = this.keys(); b.hasNext();) {
            var c = b.next();
            a.set(c, this.get(c))
          }
          return a
        },
        exists: function(a) {
          return Object.prototype.hasOwnProperty.call(this.types.h, a.__name__)
        },
        get: function(a) {
          return this.values.h[a.__name__]
        },
        keyValueIterator: function() {
          return new jh(this)
        },
        keys: function() {
          return new Ci(this.types.h)
        },
        iterator: function() {
          return new Ci(this.values.h)
        },
        remove: function(a) {
          a = a.__name__;
          var b = this.types;
          Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], b = !0) : b = !1;
          if (b) return !0;
          b = this.values;
          return Object.prototype.hasOwnProperty.call(b.h, a) ? (delete b.h[a], !0) : !1
        },
        set: function(a, b) {
          var c = a.__name__;
          this.types.h[c] = a;
          this.values.h[c] = b
        },
        toString: function() {
          return ua.stringify(this.values.h)
        },
        __class__: hj
      };
      var fj = function() {
        this.floatKeys = [];
        this.values = []
      };
      k["openfl.utils._Dictionary.FloatMap"] = fj;
      fj.__name__ = "openfl.utils._Dictionary.FloatMap";
      fj.__interfaces__ = [kd];
      fj.prototype = {
        floatKeys: null,
        values: null,
        clear: function() {
          this.floatKeys = [];
          this.values = []
        },
        copy: function() {
          for (var a = new fj, b = this.keys(); b.hasNext();) {
            var c = b.next();
            a.set(c, this.get(c))
          }
          return a
        },
        exists: function(a) {
          return -1 < this.indexOf(a)
        },
        get: function(a) {
          a = this.indexOf(a);
          return -1 < a ? this.values[a] : null
        },
        keyValueIterator: function() {
          return new jh(this)
        },
        keys: function() {
          return new Ne(this.floatKeys.slice())
        },
        iterator: function() {
          return new Ne(this.values.slice())
        },
        remove: function(a) {
          a = this.indexOf(a);
          return -1 < a ? (this.floatKeys.splice(a, 1), this.values.splice(a, 1), !0) : !1
        },
        set: function(a, b) {
          this.insertSorted(a, b)
        },
        indexOf: function(a) {
          var b = this.floatKeys.length,
            c = 0,
            d = b - 1;
          if (0 == b) return -1;
          for (; c < d;) {
            b = Math.floor((c + d) / 2);
            if (this.floatKeys[b] == a) return b;
            this.floatKeys[b] > a ? d = b - 1 : c = b + 1
          }
          return this.floatKeys[c] == a ? c : -1
        },
        insertSorted: function(a, b) {
          var c =
            this.floatKeys.length,
            d = 0,
            e = c - 1;
          if (0 == c) this.floatKeys.push(a), this.values.push(b);
          else {
            for (; d < e;) {
              c = Math.floor((d + e) / 2);
              if (this.floatKeys[c] == a) {
                this.values[c] = b;
                return
              }
              this.floatKeys[c] > a ? e = c - 1 : d = c + 1
            }
            this.floatKeys[d] > a ? (this.floatKeys.splice(d, 0, a), this.values.splice(d, 0, b)) : this.floatKeys[d] < a ? (this.floatKeys.splice(d + 1, 0, a), this.values.splice(d + 1, 0, b)) : this.values[d] = b
          }
        },
        toString: function() {
          return this.values.toString()
        },
        __class__: fj
      };
      var gj = function() {
        this.map = new pc
      };
      k["openfl.utils._Dictionary.UtilsObjectMap"] =
        gj;
      gj.__name__ = "openfl.utils._Dictionary.UtilsObjectMap";
      gj.__interfaces__ = [kd];
      gj.prototype = {
        map: null,
        clear: function() {
          this.map.h = {
            __keys__: {}
          }
        },
        copy: function() {
          for (var a = new gj, b = this.keys(); b.hasNext();) {
            var c = b.next();
            a.set(c, this.get(c))
          }
          return a
        },
        exists: function(a) {
          return null != this.map.h.__keys__[a.__id__]
        },
        get: function(a) {
          return this.map.h[a.__id__]
        },
        keyValueIterator: function() {
          return new jh(this)
        },
        keys: function() {
          return this.map.keys()
        },
        iterator: function() {
          return this.map.iterator()
        },
        remove: function(a) {
          return this.map.remove(a)
        },
        set: function(a, b) {
          this.map.set(a, b)
        },
        toString: function() {
          return this.map.toString()
        },
        __class__: gj
      };
      var kr = {
          fromLimeEndian: function(a) {
            switch (a._hx_index) {
              case 0:
                return 1;
              case 1:
                return 0
            }
          },
          fromString: function(a) {
            switch (a) {
              case "bigEndian":
                return 0;
              case "littleEndian":
                return 1;
              default:
                return null
            }
          },
          toLimeEndian: function(a) {
            switch (a) {
              case 0:
                return Cg.BIG_ENDIAN;
              case 1:
                return Cg.LITTLE_ENDIAN;
              default:
                return null
            }
          },
          toString: function(a) {
            switch (a) {
              case 0:
                return "bigEndian";
              case 1:
                return "littleEndian";
              default:
                return null
            }
          }
        },
        un = function() {};
      k["haxe.lang.Iterator"] = un;
      un.__name__ = "haxe.lang.Iterator";
      un.__isInterface__ = !0;
      un.prototype = {
        hasNext: null,
        next: null,
        __class__: un
      };
      var vn = function() {};
      k["haxe.lang.Iterable"] = vn;
      vn.__name__ = "haxe.lang.Iterable";
      vn.__isInterface__ = !0;
      vn.prototype = {
        iterator: null,
        __class__: vn
      };
      var Kc = function() {};
      k["openfl.utils._internal.Lib"] = Kc;
      Kc.__name__ = "openfl.utils._internal.Lib";
      Kc.notImplemented = function(a) {
        var b = a.className + "." + a.methodName;
        Object.prototype.hasOwnProperty.call(Kc.__sentWarnings.h,
          b) || (Kc.__sentWarnings.h[b] = !0, Na.warn(a.methodName + " is not implemented", a))
      };
      var ei = function() {
        this.rollOutStack = []
      };
      k["openfl.utils._internal.TouchData"] = ei;
      ei.__name__ = "openfl.utils._internal.TouchData";
      ei.prototype = {
        rollOutStack: null,
        touch: null,
        touchDownTarget: null,
        touchOverTarget: null,
        reset: function() {
          this.touchOverTarget = this.touchDownTarget = this.touch = null;
          this.rollOutStack.splice(0, this.rollOutStack.length)
        },
        __class__: ei
      };
      var pg = function() {};
      k["polygonal.ds.Cloneable"] = pg;
      pg.__name__ = "polygonal.ds.Cloneable";
      pg.__isInterface__ = !0;
      pg.prototype = {
        clone: null,
        __class__: pg
      };
      var wn = function() {};
      k["polygonal.ds.Hashable"] = wn;
      wn.__name__ = "polygonal.ds.Hashable";
      wn.__isInterface__ = !0;
      wn.prototype = {
        key: null,
        __class__: wn
      };
      var ij = function() {};
      k["polygonal.ds.Collection"] = ij;
      ij.__name__ = "polygonal.ds.Collection";
      ij.__isInterface__ = !0;
      ij.__interfaces__ = [wn];
      ij.prototype = {
        get_size: null,
        free: null,
        contains: null,
        remove: null,
        clear: null,
        iterator: null,
        isEmpty: null,
        toArray: null,
        clone: null,
        __class__: ij,
        __properties__: {
          get_size: "get_size"
        }
      };
      var qg = function() {};
      k["polygonal.ds.HashKey"] = qg;
      qg.__name__ = "polygonal.ds.HashKey";
      qg.next = function() {
        null == qg._counter && (qg._counter = 0);
        Ba._assert(qg._counter < qg._counter + 1, "_counter < _counter + 1", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashKey.hx",
          lineNumber: 44,
          className: "polygonal.ds.HashKey",
          methodName: "next"
        });
        return qg._counter++
      };
      var li = function() {};
      k["polygonal.ds.Map"] = li;
      li.__name__ = "polygonal.ds.Map";
      li.__isInterface__ = !0;
      li.__interfaces__ = [ij];
      li.prototype = {
        has: null,
        hasKey: null,
        get: null,
        set: null,
        unset: null,
        remap: null,
        toValSet: null,
        toKeySet: null,
        keys: null,
        __class__: li
      };
      var xn = function(a, b) {
        null == b && (b = -1);
        this.mTmpKeyBuffer = [];
        this.mTmpIntBuffer = [];
        this.mIterator = null;
        this.mFree = this.mSize = 0;
        this.reuseIterator = !1;
        this.key = qg.next();
        Ba._assert(0 < a, "slotCount > 0", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
          lineNumber: 158,
          className: "polygonal.ds.HashTable",
          methodName: "new"
        }); - 1 == b && (b = a);
        2 > b && (b = 2);
        this.mMinCapacity = this.capacity = b;
        this.mH = new rg(a, this.capacity);
        this.mKeys = Array(this.capacity);
        this.mVals = Array(this.capacity);
        a = this.mNext = Array(this.capacity);
        b = 0;
        for (var c = this.capacity - 1; b < c;) {
          var d = b++;
          a[d] = d + 1
        }
        a[this.capacity - 1] = -1
      };
      k["polygonal.ds.HashTable"] = xn;
      xn.__name__ = "polygonal.ds.HashTable";
      xn.__interfaces__ = [li];
      xn.prototype = {
        key: null,
        capacity: null,
        get_loadFactor: function() {
          return this.mH.get_loadFactor()
        },
        get_slotCount: function() {
          return this.mH.slotCount
        },
        reuseIterator: null,
        get_growthRate: function() {
          return this.mH.growthRate
        },
        set_growthRate: function(a) {
          return this.mH.growthRate = a
        },
        mH: null,
        mKeys: null,
        mVals: null,
        mNext: null,
        mFree: null,
        mSize: null,
        mMinCapacity: null,
        mIterator: null,
        mTmpIntBuffer: null,
        mTmpKeyBuffer: null,
        getCollisionCount: function() {
          return this.mH.getCollisionCount()
        },
        getFront: function(a) {
          var b = this.mH;
          a = a.key;
          var c = 73856093 * a & b.mMask,
            d = b.mHash[c];
          if (-1 == d) b = -2147483648;
          else {
            var e = b.mData;
            if (e[d] == a) b = e[d + 1];
            else {
              var f = -2147483648,
                g = d,
                h = g;
              for (d = e[d + 2]; - 1 != d;) {
                if (e[d] == a) {
                  f = e[d + 1];
                  e[h + 2] = e[d + 2];
                  e[d + 2] = g;
                  b.mHash[c] = d;
                  break
                }
                h = d;
                d = e[h + 2]
              }
              b = f
            }
          }
          return -2147483648 == b ? null : this.mVals[b]
        },
        setIfAbsent: function(a, b) {
          Ba._assert(null != a, "key != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
            lineNumber: 210,
            className: "polygonal.ds.HashTable",
            methodName: "setIfAbsent"
          });
          this.mSize == this.capacity &&
            this.grow();
          var c = this.mFree,
            d = this.mH,
            e = a.key;
          Ba._assert(-2147483648 != c, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 291,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "setIfAbsent"
          });
          var f = 73856093 * e & d.mMask,
            g = d.mData,
            h = d.mHash[f];
          if (-1 == h) {
            d.mSize == d.capacity && (d.grow(), g = d.mData);
            var m = 3 * d.mFree;
            d.mFree = d.mNext[d.mFree];
            d.mHash[f] =
              m;
            g[m] = e;
            g[m + 1] = c;
            d.mSize++;
            d = !0
          } else if (g[h] == e) d = !1;
          else {
            for (f = g[h + 2]; - 1 != f;) {
              if (g[f] == e) {
                h = -1;
                break
              }
              h = f;
              f = g[h + 2]
            } - 1 == h ? d = !1 : (d.mSize == d.capacity && (d.grow(), g = d.mData), m = 3 * d.mFree, d.mFree = d.mNext[d.mFree], g[h + 2] = m, g[m] = e, g[m + 1] = c, d.mSize++, d = !0)
          }
          return d ? (this.mVals[c] = b, this.mKeys[c] = a, this.mFree = this.mNext[c], this.mSize++, !0) : !1
        },
        rehash: function(a) {
          this.mH.rehash(a);
          return this
        },
        remap: function(a, b) {
          Ba._assert(null != a, "key != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
            lineNumber: 244,
            className: "polygonal.ds.HashTable",
            methodName: "remap"
          });
          var c = this.mH;
          a = a.key;
          var d = c.mHash[73856093 * a & c.mMask];
          if (-1 == d) a = -2147483648;
          else if (c = c.mData, c[d] == a) a = c[d + 1];
          else {
            var e = -2147483648;
            for (d = c[d + 2]; - 1 != d;) {
              if (c[d] == a) {
                e = c[d + 1];
                break
              }
              d = c[d + 2]
            }
            a = e
          }
          return -2147483648 != a ? (this.mVals[a] = b, !0) : !1
        },
        toKeyArray: function() {
          if (0 == this.mSize) return [];
          var a = this.mSize;
          Ba._assert(0 <= a, "len >= 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 37,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "alloc"
          });
          a = Array(a);
          for (var b = 0, c = this.mKeys, d, e = 0, f = this.capacity; e < f;) d = e++, d = c[d], null != d && (a[b++] = d);
          return a
        },
        pack: function() {
          this.mH.pack();
          if (this.mH.capacity == this.capacity) return this;
          this.capacity = this.mH.capacity;
          for (var a = this.mNext = Array(this.capacity), b = 0, c = this.capacity - 1; b < c;) {
            var d = b++;
            a[d] = d + 1
          }
          a[this.capacity - 1] = -1;
          this.mFree = 0;
          b = this.mKeys;
          a = Array(this.capacity);
          c = this.mVals;
          var e = Array(this.capacity),
            f = this.mFree;
          for (d = this.mH.iterator(); d.hasNext();) {
            var g = d.next();
            a[f] = b[g];
            e[f] = c[g];
            f = this.mNext[f]
          }
          this.mFree = f;
          this.mKeys = a;
          this.mVals = e;
          b = 0;
          for (c = this.mSize; b < c;)
            if (d = b++, f = this.mH, e = a[d].key, g = f.mHash[73856093 * e & f.mMask], -1 != g)
              if (f = f.mData, f[g] == e) f[g + 1] = d;
              else
                for (g = f[g + 2]; - 1 != g;) {
                  if (f[g] == e) {
                    f[g + 1] = d;
                    break
                  }
                  g = f[g + 2]
                }
          return this
        },
        iter: function(a) {
          Ba._assert(null != a, "f != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
            lineNumber: 322,
            className: "polygonal.ds.HashTable",
            methodName: "iter"
          });
          for (var b = this.mH.mData, c = this.mVals, d = this.mKeys, e, f = 0, g = this.mH.capacity; f < g;) e = f++, e = b[3 * e + 1], -2147483648 != e && a(d[e], c[e]);
          return this
        },
        toString: function() {
          var a = "" + M.string(Xa.format("[ HashTable size=" + this.mSize + " capacity=" + this.capacity + " load=%.2f", [this.get_loadFactor()]));
          if (0 == this.mSize) return a + " ]";
          a += "\n";
          for (var b = 0, c = this.keys(); c.hasNext();) {
            var d = c.next(),
              e = M.string(d).length;
            b <= e && (b = e)
          }
          e = [];
          b = "  %- " + b + "s -> %s\n";
          var f = [];
          for (c = this.keys(); c.hasNext();) d = c.next(), f.push(d);
          f.sort(function(a, b) {
            return a.key - b.key
          });
          var g = 1,
            h = f.length;
          c = 0;
          for (d = 1; g < h;) {
            if (f[c] == f[g]) ++d;
            else {
              c = f[c];
              e[0] = c;
              if (1 < d) d = [], this.getAll(c, d), e[1] = d.join(",");
              else {
                Ba._assert(null != c, "key != null", {
                  fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
                  lineNumber: 449,
                  className: "polygonal.ds.HashTable",
                  methodName: "get"
                });
                var m = this.mH;
                d = c.key;
                c = m.mHash[73856093 *
                  d & m.mMask];
                if (-1 == c) c = -2147483648;
                else if (m = m.mData, m[c] == d) c = m[c + 1];
                else {
                  var l = -2147483648;
                  for (c = m[c + 2]; - 1 != c;) {
                    if (m[c] == d) {
                      l = m[c + 1];
                      break
                    }
                    c = m[c + 2]
                  }
                  c = l
                }
                e[1] = M.string(-2147483648 == c ? null : this.mVals[c])
              }
              a += M.string(Xa.format(b, e));
              c = g;
              d = 1
            }++g
          }
          c = f[c];
          e[0] = c;
          if (1 < d) d = [], this.getAll(c, d), e[1] = d.join(",");
          else {
            Ba._assert(null != c, "key != null", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
              lineNumber: 449,
              className: "polygonal.ds.HashTable",
              methodName: "get"
            });
            m = this.mH;
            d = c.key;
            g = m.mHash[73856093 * d & m.mMask];
            if (-1 == g) c = -2147483648;
            else if (m = m.mData, m[g] == d) c = m[g + 1];
            else {
              l = -2147483648;
              for (g = m[g + 2]; - 1 != g;) {
                if (m[g] == d) {
                  l = m[g + 1];
                  break
                }
                g = m[g + 2]
              }
              c = l
            }
            e[1] = M.string(-2147483648 == c ? null : this.mVals[c])
          }
          a += M.string(Xa.format(b, e));
          return a + "]"
        },
        grow: function() {
          var a = this.capacity;
          this.capacity = Ig.compute(this.get_growthRate(), this.capacity);
          var b = Array(this.capacity);
          Nb.blit(this.mNext, 0, b, 0, a);
          b = this.mNext = b;
          for (var c = a - 1, d = this.capacity - 1; c < d;) {
            var e =
              c++;
            b[e] = e + 1
          }
          b[this.capacity - 1] = -1;
          this.mFree = a;
          b = Array(this.capacity);
          Nb.blit(this.mVals, 0, b, 0, a);
          this.mVals = b;
          b = Array(this.capacity);
          Nb.blit(this.mKeys, 0, b, 0, a);
          this.mKeys = b
        },
        has: function(a) {
          for (var b = this.mKeys, c = this.mVals, d = 0, e = this.capacity; d < e;) {
            var f = d++;
            if (null != b[f] && c[f] == a) return !0
          }
          return !1
        },
        hasKey: function(a) {
          Ba._assert(null != a, "key != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
            lineNumber: 439,
            className: "polygonal.ds.HashTable",
            methodName: "hasKey"
          });
          var b = this.mH;
          a = a.key;
          var c = b.mHash[73856093 * a & b.mMask];
          if (-1 == c) return !1;
          b = b.mData;
          if (b[c] == a) return !0;
          var d = !1;
          for (c = b[c + 2]; - 1 != c;) {
            if (b[c] == a) {
              d = !0;
              break
            }
            c = b[c + 2]
          }
          return d
        },
        get: function(a) {
          Ba._assert(null != a, "key != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
            lineNumber: 449,
            className: "polygonal.ds.HashTable",
            methodName: "get"
          });
          var b = this.mH;
          a = a.key;
          var c = b.mHash[73856093 * a & b.mMask];
          if (-1 == c) a = -2147483648;
          else if (b = b.mData, b[c] == a) a = b[c + 1];
          else {
            var d = -2147483648;
            for (c = b[c + 2]; - 1 != c;) {
              if (b[c] == a) {
                d = b[c + 1];
                break
              }
              c = b[c + 2]
            }
            a = d
          }
          return -2147483648 == a ? null : this.mVals[a]
        },
        getAll: function(a, b) {
          var c = this.mH,
            d = a.key,
            e = c.mHash[73856093 * d & c.mMask];
          if (-1 == e) c = -2147483648;
          else {
            var f = c.mData;
            if (f[e] == d) c = f[e + 1];
            else
              for (c = -2147483648, e = f[e + 2]; - 1 != e;) {
                if (f[e] == d) {
                  c = f[e + 1];
                  break
                }
                e = f[e + 2]
              }
          }
          if (-2147483648 == c) return 0;
          d = this.mTmpIntBuffer;
          a =
            this.mH.getAll(a.key, d);
          c = this.mVals;
          for (e = 0; e < a;) f = e++, b[f] = c[d[f]];
          return a
        },
        set: function(a, b) {
          Ba._assert(null != a, "key != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
            lineNumber: 483,
            className: "polygonal.ds.HashTable",
            methodName: "set"
          });
          this.mSize == this.capacity && this.grow();
          var c = this.mFree,
            d = this.mH,
            e = a.key;
          Ba._assert(-2147483648 != c, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 1046,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "set"
          });
          d.mSize == d.capacity && d.grow();
          var f = d.mData,
            g = d.mHash,
            h = 3 * d.mFree;
          d.mFree = d.mNext[d.mFree];
          f[h] = e;
          f[h + 1] = c;
          var m = 73856093 * e & d.mMask,
            l = g[m];
          if (-1 == l) g[m] = h, d.mSize++, d = !0;
          else {
            g = f[l] != e;
            for (m = f[l + 2]; - 1 != m;) f[m] == e && (g = !1), l = m, m = f[m + 2];
            f[l + 2] = h;
            d.mSize++;
            d = g
          }
          this.mVals[c] = b;
          this.mKeys[c] = a;
          this.mFree = this.mNext[c];
          this.mSize++;
          return d
        },
        unset: function(a) {
          var b = this.mH,
            c = a.key,
            d = b.mHash[73856093 * c & b.mMask];
          if (-1 == d) d = -2147483648;
          else {
            var e = b.mData;
            if (e[d] == c) d = e[d + 1];
            else {
              b = -2147483648;
              for (d = e[d + 2]; - 1 != d;) {
                if (e[d] == c) {
                  b = e[d + 1];
                  break
                }
                d = e[d + 2]
              }
              d = b
            }
          }
          if (-2147483648 == d) return !1;
          this.mKeys[d] = null;
          this.mNext[d] = this.mFree;
          this.mFree = d;
          b = this.mH;
          c = a.key;
          a = 73856093 * c & b.mMask;
          var f = b.mHash;
          d = f[a];
          if (-1 != d)
            if (e = b.mData, c == e[d]) f[a] = -1 == e[d + 2] ? -1 : e[d + 2], c = d / 3 | 0, b.mNext[c] = b.mFree, b.mFree = c, e[d + 1] = -2147483648, e[d + 2] = -1, b.mSize--;
            else {
              a = !1;
              f = d;
              for (d = e[d + 2]; - 1 != d;) {
                if (e[d] == c) {
                  a = !0;
                  break
                }
                f = d;
                d = e[f + 2]
              }
              a && (e[f + 2] = e[d + 2], c = d / 3 | 0, b.mNext[c] =
                b.mFree, b.mFree = c, e[d + 1] = -2147483648, e[d + 2] = -1, b.mSize--)
            } this.mSize--;
          return !0
        },
        toValSet: function() {
          for (var a = new mi, b = this.mKeys, c = this.mVals, d = 0, e = this.capacity; d < e;) {
            var f = d++;
            null != b[f] && a.set(c[f])
          }
          return a
        },
        toKeySet: function() {
          for (var a = new mi, b = this.mKeys, c, d = 0, e = this.capacity; d < e;) c = d++, c = b[c], null != c && a.set(c);
          return a
        },
        keys: function() {
          return new yn(this)
        },
        get_size: function() {
          return this.mSize
        },
        free: function() {
          Nb.nullify(this.mVals);
          this.mVals = null;
          Nb.nullify(this.mKeys);
          this.mNext = this.mKeys =
            null;
          this.mH.free();
          this.mH = null;
          null != this.mIterator && (this.mIterator.free(), this.mIterator = null);
          this.mTmpKeyBuffer = this.mTmpIntBuffer = null
        },
        contains: function(a) {
          return this.has(a)
        },
        remove: function(a) {
          for (var b = this.mTmpKeyBuffer, c = this.mKeys, d = this.mVals, e, f = 0, g = 0, h = this.capacity; g < h;) {
            var m = g++;
            e = c[m];
            null != e && d[m] == a && (b[f++] = e)
          }
          g = 0;
          for (h = f; g < h;) m = g++, this.unset(b[m]), b[m] = null;
          return 0 < f
        },
        clear: function(a) {
          null == a && (a = !1);
          this.mH.clear(a);
          Nb.init(this.mKeys, null, 0, this.capacity);
          Nb.init(this.mVals,
            null, 0, this.capacity);
          a = this.mNext;
          for (var b = 0, c = this.capacity - 1; b < c;) {
            var d = b++;
            a[d] = d + 1
          }
          a[this.capacity - 1] = -1;
          this.mSize = this.mFree = 0
        },
        iterator: function() {
          return this.reuseIterator ? (null == this.mIterator ? this.mIterator = new mk(this) : this.mIterator.reset(), this.mIterator) : new mk(this)
        },
        isEmpty: function() {
          return 0 == this.mSize
        },
        toArray: function() {
          if (0 == this.mSize) return [];
          var a = this.mSize;
          Ba._assert(0 <= a, "len >= 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 37,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "alloc"
          });
          a = Array(a);
          for (var b = 0, c = this.mKeys, d = this.mVals, e = 0, f = this.capacity; e < f;) {
            var g = e++;
            null != c[g] && (a[b++] = d[g])
          }
          return a
        },
        clone: function(a, b) {
          null == a && (a = !0);
          var c = new xn(this.mH.slotCount, this.mSize);
          c.mH = this.mH.clone();
          c.mSize = this.mSize;
          c.mFree = this.mFree;
          var d = this.mVals,
            e = c.mVals,
            f = this.mKeys;
          Nb.blit(f, 0, c.mKeys, 0, this.mSize);
          if (a) Nb.blit(d, 0, e, 0, this.mSize);
          else if (null != b) {
            a = 0;
            for (var g = this.mSize; a < g;) {
              var h = a++;
              e[h] = null != f[h] ? b(d[h]) : null
            }
          } else
            for (a = 0, g = this.mSize; a < g;) h = a++, null != f[h] ? (Ba._assert(K.__implements(d[h], pg), "element is not of type Cloneable(Std.isOfType(srcVals.get(i), Cloneable))", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/HashTable.hx",
              lineNumber: 735,
              className: "polygonal.ds.HashTable",
              methodName: "clone"
            }), e[h] = K.__cast(d[h], pg).clone()) : e[h] = null;
          Nb.blit(this.mNext, 0, c.mNext, 0, this.mSize);
          return c
        },
        __class__: xn,
        __properties__: {
          get_size: "get_size",
          set_growthRate: "set_growthRate",
          get_growthRate: "get_growthRate",
          get_slotCount: "get_slotCount",
          get_loadFactor: "get_loadFactor"
        }
      };
      var Jg = function() {};
      k["polygonal.ds.Itr"] = Jg;
      Jg.__name__ = "polygonal.ds.Itr";
      Jg.__isInterface__ = !0;
      Jg.prototype = {
        hasNext: null,
        next: null,
        remove: null,
        reset: null,
        __class__: Jg
      };
      var yn = function(a) {
        this.mObject = a;
        this.reset()
      };
      k["polygonal.ds.HashTableKeyIterator"] = yn;
      yn.__name__ = "polygonal.ds.HashTableKeyIterator";
      yn.__interfaces__ = [Jg];
      yn.prototype = {
        mObject: null,
        mKeys: null,
        mI: null,
        mS: null,
        free: function() {
          this.mKeys = this.mObject = null
        },
        reset: function() {
          this.mKeys = this.mObject.mKeys;
          this.mS = this.mObject.mH.capacity;
          for (this.mI = 0; this.mI < this.mS && null == this.mKeys[this.mI];) this.mI++;
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          for (var a = this.mKeys[this.mI]; ++this.mI < this.mS && null == this.mKeys[this.mI];);
          return a
        },
        remove: function() {
          throw F.thrown("unsupported operation");
        },
        __class__: yn
      };
      var mk = function(a) {
        this.mObject =
          a;
        this.reset()
      };
      k["polygonal.ds.HashTableValIterator"] = mk;
      mk.__name__ = "polygonal.ds.HashTableValIterator";
      mk.__interfaces__ = [Jg];
      mk.prototype = {
        mObject: null,
        mKeys: null,
        mVals: null,
        mI: null,
        mS: null,
        free: function() {
          this.mVals = this.mKeys = this.mObject = null
        },
        reset: function() {
          this.mVals = this.mObject.mVals;
          this.mKeys = this.mObject.mKeys;
          this.mS = this.mObject.mH.capacity;
          for (this.mI = 0; this.mI < this.mS && null == this.mKeys[this.mI];) this.mI++;
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          for (var a =
              this.mVals[this.mI]; ++this.mI < this.mS && null == this.mKeys[this.mI];);
          return a
        },
        remove: function() {
          throw F.thrown("unsupported operation");
        },
        __class__: mk
      };
      var jj = function() {};
      k["polygonal.ds.Set"] = jj;
      jj.__name__ = "polygonal.ds.Set";
      jj.__isInterface__ = !0;
      jj.__interfaces__ = [ij];
      jj.prototype = {
        has: null,
        set: null,
        unset: null,
        __class__: jj
      };
      var Kg = function(a, b) {
        null == b && (b = -1);
        this.mFree = this.mSize = 0;
        this.reuseIterator = !1;
        this.growthRate = -3;
        this.key = qg.next();
        Ba._assert(0 < a, "slotCount > 0", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
          lineNumber: 138,
          className: "polygonal.ds.IntHashSet",
          methodName: "new"
        });
        Ba._assert(0 < a && 0 == (a & a - 1), "slotCount is not a power of 2(MathTools.isPow2(slotCount))", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
          lineNumber: 139,
          className: "polygonal.ds.IntHashSet",
          methodName: "new"
        }); - 1 == b && (b = a);
        2 > b && (b = 2);
        this.mMinCapacity = this.capacity = b;
        this.slotCount = a;
        this.mMask = a - 1;
        this.mHash = Nb.init(Array(a), -1);
        this.mData =
          Array(this.capacity << 1);
        this.mNext = Array(this.capacity);
        var c = 1;
        a = this.mData;
        b = 0;
        for (var d = this.capacity; b < d;) b++, a[c - 1] = -2147483648, a[c] = -1, c += 2;
        a = this.mNext;
        b = 0;
        for (d = this.capacity - 1; b < d;) c = b++, a[c] = c + 1;
        a[this.capacity - 1] = -1
      };
      k["polygonal.ds.IntHashSet"] = Kg;
      Kg.__name__ = "polygonal.ds.IntHashSet";
      Kg.__interfaces__ = [jj];
      Kg.prototype = {
        key: null,
        capacity: null,
        growthRate: null,
        reuseIterator: null,
        get_loadFactor: function() {
          return this.mSize / this.slotCount
        },
        slotCount: null,
        mHash: null,
        mData: null,
        mNext: null,
        mMask: null,
        mFree: null,
        mSize: null,
        mMinCapacity: null,
        mIterator: null,
        getCollisionCount: function() {
          for (var a = 0, b, c = this.mData, d = this.mHash, e = 0, f = this.slotCount; e < f;)
            if (b = e++, b = d[b], -1 != b)
              for (b = c[b + 1]; - 1 != b;) b = c[b + 1], ++a;
          return a
        },
        hasFront: function(a) {
          Ba._assert(-2147483648 != a, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
            lineNumber: 203,
            className: "polygonal.ds.IntHashSet",
            methodName: "hasFront"
          });
          var b = 73856093 * a & this.mMask,
            c = this.mHash[b];
          if (-1 == c) return !1;
          var d = this.mData;
          if (d[c] == a) return !0;
          var e = !1,
            f = c,
            g = f;
          for (c = d[c + 1]; - 1 != c;) {
            if (d[c] == a) {
              d[g + 1] = d[c + 1];
              d[c + 1] = f;
              d[b] = c;
              e = !0;
              break
            }
            g = c;
            c = d[g + 1]
          }
          return e
        },
        rehash: function(a) {
          Ba._assert(0 < a && 0 == (a & a - 1), "slotCount is not a power of 2(MathTools.isPow2(slotCount))", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
            lineNumber: 270,
            className: "polygonal.ds.IntHashSet",
            methodName: "rehash"
          });
          if (this.slotCount == a) return this;
          for (var b = new Kg(a, this.capacity), c = this.mData, d = 0, e = this.capacity; d < e;) {
            var f = d++;
            f = c[f << 1];
            if (-2147483648 != f) {
              Ba._assert(-2147483648 != f, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
                fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
                lineNumber: 521,
                className: "polygonal.ds.IntHashSet",
                methodName: "set"
              });
              var g =
                73856093 * f & b.mMask,
                h = b.mData,
                m = b.mHash[g];
              if (-1 == m) b.mSize == b.capacity && (b.grow(), h = b.mData), m = b.mFree << 1, b.mFree = b.mNext[b.mFree], b.mHash[g] = m, h[m] = f, b.mSize++;
              else if (h[m] != f) {
                for (g = h[m + 1]; - 1 != g;) {
                  if (h[g] == f) {
                    m = -1;
                    break
                  }
                  m = g;
                  g = h[g + 1]
                } - 1 != m && (b.mSize == b.capacity && (b.grow(), h = b.mData), g = b.mFree << 1, b.mFree = b.mNext[b.mFree], h[g] = f, h[m + 1] = g, b.mSize++)
              }
            }
          }
          this.mHash = b.mHash;
          this.mData = b.mData;
          this.mNext = b.mNext;
          this.slotCount = a;
          this.mMask = b.mMask;
          this.mFree = b.mFree;
          return this
        },
        pack: function() {
          if (this.capacity ==
            this.mMinCapacity) return this;
          var a = this.mSize,
            b = this.mMinCapacity;
          this.capacity = a > b ? a : b;
          var c = this.mData,
            d = 0,
            e = this.mHash,
            f = Array(this.capacity << 1);
          a = 0;
          for (b = this.slotCount; a < b;) {
            var g = a++;
            var h = e[g];
            if (-1 != h)
              for (e[g] = d, f[d++] = c[h], f[d++] = -1, h = c[h + 1]; - 1 != h;) f[d - 1] = d, f[d++] = c[h], f[d++] = -1, h = c[h + 1]
          }
          this.mData = f;
          c = this.mNext = Array(this.capacity);
          a = 0;
          for (b = this.capacity - 1; a < b;) g = a++, c[g] = g + 1;
          this.mFree = c[this.capacity - 1] = -1;
          return this
        },
        iter: function(a) {
          Ba._assert(null != a, "f != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
            lineNumber: 384,
            className: "polygonal.ds.IntHashSet",
            methodName: "iter"
          });
          for (var b = this.mData, c, d, e = 0, f = this.capacity; e < f;) c = e++ << 1, d = b[c], -2147483648 != d && a(b[c]);
          return this
        },
        toString: function() {
          var a = "" + M.string(Xa.format("[ IntHashSet size=" + this.mSize + " capacity=" + this.capacity + " load=%.2f", [this.get_loadFactor()]));
          if (0 == this.mSize) return a + " ]";
          a += "\n";
          for (var b = this.iterator(); b.hasNext();) {
            var c = b.next();
            a += M.string("  " + c + "\n")
          }
          return a + "]"
        },
        hashCode: function(a) {
          return 73856093 * a & this.mMask
        },
        grow: function() {
          var a = this.capacity;
          this.capacity = Ig.compute(this.growthRate, this.capacity);
          var b = Array(this.capacity);
          Nb.blit(this.mNext, 0, b, 0, a);
          this.mNext = b;
          b = Array(this.capacity << 1);
          Nb.blit(this.mData, 0, b, 0, a << 1);
          this.mData = b;
          b = this.mNext;
          for (var c = a - 1, d = this.capacity - 1; c < d;) {
            var e = c++;
            b[e] = e + 1
          }
          b[this.capacity - 1] = -1;
          this.mFree = a;
          e = a << 1;
          b = this.mData;
          c = 0;
          for (d = this.capacity - a; c < d;) c++, b[e] = -2147483648, b[e + 1] = -1, e += 2
        },
        has: function(a) {
          Ba._assert(-2147483648 != a, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
            lineNumber: 467,
            className: "polygonal.ds.IntHashSet",
            methodName: "has"
          });
          var b = this.mHash[73856093 * a & this.mMask];
          if (-1 == b) return !1;
          var c = this.mData;
          if (c[b] == a) return !0;
          var d = !1;
          for (b = c[b + 1]; - 1 != b;) {
            if (c[b] == a) {
              d = !0;
              break
            }
            b = c[b + 1]
          }
          return d
        },
        set: function(a) {
          Ba._assert(-2147483648 != a, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
            lineNumber: 521,
            className: "polygonal.ds.IntHashSet",
            methodName: "set"
          });
          var b = 73856093 * a & this.mMask,
            c = this.mData,
            d = this.mHash[b];
          if (-1 == d) return this.mSize == this.capacity && (this.grow(), c = this.mData), d = this.mFree << 1, this.mFree = this.mNext[this.mFree], this.mHash[b] = d, c[d] = a, this.mSize++, !0;
          if (c[d] == a) return !1;
          for (b = c[d + 1]; - 1 != b;) {
            if (c[b] == a) {
              d = -1;
              break
            }
            d = b;
            b = c[b + 1]
          }
          if (-1 == d) return !1;
          this.mSize == this.capacity && (this.grow(), c = this.mData);
          b = this.mFree << 1;
          this.mFree = this.mNext[this.mFree];
          c[b] = a;
          c[d + 1] = b;
          this.mSize++;
          return !0
        },
        unset: function(a) {
          var b = 73856093 * a & this.mMask,
            c = this.mHash[b];
          if (-1 == c) return !1;
          var d = this.mData;
          if (a == d[c]) return this.mHash[b] = -1 == d[c + 1] ? -1 : d[c + 1], a = c >> 1, this.mNext[a] = this.mFree, this.mFree = a, d[c] = -2147483648, d[c + 1] = -1, this.mSize--, !0;
          b = !1;
          var e = c;
          for (c = d[c + 1]; - 1 != c;) {
            if (d[c] == a) {
              b = !0;
              break
            }
            e = c;
            c = d[e + 1]
          }
          return b ? (d[e + 1] = d[c + 1], a = c >> 1, this.mNext[a] = this.mFree, this.mFree = a, d[c] = -2147483648, d[c + 1] = -1, --this.mSize, !0) : !1
        },
        get_size: function() {
          return this.mSize
        },
        free: function() {
          this.mNext =
            this.mData = this.mHash = null;
          null != this.mIterator && (this.mIterator.free(), this.mIterator = null)
        },
        contains: function(a) {
          Ba._assert(-2147483648 != a, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
            lineNumber: 467,
            className: "polygonal.ds.IntHashSet",
            methodName: "has"
          });
          var b = this.mHash[73856093 * a & this.mMask];
          if (-1 == b) return !1;
          var c = this.mData;
          if (c[b] == a) return !0;
          var d = !1;
          for (b = c[b + 1]; - 1 != b;) {
            if (c[b] == a) {
              d = !0;
              break
            }
            b = c[b + 1]
          }
          return d
        },
        remove: function(a) {
          var b = 73856093 * a & this.mMask,
            c = this.mHash[b];
          if (-1 == c) return !1;
          var d = this.mData;
          if (a == d[c]) return this.mHash[b] = -1 == d[c + 1] ? -1 : d[c + 1], a = c >> 1, this.mNext[a] = this.mFree, this.mFree = a, d[c] = -2147483648, d[c + 1] = -1, this.mSize--, !0;
          b = !1;
          var e = c;
          for (c = d[c + 1]; - 1 != c;) {
            if (d[c] == a) {
              b = !0;
              break
            }
            e = c;
            c = d[e + 1]
          }
          return b ? (d[e + 1] = d[c + 1], a = c >> 1, this.mNext[a] = this.mFree, this.mFree = a, d[c] = -2147483648, d[c + 1] = -1, --this.mSize, !0) : !1
        },
        clear: function(a) {
          var b =
            this.mHash;
          a = 0;
          for (var c = this.slotCount; a < c;) {
            var d = a++;
            b[d] = -1
          }
          d = 1;
          b = this.mData;
          a = 0;
          for (c = this.capacity; a < c;) a++, b[d - 1] = -2147483648, b[d] = -1, d += 2;
          b = this.mNext;
          a = 0;
          for (c = this.capacity - 1; a < c;) d = a++, b[d] = d + 1;
          b[this.capacity - 1] = -1;
          this.mSize = this.mFree = 0
        },
        iterator: function() {
          return this.reuseIterator ? (null == this.mIterator ? this.mIterator = new nk(this) : this.mIterator.reset(), this.mIterator) : new nk(this)
        },
        isEmpty: function() {
          return 0 == this.mSize
        },
        toArray: function() {
          if (0 == this.mSize) return [];
          var a = this.mSize;
          Ba._assert(0 <= a, "len >= 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 37,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "alloc"
          });
          a = Array(a);
          for (var b = 0, c, d = this.mData, e = 0, f = this.capacity; e < f;) c = e++, c = d[c << 1], -2147483648 != c && (a[b++] = c);
          return a
        },
        clone: function(a, b) {
          a = new Kg(this.slotCount, this.mSize);
          Nb.blit(this.mHash, 0, a.mHash, 0, this.slotCount);
          Nb.blit(this.mData, 0, a.mData,
            0, this.mSize << 1);
          Nb.blit(this.mNext, 0, a.mNext, 0, this.mSize);
          a.mMask = this.mMask;
          a.slotCount = this.slotCount;
          a.capacity = this.capacity;
          a.mFree = this.mFree;
          a.mSize = this.mSize;
          return a
        },
        __class__: Kg,
        __properties__: {
          get_size: "get_size",
          get_loadFactor: "get_loadFactor"
        }
      };
      var nk = function(a) {
        this.mObject = a;
        this.mData = a.mData;
        this.mI = 0;
        this.mS = a.capacity;
        this.scan()
      };
      k["polygonal.ds.IntHashSetIterator"] = nk;
      nk.__name__ = "polygonal.ds.IntHashSetIterator";
      nk.__interfaces__ = [Jg];
      nk.prototype = {
        mObject: null,
        mI: null,
        mS: null,
        mData: null,
        free: function() {
          this.mData = this.mObject = null
        },
        reset: function() {
          this.mData = this.mObject.mData;
          this.mI = 0;
          this.mS = this.mObject.capacity;
          this.scan();
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          var a = this.mData[this.mI++ << 1];
          this.scan();
          return a
        },
        remove: function() {
          throw F.thrown("unsupported operation");
        },
        scan: function() {
          for (; this.mI < this.mS && -2147483648 == this.mData[this.mI << 1];) this.mI++
        },
        __class__: nk
      };
      var Be = function(a, b) {
        null == b && (b = -1);
        this.mTmpKeyBuffer = [];
        this.mIterator = null;
        this.mFree = this.mSize = 0;
        this.reuseIterator = !1;
        this.key = qg.next();
        Ba._assert(0 < a, "slotCount > 0", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashTable.hx",
          lineNumber: 158,
          className: "polygonal.ds.IntHashTable",
          methodName: "new"
        }); - 1 == b && (b = a);
        2 > b && (b = 2);
        this.mMinCapacity = this.capacity = b;
        this.mH = new rg(a, this.capacity);
        this.mVals = Array(this.capacity);
        this.mNext = Array(this.capacity);
        this.mKeys =
          Nb.init(Array(this.capacity), -2147483648, 0, this.capacity);
        a = this.mNext;
        b = 0;
        for (var c = this.capacity - 1; b < c;) {
          var d = b++;
          a[d] = d + 1
        }
        a[this.capacity - 1] = -1
      };
      k["polygonal.ds.IntHashTable"] = Be;
      Be.__name__ = "polygonal.ds.IntHashTable";
      Be.__interfaces__ = [li];
      Be.prototype = {
        key: null,
        capacity: null,
        get_growthRate: function() {
          return this.mH.growthRate
        },
        set_growthRate: function(a) {
          return this.mH.growthRate = a
        },
        reuseIterator: null,
        get_loadFactor: function() {
          return this.mH.get_loadFactor()
        },
        get_slotCount: function() {
          return this.mH.slotCount
        },
        mH: null,
        mVals: null,
        mNext: null,
        mKeys: null,
        mFree: null,
        mSize: null,
        mMinCapacity: null,
        mShrinkSize: null,
        mIterator: null,
        mTmpKeyBuffer: null,
        getCollisionCount: function() {
          return this.mH.getCollisionCount()
        },
        getFront: function(a) {
          var b = this.mH,
            c = 73856093 * a & b.mMask,
            d = b.mHash[c];
          if (-1 == d) a = -2147483648;
          else {
            var e = b.mData;
            if (e[d] == a) a = e[d + 1];
            else {
              var f = -2147483648,
                g = d,
                h = g;
              for (d = e[d + 2]; - 1 != d;) {
                if (e[d] == a) {
                  f = e[d + 1];
                  e[h + 2] = e[d + 2];
                  e[d + 2] = g;
                  b.mHash[c] = d;
                  break
                }
                h = d;
                d = e[h + 2]
              }
              a = f
            }
          }
          return -2147483648 == a ? null : this.mVals[a]
        },
        setIfAbsent: function(a, b) {
          Ba._assert(-2147483648 != a, "key 0x80000000 is reserved(key != IntIntHashTable.KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashTable.hx",
            lineNumber: 212,
            className: "polygonal.ds.IntHashTable",
            methodName: "setIfAbsent"
          });
          this.mSize == this.capacity && this.grow();
          var c = this.mFree,
            d = this.mH;
          Ba._assert(-2147483648 != c, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 291,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "setIfAbsent"
          });
          var e = 73856093 * a & d.mMask,
            f = d.mData,
            g = d.mHash[e];
          if (-1 == g) {
            d.mSize == d.capacity && (d.grow(), f = d.mData);
            var h = 3 * d.mFree;
            d.mFree = d.mNext[d.mFree];
            d.mHash[e] = h;
            f[h] = a;
            f[h + 1] = c;
            d.mSize++;
            d = !0
          } else if (f[g] == a) d = !1;
          else {
            for (e = f[g + 2]; - 1 != e;) {
              if (f[e] == a) {
                g = -1;
                break
              }
              g = e;
              e = f[g + 2]
            } - 1 == g ? d = !1 : (d.mSize == d.capacity && (d.grow(), f = d.mData), h = 3 * d.mFree, d.mFree = d.mNext[d.mFree], f[g + 2] = h, f[h] = a, f[h + 1] = c, d.mSize++, d = !0)
          }
          return d ? (this.mVals[c] =
            b, this.mKeys[c] = a, this.mFree = this.mNext[c], this.mSize++, !0) : !1
        },
        rehash: function(a) {
          this.mH.rehash(a);
          return this
        },
        remap: function(a, b) {
          var c = this.mH,
            d = c.mHash[73856093 * a & c.mMask];
          if (-1 == d) a = -2147483648;
          else if (c = c.mData, c[d] == a) a = c[d + 1];
          else {
            var e = -2147483648;
            for (d = c[d + 2]; - 1 != d;) {
              if (c[d] == a) {
                e = c[d + 1];
                break
              }
              d = c[d + 2]
            }
            a = e
          }
          return -2147483648 != a ? (this.mVals[a] = b, !0) : !1
        },
        toKeyArray: function() {
          return this.mH.toKeyArray()
        },
        toString: function() {
          var a = this;
          var b = "" + M.string(Xa.format("[ IntHashTable size=" + this.mSize +
            " capacity=" + this.capacity + " load=%.2f", [this.get_loadFactor()]));
          if (0 == this.mSize) return b + " ]";
          b += "\n";
          for (var c = 0, d = this.keys(); d.hasNext();) {
            var e = d.next();
            c = Math.max(c, e)
          }
          for (e = 1; 0 != c;) ++e, c = c / 10 | 0;
          c = [];
          var f = "  %- " + e + "d -> %s\n",
            g = [];
          for (d = this.keys(); d.hasNext();) e = d.next(), g.push(e);
          g.sort(function(a, b) {
            return a - b
          });
          e = 1;
          var h = g.length;
          d = 0;
          for (var m = 1; e < h;) {
            if (g[d] == g[e]) ++m;
            else {
              d = g[d];
              c[0] = d;
              if (1 < m) m = [], a.getAll(d, m), c[1] = m.join(",");
              else {
                m = a.mVals;
                var l = a.mH,
                  p = l.mHash[73856093 * d & l.mMask];
                if (-1 == p) d = -2147483648;
                else if (l = l.mData, l[p] == d) d = l[p + 1];
                else {
                  var n = -2147483648;
                  for (p = l[p + 2]; - 1 != p;) {
                    if (l[p] == d) {
                      n = l[p + 1];
                      break
                    }
                    p = l[p + 2]
                  }
                  d = n
                }
                c[1] = M.string(m[d])
              }
              b += M.string(Xa.format(f, c));
              d = e;
              m = 1
            }++e
          }
          d = g[d];
          c[0] = d;
          if (1 < m) m = [], a.getAll(d, m), c[1] = m.join(",");
          else {
            m = a.mVals;
            l = a.mH;
            e = l.mHash[73856093 * d & l.mMask];
            if (-1 == e) a = -2147483648;
            else if (l = l.mData, l[e] == d) a = l[e + 1];
            else {
              n = -2147483648;
              for (e = l[e + 2]; - 1 != e;) {
                if (l[e] == d) {
                  n = l[e + 1];
                  break
                }
                e = l[e + 2]
              }
              a = n
            }
            c[1] = M.string(m[a])
          }
          b += M.string(Xa.format(f, c));
          return b +
            "]"
        },
        has: function(a) {
          for (var b = this.mKeys, c = this.mVals, d = 0, e = this.capacity; d < e;) {
            var f = d++;
            if (-2147483648 != b[f] && c[f] == a) return !0
          }
          return !1
        },
        hasKey: function(a) {
          var b = this.mH,
            c = b.mHash[73856093 * a & b.mMask];
          if (-1 == c) return !1;
          b = b.mData;
          if (b[c] == a) return !0;
          var d = !1;
          for (c = b[c + 2]; - 1 != c;) {
            if (b[c] == a) {
              d = !0;
              break
            }
            c = b[c + 2]
          }
          return d
        },
        count: function(a) {
          return this.mH.count(a)
        },
        get: function(a) {
          var b = this.mH,
            c = b.mHash[73856093 * a & b.mMask];
          if (-1 == c) a = -2147483648;
          else if (b = b.mData, b[c] == a) a = b[c + 1];
          else {
            var d = -2147483648;
            for (c = b[c + 2]; - 1 != c;) {
              if (b[c] == a) {
                d = b[c + 1];
                break
              }
              c = b[c + 2]
            }
            a = d
          }
          return -2147483648 == a ? null : this.mVals[a]
        },
        getAll: function(a, b) {
          var c = this.mH,
            d = c.mHash[73856093 * a & c.mMask];
          if (-1 == d) c = -2147483648;
          else {
            var e = c.mData;
            if (e[d] == a) c = e[d + 1];
            else
              for (c = -2147483648, d = e[d + 2]; - 1 != d;) {
                if (e[d] == a) {
                  c = e[d + 1];
                  break
                }
                d = e[d + 2]
              }
          }
          if (-2147483648 == c) return 0;
          d = this.mTmpKeyBuffer;
          a = this.mH.getAll(a, d);
          c = this.mVals;
          for (e = 0; e < a;) {
            var f = e++;
            b[f] = c[d[f]]
          }
          return a
        },
        set: function(a, b) {
          Ba._assert(-2147483648 != a, "key 0x80000000 is reserved(key != IntIntHashTable.KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashTable.hx",
            lineNumber: 397,
            className: "polygonal.ds.IntHashTable",
            methodName: "set"
          });
          this.mSize == this.capacity && this.grow();
          var c = this.mFree,
            d = this.mH;
          Ba._assert(-2147483648 != c, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 1046,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "set"
          });
          d.mSize == d.capacity && d.grow();
          var e = d.mData,
            f = d.mHash,
            g = 3 * d.mFree;
          d.mFree = d.mNext[d.mFree];
          e[g] = a;
          e[g + 1] = c;
          var h = 73856093 * a & d.mMask,
            m = f[h];
          if (-1 == m) f[h] = g, d.mSize++, d = !0;
          else {
            f = e[m] != a;
            for (h = e[m + 2]; - 1 != h;) e[h] == a && (f = !1), m = h, h = e[h + 2];
            e[m + 2] = g;
            d.mSize++;
            d = f
          }
          this.mVals[c] = b;
          this.mKeys[c] = a;
          this.mFree = this.mNext[c];
          this.mSize++;
          return d
        },
        unset: function(a) {
          var b = this.mH,
            c = b.mHash[73856093 * a & b.mMask];
          if (-1 == c) c = -2147483648;
          else {
            var d =
              b.mData;
            if (d[c] == a) c = d[c + 1];
            else {
              b = -2147483648;
              for (c = d[c + 2]; - 1 != c;) {
                if (d[c] == a) {
                  b = d[c + 1];
                  break
                }
                c = d[c + 2]
              }
              c = b
            }
          }
          if (-2147483648 == c) return !1;
          this.mVals[c] = null;
          this.mKeys[c] = -2147483648;
          this.mNext[c] = this.mFree;
          this.mFree = c;
          b = this.mH;
          var e = 73856093 * a & b.mMask,
            f = b.mHash;
          c = f[e];
          if (-1 != c)
            if (d = b.mData, a == d[c]) f[e] = -1 == d[c + 2] ? -1 : d[c + 2], a = c / 3 | 0, b.mNext[a] = b.mFree, b.mFree = a, d[c + 1] = -2147483648, d[c + 2] = -1, b.mSize--;
            else {
              e = !1;
              f = c;
              for (c = d[c + 2]; - 1 != c;) {
                if (d[c] == a) {
                  e = !0;
                  break
                }
                f = c;
                c = d[f + 2]
              }
              e && (d[f + 2] = d[c + 2], a = c / 3 | 0, b.mNext[a] =
                b.mFree, b.mFree = a, d[c + 1] = -2147483648, d[c + 2] = -1, b.mSize--)
            } this.mSize--;
          return !0
        },
        toValSet: function() {
          for (var a = new mi, b = this.mKeys, c = this.mVals, d = 0, e = this.capacity; d < e;) {
            var f = d++; - 2147483648 != b[f] && a.set(c[f])
          }
          return a
        },
        toKeySet: function() {
          return this.mH.toKeySet()
        },
        keys: function() {
          return this.mH.keys()
        },
        pack: function() {
          this.mH.pack();
          if (this.mH.capacity == this.capacity) return this;
          this.capacity = this.mH.capacity;
          for (var a = this.mNext = Array(this.capacity), b = 0, c = this.capacity - 1; b < c;) {
            var d = b++;
            a[d] =
              d + 1
          }
          a[this.capacity - 1] = -1;
          this.mFree = 0;
          b = this.mKeys;
          a = Array(this.capacity);
          c = this.mVals;
          var e = Array(this.capacity),
            f = this.mFree;
          for (d = this.mH.iterator(); d.hasNext();) {
            var g = d.next();
            a[f] = b[g];
            e[f] = c[g];
            f = this.mNext[f]
          }
          this.mFree = f;
          this.mKeys = a;
          this.mVals = e;
          b = 0;
          for (c = this.mSize; b < c;)
            if (d = b++, f = this.mH, e = a[d], g = f.mHash[73856093 * e & f.mMask], -1 != g)
              if (f = f.mData, f[g] == e) f[g + 1] = d;
              else
                for (g = f[g + 2]; - 1 != g;) {
                  if (f[g] == e) {
                    f[g + 1] = d;
                    break
                  }
                  g = f[g + 2]
                }
          return this
        },
        iter: function(a) {
          Ba._assert(null != a, "f != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashTable.hx",
            lineNumber: 518,
            className: "polygonal.ds.IntHashTable",
            methodName: "iter"
          });
          var b = this.mVals,
            c = this.mH;
          Ba._assert(!0, "f != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 1360,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "iter"
          });
          for (var d = c.mData, e, f = 0, g = c.capacity; f < g;) c = 3 * f++, e = d[c + 1], -2147483648 != e && a(d[c], b[e]);
          return this
        },
        grow: function() {
          var a = this.capacity;
          this.capacity =
            Ig.compute(this.get_growthRate(), this.capacity);
          var b = Array(this.capacity);
          Nb.blit(this.mNext, 0, b, 0, a);
          this.mNext = b;
          b = Array(this.capacity);
          Nb.blit(this.mKeys, 0, b, 0, a);
          b = this.mKeys = b;
          for (var c = a, d = this.capacity; c < d;) {
            var e = c++;
            b[e] = -2147483648
          }
          b = this.mNext;
          c = a - 1;
          for (d = this.capacity - 1; c < d;) e = c++, b[e] = e + 1;
          b[this.capacity - 1] = -1;
          this.mFree = a;
          b = Array(this.capacity);
          Nb.blit(this.mVals, 0, b, 0, a);
          this.mVals = b
        },
        get_size: function() {
          return this.mSize
        },
        free: function() {
          Nb.nullify(this.mVals);
          this.mNext = this.mKeys =
            this.mVals = null;
          this.mH.free();
          this.mH = null;
          null != this.mIterator && (this.mIterator.free(), this.mIterator = null);
          this.mTmpKeyBuffer = null
        },
        contains: function(a) {
          return this.has(a)
        },
        remove: function(a) {
          for (var b = this.mTmpKeyBuffer, c = 0, d = this.mKeys, e = this.mVals, f, g = 0, h = this.capacity; g < h;) {
            var m = g++;
            f = d[m]; - 2147483648 != f && e[m] == a && (b[c++] = f)
          }
          g = 0;
          for (h = c; g < h;) m = g++, this.unset(b[m]);
          return 0 < c
        },
        clear: function(a) {
          null == a && (a = !1);
          this.mH.clear(a);
          Nb.init(this.mKeys, -2147483648, 0, this.capacity);
          a = this.mNext;
          for (var b =
              0, c = this.capacity - 1; b < c;) {
            var d = b++;
            a[d] = d + 1
          }
          a[this.capacity - 1] = -1;
          this.mSize = this.mFree = 0
        },
        iterator: function() {
          return this.reuseIterator ? (null == this.mIterator ? this.mIterator = new ok(this) : this.mIterator.reset(), this.mIterator) : new ok(this)
        },
        isEmpty: function() {
          return 0 == this.mSize
        },
        toArray: function() {
          if (0 == this.mSize) return [];
          var a = this.mSize;
          Ba._assert(0 <= a, "len >= 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 37,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "alloc"
          });
          a = Array(a);
          for (var b = 0, c = this.mKeys, d = this.mVals, e = 0, f = this.capacity; e < f;) {
            var g = e++; - 2147483648 != c[g] && (a[b++] = d[g])
          }
          return a
        },
        clone: function(a, b) {
          null == a && (a = !0);
          var c = new Be(this.mH.slotCount, this.mSize);
          c.mH = this.mH.clone(!1);
          c.mSize = this.mSize;
          c.mFree = this.mFree;
          var d = this.mVals,
            e = c.mVals;
          if (a) Nb.blit(d, 0, e, 0, this.mSize);
          else if (a = this.mKeys, null != b)
            for (var f = 0, g = this.mSize; f < g;) {
              var h = f++; - 2147483648 != a[h] && (e[h] = b(d[h]))
            } else
              for (f =
                0, g = this.mSize; f < g;) h = f++, -2147483648 != a[h] && (Ba._assert(K.__implements(d[h], pg), "element is not of type Cloneable(Std.isOfType(src.get(i), Cloneable))", {
                fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashTable.hx",
                lineNumber: 727,
                className: "polygonal.ds.IntHashTable",
                methodName: "clone"
              }), e[h] = K.__cast(d[h], pg).clone());
          Nb.blit(this.mKeys, 0, c.mKeys, 0, this.mSize);
          Nb.blit(this.mNext, 0, c.mNext, 0, this.mSize);
          return c
        },
        __class__: Be,
        __properties__: {
          get_size: "get_size",
          get_slotCount: "get_slotCount",
          get_loadFactor: "get_loadFactor",
          set_growthRate: "set_growthRate",
          get_growthRate: "get_growthRate"
        }
      };
      var ok = function(a) {
        this.mObject = a;
        this.reset()
      };
      k["polygonal.ds.IntHashTableIterator"] = ok;
      ok.__name__ = "polygonal.ds.IntHashTableIterator";
      ok.__interfaces__ = [Jg];
      ok.prototype = {
        mObject: null,
        mVals: null,
        mKeys: null,
        mI: null,
        mS: null,
        free: function() {
          this.mKeys = this.mVals = this.mObject = null
        },
        reset: function() {
          this.mVals = this.mObject.mVals;
          this.mKeys = this.mObject.mKeys;
          this.mS = this.mObject.mH.capacity;
          for (this.mI = 0; this.mI < this.mS && -2147483648 == this.mKeys[this.mI];) this.mI++;
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          for (var a = this.mVals[this.mI]; ++this.mI < this.mS && -2147483648 == this.mKeys[this.mI];);
          return a
        },
        remove: function() {
          throw F.thrown("unsupported operation");
        },
        __class__: ok
      };
      var rg = function(a, b) {
        null == b && (b = -1);
        this.mTmpBufferSize = 16;
        this.mFree = this.mSize = 0;
        this.reuseIterator = !1;
        this.growthRate = -3;
        this.key = qg.next();
        Ba._assert(0 < a, "slotCount > 0", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
          lineNumber: 156,
          className: "polygonal.ds.IntIntHashTable",
          methodName: "new"
        });
        Ba._assert(0 < a && 0 == (a & a - 1), "slotCount is not a power of 2(MathTools.isPow2(slotCount))", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
          lineNumber: 157,
          className: "polygonal.ds.IntIntHashTable",
          methodName: "new"
        }); - 1 == b ? b = a : (Ba._assert(2 <= b, "minimum capacity is 2(initialCapacity >= 2)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
          lineNumber: 163,
          className: "polygonal.ds.IntIntHashTable",
          methodName: "new"
        }), Ba._assert(0 < a && 0 == (a & a - 1), "capacity is not a power of 2(MathTools.isPow2(slotCount))", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
          lineNumber: 164,
          className: "polygonal.ds.IntIntHashTable",
          methodName: "new"
        }));
        this.mMinCapacity = this.capacity = b;
        this.slotCount = a;
        this.mMask = a - 1;
        this.mHash = Nb.init(Array(a), -1);
        this.mData = Array(3 * this.capacity);
        this.mNext = Array(this.capacity);
        var c = 2;
        a = this.mData;
        b = 0;
        for (var d = this.capacity; b < d;) b++, a[c - 1] = -2147483648, a[c] = -1, c += 3;
        a = this.mNext;
        b = 0;
        for (d = this.capacity - 1; b < d;) c = b++, a[c] = c + 1;
        a[this.capacity - 1] = -1;
        this.mTmpBuffer = Array(this.mTmpBufferSize)
      };
      k["polygonal.ds.IntIntHashTable"] = rg;
      rg.__name__ =
        "polygonal.ds.IntIntHashTable";
      rg.__interfaces__ = [li];
      rg.prototype = {
        key: null,
        capacity: null,
        growthRate: null,
        reuseIterator: null,
        get_loadFactor: function() {
          return this.mSize / this.slotCount
        },
        slotCount: null,
        mHash: null,
        mData: null,
        mNext: null,
        mMask: null,
        mFree: null,
        mSize: null,
        mMinCapacity: null,
        mIterator: null,
        mTmpBuffer: null,
        mTmpBufferSize: null,
        getCollisionCount: function() {
          for (var a = 0, b, c = this.mData, d = this.mHash, e = 0, f = this.slotCount; e < f;)
            if (b = e++, b = d[b], -1 != b)
              for (b = c[b + 2]; - 1 != b;) b = c[b + 2], ++a;
          return a
        },
        getFront: function(a) {
          var b =
            73856093 * a & this.mMask,
            c = this.mHash[b];
          if (-1 == c) return -2147483648;
          var d = this.mData;
          if (d[c] == a) return d[c + 1];
          var e = -2147483648,
            f = c,
            g = f;
          for (c = d[c + 2]; - 1 != c;) {
            if (d[c] == a) {
              e = d[c + 1];
              d[g + 2] = d[c + 2];
              d[c + 2] = f;
              this.mHash[b] = c;
              break
            }
            g = c;
            c = d[g + 2]
          }
          return e
        },
        setIfAbsent: function(a, b) {
          Ba._assert(-2147483648 != b, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 291,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "setIfAbsent"
          });
          var c = 73856093 * a & this.mMask,
            d = this.mData,
            e = this.mHash[c];
          if (-1 == e) {
            this.mSize == this.capacity && (this.grow(), d = this.mData);
            var f = 3 * this.mFree;
            this.mFree = this.mNext[this.mFree];
            this.mHash[c] = f;
            d[f] = a;
            d[f + 1] = b;
            this.mSize++;
            return !0
          }
          if (d[e] == a) return !1;
          for (c = d[e + 2]; - 1 != c;) {
            if (d[c] == a) {
              e = -1;
              break
            }
            e = c;
            c = d[e + 2]
          }
          if (-1 == e) return !1;
          this.mSize == this.capacity && (this.grow(), d = this.mData);
          f = 3 * this.mFree;
          this.mFree = this.mNext[this.mFree];
          d[e + 2] =
            f;
          d[f] = a;
          d[f + 1] = b;
          this.mSize++;
          return !0
        },
        rehash: function(a) {
          Ba._assert(0 < a && 0 == (a & a - 1), "slotCount is not a power of 2(MathTools.isPow2(slotCount))", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 403,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "rehash"
          });
          if (this.slotCount == a) return this;
          for (var b = new rg(a, this.capacity), c = this.mData, d = 0, e = this.capacity; d < e;) {
            var f = d++,
              g = c[3 * f +
                1];
            if (-2147483648 != g) {
              var h = c[3 * f];
              Ba._assert(-2147483648 != g, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
                fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
                lineNumber: 1046,
                className: "polygonal.ds.IntIntHashTable",
                methodName: "set"
              });
              b.mSize == b.capacity && b.grow();
              f = b.mData;
              var m = b.mHash,
                l = 3 * b.mFree;
              b.mFree = b.mNext[b.mFree];
              f[l] = h;
              f[l + 1] = g;
              h = 73856093 * h & b.mMask;
              g = m[h];
              if (-1 == g) m[h] = l;
              else {
                for (m = f[g +
                    2]; - 1 != m;) g = m, m = f[m + 2];
                f[g + 2] = l
              }
              b.mSize++
            }
          }
          this.mHash = b.mHash;
          this.mData = b.mData;
          this.mNext = b.mNext;
          this.slotCount = a;
          this.mMask = b.mMask;
          this.mFree = b.mFree;
          return this
        },
        remap: function(a, b) {
          var c = this.mHash[73856093 * a & this.mMask];
          if (-1 == c) return !1;
          var d = this.mData;
          if (d[c] == a) return d[c + 1] = b, !0;
          for (c = d[c + 2]; - 1 != c;) {
            if (d[c] == a) {
              d[c + 1] = b;
              break
            }
            c = d[c + 2]
          }
          return -1 != c
        },
        extract: function(a) {
          var b = 73856093 * a & this.mMask,
            c = this.mHash,
            d = c[b];
          if (-1 == d) return -2147483648;
          var e = this.mData;
          if (a == e[d]) {
            var f = e[d + 1];
            c[b] = -1 == e[d + 2] ? -1 : e[d + 2];
            a = d / 3 | 0;
            this.mNext[a] = this.mFree;
            this.mFree = a;
            e[d + 1] = -2147483648;
            e[d + 2] = -1;
            this.mSize--;
            return f
          }
          b = d;
          d = e[d + 2];
          for (f = -2147483648; - 1 != d;) {
            if (e[d] == a) {
              f = e[d + 1];
              break
            }
            b = d;
            d = e[b + 2]
          }
          return -2147483648 != f ? (e[b + 2] = e[d + 2], a = d / 3 | 0, this.mNext[a] = this.mFree, this.mFree = a, e[d + 1] = -2147483648, e[d + 2] = -1, this.mSize--, f) : -2147483648
        },
        toKeyArray: function() {
          if (0 == this.mSize) return [];
          var a = this.mSize;
          Ba._assert(0 <= a, "len >= 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 37,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "alloc"
          });
          a = Array(a);
          for (var b = 0, c = this.mData, d = 0, e = this.capacity; d < e;) {
            var f = d++; - 2147483648 != c[3 * f + 1] && (a[b++] = c[3 * f])
          }
          return a
        },
        toString: function() {
          var a = "" + M.string(Xa.format("[ IntIntHashTable size=" + this.mSize + " capacity=" + this.capacity + " load=%.2f", [this.get_loadFactor()]));
          if (0 == this.mSize) return a + " ]";
          a += "\n";
          for (var b = 0, c = this.keys(); c.hasNext();) {
            var d = c.next();
            b = Math.max(b, d)
          }
          for (d = 1; 0 != b;) ++d, b = b / 10 | 0;
          b = [];
          var e = "  %- " +
            d + "d -> %s\n",
            f = [];
          for (c = this.keys(); c.hasNext();) d = c.next(), f.push(d);
          f.sort(function(a, b) {
            return a - b
          });
          d = 1;
          var g = f.length;
          c = 0;
          for (var h = 1; d < g;) {
            if (f[c] == f[d]) ++h;
            else {
              c = f[c];
              b[0] = c;
              if (1 < h) h = [], this.getAll(c, h), b[1] = h.join(",");
              else {
                h = this.mHash[73856093 * c & this.mMask];
                if (-1 == h) c = -2147483648;
                else {
                  var m = this.mData;
                  if (m[h] == c) c = m[h + 1];
                  else {
                    var l = -2147483648;
                    for (h = m[h + 2]; - 1 != h;) {
                      if (m[h] == c) {
                        l = m[h + 1];
                        break
                      }
                      h = m[h + 2]
                    }
                    c = l
                  }
                }
                b[1] = c
              }
              a += M.string(Xa.format(e, b));
              c = d;
              h = 1
            }++d
          }
          c = f[c];
          b[0] = c;
          if (1 < h) h = [], this.getAll(c,
            h), b[1] = h.join(",");
          else {
            d = this.mHash[73856093 * c & this.mMask];
            if (-1 == d) h = -2147483648;
            else if (m = this.mData, m[d] == c) h = m[d + 1];
            else {
              l = -2147483648;
              for (d = m[d + 2]; - 1 != d;) {
                if (m[d] == c) {
                  l = m[d + 1];
                  break
                }
                d = m[d + 2]
              }
              h = l
            }
            b[1] = h
          }
          a += M.string(Xa.format(e, b));
          return a + "]"
        },
        has: function(a) {
          Ba._assert(-2147483648 != a, "val 0x80000000 is reserved(val != VAL_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 697,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "has"
          });
          for (var b = !1, c = this.mData, d = 0, e = this.capacity; d < e;) {
            var f = d++;
            if (c[3 * f + 1] == a) {
              b = !0;
              break
            }
          }
          return b
        },
        hasKey: function(a) {
          var b = this.mHash[73856093 * a & this.mMask];
          if (-1 == b) return !1;
          var c = this.mData;
          if (c[b] == a) return !0;
          var d = !1;
          for (b = c[b + 2]; - 1 != b;) {
            if (c[b] == a) {
              d = !0;
              break
            }
            b = c[b + 2]
          }
          return d
        },
        count: function(a) {
          var b = 0,
            c = this.mHash[73856093 * a & this.mMask];
          if (-1 != c)
            for (var d = this.mData; - 1 != c;) d[c] == a && ++b, c = d[c + 2];
          return b
        },
        get: function(a) {
          var b = this.mHash[73856093 *
            a & this.mMask];
          if (-1 == b) return -2147483648;
          var c = this.mData;
          if (c[b] == a) return c[b + 1];
          var d = -2147483648;
          for (b = c[b + 2]; - 1 != b;) {
            if (c[b] == a) {
              d = c[b + 1];
              break
            }
            b = c[b + 2]
          }
          return d
        },
        getAll: function(a, b) {
          var c = this.mHash[73856093 * a & this.mMask];
          if (-1 == c) return 0;
          var d = 0,
            e = this.mData;
          e[c] == a && (b[d++] = e[c + 1]);
          for (c = e[c + 2]; - 1 != c;) e[c] == a && (b[d++] = e[c + 1]), c = e[c + 2];
          return d
        },
        hasPair: function(a, b) {
          Ba._assert(-2147483648 != b, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 891,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "hasPair"
          });
          var c = this.mHash[73856093 * a & this.mMask];
          if (-1 != c) {
            var d = this.mData;
            if (d[c] == a && d[c + 1] == b) return !0;
            for (c = d[c + 2]; - 1 != c;) {
              if (d[c] == a && d[c + 1] == b) return !0;
              c = d[c + 2]
            }
          }
          return !1
        },
        unsetPair: function(a, b) {
          Ba._assert(-2147483648 != b, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 939,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "unsetPair"
          });
          var c = 73856093 * a & this.mMask,
            d = this.mHash,
            e = d[c];
          if (-1 == e) return !1;
          var f = this.mData;
          if (a == f[e] && b == f[e + 1]) return d[c] = -1 == f[e + 2] ? -1 : f[e + 2], a = e / 3 | 0, this.mNext[a] = this.mFree, this.mFree = a, f[e + 1] = -2147483648, f[e + 2] = -1, this.mSize--, !0;
          c = !1;
          d = e;
          for (e = f[e + 2]; - 1 != e;) {
            if (f[e] == a && f[e + 1] == b) {
              c = !0;
              break
            }
            d = e;
            e = f[d + 2]
          }
          return c ? (f[d + 2] = f[e + 2], a = e / 3 | 0, this.mNext[a] = this.mFree, this.mFree = a, f[e + 1] = -2147483648, f[e + 2] = -1, --this.mSize, !0) : !1
        },
        set: function(a,
          b) {
          Ba._assert(-2147483648 != b, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 1046,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "set"
          });
          this.mSize == this.capacity && this.grow();
          var c = this.mData,
            d = this.mHash,
            e = 3 * this.mFree;
          this.mFree = this.mNext[this.mFree];
          c[e] = a;
          c[e + 1] = b;
          var f = 73856093 * a & this.mMask;
          b = d[f];
          if (-1 == b) return d[f] = e, this.mSize++,
            !0;
          d = c[b] != a;
          for (f = c[b + 2]; - 1 != f;) c[f] == a && (d = !1), b = f, f = c[f + 2];
          c[b + 2] = e;
          this.mSize++;
          return d
        },
        unset: function(a) {
          var b = 73856093 * a & this.mMask,
            c = this.mHash,
            d = c[b];
          if (-1 == d) return !1;
          var e = this.mData;
          if (a == e[d]) return c[b] = -1 == e[d + 2] ? -1 : e[d + 2], a = d / 3 | 0, this.mNext[a] = this.mFree, this.mFree = a, e[d + 1] = -2147483648, e[d + 2] = -1, this.mSize--, !0;
          b = !1;
          c = d;
          for (d = e[d + 2]; - 1 != d;) {
            if (e[d] == a) {
              b = !0;
              break
            }
            c = d;
            d = e[c + 2]
          }
          return b ? (e[c + 2] = e[d + 2], a = d / 3 | 0, this.mNext[a] = this.mFree, this.mFree = a, e[d + 1] = -2147483648, e[d + 2] = -1, this.mSize--,
            !0) : !1
        },
        toValSet: function() {
          for (var a = new Kg(this.capacity), b = this.mData, c = 0, d = this.capacity; c < d;) {
            var e = c++;
            e = b[3 * e + 1];
            if (-2147483648 != e) {
              Ba._assert(-2147483648 != e, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
                fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
                lineNumber: 521,
                className: "polygonal.ds.IntHashSet",
                methodName: "set"
              });
              var f = 73856093 * e & a.mMask,
                g = a.mData,
                h = a.mHash[f];
              if (-1 == h) a.mSize == a.capacity &&
                (a.grow(), g = a.mData), h = a.mFree << 1, a.mFree = a.mNext[a.mFree], a.mHash[f] = h, g[h] = e, a.mSize++;
              else if (g[h] != e) {
                for (f = g[h + 1]; - 1 != f;) {
                  if (g[f] == e) {
                    h = -1;
                    break
                  }
                  h = f;
                  f = g[f + 1]
                } - 1 != h && (a.mSize == a.capacity && (a.grow(), g = a.mData), f = a.mFree << 1, a.mFree = a.mNext[a.mFree], g[f] = e, g[h + 1] = f, a.mSize++)
              }
            }
          }
          return a
        },
        toKeySet: function() {
          for (var a = new Kg(this.capacity), b = this.mData, c = 0, d = this.capacity; c < d;) {
            var e = c++;
            if (-2147483648 != b[3 * e + 1]) {
              e = b[3 * e];
              Ba._assert(-2147483648 != e, "value 0x80000000 is reserved(val != VAL_ABSENT)", {
                fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntHashSet.hx",
                lineNumber: 521,
                className: "polygonal.ds.IntHashSet",
                methodName: "set"
              });
              var f = 73856093 * e & a.mMask,
                g = a.mData,
                h = a.mHash[f];
              if (-1 == h) a.mSize == a.capacity && (a.grow(), g = a.mData), h = a.mFree << 1, a.mFree = a.mNext[a.mFree], a.mHash[f] = h, g[h] = e, a.mSize++;
              else if (g[h] != e) {
                for (f = g[h + 1]; - 1 != f;) {
                  if (g[f] == e) {
                    h = -1;
                    break
                  }
                  h = f;
                  f = g[f + 1]
                } - 1 != h && (a.mSize == a.capacity && (a.grow(), g = a.mData),
                  f = a.mFree << 1, a.mFree = a.mNext[a.mFree], g[f] = e, g[h + 1] = f, a.mSize++)
              }
            }
          }
          return a
        },
        keys: function() {
          return new zn(this)
        },
        pack: function() {
          if (this.capacity == this.mMinCapacity) return this;
          var a = this.mSize,
            b = this.mMinCapacity;
          this.capacity = a > b ? a : b;
          var c = this.mData,
            d = 0,
            e = this.mHash,
            f = Array(3 * this.capacity),
            g = 2;
          a = 0;
          for (b = this.capacity; a < b;) a++, f[g - 1] = -2147483648, f[g] = -1, g += 3;
          a = 0;
          for (b = this.slotCount; a < b;) {
            var h = a++;
            g = e[h];
            if (-1 != g)
              for (e[h] = d, f[d] = c[g], f[d + 1] = c[g + 1], f[d + 2] = -1, d += 3, g = c[g + 2]; - 1 != g;) f[d - 1] = d, f[d] =
                c[g], f[d + 1] = c[g + 1], f[d + 2] = -1, d += 3, g = c[g + 2]
          }
          this.mData = f;
          c = this.mNext = Array(this.capacity);
          a = 0;
          for (b = this.capacity - 1; a < b;) h = a++, c[h] = h + 1;
          this.mFree = c[this.capacity - 1] = -1;
          return this
        },
        iter: function(a) {
          Ba._assert(null != a, "f != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 1360,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "iter"
          });
          for (var b = this.mData, c, d, e = 0, f = this.capacity; e <
            f;) c = 3 * e++, d = b[c + 1], -2147483648 != d && a(b[c], d);
          return this
        },
        hashCode: function(a) {
          return 73856093 * a & this.mMask
        },
        grow: function() {
          var a = this.capacity;
          this.capacity = Ig.compute(this.growthRate, this.capacity);
          var b = Array(this.capacity);
          Nb.blit(this.mNext, 0, b, 0, a);
          this.mNext = b;
          b = Array(3 * this.capacity);
          Nb.blit(this.mData, 0, b, 0, 3 * a);
          this.mData = b;
          b = this.mNext;
          for (var c = a - 1, d = this.capacity - 1; c < d;) {
            var e = c++;
            b[e] = e + 1
          }
          b[this.capacity - 1] = -1;
          this.mFree = a;
          e = 3 * a + 2;
          b = this.mData;
          c = 0;
          for (d = this.capacity - a; c < d;) c++, b[e -
            1] = -2147483648, b[e] = -1, e += 3
        },
        get_size: function() {
          return this.mSize
        },
        free: function() {
          this.mNext = this.mData = this.mHash = null;
          null != this.mIterator && (this.mIterator.free(), this.mIterator = null);
          this.mTmpBuffer = null
        },
        contains: function(a) {
          return this.has(a)
        },
        remove: function(a) {
          Ba._assert(-2147483648 != a, "val 0x80000000 is reserved(val != KEY_ABSENT)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/IntIntHashTable.hx",
            lineNumber: 1465,
            className: "polygonal.ds.IntIntHashTable",
            methodName: "remove"
          });
          for (var b = 0, c = this.mTmpBuffer, d = this.mTmpBufferSize, e = this.mData, f, g = 0, h = this.capacity; g < h;) f = g++, f *= 3, e[f + 1] == a && (b == d && (this.mTmpBufferSize = d <<= 1, c = Array(d), Nb.blit(this.mTmpBuffer, 0, c, 0, b), this.mTmpBuffer = c), c[b++] = e[f]);
          g = 0;
          for (h = b; g < h;) {
            f = g++;
            d = c[f];
            f = 73856093 * d & this.mMask;
            var m = this.mHash;
            a = m[f];
            if (-1 != a)
              if (e = this.mData, d == e[a]) m[f] = -1 == e[a + 2] ? -1 : e[a + 2], f = a / 3 | 0, this.mNext[f] = this.mFree, this.mFree = f, e[a + 1] = -2147483648, e[a + 2] = -1, this.mSize--;
              else {
                f = !1;
                m = a;
                for (a = e[a + 2]; - 1 != a;) {
                  if (e[a] == d) {
                    f = !0;
                    break
                  }
                  m = a;
                  a = e[m + 2]
                }
                f && (e[m + 2] = e[a + 2], d = a / 3 | 0, this.mNext[d] = this.mFree, this.mFree = d, e[a + 1] = -2147483648, e[a + 2] = -1, this.mSize--)
              }
          }
          return 0 < b
        },
        clear: function(a) {
          var b = this.mHash;
          a = 0;
          for (var c = this.slotCount; a < c;) {
            var d = a++;
            b[d] = -1
          }
          d = 2;
          b = this.mData;
          a = 0;
          for (c = this.capacity; a < c;) a++, b[d - 1] = -2147483648, b[d] = -1, d += 3;
          b = this.mNext;
          a = 0;
          for (c = this.capacity - 1; a < c;) d = a++, b[d] = d + 1;
          b[this.capacity - 1] = -1;
          this.mSize = this.mFree = 0
        },
        iterator: function() {
          return this.reuseIterator ?
            (null == this.mIterator ? this.mIterator = new pk(this) : this.mIterator.reset(), this.mIterator) : new pk(this)
        },
        isEmpty: function() {
          return 0 == this.mSize
        },
        toArray: function() {
          if (0 == this.mSize) return [];
          var a = this.mSize;
          Ba._assert(0 <= a, "len >= 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 37,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "alloc"
          });
          a = Array(a);
          for (var b = 0, c, d = this.mData, e =
              0, f = this.capacity; e < f;) c = e++, c = d[3 * c + 1], -2147483648 != c && (a[b++] = c);
          return a
        },
        clone: function(a, b) {
          a = new rg(this.slotCount, this.capacity);
          Nb.blit(this.mHash, 0, a.mHash, 0, this.slotCount);
          Nb.blit(this.mData, 0, a.mData, 0, 3 * this.capacity);
          Nb.blit(this.mNext, 0, a.mNext, 0, this.capacity);
          a.mMask = this.mMask;
          a.slotCount = this.slotCount;
          a.capacity = this.capacity;
          a.mFree = this.mFree;
          a.mSize = this.mSize;
          return a
        },
        __class__: rg,
        __properties__: {
          get_size: "get_size",
          get_loadFactor: "get_loadFactor"
        }
      };
      var pk = function(a) {
        this.mObject =
          a;
        this.mData = a.mData;
        this.mI = 0;
        this.mS = a.capacity;
        this.scan()
      };
      k["polygonal.ds.IntIntHashTableValIterator"] = pk;
      pk.__name__ = "polygonal.ds.IntIntHashTableValIterator";
      pk.__interfaces__ = [Jg];
      pk.prototype = {
        mObject: null,
        mI: null,
        mS: null,
        mData: null,
        free: function() {
          this.mData = this.mObject = null
        },
        reset: function() {
          this.mData = this.mObject.mData;
          this.mI = 0;
          this.mS = this.mObject.capacity;
          this.scan();
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          var a = this.mData[3 * this.mI++ + 1];
          this.scan();
          return a
        },
        remove: function() {
          throw F.thrown("unsupported operation");
        },
        scan: function() {
          for (; this.mI < this.mS && -2147483648 == this.mData[3 * this.mI + 1];) this.mI++
        },
        __class__: pk
      };
      var zn = function(a) {
        this.mObject = a;
        this.mData = a.mData;
        this.mI = 0;
        this.mS = a.capacity;
        this.scan()
      };
      k["polygonal.ds.IntIntHashTableKeyIterator"] = zn;
      zn.__name__ = "polygonal.ds.IntIntHashTableKeyIterator";
      zn.__interfaces__ = [Jg];
      zn.prototype = {
        mObject: null,
        mI: null,
        mS: null,
        mData: null,
        free: function() {
          this.mData = this.mObject = null
        },
        reset: function() {
          this.mData =
            this.mObject.mData;
          this.mI = 0;
          this.mS = this.mObject.capacity;
          this.scan();
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          var a = this.mData[3 * this.mI++];
          this.scan();
          return a
        },
        remove: function() {
          throw F.thrown("unsupported operation");
        },
        scan: function() {
          for (; this.mI < this.mS && -2147483648 == this.mData[3 * this.mI + 1];) this.mI++
        },
        __class__: zn
      };
      var mi = function(a, b) {
        null == a && (a = 16);
        this.mIterator = null;
        this.mSize = 0;
        this.reuseIterator = !1;
        this.growthRate = -2;
        this.key = qg.next();
        this.capacity = this.mInitialCapacity =
          1 > a ? 1 : a;
        null != b && (this.capacity = b.length);
        this.mData = Array(this.capacity);
        if (null != b)
          for (a = 0; a < b.length;) {
            var c = b[a];
            ++a;
            this.set(c)
          }
      };
      k["polygonal.ds.ListSet"] = mi;
      mi.__name__ = "polygonal.ds.ListSet";
      mi.__interfaces__ = [jj];
      mi.prototype = {
        key: null,
        capacity: null,
        growthRate: null,
        reuseIterator: null,
        mData: null,
        mInitialCapacity: null,
        mSize: null,
        mIterator: null,
        reserve: function(a) {
          a > this.capacity && (this.capacity = a, this.resizeContainer(a));
          return this
        },
        pack: function() {
          if (this.capacity > this.mInitialCapacity) {
            var a =
              this.mInitialCapacity,
              b = this.mSize;
            this.capacity = a > b ? a : b;
            this.resizeContainer(this.capacity)
          } else {
            a = this.mData;
            b = this.mSize;
            for (var c = this.capacity; b < c;) {
              var d = b++;
              a[d] = null
            }
          }
          return this
        },
        iter: function(a) {
          Ba._assert(null != a, "f != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/ListSet.hx",
            lineNumber: 136,
            className: "polygonal.ds.ListSet",
            methodName: "iter"
          });
          for (var b = this.mData, c = 0, d = this.mSize; c < d;) {
            var e = c++;
            a(b[e])
          }
          return this
        },
        toString: function() {
          var a = "" + M.string("[ ListSet size=" + this.mSize);
          if (this.isEmpty()) return a + " ]";
          a += "\n";
          for (var b = 0, c = this.mSize; b < c;) {
            var d = b++;
            a += "  ";
            a += M.string(M.string(this.mData[d]));
            a += "\n"
          }
          return a + "]"
        },
        has: function(a) {
          if (this.isEmpty()) return !1;
          for (var b = this.mData, c = 0, d = this.mSize; c < d;) {
            var e = c++;
            if (b[e] == a) return !0
          }
          return !1
        },
        set: function(a) {
          for (var b = this.mData, c = 0, d = this.mSize; c < d;) {
            var e = c++;
            if (b[e] == a) return !1
          }
          this.mSize == this.capacity && (this.grow(), b = this.mData);
          b[this.mSize++] = a;
          return !0
        },
        unset: function(a) {
          return this.remove(a)
        },
        merge: function(a, b, c) {
          if (b)
            for (a = a.iterator(); a.hasNext();) b = a.next(), this.set(b);
          else if (null != c)
            for (a = a.iterator(); a.hasNext();) b = a.next(), this.set(c(b));
          else
            for (a = a.iterator(); a.hasNext();) b = a.next(), Ba._assert(K.__implements(b, pg), "element is not of type Cloneable(Std.isOfType(val, Cloneable))", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/ListSet.hx",
              lineNumber: 230,
              className: "polygonal.ds.ListSet",
              methodName: "merge"
            }), this.set(K.__cast(b, pg).clone())
        },
        get_size: function() {
          return this.mSize
        },
        free: function() {
          Nb.nullify(this.mData);
          this.mData = null;
          null != this.mIterator && (this.mIterator.free(), this.mIterator = null)
        },
        contains: function(a) {
          return this.has(a)
        },
        remove: function(a) {
          for (var b = this.mData, c = 0, d = this.mSize; c < d;) {
            var e = c++;
            if (b[e] == a) return b[e] = this.mData[--this.mSize], !0
          }
          return !1
        },
        clear: function(a) {
          null == a && (a = !1);
          a && Nb.nullify(this.mData);
          this.mSize =
            0
        },
        iterator: function() {
          if (this.reuseIterator) {
            if (null == this.mIterator) this.mIterator = new qk(this);
            else {
              var a = this.mIterator;
              a.mData = a.mObject.mData;
              a.mS = a.mObject.mSize;
              a.mI = 0
            }
            return this.mIterator
          }
          return new qk(this)
        },
        isEmpty: function() {
          return 0 == this.mSize
        },
        toArray: function() {
          return Nb.toArray(this.mData, 0, this.mSize, [])
        },
        clone: function(a, b) {
          null == a && (a = !0);
          var c = new mi;
          c.capacity = this.mSize;
          c.mSize = this.mSize;
          c.mData = Array(this.mSize);
          var d = this.mData,
            e = c.mData;
          if (a) Nb.blit(d, 0, e, 0, this.mSize);
          else if (null == b) {
            a = 0;
            for (var f = this.mSize; a < f;) {
              var g = a++;
              Ba._assert(K.__implements(d[g], pg), "element is not of type Cloneable(Std.isOfType(src.get(i), Cloneable))", {
                fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/ListSet.hx",
                lineNumber: 359,
                className: "polygonal.ds.ListSet",
                methodName: "clone"
              });
              e[g] = K.__cast(d[g], pg).clone()
            }
          } else
            for (a = 0, f = this.mSize; a < f;) g = a++, e[g] = b(d[g]);
          return c
        },
        grow: function() {
          this.capacity = Ig.compute(this.growthRate,
            this.capacity);
          this.resizeContainer(this.capacity)
        },
        resizeContainer: function(a) {
          a = Array(a);
          Nb.blit(this.mData, 0, a, 0, this.mSize);
          this.mData = a
        },
        __class__: mi,
        __properties__: {
          get_size: "get_size"
        }
      };
      var qk = function(a) {
        this.mObject = a;
        this.mData = this.mObject.mData;
        this.mS = this.mObject.mSize;
        this.mI = 0
      };
      k["polygonal.ds.ListSetIterator"] = qk;
      qk.__name__ = "polygonal.ds.ListSetIterator";
      qk.__interfaces__ = [Jg];
      qk.prototype = {
        mObject: null,
        mData: null,
        mI: null,
        mS: null,
        free: function() {
          this.mData = this.mObject = null
        },
        reset: function() {
          this.mData =
            this.mObject.mData;
          this.mS = this.mObject.mSize;
          this.mI = 0;
          return this
        },
        hasNext: function() {
          return this.mI < this.mS
        },
        next: function() {
          return this.mData[this.mI++]
        },
        remove: function() {
          Ba._assert(0 < this.mI, "call next() before removing an element(mI > 0)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/ListSet.hx",
            lineNumber: 430,
            className: "polygonal.ds.ListSetIterator",
            methodName: "remove"
          });
          this.mData[this.mI] = this.mData[--this.mS]
        },
        __class__: qk
      };
      var Xa = function() {};
      k["polygonal.ds.Printf"] = Xa;
      Xa.__name__ = "polygonal.ds.Printf";
      Xa.init = function() {
        var a = Array(40);
        Xa._padChars = a;
        Xa._padChars[0] = W.rpad("", "0", 0);
        Xa._padChars[1] = W.rpad("", "0", 1);
        Xa._padChars[2] = W.rpad("", "0", 2);
        Xa._padChars[3] = W.rpad("", "0", 3);
        Xa._padChars[4] = W.rpad("", "0", 4);
        Xa._padChars[5] = W.rpad("", "0", 5);
        Xa._padChars[6] = W.rpad("", "0", 6);
        Xa._padChars[7] = W.rpad("", "0", 7);
        Xa._padChars[8] = W.rpad("", "0", 8);
        Xa._padChars[9] = W.rpad("", "0", 9);
        Xa._padChars[10] = W.rpad("",
          "0", 10);
        Xa._padChars[11] = W.rpad("", "0", 11);
        Xa._padChars[12] = W.rpad("", "0", 12);
        Xa._padChars[13] = W.rpad("", "0", 13);
        Xa._padChars[14] = W.rpad("", "0", 14);
        Xa._padChars[15] = W.rpad("", "0", 15);
        Xa._padChars[16] = W.rpad("", "0", 16);
        Xa._padChars[17] = W.rpad("", "0", 17);
        Xa._padChars[18] = W.rpad("", "0", 18);
        Xa._padChars[19] = W.rpad("", "0", 19);
        for (a = 0; 20 > a;) {
          var b = a++;
          Xa._padChars[b + 20] = W.rpad("", " ", b)
        }
        a = Array(64);
        Xa._tmp = a
      };
      Xa.format = function(a, b) {
        Xa._initialized || (Xa._initialized = !0, Xa.init());
        var c = new Qa,
          d = 0,
          e = [],
          f = 0;
        for (a = Xa.tokenize(a, e); f < a;) {
          var g = f++,
            h = e[g];
          switch (h._hx_index) {
            case 0:
              g = h.string;
              c.b += null == g ? "null" : "" + g;
              break;
            case 1:
              g = h.type;
              h = h.args;
              if (null == h.width) {
                if (!K.__instanceof(b[d], rc)) throw F.thrown(new gh("invalid 'width' argument"));
                h.width = b[d++]
              }
              if (null == h.precision) {
                if (!K.__instanceof(b[d], rc)) throw F.thrown(new gh("invalid 'precision' argument"));
                h.precision = b[d++]
              }
              if (-1 < h.pos) {
                if (h.pos > b.length - 1) throw F.thrown(new gh("argument index out of range"));
                var m = b[h.pos]
              } else m = b[d++];
              null ==
                m && (m = "null");
              switch (g._hx_index) {
                case 0:
                  switch (g.type._hx_index) {
                    case 0:
                      Xa.formatCharacter(m, h, c);
                      break;
                    case 1:
                      Xa.formatSignedDecimal(m, h, c);
                      break;
                    case 2:
                      Xa.formatUnsignedDecimal(m, h, c);
                      break;
                    case 3:
                      Xa.formatOctal(m, h, c);
                      break;
                    case 4:
                      Xa.formatHexadecimal(m, h, c);
                      break;
                    case 5:
                      Xa.formatBinary(m, h, c)
                  }
                  break;
                case 1:
                  switch (g.floatType._hx_index) {
                    case 0:
                      Xa.formatFloat(m, h, c);
                      break;
                    case 1:
                      Xa.formatScientific(m, h, c);
                      break;
                    case 2:
                      Xa.formatNaturalFloat(m, h, c)
                  }
                  break;
                case 2:
                  Xa.formatString(m, h, c);
                  break;
                case 3:
                  throw F.thrown(new gh("specifier 'p' is not supported"));
                case 4:
                  throw F.thrown(new gh("specifier 'n' is not supported"));
              }
              break;
            case 2:
              g = h.name;
              if (!Object.prototype.hasOwnProperty.call(b[0], g)) throw F.thrown(new gh('no field named "' + g + '" found'));
              c.b += M.string(M.string(Y.field(b[0], g)));
              ++d;
              break;
            case 3:
              throw F.thrown(new gh("Invalid format specifier."));
          }
        }
        return c.b
      };
      Xa.tokenize = function(a, b) {
        for (var c = 0, d, e = 0, f = new Qa, g = a.length; c < g;)
          if (d = a.charCodeAt(c++), 37 == d)
            if (d = a.charCodeAt(c++), 37 == d) f.b += String.fromCodePoint(d);
            else {
              0 < f.b.length && (b[e++] = Lg.Raw(f.b),
                f = new Qa);
              if (40 == d)
                if (d = a.indexOf(")", c), -1 == d) d = Lg.Unknown("named parameter", c);
                else {
                  var h = da.substr(a, c, d - c);
                  c = d + 1;
                  d = Lg.Property(h)
                }
              else {
                h = 0;
                null == h && (h = 0);
                h = new np(h, -1, -1, -1);
                a: for (; 32 <= d && 48 >= d;) switch (d) {
                  case 32:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.Space._hx_index;
                    break;
                  case 35:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.Sharp._hx_index;
                    break;
                  case 43:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.Plus._hx_index;
                    break;
                  case 45:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.Minus._hx_index;
                    break;
                  case 48:
                    d = a.charCodeAt(c++);
                    h.flags |=
                      1 << Va.Zero._hx_index;
                    break;
                  default:
                    break a
                }
                0 != (h.flags & 1 << Va.Minus._hx_index) && 0 != (h.flags & 1 << Va.Zero._hx_index) && (h.flags &= -1 - (1 << Va.Zero._hx_index));
                0 != (h.flags & 1 << Va.Space._hx_index) && 0 != (h.flags & 1 << Va.Plus._hx_index) && (h.flags &= -1 - (1 << Va.Space._hx_index));
                if (42 == d) h.width = null, d = a.charCodeAt(c++);
                else if (48 <= d && 57 >= d) {
                  for (var m = 0; 48 <= d && 57 >= d;) m = d - 48 + 10 * m, d = a.charCodeAt(c++);
                  h.width = m;
                  if (36 == d)
                    if (h.pos = m - 1, h.width = -1, d = a.charCodeAt(c++), 42 == d) h.width = null, d = a.charCodeAt(c++);
                    else if (48 <= d && 57 >=
                    d) {
                    for (m = 0; 48 <= d && 57 >= d;) m = d - 48 + 10 * m, d = a.charCodeAt(c++);
                    h.width = m
                  }
                }
                if (46 == d)
                  if (d = a.charCodeAt(c++), 42 == d) h.precision = null, d = a.charCodeAt(c++);
                  else {
                    m = 0;
                    if (48 <= d && 57 >= d)
                      for (; 48 <= d && 57 >= d;) m = d - 48 + 10 * m, d = a.charCodeAt(c++);
                    h.precision = m
                  } a: for (; 76 <= d && 108 >= d;) switch (d) {
                  case 76:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.LengthUpperCaseL._hx_index;
                    break;
                  case 104:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.LengthH._hx_index;
                    break;
                  case 108:
                    d = a.charCodeAt(c++);
                    h.flags |= 1 << Va.LengthLowerCaseL._hx_index;
                    break;
                  default:
                    break a
                }
                if (69 <=
                  d && 120 >= d) {
                  switch (d) {
                    case 69:
                      h.flags |= 1 << Va.UpperCase._hx_index;
                      m = ue.FmtFloat(ni.FScientific);
                      break;
                    case 71:
                      h.flags |= 1 << Va.UpperCase._hx_index;
                      m = ue.FmtFloat(ni.FNatural);
                      break;
                    case 88:
                      h.flags |= 1 << Va.UpperCase._hx_index;
                      m = ue.FmtInt(Bf.IHex);
                      break;
                    case 98:
                      m = ue.FmtInt(Bf.IBin);
                      break;
                    case 99:
                      m = ue.FmtInt(Bf.ICharacter);
                      break;
                    case 100:
                      m = ue.FmtInt(Bf.ISignedDecimal);
                      break;
                    case 101:
                      m = ue.FmtFloat(ni.FScientific);
                      break;
                    case 102:
                      m = ue.FmtFloat(ni.FNormal);
                      break;
                    case 103:
                      m = ue.FmtFloat(ni.FNatural);
                      break;
                    case 105:
                      m =
                        ue.FmtInt(Bf.ISignedDecimal);
                      break;
                    case 110:
                      m = ue.FmtNothing;
                      break;
                    case 111:
                      m = ue.FmtInt(Bf.IOctal);
                      break;
                    case 112:
                      m = ue.FmtPointer;
                      break;
                    case 115:
                      m = ue.FmtString;
                      break;
                    case 117:
                      m = ue.FmtInt(Bf.IUnsignedDecimal);
                      break;
                    case 120:
                      m = ue.FmtInt(Bf.IHex);
                      break;
                    default:
                      m = null
                  }
                  d = null == m ? Lg.Unknown(String.fromCodePoint(d), c) : Lg.Tag(m, h)
                } else d = Lg.Unknown(String.fromCodePoint(d), c)
              }
              b[e++] = d
            }
        else f.b += String.fromCodePoint(d);
        0 < f.b.length && (b[e++] = Lg.Raw(f.b));
        return e
      };
      Xa.formatBinary = function(a, b, c) {
        var d = b.flags,
          e = b.precision;
        b = b.width;
        0 != (d & 1 << Va.LengthH._hx_index) && (a &= 65535);
        if (0 == a) {
          if (0 == e) return;
          d &= -1 - (1 << Va.Sharp._hx_index)
        } - 1 == e && (e = 1);
        for (var f = Xa._tmp, g = 0; f[g++] = a & 1, a >>>= 1, 0 < a;);
        a = g;
        if (0 != (d & 1 << Va.Minus._hx_index)) {
          0 != (d & 1 << Va.Sharp._hx_index) && (c.b += "0b");
          if (e > g)
            for (var h = 0, m = e - g; h < m;) h++, c.b += "0";
          for (; - 1 < --a;) c.b += String.fromCodePoint(48 + f[a]);
          0 != (d & 1 << Va.Sharp._hx_index) && (b -= 2);
          e > g && (g = e);
          if (b > g)
            for (h = 0, m = b - g; h < m;) h++, c.b += " "
        } else {
          m = g;
          e > m && (m = e);
          0 != (d & 1 << Va.Sharp._hx_index) && (b -= 2);
          if (b > m)
            if (0 !=
              (d & 1 << Va.Zero._hx_index) && 1 == e)
              for (h = 0, m = b - m; h < m;) h++, c.b += "0";
            else
              for (h = 0, m = b - m; h < m;) h++, c.b += " ";
          0 != (d & 1 << Va.Sharp._hx_index) && (c.b += "0b");
          if (e > g)
            for (h = 0, m = e - g; h < m;) h++, c.b += "0";
          for (; - 1 < --a;) c.b += String.fromCodePoint(48 + f[a])
        }
      };
      Xa.formatOctal = function(a, b, c) {
        var d = b.flags,
          e = b.precision;
        b = b.width;
        0 != (d & 1 << Va.LengthH._hx_index) && (a &= 65535);
        if (0 == a) {
          if (0 == e) {
            c.b += M.string(0 != (d & 1 << Va.Sharp._hx_index) ? "0" : "");
            return
          }
          d &= -1 - (1 << Va.Sharp._hx_index)
        }
        for (var f = Xa._tmp, g = 0; f[g++] = a & 7, a >>>= 3, 0 < a;);
        a = g; - 1 !=
          e ? 0 != (d & 1 << Va.Zero._hx_index) && (d &= -1 - (1 << Va.Zero._hx_index), d |= 1 << Va.Space._hx_index) : e = 1;
        if (0 != (d & 1 << Va.Minus._hx_index)) {
          0 != (d & 1 << Va.Sharp._hx_index) && (c.b += "0", ++g);
          if (e > g)
            for (var h = 0, m = e - g; h < m;) h++, c.b += "0";
          for (; - 1 < --a;) d = String.fromCodePoint(48 + f[a]), c.b += M.string(d);
          e > g && (g = e);
          if (b > g)
            for (h = 0, m = b - g; h < m;) h++, c.b += " "
        } else {
          0 != (d & 1 << Va.Sharp._hx_index) && ++g;
          m = g;
          e > m && (m = e);
          if (b > m)
            if (0 != (d & 1 << Va.Zero._hx_index))
              for (h = 0, m = b - m; h < m;) h++, c.b += "0";
            else
              for (h = 0, m = b - m; h < m;) h++, c.b += " ";
          0 != (d & 1 << Va.Sharp._hx_index) &&
            (c.b += "0");
          if (e > g)
            for (h = 0, m = e - g; h < m;) h++, c.b += "0";
          for (; - 1 < --a;) d = String.fromCodePoint(48 + f[a]), c.b += M.string(d)
        }
      };
      Xa.formatHexadecimal = function(a, b, c) {
        var d = b.flags,
          e = b.precision;
        b = b.width;
        0 != (d & 1 << Va.LengthH._hx_index) && (a &= 65535);
        if (0 == a) {
          if (0 == e) return;
          d &= -1 - (1 << Va.Sharp._hx_index)
        } - 1 == e && (e = 1);
        for (var f = Xa._tmp, g = 0; f[g++] = a & 15, a >>>= 4, 0 < a;);
        a = g;
        if (0 != (d & 1 << Va.Minus._hx_index)) {
          0 != (d & 1 << Va.Sharp._hx_index) && (c.b = 0 != (d & 1 << Va.UpperCase._hx_index) ? c.b + "0X" : c.b + "0x");
          if (e > g)
            for (var h = 0, m = e - g; h < m;) h++,
              c.b += "0";
          for (h = 0 != (d & 1 << Va.UpperCase._hx_index) ? 65 : 97; - 1 < --a;) m = f[a], 10 > m ? (m = String.fromCodePoint(48 + m), c.b += M.string(m)) : (m = String.fromCodePoint(h + (m - 10)), c.b += M.string(m));
          0 != (d & 1 << Va.Sharp._hx_index) && (b -= 2);
          e > g && (g = e);
          if (b > g)
            for (h = 0, m = b - g; h < m;) h++, c.b += " "
        } else {
          m = g;
          e > m && (m = e);
          0 != (d & 1 << Va.Sharp._hx_index) && (b -= 2);
          if (b > m)
            if (0 != (d & 1 << Va.Zero._hx_index) && 1 == e)
              for (h = 0, m = b - m; h < m;) h++, c.b += "0";
            else
              for (h = 0, m = b - m; h < m;) h++, c.b += " ";
          0 != (d & 1 << Va.Sharp._hx_index) && (c.b = 0 != (d & 1 << Va.UpperCase._hx_index) ? c.b +
            "0X" : c.b + "0x");
          if (e > g)
            for (h = 0, m = e - g; h < m;) h++, c.b += "0";
          for (h = 0 != (d & 1 << Va.UpperCase._hx_index) ? 65 : 97; - 1 < --a;) m = f[a], 10 > m ? (m = String.fromCodePoint(48 + m), c.b += M.string(m)) : (m = String.fromCodePoint(h + (m - 10)), c.b += M.string(m))
        }
      };
      Xa.formatSignedDecimal = function(a, b, c) {
        var d = b.flags,
          e = b.precision;
        b = b.width;
        if (0 != e || 0 != a) {
          0 != (d & 1 << Va.LengthH._hx_index) && (a &= 65535);
          var f = M.string(0 > a ? -a : a),
            g = f.length;
          a = 0 > a ? "-" : 0 != (d & 1 << Va.Plus._hx_index) ? "+" : 0 != (d & 1 << Va.Space._hx_index) ? " " : null;
          var h = null != a;
          if (0 != (d & 1 << Va.Minus._hx_index)) {
            h &&
              (c.b += null == a ? "null" : "" + a);
            if (e > g)
              for (var m = 0, l = e - g; m < l;) m++, c.b += "0";
            c.b += M.string(f);
            e > g && (g = e);
            g += h ? 1 : 0;
            if (b > g)
              for (m = 0, l = b - g; m < l;) m++, c.b += " "
          } else {
            l = g + (h ? 1 : 0);
            e > l && (l = e);
            if (b > l)
              if (0 != (d & 1 << Va.Zero._hx_index))
                for (h && (c.b += null == a ? "null" : "" + a), m = 0, l = b - l; m < l;) m++, c.b += "0";
              else
                for (m = 0, l = b - l; m < l;) m++, c.b += " ";
            h && 0 == (d & 1 << Va.Zero._hx_index) && (c.b += null == a ? "null" : "" + a);
            if (e > g)
              for (m = 0, l = e - g; m < l;) m++, c.b += "0";
            c.b += M.string(f)
          }
        }
      };
      Xa.formatUnsignedDecimal = function(a, b, c) {
        if (0 <= a) Xa.formatSignedDecimal(a,
          b, c);
        else {
          a = new ab(0, a);
          a = sr.toString(a);
          var d = a.length,
            e = b.flags,
            f = b.precision;
          b = b.width;
          if (0 != (e & 1 << Va.Minus._hx_index)) {
            if (f > d) {
              e = 0;
              for (var g = f - d; e < g;) e++, c.b += "0"
            }
            c.b += null == a ? "null" : "" + a;
            f > d && (d = f);
            if (b > d)
              for (e = 0, g = b - d; e < g;) e++, c.b += " "
          } else {
            g = d;
            f > g && (g = f);
            if (b > g)
              if (0 != (e & 1 << Va.Zero._hx_index))
                for (e = 0, g = b - g; e < g;) e++, c.b += "0";
              else
                for (e = 0, g = b - g; e < g;) e++, c.b += " ";
            if (f > d)
              for (e = 0, g = f - d; e < g;) e++, c.b += "0";
            c.b += null == a ? "null" : "" + a
          }
        }
      };
      Xa.formatNaturalFloat = function(a, b, c) {
        var d = new Qa;
        Xa.formatFloat(a,
          b, d);
        var e = d.b;
        d = new Qa;
        Xa.formatScientific(a, b, d);
        a = d.b;
        e = e.length <= a.length ? e : a;
        c.b += null == e ? "null" : "" + e
      };
      Xa.formatScientific = function(a, b, c) {
        var d = b.flags,
          e = b.precision; - 1 == e && (e = Xa.DEFAULT_PRECISION);
        var f, g = "";
        if (0 == a) {
          var h = f = 0;
          g += "0";
          if (0 < e) {
            g += ".";
            for (var m = 0, l = e; m < l;) m++, g += "0"
          }
        } else m = Math, f = 0 < a ? 1 : 0 > a ? -1 : 0, a = m.abs(a), h = m.floor(Math.log(a) / 2.302585092994046), a /= m.pow(10, h), m = m.pow(.1, e), a = Math.round(a / m) * m;
        0 != a && (g += da.substr(null == a ? "null" : "" + a, 0, e + 2));
        g += 0 != (d & 1 << Va.UpperCase._hx_index) ?
          "E" : "e";
        g += 0 <= h ? "+" : "-";
        a = M.string(0 > h ? -h : h);
        l = Xa.DEFAULT_NUM_EXP_DIGITS - a.length;
        if (1 > l) m = a;
        else {
          if (30 < l)
            for (e = h = "0", m = 0, --l; m < l;) m++, e += h;
          else e = Xa._padChars[l];
          m = e + a
        }
        g += m;
        (a = -1 == f || 0 != (d & 1 << Va.Plus._hx_index) || 0 != (d & 1 << Va.Space._hx_index)) && 0 == (d & 1 << Va.Zero._hx_index) && (g = (-1 == f ? "-" : 0 != (d & 1 << Va.Plus._hx_index) ? "+" : " ") + g);
        if (0 < b.width && (m = b.width, a && 0 != (d & 1 << Va.Zero._hx_index) && --m, b = 0 != (d & 1 << Va.Zero._hx_index) ? 0 : 20, l = m - g.length, 1 <= l)) {
          if (30 < l)
            for (e = h = 0 == b ? "0" : " ", m = 0, --l; m < l;) m++, e += h;
          else e =
            Xa._padChars[b + l];
          g = e + g
        }
        a && 0 != (d & 1 << Va.Zero._hx_index) && (g = (-1 == f ? "-" : 0 != (d & 1 << Va.Plus._hx_index) ? "+" : " ") + g);
        c.b += null == g ? "null" : "" + g
      };
      Xa.formatFloat = function(a, b, c) {
        var d = b.flags,
          e = b.precision; - 1 == e && (e = Xa.DEFAULT_PRECISION);
        b = b.width;
        var f = 0 > a;
        0 == e ? (a = M.string(Math.round(a)), 0 != (d & 1 << Va.Sharp._hx_index) && (a += ".")) : a = a.toFixed(e);
        var g = a.length;
        f && -1 < a.indexOf("-") && (a = da.substr(a, 1, null));
        e = null;
        0 == (d & 1 << Va.Plus._hx_index) || f ? 0 != (d & 1 << Va.Space._hx_index) ? (e = " ", ++g) : f && (e = "-") : (e = "+", ++g);
        f = null !=
          e;
        if (0 != (d & 1 << Va.Minus._hx_index)) {
          if (f && (c.b += null == e ? "null" : "" + e), c.b += null == a ? "null" : "" + a, b > g)
            for (d = 0, b -= g; d < b;) d++, c.b += " "
        } else {
          if (b > g)
            if (0 != (d & 1 << Va.Zero._hx_index))
              for (f && (c.b += null == e ? "null" : "" + e, f = !1), d = 0, b -= g; d < b;) d++, c.b += "0";
            else
              for (d = 0, b -= g; d < b;) d++, c.b += " ";
          f && (c.b += null == e ? "null" : "" + e);
          c.b += null == a ? "null" : "" + a
        }
      };
      Xa.formatCharacter = function(a, b, c) {
        if (0 != (b.flags & 1 << Va.Minus._hx_index)) {
          a = String.fromCodePoint(a);
          c.b += M.string(a);
          var d = 0;
          for (b = b.width - 1; d < b;) d++, c.b += " "
        } else {
          d = 0;
          for (b =
            b.width - 1; d < b;) d++, c.b += " ";
          a = String.fromCodePoint(a);
          c.b += M.string(a)
        }
      };
      Xa.formatString = function(a, b, c) {
        var d = a.length,
          e = b.precision;
        if (0 != (b.flags & 1 << Va.Minus._hx_index)) {
          -1 != e ? (c.b += null == e ? da.substr(a, 0, null) : da.substr(a, 0, e), d = e) : c.b += null == a ? "null" : "" + a;
          var f = 0;
          for (b = b.width - d; f < b;) f++, c.b += " "
        } else {
          -1 != e && (d = e);
          f = 0;
          for (b = b.width - d; f < b;) f++, c.b += " ";
          c.b = -1 != e ? c.b + (null == e ? da.substr(a, 0, null) : da.substr(a, 0, e)) : c.b + (null == a ? "null" : "" + a)
        }
      };
      Xa.pad = function(a, b, c, d) {
        b -= a.length;
        if (1 > b) return a;
        if (30 <
          b) {
          var e = 0 == c ? "0" : " ";
          c = e;
          var f = 0;
          for (--b; f < b;) f++, c += e
        } else c = Xa._padChars[c + b];
        return 0 < d ? a + c : c + a
      };
      var gh = function(a) {
        this.message = a
      };
      k["polygonal.ds.PrintfError"] = gh;
      gh.__name__ = "polygonal.ds.PrintfError";
      gh.prototype = {
        message: null,
        toString: function() {
          return this.message
        },
        __class__: gh
      };
      var np = function(a, b, c, d) {
        this.flags = a;
        this.pos = b;
        this.width = c;
        this.precision = d
      };
      k["polygonal.ds._Printf.FormatArgs"] = np;
      np.__name__ = "polygonal.ds._Printf.FormatArgs";
      np.prototype = {
        flags: null,
        pos: null,
        width: null,
        precision: null,
        __class__: np
      };
      var Va = O["polygonal.ds._Printf.FormatFlag"] = {
        __ename__: "polygonal.ds._Printf.FormatFlag",
        __constructs__: null,
        Minus: {
          _hx_name: "Minus",
          _hx_index: 0,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        Plus: {
          _hx_name: "Plus",
          _hx_index: 1,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        Space: {
          _hx_name: "Space",
          _hx_index: 2,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        Sharp: {
          _hx_name: "Sharp",
          _hx_index: 3,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        Zero: {
          _hx_name: "Zero",
          _hx_index: 4,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        LengthH: {
          _hx_name: "LengthH",
          _hx_index: 5,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        LengthUpperCaseL: {
          _hx_name: "LengthUpperCaseL",
          _hx_index: 6,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        LengthLowerCaseL: {
          _hx_name: "LengthLowerCaseL",
          _hx_index: 7,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        },
        UpperCase: {
          _hx_name: "UpperCase",
          _hx_index: 8,
          __enum__: "polygonal.ds._Printf.FormatFlag",
          toString: v
        }
      };
      Va.__constructs__ = [Va.Minus, Va.Plus, Va.Space, Va.Sharp, Va.Zero, Va.LengthH, Va.LengthUpperCaseL, Va.LengthLowerCaseL, Va.UpperCase];
      var Lg = O["polygonal.ds._Printf.FormatToken"] = {
        __ename__: "polygonal.ds._Printf.FormatToken",
        __constructs__: null,
        Raw: (w = function(a) {
          return {
            _hx_index: 0,
            string: a,
            __enum__: "polygonal.ds._Printf.FormatToken",
            toString: v
          }
        }, w._hx_name = "Raw", w.__params__ = ["string"], w),
        Tag: (w = function(a, b) {
          return {
            _hx_index: 1,
            type: a,
            args: b,
            __enum__: "polygonal.ds._Printf.FormatToken",
            toString: v
          }
        }, w._hx_name = "Tag", w.__params__ = ["type", "args"], w),
        Property: (w = function(a) {
          return {
            _hx_index: 2,
            name: a,
            __enum__: "polygonal.ds._Printf.FormatToken",
            toString: v
          }
        }, w._hx_name = "Property", w.__params__ = ["name"], w),
        Unknown: (w = function(a, b) {
          return {
            _hx_index: 3,
            string: a,
            pos: b,
            __enum__: "polygonal.ds._Printf.FormatToken",
            toString: v
          }
        }, w._hx_name = "Unknown", w.__params__ = ["string", "pos"], w)
      };
      Lg.__constructs__ = [Lg.Raw, Lg.Tag, Lg.Property, Lg.Unknown];
      var ue = O["polygonal.ds._Printf.FormatDataType"] = {
        __ename__: "polygonal.ds._Printf.FormatDataType",
        __constructs__: null,
        FmtInt: (w = function(a) {
          return {
            _hx_index: 0,
            type: a,
            __enum__: "polygonal.ds._Printf.FormatDataType",
            toString: v
          }
        }, w._hx_name = "FmtInt", w.__params__ = ["type"], w),
        FmtFloat: (w = function(a) {
          return {
            _hx_index: 1,
            floatType: a,
            __enum__: "polygonal.ds._Printf.FormatDataType",
            toString: v
          }
        }, w._hx_name = "FmtFloat", w.__params__ = ["floatType"], w),
        FmtString: {
          _hx_name: "FmtString",
          _hx_index: 2,
          __enum__: "polygonal.ds._Printf.FormatDataType",
          toString: v
        },
        FmtPointer: {
          _hx_name: "FmtPointer",
          _hx_index: 3,
          __enum__: "polygonal.ds._Printf.FormatDataType",
          toString: v
        },
        FmtNothing: {
          _hx_name: "FmtNothing",
          _hx_index: 4,
          __enum__: "polygonal.ds._Printf.FormatDataType",
          toString: v
        }
      };
      ue.__constructs__ = [ue.FmtInt, ue.FmtFloat, ue.FmtString, ue.FmtPointer, ue.FmtNothing];
      var Bf = O["polygonal.ds._Printf.IntType"] = {
        __ename__: "polygonal.ds._Printf.IntType",
        __constructs__: null,
        ICharacter: {
          _hx_name: "ICharacter",
          _hx_index: 0,
          __enum__: "polygonal.ds._Printf.IntType",
          toString: v
        },
        ISignedDecimal: {
          _hx_name: "ISignedDecimal",
          _hx_index: 1,
          __enum__: "polygonal.ds._Printf.IntType",
          toString: v
        },
        IUnsignedDecimal: {
          _hx_name: "IUnsignedDecimal",
          _hx_index: 2,
          __enum__: "polygonal.ds._Printf.IntType",
          toString: v
        },
        IOctal: {
          _hx_name: "IOctal",
          _hx_index: 3,
          __enum__: "polygonal.ds._Printf.IntType",
          toString: v
        },
        IHex: {
          _hx_name: "IHex",
          _hx_index: 4,
          __enum__: "polygonal.ds._Printf.IntType",
          toString: v
        },
        IBin: {
          _hx_name: "IBin",
          _hx_index: 5,
          __enum__: "polygonal.ds._Printf.IntType",
          toString: v
        }
      };
      Bf.__constructs__ = [Bf.ICharacter, Bf.ISignedDecimal, Bf.IUnsignedDecimal, Bf.IOctal, Bf.IHex, Bf.IBin];
      var ni = O["polygonal.ds._Printf.FloatType"] = {
        __ename__: "polygonal.ds._Printf.FloatType",
        __constructs__: null,
        FNormal: {
          _hx_name: "FNormal",
          _hx_index: 0,
          __enum__: "polygonal.ds._Printf.FloatType",
          toString: v
        },
        FScientific: {
          _hx_name: "FScientific",
          _hx_index: 1,
          __enum__: "polygonal.ds._Printf.FloatType",
          toString: v
        },
        FNatural: {
          _hx_name: "FNatural",
          _hx_index: 2,
          __enum__: "polygonal.ds._Printf.FloatType",
          toString: v
        }
      };
      ni.__constructs__ = [ni.FNormal, ni.FScientific, ni.FNatural];
      var Xd = function() {};
      k["polygonal.ds.tools.ArrayTools"] = Xd;
      Xd.__name__ = "polygonal.ds.tools.ArrayTools";
      Xd.alloc = function(a) {
        Ba._assert(0 <= a, "len >= 0", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 37,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "alloc"
        });
        return Array(a)
      };
      Xd.trim = function(a, b) {
        a.length > b && (a.length = b);
        return a
      };
      Xd.swap = function(a, b, c) {
        Ba._assert(null != a, "array != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 94,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "swap"
        });
        Ba._assert(0 <= b && b < a.length, "0 <= a && a < array.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 95,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "swap"
        });
        Ba._assert(0 <= c && c < a.length, "0 <= b && b < array.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 96,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "swap"
        });
        if (b != c) {
          var d = a[b];
          a[b] = a[c];
          a[c] = d
        }
      };
      Xd.getFront = function(a, b) {
        Ba._assert(null != a, "array != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 113,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "getFront"
        });
        Ba._assert(0 <= b && b < a.length, "0 <= index && index < array.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 114,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "getFront"
        });
        Ba._assert(null != a, "array != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 94,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "swap"
        });
        Ba._assert(0 <= b && b < a.length, "0 <= a && a < array.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 95,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "swap"
        });
        Ba._assert(0 < a.length, "0 <= b && b < array.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 96,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "swap"
        });
        if (0 != b) {
          var c = a[b];
          a[b] = a[0];
          a[0] = c
        }
        return a[0]
      };
      Xd.init = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        d = 0 >= d ? a.length : c + d;
        Ba._assert(0 <= c && c < a.length,
          "min >= 0 && min < a.length", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 129,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "init"
          });
        for (Ba._assert(d <= a.length, "max <= a.length", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 130,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "init"
          }); c < d;) a[c++] = b;
        return a
      };
      Xd.blit = function(a, b, c, d, e) {
        if (0 < e)
          if (Ba._assert(b < a.length, "srcPos out of range(srcPos < src.length)", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
              lineNumber: 145,
              className: "polygonal.ds.tools.ArrayTools",
              methodName: "blit"
            }), Ba._assert(d < c.length, "dstPos out of range(dstPos < dst.length)", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
              lineNumber: 146,
              className: "polygonal.ds.tools.ArrayTools",
              methodName: "blit"
            }), Ba._assert(b + e <= a.length && d + e <= c.length, "n out of range(srcPos + n <= src.length && dstPos + n <= dst.length)", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
              lineNumber: 147,
              className: "polygonal.ds.tools.ArrayTools",
              methodName: "blit"
            }), a == c)
            if (b < d) {
              var f = b + e;
              b = d + e;
              for (var g = 0; g < e;) g++, --f, --b, a[b] = a[f]
            } else {
              if (b > d)
                for (f =
                  b, b = d, g = 0; g < e;) g++, a[b] = a[f], ++f, ++b
            }
        else if (0 == b && 0 == d)
          for (g = 0; g < e;) f = g++, c[f] = a[f];
        else if (0 == b)
          for (g = 0; g < e;) f = g++, c[d + f] = a[f];
        else if (0 == d)
          for (g = 0; g < e;) f = g++, c[f] = a[b + f];
        else
          for (g = 0; g < e;) f = g++, c[d + f] = a[b + f]
      };
      Xd.iter = function(a, b, c) {
        null == c && (c = 0);
        0 == c && (c = a.length);
        for (var d = 0; d < c;) {
          var e = d++;
          b(a[e])
        }
      };
      Xd.forEach = function(a, b) {
        for (var c = 0, d = a.length; c < d;) {
          var e = c++;
          a[e] = b(a[e], e)
        }
      };
      Xd.binarySearchCmp = function(a, b, c, d, e) {
        Ba._assert(null != a, "a != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 236,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp"
        });
        Ba._assert(null != e, "comparator != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 237,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp"
        });
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < a.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 238,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp"
        });
        Ba._assert(d < a.length, "max < a.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 239,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp"
        });
        for (var f, g = d + 1; c < g;) f = c + (g - c >> 1), 0 > e(a[f], b) ? c = f + 1 : g = f;
        return c <= d && 0 == e(a[c], b) ? c : ~c
      };
      Xd.binarySearchf = function(a, b, c, d) {
        Ba._assert(null !=
          a, "a != null", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 265,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "binarySearchf"
          });
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < a.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 266,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchf"
        });
        Ba._assert(d < a.length, "max < a.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 267,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchf"
        });
        for (var e, f = d + 1; c < f;) e = c + (f - c >> 1), a[e] < b ? c = e + 1 : f = e;
        return c <= d && a[c] == b ? c : ~c
      };
      Xd.binarySearchi = function(a, b, c, d) {
        Ba._assert(null != a, "a != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 293,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchi"
        });
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < a.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 294,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchi"
        });
        Ba._assert(d < a.length, "max < a.length", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 295,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchi"
        });
        for (var e, f = d + 1; c < f;) e = c + (f - c >> 1), a[e] < b ? c = e + 1 : f = e;
        return c <= d && a[c] == b ? c : ~c
      };
      Xd.shuffle = function(a, b) {
        Ba._assert(null != a, "a != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 320,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "shuffle"
        });
        var c = a.length;
        if (null == b)
          for (; 1 < --c;) {
            var d = oi.f() *
              c | 0,
              e = a[c];
            a[c] = a[d];
            a[d] = e
          } else {
            Ba._assert(b.length >= a.length, "insufficient random values(rvals.length >= a.length)", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
              lineNumber: 335,
              className: "polygonal.ds.tools.ArrayTools",
              methodName: "shuffle"
            });
            for (var f = 0; 1 < --c;) d = b[f++] * c | 0, e = a[c], a[c] = a[d], a[d] = e
          }
      };
      Xd.random = function(a) {
        var b = a.length;
        return 2 > b ? a[0] : a[oi.f() * b | 0]
      };
      Xd.sortRange = function(a, b,
        c, d, e) {
        var f = a.length;
        if (1 < f)
          if (Ba._assert(0 <= d && d <= f - 1 && d + e <= f, "first out of range(first >= 0 && first <= k - 1 && first + n <= k)", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
              lineNumber: 370,
              className: "polygonal.ds.tools.ArrayTools",
              methodName: "sortRange"
            }), Ba._assert(0 <= e && e <= f, "n out of range(n >= 0 && n <= k)", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
              lineNumber: 371,
              className: "polygonal.ds.tools.ArrayTools",
              methodName: "sortRange"
            }), c)
            for (c = d + 1, e = d + e; c < e;) {
              var g = c++;
              for (f = a[g]; g > d;) {
                var h = a[g - 1];
                if (0 < b(h, f)) a[g] = h, --g;
                else break
              }
              a[g] = f
            } else Xd._quickSort(a, d, e, b)
      };
      Xd.quickPerm = function(a) {
        for (var b = [], c = [], d = [], e, f, g = 0; g < a;) c[g] = g + 1, d[g] = 0, ++g;
        b.push(c.slice());
        for (g = 1; g < a;) d[g] < g ? (e = g % 2 * d[g], f = c[e], c[e] = c[g], c[g] = f, b.push(c.slice()), d[g]++, g = 1) : (d[g] = 0, ++g);
        return b
      };
      Xd.equals = function(a, b, c) {
        if (a.length != b.length) return !1;
        for (var d = 0, e = a.length; d <
          e;) {
          if (!c(a[d], b[d])) return !1;
          ++d
        }
        return !0
      };
      Xd.split = function(a, b, c) {
        Ba._assert(0 == b % c, "n is not a multiple of k(n % k == 0)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 464,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "split"
        });
        for (var d = [], e = null, f = 0; f < b;) {
          var g = f++;
          0 == g % c && (e = [], d[g / c | 0] = e);
          e.push(a[g])
        }
        return d
      };
      Xd.pairwise = function(a, b, c) {
        var d = 0;
        for (Ba._assert(0 == (c &
            1), "max & 1 == 0", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
            lineNumber: 489,
            className: "polygonal.ds.tools.ArrayTools",
            methodName: "pairwise"
          }); d < c;) b(d, a[d], a[d + 1]), d += 2
      };
      Xd.bruteforce = function(a, b) {
        for (var c = 0, d, e = a.length, f = e - 1, g; c < f;) {
          g = a[c];
          for (d = c + 1; d < e;) b(g, a[d]), ++d;
          ++c
        }
      };
      Xd._quickSort = function(a, b, c, d) {
        var e = b + c - 1,
          f = b,
          g = e;
        if (1 < c) {
          var h = b + (c >> 1);
          c = b + c - 1;
          var m = a[b],
            l = a[h],
            p = a[c],
            n = d(m,
              p);
          h = 0 > n && 0 > d(m, l) ? 0 > d(l, p) ? h : c : 0 > d(l, m) && 0 > d(l, p) ? 0 > n ? b : c : 0 > d(p, m) ? h : b;
          c = a[h];
          for (a[h] = a[b]; f < g;) {
            for (; 0 > d(c, a[g]) && f < g;) --g;
            g != f && (a[f] = a[g], ++f);
            for (; 0 < d(c, a[f]) && f < g;) ++f;
            g != f && (a[g] = a[f], --g)
          }
          a[f] = c;
          Xd._quickSort(a, b, f - b, d);
          Xd._quickSort(a, f + 1, e - f, d)
        }
      };
      var Ba = function() {};
      k["polygonal.ds.tools.Assert"] = Ba;
      Ba.__name__ = "polygonal.ds.tools.Assert";
      Ba._assert = function(a, b, c) {
        if (!a) throw a = "in file " + c.fileName + ", line " + c.lineNumber, Error("Assertion failed" + (null != b ? ": " : " ") + (null == b ? a : "" + b + " (" +
          a + ")"));
      };
      var Ig = function() {};
      k["polygonal.ds.tools.GrowthRate"] = Ig;
      Ig.__name__ = "polygonal.ds.tools.GrowthRate";
      Ig.compute = function(a, b) {
        Ba._assert(-3 <= a, "invalid growth rate(rate >= -3)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/GrowthRate.hx",
          lineNumber: 52,
          className: "polygonal.ds.tools.GrowthRate",
          methodName: "compute"
        });
        if (0 < a) b += a;
        else switch (a) {
          case -3:
            b <<= 1;
            break;
          case -2:
            b = (3 * b >> 1) + 1;
            break;
          case -1:
            a =
              b + 1;
            b = (a >> 3) + (9 > a ? 3 : 6) + a;
            break;
          case 0:
            throw F.thrown("out of space");
        }
        return b
      };
      var Nb = function() {};
      k["polygonal.ds.tools.NativeArrayTools"] = Nb;
      Nb.__name__ = "polygonal.ds.tools.NativeArrayTools";
      Nb.alloc = function(a) {
        return Array(a)
      };
      Nb.get = function(a, b) {
        return a[b]
      };
      Nb.set = function(a, b, c) {
        a[b] = c
      };
      Nb.size = function(a) {
        return a.length
      };
      Nb.toArray = function(a, b, c, d) {
        Ba._assert(0 <= b && b < a.length, "first index out of range(first >= 0 && first < size(src))", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 140,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "toArray"
        });
        Ba._assert(0 <= c && b + c <= a.length, "len out of range(len >= 0 && first + len <= size(src))", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 141,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "toArray"
        });
        if (0 == c) return [];
        Ba._assert(0 <= c, "len >= 0", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/ArrayTools.hx",
          lineNumber: 37,
          className: "polygonal.ds.tools.ArrayTools",
          methodName: "alloc"
        });
        d = Array(c);
        if (0 == b)
          for (var e = 0; e < c;) {
            var f = e++;
            d[f] = a[f]
          } else
            for (e = b, c = b + c; e < c;) f = e++, d[f - b] = a[f];
        return d
      };
      Nb.ofArray = function(a) {
        return a.slice(0, a.length)
      };
      Nb.blit = function(a, b, c, d, e) {
        if (0 < e)
          if (Ba._assert(b < a.length, "srcPos out of range(srcPos < size(src))", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
              lineNumber: 197,
              className: "polygonal.ds.tools.NativeArrayTools",
              methodName: "blit"
            }), Ba._assert(d < c.length, "dstPos out of range(dstPos < size(dst))", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
              lineNumber: 198,
              className: "polygonal.ds.tools.NativeArrayTools",
              methodName: "blit"
            }), Ba._assert(b + e <= a.length && d + e <= c.length, "n out of range(srcPos + n <= size(src) && dstPos + n <= size(dst))", {
              fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
              lineNumber: 199,
              className: "polygonal.ds.tools.NativeArrayTools",
              methodName: "blit"
            }), a == c)
            if (b < d) {
              var f = b + e;
              b = d + e;
              for (var g = 0; g < e;) g++, --f, --b, a[b] = a[f]
            } else {
              if (b > d)
                for (f = b, b = d, g = 0; g < e;) g++, a[b] = a[f], ++f, ++b
            }
        else if (0 == b && 0 == d)
          for (g = 0; g < e;) f = g++, c[f] = a[f];
        else if (0 == b)
          for (g = 0; g < e;) f = g++, c[d + f] = a[f];
        else if (0 == d)
          for (g = 0; g < e;) f = g++, c[f] = a[b + f];
        else
          for (g = 0; g < e;) f = g++, c[d + f] = a[b + f]
      };
      Nb.copy = function(a) {
        return a.slice(0)
      };
      Nb.zero = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        c = 0 >= c ? a.length : b + c;
        Ba._assert(0 <=
          b && b < a.length, "min >= 0 && min < size(dst)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
            lineNumber: 293,
            className: "polygonal.ds.tools.NativeArrayTools",
            methodName: "zero"
          });
        for (Ba._assert(c <= a.length, "max <= size(dst)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
            lineNumber: 294,
            className: "polygonal.ds.tools.NativeArrayTools",
            methodName: "zero"
          }); b < c;) a[b++] = 0;
        return a
      };
      Nb.init = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        d = 0 >= d ? a.length : c + d;
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 315,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "init"
        });
        for (Ba._assert(d <= a.length, "max <= size(a)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
            lineNumber: 316,
            className: "polygonal.ds.tools.NativeArrayTools",
            methodName: "init"
          }); c < d;) a[c++] = b;
        return a
      };
      Nb.nullify = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        c = 0 >= c ? a.length : b + c;
        Ba._assert(0 <= b && b < a.length, "min >= 0 && min < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 331,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "nullify"
        });
        for (Ba._assert(c <= a.length, "max <= size(a)", {
            fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
            lineNumber: 332,
            className: "polygonal.ds.tools.NativeArrayTools",
            methodName: "nullify"
          }); b < c;) a[b++] = null;
        return a
      };
      Nb.binarySearchCmp = function(a, b, c, d, e) {
        Ba._assert(null != a, "a != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 351,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp"
        });
        Ba._assert(null != e, "cmp != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 352,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp"
        });
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 353,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp"
        });
        Ba._assert(d < a.length, "max < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 354,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp"
        });
        for (var f, g = d + 1; c < g;) f = c + (g - c >> 1), 0 > e(a[f], b) ? c = f + 1 : g = f;
        return c <= d && 0 == e(a[c], b) ? c : ~c
      };
      Nb.binarySearchf = function(a, b,
        c, d) {
        Ba._assert(null != a, "a != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 379,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchf"
        });
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 380,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchf"
        });
        Ba._assert(d < a.length, "max < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 381,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchf"
        });
        for (var e, f = d + 1; c < f;) e = c + (f - c >> 1), a[e] < b ? c = e + 1 : f = e;
        return c <= d && a[c] == b ? c : ~c
      };
      Nb.binarySearchi = function(a, b, c, d) {
        Ba._assert(null != a, "a != null", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 406,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchi"
        });
        Ba._assert(0 <= c && c < a.length, "min >= 0 && min < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 407,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchi"
        });
        Ba._assert(d < a.length, "max < size(a)", {
          fileName: "C:/Users/Robert/AppData/Local/Stencyl/libs/haxelib/Stencyl/ds/1d23c8a6f89f0f3a80158b94ca285e4e61cf982d/src/polygonal/ds/tools/NativeArrayTools.hx",
          lineNumber: 408,
          className: "polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchi"
        });
        for (var e, f = d + 1; c < f;) e = c + (f - c >> 1), a[e] < b ? c = e + 1 : f = e;
        return c <= d && a[c] == b ? c : ~c
      };
      var oi = function() {};
      k["polygonal.ds.tools.Shuffle"] = oi;
      oi.__name__ = "polygonal.ds.tools.Shuffle";
      oi.f = function() {
        return Math.random()
      };
      oi.setRandom = function(a) {
        oi.f = a
      };
      oi.frand = function() {
        return oi.f()
      };
      var op = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_1"] = op;
      op.__name__ = "scripts.ActorEvents_1";
      op.__super__ = Fa;
      op.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: op
      });
      var pp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_11"] = pp;
      pp.__name__ = "scripts.ActorEvents_11";
      pp.__super__ = Fa;
      pp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: pp
      });
      var qp =
        function(a, b, c) {
          Fa.call(this, b)
        };
      k["scripts.ActorEvents_13"] = qp;
      qp.__name__ = "scripts.ActorEvents_13";
      qp.__super__ = Fa;
      qp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: qp
      });
      var rp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_15"] = rp;
      rp.__name__ = "scripts.ActorEvents_15";
      rp.__super__ = Fa;
      rp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: rp
      });
      var sp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_17"] = sp;
      sp.__name__ =
        "scripts.ActorEvents_17";
      sp.__super__ = Fa;
      sp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: sp
      });
      var tp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_19"] = tp;
      tp.__name__ = "scripts.ActorEvents_19";
      tp.__super__ = Fa;
      tp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: tp
      });
      var up = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_21"] = up;
      up.__name__ = "scripts.ActorEvents_21";
      up.__super__ = Fa;
      up.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: up
      });
      var vp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_25"] = vp;
      vp.__name__ = "scripts.ActorEvents_25";
      vp.__super__ = Fa;
      vp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: vp
      });
      var wp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_27"] = wp;
      wp.__name__ = "scripts.ActorEvents_27";
      wp.__super__ = Fa;
      wp.prototype = t(Fa.prototype, {
        _event_Updating: function(a) {
          this.wrapper.enabled && "Bounce" == this.actor.getAnimation() && (this.actor.isAnimationPlaying() ||
            this.actor.setAnimation("Idle"))
        },
        init: function() {
          this.addListener(this.actor.whenUpdated, r(this, this._event_Updating))
        },
        forwardMessage: function(a) {},
        __class__: wp
      });
      var xp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_29"] = xp;
      xp.__name__ = "scripts.ActorEvents_29";
      xp.__super__ = Fa;
      xp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: xp
      });
      var yp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_31"] = yp;
      yp.__name__ = "scripts.ActorEvents_31";
      yp.__super__ =
        Fa;
      yp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: yp
      });
      var zp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_33"] = zp;
      zp.__name__ = "scripts.ActorEvents_33";
      zp.__super__ = Fa;
      zp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: zp
      });
      var Ap = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_35"] = Ap;
      Ap.__name__ = "scripts.ActorEvents_35";
      Ap.__super__ = Fa;
      Ap.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Ap
      });
      var Bp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_37"] = Bp;
      Bp.__name__ = "scripts.ActorEvents_37";
      Bp.__super__ = Fa;
      Bp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Bp
      });
      var Cp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_39"] = Cp;
      Cp.__name__ = "scripts.ActorEvents_39";
      Cp.__super__ = Fa;
      Cp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Cp
      });
      var Dp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_4"] =
        Dp;
      Dp.__name__ = "scripts.ActorEvents_4";
      Dp.__super__ = Fa;
      Dp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Dp
      });
      var Ep = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_41"] = Ep;
      Ep.__name__ = "scripts.ActorEvents_41";
      Ep.__super__ = Fa;
      Ep.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Ep
      });
      var Fp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_43"] = Fp;
      Fp.__name__ = "scripts.ActorEvents_43";
      Fp.__super__ = Fa;
      Fp.prototype = t(Fa.prototype, {
        _event_Updating: function(a) {
          this.wrapper.enabled && (this.actor.isAnimationPlaying() || u.recycleActor(this.actor))
        },
        init: function() {
          this.addListener(this.actor.whenUpdated, r(this, this._event_Updating))
        },
        forwardMessage: function(a) {},
        __class__: Fp
      });
      var Gp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_6"] = Gp;
      Gp.__name__ = "scripts.ActorEvents_6";
      Gp.__super__ = Fa;
      Gp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Gp
      });
      var Hp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_60"] =
        Hp;
      Hp.__name__ = "scripts.ActorEvents_60";
      Hp.__super__ = Fa;
      Hp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Hp
      });
      var Ip = function(a, b, c) {
        Fa.call(this, b);
        this.nameMap.h["Level Number"] = "_LevelNumber";
        this._LevelNumber = 0;
        this.nameMap.h["Draw X"] = "_DrawX";
        this._DrawX = 0
      };
      k["scripts.ActorEvents_62"] = Ip;
      Ip.__name__ = "scripts.ActorEvents_62";
      Ip.__super__ = Fa;
      Ip.prototype = t(Fa.prototype, {
        _LevelNumber: null,
        _DrawX: null,
        _customEvent_init: function() {
          var a = this.actor.getActorValue("number");
          this._LevelNumber = null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a));
          R.contains(p.engine.getGameAttribute("Completed Levels"), this._LevelNumber) ? this.actor.setAnimation("Completed") : p.engine.getGameAttribute("Completed Levels").length >= this._LevelNumber - 1 && this.actor.setAnimation("Unlocked");
          "Locked" != this.actor.getAnimation() && (this._DrawX = Math.round((this.actor.getWidth() -
            u.getFont(58).getTextWidth("" + this._LevelNumber) / p.SCALE) / 2), u.attachImageToActor(ud._customBlock_instanceOfText("" + this._LevelNumber, u.getFont(58)), this.actor, this._DrawX | 0, 12, 1))
        },
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Ip
      });
      var Jp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_64"] = Jp;
      Jp.__name__ = "scripts.ActorEvents_64";
      Jp.__super__ = Fa;
      Jp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Jp
      });
      var Kp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_79"] =
        Kp;
      Kp.__name__ = "scripts.ActorEvents_79";
      Kp.__super__ = Fa;
      Kp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Kp
      });
      var Lp = function(a, b, c) {
        Fa.call(this, b)
      };
      k["scripts.ActorEvents_8"] = Lp;
      Lp.__name__ = "scripts.ActorEvents_8";
      Lp.__super__ = Fa;
      Lp.prototype = t(Fa.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Lp
      });
      var Mp = function(a, b, c) {
        Fa.call(this, b);
        this.nameMap.h.Actor = "actor";
        this.nameMap.h.Pushed = "_Pushed";
        this._Pushed = !1;
        this.nameMap.h["Arrow Speed"] =
          "_ArrowSpeed";
        this._ArrowSpeed = 0;
        this.nameMap.h.Explode = "_Explode";
        this._Explode = !1;
        this.nameMap.h["Push Counter"] = "_PushCounter";
        this._PushCounter = 0
      };
      k["scripts.Design_15_15_Boxes"] = Mp;
      Mp.__name__ = "scripts.Design_15_15_Boxes";
      Mp.__super__ = Fa;
      Mp.prototype = t(Fa.prototype, {
        _Pushed: null,
        _ArrowSpeed: null,
        _Explode: null,
        _PushCounter: null,
        _event_Updating: function(a) {
          this.wrapper.enabled && (this.actor.getType() == u.getActorType(41) && 25 < this.actor.getYVelocity() && (this._Explode = !0), 1 <= this._PushCounter && (this.actor.setXVelocity(0),
            u.isKeyDown("Z")), this._PushCounter += 1)
        },
        _event_ActorAny: function(a) {
          this.wrapper.enabled && this.actor.getType() != u.getActorType(17) && (a.otherActor.getType() == u.getActorType(37) ? (this.actor.setXVelocity(-this._ArrowSpeed), this._Pushed = !0, this._PushCounter = 0) : a.otherActor.getType() == u.getActorType(39) ? (this.actor.setXVelocity(this._ArrowSpeed), this._Pushed = !0, this._PushCounter = 0) : a.otherActor.getType() == u.getActorType(33) ? this.actor.setYVelocity(-this._ArrowSpeed) : a.otherActor.getType() == u.getActorType(35) &&
            this.actor.setYVelocity(Math.max(this._ArrowSpeed, this.actor.getYVelocity())), this.actor.getType() == u.getActorType(41) && this._Explode && a.thisFromBottom && !a.thisCollidedWithSensor && this._customEvent_explode())
        },
        _customEvent_explode: function() {
          var a = Math.floor(this.actor.getX() / u.getTileWidth()) - 2,
            b = Math.floor(this.actor.getY() / u.getTileHeight()) - 2,
            c = [],
            d = a;
          c.push(null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" ==
            typeof d ? parseFloat(d) : parseFloat(M.string(d)));
          d = a;
          c.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 1);
          d = a;
          c.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 2);
          d = a;
          c.push((null == d ? 0 : "number" == typeof d ? K.__cast(d,
            Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 3);
          d = a;
          c.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 4);
          d = a;
          c.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ?
            parseFloat(d) : parseFloat(M.string(d))) + 5);
          var e = [];
          d = b;
          e.push(null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d)));
          d = b;
          e.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 1);
          d = b;
          e.push((null == d ? 0 : "number" == typeof d ? K.__cast(d,
            Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 2);
          d = b;
          e.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 3);
          d = b;
          e.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ?
            parseFloat(d) : parseFloat(M.string(d))) + 4);
          d = b;
          e.push((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) + 5);
          var f = 0;
          for (c = K.__cast(c, Array); f < c.length;) {
            var g = c[f];
            ++f;
            for (var h = 0, m = e.length; h < m;) {
              var l = h++;
              l = e[l];
              d = a;
              if (0 == ((null == g ? 0 : "number" == typeof g ? K.__cast(g, Cc) : "number" == typeof g && (g | 0) === g ? K.__cast(g, rc) : "boolean" == typeof g ? K.__cast(g, Gc) ? 1 : 0 : "string" == typeof g ?
                  parseFloat(g) : parseFloat(M.string(g))) - (null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d)))) % 2) {
                d = l;
                var p = b;
                d = 0 == ((null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d, Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) - (null == p ? 0 : "number" == typeof p ? K.__cast(p, Cc) : "number" == typeof p && (p |
                  0) === p ? K.__cast(p, rc) : "boolean" == typeof p ? K.__cast(p, Gc) ? 1 : 0 : "string" == typeof p ? parseFloat(p) : parseFloat(M.string(p)))) % 2
              } else d = !1;
              d && (d = l, u.createRecycledActor(u.getActorType(43), (null == g ? 0 : "number" == typeof g ? K.__cast(g, Cc) : "number" == typeof g && (g | 0) === g ? K.__cast(g, rc) : "boolean" == typeof g ? K.__cast(g, Gc) ? 1 : 0 : "string" == typeof g ? parseFloat(g) : parseFloat(M.string(g))) * u.getTileWidth(), (null == d ? 0 : "number" == typeof d ? K.__cast(d, Cc) : "number" == typeof d && (d | 0) === d ? K.__cast(d, rc) : "boolean" == typeof d ? K.__cast(d,
                Gc) ? 1 : 0 : "string" == typeof d ? parseFloat(d) : parseFloat(M.string(d))) * u.getTileHeight(), 0));
              u.removeTileAt((null == l ? 0 : "number" == typeof l ? K.__cast(l, Cc) : "number" == typeof l && (l | 0) === l ? K.__cast(l, rc) : "boolean" == typeof l ? K.__cast(l, Gc) ? 1 : 0 : "string" == typeof l ? parseFloat(l) : parseFloat(M.string(l))) | 0, (null == g ? 0 : "number" == typeof g ? K.__cast(g, Cc) : "number" == typeof g && (g | 0) === g ? K.__cast(g, rc) : "boolean" == typeof g ? K.__cast(g, Gc) ? 1 : 0 : "string" == typeof g ? parseFloat(g) : parseFloat(M.string(g))) | 0, u.engine.getLayerById(0))
            }
          }
          u.playSound(u.getSound(48));
          u.recycleActor(this.actor)
        },
        init: function() {
          this._ArrowSpeed = 15;
          this._PushCounter = 0;
          this.addListener(this.actor.whenUpdated, r(this, this._event_Updating));
          this.addListener(this.actor.whenCollided, r(this, this._event_ActorAny))
        },
        forwardMessage: function(a) {},
        __class__: Mp
      });
      var Np = function(a, b, c) {
        Fa.call(this, b);
        this.nameMap.h.Actor = "actor";
        this.nameMap.h.Group = "_Group";
        this._Group = 1
      };
      k["scripts.Design_27_27_KeyandDoor"] = Np;
      Np.__name__ = "scripts.Design_27_27_KeyandDoor";
      Np.__super__ = Fa;
      Np.prototype = t(Fa.prototype, {
        _Group: null,
        init: function() {
          if (1 == this._Group) {
            var a = 255,
              b = 255,
              c = 0;
            null == c && (c = 0);
            null == b && (b = 0);
            null == a && (a = 0);
            this.actor.setFilter([u.createTintFilter(a << 16 | b << 8 | c, 1)])
          } else 2 == this._Group ? (a = 255, c = b = 40, null == c && (c = 0), null == b && (b = 0), null == a && (a = 0), this.actor.setFilter([u.createTintFilter(a << 16 | b << 8 | c, 1)])) : 3 == this._Group ? (b = a = 120, c = 255, null == c && (c = 0), null == b && (b = 0), null == a && (a = 0), this.actor.setFilter([u.createTintFilter(a << 16 | b << 8 | c, 1)])) : 4 == this._Group && (a = 255, b = 0, c = 255, null == c && (c = 0), null == b &&
            (b = 0), null == a && (a = 0), this.actor.setFilter([u.createTintFilter(a << 16 | b << 8 | c, 1)]))
        },
        forwardMessage: function(a) {},
        __class__: Np
      });
      var Op = function(a, b, c) {
        Fa.call(this, b);
        this.nameMap.h.Actor = "actor";
        this.nameMap.h.Speed = "_Speed";
        this._Speed = 0;
        this.nameMap.h["Ground Counter"] = "_GroundCounter";
        this._GroundCounter = 0;
        this.nameMap.h["Jump Counter"] = "_JumpCounter";
        this._JumpCounter = 0;
        this.nameMap.h["Facing Right"] = "_FacingRight";
        this._FacingRight = !1;
        this.nameMap.h["Spring Multi"] = "_SpringMulti";
        this._SpringMulti =
          0;
        this.nameMap.h["Collided Actor"] = "_CollidedActor";
        this.nameMap.h.Dead = "_Dead";
        this._Dead = !1;
        this.nameMap.h["Just Jumped"] = "_JustJumped";
        this._JustJumped = !1;
        this.nameMap.h["Old X Speed"] = "_OldXSpeed";
        this._OldXSpeed = 0;
        this.nameMap.h["Accel Amount"] = "_AccelAmount";
        this._AccelAmount = 0
      };
      k["scripts.Design_2_2_PlayerBehavior"] = Op;
      Op.__name__ = "scripts.Design_2_2_PlayerBehavior";
      Op.__super__ = Fa;
      Op.prototype = t(Fa.prototype, {
        _Speed: null,
        _GroundCounter: null,
        _JumpCounter: null,
        _FacingRight: null,
        _SpringMulti: null,
        _CollidedActor: null,
        _Dead: null,
        _JustJumped: null,
        _OldXSpeed: null,
        _AccelAmount: null,
        _event_Updating: function(a) {
          this.wrapper.enabled && ("End Scene" == u.getCurrentSceneName() ? (u.setGravity(0, 100), 0 == this._GroundCounter && this._customEvent_jump()) : u.isTransitioning() ? (this.actor.setXVelocity(0), this._Dead || this.actor.setYVelocity(0)) : u.sayToScene("Scene Functions", "_customBlock_getLevelDone") || this._Dead || ("1x" == this.actor.getAnimation() ? this._AccelAmount = 1 : this._AccelAmount = 2, u.isKeyDown("Left") || u.isKeyDown("A") ?
            (this.actor.setXVelocity(Math.max(this.actor.getXVelocity() - this._AccelAmount, -this._Speed)), this._FacingRight = !1) : u.isKeyDown("Right") || u.isKeyDown("D") ? (this.actor.setXVelocity(Math.min(this.actor.getXVelocity() + this._AccelAmount, this._Speed)), this._FacingRight = !0) : (0 == this._GroundCounter ? "1x" == this.actor.getAnimation() ? this.actor.setXVelocity(0) : this.actor.setXVelocity(.8 * this.actor.getXVelocity()) : this.actor.setXVelocity(.9 * this.actor.getXVelocity()), 1 > Math.abs(this.actor.getXVelocity()) && this.actor.setXVelocity(0)),
            this._customEvent_checkEdges(), u.isKeyDown("Up") || u.isKeyDown("W") || 0 <= this.actor.getYVelocity() ? u.setGravity(0, 100) : u.setGravity(0, 300), u.isKeyPressed("Up") || u.isKeyPressed("W") ? (this._JumpCounter = 10, this._customEvent_jump()) : 0 < this._JumpCounter && this._customEvent_jump(), this._GroundCounter += 1, --this._JumpCounter, this._OldXSpeed = this.actor.getXVelocity()))
        },
        _event_ActorAny: function(a) {
          if (this.wrapper.enabled && !(u.isTransitioning() && "End Scene" != u.getCurrentSceneName() || u.sayToScene("Scene Functions",
              "_customBlock_getLevelDone") || this._Dead)) {
            this._CollidedActor = a.otherActor;
            if (this._CollidedActor.getGroup() == u.getActorGroup(4)) this._customEvent_sizeChangers();
            else if (this._CollidedActor.getType() == u.getActorType(6)) {
              this.actor.setIgnoreGravity(!0);
              this.actor.setXVelocity(0);
              this.actor.setYVelocity(0);
              var b = this._CollidedActor.getX() + (this._CollidedActor.getWidth() - this.actor.getWidth()) / 2,
                c = this._CollidedActor.getY() + (this._CollidedActor.getHeight() - this.actor.getHeight()) / 2;
              this.actor.moveTo(null ==
                b ? 0 : "number" == typeof b ? K.__cast(b, Cc) : "number" == typeof b && (b | 0) === b ? K.__cast(b, rc) : "boolean" == typeof b ? K.__cast(b, Gc) ? 1 : 0 : "string" == typeof b ? parseFloat(b) : parseFloat(M.string(b)), null == c ? 0 : "number" == typeof c ? K.__cast(c, Cc) : "number" == typeof c && (c | 0) === c ? K.__cast(c, rc) : "boolean" == typeof c ? K.__cast(c, Gc) ? 1 : 0 : "string" == typeof c ? parseFloat(c) : parseFloat(M.string(c)), .2, qa.linear);
              this.actor.fadeTo(0, .4, qa.linear);
              u.playSound(u.getSound(51));
              u.sayToScene("Scene Functions", "_customEvent_nextLevel")
            } else if ((a.otherActor.getType() ==
                u.getActorType(15) || a.otherActor.getType() == u.getActorType(41)) && "1x" != this.actor.getAnimation() || a.otherActor.getType() == u.getActorType(17) && "4x" == this.actor.getAnimation()) a.otherFromLeft ? (this.actor.setXVelocity(Math.min(this._OldXSpeed, 10)), a.otherActor.setXVelocity(10), a.otherActor.setValue("Boxes", "_Pushed", !0), a.otherActor.setValue("Boxes", "_PushCounter", 0)) : a.otherFromRight && (this.actor.setXVelocity(Math.max(this._OldXSpeed, -10)), a.otherActor.setXVelocity(-10), a.otherActor.setValue("Boxes",
              "_Pushed", !0), a.otherActor.setValue("Boxes", "_PushCounter", 0));
            else if (a.otherActor.getGroup() == u.getActorGroup(6)) this._Dead = !0, this.actor.setIgnoreGravity(!0), nc.addResponse(u.getActorGroup(0), u.getActorGroup(1), "sensor"), nc.addResponse(u.getActorGroup(0), u.getActorGroup(3), "sensor"), this.actor.setXVelocity(0), this.actor.setYVelocity(-10), this.actor.setFilter([u.createGrayscaleFilter()]), this.actor.set_alpha(.5), u.playSound(u.getSound(49)), u.runLater(500, function(a) {
              u.sayToScene("Scene Functions",
                "_customEvent_reload")
            }, this.actor);
            else if (a.otherActor.getType() == u.getActorType(29)) {
              b = 0;
              for (c = u.getActorsOfType(u.getActorType(31)); b < c.length;) {
                var d = c[b];
                ++b;
                null == d || d.dead || d.recycled || a.otherActor.getValue("Key and Door", "_Group") == d.getValue("Key and Door", "_Group") && u.recycleActor(d)
              }
              u.playSound(u.getSound(52));
              u.recycleActor(a.otherActor)
            } else a.otherActor.getGroup() == u.getActorGroup(8) && "4x" != this.actor.getAnimation() && (this._CollidedActor.getType() == u.getActorType(37) ? this.actor.setXVelocity(-this._Speed) :
              this._CollidedActor.getType() == u.getActorType(39) ? this.actor.setXVelocity(this._Speed) : this._CollidedActor.getType() == u.getActorType(33) ? this.actor.setYVelocity(Math.min(this.actor.getYVelocity(), -this._Speed)) : this._CollidedActor.getType() == u.getActorType(35) && this.actor.setYVelocity(Math.max(this.actor.getYVelocity(), this._Speed)));
            a.thisFromBottom && !a.thisCollidedWithSensor && (this._GroundCounter = 0, a.otherActor.getType() == u.getActorType(27) && ("4x" == this.actor.getAnimation() ? (u.sayToScene("Sound Manager",
              "_customBlock_playSound", ["Destroy Spring"]), u.recycleActor(a.otherActor)) : (this._SpringMulti = 1.4, this._customEvent_jump(), this._SpringMulti = 1, a.otherActor.setAnimation("Bounce"))))
          }
        },
        _customEvent_jump: function() {
          var a = this;
          8 >= this._GroundCounter && (this._JustJumped || ("1x" == this.actor.getAnimation() ? (this.actor.setYVelocity(-25 * this._SpringMulti), u.sayToScene("Sound Manager", "_customBlock_playSound", ["Jump High"])) : "2x" == this.actor.getAnimation() ? (this.actor.setYVelocity(-35 * this._SpringMulti), u.sayToScene("Sound Manager",
            "_customBlock_playSound", ["Jump Med"])) : "4x" == this.actor.getAnimation() && (this.actor.setYVelocity(-47 * this._SpringMulti), u.sayToScene("Sound Manager", "_customBlock_playSound", ["Jump Low"])), this._JustJumped = !0, u.runLater(20, function(b) {
            a._JustJumped = !1
          }, this.actor)), this._GroundCounter = 9999, this._JumpCounter = 0)
        },
        _customEvent_checkEdges: function() {
          0 >= this.actor.getX() ? (this.actor.setX(0), this.actor.setXVelocity(Math.max(this.actor.getXVelocity(), 0))) : this.actor.getX() >= u.getSceneWidth() - this.actor.getWidth() &&
            (this.actor.setX(u.getSceneWidth() - this.actor.getWidth()), this.actor.setXVelocity(Math.min(this.actor.getXVelocity(), 0)))
        },
        _customEvent_sizeChangers: function() {
          this._CollidedActor.getType() == u.getActorType(4) ? "2x" == this.actor.getAnimation() && (this.actor.setX(this._CollidedActor.getX() + (this._CollidedActor.getWidth() - this.actor.getWidth()) / 2), this.actor.setY(this._CollidedActor.getY() + (this._CollidedActor.getHeight() - this.actor.getHeight()) / 2), this.actor.setAnimation("1x"), u.sayToScene("Sound Manager",
              "_customBlock_playSound", ["Size Change Sound"])) : this._CollidedActor.getType() == u.getActorType(8) ? "1x" == this.actor.getAnimation() && (this.actor.setX(this._CollidedActor.getX() + (this._CollidedActor.getWidth() - this.actor.getWidth()) / 2), this.actor.setY(this._CollidedActor.getY() + (this._CollidedActor.getHeight() - this.actor.getHeight()) / 2), this.actor.setAnimation("2x"), u.sayToScene("Sound Manager", "_customBlock_playSound", ["Size Change Sound"])) : this._CollidedActor.getType() == u.getActorType(11) ? "2x" == this.actor.getAnimation() &&
            (this.actor.setX(this._CollidedActor.getX() + (this._CollidedActor.getWidth() - this.actor.getWidth()) / 2), this.actor.setY(this._CollidedActor.getY() + (this._CollidedActor.getHeight() - this.actor.getHeight()) / 2), this.actor.setAnimation("4x"), u.sayToScene("Sound Manager", "_customBlock_playSound", ["Size Change Sound"])) : this._CollidedActor.getType() == u.getActorType(13) && "4x" == this.actor.getAnimation() && (this.actor.setX(this._CollidedActor.getX() + (this._CollidedActor.getWidth() - this.actor.getWidth()) / 2), this.actor.setY(this._CollidedActor.getY() +
              (this._CollidedActor.getHeight() - this.actor.getHeight()) / 2), this.actor.setAnimation("2x"), u.sayToScene("Sound Manager", "_customBlock_playSound", ["Size Change Sound"]));
          "End Scene" == u.getCurrentSceneName() && u.recycleActor(this._CollidedActor)
        },
        init: function() {
          this._FacingRight = !0;
          this._Speed = 15;
          this._SpringMulti = 1;
          this.actor.makeAlwaysSimulate();
          nc.addResponse(u.getActorGroup(0), u.getActorGroup(1), "solid");
          nc.addResponse(u.getActorGroup(0), u.getActorGroup(3), "solid");
          this.addListener(this.actor.whenUpdated,
            r(this, this._event_Updating));
          this.addListener(this.actor.whenCollided, r(this, this._event_ActorAny))
        },
        forwardMessage: function(a) {},
        __class__: Op
      });
      var ud = function(a, b) {
        u.call(this)
      };
      k["scripts.Design_45_45_TextHelper"] = ud;
      ud.__name__ = "scripts.Design_45_45_TextHelper";
      ud._customBlock_instanceOfText = function(a, b) {
        u.imageApiAutoscale = !1;
        var c = b.font.getTextWidth(a, b.fontScale) | 0,
          d = b.font.getFontHeight() * b.fontScale | 0;
        c = u.newImage(c, d);
        u.drawTextOnImage(c, a, 0, 0, b);
        u.imageApiAutoscale = !0;
        return new Ih(new Ac(c))
      };
      ud._customBlock_imageOfInstance = function(a) {
        return a.img.get_bitmapData()
      };
      ud._customBlock_changeXOffset = function(a, b, c) {
        b.font._glyphs.h[da.cca(a, 0)].xoffset += c | 0
      };
      ud.__super__ = kb;
      ud.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: ud
      });
      var Pp = function(a, b) {
        u.call(this);
        this.nameMap.h["Selection Actor Type"] = "_SelectionActorType";
        this.nameMap.h["Selection Actor"] = "_SelectionActor";
        this.nameMap.h["Total Cols"] = "_TotalCols";
        this._TotalCols = 0;
        this.nameMap.h["Level Count"] =
          "_LevelCount";
        this._LevelCount = 0;
        this.nameMap.h["X Spacing"] = "_XSpacing";
        this._XSpacing = 0;
        this.nameMap.h["Y Spacing"] = "_YSpacing";
        this._YSpacing = 0;
        this.nameMap.h["Button Actor Type"] = "_ButtonActorType";
        this.nameMap.h["Button Width"] = "_ButtonWidth";
        this._ButtonWidth = 0;
        this.nameMap.h["Button Height"] = "_ButtonHeight";
        this._ButtonHeight = 0;
        this.nameMap.h["Total Rows"] = "_TotalRows";
        this._TotalRows = 0;
        this.nameMap.h["Total Width"] = "_TotalWidth";
        this._TotalWidth = 0;
        this.nameMap.h["Start X"] = "_StartX";
        this._StartX =
          0;
        this.nameMap.h["Start Y"] = "_StartY";
        this._StartY = 0;
        this.nameMap.h.Col = "_Col";
        this._Col = 0;
        this.nameMap.h.Row = "_Row";
        this._Row = 0;
        this.nameMap.h["Selected Button"] = "_SelectedButton";
        this.nameMap.h["Key Was Pressed"] = "_KeyWasPressed";
        this._KeyWasPressed = !1;
        this.nameMap.h["Control Map"] = "_ControlMap";
        a = new ua;
        a.h["Select,1"] = "Space";
        a.h["Select,2"] = "Enter";
        a.h["Back,1"] = "Esc";
        a.h["Back,2"] = "B";
        a.h["Left,1"] = "Left";
        a.h["Left,2"] = "A";
        a.h["Right,1"] = "Right";
        a.h["Right,2"] = "D";
        a.h["Up,1"] = "Up";
        a.h["Up,2"] =
          "W";
        a.h["Down,1"] = "Down";
        a.h["Down,2"] = "S";
        this._ControlMap = a;
        this.nameMap.h["Level Number"] = "_LevelNumber";
        this._LevelNumber = 0;
        this.nameMap.h["AG More Games"] = "_AGMoreGames";
        this.nameMap.h["AG Like Us"] = "_AGLikeUs"
      };
      k["scripts.Design_50_50_LevelSelectManager"] = Pp;
      Pp.__name__ = "scripts.Design_50_50_LevelSelectManager";
      Pp.__super__ = kb;
      Pp.prototype = t(kb.prototype, {
        _SelectionActorType: null,
        _SelectionActor: null,
        _TotalCols: null,
        _LevelCount: null,
        _XSpacing: null,
        _YSpacing: null,
        _ButtonActorType: null,
        _ButtonWidth: null,
        _ButtonHeight: null,
        _TotalRows: null,
        _TotalWidth: null,
        _StartX: null,
        _StartY: null,
        _Col: null,
        _Row: null,
        _SelectedButton: null,
        _KeyWasPressed: null,
        _ControlMap: null,
        _LevelNumber: null,
        _AGMoreGames: null,
        _AGLikeUs: null,
        _event_Updating: function(a) {
          if (this.wrapper.enabled && (null != this._SelectionActor && (this._SelectionActor.setX(this._SelectedButton.getX()), this._SelectionActor.setY(this._SelectedButton.getY())), !u.isTransitioning())) {
            this._customEvent_controlSelect();
            this._KeyWasPressed && this._customEvent_enterLevel();
            this._customEvent_controlBack();
            if (this._KeyWasPressed) {
              a = Bb.get().scenes.h[23].getID();
              var b = 0,
                c = 0,
                d = 0;
              null == d && (d = 0);
              null == c && (c = 0);
              null == b && (b = 0);
              var e = u.createFadeOut(.5, b << 16 | c << 8 | d);
              d = c = b = 0;
              null == d && (d = 0);
              null == c && (c = 0);
              null == b && (b = 0);
              u.switchScene(a, e, u.createFadeIn(.5, b << 16 | c << 8 | d))
            }
            a = this._SelectedButton.getActorValue("number");
            this._Col = ((null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) :
              parseFloat(M.string(a))) - 1) % this._TotalCols;
            a = this._SelectedButton.getActorValue("number");
            this._Row = Math.floor(((null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a))) - 1) / this._TotalCols);
            this._customEvent_controlLeft();
            this._KeyWasPressed && (0 == this._Col ? 0 < this._Row && (--this._Row, this._Col = this._TotalCols - 1) : --this._Col, this._customEvent_checkLevel());
            this._customEvent_controlRight();
            this._KeyWasPressed && (this._Col == this._TotalCols - 1 ? (this._Col = 0, this._Row += 1) : this._Col += 1, this._customEvent_checkLevel());
            this._customEvent_controlUp();
            if (this._KeyWasPressed) {
              if (0 == this._Row) return;
              --this._Row;
              this._customEvent_checkLevel()
            }
            this._customEvent_controlDown();
            this._KeyWasPressed && (this._Row += 1, this._customEvent_checkLevel())
          }
        },
        _customEvent_controlSelect: function() {
          this._KeyWasPressed = !1;
          for (var a = Object.keys(this._ControlMap.h), b = a.length, c = 0; c < b;) {
            var d = a[c++];
            if (0 <= ("" + d).indexOf("Select") &&
              u.isKeyPressed(this._ControlMap.h["" + d])) {
              this._KeyWasPressed = !0;
              break
            }
          }
        },
        _customEvent_controlBack: function() {
          this._KeyWasPressed = !1;
          for (var a = Object.keys(this._ControlMap.h), b = a.length, c = 0; c < b;) {
            var d = a[c++];
            if (0 <= ("" + d).indexOf("Back") && u.isKeyPressed(this._ControlMap.h["" + d])) {
              this._KeyWasPressed = !0;
              break
            }
          }
        },
        _customEvent_controlLeft: function() {
          this._KeyWasPressed = !1;
          for (var a = Object.keys(this._ControlMap.h), b = a.length, c = 0; c < b;) {
            var d = a[c++];
            if (0 <= ("" + d).indexOf("Left") && u.isKeyPressed(this._ControlMap.h["" +
                d])) {
              this._KeyWasPressed = !0;
              break
            }
          }
        },
        _customEvent_controlRight: function() {
          this._KeyWasPressed = !1;
          for (var a = Object.keys(this._ControlMap.h), b = a.length, c = 0; c < b;) {
            var d = a[c++];
            if (0 <= ("" + d).indexOf("Right") && u.isKeyPressed(this._ControlMap.h["" + d])) {
              this._KeyWasPressed = !0;
              break
            }
          }
        },
        _customEvent_controlUp: function() {
          this._KeyWasPressed = !1;
          for (var a = Object.keys(this._ControlMap.h), b = a.length, c = 0; c < b;) {
            var d = a[c++];
            if (0 <= ("" + d).indexOf("Up") && u.isKeyPressed(this._ControlMap.h["" + d])) {
              this._KeyWasPressed = !0;
              break
            }
          }
        },
        _customEvent_controlDown: function() {
          this._KeyWasPressed = !1;
          for (var a = Object.keys(this._ControlMap.h), b = a.length, c = 0; c < b;) {
            var d = a[c++];
            if (0 <= ("" + d).indexOf("Down") && u.isKeyPressed(this._ControlMap.h["" + d])) {
              this._KeyWasPressed = !0;
              break
            }
          }
        },
        _customEvent_checkLevel: function() {
          var a = this._Row * this._TotalCols + this._Col + 1,
            b = a;
          if (!((null == b ? 0 : "number" == typeof b ? K.__cast(b, Cc) : "number" == typeof b && (b | 0) === b ? K.__cast(b, rc) : "boolean" == typeof b ? K.__cast(b, Gc) ? 1 : 0 : "string" == typeof b ? parseFloat(b) :
              parseFloat(M.string(b))) > this._LevelCount)) {
            b = 0;
            for (var c = u.getActorsOfType(this._ButtonActorType); b < c.length;) {
              var d = c[b];
              ++b;
              if (null != d && !d.dead && !d.recycled && d.getActorValue("number") == a) {
                "Locked" != d.getAnimation() && (this._SelectedButton = d, this._LevelNumber != a && u.playSound(u.getSound(72)), b = a, this._LevelNumber = null == b ? 0 : "number" == typeof b ? K.__cast(b, Cc) : "number" == typeof b && (b | 0) === b ? K.__cast(b, rc) : "boolean" == typeof b ? K.__cast(b, Gc) ? 1 : 0 : "string" == typeof b ? parseFloat(b) : parseFloat(M.string(b)));
                break
              }
            }
          }
        },
        _customEvent_enterLevel: function() {
          if (!u.isTransitioning()) {
            var a = 9 >= this._LevelNumber ? "Level 0" + this._LevelNumber : "Level " + this._LevelNumber;
            p.engine.gameAttributes.h["Current Level"] = this._LevelNumber;
            var b = Bb.get().scenes;
            a = u.getIDForScene("" + a);
            b = b.h[a].getID();
            var c = a = 0,
              d = 0;
            null == d && (d = 0);
            null == c && (c = 0);
            null == a && (a = 0);
            var e = u.createFadeOut(.5, a << 16 | c << 8 | d);
            d = c = a = 0;
            null == d && (d = 0);
            null == c && (c = 0);
            null == a && (a = 0);
            u.switchScene(b, e, u.createFadeIn(.5, a << 16 | c << 8 | d))
          }
        },
        init: function() {
          if (0 ==
            this._LevelCount && null != u.getGameAttribute("Level Count")) {
            var a = u.getGameAttribute("Level Count");
            this._LevelCount = null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a))
          }
          null != this._SelectionActorType && (u.createRecycledActor(this._SelectionActorType, -100, -100, 0), this._SelectionActor = u.getLastCreatedActor());
          this._TotalRows = Math.ceil(this._LevelCount / this._TotalCols);
          u.createRecycledActor(this._ButtonActorType,
            -100, 0, 0);
          this._ButtonWidth = u.getLastCreatedActor().getWidth();
          this._ButtonHeight = u.getLastCreatedActor().getHeight();
          u.recycleActor(u.getLastCreatedActor());
          this._TotalWidth = this._ButtonWidth * this._TotalCols + this._XSpacing * (this._TotalCols - 1);
          this._StartX = (u.getSceneWidth() - this._TotalWidth) / 2;
          this._StartY += u.getScreenY();
          for (var b = 0, c = this._LevelCount | 0; b < c;) a = b++, this._Col = a % this._TotalCols, this._Row = Math.floor(a / this._TotalCols), u.createRecycledActor(this._ButtonActorType, this._StartX + this._Col *
            (this._ButtonWidth + this._XSpacing), this._StartY + this._Row * (this._ButtonHeight + this._YSpacing), 1), u.getLastCreatedActor().setActorValue("number", a + 1), u.getLastCreatedActor().shout("_customEvent_init"), null == u.getGameAttribute("Current Level") ? 0 == a && (this._SelectedButton = u.getLastCreatedActor(), this._LevelNumber = 1) : a + 1 == u.getGameAttribute("Current Level") && (this._SelectedButton = u.getLastCreatedActor(), a = u.getGameAttribute("Current Level"), this._LevelNumber = null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) :
            "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a)));
          this._SelectionActor.moveToTop();
          a = this._SelectedButton.getActorValue("number");
          this._Col = ((null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a))) - 1) % this._TotalCols;
          a = this._SelectedButton.getActorValue("number");
          this._Row = Math.floor(((null ==
            a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a))) - 1) / this._TotalCols);
          u.attachImageToHUD(ud._customBlock_instanceOfText("LEVEL SELECT", u.getFont(66)), Math.round((u.getScreenWidth() - u.getFont(66).getTextWidth("LEVEL SELECT") / p.SCALE) / 2), 5);
          this.addListener(u.engine.whenUpdated, r(this, this._event_Updating))
        },
        forwardMessage: function(a) {},
        __class__: Pp
      });
      var Mg = function(a, b) {
        u.call(this)
      };
      k["scripts.Design_55_55_ExtraSaveBlocks"] = Mg;
      Mg.__name__ = "scripts.Design_55_55_ExtraSaveBlocks";
      Mg._customBlock_loadGame = function(a) {
        a = ed.getLocal(Mg.fileName, a);
        for (var b = 0, c = Y.fields(a.data); b < c.length;) {
          var d = c[b];
          ++b;
          var e = u.engine.gameAttributes,
            f = R.loadFromSharedObject(a, d);
          e.h[d] = f
        }
      };
      Mg._customBlock_saveGame = function(a) {
        a = ed.getLocal(Mg.fileName, a);
        for (var b = Object.keys(u.engine.gameAttributes.h), c = b.length, d = 0; d < c;) {
          var e = b[d++];
          0 != u.engine.savableAttributes.h[e] && R.saveToSharedObject(a, e,
            u.engine.gameAttributes.h[e])
        }
        R.flushSharedObject(a, null)
      };
      Mg.__super__ = kb;
      Mg.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Mg
      });
      var Qp = function(a, b) {
        u.call(this);
        this.nameMap.h["Played Sounds"] = "_PlayedSounds"
      };
      k["scripts.Design_57_57_SoundManager"] = Qp;
      Qp.__name__ = "scripts.Design_57_57_SoundManager";
      Qp.__super__ = kb;
      Qp.prototype = t(kb.prototype, {
        _PlayedSounds: null,
        _customBlock_playSound: function(a) {
          "End Scene" == u.getCurrentSceneName() && "Size Change Sound" == a || R.contains(this._PlayedSounds,
            a) || (u.playSound(u.getSoundByName(a)), this._PlayedSounds.push(a))
        },
        init: function() {
          var a = this;
          this._PlayedSounds = [];
          u.runPeriodically(100, function(b) {
            a._PlayedSounds.length = 0
          }, null)
        },
        forwardMessage: function(a) {},
        __class__: Qp
      });
      var An = function(a, b) {
        u.call(this)
      };
      k["scripts.Design_58_58_GlobalCustomBlocks"] = An;
      An.__name__ = "scripts.Design_58_58_GlobalCustomBlocks";
      An._customBlock_glEnabled = function() {
        return "opengl" == p.stage.window.context.type || "opengles" == p.stage.window.context.type || "webgl" == p.stage.window.context.type ?
          !0 : !1
      };
      An.__super__ = kb;
      An.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: An
      });
      var Rp = function(a, b) {
        u.call(this);
        this.nameMap.h["Level Number"] = "_LevelNumber";
        this._LevelNumber = 0;
        this.nameMap.h["Temp Text"] = "_TempText";
        this._TempText = "";
        this.nameMap.h["Level Done"] = "_LevelDone";
        this._LevelDone = !1;
        this.nameMap.h["AG More Games"] = "_AGMoreGames"
      };
      k["scripts.Design_5_5_SceneFunctions"] = Rp;
      Rp.__name__ = "scripts.Design_5_5_SceneFunctions";
      Rp.__super__ = kb;
      Rp.prototype = t(kb.prototype, {
        _LevelNumber: null,
        _TempText: null,
        _LevelDone: null,
        _AGMoreGames: null,
        _event_Updating: function(a) {
          if (this.wrapper.enabled && !u.isTransitioning() && !this._LevelDone)
            if ("End Scene" == u.getCurrentSceneName()) {
              if (u.isKeyPressed("Esc") || u.isKeyPressed("B") || u.isKeyPressed("Enter") || u.isKeyPressed("Space")) {
                a = Bb.get().scenes.h[23].getID();
                var b = 0,
                  c = 0,
                  d = 0;
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                var e = u.createFadeOut(.5, b << 16 | c << 8 | d);
                d = c = b = 0;
                null == d && (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                u.switchScene(a, e,
                  u.createFadeIn(.5, b << 16 | c << 8 | d))
              }
            } else if (u.isKeyPressed("R")) this._customEvent_reload();
          else if (u.isKeyPressed("Esc") || u.isKeyPressed("B")) {
            a = 0;
            for (b = u.getActorsOfType(u.getActorType(1)); a < b.length;) c = b[a], ++a, null == c || c.dead || c.recycled || c.setIgnoreGravity(!0);
            a = Bb.get().scenes.h[24].getID();
            d = c = b = 0;
            null == d && (d = 0);
            null == c && (c = 0);
            null == b && (b = 0);
            e = u.createFadeOut(.5, b << 16 | c << 8 | d);
            d = c = b = 0;
            null == d && (d = 0);
            null == c && (c = 0);
            null == b && (b = 0);
            u.switchScene(a, e, u.createFadeIn(.5, b << 16 | c << 8 | d))
          }
        },
        _customEvent_nextLevel: function() {
          var a =
            this;
          this._LevelDone || (this._LevelDone = !0, R.contains(p.engine.getGameAttribute("Completed Levels"), this._LevelNumber) || p.engine.getGameAttribute("Completed Levels").push(this._LevelNumber), u.runLater(500, function(b) {
            a._LevelNumber == u.getGameAttribute("Level Count") ? a._TempText = "End Scene" : (a._TempText = 9 > a._LevelNumber ? "Level 0" + (a._LevelNumber + 1) : "Level " + (a._LevelNumber + 1), p.engine.gameAttributes.h["Current Level"] = a._LevelNumber + 1);
            Mg._customBlock_saveGame("Resizer");
            b = Bb.get().scenes;
            var c = u.getIDForScene(a._TempText);
            null == b.h[c] && (a._TempText = "Main Menu");
            b = Bb.get().scenes;
            c = u.getIDForScene(a._TempText);
            ob.switchScene(b.h[c].getID(), ob.tileTransition(.6, 16, 16, 0, null, null, "random"), null)
          }, null))
        },
        _customEvent_reload: function() {
          for (var a = 0, b = u.getActorsOfType(u.getActorType(1)); a < b.length;) {
            var c = b[a];
            ++a;
            null == c || c.dead || c.recycled || c.getValue("Player Behavior", "_Dead") || c.setIgnoreGravity(!0)
          }
          a = Bb.get().scenes;
          b = u.getIDForScene(u.getCurrentSceneName());
          ob.switchScene(a.h[b].getID(), ob.tileTransition(.6, 16, 16,
            0, null, null, "random"), null)
        },
        _customBlock_getLevelDone: function() {
          return this._LevelDone
        },
        init: function() {
          this._LevelDone = !1;
          var a = u.getCurrentSceneName().substring(5, 8);
          this._LevelNumber = null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a));
          a = 0;
          for (var b = K.__cast(u.getActorGroup(4), zg).list; a < b.length;) {
            var c = b[a];
            ++a;
            null == c || c.dead || c.recycled || c.moveToBottom()
          }
          a = 0;
          for (b = K.__cast(u.getActorGroup(5), zg).list; a < b.length;) c = b[a], ++a, null == c || c.dead || c.recycled || c.moveToBottom();
          a = 0;
          for (b = K.__cast(u.getActorGroup(6), zg).list; a < b.length;) c = b[a], ++a, null == c || c.dead || c.recycled || c.moveToBottom();
          a = 0;
          for (b = K.__cast(u.getActorGroup(8), zg).list; a < b.length;) c = b[a], ++a, null == c || c.dead || c.recycled || c.moveToBottom();
          a = 0;
          5 == this._LevelNumber ? a = 90 : 15 == this._LevelNumber ? a = 100 : 16 == this._LevelNumber ? a = 420 : 17 == this._LevelNumber && (a = 60);
          "End Scene" != u.getCurrentSceneName() && u.attachImageToHUD(ud._customBlock_instanceOfText("" +
            this._LevelNumber, u.getFont(58)), (null == a ? 0 : "number" == typeof a ? K.__cast(a, Cc) : "number" == typeof a && (a | 0) === a ? K.__cast(a, rc) : "boolean" == typeof a ? K.__cast(a, Gc) ? 1 : 0 : "string" == typeof a ? parseFloat(a) : parseFloat(M.string(a))) | 0, K.__cast(0, Cc) | 0);
          this.addListener(u.engine.whenUpdated, r(this, this._event_Updating))
        },
        forwardMessage: function(a) {},
        __class__: Rp
      });
      var Ar = function() {};
      k["scripts.MyScripts"] = Ar;
      Ar.__name__ = "scripts.MyScripts";
      var Sp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_1"] = Sp;
      Sp.__name__ =
        "scripts.SceneEvents_1";
      Sp.__super__ = kb;
      Sp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Sp
      });
      var Tp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_10"] = Tp;
      Tp.__name__ = "scripts.SceneEvents_10";
      Tp.__super__ = kb;
      Tp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Tp
      });
      var Up = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_11"] = Up;
      Up.__name__ = "scripts.SceneEvents_11";
      Up.__super__ = kb;
      Up.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Up
      });
      var Vp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_12"] = Vp;
      Vp.__name__ = "scripts.SceneEvents_12";
      Vp.__super__ = kb;
      Vp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Vp
      });
      var Wp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_13"] = Wp;
      Wp.__name__ = "scripts.SceneEvents_13";
      Wp.__super__ = kb;
      Wp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Wp
      });
      var Xp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_14"] =
        Xp;
      Xp.__name__ = "scripts.SceneEvents_14";
      Xp.__super__ = kb;
      Xp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Xp
      });
      var Yp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_15"] = Yp;
      Yp.__name__ = "scripts.SceneEvents_15";
      Yp.__super__ = kb;
      Yp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Yp
      });
      var Zp = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_16"] = Zp;
      Zp.__name__ = "scripts.SceneEvents_16";
      Zp.__super__ = kb;
      Zp.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: Zp
      });
      var $p = function(a, b) {
        u.call(this);
        this.nameMap.h.Row = "_Row";
        this._Row = 0;
        this.nameMap.h.Col = "_Col";
        this._Col = 0
      };
      k["scripts.SceneEvents_17"] = $p;
      $p.__name__ = "scripts.SceneEvents_17";
      $p.__super__ = kb;
      $p.prototype = t(kb.prototype, {
        _Row: null,
        _Col: null,
        init: function() {},
        forwardMessage: function(a) {},
        __class__: $p
      });
      var aq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_18"] = aq;
      aq.__name__ = "scripts.SceneEvents_18";
      aq.__super__ = kb;
      aq.prototype =
        t(kb.prototype, {
          init: function() {},
          forwardMessage: function(a) {},
          __class__: aq
        });
      var bq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_19"] = bq;
      bq.__name__ = "scripts.SceneEvents_19";
      bq.__super__ = kb;
      bq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: bq
      });
      var cq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_2"] = cq;
      cq.__name__ = "scripts.SceneEvents_2";
      cq.__super__ = kb;
      cq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: cq
      });
      var dq =
        function(a, b) {
          u.call(this)
        };
      k["scripts.SceneEvents_20"] = dq;
      dq.__name__ = "scripts.SceneEvents_20";
      dq.__super__ = kb;
      dq.prototype = t(kb.prototype, {
        _customEvent_toMenu: function() {
          u.setVolumeForChannel(p.engine.getGameAttribute("Music Volume") / 100, 30);
          u.loopSoundOnChannel(u.getSound(59), 30);
          var a = Bb.get().scenes.h[23].getID(),
            b = 0,
            c = 0,
            d = 0;
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          var e = u.createFadeOut(.4, b << 16 | c << 8 | d);
          d = c = b = 0;
          null == d && (d = 0);
          null == c && (c = 0);
          null == b && (b = 0);
          u.switchScene(a, e, u.createFadeIn(.4,
            b << 16 | c << 8 | d))
        },
        init: function() {
          var a = this;
          ob.setDurationPad(.1);
          Mg._customBlock_loadGame("Resizer");
          p.stage.showDefaultContextMenu = !1;
          u.setGameAttribute("Level Count", 20);
          u.setSavable("Level Count", !1);
          u.createRecycledActor(u.getActorType(79), 80, 0, 0);
          u.getLastCreatedActor().set_alpha(0);
          u.getLastCreatedActor().fadeTo(1, 1.5, qa.linear);
          u.runLater(2E3, function(b) {
            a._customEvent_toMenu()
          }, null)
        },
        forwardMessage: function(a) {},
        __class__: dq
      });
      var eq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_21"] =
        eq;
      eq.__name__ = "scripts.SceneEvents_21";
      eq.__super__ = kb;
      eq.prototype = t(kb.prototype, {
        init: function() {
          u.attachImageToHUD(ud._customBlock_instanceOfText("MOVE: W/A/D OR ARROW KEYS", u.getFont(54)), 10, 200);
          u.attachImageToHUD(ud._customBlock_instanceOfText("RESET: R", u.getFont(54)), 10, 225);
          u.attachImageToHUD(ud._customBlock_instanceOfText("BACK: ESC OR B", u.getFont(54)), 10, 250)
        },
        forwardMessage: function(a) {},
        __class__: eq
      });
      var fq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_22"] = fq;
      fq.__name__ = "scripts.SceneEvents_22";
      fq.__super__ = kb;
      fq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: fq
      });
      var gq = function(a, b) {
        u.call(this);
        this.nameMap.h.Option = "_Option";
        this._Option = 0;
        this.nameMap.h["X Start"] = "_XStart";
        this._XStart = 0;
        this.nameMap.h["Y Start"] = "_YStart";
        this._YStart = 0;
        this.nameMap.h["Y Spacing"] = "_YSpacing";
        this._YSpacing = 0;
        this.nameMap.h["Sound Vol Inst"] = "_SoundVolInst";
        this.nameMap.h["Music Vol Inst"] = "_MusicVolInst";
        this.nameMap.h["Title Small"] = "_TitleSmall";
        this.nameMap.h["Title Med"] =
          "_TitleMed";
        this.nameMap.h["Title Large"] = "_TitleLarge";
        this.nameMap.h["Title Number"] = "_TitleNumber";
        this._TitleNumber = 0;
        this.nameMap.h["AG More Games"] = "_AGMoreGames";
        this.nameMap.h["AG Like Us"] = "_AGLikeUs"
      };
      k["scripts.SceneEvents_23"] = gq;
      gq.__name__ = "scripts.SceneEvents_23";
      gq.__super__ = kb;
      gq.prototype = t(kb.prototype, {
        _Option: null,
        _XStart: null,
        _YStart: null,
        _YSpacing: null,
        _SoundVolInst: null,
        _MusicVolInst: null,
        _TitleSmall: null,
        _TitleMed: null,
        _TitleLarge: null,
        _TitleNumber: null,
        _AGMoreGames: null,
        _AGLikeUs: null,
        _event_Updating: function(a) {
          if (this.wrapper.enabled && !u.isTransitioning()) {
            u.isKeyPressed("Up") || u.isKeyPressed("W") ? 1 < this._Option && (--this._Option, this._customEvent_updateDisplay()) : (u.isKeyPressed("Down") || u.isKeyPressed("S")) && 3 > this._Option && (this._Option += 1, this._customEvent_updateDisplay());
            if ((u.isKeyPressed("Space") || u.isKeyPressed("Enter")) && 1 == this._Option) {
              if (0 == p.engine.getGameAttribute("Completed Levels").length) {
                a = Bb.get().scenes.h[21].getID();
                var b = 0,
                  c = 0,
                  d = 0;
                null == d &&
                  (d = 0);
                null == c && (c = 0);
                null == b && (b = 0);
                var e = u.createFadeOut(.5, b << 16 | c << 8 | d)
              } else a = Bb.get().scenes.h[24].getID(), d = c = b = 0, null == d && (d = 0), null == c && (c = 0), null == b && (b = 0), e = u.createFadeOut(.5, b << 16 | c << 8 | d);
              d = c = b = 0;
              null == d && (d = 0);
              null == c && (c = 0);
              null == b && (b = 0);
              u.switchScene(a, e, u.createFadeIn(.5, b << 16 | c << 8 | d))
            }
            if (u.isKeyDown("Left") || u.isKeyDown("A")) 2 == this._Option ? 0 < p.engine.getGameAttribute("Sound Volume") && (a = p.engine, b = p.engine.getGameAttribute("Sound Volume") - 1, a.gameAttributes.h["Sound Volume"] = b,
              this._customEvent_changeSound()) : 3 == this._Option && 0 < p.engine.getGameAttribute("Music Volume") && (a = p.engine, b = p.engine.getGameAttribute("Music Volume") - 1, a.gameAttributes.h["Music Volume"] = b, this._customEvent_changeMusic());
            else if (u.isKeyDown("Right") || u.isKeyDown("D")) 2 == this._Option ? 100 > p.engine.getGameAttribute("Sound Volume") && (a = p.engine, b = p.engine.getGameAttribute("Sound Volume") + 1, a.gameAttributes.h["Sound Volume"] = b, this._customEvent_changeSound()) : 3 == this._Option && 100 > p.engine.getGameAttribute("Music Volume") &&
              (a = p.engine, b = p.engine.getGameAttribute("Music Volume") + 1, a.gameAttributes.h["Music Volume"] = b, this._customEvent_changeMusic())
          }
        },
        _customEvent_updateDisplay: function() {
          2 == this._Option ? this._SoundVolInst.set_alpha(1) : this._SoundVolInst.set_alpha(0);
          3 == this._Option ? this._MusicVolInst.set_alpha(1) : this._MusicVolInst.set_alpha(0);
          for (var a = 0, b = u.getActorsOfType(u.getActorType(39)); a < b.length;) {
            var c = b[a];
            ++a;
            null == c || c.dead || c.recycled || c.setY(this._YStart + this._YSpacing * (this._Option - 1) + 3)
          }
        },
        _customEvent_changeSound: function() {
          u.clearImage(ud._customBlock_imageOfInstance(this._SoundVolInst));
          u.drawTextOnImage(ud._customBlock_imageOfInstance(this._SoundVolInst), "<" + (M.string(p.engine.getGameAttribute("Sound Volume")) + ">"), 0, 0, u.getFont(58));
          for (var a = 0; 30 > a;) {
            var b = a++;
            u.setVolumeForChannel(p.engine.getGameAttribute("Sound Volume") / 100, b)
          }
        },
        _customEvent_changeMusic: function() {
          u.clearImage(ud._customBlock_imageOfInstance(this._MusicVolInst));
          u.drawTextOnImage(ud._customBlock_imageOfInstance(this._MusicVolInst), "<" + (M.string(p.engine.getGameAttribute("Music Volume")) + ">"), 0, 0, u.getFont(58));
          u.setVolumeForChannel(p.engine.getGameAttribute("Music Volume") / 100, 30)
        },
        _customEvent_updateTitle: function() {
          this._TitleNumber = 4 == this._TitleNumber ? 1 : this._TitleNumber + 1;
          1 == this._TitleNumber ? (this._TitleSmall.set_alpha(1), this._TitleMed.set_alpha(0), this._TitleLarge.set_alpha(0)) : 2 == this._TitleNumber ? (this._TitleSmall.set_alpha(0), this._TitleMed.set_alpha(1), this._TitleLarge.set_alpha(0)) : 3 == this._TitleNumber ? (this._TitleSmall.set_alpha(0), this._TitleMed.set_alpha(0), this._TitleLarge.set_alpha(1)) :
            4 == this._TitleNumber && (this._TitleSmall.set_alpha(0), this._TitleMed.set_alpha(1), this._TitleLarge.set_alpha(0))
        },
        init: function() {
          var a = this;
          this._Option = 1;
          this._XStart = 166;
          this._YStart = 133;
          this._YSpacing = 32;
          this._TitleNumber = 1;
          this._TitleSmall = ud._customBlock_instanceOfText("RESIZER", u.getFont(69));
          u.attachImageToHUD(this._TitleSmall, Math.round((u.getScreenWidth() - u.getFont(69).getTextWidth("RESIZER") / p.SCALE) / 2), 50 - Math.round(u.getFont(69).getHeight() / p.SCALE / 2));
          this._TitleMed = ud._customBlock_instanceOfText("RESIZER",
            u.getFont(68));
          this._TitleMed.set_alpha(0);
          u.attachImageToHUD(this._TitleMed, Math.round((u.getScreenWidth() - u.getFont(68).getTextWidth("RESIZER") / p.SCALE) / 2), 50 - Math.round(u.getFont(68).getHeight() / p.SCALE / 2));
          this._TitleLarge = ud._customBlock_instanceOfText("RESIZER", u.getFont(67));
          this._TitleLarge.set_alpha(0);
          u.attachImageToHUD(this._TitleLarge, Math.round((u.getScreenWidth() - u.getFont(67).getTextWidth("RESIZER") / p.SCALE) / 2), 50 - Math.round(u.getFont(67).getHeight() / p.SCALE / 2));
          u.attachImageToHUD(ud._customBlock_instanceOfText("START",
            u.getFont(58)), this._XStart | 0, this._YStart + 0 * this._YSpacing | 0);
          u.attachImageToHUD(ud._customBlock_instanceOfText("SOUND", u.getFont(58)), this._XStart | 0, this._YStart + this._YSpacing | 0);
          this._SoundVolInst = ud._customBlock_instanceOfText("<100>", u.getFont(58));
          this._SoundVolInst.set_alpha(0);
          this._customEvent_changeSound();
          u.attachImageToHUD(this._SoundVolInst, this._XStart + 80 | 0, this._YStart + this._YSpacing | 0);
          u.attachImageToHUD(ud._customBlock_instanceOfText("MUSIC", u.getFont(58)), this._XStart | 0, this._YStart +
            2 * this._YSpacing | 0);
          this._MusicVolInst = ud._customBlock_instanceOfText("<100>", u.getFont(58));
          this._MusicVolInst.set_alpha(0);
          this._customEvent_changeMusic();
          u.attachImageToHUD(this._MusicVolInst, this._XStart + 80 | 0, this._YStart + 2 * this._YSpacing | 0);
          u.createRecycledActor(u.getActorType(39), this._XStart - 30, this._YStart + 3, 0);
          u.attachImageToHUD(ud._customBlock_instanceOfText("BY ROBERT ALVAREZ", u.getFont(58)), 7, 293);
          u.runPeriodically(400, function(b) {
            a._customEvent_updateTitle()
          }, null);
          this.addListener(u.engine.whenUpdated,
            r(this, this._event_Updating))
        },
        forwardMessage: function(a) {},
        __class__: gq
      });
      var hq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_24"] = hq;
      hq.__name__ = "scripts.SceneEvents_24";
      hq.__super__ = kb;
      hq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: hq
      });
      var iq = function(a, b) {
        u.call(this);
        this.nameMap.h["Instance 1"] = "_Instance1";
        this.nameMap.h["Instance 2"] = "_Instance2"
      };
      k["scripts.SceneEvents_25"] = iq;
      iq.__name__ = "scripts.SceneEvents_25";
      iq.__super__ = kb;
      iq.prototype =
        t(kb.prototype, {
          _Instance1: null,
          _Instance2: null,
          init: function() {
            var a = this;
            this._Instance1 = ud._customBlock_instanceOfText("THANKS FOR", u.getFont(66));
            this._Instance2 = ud._customBlock_instanceOfText("PLAYING", u.getFont(66));
            this._Instance1.set_alpha(0);
            this._Instance2.set_alpha(0);
            u.attachImageToHUD(this._Instance1, Math.round((u.getScreenWidth() - u.getFont(66).getTextWidth("THANKS FOR") / p.SCALE) / 2), 20);
            u.attachImageToHUD(this._Instance2, Math.round((u.getScreenWidth() - u.getFont(66).getTextWidth("PLAYING") /
              p.SCALE) / 2), 60);
            u.runLater(500, function(b) {
              u.fadeImageTo(a._Instance1, 1, 1, qa.linear);
              u.fadeImageTo(a._Instance2, 1, 1, qa.linear)
            }, null)
          },
          forwardMessage: function(a) {},
          __class__: iq
        });
      var jq = function(a, b) {
        u.call(this);
        this.nameMap.h["Title Bool"] = "_TitleBool";
        this._TitleBool = !1
      };
      k["scripts.SceneEvents_26"] = jq;
      jq.__name__ = "scripts.SceneEvents_26";
      jq.__super__ = kb;
      jq.prototype = t(kb.prototype, {
        _TitleBool: null,
        _event_Drawing: function(a, b, c) {
          if (this.wrapper.enabled) {
            b = this._TitleBool ? u.getFont(58) : u.getFont(69);
            null != b && b != a.font && (a.font = b, a.font == a.defaultFont ? (a.fontData = eb.fontCache.h[-1], null == a.fontData && (a.fontData = a.font.font.getPreparedGlyphs(a.font.fontScale, 0, !0), eb.fontCache.h[-1] = a.fontData)) : (a.fontData = eb.fontCache.h[a.font.ID], null == a.fontData && (a.fontData = a.font.font.getPreparedGlyphs(a.font.fontScale, 0, !1), eb.fontCache.h[a.font.ID] = a.fontData)));
            null == a.font && (a.font = a.defaultFont, a.font.fontScale != p.SCALE && (a.font.fontScale = p.SCALE, a.font = null, eb.fontCache.h[-1] = null, b = a.defaultFont, null !=
              b && b != a.font && (a.font = b, a.font == a.defaultFont ? (a.fontData = eb.fontCache.h[-1], null == a.fontData && (a.fontData = a.font.font.getPreparedGlyphs(a.font.fontScale, 0, !0), eb.fontCache.h[-1] = a.fontData)) : (a.fontData = eb.fontCache.h[a.font.ID], null == a.fontData && (a.fontData = a.font.font.getPreparedGlyphs(a.font.fontScale, 0, !1), eb.fontCache.h[a.font.ID] = a.fontData)))));
            a.drawActor ? null != a.actor && a.actor.isHUD ? (b = a.x + 227 * a.scaleX, c = a.y + 188 * a.scaleY) : (b = a.x + 227 * a.scaleX - p.cameraX, c = a.y + 188 * a.scaleY - p.cameraY) : (b = a.x +
              227 * a.scaleX, c = a.y + 188 * a.scaleY);
            a.mtx.identity();
            a.mtx.translate(b, c);
            var d = null,
              e = a.font;
            e = "RESIZER:" + e.ID + ":" + a.alpha + ":" + p.SCALE + ":" + e.get_letterSpacing();
            if (Object.prototype.hasOwnProperty.call(eb.drawnStringCache.h, e)) {
              var f = eb.drawnStringCache.h[e];
              f.lifetime = 5;
              d = f.img
            } else {
              f = a.font.font.getTextWidth("RESIZER", a.font.fontScale);
              var g = a.font.font.getFontHeight() * a.font.fontScale | 0;
              0 < f && 0 < g && (d = new wa(f, g, !0, 0), a.font.font.render(d, a.fontData, "RESIZER", 0, a.alpha, 0, 0, a.font.fontScale, 0), f = new il,
                f.img = d, f.lifetime = 5, eb.drawnStringCache.h[e] = f, eb.drawnStringCacheKeys.push(e))
            }
            null != d && (a.graphics.beginBitmapFill(d, a.mtx, !1, ka.antialias), a.graphics.drawRect(b, c, d.width, d.height), a.graphics.endFill())
          }
        },
        init: function() {
          var a = this;
          this._TitleBool = !1;
          u.runPeriodically(400, function(b) {
            a._TitleBool = !a._TitleBool
          }, null);
          this.addListener(u.engine.whenDrawing, r(this, this._event_Drawing))
        },
        forwardMessage: function(a) {},
        __class__: jq
      });
      var kq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_3"] = kq;
      kq.__name__ =
        "scripts.SceneEvents_3";
      kq.__super__ = kb;
      kq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: kq
      });
      var lq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_4"] = lq;
      lq.__name__ = "scripts.SceneEvents_4";
      lq.__super__ = kb;
      lq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: lq
      });
      var mq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_5"] = mq;
      mq.__name__ = "scripts.SceneEvents_5";
      mq.__super__ = kb;
      mq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: mq
      });
      var nq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_6"] = nq;
      nq.__name__ = "scripts.SceneEvents_6";
      nq.__super__ = kb;
      nq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: nq
      });
      var oq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_7"] = oq;
      oq.__name__ = "scripts.SceneEvents_7";
      oq.__super__ = kb;
      oq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: oq
      });
      var pq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_8"] =
        pq;
      pq.__name__ = "scripts.SceneEvents_8";
      pq.__super__ = kb;
      pq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: pq
      });
      var qq = function(a, b) {
        u.call(this)
      };
      k["scripts.SceneEvents_9"] = qq;
      qq.__name__ = "scripts.SceneEvents_9";
      qq.__super__ = kb;
      qq.prototype = t(kb.prototype, {
        init: function() {},
        forwardMessage: function(a) {},
        __class__: qq
      });
      var rq = function() {};
      k["scripts.SplashBox"] = rq;
      rq.__name__ = "scripts.SplashBox";
      rq.prototype = {
        __class__: rq
      };
      var hh = function() {
        this.onComplete = new Pd;
        var a = this;
        Z.call(this);
        Ja.get_current().addChild(this);
        this.locked = !1;
        var b = p.SCALE,
          c = "";
        this.background = new Z;
        this.background.get_graphics().beginFill(-15592942, 1);
        this.background.get_graphics().drawRect(0, 0, this.getWidth(), this.getHeight());
        this.addChild(this.background);
        R.getConfigBitmap("config/preloader-bg.png").onComplete(function(b) {
          a.addChildAt(b, a.getChildIndex(a.background) + 1)
        });
        var d = 0 * b;
        this.barWidth = b * p.screenScaleX * 0 | 0;
        this.barHeight = b * p.screenScaleY * 0 | 0;
        c = 0 * b;
        var e = 0 * b,
          f = this.getWidth() /
          2 - this.barWidth / 2;
        this.barBorder = new Z;
        this.barBorder.get_graphics().beginFill(-12303292, 1);
        this.barBorder.get_graphics().drawRect(-d, -d, this.barWidth + 2 * d, this.barHeight + 2 * d);
        this.barBorder.set_x(f + c);
        this.barBorder.set_y(d + e);
        this.addChild(this.barBorder);
        this.barBackground = new Z;
        this.barBackground.get_graphics().beginFill(-12303292, 1);
        this.barBackground.get_graphics().drawRect(0, 0, this.barWidth, this.barHeight);
        this.barBackground.set_x(f + c);
        this.barBackground.set_y(d + e);
        this.barBackground.set_scaleX(1);
        this.addChild(this.barBackground);
        this.bar = new Z;
        this.bar.get_graphics().beginFill(-7829368, 1);
        this.bar.get_graphics().drawRect(0, 0, this.barWidth, this.barHeight);
        b = new ha(0, 0, 0, this.barHeight);
        this.bar.set_scrollRect(b);
        this.bar.set_x(f + c);
        this.bar.set_y(d + e);
        this.addChild(this.bar);
        "" != this.getURL() && this.addEventListener("mouseDown", r(this, this.onMouseDown), !1, 2);
        c = this.getLockURL();
        if (this.isSiteLocked() && null != c && "" != c) {
          b = !1;
          d = Ja.get_current().get_loaderInfo().url;
          if (null == d) b = !0;
          else if (0 > d.indexOf("http://") &&
            0 > d.indexOf("https://")) b = !0;
          else if (0 < d.indexOf("stencyl.com") || 0 < d.indexOf("localhost")) b = !0;
          if (!b) {
            c = c.split(",");
            for (e = 0; e < c.length;) f = c[e], ++e, f = W.trim(f), 0 <= f.indexOf("*") || W.startsWith(f, "^") && W.endsWith(f, "$") ? (b = new nb(f, ""), b = b.match(d)) : 0 <= d.indexOf(f) && (b = !0);
            b || this.showLockScreen(c[0])
          }
        }
      };
      k["scripts.StencylPreloader"] = hh;
      hh.__name__ = "scripts.StencylPreloader";
      hh.loadError = function() {
        var a = K.__cast(Ja.get_current().getChildAt(Ja.get_current().get_numChildren() - 1), hh),
          b = new Ac(new wa(a.getWidth() |
            0, 100, !1, 5658198));
        a.addChild(b);
        b = new Se;
        b.set_width(a.getWidth() - 16);
        b.set_height(84);
        b.set_x(8);
        b.set_y(8);
        b.set_textColor(16777215);
        b.set_multiline(!0);
        b.set_wordWrap(!0);
        b.set_text("Loading error!  Try reloading the page.");
        var c = new wg(null, 25);
        b.setTextFormat(c);
        a.addChild(b)
      };
      hh.__super__ = Z;
      hh.prototype = t(Z.prototype, {
        barBorder: null,
        bar: null,
        barBackground: null,
        background: null,
        barWidth: null,
        barHeight: null,
        locked: null,
        onComplete: null,
        adPlaying: null,
        ready: null,
        getLockURL: function() {
          return ""
        },
        isSiteLocked: function() {
          return !1
        },
        showLockScreen: function(a) {
          this.locked = !0;
          R.removeAllChildren(this);
          var b = new Ac(new wa(this.getWidth() | 0, this.getHeight() | 0, !1, 5658198));
          this.addChild(b);
          var c = new Se;
          c.set_width(this.getWidth() - 16);
          c.set_height(this.getHeight() - 16);
          c.set_x(8);
          c.set_y(8);
          c.set_textColor(16777215);
          c.set_multiline(!0);
          c.set_wordWrap(!0);
          c.set_text("Hi there!  It looks like somebody copied this game without my permission. Just click anywhere, or copy-paste this URL into your browser.\n\n" +
            a + "\n\nThanks, and have fun!");
          a = new wg(null, 25);
          c.setTextFormat(a);
          this.addChild(c);
          this.removeEventListener("mouseDown", r(this, this.onMouseDown));
          c.addEventListener("click", r(this, this.goToLockURL));
          b.addEventListener("click", r(this, this.goToLockURL))
        },
        getURL: function() {
          return ""
        },
        goToLockURL: function(a) {
          Ja.getURL(new Sg(this.getLockURL().split(",")[0]), "_parent")
        },
        onMouseDown: function(a) {
          this.removeEventListener("mouseDown", r(this, this.onMouseDown));
          Ja.getURL(new Sg(this.getURL()), "_blank")
        },
        getBackgroundColor: function() {
          return 3368601
        },
        getWidth: function() {
          return V.windowWidth
        },
        getHeight: function() {
          return V.windowHeight
        },
        onUpdate: function(a, b) {
          Ja.get_current().get_loaderInfo().__update(a, b);
          null != this.bar && (a = new ha(0, 0, a / b * this.barWidth, this.barHeight), this.bar.set_scrollRect(a))
        },
        onLoaded: function() {
          Ja.get_current().get_loaderInfo().__complete();
          this.ready = !0;
          this.adPlaying || this.unload()
        },
        adFinished: function() {
          this.adPlaying = !1;
          this.ready && this.unload()
        },
        unload: function() {
          new rq;
          this.isSiteLocked() && this.locked || (this.parent ==
            Ja.get_current() && Ja.get_current().removeChild(this), Ja.get_current().stage.set_focus(null), this.onComplete.dispatch())
        },
        __class__: hh
      });
      var Kb = function() {};
      k["tweenxcore.Easing"] = Kb;
      Kb.__name__ = "tweenxcore.Easing";
      Kb.linear = function(a) {
        return a
      };
      Kb.sineIn = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : 1 - Math.cos(1.5707963267948966 * a)
      };
      Kb.sineOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : Math.sin(1.5707963267948966 * a)
      };
      Kb.sineInOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : -.5 * (Math.cos(3.141592653589793 * a) - 1)
      };
      Kb.sineOutIn = function(a) {
        return 0 ==
          a ? 0 : 1 == a ? 1 : .5 > a ? .5 * Math.sin(3.141592653589793 * a) : -.5 * Math.cos(1.5707963267948966 * (2 * a - 1)) + 1
      };
      Kb.quadIn = function(a) {
        return a * a
      };
      Kb.quadOut = function(a) {
        return -a * (a - 2)
      };
      Kb.quadInOut = function(a) {
        return .5 > a ? 2 * a * a : -2 * --a * a + 1
      };
      Kb.quadOutIn = function(a) {
        if (.5 > a) return -.5 * (a *= 2) * (a - 2);
        a = 2 * a - 1;
        return .5 * a * a + .5
      };
      Kb.cubicIn = function(a) {
        return a * a * a
      };
      Kb.cubicOut = function(a) {
        return --a * a * a + 1
      };
      Kb.cubicInOut = function(a) {
        return 1 > (a *= 2) ? .5 * a * a * a : .5 * ((a -= 2) * a * a + 2)
      };
      Kb.cubicOutIn = function(a) {
        a = 2 * a - 1;
        return .5 * (a * a * a + 1)
      };
      Kb.quartIn = function(a) {
        return (a *= a) * a
      };
      Kb.quartOut = function(a) {
        a *= --a;
        return 1 - a * a
      };
      Kb.quartInOut = function(a) {
        if (1 > (a *= 2)) return .5 * (a *= a) * a;
        a *= a -= 2;
        return -.5 * (a * a - 2)
      };
      Kb.quartOutIn = function(a) {
        if (.5 > a) return a = 2 * a - 1, -.5 * (a *= a) * a + .5;
        a = 2 * a - 1;
        return .5 * (a *= a) * a + .5
      };
      Kb.quintIn = function(a) {
        return a * (a *= a) * a
      };
      Kb.quintOut = function(a) {
        return --a * (a *= a) * a + 1
      };
      Kb.quintInOut = function(a) {
        return 1 > (a *= 2) ? .5 * a * (a *= a) * a : .5 * (a -= 2) * (a *= a) * a + 1
      };
      Kb.quintOutIn = function(a) {
        a = 2 * a - 1;
        return .5 * (a * (a *= a) * a + 1)
      };
      Kb.expoIn = function(a) {
        return 0 ==
          a ? 0 : Math.exp(6.931471805599453 * (a - 1))
      };
      Kb.expoOut = function(a) {
        return 1 == a ? 1 : 1 - Math.exp(-6.931471805599453 * a)
      };
      Kb.expoInOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : 1 > (a *= 2) ? .5 * Math.exp(6.931471805599453 * (a - 1)) : .5 * (2 - Math.exp(-6.931471805599453 * (a - 1)))
      };
      Kb.expoOutIn = function(a) {
        return .5 > a ? .5 * (1 - Math.exp(-13.862943611198906 * a)) : .5 == a ? .5 : .5 * (Math.exp(13.862943611198906 * (a - 1)) + 1)
      };
      Kb.circIn = function(a) {
        return -1 > a || 1 < a ? 0 : 1 - Math.sqrt(1 - a * a)
      };
      Kb.circOut = function(a) {
        return 0 > a || 2 < a ? 0 : Math.sqrt(a * (2 - a))
      };
      Kb.circInOut =
        function(a) {
          return -.5 > a || 1.5 < a ? .5 : 1 > (a *= 2) ? -.5 * (Math.sqrt(1 - a * a) - 1) : .5 * (Math.sqrt(1 - (a -= 2) * a) + 1)
        };
      Kb.circOutIn = function(a) {
        if (0 > a) return 0;
        if (1 < a) return 1;
        if (.5 > a) return a = 2 * a - 1, .5 * Math.sqrt(1 - a * a);
        a = 2 * a - 1;
        return -.5 * (Math.sqrt(1 - a * a) - 1 - 1)
      };
      Kb.bounceIn = function(a) {
        a = 1 - a;
        return .36363636363636365 > a ? 1 - 7.5625 * a * a : .7272727272727273 > a ? 1 - (7.5625 * (a -= .5454545454545454) * a + .75) : .9090909090909091 > a ? 1 - (7.5625 * (a -= .8181818181818182) * a + .9375) : 1 - (7.5625 * (a -= .9545454545454546) * a + .984375)
      };
      Kb.bounceOut = function(a) {
        return .36363636363636365 >
          a ? 7.5625 * a * a : .7272727272727273 > a ? 7.5625 * (a -= .5454545454545454) * a + .75 : .9090909090909091 > a ? 7.5625 * (a -= .8181818181818182) * a + .9375 : 7.5625 * (a -= .9545454545454546) * a + .984375
      };
      Kb.bounceInOut = function(a) {
        if (.5 > a) return a = 1 - 2 * a, .36363636363636365 > a ? .5 * (1 - 7.5625 * a * a) : .7272727272727273 > a ? .5 * (1 - (7.5625 * (a -= .5454545454545454) * a + .75)) : .9090909090909091 > a ? .5 * (1 - (7.5625 * (a -= .8181818181818182) * a + .9375)) : .5 * (1 - (7.5625 * (a -= .9545454545454546) * a + .984375));
        a = 2 * a - 1;
        return .36363636363636365 > a ? 7.5625 * a * a * .5 + .5 : .7272727272727273 >
          a ? .5 * (7.5625 * (a -= .5454545454545454) * a + .75) + .5 : .9090909090909091 > a ? .5 * (7.5625 * (a -= .8181818181818182) * a + .9375) + .5 : .5 * (7.5625 * (a -= .9545454545454546) * a + .984375) + .5
      };
      Kb.bounceOutIn = function(a) {
        if (.5 > a) return .36363636363636365 > (a *= 2) ? 3.78125 * a * a : .7272727272727273 > a ? .5 * (7.5625 * (a -= .5454545454545454) * a + .75) : .9090909090909091 > a ? .5 * (7.5625 * (a -= .8181818181818182) * a + .9375) : .5 * (7.5625 * (a -= .9545454545454546) * a + .984375);
        a = 1 - (2 * a - 1);
        return .36363636363636365 > a ? .5 - 3.78125 * a * a + .5 : .7272727272727273 > a ? .5 - .5 * (7.5625 * (a -=
          .5454545454545454) * a + .75) + .5 : .9090909090909091 > a ? .5 - .5 * (7.5625 * (a -= .8181818181818182) * a + .9375) + .5 : .5 - .5 * (7.5625 * (a -= .9545454545454546) * a + .984375) + .5
      };
      Kb.backIn = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : a * a * (2.70158 * a - 1.70158)
      };
      Kb.backOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : --a * a * (2.70158 * a + 1.70158) + 1
      };
      Kb.backInOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : 1 > (a *= 2) ? .5 * a * a * (3.5949095 * a - 2.5949095) : .5 * ((a -= 2) * a * (3.5949095 * a + 2.5949095) + 2)
      };
      Kb.backOutIn = function(a) {
        if (0 == a) return 0;
        if (1 == a) return 1;
        if (.5 > a) return a = 2 * a - 1, .5 *
          (a * a * (2.70158 * a + 1.70158) + 1);
        a = 2 * a - 1;
        return .5 * a * a * (2.70158 * a - 1.70158) + .5
      };
      Kb.elasticIn = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : -(Math.exp(6.931471805599453 * --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4))
      };
      Kb.elasticOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : Math.exp(-6.931471805599453 * a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) + 1
      };
      Kb.elasticInOut = function(a) {
        return 0 == a ? 0 : 1 == a ? 1 : 1 > (a *= 2) ? -.5 * Math.exp(6.931471805599453 * --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) : Math.exp(-6.931471805599453 *
          --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) * .5 + 1
      };
      Kb.elasticOutIn = function(a) {
        if (.5 > a) return 0 == (a *= 2) ? 0 : .5 * Math.exp(-6.931471805599453 * a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4) + .5;
        if (.5 == a) return .5;
        if (1 == a) return 1;
        a = 2 * a - 1;
        return -(.5 * Math.exp(6.931471805599453 * --a) * Math.sin(6.283185307179586 * (.001 * a - 7.5E-5) / 3E-4)) + .5
      };
      Kb.warpOut = function(a) {
        return 0 >= a ? 0 : 1
      };
      Kb.warpIn = function(a) {
        return 1 > a ? 0 : 1
      };
      Kb.warpInOut = function(a) {
        return .5 > a ? 0 : 1
      };
      Kb.warpOutIn = function(a) {
        return 0 >= a ? 0 : 1 >
          a ? .5 : 1
      };
      var Jc = function() {};
      k["tweenxcore.FloatTools"] = Jc;
      Jc.__name__ = "tweenxcore.FloatTools";
      Jc.revert = function(a) {
        return 1 - a
      };
      Jc.clamp = function(a, b, c) {
        null == c && (c = 1);
        null == b && (b = 0);
        return a <= b ? b : c <= a ? c : a
      };
      Jc.lerp = function(a, b, c) {
        return b * (1 - a) + c * a
      };
      Jc.inverseLerp = function(a, b, c) {
        return (a - b) / (c - b)
      };
      Jc.repeat = function(a, b, c) {
        null == c && (c = 1);
        null == b && (b = 0);
        a = (a - b) / (c - b);
        return a - Math.floor(a)
      };
      Jc.shake = function(a, b, c) {
        null == b && (b = 0);
        null == c && (c = Math.random);
        c = c();
        return b + (-a * (1 - c) + a * c)
      };
      Jc.spread =
        function(a, b) {
          return -b * (1 - a) + b * a
        };
      Jc.sinByRate = function(a) {
        return Math.sin(2 * a * Math.PI)
      };
      Jc.cosByRate = function(a) {
        return Math.cos(2 * a * Math.PI)
      };
      Jc.yoyo = function(a, b) {
        return b(2 * (.5 > a ? a : 1 - a))
      };
      Jc.zigzag = function(a, b) {
        return .5 > a ? b(2 * a) : 1 - b(2 * (a - .5))
      };
      Jc.mixEasing = function(a, b, c, d) {
        null == d && (d = .5);
        return b(a) * (1 - d) + c(a) * d
      };
      Jc.crossfadeEasing = function(a, b, c, d, e, f) {
        null == f && (f = 1);
        null == e && (e = 0);
        d = d(a);
        e = e * (1 - d) + f * d;
        return b(a) * (1 - e) + c(a) * e
      };
      Jc.connectEasing = function(a, b, c, d, e) {
        null == e && (e = .5);
        null == d &&
          (d = .5);
        if (a < d) return a = b(a / d), 0 * (1 - a) + e * a;
        a = c((a - d) / (1 - d));
        return e * (1 - a) + a
      };
      Jc.oneTwoEasing = function(a, b, c, d) {
        null == d && (d = .5);
        return a < d ? b(a / d) : c((a - d) / (1 - d))
      };
      Jc.binarySearch = function(a, b, c) {
        null == c && (c = 0);
        var d = 0,
          e = a.length;
        if (0 == c)
          for (;;) {
            c = ((e - d) / 2 | 0) + d;
            var f = a[c];
            f <= b ? d = c + 1 : e = c;
            if (d == e) break
          } else
            for (; c = ((e - d) / 2 | 0) + d, f = a[c], f < b ? d = c + 1 : e = c, d != e;);
        return d
      };
      Jc.polyline = function(a, b) {
        if (2 > b.length) throw F.thrown("points length must be more than 2");
        var c = b.length - 1;
        a *= c;
        var d = 0;
        --c;
        null == c && (c =
          1);
        null == d && (d = 0);
        c = Math.floor(a <= d ? d : c <= a ? c : a);
        a -= c;
        return b[c] * (1 - a) + b[c + 1] * a
      };
      Jc.bezier2 = function(a, b, c, d) {
        return (b * (1 - a) + c * a) * (1 - a) + (c * (1 - a) + d * a) * a
      };
      Jc.bezier3 = function(a, b, c, d, e) {
        var f = c * (1 - a) + d * a;
        return ((b * (1 - a) + c * a) * (1 - a) + f * a) * (1 - a) + (f * (1 - a) + (d * (1 - a) + e * a) * a) * a
      };
      Jc.bezier = function(a, b) {
        if (2 > b.length) throw F.thrown("points length must be more than 2");
        if (2 == b.length) return b[0] * (1 - a) + b[1] * a;
        if (3 == b.length) {
          var c = b[1];
          return (b[0] * (1 - a) + c * a) * (1 - a) + (c * (1 - a) + b[2] * a) * a
        }
        return Jc._bezier(a, b)
      };
      Jc._bezier =
        function(a, b) {
          if (4 == b.length) {
            var c = b[1],
              d = b[2],
              e = c * (1 - a) + d * a;
            return ((b[0] * (1 - a) + c * a) * (1 - a) + e * a) * (1 - a) + (e * (1 - a) + (d * (1 - a) + b[3] * a) * a) * a
          }
          c = [];
          d = 0;
          for (e = b.length - 1; d < e;) {
            var f = d++;
            c.push(b[f] * (1 - a) + b[f + 1] * a)
          }
          return Jc._bezier(a, c)
        };
      Jc.uniformQuadraticBSpline = function(a, b) {
        if (2 > b.length) throw F.thrown("points length must be more than 2");
        if (2 == b.length) return b[0] * (1 - a) + b[1] * a;
        var c = b.length - 2;
        a *= c;
        var d = 0;
        --c;
        null == c && (c = 1);
        null == d && (d = 0);
        c = Math.floor(a <= d ? d : c <= a ? c : a);
        a -= c;
        d = b[c];
        var e = b[c + 1];
        return a *
          a * (d / 2 - e + b[c + 2] / 2) + a * (-d + e) + d / 2 + e / 2
      };
      Jc.frameToSecond = function(a, b) {
        return a / b
      };
      Jc.secondToFrame = function(a, b) {
        return a * b
      };
      Jc.degreeToRate = function(a) {
        return a / 360
      };
      Jc.rateToDegree = function(a) {
        return 360 * a
      };
      Jc.radianToRate = function(a) {
        return a / (2 * Math.PI)
      };
      Jc.rateToRadian = function(a) {
        return 2 * a * Math.PI
      };
      Jc.millisecondToBeat = function(a, b) {
        return a * b / 6E4
      };
      Jc.beatToMillisecond = function(a, b) {
        return 6E4 * a / b
      };
      var rk = function() {};
      k["tweenxcore.PointTools"] = rk;
      rk.__name__ = "tweenxcore.PointTools";
      rk.polyline =
        function(a, b, c) {
          var d = [],
            e = [];
          for (c = I(c); c.hasNext();) {
            var f = c.next();
            d.push(f.x);
            e.push(f.y)
          }
          if (2 > d.length) throw F.thrown("points length must be more than 2");
          var g = d.length - 1;
          c = b * g;
          f = 0;
          --g;
          null == g && (g = 1);
          null == f && (f = 0);
          f = Math.floor(c <= f ? f : g <= c ? g : c);
          c -= f;
          d = d[f] * (1 - c) + d[f + 1] * c;
          a.x = d;
          if (2 > e.length) throw F.thrown("points length must be more than 2");
          g = e.length - 1;
          c = b * g;
          f = 0;
          --g;
          null == g && (g = 1);
          null == f && (f = 0);
          f = Math.floor(c <= f ? f : g <= c ? g : c);
          c -= f;
          d = e[f] * (1 - c) + e[f + 1] * c;
          a.y = d
        };
      rk.bezier2 = function(a, b, c, d, e) {
        e =
          d.x;
        a.x = (c.x * (1 - b) + e * b) * (1 - b) + (e * (1 - b) + c.x * b) * b;
        e = d.y;
        a.y = (c.y * (1 - b) + e * b) * (1 - b) + (e * (1 - b) + c.y * b) * b
      };
      rk.bezier3 = function(a, b, c, d, e, f) {
        f = d.x;
        var g = e.x,
          h = f * (1 - b) + g * b;
        a.x = ((c.x * (1 - b) + f * b) * (1 - b) + h * b) * (1 - b) + (h * (1 - b) + (g * (1 - b) + c.x * b) * b) * b;
        f = d.y;
        g = e.y;
        h = f * (1 - b) + g * b;
        a.y = ((c.y * (1 - b) + f * b) * (1 - b) + h * b) * (1 - b) + (h * (1 - b) + (g * (1 - b) + c.y * b) * b) * b
      };
      rk.bezier = function(a, b, c) {
        var d = [],
          e = [];
        for (c = I(c); c.hasNext();) {
          var f = c.next();
          d.push(f.x);
          e.push(f.y)
        }
        if (2 > d.length) throw F.thrown("points length must be more than 2");
        2 == d.length ?
          d = d[0] * (1 - b) + d[1] * b : 3 == d.length ? (c = d[1], d = (d[0] * (1 - b) + c * b) * (1 - b) + (c * (1 - b) + d[2] * b) * b) : d = Jc._bezier(b, d);
        a.x = d;
        if (2 > e.length) throw F.thrown("points length must be more than 2");
        2 == e.length ? d = e[0] * (1 - b) + e[1] * b : 3 == e.length ? (c = e[1], d = (e[0] * (1 - b) + c * b) * (1 - b) + (c * (1 - b) + e[2] * b) * b) : d = Jc._bezier(b, e);
        a.y = d
      };
      rk.uniformQuadraticBSpline = function(a, b, c) {
        for (var d = [], e = [], f = I(c); f.hasNext();) c = f.next(), d.push(c.x), e.push(c.y);
        if (2 > d.length) throw F.thrown("points length must be more than 2");
        if (2 == d.length) d = d[0] *
          (1 - b) + d[1] * b;
        else {
          var g = d.length - 2;
          c = b * g;
          f = 0;
          --g;
          null == g && (g = 1);
          null == f && (f = 0);
          f = Math.floor(c <= f ? f : g <= c ? g : c);
          g = c - f;
          var h = d[f];
          c = d[f + 1];
          d = d[f + 2];
          d = g * g * (h / 2 - c + d / 2) + g * (-h + c) + h / 2 + c / 2
        }
        a.x = d;
        if (2 > e.length) throw F.thrown("points length must be more than 2");
        2 == e.length ? d = e[0] * (1 - b) + e[1] * b : (g = e.length - 2, c = b * g, f = 0, --g, null == g && (g = 1), null == f && (f = 0), f = Math.floor(c <= f ? f : g <= c ? g : c), g = c - f, h = e[f], c = e[f + 1], d = e[f + 2], d = g * g * (h / 2 - c + d / 2) + g * (-h + c) + h / 2 + c / 2);
        a.y = d
      };
      var lr = function() {};
      k["tweenxcore.MatrixTools"] = lr;
      lr.__name__ =
        "tweenxcore.MatrixTools";
      lr.createSimilarityTransform = function(a, b, c, d, e) {
        d -= b;
        var f = e - c;
        e = Math.atan2(f, d);
        d = Math.sqrt(d * d + f * f);
        a.a = d * Math.cos(e);
        a.b = d * Math.sin(e);
        a.c = -d * Math.sin(e);
        a.d = d * Math.cos(e);
        a.tx = b;
        a.ty = c
      };
      L.$haxeUID |= 0;
      "undefined" != typeof performance && "function" == typeof performance.now && (da.now = performance.now.bind(performance));
      k.Math = Math;
      null == String.fromCodePoint && (String.fromCodePoint = function(a) {
        return 65536 > a ? String.fromCharCode(a) : String.fromCharCode((a >> 10) + 55232) + String.fromCharCode((a &
          1023) + 56320)
      });
      String.prototype.__class__ = k.String = String;
      String.__name__ = "String";
      k.Array = Array;
      Array.__name__ = "Array";
      Date.prototype.__class__ = k.Date = Date;
      Date.__name__ = "Date";
      var rc = {},
        Cr = {},
        Cc = Number,
        Gc = Boolean,
        wq = {},
        tr = {};
      pc.count = 0;
      yh.content = [{
          name: "config_game_config_json",
          data: "ewoJImFudGlhbGlhcyI6IGZhbHNlLAoJImJ1aWxkQ29uZmlnIjogeyJkZWJ1ZyI6dHJ1ZSwiZXh0cmEiOltdLCJwbGF0Zm9ybSI6Imh0bWw1In0sCgkiZGVidWdEcmF3IjogZmFsc2UsCgkiZGlzcG9zZUltYWdlcyI6IGZhbHNlLAoJImZvcmNlSGlSZXNBc3NldHMiOiB0cnVlLAoJImluaXRTY2VuZUlEIjogMjAsCgkia2V5cyI6IHsKCQkiVXAiOiBbIlVQIl0sCgkJIkRvd24iOiBbIkRPV04iXSwKCQkiTGVmdCI6IFsiTEVGVCJdLAoJCSJSaWdodCI6IFsiUklHSFQiXSwKCQkiWiI6IFsiWiJdLAoJCSJYIjogWyJYIl0sCgkJIlciOiBbIlciXSwKCQkiQSI6IFsiQSJdLAoJCSJTIjogWyJTIl0sCgkJIkQiOiBbIkQiXSwKCQkiUiI6IFsiUiJdLAoJCSJFbnRlciI6IFsiRU5URVIiXSwKCQkiU3BhY2UiOiBbIlNQQUNFIl0sCgkJIkIiOiBbIkIiXSwKCQkiRXNjIjogWyJFU0NBUEUiXQoJCQoJfSwKCSJwaXhlbHNuYXAiOiBmYWxzZSwKCSJwaHlzaWNzTW9kZSI6ICJTSU1QTEVfUEhZU0lDUyIsCgkicmVsZWFzZU1vZGUiOiB0cnVlLAoJInNob3dDb25zb2xlIjogZmFsc2UsCgkic3RhZ2VXaWR0aCI6IDQ4MCwKCSJzdGFnZUhlaWdodCI6IDMyMCwKCSJ0b29sc2V0SW50ZXJmYWNlSG9zdCI6ICJsb2NhbGhvc3QiLAoJInRvb2xzZXRJbnRlcmZhY2VQb3J0IjogMTg1MjUsCgkicHJvamVjdE5hbWUiOiAiUmVzaXplckhvb2RhIiwKCSJ1c2VHY2lMb2dnaW5nIjogZmFsc2UsCgkKCSJjb25maWctbW9iaWxlIjogewoJCSJhZFBvc2l0aW9uQm90dG9tIjogdHJ1ZSwKCQkiYXV0b3JvdGF0ZSI6IGZhbHNlLAoJCSJnYW1lU2NhbGUiOiAxLAoJCSJsYW5kc2NhcGUiOiBmYWxzZSwKCQkidGVzdEFkcyI6IGZhbHNlLAoJCSJ0b29sc2V0SW50ZXJmYWNlSG9zdCI6ICIxOTIuMTY4LjEuMTUyIiwKCgkJImNvbmZpZy1hbmRyb2lkIjogewoJCQkiZGlzYWJsZUJhY2tCdXR0b24iOiBmYWxzZSwKCQkJInNjYWxlTW9kZSI6ICJOT19TQ0FMSU5HIiwKCQkJInNjYWxlcyI6IFsiMXgiXQoJCX0sCgkJCgkJImNvbmZpZy1pb3MiOiB7CgkJCSJzY2FsZU1vZGUiOiAiTk9fU0NBTElORyIsCgkJCSJzY2FsZXMiOiBbIjF4Il0KCQl9Cgl9LAoJCgkiY29uZmlnLWRlc2t0b3AiOiB7CgkJImdhbWVTY2FsZSI6IDEuNSwKCQkic2NhbGVNb2RlIjogIk5PX1NDQUxJTkciLAoJCSJzY2FsZXMiOiBbIjF4Il0sCgkJInN0YXJ0SW5GdWxsU2NyZWVuIjogZmFsc2UKCX0sCgkKCSJjb25maWctd2ViIjogewoJCSJnYW1lU2NhbGUiOiAxLjUsCgkJInN0YXJ0SW5GdWxsU2NyZWVuIjogZmFsc2UsCgkJInNjYWxlcyI6IFsiMXgiXSwKCgkJImNvbmZpZy1mbGFzaCI6IHsKCQkJInNjYWxlTW9kZSI6ICJOT19TQ0FMSU5HIgoJCX0sCgkJCgkJImNvbmZpZy1odG1sNSI6IHsKCQkJInRvb2xzZXRJbnRlcmZhY2VIb3N0IjogIjE5Mi4xNjguMS4xNTIiCgkJfQoJfQp9"
        },
        {
          name: "config_preloadpaths_txt",
          data: "YXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMi0xLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTItMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS01LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNy0xLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTktMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3RpbGVzZXQtMTAtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3RpbGVzZXQtMTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTItMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xNC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE2LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTgtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yMC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTIyLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9iYWNrZ3JvdW5kLTIzLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMjYtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yOC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTI4LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMzAtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0zMi0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTM0LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMzYtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0zOC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTQwLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNDItMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS00NC0wLnBuZwphc3NldHMvc2Z4L3NvdW5kLTQ1Lm9nZwphc3NldHMvc2Z4L3NvdW5kLTQ2Lm9nZwphc3NldHMvc2Z4L3NvdW5kLTQ3Lm9nZwphc3NldHMvc2Z4L3NvdW5kLTQ4Lm9nZwphc3NldHMvc2Z4L3NvdW5kLTQ5Lm9nZwphc3NldHMvc2Z4L3NvdW5kLTUwLm9nZwphc3NldHMvc2Z4L3NvdW5kLTUxLm9nZwphc3NldHMvc2Z4L3NvdW5kLTUyLm9nZwphc3NldHMvc2Z4L3NvdW5kLTUzLm9nZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC01NC5mbnQKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtNTQucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9mb250LTU4LmZudAphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC01OC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFLzU5LlNPVU5EX0VYVAphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTYxLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNjMtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS02My0xLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTYzLTIucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNjUtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtNjYuZm50CmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9mb250LTY2LnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC02Ny5mbnQKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtNjcucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9mb250LTY4LmZudAphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC02OC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtNjkuZm50CmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9mb250LTY5LnBuZwphc3NldHMvc2Z4L3NvdW5kLTcyLm9nZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC03OC5mbnQKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtNzgucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtODAtMC5wbmcK"
        },
        {
          name: "config_preloader_bg_txt",
          data: ""
        }
      ];
      K.__toStr = {}.toString;
      null == ArrayBuffer.prototype.slice && (ArrayBuffer.prototype.slice = yq.sliceImpl);
      var mr = new Uint32Array(256);
      G.__alpha16 = mr;
      for (var kj = 0; 256 > kj;) {
        var sk = kj++;
        G.__alpha16[sk] = Math.ceil(257.00392156862745 * sk)
      }
      mr = new Uint8Array(511);
      G.__clamp = mr;
      for (kj = 0; 255 > kj;) sk = kj++, G.__clamp[sk] = sk;
      for (kj = 255; 511 > kj;) sk = kj++, G.__clamp[sk] = 255;
      Zg.available = !1;
      Zg.enabled = !1;
      Na.level = 0;
      "undefined" == typeof console && (console = {});
      null == console.log && (console.log = function() {});
      A.hitTestCanvas = Wg.get_supported() ?
        window.document.createElement("canvas") : null;
      A.hitTestContext = Wg.get_supported() ? A.hitTestCanvas.getContext("2d") : null;
      xe.maxTouchPoints = 2;
      xe.supportedGestures = null;
      xe.supportsGestureEvents = !1;
      xe.inputMode = 2;
      za.reloadListeners = [];
      S.IN = "in";
      S.OUT = "out";
      S.THROUGH = "through";
      ob.color = -16777216;
      ob.durationPad = 0;
      Fb.__meta__ = {
        statics: {
          toNullVector: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      ya.__meta__ = {
        fields: {
          __cairo: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          addEventListener: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          removeEventListener: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      ya.__broadcastEvents = new ua;
      ya.__instanceCount = 0;
      ya.__tempStack = new E(function() {
        return Fb.toObjectVector(null)
      }, function(a) {
        a.set_length(0)
      });
      V.logicalWidth = 0;
      V.logicalHeight = 0;
      V.windowWidth = 0;
      V.windowHeight = 0;
      V.leftInset = 0;
      V.topInset = 0;
      V.rightInset = 0;
      V.bottomInset = 0;
      ia.Element = 0;
      ia.PCData = 1;
      ia.CData = 2;
      ia.Comment = 3;
      ia.DocType = 4;
      ia.ProcessingInstruction = 5;
      ia.Document = 6;
      C.pool = [];
      C.pooli = 0;
      Bc.VERTEX = 0;
      Bc.FACE = 1;
      z.b2_nullFeature = 255;
      z.s_incidentEdge =
        z.makeClipPointVector();
      z.s_clipPoints1 = z.makeClipPointVector();
      z.s_clipPoints2 = z.makeClipPointVector();
      z.s_edgeAO = [];
      z.s_edgeBO = [];
      z.s_localTangent = new C;
      z.s_localNormal = new C;
      z.s_planePoint = new C;
      z.s_normal = new C;
      z.s_tangent = new C;
      z.s_tangent2 = new C;
      z.s_v11 = new C;
      z.s_v12 = new C;
      z.b2CollidePolyTempVec = new C;
      $e.s_simplex = new Ae;
      $e.s_saveA = [];
      $e.s_saveB = [];
      tj.currentID = 0;
      mh.e_circles = 1;
      mh.e_faceA = 2;
      mh.e_faceB = 4;
      kf.e_points = 1;
      kf.e_faceA = 2;
      kf.e_faceB = 4;
      Mb.b2_toiCalls = 0;
      Mb.b2_toiIters = 0;
      Mb.b2_toiMaxIters =
        0;
      Mb.b2_toiRootIters = 0;
      Mb.b2_toiMaxRootIters = 0;
      Mb.s_cache = function(a) {
        a = new zk;
        a.useCache = !0;
        return a
      }(this);
      Mb.s_distanceInput = new vk;
      Mb.s_xfA = new af;
      Mb.s_xfB = new af;
      Mb.s_fcn = new kf;
      Mb.s_distanceOutput = new Re;
      Xb.initialized = !1;
      Xb.distanceInput = new vk;
      Xb.proxyA = new qi;
      Xb.proxyB = new qi;
      Xb.simplexCache = new zk;
      Xb.distanceOutput = new Re;
      Xb.e_unknownShape = -1;
      Xb.e_circleShape = 0;
      Xb.e_polygonShape = 1;
      Xb.e_edgeShape = 2;
      Xb.e_shapeTypeCount = 3;
      Xb.e_hitCollide = 1;
      Xb.e_missCollide = 0;
      Xb.e_startsInsideCollide = -1;
      Lb.s_mat =
        new Fc;
      ea.VERSION = "2.1alpha";
      ea.USHRT_MAX = 65535;
      ea.b2_pi = Math.PI;
      ea.b2_maxManifoldPoints = 2;
      ea.b2_aabbExtension = .1;
      ea.b2_aabbMultiplier = 2;
      ea.b2_linearSlop = .005;
      ea.b2_polygonRadius = 2 * ea.b2_linearSlop;
      ea.b2_angularSlop = .011111111111111112 * ea.b2_pi;
      ea.b2_toiSlop = 8 * ea.b2_linearSlop;
      ea.b2_maxTOIContactsPerIsland = 32;
      ea.b2_maxTOIJointsPerIsland = 32;
      ea.b2_velocityThreshold = 1;
      ea.b2_maxLinearCorrection = .2;
      ea.b2_maxAngularCorrection = .044444444444444446 * ea.b2_pi;
      ea.b2_maxTranslation = 2;
      ea.b2_maxTranslationSquared =
        ea.b2_maxTranslation * ea.b2_maxTranslation;
      ea.b2_maxRotation = .5 * ea.b2_pi;
      ea.b2_maxRotationSquared = ea.b2_maxRotation * ea.b2_maxRotation;
      ea.b2_contactBaumgarte = .2;
      ea.b2_timeToSleep = .5;
      ea.b2_linearSleepTolerance = .01;
      ea.b2_angularSleepTolerance = .011111111111111112 * ea.b2_pi;
      P.b2Vec2_zero = new C(0, 0);
      P.b2Mat22_identity = Fc.fromVV(new C(1, 0), new C(0, 1));
      P.b2Transform_identity = new af(P.b2Vec2_zero, P.b2Mat22_identity);
      ra.s_xf1 = new af;
      ra.e_islandFlag = 1;
      ra.e_awakeFlag = 2;
      ra.e_allowSleepFlag = 4;
      ra.e_bulletFlag = 8;
      ra.e_fixedRotationFlag =
        16;
      ra.e_activeFlag = 32;
      ra.e_ignoreGravityFlag = 128;
      ra.e_alwaysActiveFlag = 256;
      ra.e_pausedFlag = 512;
      ra.b2_staticBody = 0;
      ra.b2_kinematicBody = 1;
      ra.b2_dynamicBody = 2;
      wj.b2_defaultFilter = new wj;
      Og.KEY_LOCK = 0;
      Og.b2_defaultListener = new Og;
      Bk.s_evalCP = new re;
      Ie.e_shapeBit = 1;
      Ie.e_jointBit = 2;
      Ie.e_aabbBit = 4;
      Ie.e_pairBit = 8;
      Ie.e_centerOfMassBit = 16;
      Ie.e_controllerBit = 32;
      Hf.tempAABB1 = new wc;
      Hf.tempAABB2 = new wc;
      Mh.s_impulse = new Hn;
      gc.s_timestep2 = new yj;
      gc.s_xf = new af;
      gc.s_backupA = new nh;
      gc.s_backupB = new nh;
      gc.s_timestep =
        new yj;
      gc.s_queue = [];
      gc.s_jointColor = new Ak(.5, .8, .8);
      gc.m_warmStarting = !0;
      gc.m_continuousPhysics = !1;
      gc.e_newFixture = 1;
      gc.e_locked = 2;
      cb.e_sensorFlag = 1;
      cb.e_continuousFlag = 2;
      cb.e_islandFlag = 4;
      cb.e_toiFlag = 8;
      cb.e_touchingFlag = 16;
      cb.e_enabledFlag = 32;
      cb.e_filterFlag = 64;
      cb.s_input = new Gn;
      zj.circlePointA = new C;
      zj.circlePointB = new C;
      Je.staticFix = ea.b2_maxManifoldPoints;
      Je.s_worldManifold = new uj;
      Je.s_psm = new zj;
      Ra.m_xf = new af;
      Ra.q = new C;
      Ra.p = new C;
      Ra.e = new C;
      Ra.temp1 = new C;
      Ra.temp2 = new C;
      Ra.m_centroidB = new C;
      Ra.mat = new Fc;
      D.m_xf = new af;
      D.temp = new C;
      D.m_centroidB = new C;
      D.m_lowerLimit = new C;
      D.m_upperLimit = new C;
      D.m_polygonB = new Ln;
      D.edgeAxis = new Gk;
      D.polygonAxis = new Gk;
      D.perp = new C;
      D.n = new C;
      D.rf = new Mn;
      D.mat = new Fc;
      D.temp1 = new C;
      D.temp2 = new C;
      D.ie = [new rh, new rh];
      D.clipPoints1 = [new rh, new rh];
      D.clipPoints2 = [new rh, new rh];
      D.edge0 = new C;
      D.edge1 = new C;
      D.edge2 = new C;
      D.m_normal = new C;
      D.m_normal0 = new C;
      D.m_normal1 = new C;
      D.m_normal2 = new C;
      Vb.e_unknownJoint = 0;
      Vb.e_revoluteJoint = 1;
      Vb.e_prismaticJoint = 2;
      Vb.e_distanceJoint =
        3;
      Vb.e_pulleyJoint = 4;
      Vb.e_mouseJoint = 5;
      Vb.e_gearJoint = 6;
      Vb.e_lineJoint = 7;
      Vb.e_weldJoint = 8;
      Vb.e_frictionJoint = 9;
      Vb.e_inactiveLimit = 0;
      Vb.e_atLowerLimit = 1;
      Vb.e_atUpperLimit = 2;
      Vb.e_equalLimits = 3;
      $c.CENTER = "center";
      vg.b2_minPulleyLength = 2;
      bg.tImpulse = new C;
      Qg.FPS_ONLY = !1;
      Qg.GRAPH_WIDTH = 70;
      Qg.XPOS = 69;
      Qg.GRAPH_HEIGHT = 50;
      Qg.TEXT_HEIGHT = 50;
      xg.bg = 51;
      xg.fps = 16776960;
      xg.ms = 65280;
      xg.mem = 65535;
      xg.memmax = 16711792;
      xg.bgCSS = "#000033";
      xg.msCSS = "#00ff00";
      xg.fpsCSS = "#ffff00";
      xg.memCSS = "#00ffff";
      xg.memmaxCSS = "#ff0070";
      yg.androidAdmobAppID = "";
      yg.whirlID = "";
      yg.whirlID1 = "";
      yg.iosAdmobAppID = "";
      yg.ioswhirlID = "";
      yg.ioswhirlID1 = "";
      yg.cpmstarID = "";
      yg.newgroundsID = "";
      yg.newgroundsKey = "";
      yg.androidPublicKey = "";
      ka.defines = function(a) {
        a = new ua;
        a.h.web = "1";
        a.h.verbose = "1";
        a.h.utf16 = "1";
        a.h.tweenxcore = "1.0.4";
        a.h["true"] = "1";
        a.h.tools = "7.9.1";
        a.h["target.utf16"] = "true";
        a.h["target.unicode"] = "true";
        a.h["target.name"] = "js";
        a.h.stencyl = "4.1.0";
        a.h["source-header"] = "Generated by Haxe 4.2.1+bf9ff69";
        a.h.polygonal_ds = "2.1.1";
        a.h["polygonal-ds"] =
          "2.1.1";
        a.h.openfl_html5 = "1";
        a.h.openfl_enable_handle_error = "1";
        a.h["openfl-html5"] = "1";
        a.h["openfl-enable-handle-error"] = "1";
        a.h.openfl = "9.1.0";
        a.h.no_traces = "1";
        a.h.no_compilation = "1";
        a.h["no-compilation"] = "1";
        a.h.mbs = "0.2.1";
        a.h.lime_webgl = "1";
        a.h.lime_html5 = "1";
        a.h.lime_howlerjs = "1";
        a.h.lime_dom = "1";
        a.h.lime_canvas = "1";
        a.h["lime-webgl"] = "1";
        a.h["lime-html5"] = "1";
        a.h["lime-howlerjs"] = "1";
        a.h["lime-dom"] = "1";
        a.h["lime-canvas"] = "1";
        a.h.lime = "7.9.1";
        a.h.js_es5 = "1";
        a.h.js_es = "5";
        a.h["js-es5"] = "1";
        a.h.js = "1";
        a.h.html5 = "1";
        a.h.hscript = "2.4.0";
        a.h.howlerjs = "1";
        a.h.haxe_ver = "4.201";
        a.h.haxe4 = "1";
        a.h.haxe3 = "1";
        a.h.haxe = "4.2.1";
        a.h.debug_console = "0.0.0";
        a.h["debug-console"] = "0.0.0";
        a.h.debug = "1";
        a.h.dce = "std";
        a.h.cloner = "1.0.0";
        a.h.canvas = "1";
        a.h.box2d = "0.0.0";
        a.h.actuate_manual_update = "1";
        a.h.actuate_manual_time = "1";
        return a
      }(this);
      ld.TYPE_ADS = 1;
      ld.TYPE_PURCHASES = 2;
      ld.TYPE_GAMECENTER = 3;
      ld.TYPE_KEYBOARD = 4;
      p.__meta__ = {
        fields: {
          getLayer: {
            deprecated: ["Use getLayerById or getLayerByName"]
          }
        }
      };
      p.DOODAD =
        "";
      p.INTERNAL_SHIFT = "iSHIFT";
      p.INTERNAL_CTRL = "iCTRL";
      p.INTERNAL_COMMAND = "iCOMMAND";
      p.NO_PHYSICS = !1;
      p.DEBUG_DRAW = !1;
      p.IMG_BASE = "";
      p.SCALE = 1;
      p.checkedWideScreen = !1;
      p.isStandardIOS = !1;
      p.isExtendedIOS = !1;
      p.isIPhone6 = !1;
      p.isIPhone6Plus = !1;
      p.isIPhoneX = !1;
      p.isIPhoneXMax = !1;
      p.isIPhoneXR = !1;
      p.isTabletIOS = !1;
      p.landscape = !1;
      p.limitCameraToScene = !0;
      p.paused = !1;
      p.started = !1;
      p.inFocus = !0;
      p.events = new ld;
      p.ITERATIONS = 3;
      p.physicsScale = 10;
      p.preservePadding = !1;
      p.paddingLeft = 0;
      p.paddingRight = 0;
      p.paddingTop = 0;
      p.paddingBottom =
        0;
      p.STEP_SIZE = 10;
      p.MS_PER_SEC = 1E3;
      p.elapsedTime = 0;
      p.timeScale = 1;
      p.totalElapsedTime = 0;
      p.debug = !1;
      N.mouseX = 0;
      N.mouseY = 0;
      N.mouseWheelDelta = 0;
      N.multipleGamepadsEnabled = !1;
      N._enabled = !1;
      N._key = [];
      N._controlsToReset = [];
      N._controlMap = new ua;
      N._keyInput = new Un(new Za, function(a) {
        return a.keys
      });
      Ha.ANY = -1;
      Ha.LEFT = 37;
      Ha.UP = 38;
      Ha.RIGHT = 39;
      Ha.DOWN = 40;
      Ha.ENTER = 13;
      Ha.CONTROL = 17;
      Ha.COMMAND = 15;
      Ha.SPACE = 32;
      Ha.SHIFT = 16;
      Ha.BACKSPACE = 8;
      Ha.CAPS_LOCK = 20;
      Ha.DELETE = 46;
      Ha.END = 35;
      Ha.ESCAPE = 27;
      Ha.HOME = 36;
      Ha.INSERT = 45;
      Ha.TAB =
        9;
      Ha.PAGE_DOWN = 34;
      Ha.PAGE_UP = 33;
      Ha.LEFT_SQUARE_BRACKET = 219;
      Ha.RIGHT_SQUARE_BRACKET = 221;
      Ha.A = 97;
      Ha.B = 98;
      Ha.C = 99;
      Ha.D = 100;
      Ha.E = 101;
      Ha.F = 102;
      Ha.G = 103;
      Ha.H = 104;
      Ha.I = 105;
      Ha.J = 106;
      Ha.K = 107;
      Ha.L = 108;
      Ha.M = 109;
      Ha.N = 110;
      Ha.O = 111;
      Ha.P = 112;
      Ha.Q = 113;
      Ha.R = 114;
      Ha.S = 115;
      Ha.T = 116;
      Ha.U = 117;
      Ha.V = 118;
      Ha.W = 119;
      Ha.X = 120;
      Ha.Y = 121;
      Ha.Z = 122;
      Ha.F1 = 112;
      Ha.F2 = 113;
      Ha.F3 = 114;
      Ha.F4 = 115;
      Ha.F5 = 116;
      Ha.F6 = 117;
      Ha.F7 = 118;
      Ha.F8 = 119;
      Ha.F9 = 120;
      Ha.F10 = 121;
      Ha.F11 = 122;
      Ha.F12 = 123;
      Ha.F13 = 124;
      Ha.F14 = 125;
      Ha.F15 = 126;
      Ha.DIGIT_0 = 48;
      Ha.DIGIT_1 = 49;
      Ha.DIGIT_2 = 50;
      Ha.DIGIT_3 = 51;
      Ha.DIGIT_4 = 52;
      Ha.DIGIT_5 = 53;
      Ha.DIGIT_6 = 54;
      Ha.DIGIT_7 = 55;
      Ha.DIGIT_8 = 56;
      Ha.DIGIT_9 = 57;
      Ha.NUMPAD_0 = 96;
      Ha.NUMPAD_1 = 97;
      Ha.NUMPAD_2 = 98;
      Ha.NUMPAD_3 = 99;
      Ha.NUMPAD_4 = 100;
      Ha.NUMPAD_5 = 101;
      Ha.NUMPAD_6 = 102;
      Ha.NUMPAD_7 = 103;
      Ha.NUMPAD_8 = 104;
      Ha.NUMPAD_9 = 105;
      Ha.NUMPAD_ADD = 107;
      Ha.NUMPAD_DECIMAL = 110;
      Ha.NUMPAD_DIVIDE = 111;
      Ha.NUMPAD_ENTER = 108;
      Ha.NUMPAD_MULTIPLY = 106;
      Ha.NUMPAD_SUBTRACT = 109;
      Ha.keyboardNameMap = function(a) {
        a = new ua;
        a.h.NUMBER_0 = 48;
        a.h.NUMBER_1 = 49;
        a.h.NUMBER_2 = 50;
        a.h.NUMBER_3 = 51;
        a.h.NUMBER_4 =
          52;
        a.h.NUMBER_5 = 53;
        a.h.NUMBER_6 = 54;
        a.h.NUMBER_7 = 55;
        a.h.NUMBER_8 = 56;
        a.h.NUMBER_9 = 57;
        a.h.A = 65;
        a.h.B = 66;
        a.h.C = 67;
        a.h.D = 68;
        a.h.E = 69;
        a.h.F = 70;
        a.h.G = 71;
        a.h.H = 72;
        a.h.I = 73;
        a.h.J = 74;
        a.h.K = 75;
        a.h.L = 76;
        a.h.M = 77;
        a.h.N = 78;
        a.h.O = 79;
        a.h.P = 80;
        a.h.Q = 81;
        a.h.R = 82;
        a.h.S = 83;
        a.h.T = 84;
        a.h.U = 85;
        a.h.V = 86;
        a.h.W = 87;
        a.h.X = 88;
        a.h.Y = 89;
        a.h.Z = 90;
        a.h.NUMPAD_0 = 96;
        a.h.NUMPAD_1 = 97;
        a.h.NUMPAD_2 = 98;
        a.h.NUMPAD_3 = 99;
        a.h.NUMPAD_4 = 100;
        a.h.NUMPAD_5 = 101;
        a.h.NUMPAD_6 = 102;
        a.h.NUMPAD_7 = 103;
        a.h.NUMPAD_8 = 104;
        a.h.NUMPAD_9 = 105;
        a.h.NUMPAD_MULTIPLY =
          106;
        a.h.NUMPAD_ADD = 107;
        a.h.NUMPAD_ENTER = 108;
        a.h.NUMPAD_SUBTRACT = 109;
        a.h.NUMPAD_DECIMAL = 110;
        a.h.NUMPAD_DIVIDE = 111;
        a.h.F1 = 112;
        a.h.F2 = 113;
        a.h.F3 = 114;
        a.h.F4 = 115;
        a.h.F5 = 116;
        a.h.F6 = 117;
        a.h.F7 = 118;
        a.h.F8 = 119;
        a.h.F9 = 120;
        a.h.F10 = 121;
        a.h.F11 = 122;
        a.h.F12 = 123;
        a.h.F13 = 124;
        a.h.F14 = 125;
        a.h.F15 = 126;
        a.h.BACKSPACE = 8;
        a.h.TAB = 9;
        a.h.ALTERNATE = 18;
        a.h.ENTER = 13;
        a.h.COMMAND = 15;
        a.h.SHIFT = 16;
        a.h.CONTROL = 17;
        a.h.BREAK = 19;
        a.h.CAPS_LOCK = 20;
        a.h.NUMPAD = 21;
        a.h.ESCAPE = 27;
        a.h.SPACE = 32;
        a.h.PAGE_UP = 33;
        a.h.PAGE_DOWN = 34;
        a.h.END = 35;
        a.h.HOME =
          36;
        a.h.LEFT = 37;
        a.h.RIGHT = 39;
        a.h.UP = 38;
        a.h.DOWN = 40;
        a.h.INSERT = 45;
        a.h.DELETE = 46;
        a.h.NUMLOCK = 144;
        a.h.SEMICOLON = 186;
        a.h.EQUAL = 187;
        a.h.COMMA = 188;
        a.h.MINUS = 189;
        a.h.PERIOD = 190;
        a.h.SLASH = 191;
        a.h.BACKQUOTE = 192;
        a.h.LEFTBRACKET = 219;
        a.h.BACKSLASH = 220;
        a.h.RIGHTBRACKET = 221;
        a.h.QUOTE = 222;
        return a
      }(this);
      la.__pool = new E(function() {
        return new la
      }, function(a) {
        a.setTo(0, 0)
      });
      ha.__pool = new E(function() {
        return new ha
      }, function(a) {
        a.setTo(0, 0, 0, 0)
      });
      u.FRONT = 0;
      u.MIDDLE = 1;
      u.BACK = 2;
      u.CHANNELS = 32;
      u.mpx = 0;
      u.mpy = 0;
      u.mrx = 0;
      u.mry =
        0;
      u.dummyVec = new C;
      u.imageApiAutoscale = !0;
      u.dummyRect = new ha(0, 0, 1, 1);
      u.dummyPoint = new la(0, 0);
      u.BASE_64_ENCODINGS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      u.BASE_64_PADDING = "=";
      uh.fieldMaps = new ua;
      Xc.AD_USER_OPEN = 100;
      Xc.AD_USER_CLOSE = 101;
      Xc.AD_LOADED = 102;
      Xc.AD_FAILED = 103;
      Xc.AD_CLICKED = 104;
      Xc.FULL_AD_USER_OPEN = 105;
      Xc.FULL_AD_USER_CLOSE = 106;
      Xc.FULL_AD_LOADED = 107;
      Xc.FULL_AD_FAILED = 108;
      Xc.FULL_AD_CLICKED = 109;
      Xc.PURCHASE_READY = 200;
      Xc.PURCHASE_SUCCESS = 201;
      Xc.PURCHASE_FAIL = 202;
      Xc.PURCHASE_RESTORE = 203;
      Xc.PURCHASE_CANCEL = 204;
      Xc.PURCHASE_PRODUCTS_VERIFIED = 205;
      Xc.PURCHASE_PRODUCT_VALIDATED = 206;
      Xc.GAME_CENTER_READY = 300;
      Xc.GAME_CENTER_SCORE = 301;
      Xc.GAME_CENTER_ACHIEVEMENT = 302;
      Xc.GAME_CENTER_ACHIEVEMENT_RESET = 303;
      Xc.GAME_CENTER_READY_FAIL = 304;
      Xc.GAME_CENTER_SCORE_FAIL = 305;
      Xc.GAME_CENTER_ACHIEVEMENT_FAIL = 306;
      Xc.GAME_CENTER_ACHIEVEMENT_RESET_FAIL = 307;
      Xc.KEYBOARD_EVENT = 400;
      Xc.KEYBOARD_DONE = 401;
      Xc.KEYBOARD_SHOW = 402;
      Xc.KEYBOARD_HIDE = 403;
      hb.TOUCH_POINT = 1;
      hb.GESTURE = 2;
      hb.GESTURE_CAPTURE =
        3;
      hb.PAN_X = 1;
      hb.PAN_Y = 2;
      hb.PAN_XY = 3;
      hb.READY = 0;
      hb.BEGIN = 1;
      hb.TWO_FINGER_MOVE = 2;
      hb.MOVE = 4;
      hb.R2D = 180 / Math.PI;
      hb.SWIPE_SCROLL_TIME = 2;
      hb.SWIPE_SAMPLE_TIME = .2;
      hb.VELOCITY_RATIO = .25;
      hb.touchEvents = "touchBegin touchEnd touchMove touchOver touchOut touchRollOver touchRollOut touchTap".split(" ");
      hb.mouseEvents = "mouseDown mouseUp mouseMove mouseOver mouseOut rollOver rollOut click".split(" ");
      hb.geTouchEvents = ["touchBegin", "touchEnd", "touchMove", "touchOut"];
      hb.geMouseEvents = ["mouseDown", "mouseUp", "mouseMove",
        "mouseOut"
      ];
      hb.initialized = !1;
      hb.moveToleSqr = 1;
      hb.MAP = "mouseDown rox_touch_begin mouseUp rox_touch_end mouseMove rox_touch_move mouseOver rox_touch_over mouseOut rox_touch_out rollOver rox_touch_roll_over rollOut rox_touch_roll_in click rox_touch_tap touchBegin rox_touch_begin touchEnd rox_touch_end touchMove rox_touch_move touchOver rox_touch_over touchOut rox_touch_out touchRollOver rox_touch_roll_over touchRollOut rox_touch_roll_in touchTap rox_touch_tap".split(" ");
      hb.typeMap = function(a) {
        a = new ua;
        for (var b = 0, c = hb.MAP.length >> 1; b < c;) {
          var d = b++;
          a.h[hb.MAP[d << 1]] = hb.MAP[(d << 1) + 1]
        }
        return a
      }(this);
      ma.ACTIVATE = "activate";
      ma.ADDED = "added";
      ma.ADDED_TO_STAGE = "addedToStage";
      ma.CANCEL = "cancel";
      ma.CHANGE = "change";
      ma.CLEAR = "clear";
      ma.CLOSE = "close";
      ma.COMPLETE = "complete";
      ma.CONNECT = "connect";
      ma.CONTEXT3D_CREATE = "context3DCreate";
      ma.COPY = "copy";
      ma.CUT = "cut";
      ma.DEACTIVATE = "deactivate";
      ma.ENTER_FRAME = "enterFrame";
      ma.EXIT_FRAME = "exitFrame";
      ma.FRAME_CONSTRUCTED = "frameConstructed";
      ma.FRAME_LABEL = "frameLabel";
      ma.FULLSCREEN = "fullScreen";
      ma.ID3 = "id3";
      ma.INIT = "init";
      ma.MOUSE_LEAVE = "mouseLeave";
      ma.OPEN = "open";
      ma.PASTE = "paste";
      ma.REMOVED = "removed";
      ma.REMOVED_FROM_STAGE = "removedFromStage";
      ma.RENDER = "render";
      ma.RESIZE = "resize";
      ma.SCROLL = "scroll";
      ma.SELECT = "select";
      ma.SELECT_ALL = "selectAll";
      ma.SOUND_COMPLETE = "soundComplete";
      ma.TAB_CHILDREN_CHANGE = "tabChildrenChange";
      ma.TAB_ENABLED_CHANGE = "tabEnabledChange";
      ma.TAB_INDEX_CHANGE = "tabIndexChange";
      ma.TEXTURE_READY = "textureReady";
      ma.UNLOAD = "unload";
      ad.TOUCH_BEGIN = "rox_touch_begin";
      ad.TOUCH_END = "rox_touch_end";
      ad.TOUCH_MOVE = "rox_touch_move";
      ad.TOUCH_OVER = "rox_touch_over";
      ad.TOUCH_OUT = "rox_touch_out";
      ad.TOUCH_ROLL_OVER = "rox_touch_roll_over";
      ad.TOUCH_ROLL_OUT = "rox_touch_roll_in";
      ad.TOUCH_TAP = "rox_touch_tap";
      ad.GESTURE_TAP = "rox_gesture_tap";
      ad.GESTURE_LONG_PRESS = "rox_gesture_long_press";
      ad.GESTURE_PAN = "rox_gesture_pan";
      ad.GESTURE_SWIPE = "rox_gesture_swipe";
      ad.GESTURE_BEGIN = "rox_gesture_begin";
      ad.GESTURE_PINCH = "rox_gesture_pinch";
      ad.GESTURE_ROTATION = "rox_gesture_rotation";
      ad.GESTURE_END =
        "rox_gesture_end";
      hl.stringBlendMap = function(a) {
        a = new ua;
        a.h.add = 0;
        a.h.alpha = 1;
        a.h.darken = 2;
        a.h.difference = 3;
        a.h.erase = 4;
        a.h.hardlight = 5;
        a.h.invert = 6;
        a.h.lighten = 8;
        a.h.multiply = 9;
        a.h.normal = 10;
        a.h.overlay = 11;
        a.h.screen = 12;
        a.h.subtract = 14;
        return a
      }(this);
      eb.drawnStringCache = new ua;
      eb.drawnStringCacheKeys = [];
      md.MAX_TEXTURE_CAP = 4096;
      Kd._1X = new Kd(1);
      Kd._1_5X = new Kd(1.5);
      Kd._2X = new Kd(2);
      Kd._3X = new Kd(3);
      Kd._4X = new Kd(4);
      Bj.NO_SCALING = 0;
      Bj.FULLSCREEN = 1;
      Bj.STRETCH_TO_FIT = 2;
      Bj.SCALE_TO_FIT_LETTERBOX = 3;
      Bj.SCALE_TO_FIT_FILL = 4;
      Bj.SCALE_TO_FIT_FULLSCREEN = 5;
      hg._storedFonts = new ua;
      hg.ZERO_POINT = new la;
      Yn.LEFT = 1;
      Yn.RIGHT = 2;
      Yn.CENTER = 3;
      wd.CONTEXT_LOST = "glcontextlost";
      wd.CONTEXT_RESTORED = "glcontextrestored";
      wd.vertexShader = "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}";
      Te.SLIDE_UP = "up";
      Te.SLIDE_DOWN = "down";
      Te.SLIDE_LEFT =
        "left";
      Te.SLIDE_RIGHT = "right";
      H.BOOLEAN = new uf("boolean", 1);
      H.INTEGER = new uf("integer", 4);
      H.FLOAT = new uf("float", 4);
      H.STRING = new uf("string", 4);
      H.LIST = new uf("list", 4);
      H.DYNAMIC = new uf("dynamic", 8);
      H.NULL = new uf("null", 0);
      Sh.basicTypes = function(a) {
        a = [];
        a.push(H.BOOLEAN);
        a.push(H.INTEGER);
        a.push(H.FLOAT);
        a.push(H.STRING);
        a.push(H.LIST);
        a.push(H.DYNAMIC);
        a.push(H.NULL);
        yc.initializeType();
        Sc.initializeType();
        fd.initializeType();
        a.push(yc.MBS_HEADER);
        a.push(Sc.MBS_TYPE_INFO);
        a.push(fd.MBS_FIELD_INFO);
        return a
      }(this);
      wb.GROUP_OFFSET = 1E6;
      wb.manifold = new uj;
      Bb.INHERIT_ID = -1E3;
      Bb.REGION_ID = -2;
      Bb.PLAYER_ID = 0;
      Bb.TERRAIN_ID = 1;
      Bb.DOODAD_ID = 2;
      Bb.ACTOR_ID = 3;
      Ia.fixedCenter = 0;
      Ia.showWherePressed = 1;
      Ia.viewOffsetX = 0;
      Ia.viewOffsetY = 0;
      Ia.initialized = !1;
      Qn.NORMAL_PHYSICS = 0;
      Qn.SIMPLE_PHYSICS = 1;
      Qn.MINIMAL_PHYSICS = 2;
      vd.UNSET_ID = -1;
      ll.MAX_VERTICES = 200;
      Yb.muted = !1;
      Yb.masterVolume = 1;
      Pg.UNSET_ID = -1;
      ve.allAnimations = [];
      nc.recycledCollisions = [];
      nc.collisionResponses = new Za;
      Sd.freedCollisionPoints = [];
      Kf.WHITE = -1;
      Kf.TRANSPARENT = -2;
      Cf.infoArray = [];
      Ke.NO_AUTOTILE_DATA = 0;
      Ke.CORNER_TL = 1;
      Ke.CORNER_TR = 2;
      Ke.CORNER_BR = 4;
      Ke.CORNER_BL = 8;
      Ke.SIDE_L = 16;
      Ke.SIDE_T = 32;
      Ke.SIDE_R = 64;
      Ke.SIDE_B = 128;
      Rc.dummyRect = new ha;
      Yd.TILESET_CACHE_MULTIPLIER = 1E6;
      Yd.cacheSource = new Za;
      Yd.autotileFlagPointMap = function(a) {
        a = new Za;
        var b = Ke.CORNER_TL,
          c = new la(-1, -1);
        a.h[b] = c;
        b = Ke.CORNER_TR;
        c = new la(1, -1);
        a.h[b] = c;
        b = Ke.CORNER_BL;
        c = new la(-1, 1);
        a.h[b] = c;
        b = Ke.CORNER_BR;
        c = new la(1, 1);
        a.h[b] = c;
        b = Ke.SIDE_T;
        c = new la(0, -1);
        a.h[b] = c;
        b = Ke.SIDE_B;
        c = new la(0, 1);
        a.h[b] =
          c;
        b = Ke.SIDE_L;
        c = new la(-1, 0);
        a.h[b] = c;
        b = Ke.SIDE_R;
        c = new la(1, 0);
        a.h[b] = c;
        return a
      }(this);
      tf.temp = new ha;
      Tc.BLACK = -16777216;
      Tc.WHITE = -1;
      Tc.RED = -65536;
      Tc.GREEN = -16711936;
      Tc.BLUE = -16776961;
      Tc.CYAN = -16711681;
      Tc.MAGENTA = -65281;
      Tc.YELLOW = -256;
      $a.LUMA_R = .212671;
      $a.LUMA_G = .71516;
      $a.LUMA_B = .072169;
      $a.LUMA_R2 = .3086;
      $a.LUMA_G2 = .6094;
      $a.LUMA_B2 = .082;
      $a.INV3 = .3333333333333333;
      Md.BLACK = 0;
      Md.WHITE = 16777215;
      Md.RED = 16711680;
      Md.GREEN = 65280;
      Md.BLUE = 255;
      Md.CYAN = 65535;
      Md.MAGENTA = 16711935;
      Md.YELLOW = 16776960;
      mf.__meta__ = {
        fields: {
          clone: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      Vh.__identity = new Vh;
      Ea.__meta__ = {
        fields: {
          equals: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          to3DString: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          toMozString: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      Ea.__identity = new Ea;
      Ea.__pool = new E(function() {
        return new Ea
      }, function(a) {
        a.identity()
      });
      Ea.__matrix3 = new Vh;
      Ec.__pool = new E(function() {
        return new Ec
      }, function(a) {
        a.__identity()
      });
      R.INTEGER_MAX = 1E8;
      R.NUMBER_MAX_VALUE =
        1.79769313486231E308;
      R.blackColor = -16777216;
      R.rate = 1;
      R.camera = new la;
      R.cloner = new Pn;
      R._bitmap = new ua;
      R._seed = 0;
      R._volume = 1;
      R._pan = 0;
      R._soundTransform = new mf;
      R.DEG = 57.29577951308402;
      R.RAD = .01745329251994278;
      R.point = new la;
      R.point2 = new la;
      R.zero = new la;
      R.rect = new ha;
      R.matrix = new Ea;
      R.sprite = new Z;
      R.collision = new nc;
      qa.linear = new Ll;
      qa.sineIn = new Yl;
      qa.sineOut = new $l;
      qa.sineInOut = new Zl;
      qa.sineOutIn = new am;
      qa.quadIn = new Ml;
      qa.quadOut = new Ol;
      qa.quadInOut = new Nl;
      qa.quadOutIn = new Pl;
      qa.cubicIn = new zl;
      qa.cubicOut = new Bl;
      qa.cubicInOut = new Al;
      qa.cubicOutIn = new Cl;
      qa.quartIn = new Ql;
      qa.quartOut = new Sl;
      qa.quartInOut = new Rl;
      qa.quartOutIn = new Tl;
      qa.quintIn = new Ul;
      qa.quintOut = new Wl;
      qa.quintInOut = new Vl;
      qa.quintOutIn = new Xl;
      qa.expoIn = new Hl;
      qa.expoOut = new Jl;
      qa.expoInOut = new Il;
      qa.expoOutIn = new Kl;
      qa.circIn = new vl;
      qa.circOut = new xl;
      qa.circInOut = new wl;
      qa.circOutIn = new yl;
      qa.bounceIn = new rl;
      qa.bounceOut = new tl;
      qa.bounceInOut = new sl;
      qa.bounceOutIn = new ul;
      qa.backIn = new nl;
      qa.backOut = new pl;
      qa.backInOut = new ol;
      qa.backOutIn = new ql;
      qa.elasticIn = new Dl;
      qa.elasticOut = new Fl;
      qa.elasticInOut = new El;
      qa.elasticOutIn = new Gl;
      qa.warpOut = new dm;
      qa.warpIn = new bm;
      qa.warpInOut = new cm;
      qa.warpOutIn = new em;
      Wh.PI = 3.141592653589793;
      Wh.PI_H = 1.5707963267948966;
      Wh.LN_2 = .6931471805599453;
      Wh.LN_2_10 = 6.931471805599453;
      Wh.overshoot = 1.70158;
      Wh.amplitude = 1;
      Wh.period = 3E-4;
      xb.activeObjects = [];
      xb.finishedObjects = [];
      Ce.USE_CACHE = !1;
      Ce.USE_ENUM_INDEX = !1;
      Ce.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
      Le.DEFAULT_RESOLVER =
        new gm;
      Le.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
      zh.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      zh.BYTES = ib.ofString(zh.CHARS);
      de.i64tmp = new ab(0, 0);
      de.helper = new DataView(new ArrayBuffer(8));
      lh.escapes = function(a) {
        a = new ua;
        a.h.lt = "<";
        a.h.gt = ">";
        a.h.amp = "&";
        a.h.quot = '"';
        a.h.apos = "'";
        return a
      }(this);
      De.LEN_EXTRA_BITS_TBL = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, -1, -1];
      De.LEN_BASE_VAL_TBL = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17,
        19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258
      ];
      De.DIST_EXTRA_BITS_TBL = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, -1, -1];
      De.DIST_BASE_VAL_TBL = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];
      De.CODE_LENGTHS_POS = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
      Ua.OPTION_REVOKE_URL = 1;
      Ua.activeRequests = 0;
      Ua.requestLimit = 99999;
      Ua.requestQueue = new bb;
      Ma.dummyCharacter = "\u007f";
      Ma.windowID = 0;
      Qf.DICTIONARY =
        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
      Qf.EXTENDED_DICTIONARY = function(a) {
        a = [];
        for (var b = 0, c = Qf.DICTIONARY; b < c.length;) {
          var d = c[b];
          ++b;
          for (var e = 0, f = Qf.DICTIONARY; e < f.length;) {
            var g = f[e];
            ++e;
            a.push(d + g)
          }
        }
        return a
      }(this);
      df.MUL_TABLE = [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265, 497, 469, 443, 421, 25, 191, 365, 349, 335, 161, 155, 149, 9, 278, 269, 261, 505, 245, 475, 231, 449, 437, 213, 415, 405, 395, 193, 377, 369, 361, 353, 345, 169, 331, 325, 319, 313, 307, 301, 37, 145, 285, 281, 69, 271,
        267, 263, 259, 509, 501, 493, 243, 479, 118, 465, 459, 113, 446, 55, 435, 429, 423, 209, 413, 51, 403, 199, 393, 97, 3, 379, 375, 371, 367, 363, 359, 355, 351, 347, 43, 85, 337, 333, 165, 327, 323, 5, 317, 157, 311, 77, 305, 303, 75, 297, 294, 73, 289, 287, 71, 141, 279, 277, 275, 68, 135, 67, 133, 33, 262, 260, 129, 511, 507, 503, 499, 495, 491, 61, 121, 481, 477, 237, 235, 467, 232, 115, 457, 227, 451, 7, 445, 221, 439, 218, 433, 215, 427, 425, 211, 419, 417, 207, 411, 409, 203, 202, 401, 399, 396, 197, 49, 389, 387, 385, 383, 95, 189, 47, 187, 93, 185, 23, 183, 91, 181, 45, 179, 89, 177, 11, 175, 87, 173, 345, 343, 341, 339,
        337, 21, 167, 83, 331, 329, 327, 163, 81, 323, 321, 319, 159, 79, 315, 313, 39, 155, 309, 307, 153, 305, 303, 151, 75, 299, 149, 37, 295, 147, 73, 291, 145, 289, 287, 143, 285, 71, 141, 281, 35, 279, 139, 69, 275, 137, 273, 17, 271, 135, 269, 267, 133, 265, 33, 263, 131, 261, 130, 259, 129, 257, 1
      ];
      df.SHG_TABLE = [0, 9, 10, 11, 9, 12, 10, 11, 12, 9, 13, 13, 10, 9, 13, 13, 14, 14, 14, 14, 10, 13, 14, 14, 14, 13, 13, 13, 9, 14, 14, 14, 15, 14, 15, 14, 15, 15, 14, 15, 15, 15, 14, 15, 15, 15, 15, 15, 14, 15, 15, 15, 15, 15, 15, 12, 14, 15, 15, 13, 15, 15, 15, 15, 16, 16, 16, 15, 16, 14, 16, 16, 14, 16, 13, 16, 16, 16, 15, 16, 13, 16, 15, 16, 14,
        9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13, 14, 16, 16, 15, 16, 16, 10, 16, 15, 16, 14, 16, 16, 14, 16, 16, 14, 16, 16, 14, 15, 16, 16, 16, 14, 15, 14, 15, 13, 16, 16, 15, 17, 17, 17, 17, 17, 17, 14, 15, 17, 17, 16, 16, 17, 16, 15, 17, 16, 17, 11, 17, 16, 17, 16, 17, 16, 17, 17, 16, 17, 17, 16, 17, 17, 16, 16, 17, 17, 17, 16, 14, 17, 17, 17, 17, 15, 16, 14, 16, 15, 16, 13, 16, 15, 16, 14, 16, 15, 16, 12, 16, 15, 16, 17, 17, 17, 17, 17, 13, 16, 15, 17, 17, 17, 16, 15, 17, 17, 17, 16, 15, 17, 17, 14, 16, 17, 17, 16, 17, 17, 16, 15, 17, 16, 14, 17, 16, 15, 17, 16, 17, 17, 16, 17, 15, 16, 17, 14, 17, 16, 15, 17, 16, 17, 13, 17, 16, 17, 17, 16, 17, 14, 17, 16, 17, 16,
        17, 16, 17, 9
      ];
      Sf.minCodePoint = 0;
      Sf.maxCodePoint = 1114111;
      Sf.minHighSurrogate = 55296;
      Sf.maxHighSurrogate = 56319;
      Sf.minLowSurrogate = 56320;
      Sf.maxLowSurrogate = 57343;
      q.DEPTH_BUFFER_BIT = 256;
      q.STENCIL_BUFFER_BIT = 1024;
      q.COLOR_BUFFER_BIT = 16384;
      q.POINTS = 0;
      q.LINES = 1;
      q.LINE_LOOP = 2;
      q.LINE_STRIP = 3;
      q.TRIANGLES = 4;
      q.TRIANGLE_STRIP = 5;
      q.TRIANGLE_FAN = 6;
      q.ZERO = 0;
      q.ONE = 1;
      q.SRC_COLOR = 768;
      q.ONE_MINUS_SRC_COLOR = 769;
      q.SRC_ALPHA = 770;
      q.ONE_MINUS_SRC_ALPHA = 771;
      q.DST_ALPHA = 772;
      q.ONE_MINUS_DST_ALPHA = 773;
      q.DST_COLOR = 774;
      q.ONE_MINUS_DST_COLOR =
        775;
      q.SRC_ALPHA_SATURATE = 776;
      q.FUNC_ADD = 32774;
      q.BLEND_EQUATION = 32777;
      q.BLEND_EQUATION_RGB = 32777;
      q.BLEND_EQUATION_ALPHA = 34877;
      q.FUNC_SUBTRACT = 32778;
      q.FUNC_REVERSE_SUBTRACT = 32779;
      q.BLEND_DST_RGB = 32968;
      q.BLEND_SRC_RGB = 32969;
      q.BLEND_DST_ALPHA = 32970;
      q.BLEND_SRC_ALPHA = 32971;
      q.CONSTANT_COLOR = 32769;
      q.ONE_MINUS_CONSTANT_COLOR = 32770;
      q.CONSTANT_ALPHA = 32771;
      q.ONE_MINUS_CONSTANT_ALPHA = 32772;
      q.BLEND_COLOR = 32773;
      q.ARRAY_BUFFER = 34962;
      q.ELEMENT_ARRAY_BUFFER = 34963;
      q.ARRAY_BUFFER_BINDING = 34964;
      q.ELEMENT_ARRAY_BUFFER_BINDING =
        34965;
      q.STREAM_DRAW = 35040;
      q.STATIC_DRAW = 35044;
      q.DYNAMIC_DRAW = 35048;
      q.BUFFER_SIZE = 34660;
      q.BUFFER_USAGE = 34661;
      q.CURRENT_VERTEX_ATTRIB = 34342;
      q.FRONT = 1028;
      q.BACK = 1029;
      q.FRONT_AND_BACK = 1032;
      q.CULL_FACE = 2884;
      q.BLEND = 3042;
      q.DITHER = 3024;
      q.STENCIL_TEST = 2960;
      q.DEPTH_TEST = 2929;
      q.SCISSOR_TEST = 3089;
      q.POLYGON_OFFSET_FILL = 32823;
      q.SAMPLE_ALPHA_TO_COVERAGE = 32926;
      q.SAMPLE_COVERAGE = 32928;
      q.NO_ERROR = 0;
      q.INVALID_ENUM = 1280;
      q.INVALID_VALUE = 1281;
      q.INVALID_OPERATION = 1282;
      q.OUT_OF_MEMORY = 1285;
      q.CW = 2304;
      q.CCW = 2305;
      q.LINE_WIDTH =
        2849;
      q.ALIASED_POINT_SIZE_RANGE = 33901;
      q.ALIASED_LINE_WIDTH_RANGE = 33902;
      q.CULL_FACE_MODE = 2885;
      q.FRONT_FACE = 2886;
      q.DEPTH_RANGE = 2928;
      q.DEPTH_WRITEMASK = 2930;
      q.DEPTH_CLEAR_VALUE = 2931;
      q.DEPTH_FUNC = 2932;
      q.STENCIL_CLEAR_VALUE = 2961;
      q.STENCIL_FUNC = 2962;
      q.STENCIL_FAIL = 2964;
      q.STENCIL_PASS_DEPTH_FAIL = 2965;
      q.STENCIL_PASS_DEPTH_PASS = 2966;
      q.STENCIL_REF = 2967;
      q.STENCIL_VALUE_MASK = 2963;
      q.STENCIL_WRITEMASK = 2968;
      q.STENCIL_BACK_FUNC = 34816;
      q.STENCIL_BACK_FAIL = 34817;
      q.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
      q.STENCIL_BACK_PASS_DEPTH_PASS =
        34819;
      q.STENCIL_BACK_REF = 36003;
      q.STENCIL_BACK_VALUE_MASK = 36004;
      q.STENCIL_BACK_WRITEMASK = 36005;
      q.VIEWPORT = 2978;
      q.SCISSOR_BOX = 3088;
      q.COLOR_CLEAR_VALUE = 3106;
      q.COLOR_WRITEMASK = 3107;
      q.UNPACK_ALIGNMENT = 3317;
      q.PACK_ALIGNMENT = 3333;
      q.MAX_TEXTURE_SIZE = 3379;
      q.MAX_VIEWPORT_DIMS = 3386;
      q.SUBPIXEL_BITS = 3408;
      q.RED_BITS = 3410;
      q.GREEN_BITS = 3411;
      q.BLUE_BITS = 3412;
      q.ALPHA_BITS = 3413;
      q.DEPTH_BITS = 3414;
      q.STENCIL_BITS = 3415;
      q.POLYGON_OFFSET_UNITS = 10752;
      q.POLYGON_OFFSET_FACTOR = 32824;
      q.TEXTURE_BINDING_2D = 32873;
      q.SAMPLE_BUFFERS =
        32936;
      q.SAMPLES = 32937;
      q.SAMPLE_COVERAGE_VALUE = 32938;
      q.SAMPLE_COVERAGE_INVERT = 32939;
      q.NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
      q.COMPRESSED_TEXTURE_FORMATS = 34467;
      q.DONT_CARE = 4352;
      q.FASTEST = 4353;
      q.NICEST = 4354;
      q.GENERATE_MIPMAP_HINT = 33170;
      q.BYTE = 5120;
      q.UNSIGNED_BYTE = 5121;
      q.SHORT = 5122;
      q.UNSIGNED_SHORT = 5123;
      q.INT = 5124;
      q.UNSIGNED_INT = 5125;
      q.FLOAT = 5126;
      q.DEPTH_COMPONENT = 6402;
      q.ALPHA = 6406;
      q.RGB = 6407;
      q.RGBA = 6408;
      q.LUMINANCE = 6409;
      q.LUMINANCE_ALPHA = 6410;
      q.UNSIGNED_SHORT_4_4_4_4 = 32819;
      q.UNSIGNED_SHORT_5_5_5_1 = 32820;
      q.UNSIGNED_SHORT_5_6_5 = 33635;
      q.FRAGMENT_SHADER = 35632;
      q.VERTEX_SHADER = 35633;
      q.MAX_VERTEX_ATTRIBS = 34921;
      q.MAX_VERTEX_UNIFORM_VECTORS = 36347;
      q.MAX_VARYING_VECTORS = 36348;
      q.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
      q.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
      q.MAX_TEXTURE_IMAGE_UNITS = 34930;
      q.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
      q.SHADER_TYPE = 35663;
      q.DELETE_STATUS = 35712;
      q.LINK_STATUS = 35714;
      q.VALIDATE_STATUS = 35715;
      q.ATTACHED_SHADERS = 35717;
      q.ACTIVE_UNIFORMS = 35718;
      q.ACTIVE_ATTRIBUTES = 35721;
      q.SHADING_LANGUAGE_VERSION =
        35724;
      q.CURRENT_PROGRAM = 35725;
      q.NEVER = 512;
      q.LESS = 513;
      q.EQUAL = 514;
      q.LEQUAL = 515;
      q.GREATER = 516;
      q.NOTEQUAL = 517;
      q.GEQUAL = 518;
      q.ALWAYS = 519;
      q.KEEP = 7680;
      q.REPLACE = 7681;
      q.INCR = 7682;
      q.DECR = 7683;
      q.INVERT = 5386;
      q.INCR_WRAP = 34055;
      q.DECR_WRAP = 34056;
      q.VENDOR = 7936;
      q.RENDERER = 7937;
      q.VERSION = 7938;
      q.EXTENSIONS = 7939;
      q.NEAREST = 9728;
      q.LINEAR = 9729;
      q.NEAREST_MIPMAP_NEAREST = 9984;
      q.LINEAR_MIPMAP_NEAREST = 9985;
      q.NEAREST_MIPMAP_LINEAR = 9986;
      q.LINEAR_MIPMAP_LINEAR = 9987;
      q.TEXTURE_MAG_FILTER = 10240;
      q.TEXTURE_MIN_FILTER = 10241;
      q.TEXTURE_WRAP_S =
        10242;
      q.TEXTURE_WRAP_T = 10243;
      q.TEXTURE_2D = 3553;
      q.TEXTURE = 5890;
      q.TEXTURE_CUBE_MAP = 34067;
      q.TEXTURE_BINDING_CUBE_MAP = 34068;
      q.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
      q.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
      q.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
      q.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
      q.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
      q.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
      q.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
      q.TEXTURE0 = 33984;
      q.TEXTURE1 = 33985;
      q.TEXTURE2 = 33986;
      q.TEXTURE3 = 33987;
      q.TEXTURE4 = 33988;
      q.TEXTURE5 = 33989;
      q.TEXTURE6 = 33990;
      q.TEXTURE7 = 33991;
      q.TEXTURE8 = 33992;
      q.TEXTURE9 = 33993;
      q.TEXTURE10 = 33994;
      q.TEXTURE11 = 33995;
      q.TEXTURE12 = 33996;
      q.TEXTURE13 = 33997;
      q.TEXTURE14 = 33998;
      q.TEXTURE15 = 33999;
      q.TEXTURE16 = 34E3;
      q.TEXTURE17 = 34001;
      q.TEXTURE18 = 34002;
      q.TEXTURE19 = 34003;
      q.TEXTURE20 = 34004;
      q.TEXTURE21 = 34005;
      q.TEXTURE22 = 34006;
      q.TEXTURE23 = 34007;
      q.TEXTURE24 = 34008;
      q.TEXTURE25 = 34009;
      q.TEXTURE26 = 34010;
      q.TEXTURE27 = 34011;
      q.TEXTURE28 = 34012;
      q.TEXTURE29 = 34013;
      q.TEXTURE30 = 34014;
      q.TEXTURE31 = 34015;
      q.ACTIVE_TEXTURE = 34016;
      q.REPEAT = 10497;
      q.CLAMP_TO_EDGE = 33071;
      q.MIRRORED_REPEAT =
        33648;
      q.FLOAT_VEC2 = 35664;
      q.FLOAT_VEC3 = 35665;
      q.FLOAT_VEC4 = 35666;
      q.INT_VEC2 = 35667;
      q.INT_VEC3 = 35668;
      q.INT_VEC4 = 35669;
      q.BOOL = 35670;
      q.BOOL_VEC2 = 35671;
      q.BOOL_VEC3 = 35672;
      q.BOOL_VEC4 = 35673;
      q.FLOAT_MAT2 = 35674;
      q.FLOAT_MAT3 = 35675;
      q.FLOAT_MAT4 = 35676;
      q.SAMPLER_2D = 35678;
      q.SAMPLER_CUBE = 35680;
      q.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
      q.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
      q.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
      q.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
      q.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
      q.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
      q.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING =
        34975;
      q.IMPLEMENTATION_COLOR_READ_TYPE = 35738;
      q.IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
      q.VERTEX_PROGRAM_POINT_SIZE = 34370;
      q.POINT_SPRITE = 34913;
      q.COMPILE_STATUS = 35713;
      q.LOW_FLOAT = 36336;
      q.MEDIUM_FLOAT = 36337;
      q.HIGH_FLOAT = 36338;
      q.LOW_INT = 36339;
      q.MEDIUM_INT = 36340;
      q.HIGH_INT = 36341;
      q.FRAMEBUFFER = 36160;
      q.RENDERBUFFER = 36161;
      q.RGBA4 = 32854;
      q.RGB5_A1 = 32855;
      q.RGB565 = 36194;
      q.DEPTH_COMPONENT16 = 33189;
      q.STENCIL_INDEX = 6401;
      q.STENCIL_INDEX8 = 36168;
      q.DEPTH_STENCIL = 34041;
      q.RENDERBUFFER_WIDTH = 36162;
      q.RENDERBUFFER_HEIGHT =
        36163;
      q.RENDERBUFFER_INTERNAL_FORMAT = 36164;
      q.RENDERBUFFER_RED_SIZE = 36176;
      q.RENDERBUFFER_GREEN_SIZE = 36177;
      q.RENDERBUFFER_BLUE_SIZE = 36178;
      q.RENDERBUFFER_ALPHA_SIZE = 36179;
      q.RENDERBUFFER_DEPTH_SIZE = 36180;
      q.RENDERBUFFER_STENCIL_SIZE = 36181;
      q.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
      q.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
      q.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
      q.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
      q.COLOR_ATTACHMENT0 = 36064;
      q.DEPTH_ATTACHMENT = 36096;
      q.STENCIL_ATTACHMENT = 36128;
      q.DEPTH_STENCIL_ATTACHMENT =
        33306;
      q.NONE = 0;
      q.FRAMEBUFFER_COMPLETE = 36053;
      q.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
      q.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
      q.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
      q.FRAMEBUFFER_UNSUPPORTED = 36061;
      q.FRAMEBUFFER_BINDING = 36006;
      q.RENDERBUFFER_BINDING = 36007;
      q.MAX_RENDERBUFFER_SIZE = 34024;
      q.INVALID_FRAMEBUFFER_OPERATION = 1286;
      q.UNPACK_FLIP_Y_WEBGL = 37440;
      q.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
      q.CONTEXT_LOST_WEBGL = 37442;
      q.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
      q.BROWSER_DEFAULT_WEBGL = 37444;
      q.READ_BUFFER = 3074;
      q.UNPACK_ROW_LENGTH = 3314;
      q.UNPACK_SKIP_ROWS = 3315;
      q.UNPACK_SKIP_PIXELS = 3316;
      q.PACK_ROW_LENGTH = 3330;
      q.PACK_SKIP_ROWS = 3331;
      q.PACK_SKIP_PIXELS = 3332;
      q.TEXTURE_BINDING_3D = 32874;
      q.UNPACK_SKIP_IMAGES = 32877;
      q.UNPACK_IMAGE_HEIGHT = 32878;
      q.MAX_3D_TEXTURE_SIZE = 32883;
      q.MAX_ELEMENTS_VERTICES = 33E3;
      q.MAX_ELEMENTS_INDICES = 33001;
      q.MAX_TEXTURE_LOD_BIAS = 34045;
      q.MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657;
      q.MAX_VERTEX_UNIFORM_COMPONENTS = 35658;
      q.MAX_ARRAY_TEXTURE_LAYERS = 35071;
      q.MIN_PROGRAM_TEXEL_OFFSET = 35076;
      q.MAX_PROGRAM_TEXEL_OFFSET = 35077;
      q.MAX_VARYING_COMPONENTS = 35659;
      q.FRAGMENT_SHADER_DERIVATIVE_HINT = 35723;
      q.RASTERIZER_DISCARD = 35977;
      q.VERTEX_ARRAY_BINDING = 34229;
      q.MAX_VERTEX_OUTPUT_COMPONENTS = 37154;
      q.MAX_FRAGMENT_INPUT_COMPONENTS = 37157;
      q.MAX_SERVER_WAIT_TIMEOUT = 37137;
      q.MAX_ELEMENT_INDEX = 36203;
      q.RED = 6403;
      q.RGB8 = 32849;
      q.RGBA8 = 32856;
      q.RGB10_A2 = 32857;
      q.TEXTURE_3D = 32879;
      q.TEXTURE_WRAP_R = 32882;
      q.TEXTURE_MIN_LOD = 33082;
      q.TEXTURE_MAX_LOD = 33083;
      q.TEXTURE_BASE_LEVEL = 33084;
      q.TEXTURE_MAX_LEVEL = 33085;
      q.TEXTURE_COMPARE_MODE =
        34892;
      q.TEXTURE_COMPARE_FUNC = 34893;
      q.SRGB = 35904;
      q.SRGB8 = 35905;
      q.SRGB8_ALPHA8 = 35907;
      q.COMPARE_REF_TO_TEXTURE = 34894;
      q.RGBA32F = 34836;
      q.RGB32F = 34837;
      q.RGBA16F = 34842;
      q.RGB16F = 34843;
      q.TEXTURE_2D_ARRAY = 35866;
      q.TEXTURE_BINDING_2D_ARRAY = 35869;
      q.R11F_G11F_B10F = 35898;
      q.RGB9_E5 = 35901;
      q.RGBA32UI = 36208;
      q.RGB32UI = 36209;
      q.RGBA16UI = 36214;
      q.RGB16UI = 36215;
      q.RGBA8UI = 36220;
      q.RGB8UI = 36221;
      q.RGBA32I = 36226;
      q.RGB32I = 36227;
      q.RGBA16I = 36232;
      q.RGB16I = 36233;
      q.RGBA8I = 36238;
      q.RGB8I = 36239;
      q.RED_INTEGER = 36244;
      q.RGB_INTEGER = 36248;
      q.RGBA_INTEGER = 36249;
      q.R8 = 33321;
      q.RG8 = 33323;
      q.R16F = 33325;
      q.R32F = 33326;
      q.RG16F = 33327;
      q.RG32F = 33328;
      q.R8I = 33329;
      q.R8UI = 33330;
      q.R16I = 33331;
      q.R16UI = 33332;
      q.R32I = 33333;
      q.R32UI = 33334;
      q.RG8I = 33335;
      q.RG8UI = 33336;
      q.RG16I = 33337;
      q.RG16UI = 33338;
      q.RG32I = 33339;
      q.RG32UI = 33340;
      q.R8_SNORM = 36756;
      q.RG8_SNORM = 36757;
      q.RGB8_SNORM = 36758;
      q.RGBA8_SNORM = 36759;
      q.RGB10_A2UI = 36975;
      q.TEXTURE_IMMUTABLE_FORMAT = 37167;
      q.TEXTURE_IMMUTABLE_LEVELS = 33503;
      q.UNSIGNED_INT_2_10_10_10_REV = 33640;
      q.UNSIGNED_INT_10F_11F_11F_REV = 35899;
      q.UNSIGNED_INT_5_9_9_9_REV =
        35902;
      q.FLOAT_32_UNSIGNED_INT_24_8_REV = 36269;
      q.UNSIGNED_INT_24_8 = 34042;
      q.HALF_FLOAT = 5131;
      q.RG = 33319;
      q.RG_INTEGER = 33320;
      q.INT_2_10_10_10_REV = 36255;
      q.CURRENT_QUERY = 34917;
      q.QUERY_RESULT = 34918;
      q.QUERY_RESULT_AVAILABLE = 34919;
      q.ANY_SAMPLES_PASSED = 35887;
      q.ANY_SAMPLES_PASSED_CONSERVATIVE = 36202;
      q.MAX_DRAW_BUFFERS = 34852;
      q.DRAW_BUFFER0 = 34853;
      q.DRAW_BUFFER1 = 34854;
      q.DRAW_BUFFER2 = 34855;
      q.DRAW_BUFFER3 = 34856;
      q.DRAW_BUFFER4 = 34857;
      q.DRAW_BUFFER5 = 34858;
      q.DRAW_BUFFER6 = 34859;
      q.DRAW_BUFFER7 = 34860;
      q.DRAW_BUFFER8 = 34861;
      q.DRAW_BUFFER9 = 34862;
      q.DRAW_BUFFER10 = 34863;
      q.DRAW_BUFFER11 = 34864;
      q.DRAW_BUFFER12 = 34865;
      q.DRAW_BUFFER13 = 34866;
      q.DRAW_BUFFER14 = 34867;
      q.DRAW_BUFFER15 = 34868;
      q.MAX_COLOR_ATTACHMENTS = 36063;
      q.COLOR_ATTACHMENT1 = 36065;
      q.COLOR_ATTACHMENT2 = 36066;
      q.COLOR_ATTACHMENT3 = 36067;
      q.COLOR_ATTACHMENT4 = 36068;
      q.COLOR_ATTACHMENT5 = 36069;
      q.COLOR_ATTACHMENT6 = 36070;
      q.COLOR_ATTACHMENT7 = 36071;
      q.COLOR_ATTACHMENT8 = 36072;
      q.COLOR_ATTACHMENT9 = 36073;
      q.COLOR_ATTACHMENT10 = 36074;
      q.COLOR_ATTACHMENT11 = 36075;
      q.COLOR_ATTACHMENT12 = 36076;
      q.COLOR_ATTACHMENT13 =
        36077;
      q.COLOR_ATTACHMENT14 = 36078;
      q.COLOR_ATTACHMENT15 = 36079;
      q.SAMPLER_3D = 35679;
      q.SAMPLER_2D_SHADOW = 35682;
      q.SAMPLER_2D_ARRAY = 36289;
      q.SAMPLER_2D_ARRAY_SHADOW = 36292;
      q.SAMPLER_CUBE_SHADOW = 36293;
      q.INT_SAMPLER_2D = 36298;
      q.INT_SAMPLER_3D = 36299;
      q.INT_SAMPLER_CUBE = 36300;
      q.INT_SAMPLER_2D_ARRAY = 36303;
      q.UNSIGNED_INT_SAMPLER_2D = 36306;
      q.UNSIGNED_INT_SAMPLER_3D = 36307;
      q.UNSIGNED_INT_SAMPLER_CUBE = 36308;
      q.UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311;
      q.MAX_SAMPLES = 36183;
      q.SAMPLER_BINDING = 35097;
      q.PIXEL_PACK_BUFFER = 35051;
      q.PIXEL_UNPACK_BUFFER =
        35052;
      q.PIXEL_PACK_BUFFER_BINDING = 35053;
      q.PIXEL_UNPACK_BUFFER_BINDING = 35055;
      q.COPY_READ_BUFFER = 36662;
      q.COPY_WRITE_BUFFER = 36663;
      q.COPY_READ_BUFFER_BINDING = 36662;
      q.COPY_WRITE_BUFFER_BINDING = 36663;
      q.FLOAT_MAT2x3 = 35685;
      q.FLOAT_MAT2x4 = 35686;
      q.FLOAT_MAT3x2 = 35687;
      q.FLOAT_MAT3x4 = 35688;
      q.FLOAT_MAT4x2 = 35689;
      q.FLOAT_MAT4x3 = 35690;
      q.UNSIGNED_INT_VEC2 = 36294;
      q.UNSIGNED_INT_VEC3 = 36295;
      q.UNSIGNED_INT_VEC4 = 36296;
      q.UNSIGNED_NORMALIZED = 35863;
      q.SIGNED_NORMALIZED = 36764;
      q.VERTEX_ATTRIB_ARRAY_INTEGER = 35069;
      q.VERTEX_ATTRIB_ARRAY_DIVISOR =
        35070;
      q.TRANSFORM_FEEDBACK_BUFFER_MODE = 35967;
      q.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968;
      q.TRANSFORM_FEEDBACK_VARYINGS = 35971;
      q.TRANSFORM_FEEDBACK_BUFFER_START = 35972;
      q.TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973;
      q.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976;
      q.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978;
      q.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979;
      q.INTERLEAVED_ATTRIBS = 35980;
      q.SEPARATE_ATTRIBS = 35981;
      q.TRANSFORM_FEEDBACK_BUFFER = 35982;
      q.TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983;
      q.TRANSFORM_FEEDBACK =
        36386;
      q.TRANSFORM_FEEDBACK_PAUSED = 36387;
      q.TRANSFORM_FEEDBACK_ACTIVE = 36388;
      q.TRANSFORM_FEEDBACK_BINDING = 36389;
      q.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296;
      q.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297;
      q.FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298;
      q.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299;
      q.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300;
      q.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301;
      q.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302;
      q.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303;
      q.FRAMEBUFFER_DEFAULT = 33304;
      q.DEPTH24_STENCIL8 = 35056;
      q.DRAW_FRAMEBUFFER_BINDING = 36006;
      q.READ_FRAMEBUFFER = 36008;
      q.DRAW_FRAMEBUFFER = 36009;
      q.READ_FRAMEBUFFER_BINDING = 36010;
      q.RENDERBUFFER_SAMPLES = 36011;
      q.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052;
      q.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182;
      q.UNIFORM_BUFFER = 35345;
      q.UNIFORM_BUFFER_BINDING = 35368;
      q.UNIFORM_BUFFER_START = 35369;
      q.UNIFORM_BUFFER_SIZE = 35370;
      q.MAX_VERTEX_UNIFORM_BLOCKS = 35371;
      q.MAX_FRAGMENT_UNIFORM_BLOCKS = 35373;
      q.MAX_COMBINED_UNIFORM_BLOCKS = 35374;
      q.MAX_UNIFORM_BUFFER_BINDINGS = 35375;
      q.MAX_UNIFORM_BLOCK_SIZE =
        35376;
      q.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377;
      q.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379;
      q.UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380;
      q.ACTIVE_UNIFORM_BLOCKS = 35382;
      q.UNIFORM_TYPE = 35383;
      q.UNIFORM_SIZE = 35384;
      q.UNIFORM_BLOCK_INDEX = 35386;
      q.UNIFORM_OFFSET = 35387;
      q.UNIFORM_ARRAY_STRIDE = 35388;
      q.UNIFORM_MATRIX_STRIDE = 35389;
      q.UNIFORM_IS_ROW_MAJOR = 35390;
      q.UNIFORM_BLOCK_BINDING = 35391;
      q.UNIFORM_BLOCK_DATA_SIZE = 35392;
      q.UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394;
      q.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395;
      q.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER =
        35396;
      q.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398;
      q.OBJECT_TYPE = 37138;
      q.SYNC_CONDITION = 37139;
      q.SYNC_STATUS = 37140;
      q.SYNC_FLAGS = 37141;
      q.SYNC_FENCE = 37142;
      q.SYNC_GPU_COMMANDS_COMPLETE = 37143;
      q.UNSIGNALED = 37144;
      q.SIGNALED = 37145;
      q.ALREADY_SIGNALED = 37146;
      q.TIMEOUT_EXPIRED = 37147;
      q.CONDITION_SATISFIED = 37148;
      q.WAIT_FAILED = 37149;
      q.SYNC_FLUSH_COMMANDS_BIT = 1;
      q.COLOR = 6144;
      q.DEPTH = 6145;
      q.STENCIL = 6146;
      q.MIN = 32775;
      q.MAX = 32776;
      q.DEPTH_COMPONENT24 = 33190;
      q.STREAM_READ = 35041;
      q.STREAM_COPY = 35042;
      q.STATIC_READ = 35045;
      q.STATIC_COPY = 35046;
      q.DYNAMIC_READ = 35049;
      q.DYNAMIC_COPY = 35050;
      q.DEPTH_COMPONENT32F = 36012;
      q.DEPTH32F_STENCIL8 = 36013;
      q.INVALID_INDEX = -1;
      q.TIMEOUT_IGNORED = -1;
      q.MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 37447;
      Od.__identity = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
      ta.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
      Dc.audioSources = [];
      Dc.sourcesToRemove = [];
      Wj.ID = 0;
      B.NONE = 0;
      B.FALSE = 0;
      B.TRUE = 1;
      B.SOURCE_RELATIVE = 514;
      B.CONE_INNER_ANGLE = 4097;
      B.CONE_OUTER_ANGLE = 4098;
      B.PITCH = 4099;
      B.POSITION = 4100;
      B.DIRECTION = 4101;
      B.VELOCITY =
        4102;
      B.LOOPING = 4103;
      B.BUFFER = 4105;
      B.GAIN = 4106;
      B.MIN_GAIN = 4109;
      B.MAX_GAIN = 4110;
      B.ORIENTATION = 4111;
      B.SOURCE_STATE = 4112;
      B.INITIAL = 4113;
      B.PLAYING = 4114;
      B.PAUSED = 4115;
      B.STOPPED = 4116;
      B.BUFFERS_QUEUED = 4117;
      B.BUFFERS_PROCESSED = 4118;
      B.REFERENCE_DISTANCE = 4128;
      B.ROLLOFF_FACTOR = 4129;
      B.CONE_OUTER_GAIN = 4130;
      B.MAX_DISTANCE = 4131;
      B.SEC_OFFSET = 4132;
      B.SAMPLE_OFFSET = 4133;
      B.BYTE_OFFSET = 4134;
      B.SOURCE_TYPE = 4135;
      B.STATIC = 4136;
      B.STREAMING = 4137;
      B.UNDETERMINED = 4144;
      B.FORMAT_MONO8 = 4352;
      B.FORMAT_MONO16 = 4353;
      B.FORMAT_STEREO8 = 4354;
      B.FORMAT_STEREO16 = 4355;
      B.FREQUENCY = 8193;
      B.BITS = 8194;
      B.CHANNELS = 8195;
      B.SIZE = 8196;
      B.NO_ERROR = 0;
      B.INVALID_NAME = 40961;
      B.INVALID_ENUM = 40962;
      B.INVALID_VALUE = 40963;
      B.INVALID_OPERATION = 40964;
      B.OUT_OF_MEMORY = 40965;
      B.VENDOR = 45057;
      B.VERSION = 45058;
      B.RENDERER = 45059;
      B.EXTENSIONS = 45060;
      B.DOPPLER_FACTOR = 49152;
      B.SPEED_OF_SOUND = 49155;
      B.DOPPLER_VELOCITY = 49153;
      B.DISTANCE_MODEL = 53248;
      B.INVERSE_DISTANCE = 53249;
      B.INVERSE_DISTANCE_CLAMPED = 53250;
      B.LINEAR_DISTANCE = 53251;
      B.LINEAR_DISTANCE_CLAMPED = 53252;
      B.EXPONENT_DISTANCE = 53253;
      B.EXPONENT_DISTANCE_CLAMPED = 53254;
      B.METERS_PER_UNIT = 131076;
      B.DIRECT_FILTER = 131077;
      B.AUXILIARY_SEND_FILTER = 131078;
      B.AIR_ABSORPTION_FACTOR = 131079;
      B.ROOM_ROLLOFF_FACTOR = 131080;
      B.CONE_OUTER_GAINHF = 131081;
      B.DIRECT_FILTER_GAINHF_AUTO = 131082;
      B.AUXILIARY_SEND_FILTER_GAIN_AUTO = 131083;
      B.AUXILIARY_SEND_FILTER_GAINHF_AUTO = 131084;
      B.REVERB_DENSITY = 1;
      B.REVERB_DIFFUSION = 2;
      B.REVERB_GAIN = 3;
      B.REVERB_GAINHF = 4;
      B.REVERB_DECAY_TIME = 5;
      B.REVERB_DECAY_HFRATIO = 6;
      B.REVERB_REFLECTIONS_GAIN = 7;
      B.REVERB_REFLECTIONS_DELAY = 8;
      B.REVERB_LATE_REVERB_GAIN =
        9;
      B.REVERB_LATE_REVERB_DELAY = 10;
      B.REVERB_AIR_ABSORPTION_GAINHF = 11;
      B.REVERB_ROOM_ROLLOFF_FACTOR = 12;
      B.REVERB_DECAY_HFLIMIT = 13;
      B.EAXREVERB_DENSITY = 1;
      B.EAXREVERB_DIFFUSION = 2;
      B.EAXREVERB_GAIN = 3;
      B.EAXREVERB_GAINHF = 4;
      B.EAXREVERB_GAINLF = 5;
      B.EAXREVERB_DECAY_TIME = 6;
      B.EAXREVERB_DECAY_HFRATIO = 7;
      B.EAXREVERB_DECAY_LFRATIO = 8;
      B.EAXREVERB_REFLECTIONS_GAIN = 9;
      B.EAXREVERB_REFLECTIONS_DELAY = 10;
      B.EAXREVERB_REFLECTIONS_PAN = 11;
      B.EAXREVERB_LATE_REVERB_GAIN = 12;
      B.EAXREVERB_LATE_REVERB_DELAY = 13;
      B.EAXREVERB_LATE_REVERB_PAN = 14;
      B.EAXREVERB_ECHO_TIME = 15;
      B.EAXREVERB_ECHO_DEPTH = 16;
      B.EAXREVERB_MODULATION_TIME = 17;
      B.EAXREVERB_MODULATION_DEPTH = 18;
      B.EAXREVERB_AIR_ABSORPTION_GAINHF = 19;
      B.EAXREVERB_HFREFERENCE = 20;
      B.EAXREVERB_LFREFERENCE = 21;
      B.EAXREVERB_ROOM_ROLLOFF_FACTOR = 22;
      B.EAXREVERB_DECAY_HFLIMIT = 23;
      B.CHORUS_WAVEFORM = 1;
      B.CHORUS_PHASE = 2;
      B.CHORUS_RATE = 3;
      B.CHORUS_DEPTH = 4;
      B.CHORUS_FEEDBACK = 5;
      B.CHORUS_DELAY = 6;
      B.DISTORTION_EDGE = 1;
      B.DISTORTION_GAIN = 2;
      B.DISTORTION_LOWPASS_CUTOFF = 3;
      B.DISTORTION_EQCENTER = 4;
      B.DISTORTION_EQBANDWIDTH = 5;
      B.ECHO_DELAY =
        1;
      B.ECHO_LRDELAY = 2;
      B.ECHO_DAMPING = 3;
      B.ECHO_FEEDBACK = 4;
      B.ECHO_SPREAD = 5;
      B.FLANGER_WAVEFORM = 1;
      B.FLANGER_PHASE = 2;
      B.FLANGER_RATE = 3;
      B.FLANGER_DEPTH = 4;
      B.FLANGER_FEEDBACK = 5;
      B.FLANGER_DELAY = 6;
      B.FREQUENCY_SHIFTER_FREQUENCY = 1;
      B.FREQUENCY_SHIFTER_LEFT_DIRECTION = 2;
      B.FREQUENCY_SHIFTER_RIGHT_DIRECTION = 3;
      B.VOCAL_MORPHER_PHONEMEA = 1;
      B.VOCAL_MORPHER_PHONEMEA_COARSE_TUNING = 2;
      B.VOCAL_MORPHER_PHONEMEB = 3;
      B.VOCAL_MORPHER_PHONEMEB_COARSE_TUNING = 4;
      B.VOCAL_MORPHER_WAVEFORM = 5;
      B.VOCAL_MORPHER_RATE = 6;
      B.PITCH_SHIFTER_COARSE_TUNE =
        1;
      B.PITCH_SHIFTER_FINE_TUNE = 2;
      B.RING_MODULATOR_FREQUENCY = 1;
      B.RING_MODULATOR_HIGHPASS_CUTOFF = 2;
      B.RING_MODULATOR_WAVEFORM = 3;
      B.AUTOWAH_ATTACK_TIME = 1;
      B.AUTOWAH_RELEASE_TIME = 2;
      B.AUTOWAH_RESONANCE = 3;
      B.AUTOWAH_PEAK_GAIN = 4;
      B.COMPRESSOR_ONOFF = 1;
      B.EQUALIZER_LOW_GAIN = 1;
      B.EQUALIZER_LOW_CUTOFF = 2;
      B.EQUALIZER_MID1_GAIN = 3;
      B.EQUALIZER_MID1_CENTER = 4;
      B.EQUALIZER_MID1_WIDTH = 5;
      B.EQUALIZER_MID2_GAIN = 6;
      B.EQUALIZER_MID2_CENTER = 7;
      B.EQUALIZER_MID2_WIDTH = 8;
      B.EQUALIZER_HIGH_GAIN = 9;
      B.EQUALIZER_HIGH_CUTOFF = 10;
      B.EFFECT_FIRST_PARAMETER =
        0;
      B.EFFECT_LAST_PARAMETER = 32768;
      B.EFFECT_TYPE = 32769;
      B.EFFECT_NULL = 0;
      B.EFFECT_EAXREVERB = 32768;
      B.EFFECT_REVERB = 1;
      B.EFFECT_CHORUS = 2;
      B.EFFECT_DISTORTION = 3;
      B.EFFECT_ECHO = 4;
      B.EFFECT_FLANGER = 5;
      B.EFFECT_FREQUENCY_SHIFTER = 6;
      B.EFFECT_VOCAL_MORPHER = 7;
      B.EFFECT_PITCH_SHIFTER = 8;
      B.EFFECT_RING_MODULATOR = 9;
      B.FFECT_AUTOWAH = 10;
      B.EFFECT_COMPRESSOR = 11;
      B.EFFECT_EQUALIZER = 12;
      B.EFFECTSLOT_EFFECT = 1;
      B.EFFECTSLOT_GAIN = 2;
      B.EFFECTSLOT_AUXILIARY_SEND_AUTO = 3;
      B.LOWPASS_GAIN = 1;
      B.LOWPASS_GAINHF = 2;
      B.HIGHPASS_GAIN = 1;
      B.HIGHPASS_GAINLF =
        2;
      B.BANDPASS_GAIN = 1;
      B.BANDPASS_GAINLF = 2;
      B.BANDPASS_GAINHF = 3;
      B.FILTER_FIRST_PARAMETER = 0;
      B.FILTER_LAST_PARAMETER = 32768;
      B.FILTER_TYPE = 32769;
      B.FILTER_NULL = 0;
      B.FILTER_LOWPASS = 1;
      B.FILTER_HIGHPASS = 2;
      B.FILTER_BANDPASS = 3;
      Ib.FALSE = 0;
      Ib.TRUE = 1;
      Ib.FREQUENCY = 4103;
      Ib.REFRESH = 4104;
      Ib.SYNC = 4105;
      Ib.MONO_SOURCES = 4112;
      Ib.STEREO_SOURCES = 4113;
      Ib.NO_ERROR = 0;
      Ib.INVALID_DEVICE = 40961;
      Ib.INVALID_CONTEXT = 40962;
      Ib.INVALID_ENUM = 40963;
      Ib.INVALID_VALUE = 40964;
      Ib.OUT_OF_MEMORY = 40965;
      Ib.ATTRIBUTES_SIZE = 4098;
      Ib.ALL_ATTRIBUTES = 4099;
      Ib.DEFAULT_DEVICE_SPECIFIER = 4100;
      Ib.DEVICE_SPECIFIER = 4101;
      Ib.EXTENSIONS = 4102;
      Ib.ENUMERATE_ALL_EXT = 1;
      Ib.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
      Ib.ALL_DEVICES_SPECIFIER = 4115;
      oe.onUpdate = new Pd;
      ze.alreadyCreated = new ua;
      ze.initialized = !1;
      Pf.sensorByID = new Za;
      Pf.sensors = [];
      Wa.__directories = new Za;
      Nd.devices = new Za;
      Nd.onConnect = new Oo;
      bd.devices = new Za;
      bd.onConnect = new Po;
      Db.NONE = 0;
      Db.LEFT_SHIFT = 1;
      Db.RIGHT_SHIFT = 2;
      Db.LEFT_CTRL = 64;
      Db.RIGHT_CTRL = 128;
      Db.LEFT_ALT = 256;
      Db.RIGHT_ALT = 512;
      Db.LEFT_META = 1024;
      Db.RIGHT_META =
        2048;
      Db.NUM_LOCK = 4096;
      Db.CAPS_LOCK = 8192;
      Db.MODE = 16384;
      Db.CTRL = 192;
      Db.SHIFT = 3;
      Db.ALT = 768;
      Db.META = 3072;
      sd.onCancel = new Ni;
      sd.onEnd = new Ni;
      sd.onMove = new Ni;
      sd.onStart = new Ni;
      sa.cache = new Wo;
      sa.onChange = new Pd;
      sa.bundlePaths = new ua;
      sa.libraries = new ua;
      sa.libraryPaths = new ua;
      Xg.BYTES_PER_ELEMENT = 4;
      Na.throwErrors = !1;
      jr.VERSION = 2;
      Ja.__lastTimerID = 0;
      Ja.__sentWarnings = new ua;
      Ja.__timers = new Za;
      $g.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Df.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          toJSON: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Ff.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          toJSON: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Gf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          toJSON: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Ef.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          toJSON: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      sf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          concat: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          toJSON: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      lj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      wa.__meta__ = {
        fields: {
          image: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __framebufferContext: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __indexBufferContext: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __surface: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __textureContext: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __vertexBufferContext: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          compare: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          getSurface: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __fromImage: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      wa.VERTEX_BUFFER_STRIDE = 14;
      wa.__tempVector = new be;
      Xe.__meta__ = {
        fields: {
          __context: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __type: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Gm.__meta__ = {
        fields: {
          cairo: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __matrix3: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          applyMatrix: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __setBlendModeCairo: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Dg.__meta__ = {
        fields: {
          context: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          applySmoothing: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          setTransform: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __setBlendModeContext: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Tq.NONE = 0;
      Tq.ROUND = 1;
      Tq.SQUARE = 2;
      Km.__meta__ = {
        fields: {
          __element: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Qi.__meta__ = {
        fields: {
          element: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          applyStyle: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          clearStyle: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      gf.__meta__ = {
        fields: {
          glProgram: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Ze.__meta__ = {
        fields: {
          overrideBlendMode: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      Si.SIN45 = .7071067811865476;
      Si.TAN22 = .41421356237309503;
      Wq.BEVEL = 0;
      Wq.MITER = 1;
      Wq.ROUND = 2;
      Ij.__meta__ = {
        fields: {
          BitmapData_onError: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      eg.__meta__ = {
        statics: {
          create: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        },
        fields: {
          parameters: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      eg.__rootURL = Wg.get_supported() ? window.document.URL : "";
      Jb.__meta__ = {
        fields: {
          gl: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __gl: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __matrix: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __projection: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __projectionFlipped: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          getMatrix: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Jb.__alphaValue = [1];
      Jb.__colorMultipliersValue = [0, 0, 0, 0];
      Jb.__colorOffsetsValue = [0, 0, 0, 0];
      Jb.__defaultColorMultipliersValue = [1, 1, 1, 1];
      Jb.__emptyColorValue = [0, 0, 0, 0];
      Jb.__emptyAlphaValue = [1];
      Jb.__hasColorTransformValue = [!1];
      Jb.__scissorRectangle = new ha;
      Jb.__textureSizeValue = [0, 0];
      cp.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          onComplete: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      $m.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Nm.__meta__ = {
        fields: {
          index: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          name: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      Ri.__meta__ = {
        fields: {
          index: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          name: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      Vi.__meta__ = {
        fields: {
          __broadcastEvent: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __dispatchEvent: {
            SuppressWarnings: [
              ["checkstyle:Dynamic", "checkstyle:LeftCurly"]
            ]
          },
          __dispatchStack: {
            SuppressWarnings: [
              ["checkstyle:Dynamic",
                "checkstyle:LeftCurly"
              ]
            ]
          },
          __dispatchTarget: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __handleError: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      sg.__meta__ = {
        fields: {
          data: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      an.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      bk.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          _: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Yi.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      bn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      cn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      dn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      en.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      fn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      fi.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        statics: {
          renderTileContainer: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Pi.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Dh.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Ee.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          o: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Ee.empty = new Ee;
      A.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        statics: {
          windingRule: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          createBitmapFill: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          createGradientPattern: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      A.SIN45 = .7071067811865476;
      A.TAN22 = .41421356237309503;
      A.fillCommands = new Ee;
      A.strokeCommands = new Ee;
      ar.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      X.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Vf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        statics: {
          renderTileContainer: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      ai.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      wf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Fh.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Fh.MAX_INDEX_BUFFER_LENGTH = 65535;
      Fh.MAX_QUADS_PER_INDEX_BUFFER =
        10922;
      Fh.MAX_QUAD_INDEX_BUFFER_LENGTH = 65532;
      bh.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Uc.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Uc.blankBitmapData = new wa(1, 1, !1, 0);
      Uc.tempColorTransform = new Ec(1, 1, 1, 1, 0, 0, 0, 0);
      bi.opaqueBitmapData = new wa(1, 1, !1, 0);
      $f.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      ch.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      fa.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      xf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      xf.__textureSizeValue = [0, 0];
      Vc.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Wf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      qf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      dc.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      dc.__regexColor = new nb("color=(\"#([^\"]+)\"|'#([^']+)')", "i");
      dc.__regexFace = new nb("face=(\"([^\"]+)\"|'([^']+)')", "i");
      dc.__regexFont =
        new nb("<font ([^>]+)>", "gi");
      dc.__regexCloseFont = new nb("</font>", "gi");
      dc.__regexSize = new nb("size=(\"([^\"]+)\"|'([^']+)')", "i");
      Eg.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      ah.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Xf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          obj: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Gh.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      gi.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      gi.alphaColorTransform = new Ec;
      gi.bitmap = new Ac;
      gi.destPoint = new la;
      gi.sourceRect = new ha;
      $h.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        statics: {
          P: {
            SuppressWarnings: ["checkstyle:ConstantName"]
          }
        }
      };
      $h.P = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60,
        211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31,
        181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180, 151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132,
        187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29,
        24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180
      ];
      Tg.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Pm.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          overrideIntValues: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      ac.supportsVideoTexture = !0;
      ac.__glDepthStencil = -1;
      ac.__glMaxTextureMaxAnisotropy = -1;
      ac.__glMaxViewportDims = -1;
      ac.__glMemoryCurrentAvailable = -1;
      ac.__glMemoryTotalAvailable = -1;
      ac.__glTextureMaxAnisotropy = -1;
      br.DYNAMIC_DRAW = 0;
      br.STATIC_DRAW = 1;
      cr.FRAGMENT =
        0;
      cr.VERTEX = 1;
      fk.BGR_PACKED = 0;
      fk.BGRA = 1;
      fk.BGRA_PACKED = 2;
      fk.COMPRESSED = 3;
      fk.COMPRESSED_ALPHA = 4;
      fk.RGBA_HALF_FLOAT = 5;
      jn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      gk.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Fe.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Fe.limitedProfile = !0;
      $i.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      kn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      aj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      ii.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      hk.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      dk.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      fc.__meta__ = {
        fields: {
          __textureContext: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __getGLFramebuffer: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      hi.__lowMemoryMode = !1;
      jd.DEFAULT_TO_STRING = "Error";
      fh.ACTIVITY = "activity";
      hf.LINK = "link";
      hf.TEXT_INPUT = "textInput";
      Ye.ERROR = "error";
      oj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      nj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Zf.FOCUS_IN = "focusIn";
      Zf.FOCUS_OUT = "focusOut";
      Zf.KEY_FOCUS_CHANGE = "keyFocusChange";
      Zf.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
      dh.FULL_SCREEN = "fullScreen";
      dh.FULL_SCREEN_INTERACTIVE_ACCEPTED = "fullScreenInteractiveAccepted";
      Hg.DEVICE_ADDED = "deviceAdded";
      Hg.DEVICE_REMOVED = "deviceRemoved";
      Hg.DEVICE_UNUSABLE = "deviceUnusable";
      ji.HTTP_RESPONSE_STATUS = "httpResponseStatus";
      ji.HTTP_STATUS = "httpStatus";
      og.IO_ERROR = "ioError";
      di.KEY_DOWN = "keyDown";
      di.KEY_UP = "keyUp";
      Ob.CLICK = "click";
      Ob.DOUBLE_CLICK = "doubleClick";
      Ob.MIDDLE_CLICK = "middleClick";
      Ob.MIDDLE_MOUSE_DOWN = "middleMouseDown";
      Ob.MIDDLE_MOUSE_UP = "middleMouseUp";
      Ob.MOUSE_DOWN = "mouseDown";
      Ob.MOUSE_MOVE = "mouseMove";
      Ob.MOUSE_OUT = "mouseOut";
      Ob.MOUSE_OVER = "mouseOver";
      Ob.MOUSE_UP = "mouseUp";
      Ob.MOUSE_WHEEL = "mouseWheel";
      Ob.RELEASE_OUTSIDE = "releaseOutside";
      Ob.RIGHT_CLICK = "rightClick";
      Ob.RIGHT_MOUSE_DOWN = "rightMouseDown";
      Ob.RIGHT_MOUSE_UP = "rightMouseUp";
      Ob.ROLL_OUT = "rollOut";
      Ob.ROLL_OVER = "rollOver";
      ki.NET_STATUS = "netStatus";
      Fg.PROGRESS = "progress";
      Fg.SOCKET_DATA = "socketData";
      tg.CLEAR_DOM = "clearDOM";
      tg.RENDER_CAIRO = "renderCairo";
      tg.RENDER_CANVAS = "renderCanvas";
      tg.RENDER_DOM = "renderDOM";
      tg.RENDER_OPENGL = "renderOpenGL";
      cj.SECURITY_ERROR = "securityError";
      $d.__meta__ = {
        fields: {
          delta: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      $d.TOUCH_BEGIN = "touchBegin";
      $d.TOUCH_END = "touchEnd";
      $d.TOUCH_MOVE = "touchMove";
      $d.TOUCH_OUT = "touchOut";
      $d.TOUCH_OVER = "touchOver";
      $d.TOUCH_ROLL_OUT = "touchRollOut";
      $d.TOUCH_ROLL_OVER =
        "touchRollOver";
      $d.TOUCH_TAP = "touchTap";
      Wi.UNCAUGHT_ERROR = "uncaughtError";
      ik.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      gg.__colorMatrixShader = new ik;
      ge.__meta__ = {
        statics: {
          create2D: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          createABCD: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          createOrtho: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      yd.MAX_ACTIVE_CHANNELS = 32;
      yd.__soundChannels = [];
      yd.__soundTransform = new mf;
      mn.VERTEX_BUFFER_STRIDE = 5;
      jk.__meta__ = {
        statics: {
          CONNECT_SUCCESS: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      jk.CONNECT_SUCCESS = "NetConnection.Connect.Success";
      nn.__meta__ = {
        fields: {
          audioCodec: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          decodedFrames: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          speed: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          requestVideoStatus: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      ed.defaultObjectEncoding = 10;
      Hh.followRedirects = !0;
      Hh.idleTimeout = 0;
      Hh.manageCookies = !1;
      Ti.currentDomain = new Ti(null);
      zc.avHardwareDisable = !0;
      zc.hasAccessibility = !1;
      zc.hasAudio = !0;
      zc.hasAudioEncoder = !1;
      zc.hasEmbeddedVideo = !1;
      zc.hasIME = !1;
      zc.hasMP3 = !1;
      zc.hasPrinting = !0;
      zc.hasScreenBroadcast = !1;
      zc.hasScreenPlayback = !1;
      zc.hasStreamingAudio = !1;
      zc.hasStreamingVideo = !1;
      zc.hasTLS = !0;
      zc.hasVideoEncoder = !0;
      zc.isDebugger = !0;
      zc.isEmbeddedInAcrobat = !1;
      zc.localFileReadDisable = !0;
      zc.maxLevelIDC = 0;
      zc.playerType = "PlugIn";
      zc.screenColor = "color";
      zc.serverString = "";
      zc.supports32BitProcesses = !1;
      zc.supports64BitProcesses = !1;
      zc.touchscreenType = 0;
      zc.__standardDensities = [120, 160, 240, 320, 480, 640, 800,
        960
      ];
      kk.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:UnnecessaryConstructor"]
        }
      };
      kk.currentDomain = new kk;
      cg.useCodePage = !1;
      Wc.__fontByName = new ua;
      Wc.__registeredFonts = [];
      Se.__missingFontWarning = new ua;
      wg.__meta__ = {
        fields: {
          clone: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      lk.CENTER = 0;
      lk.END = 1;
      lk.JUSTIFY = 2;
      lk.LEFT = 3;
      lk.RIGHT = 4;
      lk.START = 5;
      mp.__meta__ = {
        obj: {
          SuppressWarnings: [
            ["checkstyle:FieldDocComment", "checkstyle:Dynamic"]
          ]
        }
      };
      Ab.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Ab.__regexAlign = new nb("align\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexBreakTag = new nb("<br\\s*/?>", "gi");
      Ab.__regexBlockIndent = new nb("blockindent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexColor = new nb("color\\s?=\\s?(\"#([^\"]+)\"|'#([^']+)')", "i");
      Ab.__regexEntities = [new nb("&quot;", "g"), new nb("&apos;", "g"), new nb("&amp;", "g"), new nb("&lt;", "g"), new nb("&gt;", "g"), new nb("&nbsp;", "g")];
      Ab.__regexFace = new nb("face\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexHTMLTag = new nb("<.*?>",
        "g");
      Ab.__regexHref = new nb("href\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexIndent = new nb(" indent\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexLeading = new nb("leading\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexLeftMargin = new nb("leftmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexRightMargin = new nb("rightmargin\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexSize = new nb("size\\s?=\\s?(\"([^\"]+)\"|'([^']+)')", "i");
      Ab.__regexTabStops = new nb("tabstops\\s?=\\s?(\"([^\"]+)\"|'([^']+)')",
        "i");
      Ub.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          __cairoFont: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Ub.GUTTER = 2;
      Ub.UTF8_TAB = 9;
      Ub.UTF8_ENDLINE = 10;
      Ub.UTF8_SPACE = 32;
      Ub.UTF8_HYPHEN = 45;
      Ub.__defaultFonts = new ua;
      Wd.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          glyphs: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __handle: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __hbBuffer: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          __hbFont: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          },
          get_glyphs: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      Wd.FT_LOAD_DEFAULT = 0;
      Wd.FT_LOAD_NO_SCALE = 1;
      Wd.FT_LOAD_NO_HINTING = 2;
      Wd.FT_LOAD_RENDER = 4;
      Wd.FT_LOAD_NO_BITMAP = 8;
      Wd.FT_LOAD_VERTICAL_LAYOUT = 16;
      Wd.FT_LOAD_FORCE_AUTOHINT = 32;
      Wd.FT_LOAD_CROP_BITMAP = 64;
      Wd.FT_LOAD_PEDANTIC = 128;
      Wd.FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 256;
      Wd.FT_LOAD_NO_RECURSE = 512;
      Wd.FT_LOAD_IGNORE_TRANSFORM = 1024;
      Wd.FT_LOAD_MONOCHROME = 2048;
      Wd.FT_LOAD_LINEAR_DESIGN = 4096;
      Wd.FT_LOAD_NO_AUTOHINT = 8192;
      Wd.FT_LOAD_COLOR = 16384;
      Wd.FT_LOAD_COMPUTE_METRICS =
        32768;
      Wd.FT_LOAD_BITMAP_METRICS_ONLY = 65536;
      Wd.FT_LOAD_TARGET_NORMAL = 0;
      Wd.FT_LOAD_TARGET_LIGHT = 0;
      on.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      $b.__meta__ = {
        fields: {
          addEventListener: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      $b.isSupported = !0;
      $b.numDevices = 0;
      $b.__deviceList = [];
      $b.__instances = [];
      $b.__devices = new pc;
      pn.MAX_BUFFER_SIZE = 32E3;
      Ca.__meta__ = {
        statics: {
          BREAK: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          },
          NUMLOCK: {
            SuppressWarnings: ["checkstyle:FieldDocComment"]
          }
        }
      };
      Ca.NUMBER_0 =
        48;
      Ca.NUMBER_1 = 49;
      Ca.NUMBER_2 = 50;
      Ca.NUMBER_3 = 51;
      Ca.NUMBER_4 = 52;
      Ca.NUMBER_5 = 53;
      Ca.NUMBER_6 = 54;
      Ca.NUMBER_7 = 55;
      Ca.NUMBER_8 = 56;
      Ca.NUMBER_9 = 57;
      Ca.A = 65;
      Ca.B = 66;
      Ca.C = 67;
      Ca.D = 68;
      Ca.E = 69;
      Ca.F = 70;
      Ca.G = 71;
      Ca.H = 72;
      Ca.I = 73;
      Ca.J = 74;
      Ca.K = 75;
      Ca.L = 76;
      Ca.M = 77;
      Ca.N = 78;
      Ca.O = 79;
      Ca.P = 80;
      Ca.Q = 81;
      Ca.R = 82;
      Ca.S = 83;
      Ca.T = 84;
      Ca.U = 85;
      Ca.V = 86;
      Ca.W = 87;
      Ca.X = 88;
      Ca.Y = 89;
      Ca.Z = 90;
      Ca.NUMPAD_0 = 96;
      Ca.NUMPAD_1 = 97;
      Ca.NUMPAD_2 = 98;
      Ca.NUMPAD_3 = 99;
      Ca.NUMPAD_4 = 100;
      Ca.NUMPAD_5 = 101;
      Ca.NUMPAD_6 = 102;
      Ca.NUMPAD_7 = 103;
      Ca.NUMPAD_8 = 104;
      Ca.NUMPAD_9 = 105;
      Ca.NUMPAD_MULTIPLY = 106;
      Ca.NUMPAD_ADD = 107;
      Ca.NUMPAD_ENTER = 108;
      Ca.NUMPAD_SUBTRACT = 109;
      Ca.NUMPAD_DECIMAL = 110;
      Ca.NUMPAD_DIVIDE = 111;
      Ca.F1 = 112;
      Ca.F2 = 113;
      Ca.F3 = 114;
      Ca.F4 = 115;
      Ca.F5 = 116;
      Ca.F6 = 117;
      Ca.F7 = 118;
      Ca.F8 = 119;
      Ca.F9 = 120;
      Ca.F10 = 121;
      Ca.F11 = 122;
      Ca.F12 = 123;
      Ca.F13 = 124;
      Ca.F14 = 125;
      Ca.F15 = 126;
      Ca.BACKSPACE = 8;
      Ca.TAB = 9;
      Ca.ALTERNATE = 18;
      Ca.ENTER = 13;
      Ca.COMMAND = 15;
      Ca.SHIFT = 16;
      Ca.CONTROL = 17;
      Ca.BREAK = 19;
      Ca.CAPS_LOCK = 20;
      Ca.NUMPAD = 21;
      Ca.ESCAPE = 27;
      Ca.SPACE = 32;
      Ca.PAGE_UP = 33;
      Ca.PAGE_DOWN = 34;
      Ca.END = 35;
      Ca.HOME = 36;
      Ca.LEFT = 37;
      Ca.RIGHT = 39;
      Ca.UP = 38;
      Ca.DOWN = 40;
      Ca.INSERT = 45;
      Ca.DELETE = 46;
      Ca.NUMLOCK = 144;
      Ca.SEMICOLON = 186;
      Ca.EQUAL = 187;
      Ca.COMMA = 188;
      Ca.MINUS = 189;
      Ca.PERIOD = 190;
      Ca.SLASH = 191;
      Ca.BACKQUOTE = 192;
      Ca.LEFTBRACKET = 219;
      Ca.BACKSLASH = 220;
      Ca.RIGHTBRACKET = 221;
      Ca.QUOTE = 222;
      te.supportsCursor = !0;
      te.supportsNativeCursor = !0;
      te.__cursor = "auto";
      yf.ARROW = "arrow";
      yf.AUTO = "auto";
      yf.BUTTON = "button";
      yf.HAND = "hand";
      yf.IBEAM = "ibeam";
      yf.__CROSSHAIR = "crosshair";
      yf.__CUSTOM = "custom";
      yf.__MOVE = "move";
      yf.__RESIZE_NESW = "resize_nesw";
      yf.__RESIZE_NS =
        "resize_ns";
      yf.__RESIZE_NWSE = "resize_nwse";
      yf.__RESIZE_WE = "resize_we";
      yf.__WAIT = "wait";
      yf.__WAIT_ARROW = "waitarrow";
      U.__meta__ = {
        obj: {
          SuppressWarnings: [
            ["checkstyle:ConstantName", "checkstyle:FieldDocComment"]
          ]
        }
      };
      U.OPMAP = new ua;
      U.REGMAP = new ua;
      U.SAMPLEMAP = new ua;
      U.MAX_NESTING = 4;
      U.MAX_OPCODES = 4096;
      U.FRAGMENT = "fragment";
      U.VERTEX = "vertex";
      U.SAMPLER_TYPE_SHIFT = 8;
      U.SAMPLER_DIM_SHIFT = 12;
      U.SAMPLER_SPECIAL_SHIFT = 16;
      U.SAMPLER_REPEAT_SHIFT = 20;
      U.SAMPLER_MIPMAP_SHIFT = 24;
      U.SAMPLER_FILTER_SHIFT = 28;
      U.REG_WRITE = 1;
      U.REG_READ =
        2;
      U.REG_FRAG = 32;
      U.REG_VERT = 64;
      U.OP_SCALAR = 1;
      U.OP_SPECIAL_TEX = 8;
      U.OP_SPECIAL_MATRIX = 16;
      U.OP_FRAG_ONLY = 32;
      U.OP_VERT_ONLY = 64;
      U.OP_NO_DEST = 128;
      U.OP_VERSION2 = 256;
      U.OP_INCNEST = 512;
      U.OP_DECNEST = 1024;
      U.MOV = "mov";
      U.ADD = "add";
      U.SUB = "sub";
      U.MUL = "mul";
      U.DIV = "div";
      U.RCP = "rcp";
      U.MIN = "min";
      U.MAX = "max";
      U.FRC = "frc";
      U.SQT = "sqt";
      U.RSQ = "rsq";
      U.POW = "pow";
      U.LOG = "log";
      U.EXP = "exp";
      U.NRM = "nrm";
      U.SIN = "sin";
      U.COS = "cos";
      U.CRS = "crs";
      U.DP3 = "dp3";
      U.DP4 = "dp4";
      U.ABS = "abs";
      U.NEG = "neg";
      U.SAT = "sat";
      U.M33 = "m33";
      U.M44 = "m44";
      U.M34 = "m34";
      U.DDX = "ddx";
      U.DDY = "ddy";
      U.IFE = "ife";
      U.INE = "ine";
      U.IFG = "ifg";
      U.IFL = "ifl";
      U.IEG = "ieg";
      U.IEL = "iel";
      U.ELS = "els";
      U.EIF = "eif";
      U.TED = "ted";
      U.KIL = "kil";
      U.TEX = "tex";
      U.SGE = "sge";
      U.SLT = "slt";
      U.SGN = "sgn";
      U.SEQ = "seq";
      U.SNE = "sne";
      U.VA = "va";
      U.VC = "vc";
      U.VT = "vt";
      U.VO = "vo";
      U.VI = "vi";
      U.FC = "fc";
      U.FT = "ft";
      U.FS = "fs";
      U.FO = "fo";
      U.FD = "fd";
      U.IID = "iid";
      U.D2 = "2d";
      U.D3 = "3d";
      U.CUBE = "cube";
      U.MIPNEAREST = "mipnearest";
      U.MIPLINEAR = "miplinear";
      U.MIPNONE = "mipnone";
      U.NOMIP = "nomip";
      U.NEAREST = "nearest";
      U.LINEAR = "linear";
      U.ANISOTROPIC2X =
        "anisotropic2x";
      U.ANISOTROPIC4X = "anisotropic4x";
      U.ANISOTROPIC8X = "anisotropic8x";
      U.ANISOTROPIC16X = "anisotropic16x";
      U.CENTROID = "centroid";
      U.SINGLE = "single";
      U.IGNORESAMPLER = "ignoresampler";
      U.REPEAT = "repeat";
      U.WRAP = "wrap";
      U.CLAMP = "clamp";
      U.REPEAT_U_CLAMP_V = "repeat_u_clamp_v";
      U.CLAMP_U_REPEAT_V = "clamp_u_repeat_v";
      U.RGBA = "rgba";
      U.COMPRESSED = "compressed";
      U.COMPRESSEDALPHA = "compressedalpha";
      U.DXT1 = "dxt1";
      U.DXT5 = "dxt5";
      U.VIDEO = "video";
      U.initialized = !1;
      bc.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      rf.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      cd.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Aa.cache = new rn;
      Aa.dispatcher = new Ka;
      Cb.__bytePointer = new Uf(null, 0);
      sc.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      sc.defaultObjectEncoding = 10;
      hj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      fj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      gj.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      kr.BIG_ENDIAN = 0;
      kr.LITTLE_ENDIAN = 1;
      un.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      vn.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        }
      };
      Kc.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        statics: {
          notImplemented: {
            SuppressWarnings: ["checkstyle:NullableParameter"]
          }
        }
      };
      Kc.__sentWarnings = new ua;
      ei.__meta__ = {
        obj: {
          SuppressWarnings: ["checkstyle:FieldDocComment"]
        },
        fields: {
          touch: {
            SuppressWarnings: ["checkstyle:Dynamic"]
          }
        }
      };
      ei.__pool = new E(function() {
          return new ei
        },
        function(a) {
          a.reset()
        });
      Kg.VAL_ABSENT = -2147483648;
      Kg.EMPTY_SLOT = -1;
      Kg.NULL_POINTER = -1;
      rg.KEY_ABSENT = -2147483648;
      rg.VAL_ABSENT = -2147483648;
      rg.EMPTY_SLOT = -1;
      rg.NULL_POINTER = -1;
      Xa.DEFAULT_PRECISION = 6;
      Xa.DEFAULT_NUM_EXP_DIGITS = 2;
      Xa._initialized = !1;
      Xa.PAD_0 = 0;
      Xa.PAD_SPACE = 20;
      Ig.FIXED = 0;
      Ig.MILD = -1;
      Ig.NORMAL = -2;
      Ig.DOUBLE = -3;
      Mg.fileName = "mySave";
      Kb.PI = 3.141592653589793;
      Kb.PI_H = 1.5707963267948966;
      Kb.LN_2 = .6931471805599453;
      Kb.LN_2_10 = 6.931471805599453;
      Kb.overshoot = 1.70158;
      Kb.amplitude = 1;
      Kb.period = 3E-4;
      za.main()
    })("undefined" !=
      typeof x ? x : "undefined" != typeof window ? window : "undefined" != typeof self ? self : this, "undefined" != typeof window ? window : "undefined" != typeof I ? I : "undefined" != typeof self ? self : this)
  };
  ca.lime.embed = function(L) {
    var I = {},
      J = ca.lime.$scripts[L];
    if (!J) throw Error('Cannot find project name "' + L + '"');
    J(I, x);
    for (var oa in I) ca[oa] = ca[oa] || I[oa];
    (J = I.lime || window.lime) && J.embed && this != J.embed && J.embed.apply(J, arguments);
    return I
  };
  "function" == typeof define && define.amd && (define([], function() {
      return ca.lime
    }), define.__amd =
    define.amd, define.amd = null)
})("undefined" != typeof exports ? exports : "function" == typeof define && define.amd ? {} : "undefined" != typeof window ? window : "undefined" != typeof self ? self : this, "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this);
! function() {
  var ca = function() {
    this.init()
  };
  ca.prototype = {
    init: function() {
      var k = this || x;
      return k._counter = 1E3, k._html5AudioPool = [], k.html5PoolSize = 10, k._codecs = {}, k._howls = [], k._muted = !1, k._volume = 1, k._canPlayEvent = "canplaythrough", k._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, k.masterGain = null, k.noAudio = !1, k.usingWebAudio = !0, k.autoSuspend = !0, k.ctx = null, k.autoUnlock = !0, k._setup(), k
    },
    volume: function(v) {
      var r = this || x;
      if (v = parseFloat(v), r.ctx || k(), void 0 !== v && 0 <= v && 1 >=
        v) {
        if (r._volume = v, r._muted) return r;
        r.usingWebAudio && r.masterGain.gain.setValueAtTime(v, x.ctx.currentTime);
        for (var t = 0; t < r._howls.length; t++)
          if (!r._howls[t]._webAudio)
            for (var za = r._howls[t]._getSoundIds(), S = 0; S < za.length; S++) {
              var qb = r._howls[t]._soundById(za[S]);
              qb && qb._node && (qb._node.volume = qb._volume * v)
            }
        return r
      }
      return r._volume
    },
    mute: function(v) {
      var r = this || x;
      r.ctx || k();
      r._muted = v;
      r.usingWebAudio && r.masterGain.gain.setValueAtTime(v ? 0 : r._volume, x.ctx.currentTime);
      for (var t = 0; t < r._howls.length; t++)
        if (!r._howls[t]._webAudio)
          for (var za =
              r._howls[t]._getSoundIds(), S = 0; S < za.length; S++) {
            var qb = r._howls[t]._soundById(za[S]);
            qb && qb._node && (qb._node.muted = !!v || qb._muted)
          }
      return r
    },
    unload: function() {
      for (var v = this || x, r = v._howls.length - 1; 0 <= r; r--) v._howls[r].unload();
      return v.usingWebAudio && v.ctx && void 0 !== v.ctx.close && (v.ctx.close(), v.ctx = null, k()), v
    },
    codecs: function(k) {
      return (this || x)._codecs[k.replace(/^x-/, "")]
    },
    _setup: function() {
      var k = this || x;
      if (k.state = k.ctx ? k.ctx.state || "suspended" : "suspended", k._autoSuspend(), !k.usingWebAudio)
        if ("undefined" !=
          typeof Audio) try {
          var r = new Audio;
          void 0 === r.oncanplaythrough && (k._canPlayEvent = "canplay")
        } catch (w) {
          k.noAudio = !0
        } else k.noAudio = !0;
      try {
        r = new Audio, r.muted && (k.noAudio = !0)
      } catch (w) {}
      return k.noAudio || k._setupCodecs(), k
    },
    _setupCodecs: function() {
      var k = this || x,
        r = null;
      try {
        r = "undefined" != typeof Audio ? new Audio : null
      } catch (S) {
        return k
      }
      if (!r || "function" != typeof r.canPlayType) return k;
      var t = r.canPlayType("audio/mpeg;").replace(/^no$/, ""),
        za = k._navigator && k._navigator.userAgent.match(/OPR\/([0-6].)/g);
      za = za &&
        33 > parseInt(za[0].split("/")[1], 10);
      return k._codecs = {
        mp3: !(za || !t && !r.canPlayType("audio/mp3;").replace(/^no$/, "")),
        mpeg: !!t,
        opus: !!r.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
        ogg: !!r.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
        oga: !!r.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
        wav: !!r.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
        aac: !!r.canPlayType("audio/aac;").replace(/^no$/, ""),
        caf: !!r.canPlayType("audio/x-caf;").replace(/^no$/, ""),
        m4a: !!(r.canPlayType("audio/x-m4a;") || r.canPlayType("audio/m4a;") || r.canPlayType("audio/aac;")).replace(/^no$/, ""),
        mp4: !!(r.canPlayType("audio/x-mp4;") || r.canPlayType("audio/mp4;") || r.canPlayType("audio/aac;")).replace(/^no$/, ""),
        weba: !!r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
        webm: !!r.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
        dolby: !!r.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
        flac: !!(r.canPlayType("audio/x-flac;") || r.canPlayType("audio/flac;")).replace(/^no$/,
          "")
      }, k
    },
    _unlockAudio: function() {
      var k = this || x,
        r = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi|Chrome|Safari/i.test(k._navigator && k._navigator.userAgent);
      if (!k._audioUnlocked && k.ctx && r) {
        k._audioUnlocked = !1;
        k.autoUnlock = !1;
        k._mobileUnloaded || 44100 === k.ctx.sampleRate || (k._mobileUnloaded = !0, k.unload());
        k._scratchBuffer = k.ctx.createBuffer(1, 1, 22050);
        var t = function(v) {
          for (v = 0; v < k.html5PoolSize; v++) {
            var r = new Audio;
            r._unlocked = !0;
            k._releaseHtml5Audio(r)
          }
          for (v = 0; v < k._howls.length; v++)
            if (!k._howls[v]._webAudio) {
              r =
                k._howls[v]._getSoundIds();
              for (var w = 0; w < r.length; w++) {
                var O = k._howls[v]._soundById(r[w]);
                O && O._node && !O._node._unlocked && (O._node._unlocked = !0, O._node.load())
              }
            } k._autoResume();
          var x = k.ctx.createBufferSource();
          x.buffer = k._scratchBuffer;
          x.connect(k.ctx.destination);
          void 0 === x.start ? x.noteOn(0) : x.start(0);
          "function" == typeof k.ctx.resume && k.ctx.resume();
          x.onended = function() {
            x.disconnect(0);
            k._audioUnlocked = !0;
            document.removeEventListener("touchstart", t, !0);
            document.removeEventListener("touchend", t, !0);
            document.removeEventListener("click", t, !0);
            for (var v = 0; v < k._howls.length; v++) k._howls[v]._emit("unlock")
          }
        };
        return document.addEventListener("touchstart", t, !0), document.addEventListener("touchend", t, !0), document.addEventListener("click", t, !0), k
      }
    },
    _obtainHtml5Audio: function() {
      var k = this || x;
      if (k._html5AudioPool.length) return k._html5AudioPool.pop();
      k = (new Audio).play();
      return k && "undefined" != typeof Promise && (k instanceof Promise || "function" == typeof k.then) && k.catch(function() {
          console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")
        }),
        new Audio
    },
    _releaseHtml5Audio: function(k) {
      var v = this || x;
      return k._unlocked && v._html5AudioPool.push(k), v
    },
    _autoSuspend: function() {
      var k = this;
      if (k.autoSuspend && k.ctx && void 0 !== k.ctx.suspend && x.usingWebAudio) {
        for (var r = 0; r < k._howls.length; r++)
          if (k._howls[r]._webAudio)
            for (var t = 0; t < k._howls[r]._sounds.length; t++)
              if (!k._howls[r]._sounds[t]._paused) return k;
        return k._suspendTimer && clearTimeout(k._suspendTimer), k._suspendTimer = setTimeout(function() {
          k.autoSuspend && (k._suspendTimer = null, k.state = "suspending",
            k.ctx.suspend().then(function() {
              k.state = "suspended";
              k._resumeAfterSuspend && (delete k._resumeAfterSuspend, k._autoResume())
            }))
        }, 3E4), k
      }
    },
    _autoResume: function() {
      var k = this;
      if (k.ctx && void 0 !== k.ctx.resume && x.usingWebAudio) return "running" === k.state && k._suspendTimer ? (clearTimeout(k._suspendTimer), k._suspendTimer = null) : "suspended" === k.state ? (k.ctx.resume().then(function() {
        k.state = "running";
        for (var v = 0; v < k._howls.length; v++) k._howls[v]._emit("resume")
      }), k._suspendTimer && (clearTimeout(k._suspendTimer), k._suspendTimer =
        null)) : "suspending" === k.state && (k._resumeAfterSuspend = !0), k
    }
  };
  var x = new ca,
    L = function(k) {
      if (!k.src || 0 === k.src.length) return void console.error("An array of source files must be passed with any new Howl.");
      this.init(k)
    };
  L.prototype = {
    init: function(v) {
      var r = this;
      return x.ctx || k(), r._autoplay = v.autoplay || !1, r._format = "string" != typeof v.format ? v.format : [v.format], r._html5 = v.html5 || !1, r._muted = v.mute || !1, r._loop = v.loop || !1, r._pool = v.pool || 5, r._preload = "boolean" != typeof v.preload || v.preload, r._rate = v.rate ||
        1, r._sprite = v.sprite || {}, r._src = "string" != typeof v.src ? v.src : [v.src], r._volume = void 0 !== v.volume ? v.volume : 1, r._xhrWithCredentials = v.xhrWithCredentials || !1, r._duration = 0, r._state = "unloaded", r._sounds = [], r._endTimers = {}, r._queue = [], r._playLock = !1, r._onend = v.onend ? [{
          fn: v.onend
        }] : [], r._onfade = v.onfade ? [{
          fn: v.onfade
        }] : [], r._onload = v.onload ? [{
          fn: v.onload
        }] : [], r._onloaderror = v.onloaderror ? [{
          fn: v.onloaderror
        }] : [], r._onplayerror = v.onplayerror ? [{
          fn: v.onplayerror
        }] : [], r._onpause = v.onpause ? [{
          fn: v.onpause
        }] : [],
        r._onplay = v.onplay ? [{
          fn: v.onplay
        }] : [], r._onstop = v.onstop ? [{
          fn: v.onstop
        }] : [], r._onmute = v.onmute ? [{
          fn: v.onmute
        }] : [], r._onvolume = v.onvolume ? [{
          fn: v.onvolume
        }] : [], r._onrate = v.onrate ? [{
          fn: v.onrate
        }] : [], r._onseek = v.onseek ? [{
          fn: v.onseek
        }] : [], r._onunlock = v.onunlock ? [{
          fn: v.onunlock
        }] : [], r._onresume = [], r._webAudio = x.usingWebAudio && !r._html5, void 0 !== x.ctx && x.ctx && x.autoUnlock && x._unlockAudio(), x._howls.push(r), r._autoplay && r._queue.push({
          event: "play",
          action: function() {
            r.play()
          }
        }), r._preload && r.load(), r
    },
    load: function() {
      var k =
        null;
      if (x.noAudio) return void this._emit("loaderror", null, "No audio support.");
      "string" == typeof this._src && (this._src = [this._src]);
      for (var r = 0; r < this._src.length; r++) {
        var t;
        if (this._format && this._format[r]) var za = this._format[r];
        else {
          if ("string" != typeof(t = this._src[r])) {
            this._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
            continue
          }(za = /^data:audio\/([^;,]+);/i.exec(t)) || (za = /\.([^.]+)$/.exec(t.split("?", 1)[0]));
          za && (za = za[1].toLowerCase())
        }
        if (za || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),
          za && x.codecs(za)) {
          k = this._src[r];
          break
        }
      }
      return k ? (this._src = k, this._state = "loading", "https:" === window.location.protocol && "http:" === k.slice(0, 5) && (this._html5 = !0, this._webAudio = !1), new I(this), this._webAudio && oa(this), this) : void this._emit("loaderror", null, "No codec support for selected audio sources.")
    },
    play: function(k, r) {
      var v = this,
        t = null;
      if ("number" == typeof k) t = k, k = null;
      else {
        if ("string" == typeof k && "loaded" === v._state && !v._sprite[k]) return null;
        if (void 0 === k && (k = "__default", !v._playLock)) {
          for (var O =
              0, qb = 0; qb < v._sounds.length; qb++) v._sounds[qb]._paused && !v._sounds[qb]._ended && (O++, t = v._sounds[qb]._id);
          1 === O ? k = null : t = null
        }
      }
      var J = t ? v._soundById(t) : v._inactiveSound();
      if (!J) return null;
      if (t && !k && (k = J._sprite || "__default"), "loaded" !== v._state) {
        J._sprite = k;
        J._ended = !1;
        var L = J._id;
        return v._queue.push({
          event: "play",
          action: function() {
            v.play(L)
          }
        }), L
      }
      if (t && !J._paused) return r || v._loadQueue("play"), J._id;
      v._webAudio && x._autoResume();
      var da = Math.max(0, 0 < J._seek ? J._seek : v._sprite[k][0] / 1E3),
        I = Math.max(0,
          (v._sprite[k][0] + v._sprite[k][1]) / 1E3 - da),
        ca = 1E3 * I / Math.abs(J._rate),
        oa = v._sprite[k][0] / 1E3,
        Y = (v._sprite[k][0] + v._sprite[k][1]) / 1E3,
        M = !(!J._loop && !v._sprite[k][2]);
      J._sprite = k;
      J._ended = !1;
      var vb = function() {
        J._paused = !1;
        J._seek = da;
        J._start = oa;
        J._stop = Y;
        J._loop = M
      };
      if (da >= Y) return void v._ended(J);
      var Qa = J._node;
      if (v._webAudio) t = function() {
        v._playLock = !1;
        vb();
        v._refreshBuffer(J);
        Qa.gain.setValueAtTime(J._muted || v._muted ? 0 : J._volume, x.ctx.currentTime);
        J._playStart = x.ctx.currentTime;
        void 0 === Qa.bufferSource.start ?
          J._loop ? Qa.bufferSource.noteGrainOn(0, da, 86400) : Qa.bufferSource.noteGrainOn(0, da, I) : J._loop ? Qa.bufferSource.start(0, da, 86400) : Qa.bufferSource.start(0, da, I);
        ca !== 1 / 0 && (v._endTimers[J._id] = setTimeout(v._ended.bind(v, J), ca));
        r || setTimeout(function() {
          v._emit("play", J._id);
          v._loadQueue()
        }, 0)
      }, "running" === x.state ? t() : (v._playLock = !0, v.once("resume", t), v._clearTimer(J._id));
      else {
        var W = function() {
          Qa.currentTime = da;
          Qa.muted = J._muted || v._muted || x._muted || Qa.muted;
          Qa.volume = J._volume * x.volume();
          Qa.playbackRate =
            J._rate;
          try {
            var t = Qa.play();
            if (t && "undefined" != typeof Promise && (t instanceof Promise || "function" == typeof t.then) ? (v._playLock = !0, vb(), t.then(function() {
                v._playLock = !1;
                Qa._unlocked = !0;
                r || (v._emit("play", J._id), v._loadQueue())
              }).catch(function() {
                v._playLock = !1;
                v._emit("playerror", J._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                J._ended = !0;
                J._paused = !0
              })) : r || (v._playLock = !1, vb(), v._emit("play", J._id),
                v._loadQueue()), Qa.playbackRate = J._rate, Qa.paused) return void v._emit("playerror", J._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
            "__default" !== k || J._loop ? v._endTimers[J._id] = setTimeout(v._ended.bind(v, J), ca) : (v._endTimers[J._id] = function() {
              v._ended(J);
              Qa.removeEventListener("ended", v._endTimers[J._id], !1)
            }, Qa.addEventListener("ended", v._endTimers[J._id], !1))
          } catch (ec) {
            v._emit("playerror", J._id, ec)
          }
        };
        t = window && window.ejecta || !Qa.readyState && x._navigator.isCocoonJS;
        if (3 <= Qa.readyState || t) W();
        else {
          v._playLock = !0;
          var Ga = function() {
            W();
            Qa.removeEventListener(x._canPlayEvent, Ga, !1)
          };
          Qa.addEventListener(x._canPlayEvent, Ga, !1);
          v._clearTimer(J._id)
        }
      }
      return J._id
    },
    pause: function(k, r) {
      var v = this;
      if ("loaded" !== v._state || v._playLock) return v._queue.push({
        event: "pause",
        action: function() {
          v.pause(k)
        }
      }), v;
      for (var t = v._getSoundIds(k), x = 0; x < t.length; x++) {
        v._clearTimer(t[x]);
        var O = v._soundById(t[x]);
        if (O && !O._paused &&
          (O._seek = v.seek(t[x]), O._rateSeek = 0, O._paused = !0, v._stopFade(t[x]), O._node))
          if (v._webAudio) {
            if (!O._node.bufferSource) continue;
            void 0 === O._node.bufferSource.stop ? O._node.bufferSource.noteOff(0) : O._node.bufferSource.stop(0);
            v._cleanBuffer(O._node)
          } else isNaN(O._node.duration) && O._node.duration !== 1 / 0 || O._node.pause();
        r || v._emit("pause", O ? O._id : null)
      }
      return v
    },
    stop: function(k, r) {
      var v = this;
      if ("loaded" !== v._state || v._playLock) return v._queue.push({
        event: "stop",
        action: function() {
          v.stop(k)
        }
      }), v;
      for (var t =
          v._getSoundIds(k), x = 0; x < t.length; x++) {
        v._clearTimer(t[x]);
        var O = v._soundById(t[x]);
        O && (O._seek = O._start || 0, O._rateSeek = 0, O._paused = !0, O._ended = !0, v._stopFade(t[x]), O._node && (v._webAudio ? O._node.bufferSource && (void 0 === O._node.bufferSource.stop ? O._node.bufferSource.noteOff(0) : O._node.bufferSource.stop(0), v._cleanBuffer(O._node)) : isNaN(O._node.duration) && O._node.duration !== 1 / 0 || (O._node.currentTime = O._start || 0, O._node.pause())), r || v._emit("stop", O._id))
      }
      return v
    },
    mute: function(k, r) {
      var v = this;
      if ("loaded" !==
        v._state || v._playLock) return v._queue.push({
        event: "mute",
        action: function() {
          v.mute(k, r)
        }
      }), v;
      if (void 0 === r) {
        if ("boolean" != typeof k) return v._muted;
        v._muted = k
      }
      for (var t = v._getSoundIds(r), O = 0; O < t.length; O++) {
        var J = v._soundById(t[O]);
        J && (J._muted = k, J._interval && v._stopFade(J._id), v._webAudio && J._node ? J._node.gain.setValueAtTime(k ? 0 : J._volume, x.ctx.currentTime) : J._node && (J._node.muted = !!x._muted || k), v._emit("mute", J._id))
      }
      return v
    },
    volume: function() {
      var k, r, t = this,
        J = arguments;
      if (0 === J.length) return t._volume;
      1 === J.length || 2 === J.length && void 0 === J[1] ? 0 <= t._getSoundIds().indexOf(J[0]) ? r = parseInt(J[0], 10) : k = parseFloat(J[0]) : 2 <= J.length && (k = parseFloat(J[0]), r = parseInt(J[1], 10));
      var S;
      if (!(void 0 !== k && 0 <= k && 1 >= k)) return S = r ? t._soundById(r) : t._sounds[0], S ? S._volume : 0;
      if ("loaded" !== t._state || t._playLock) return t._queue.push({
        event: "volume",
        action: function() {
          t.volume.apply(t, J)
        }
      }), t;
      void 0 === r && (t._volume = k);
      r = t._getSoundIds(r);
      for (var L = 0; L < r.length; L++)(S = t._soundById(r[L])) && (S._volume = k, J[2] || t._stopFade(r[L]),
        t._webAudio && S._node && !S._muted ? S._node.gain.setValueAtTime(k, x.ctx.currentTime) : S._node && !S._muted && (S._node.volume = k * x.volume()), t._emit("volume", S._id));
      return t
    },
    fade: function(k, r, t, J) {
      var v = this;
      if ("loaded" !== v._state || v._playLock) return v._queue.push({
        event: "fade",
        action: function() {
          v.fade(k, r, t, J)
        }
      }), v;
      k = parseFloat(k);
      r = parseFloat(r);
      t = parseFloat(t);
      v.volume(k, J);
      for (var w = v._getSoundIds(J), O = 0; O < w.length; O++) {
        var za = v._soundById(w[O]);
        if (za) {
          if (J || v._stopFade(w[O]), v._webAudio && !za._muted) {
            var L =
              x.ctx.currentTime,
              I = L + t / 1E3;
            za._volume = k;
            za._node.gain.setValueAtTime(k, L);
            za._node.gain.linearRampToValueAtTime(r, I)
          }
          v._startFadeInterval(za, k, r, t, w[O], void 0 === J)
        }
      }
      return v
    },
    _startFadeInterval: function(k, r, t, x, J, L) {
      var v = this,
        w = r,
        O = t - r;
      J = Math.abs(O / .01);
      J = Math.max(4, 0 < J ? x / J : x);
      var S = Date.now();
      k._fadeTo = t;
      k._interval = setInterval(function() {
        var J = (Date.now() - S) / x;
        S = Date.now();
        w += O * J;
        w = Math.max(0, w);
        w = Math.min(1, w);
        w = Math.round(100 * w) / 100;
        v._webAudio ? k._volume = w : v.volume(w, k._id, !0);
        L && (v._volume =
          w);
        (t < r && w <= t || t > r && w >= t) && (clearInterval(k._interval), k._interval = null, k._fadeTo = null, v.volume(t, k._id), v._emit("fade", k._id))
      }, J)
    },
    _stopFade: function(k) {
      var v = this._soundById(k);
      return v && v._interval && (this._webAudio && v._node.gain.cancelScheduledValues(x.ctx.currentTime), clearInterval(v._interval), v._interval = null, this.volume(v._fadeTo, k), v._fadeTo = null, this._emit("fade", k)), this
    },
    loop: function() {
      var k, r, t, x = arguments;
      if (0 === x.length) return this._loop;
      if (1 === x.length) {
        if ("boolean" != typeof x[0]) return !!(t =
          this._soundById(parseInt(x[0], 10))) && t._loop;
        this._loop = k = x[0]
      } else 2 === x.length && (k = x[0], r = parseInt(x[1], 10));
      r = this._getSoundIds(r);
      for (x = 0; x < r.length; x++)(t = this._soundById(r[x])) && (t._loop = k, this._webAudio && t._node && t._node.bufferSource && (t._node.bufferSource.loop = k, k && (t._node.bufferSource.loopStart = t._start || 0, t._node.bufferSource.loopEnd = t._stop)));
      return this
    },
    rate: function() {
      var k, r, t = this,
        J = arguments;
      0 === J.length ? r = t._sounds[0]._id : 1 === J.length ? 0 <= t._getSoundIds().indexOf(J[0]) ? r = parseInt(J[0],
        10) : k = parseFloat(J[0]) : 2 === J.length && (k = parseFloat(J[0]), r = parseInt(J[1], 10));
      var S;
      if ("number" != typeof k) return S = t._soundById(r), S ? S._rate : t._rate;
      if ("loaded" !== t._state || t._playLock) return t._queue.push({
        event: "rate",
        action: function() {
          t.rate.apply(t, J)
        }
      }), t;
      void 0 === r && (t._rate = k);
      r = t._getSoundIds(r);
      for (var L = 0; L < r.length; L++)
        if (S = t._soundById(r[L])) {
          t.playing(r[L]) && (S._rateSeek = t.seek(r[L]), S._playStart = t._webAudio ? x.ctx.currentTime : S._playStart);
          S._rate = k;
          t._webAudio && S._node && S._node.bufferSource ?
            S._node.bufferSource.playbackRate.setValueAtTime(k, x.ctx.currentTime) : S._node && (S._node.playbackRate = k);
          var I = t.seek(r[L]);
          I = 1E3 * ((t._sprite[S._sprite][0] + t._sprite[S._sprite][1]) / 1E3 - I) / Math.abs(S._rate);
          !t._endTimers[r[L]] && S._paused || (t._clearTimer(r[L]), t._endTimers[r[L]] = setTimeout(t._ended.bind(t, S), I));
          t._emit("rate", S._id)
        } return t
    },
    seek: function() {
      var k, r, t = this,
        J = arguments;
      0 === J.length ? r = t._sounds[0]._id : 1 === J.length ? 0 <= t._getSoundIds().indexOf(J[0]) ? r = parseInt(J[0], 10) : t._sounds.length &&
        (r = t._sounds[0]._id, k = parseFloat(J[0])) : 2 === J.length && (k = parseFloat(J[0]), r = parseInt(J[1], 10));
      if (void 0 === r) return t;
      if ("loaded" !== t._state || t._playLock) return t._queue.push({
        event: "seek",
        action: function() {
          t.seek.apply(t, J)
        }
      }), t;
      var S = t._soundById(r);
      if (S) {
        if (!("number" == typeof k && 0 <= k)) return t._webAudio ? (k = t.playing(r) ? x.ctx.currentTime - S._playStart : 0, S._seek + ((S._rateSeek ? S._rateSeek - S._seek : 0) + k * Math.abs(S._rate))) : S._node.currentTime;
        var L = t.playing(r);
        L && t.pause(r, !0);
        S._seek = k;
        S._ended = !1;
        t._clearTimer(r);
        t._webAudio || !S._node || isNaN(S._node.duration) || (S._node.currentTime = k);
        var I = function() {
          t._emit("seek", r);
          L && t.play(r, !0)
        };
        if (L && !t._webAudio) {
          var ca = function() {
            t._playLock ? setTimeout(ca, 0) : I()
          };
          setTimeout(ca, 0)
        } else I()
      }
      return t
    },
    playing: function(k) {
      if ("number" == typeof k) return k = this._soundById(k), !!k && !k._paused;
      for (k = 0; k < this._sounds.length; k++)
        if (!this._sounds[k]._paused) return !0;
      return !1
    },
    duration: function(k) {
      var v = this._duration;
      k = this._soundById(k);
      return k && (v = this._sprite[k._sprite][1] /
        1E3), v
    },
    state: function() {
      return this._state
    },
    unload: function() {
      for (var k = this._sounds, r = 0; r < k.length; r++)(k[r]._paused || this.stop(k[r]._id), this._webAudio) || (/MSIE |Trident\//.test(x._navigator && x._navigator.userAgent) || (k[r]._node.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"), k[r]._node.removeEventListener("error", k[r]._errorFn, !1), k[r]._node.removeEventListener(x._canPlayEvent, k[r]._loadFn, !1), x._releaseHtml5Audio(k[r]._node)), delete k[r]._node, this._clearTimer(k[r]._id);
      r = x._howls.indexOf(this);
      0 <= r && x._howls.splice(r, 1);
      k = !0;
      for (r = 0; r < x._howls.length; r++)
        if (x._howls[r]._src === this._src || 0 <= this._src.indexOf(x._howls[r]._src)) {
          k = !1;
          break
        } return J && k && delete J[this._src], x.noAudio = !1, this._state = "unloaded", this._sounds = [], null
    },
    on: function(k, r, t, x) {
      k = this["_on" + k];
      return "function" == typeof r && k.push(x ? {
        id: t,
        fn: r,
        once: x
      } : {
        id: t,
        fn: r
      }), this
    },
    off: function(k, r, t) {
      var v = this["_on" + k];
      if ("number" == typeof r && (t = r, r = null), r || t)
        for (k = 0; k < v.length; k++) {
          var w = t === v[k].id;
          if (r ===
            v[k].fn && w || !r && w) {
            v.splice(k, 1);
            break
          }
        } else if (k) this["_on" + k] = [];
        else
          for (r = Object.keys(this), k = 0; k < r.length; k++) 0 === r[k].indexOf("_on") && Array.isArray(this[r[k]]) && (this[r[k]] = []);
      return this
    },
    once: function(k, r, t) {
      return this.on(k, r, t, 1), this
    },
    _emit: function(k, r, t) {
      for (var v = this["_on" + k], w = v.length - 1; 0 <= w; w--) v[w].id && v[w].id !== r && "load" !== k || (setTimeout(function(k) {
        k.call(this, r, t)
      }.bind(this, v[w].fn), 0), v[w].once && this.off(k, v[w].fn, v[w].id));
      return this._loadQueue(k), this
    },
    _loadQueue: function(k) {
      if (0 <
        this._queue.length) {
        var r = this._queue[0];
        r.event === k && (this._queue.shift(), this._loadQueue());
        k || r.action()
      }
      return this
    },
    _ended: function(k) {
      var r = k._sprite;
      if (!this._webAudio && k._node && !k._node.paused && !k._node.ended && k._node.currentTime < k._stop) return setTimeout(this._ended.bind(this, k), 100), this;
      r = !(!k._loop && !this._sprite[r][2]);
      if (this._emit("end", k._id), !this._webAudio && r && this.stop(k._id, !0).play(k._id), this._webAudio && r) {
        this._emit("play", k._id);
        k._seek = k._start || 0;
        k._rateSeek = 0;
        k._playStart =
          x.ctx.currentTime;
        var v = 1E3 * (k._stop - k._start) / Math.abs(k._rate);
        this._endTimers[k._id] = setTimeout(this._ended.bind(this, k), v)
      }
      return this._webAudio && !r && (k._paused = !0, k._ended = !0, k._seek = k._start || 0, k._rateSeek = 0, this._clearTimer(k._id), this._cleanBuffer(k._node), x._autoSuspend()), this._webAudio || r || this.stop(k._id, !0), this
    },
    _clearTimer: function(k) {
      if (this._endTimers[k]) {
        if ("function" != typeof this._endTimers[k]) clearTimeout(this._endTimers[k]);
        else {
          var r = this._soundById(k);
          r && r._node && r._node.removeEventListener("ended",
            this._endTimers[k], !1)
        }
        delete this._endTimers[k]
      }
      return this
    },
    _soundById: function(k) {
      for (var r = 0; r < this._sounds.length; r++)
        if (k === this._sounds[r]._id) return this._sounds[r];
      return null
    },
    _inactiveSound: function() {
      this._drain();
      for (var k = 0; k < this._sounds.length; k++)
        if (this._sounds[k]._ended) return this._sounds[k].reset();
      return new I(this)
    },
    _drain: function() {
      var k = this._pool,
        r = 0,
        t;
      if (!(this._sounds.length < k)) {
        for (t = 0; t < this._sounds.length; t++) this._sounds[t]._ended && r++;
        for (t = this._sounds.length - 1; 0 <=
          t && !(r <= k); t--) this._sounds[t]._ended && (this._webAudio && this._sounds[t]._node && this._sounds[t]._node.disconnect(0), this._sounds.splice(t, 1), r--)
      }
    },
    _getSoundIds: function(k) {
      if (void 0 === k) {
        k = [];
        for (var r = 0; r < this._sounds.length; r++) k.push(this._sounds[r]._id);
        return k
      }
      return [k]
    },
    _refreshBuffer: function(k) {
      return k._node.bufferSource = x.ctx.createBufferSource(), k._node.bufferSource.buffer = J[this._src], k._panner ? k._node.bufferSource.connect(k._panner) : k._node.bufferSource.connect(k._node), k._node.bufferSource.loop =
        k._loop, k._loop && (k._node.bufferSource.loopStart = k._start || 0, k._node.bufferSource.loopEnd = k._stop || 0), k._node.bufferSource.playbackRate.setValueAtTime(k._rate, x.ctx.currentTime), this
    },
    _cleanBuffer: function(k) {
      var r = x._navigator && 0 <= x._navigator.vendor.indexOf("Apple");
      if (x._scratchBuffer && k.bufferSource && (k.bufferSource.onended = null, k.bufferSource.disconnect(0), r)) try {
        k.bufferSource.buffer = x._scratchBuffer
      } catch (w) {}
      return k.bufferSource = null, this
    }
  };
  var I = function(k) {
    this._parent = k;
    this.init()
  };
  I.prototype = {
    init: function() {
      var k = this._parent;
      return this._muted = k._muted, this._loop = k._loop, this._volume = k._volume, this._rate = k._rate, this._seek = 0, this._paused = !0, this._ended = !0, this._sprite = "__default", this._id = ++x._counter, k._sounds.push(this), this.create(), this
    },
    create: function() {
      var k = this._parent,
        r = x._muted || this._muted || this._parent._muted ? 0 : this._volume;
      return k._webAudio ? (this._node = void 0 === x.ctx.createGain ? x.ctx.createGainNode() : x.ctx.createGain(), this._node.gain.setValueAtTime(r, x.ctx.currentTime),
        this._node.paused = !0, this._node.connect(x.masterGain)) : (this._node = x._obtainHtml5Audio(), this._errorFn = this._errorListener.bind(this), this._node.addEventListener("error", this._errorFn, !1), this._loadFn = this._loadListener.bind(this), this._node.addEventListener(x._canPlayEvent, this._loadFn, !1), this._node.src = k._src, this._node.preload = "auto", this._node.volume = r * x.volume(), this._node.load()), this
    },
    reset: function() {
      var k = this._parent;
      return this._muted = k._muted, this._loop = k._loop, this._volume = k._volume,
        this._rate = k._rate, this._seek = 0, this._rateSeek = 0, this._paused = !0, this._ended = !0, this._sprite = "__default", this._id = ++x._counter, this
    },
    _errorListener: function() {
      this._parent._emit("loaderror", this._id, this._node.error ? this._node.error.code : 0);
      this._node.removeEventListener("error", this._errorFn, !1)
    },
    _loadListener: function() {
      var k = this._parent;
      k._duration = Math.ceil(10 * this._node.duration) / 10;
      0 === Object.keys(k._sprite).length && (k._sprite = {
        __default: [0, 1E3 * k._duration]
      });
      "loaded" !== k._state && (k._state =
        "loaded", k._emit("load"), k._loadQueue());
      this._node.removeEventListener(x._canPlayEvent, this._loadFn, !1)
    }
  };
  var J = {},
    oa = function(k) {
      var v = k._src;
      if (J[v]) return k._duration = J[v].duration, void r(k);
      if (/^data:[^;]+;base64,/.test(v)) {
        for (var w = atob(v.split(",")[1]), x = new Uint8Array(w.length), S = 0; S < w.length; ++S) x[S] = w.charCodeAt(S);
        Ga(x.buffer, k)
      } else {
        var L = new XMLHttpRequest;
        L.open("GET", v, !0);
        L.withCredentials = k._xhrWithCredentials;
        L.responseType = "arraybuffer";
        L.onload = function() {
          var r = (L.status + "")[0];
          if ("0" !== r && "2" !== r && "3" !== r) return void k._emit("loaderror", null, "Failed loading audio file with status: " + L.status + ".");
          Ga(L.response, k)
        };
        L.onerror = function() {
          k._webAudio && (k._html5 = !0, k._webAudio = !1, k._sounds = [], delete J[v], k.load())
        };
        t(L)
      }
    },
    t = function(k) {
      try {
        k.send()
      } catch (O) {
        k.onerror()
      }
    },
    Ga = function(k, t) {
      var v = function() {
          t._emit("loaderror", null, "Decoding audio data failed.")
        },
        O = function(k) {
          k && 0 < t._sounds.length ? (J[t._src] = k, r(t, k)) : v()
        };
      "undefined" != typeof Promise && 1 === x.ctx.decodeAudioData.length ?
        x.ctx.decodeAudioData(k).then(O).catch(v) : x.ctx.decodeAudioData(k, O, v)
    },
    r = function(k, r) {
      r && !k._duration && (k._duration = r.duration);
      0 === Object.keys(k._sprite).length && (k._sprite = {
        __default: [0, 1E3 * k._duration]
      });
      "loaded" !== k._state && (k._state = "loaded", k._emit("load"), k._loadQueue())
    },
    k = function() {
      if (x.usingWebAudio) {
        try {
          "undefined" != typeof AudioContext ? x.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? x.ctx = new webkitAudioContext : x.usingWebAudio = !1
        } catch (w) {
          x.usingWebAudio = !1
        }
        x.ctx || (x.usingWebAudio = !1);
        var k = /iP(hone|od|ad)/.test(x._navigator && x._navigator.platform),
          r = x._navigator && x._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
        r = r ? parseInt(r[1], 10) : null;
        k && r && 9 > r && (k = /safari/.test(x._navigator && x._navigator.userAgent.toLowerCase()), (x._navigator && x._navigator.standalone && !k || x._navigator && !x._navigator.standalone && !k) && (x.usingWebAudio = !1));
        x.usingWebAudio && (x.masterGain = void 0 === x.ctx.createGain ? x.ctx.createGainNode() : x.ctx.createGain(), x.masterGain.gain.setValueAtTime(x._muted ? 0 :
          1, x.ctx.currentTime), x.masterGain.connect(x.ctx.destination));
        x._setup()
      }
    };
  "function" == typeof define && define.amd && define([], function() {
    return {
      Howler: x,
      Howl: L
    }
  });
  "undefined" != typeof exports && (exports.Howler = x, exports.Howl = L);
  "undefined" != typeof window ? (window.HowlerGlobal = ca, window.Howler = x, window.Howl = L, window.Sound = I) : "undefined" != typeof global && (global.HowlerGlobal = ca, global.Howler = x, global.Howl = L, global.Sound = I)
}();
! function() {
  HowlerGlobal.prototype._pos = [0, 0, 0];
  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];
  HowlerGlobal.prototype.stereo = function(x) {
    if (!this.ctx || !this.ctx.listener) return this;
    for (var L = this._howls.length - 1; 0 <= L; L--) this._howls[L].stereo(x);
    return this
  };
  HowlerGlobal.prototype.pos = function(x, L, I) {
    return this.ctx && this.ctx.listener ? (L = "number" != typeof L ? this._pos[1] : L, I = "number" != typeof I ? this._pos[2] : I, "number" != typeof x ? this._pos : (this._pos = [x, L, I], void 0 !== this.ctx.listener.positionX ? (this.ctx.listener.positionX.setTargetAtTime(this._pos[0],
      Howler.ctx.currentTime, .1), this.ctx.listener.positionY.setTargetAtTime(this._pos[1], Howler.ctx.currentTime, .1), this.ctx.listener.positionZ.setTargetAtTime(this._pos[2], Howler.ctx.currentTime, .1)) : this.ctx.listener.setPosition(this._pos[0], this._pos[1], this._pos[2]), this)) : this
  };
  HowlerGlobal.prototype.orientation = function(x, L, I, J, ca, t) {
    if (!this.ctx || !this.ctx.listener) return this;
    var Ga = this._orientation;
    return L = "number" != typeof L ? Ga[1] : L, I = "number" != typeof I ? Ga[2] : I, J = "number" != typeof J ? Ga[3] : J,
      ca = "number" != typeof ca ? Ga[4] : ca, t = "number" != typeof t ? Ga[5] : t, "number" != typeof x ? Ga : (this._orientation = [x, L, I, J, ca, t], void 0 !== this.ctx.listener.forwardX ? (this.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, .1), this.ctx.listener.forwardY.setTargetAtTime(L, Howler.ctx.currentTime, .1), this.ctx.listener.forwardZ.setTargetAtTime(I, Howler.ctx.currentTime, .1), this.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, .1), this.ctx.listener.upY.setTargetAtTime(L, Howler.ctx.currentTime, .1),
        this.ctx.listener.upZ.setTargetAtTime(I, Howler.ctx.currentTime, .1)) : this.ctx.listener.setOrientation(x, L, I, J, ca, t), this)
  };
  Howl.prototype.init = function(x) {
    return function(L) {
      return this._orientation = L.orientation || [1, 0, 0], this._stereo = L.stereo || null, this._pos = L.pos || null, this._pannerAttr = {
        coneInnerAngle: void 0 !== L.coneInnerAngle ? L.coneInnerAngle : 360,
        coneOuterAngle: void 0 !== L.coneOuterAngle ? L.coneOuterAngle : 360,
        coneOuterGain: void 0 !== L.coneOuterGain ? L.coneOuterGain : 0,
        distanceModel: void 0 !== L.distanceModel ?
          L.distanceModel : "inverse",
        maxDistance: void 0 !== L.maxDistance ? L.maxDistance : 1E4,
        panningModel: void 0 !== L.panningModel ? L.panningModel : "HRTF",
        refDistance: void 0 !== L.refDistance ? L.refDistance : 1,
        rolloffFactor: void 0 !== L.rolloffFactor ? L.rolloffFactor : 1
      }, this._onstereo = L.onstereo ? [{
        fn: L.onstereo
      }] : [], this._onpos = L.onpos ? [{
        fn: L.onpos
      }] : [], this._onorientation = L.onorientation ? [{
        fn: L.onorientation
      }] : [], x.call(this, L)
    }
  }(Howl.prototype.init);
  Howl.prototype.stereo = function(x, L) {
    var I = this;
    if (!I._webAudio) return I;
    if ("loaded" !== I._state) return I._queue.push({
      event: "stereo",
      action: function() {
        I.stereo(x, L)
      }
    }), I;
    var J = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
    if (void 0 === L) {
      if ("number" != typeof x) return I._stereo;
      I._stereo = x;
      I._pos = [x, 0, 0]
    }
    for (var oa = I._getSoundIds(L), t = 0; t < oa.length; t++) {
      var Ga = I._soundById(oa[t]);
      if (Ga) {
        if ("number" != typeof x) return Ga._stereo;
        Ga._stereo = x;
        Ga._pos = [x, 0, 0];
        Ga._node && (Ga._pannerAttr.panningModel = "equalpower", Ga._panner && Ga._panner.pan || ca(Ga, J), "spatial" === J ? void 0 !==
          Ga._panner.positionX ? (Ga._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime), Ga._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime), Ga._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : Ga._panner.setPosition(x, 0, 0) : Ga._panner.pan.setValueAtTime(x, Howler.ctx.currentTime));
        I._emit("stereo", Ga._id)
      }
    }
    return I
  };
  Howl.prototype.pos = function(x, L, I, J) {
    var oa = this;
    if (!oa._webAudio) return oa;
    if ("loaded" !== oa._state) return oa._queue.push({
        event: "pos",
        action: function() {
          oa.pos(x, L, I, J)
        }
      }),
      oa;
    if (L = "number" != typeof L ? 0 : L, I = "number" != typeof I ? -.5 : I, void 0 === J) {
      if ("number" != typeof x) return oa._pos;
      oa._pos = [x, L, I]
    }
    for (var t = oa._getSoundIds(J), Ga = 0; Ga < t.length; Ga++) {
      var r = oa._soundById(t[Ga]);
      if (r) {
        if ("number" != typeof x) return r._pos;
        r._pos = [x, L, I];
        r._node && (r._panner && !r._panner.pan || ca(r, "spatial"), void 0 !== r._panner.positionX ? (r._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime), r._panner.positionY.setValueAtTime(L, Howler.ctx.currentTime), r._panner.positionZ.setValueAtTime(I,
          Howler.ctx.currentTime)) : r._panner.setPosition(x, L, I));
        oa._emit("pos", r._id)
      }
    }
    return oa
  };
  Howl.prototype.orientation = function(x, L, I, J) {
    var oa = this;
    if (!oa._webAudio) return oa;
    if ("loaded" !== oa._state) return oa._queue.push({
      event: "orientation",
      action: function() {
        oa.orientation(x, L, I, J)
      }
    }), oa;
    if (L = "number" != typeof L ? oa._orientation[1] : L, I = "number" != typeof I ? oa._orientation[2] : I, void 0 === J) {
      if ("number" != typeof x) return oa._orientation;
      oa._orientation = [x, L, I]
    }
    for (var t = oa._getSoundIds(J), Ga = 0; Ga < t.length; Ga++) {
      var r =
        oa._soundById(t[Ga]);
      if (r) {
        if ("number" != typeof x) return r._orientation;
        r._orientation = [x, L, I];
        r._node && (r._panner || (r._pos || (r._pos = oa._pos || [0, 0, -.5]), ca(r, "spatial")), void 0 !== r._panner.orientationX ? (r._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime), r._panner.orientationY.setValueAtTime(L, Howler.ctx.currentTime), r._panner.orientationZ.setValueAtTime(I, Howler.ctx.currentTime)) : r._panner.setOrientation(x, L, I));
        oa._emit("orientation", r._id)
      }
    }
    return oa
  };
  Howl.prototype.pannerAttr = function() {
    var x,
      L, I = arguments;
    if (!this._webAudio) return this;
    if (0 === I.length) return this._pannerAttr;
    if (1 === I.length) {
      if ("object" != typeof I[0]) return L = this._soundById(parseInt(I[0], 10)), L ? L._pannerAttr : this._pannerAttr;
      var J = I[0];
      void 0 === x && (J.pannerAttr || (J.pannerAttr = {
        coneInnerAngle: J.coneInnerAngle,
        coneOuterAngle: J.coneOuterAngle,
        coneOuterGain: J.coneOuterGain,
        distanceModel: J.distanceModel,
        maxDistance: J.maxDistance,
        refDistance: J.refDistance,
        rolloffFactor: J.rolloffFactor,
        panningModel: J.panningModel
      }), this._pannerAttr = {
        coneInnerAngle: void 0 !== J.pannerAttr.coneInnerAngle ? J.pannerAttr.coneInnerAngle : this._coneInnerAngle,
        coneOuterAngle: void 0 !== J.pannerAttr.coneOuterAngle ? J.pannerAttr.coneOuterAngle : this._coneOuterAngle,
        coneOuterGain: void 0 !== J.pannerAttr.coneOuterGain ? J.pannerAttr.coneOuterGain : this._coneOuterGain,
        distanceModel: void 0 !== J.pannerAttr.distanceModel ? J.pannerAttr.distanceModel : this._distanceModel,
        maxDistance: void 0 !== J.pannerAttr.maxDistance ? J.pannerAttr.maxDistance : this._maxDistance,
        refDistance: void 0 !==
          J.pannerAttr.refDistance ? J.pannerAttr.refDistance : this._refDistance,
        rolloffFactor: void 0 !== J.pannerAttr.rolloffFactor ? J.pannerAttr.rolloffFactor : this._rolloffFactor,
        panningModel: void 0 !== J.pannerAttr.panningModel ? J.pannerAttr.panningModel : this._panningModel
      })
    } else 2 === I.length && (J = I[0], x = parseInt(I[1], 10));
    x = this._getSoundIds(x);
    for (I = 0; I < x.length; I++)
      if (L = this._soundById(x[I])) {
        var oa = L._pannerAttr;
        oa = {
          coneInnerAngle: void 0 !== J.coneInnerAngle ? J.coneInnerAngle : oa.coneInnerAngle,
          coneOuterAngle: void 0 !==
            J.coneOuterAngle ? J.coneOuterAngle : oa.coneOuterAngle,
          coneOuterGain: void 0 !== J.coneOuterGain ? J.coneOuterGain : oa.coneOuterGain,
          distanceModel: void 0 !== J.distanceModel ? J.distanceModel : oa.distanceModel,
          maxDistance: void 0 !== J.maxDistance ? J.maxDistance : oa.maxDistance,
          refDistance: void 0 !== J.refDistance ? J.refDistance : oa.refDistance,
          rolloffFactor: void 0 !== J.rolloffFactor ? J.rolloffFactor : oa.rolloffFactor,
          panningModel: void 0 !== J.panningModel ? J.panningModel : oa.panningModel
        };
        var t = L._panner;
        t ? (t.coneInnerAngle =
          oa.coneInnerAngle, t.coneOuterAngle = oa.coneOuterAngle, t.coneOuterGain = oa.coneOuterGain, t.distanceModel = oa.distanceModel, t.maxDistance = oa.maxDistance, t.refDistance = oa.refDistance, t.rolloffFactor = oa.rolloffFactor, t.panningModel = oa.panningModel) : (L._pos || (L._pos = this._pos || [0, 0, -.5]), ca(L, "spatial"))
      } return this
  };
  Sound.prototype.init = function(x) {
    return function() {
      var L = this._parent;
      this._orientation = L._orientation;
      this._stereo = L._stereo;
      this._pos = L._pos;
      this._pannerAttr = L._pannerAttr;
      x.call(this);
      this._stereo ?
        L.stereo(this._stereo) : this._pos && L.pos(this._pos[0], this._pos[1], this._pos[2], this._id)
    }
  }(Sound.prototype.init);
  Sound.prototype.reset = function(x) {
    return function() {
      var L = this._parent;
      return this._orientation = L._orientation, this._stereo = L._stereo, this._pos = L._pos, this._pannerAttr = L._pannerAttr, this._stereo ? L.stereo(this._stereo) : this._pos ? L.pos(this._pos[0], this._pos[1], this._pos[2], this._id) : this._panner && (this._panner.disconnect(0), this._panner = void 0, L._refreshBuffer(this)), x.call(this)
    }
  }(Sound.prototype.reset);
  var ca = function(x, L) {
    "spatial" === (L || "spatial") ? (x._panner = Howler.ctx.createPanner(), x._panner.coneInnerAngle = x._pannerAttr.coneInnerAngle, x._panner.coneOuterAngle = x._pannerAttr.coneOuterAngle, x._panner.coneOuterGain = x._pannerAttr.coneOuterGain, x._panner.distanceModel = x._pannerAttr.distanceModel, x._panner.maxDistance = x._pannerAttr.maxDistance, x._panner.refDistance = x._pannerAttr.refDistance, x._panner.rolloffFactor = x._pannerAttr.rolloffFactor, x._panner.panningModel = x._pannerAttr.panningModel, void 0 !==
      x._panner.positionX ? (x._panner.positionX.setValueAtTime(x._pos[0], Howler.ctx.currentTime), x._panner.positionY.setValueAtTime(x._pos[1], Howler.ctx.currentTime), x._panner.positionZ.setValueAtTime(x._pos[2], Howler.ctx.currentTime)) : x._panner.setPosition(x._pos[0], x._pos[1], x._pos[2]), void 0 !== x._panner.orientationX ? (x._panner.orientationX.setValueAtTime(x._orientation[0], Howler.ctx.currentTime), x._panner.orientationY.setValueAtTime(x._orientation[1], Howler.ctx.currentTime), x._panner.orientationZ.setValueAtTime(x._orientation[2],
        Howler.ctx.currentTime)) : x._panner.setOrientation(x._orientation[0], x._orientation[1], x._orientation[2])) : (x._panner = Howler.ctx.createStereoPanner(), x._panner.pan.setValueAtTime(x._stereo, Howler.ctx.currentTime));
    x._panner.connect(x._node);
    x._paused || x._parent.pause(x._id, !0).play(x._id, !0)
  }
}();
! function(ca) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = ca() : "function" == typeof define && define.amd ? define([], ca) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).pako = ca()
}(function() {
  return function J(x, L, I) {
    function oa(r, k) {
      if (!L[r]) {
        if (!x[r]) {
          var v = "function" == typeof require && require;
          if (!k && v) return v(r, !0);
          if (t) return t(r, !0);
          k = Error("Cannot find module '" + r + "'");
          throw k.code = "MODULE_NOT_FOUND", k;
        }
        k = L[r] = {
          exports: {}
        };
        x[r][0].call(k.exports, function(k) {
          var t = x[r][1][k];
          return oa(t ? t : k)
        }, k, k.exports, J, x, L, I)
      }
      return L[r].exports
    }
    for (var t = "function" == typeof require && require, Ga = 0; Ga < I.length; Ga++) oa(I[Ga]);
    return oa
  }({
    1: [function(x, L, I) {
      function J(x) {
        if (!(this instanceof J)) return new J(x);
        x = this.options = Ga.assign({
          level: za,
          method: qb,
          chunkSize: 16384,
          windowBits: 15,
          memLevel: 8,
          strategy: S,
          to: ""
        }, x || {});
        x.raw && 0 < x.windowBits ? x.windowBits = -x.windowBits : x.gzip && 0 < x.windowBits && 16 > x.windowBits && (x.windowBits += 16);
        this.err =
          0;
        this.msg = "";
        this.ended = !1;
        this.chunks = [];
        this.strm = new v;
        this.strm.avail_out = 0;
        var L = t.deflateInit2(this.strm, x.level, x.method, x.windowBits, x.memLevel, x.strategy);
        if (L !== w) throw Error(k[L]);
        if (x.header && t.deflateSetHeader(this.strm, x.header), x.dictionary) {
          var I;
          if (I = "string" == typeof x.dictionary ? r.string2buf(x.dictionary) : "[object ArrayBuffer]" === O.call(x.dictionary) ? new Uint8Array(x.dictionary) : x.dictionary, L = t.deflateSetDictionary(this.strm, I), L !== w) throw Error(k[L]);
          this._dict_set = !0
        }
      }

      function oa(k,
        r) {
        r = new J(r);
        if (r.push(k, !0), r.err) throw r.msg;
        return r.result
      }
      var t = x("./zlib/deflate"),
        Ga = x("./utils/common"),
        r = x("./utils/strings"),
        k = x("./zlib/messages"),
        v = x("./zlib/zstream"),
        O = Object.prototype.toString,
        w = 0,
        za = -1,
        S = 0,
        qb = 8;
      J.prototype.push = function(k, v) {
        var x, J = this.strm,
          S = this.options.chunkSize;
        if (this.ended) return !1;
        v = v === ~~v ? v : !0 === v ? 4 : 0;
        "string" == typeof k ? J.input = r.string2buf(k) : "[object ArrayBuffer]" === O.call(k) ? J.input = new Uint8Array(k) : J.input = k;
        J.next_in = 0;
        J.avail_in = J.input.length;
        do {
          if (0 ===
            J.avail_out && (J.output = new Ga.Buf8(S), J.next_out = 0, J.avail_out = S), x = t.deflate(J, v), 1 !== x && x !== w) return this.onEnd(x), this.ended = !0, !1;
          0 !== J.avail_out && (0 !== J.avail_in || 4 !== v && 2 !== v) || ("string" === this.options.to ? this.onData(r.buf2binstring(Ga.shrinkBuf(J.output, J.next_out))) : this.onData(Ga.shrinkBuf(J.output, J.next_out)))
        } while ((0 < J.avail_in || 0 === J.avail_out) && 1 !== x);
        return 4 === v ? (x = t.deflateEnd(this.strm), this.onEnd(x), this.ended = !0, x === w) : 2 !== v || (this.onEnd(w), J.avail_out = 0, !0)
      };
      J.prototype.onData =
        function(k) {
          this.chunks.push(k)
        };
      J.prototype.onEnd = function(k) {
        k === w && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = Ga.flattenChunks(this.chunks));
        this.chunks = [];
        this.err = k;
        this.msg = this.strm.msg
      };
      I.Deflate = J;
      I.deflate = oa;
      I.deflateRaw = function(k, r) {
        return r = r || {}, r.raw = !0, oa(k, r)
      };
      I.gzip = function(k, r) {
        return r = r || {}, r.gzip = !0, oa(k, r)
      }
    }, {
      "./utils/common": 3,
      "./utils/strings": 4,
      "./zlib/deflate": 8,
      "./zlib/messages": 13,
      "./zlib/zstream": 15
    }],
    2: [function(x, L, I) {
      function J(r) {
        if (!(this instanceof J)) return new J(r);
        var x = this.options = Ga.assign({
          chunkSize: 16384,
          windowBits: 0,
          to: ""
        }, r || {});
        x.raw && 0 <= x.windowBits && 16 > x.windowBits && (x.windowBits = -x.windowBits, 0 === x.windowBits && (x.windowBits = -15));
        !(0 <= x.windowBits && 16 > x.windowBits) || r && r.windowBits || (x.windowBits += 32);
        15 < x.windowBits && 48 > x.windowBits && 0 === (15 & x.windowBits) && (x.windowBits |= 15);
        this.err = 0;
        this.msg = "";
        this.ended = !1;
        this.chunks = [];
        this.strm = new O;
        this.strm.avail_out = 0;
        r = t.inflateInit2(this.strm, x.windowBits);
        if (r !== k.Z_OK) throw Error(v[r]);
        this.header = new w;
        t.inflateGetHeader(this.strm, this.header)
      }

      function oa(k, r) {
        r = new J(r);
        if (r.push(k, !0), r.err) throw r.msg;
        return r.result
      }
      var t = x("./zlib/inflate"),
        Ga = x("./utils/common"),
        r = x("./utils/strings"),
        k = x("./zlib/constants"),
        v = x("./zlib/messages"),
        O = x("./zlib/zstream"),
        w = x("./zlib/gzheader"),
        za = Object.prototype.toString;
      J.prototype.push = function(v, w) {
        var x, O, J, L, S, I = this.strm,
          Y = this.options.chunkSize,
          M = this.options.dictionary,
          vb = !1;
        if (this.ended) return !1;
        w = w === ~~w ? w : !0 === w ? k.Z_FINISH : k.Z_NO_FLUSH;
        "string" == typeof v ? I.input = r.binstring2buf(v) : "[object ArrayBuffer]" === za.call(v) ? I.input = new Uint8Array(v) : I.input = v;
        I.next_in = 0;
        I.avail_in = I.input.length;
        do {
          if (0 === I.avail_out && (I.output = new Ga.Buf8(Y), I.next_out = 0, I.avail_out = Y), x = t.inflate(I, k.Z_NO_FLUSH), x === k.Z_NEED_DICT && M && (S = "string" == typeof M ? r.string2buf(M) : "[object ArrayBuffer]" === za.call(M) ? new Uint8Array(M) : M, x = t.inflateSetDictionary(this.strm, S)), x === k.Z_BUF_ERROR && !0 === vb && (x = k.Z_OK, vb = !1), x !== k.Z_STREAM_END && x !== k.Z_OK) return this.onEnd(x),
            this.ended = !0, !1;
          I.next_out && (0 !== I.avail_out && x !== k.Z_STREAM_END && (0 !== I.avail_in || w !== k.Z_FINISH && w !== k.Z_SYNC_FLUSH) || ("string" === this.options.to ? (O = r.utf8border(I.output, I.next_out), J = I.next_out - O, L = r.buf2string(I.output, O), I.next_out = J, I.avail_out = Y - J, J && Ga.arraySet(I.output, I.output, O, J, 0), this.onData(L)) : this.onData(Ga.shrinkBuf(I.output, I.next_out))));
          0 === I.avail_in && 0 === I.avail_out && (vb = !0)
        } while ((0 < I.avail_in || 0 === I.avail_out) && x !== k.Z_STREAM_END);
        return x === k.Z_STREAM_END && (w = k.Z_FINISH),
          w === k.Z_FINISH ? (x = t.inflateEnd(this.strm), this.onEnd(x), this.ended = !0, x === k.Z_OK) : w !== k.Z_SYNC_FLUSH || (this.onEnd(k.Z_OK), I.avail_out = 0, !0)
      };
      J.prototype.onData = function(k) {
        this.chunks.push(k)
      };
      J.prototype.onEnd = function(r) {
        r === k.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = Ga.flattenChunks(this.chunks));
        this.chunks = [];
        this.err = r;
        this.msg = this.strm.msg
      };
      I.Inflate = J;
      I.inflate = oa;
      I.inflateRaw = function(k, r) {
        return r = r || {}, r.raw = !0, oa(k, r)
      };
      I.ungzip = oa
    }, {
      "./utils/common": 3,
      "./utils/strings": 4,
      "./zlib/constants": 6,
      "./zlib/gzheader": 9,
      "./zlib/inflate": 11,
      "./zlib/messages": 13,
      "./zlib/zstream": 15
    }],
    3: [function(x, L, I) {
      x = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
      I.assign = function(t) {
        for (var x = Array.prototype.slice.call(arguments, 1); x.length;) {
          var r = x.shift();
          if (r) {
            if ("object" != typeof r) throw new TypeError(r + "must be non-object");
            for (var k in r) r.hasOwnProperty(k) && (t[k] = r[k])
          }
        }
        return t
      };
      I.shrinkBuf = function(t, x) {
        return t.length ===
          x ? t : t.subarray ? t.subarray(0, x) : (t.length = x, t)
      };
      var J = {
          arraySet: function(t, x, r, k, v) {
            if (x.subarray && t.subarray) return void t.set(x.subarray(r, r + k), v);
            for (var O = 0; O < k; O++) t[v + O] = x[r + O]
          },
          flattenChunks: function(t) {
            var x, r;
            var k = r = 0;
            for (x = t.length; k < x; k++) r += t[k].length;
            var v = new Uint8Array(r);
            k = r = 0;
            for (x = t.length; k < x; k++) {
              var O = t[k];
              v.set(O, r);
              r += O.length
            }
            return v
          }
        },
        oa = {
          arraySet: function(t, x, r, k, v) {
            for (var O = 0; O < k; O++) t[v + O] = x[r + O]
          },
          flattenChunks: function(t) {
            return [].concat.apply([], t)
          }
        };
      I.setTyped = function(t) {
        t ?
          (I.Buf8 = Uint8Array, I.Buf16 = Uint16Array, I.Buf32 = Int32Array, I.assign(I, J)) : (I.Buf8 = Array, I.Buf16 = Array, I.Buf32 = Array, I.assign(I, oa))
      };
      I.setTyped(x)
    }, {}],
    4: [function(x, L, I) {
      function J(k, r) {
        if (65537 > r && (k.subarray && Ga || !k.subarray && t)) return String.fromCharCode.apply(null, oa.shrinkBuf(k, r));
        for (var v = "", w = 0; w < r; w++) v += String.fromCharCode(k[w]);
        return v
      }
      var oa = x("./common"),
        t = !0,
        Ga = !0;
      try {
        String.fromCharCode.apply(null, [0])
      } catch (k) {
        t = !1
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1))
      } catch (k) {
        Ga = !1
      }
      var r = new oa.Buf8(256);
      for (x = 0; 256 > x; x++) r[x] = 252 <= x ? 6 : 248 <= x ? 5 : 240 <= x ? 4 : 224 <= x ? 3 : 192 <= x ? 2 : 1;
      r[254] = r[254] = 1;
      I.string2buf = function(k) {
        var r, t, w, x = k.length,
          J = 0;
        for (t = 0; t < x; t++) {
          var L = k.charCodeAt(t);
          55296 === (64512 & L) && t + 1 < x && (r = k.charCodeAt(t + 1), 56320 === (64512 & r) && (L = 65536 + (L - 55296 << 10) + (r - 56320), t++));
          J += 128 > L ? 1 : 2048 > L ? 2 : 65536 > L ? 3 : 4
        }
        var I = new oa.Buf8(J);
        for (t = w = 0; w < J; t++) L = k.charCodeAt(t), 55296 === (64512 & L) && t + 1 < x && (r = k.charCodeAt(t + 1), 56320 === (64512 & r) && (L = 65536 + (L - 55296 << 10) + (r - 56320), t++)), 128 >
          L ? I[w++] = L : 2048 > L ? (I[w++] = 192 | L >>> 6, I[w++] = 128 | 63 & L) : 65536 > L ? (I[w++] = 224 | L >>> 12, I[w++] = 128 | L >>> 6 & 63, I[w++] = 128 | 63 & L) : (I[w++] = 240 | L >>> 18, I[w++] = 128 | L >>> 12 & 63, I[w++] = 128 | L >>> 6 & 63, I[w++] = 128 | 63 & L);
        return I
      };
      I.buf2binstring = function(k) {
        return J(k, k.length)
      };
      I.binstring2buf = function(k) {
        for (var r = new oa.Buf8(k.length), t = 0, w = r.length; t < w; t++) r[t] = k.charCodeAt(t);
        return r
      };
      I.buf2string = function(k, t) {
        var v, w, x, L = t || k.length,
          I = Array(2 * L);
        for (t = v = 0; t < L;)
          if (w = k[t++], 128 > w) I[v++] = w;
          else if (x = r[w], 4 < x) I[v++] = 65533,
          t += x - 1;
        else {
          for (w &= 2 === x ? 31 : 3 === x ? 15 : 7; 1 < x && t < L;) w = w << 6 | 63 & k[t++], x--;
          1 < x ? I[v++] = 65533 : 65536 > w ? I[v++] = w : (w -= 65536, I[v++] = 55296 | w >> 10 & 1023, I[v++] = 56320 | 1023 & w)
        }
        return J(I, v)
      };
      I.utf8border = function(k, t) {
        var v;
        t = t || k.length;
        t > k.length && (t = k.length);
        for (v = t - 1; 0 <= v && 128 === (192 & k[v]);) v--;
        return 0 > v ? t : 0 === v ? t : v + r[k[v]] > t ? v : t
      }
    }, {
      "./common": 3
    }],
    5: [function(x, L, I) {
      L.exports = function(x, L, t, I) {
        var r = 65535 & x | 0;
        x = x >>> 16 & 65535 | 0;
        for (var k; 0 !== t;) {
          k = 2E3 < t ? 2E3 : t;
          t -= k;
          do r = r + L[I++] | 0, x = x + r | 0; while (--k);
          r %= 65521;
          x %=
            65521
        }
        return r | x << 16 | 0
      }
    }, {}],
    6: [function(x, L, I) {
      L.exports = {
        Z_NO_FLUSH: 0,
        Z_PARTIAL_FLUSH: 1,
        Z_SYNC_FLUSH: 2,
        Z_FULL_FLUSH: 3,
        Z_FINISH: 4,
        Z_BLOCK: 5,
        Z_TREES: 6,
        Z_OK: 0,
        Z_STREAM_END: 1,
        Z_NEED_DICT: 2,
        Z_ERRNO: -1,
        Z_STREAM_ERROR: -2,
        Z_DATA_ERROR: -3,
        Z_BUF_ERROR: -5,
        Z_NO_COMPRESSION: 0,
        Z_BEST_SPEED: 1,
        Z_BEST_COMPRESSION: 9,
        Z_DEFAULT_COMPRESSION: -1,
        Z_FILTERED: 1,
        Z_HUFFMAN_ONLY: 2,
        Z_RLE: 3,
        Z_FIXED: 4,
        Z_DEFAULT_STRATEGY: 0,
        Z_BINARY: 0,
        Z_TEXT: 1,
        Z_UNKNOWN: 2,
        Z_DEFLATED: 8
      }
    }, {}],
    7: [function(x, L, I) {
      var J = function() {
        for (var x, t = [], J = 0; 256 >
          J; J++) {
          x = J;
          for (var r = 0; 8 > r; r++) x = 1 & x ? 3988292384 ^ x >>> 1 : x >>> 1;
          t[J] = x
        }
        return t
      }();
      L.exports = function(x, t, L, r) {
        L = r + L;
        for (x ^= -1; r < L; r++) x = x >>> 8 ^ J[255 & (x ^ t[r])];
        return x ^ -1
      }
    }, {}],
    8: [function(x, L, I) {
      function J(k, r) {
        return k.msg = M[r], r
      }

      function oa(k) {
        for (var r = k.length; 0 <= --r;) k[r] = 0
      }

      function t(k) {
        var r = k.state,
          t = r.pending;
        t > k.avail_out && (t = k.avail_out);
        0 !== t && (Pb.arraySet(k.output, r.pending_buf, r.pending_out, t, k.next_out), k.next_out += t, r.pending_out += t, k.total_out += t, k.avail_out -= t, r.pending -= t, 0 === r.pending &&
          (r.pending_out = 0))
      }

      function Ga(k, r) {
        dd._tr_flush_block(k, 0 <= k.block_start ? k.block_start : -1, k.strstart - k.block_start, r);
        k.block_start = k.strstart;
        t(k.strm)
      }

      function r(k, r) {
        k.pending_buf[k.pending++] = r
      }

      function k(k, r) {
        k.pending_buf[k.pending++] = r >>> 8 & 255;
        k.pending_buf[k.pending++] = 255 & r
      }

      function v(k, r) {
        var t, v, w = k.max_chain_length,
          x = k.strstart,
          Q = k.prev_length,
          C = k.nice_match,
          E = k.strstart > k.w_size - Oa ? k.strstart - (k.w_size - Oa) : 0,
          J = k.window,
          W = k.w_mask,
          O = k.prev,
          M = k.strstart + ya,
          L = J[x + Q - 1],
          I = J[x + Q];
        k.prev_length >=
          k.good_match && (w >>= 2);
        C > k.lookahead && (C = k.lookahead);
        do
          if (t = r, J[t + Q] === I && J[t + Q - 1] === L && J[t] === J[x] && J[++t] === J[x + 1]) {
            x += 2;
            for (t++; J[++x] === J[++t] && J[++x] === J[++t] && J[++x] === J[++t] && J[++x] === J[++t] && J[++x] === J[++t] && J[++x] === J[++t] && J[++x] === J[++t] && J[++x] === J[++t] && x < M;);
            if (v = ya - (M - x), x = M - ya, v > Q) {
              if (k.match_start = r, Q = v, v >= C) break;
              L = J[x + Q - 1];
              I = J[x + Q]
            }
          } while ((r = O[r & W]) > E && 0 !== --w);
        return Q <= k.lookahead ? Q : k.lookahead
      }

      function O(k) {
        var r, t, v = k.w_size;
        do {
          if (t = k.window_size - k.lookahead - k.strstart, k.strstart >=
            v + (v - Oa)) {
            Pb.arraySet(k.window, k.window, v, v, 0);
            k.match_start -= v;
            k.strstart -= v;
            k.block_start -= v;
            var w = r = k.hash_size;
            do {
              var x = k.head[--w];
              k.head[w] = x >= v ? x - v : 0
            } while (--r);
            w = r = v;
            do x = k.prev[--w], k.prev[w] = x >= v ? x - v : 0; while (--r);
            t += v
          }
          if (0 === k.strm.avail_in) break;
          w = k.strm;
          x = k.window;
          var Q = k.strstart + k.lookahead,
            C = w.avail_in;
          if (r = (C > t && (C = t), 0 === C ? 0 : (w.avail_in -= C, Pb.arraySet(x, w.input, w.next_in, C, Q), 1 === w.state.wrap ? w.adler = rb(w.adler, x, C, Q) : 2 === w.state.wrap && (w.adler = Y(w.adler, x, C, Q)), w.next_in += C, w.total_in +=
              C, C)), k.lookahead += r, k.lookahead + k.insert >= bb)
            for (t = k.strstart - k.insert, k.ins_h = k.window[t], k.ins_h = (k.ins_h << k.hash_shift ^ k.window[t + 1]) & k.hash_mask; k.insert && (k.ins_h = (k.ins_h << k.hash_shift ^ k.window[t + bb - 1]) & k.hash_mask, k.prev[t & k.w_mask] = k.head[k.ins_h], k.head[k.ins_h] = t, t++, k.insert--, !(k.lookahead + k.insert < bb)););
        } while (k.lookahead < Oa && 0 !== k.strm.avail_in)
      }

      function w(k, r) {
        for (var t, w;;) {
          if (k.lookahead < Oa) {
            if (O(k), k.lookahead < Oa && r === vb) return V;
            if (0 === k.lookahead) break
          }
          if (t = 0, k.lookahead >= bb &&
            (k.ins_h = (k.ins_h << k.hash_shift ^ k.window[k.strstart + bb - 1]) & k.hash_mask, t = k.prev[k.strstart & k.w_mask] = k.head[k.ins_h], k.head[k.ins_h] = k.strstart), 0 !== t && k.strstart - t <= k.w_size - Oa && (k.match_length = v(k, t)), k.match_length >= bb)
            if (w = dd._tr_tally(k, k.strstart - k.match_start, k.match_length - bb), k.lookahead -= k.match_length, k.match_length <= k.max_lazy_match && k.lookahead >= bb) {
              k.match_length--;
              do k.strstart++, k.ins_h = (k.ins_h << k.hash_shift ^ k.window[k.strstart + bb - 1]) & k.hash_mask, t = k.prev[k.strstart & k.w_mask] = k.head[k.ins_h],
                k.head[k.ins_h] = k.strstart; while (0 !== --k.match_length);
              k.strstart++
            } else k.strstart += k.match_length, k.match_length = 0, k.ins_h = k.window[k.strstart], k.ins_h = (k.ins_h << k.hash_shift ^ k.window[k.strstart + 1]) & k.hash_mask;
          else w = dd._tr_tally(k, 0, k.window[k.strstart]), k.lookahead--, k.strstart++;
          if (w && (Ga(k, !1), 0 === k.strm.avail_out)) return V
        }
        return k.insert = k.strstart < bb - 1 ? k.strstart : bb - 1, r === Qa ? (Ga(k, !0), 0 === k.strm.avail_out ? ia : wc) : k.last_lit && (Ga(k, !1), 0 === k.strm.avail_out) ? V : sb
      }

      function za(k, r) {
        for (var t,
            w, x;;) {
          if (k.lookahead < Oa) {
            if (O(k), k.lookahead < Oa && r === vb) return V;
            if (0 === k.lookahead) break
          }
          if (t = 0, k.lookahead >= bb && (k.ins_h = (k.ins_h << k.hash_shift ^ k.window[k.strstart + bb - 1]) & k.hash_mask, t = k.prev[k.strstart & k.w_mask] = k.head[k.ins_h], k.head[k.ins_h] = k.strstart), k.prev_length = k.match_length, k.prev_match = k.match_start, k.match_length = bb - 1, 0 !== t && k.prev_length < k.max_lazy_match && k.strstart - t <= k.w_size - Oa && (k.match_length = v(k, t), 5 >= k.match_length && (k.strategy === ec || k.match_length === bb && 4096 < k.strstart - k.match_start) &&
              (k.match_length = bb - 1)), k.prev_length >= bb && k.match_length <= k.prev_length) {
            x = k.strstart + k.lookahead - bb;
            w = dd._tr_tally(k, k.strstart - 1 - k.prev_match, k.prev_length - bb);
            k.lookahead -= k.prev_length - 1;
            k.prev_length -= 2;
            do ++k.strstart <= x && (k.ins_h = (k.ins_h << k.hash_shift ^ k.window[k.strstart + bb - 1]) & k.hash_mask, t = k.prev[k.strstart & k.w_mask] = k.head[k.ins_h], k.head[k.ins_h] = k.strstart); while (0 !== --k.prev_length);
            if (k.match_available = 0, k.match_length = bb - 1, k.strstart++, w && (Ga(k, !1), 0 === k.strm.avail_out)) return V
          } else if (k.match_available) {
            if (w =
              dd._tr_tally(k, 0, k.window[k.strstart - 1]), w && Ga(k, !1), k.strstart++, k.lookahead--, 0 === k.strm.avail_out) return V
          } else k.match_available = 1, k.strstart++, k.lookahead--
        }
        return k.match_available && (dd._tr_tally(k, 0, k.window[k.strstart - 1]), k.match_available = 0), k.insert = k.strstart < bb - 1 ? k.strstart : bb - 1, r === Qa ? (Ga(k, !0), 0 === k.strm.avail_out ? ia : wc) : k.last_lit && (Ga(k, !1), 0 === k.strm.avail_out) ? V : sb
      }

      function S(k, r, t, v, w) {
        this.good_length = k;
        this.max_lazy = r;
        this.nice_length = t;
        this.max_chain = v;
        this.func = w
      }

      function qb() {
        this.strm =
          null;
        this.status = 0;
        this.pending_buf = null;
        this.wrap = this.pending = this.pending_out = this.pending_buf_size = 0;
        this.gzhead = null;
        this.gzindex = 0;
        this.method = Pe;
        this.last_flush = -1;
        this.w_mask = this.w_bits = this.w_size = 0;
        this.window = null;
        this.window_size = 0;
        this.head = this.prev = null;
        this.nice_match = this.good_match = this.strategy = this.level = this.max_lazy_match = this.max_chain_length = this.prev_length = this.lookahead = this.match_start = this.strstart = this.match_available = this.prev_match = this.match_length = this.block_start =
          this.hash_shift = this.hash_mask = this.hash_bits = this.hash_size = this.ins_h = 0;
        this.dyn_ltree = new Pb.Buf16(2 * kd);
        this.dyn_dtree = new Pb.Buf16(2 * (2 * Fb + 1));
        this.bl_tree = new Pb.Buf16(2 * (2 * E + 1));
        oa(this.dyn_ltree);
        oa(this.dyn_dtree);
        oa(this.bl_tree);
        this.bl_desc = this.d_desc = this.l_desc = null;
        this.bl_count = new Pb.Buf16(pc + 1);
        this.heap = new Pb.Buf16(2 * Zd + 1);
        oa(this.heap);
        this.heap_max = this.heap_len = 0;
        this.depth = new Pb.Buf16(2 * Zd + 1);
        oa(this.depth);
        this.bi_valid = this.bi_buf = this.insert = this.matches = this.static_len =
          this.opt_len = this.d_buf = this.last_lit = this.lit_bufsize = this.l_buf = 0
      }

      function zd(k) {
        var r;
        return k && k.state ? (k.total_in = k.total_out = 0, k.data_type = Ya, r = k.state, r.pending = 0, r.pending_out = 0, 0 > r.wrap && (r.wrap = -r.wrap), r.status = r.wrap ? Da : Z, k.adler = 2 === r.wrap ? 0 : 1, r.last_flush = vb, dd._tr_init(r), W) : J(k, db)
      }

      function nb(k) {
        var r = zd(k);
        r === W && (k = k.state, k.window_size = 2 * k.w_size, oa(k.head), k.max_lazy_match = C[k.level].max_lazy, k.good_match = C[k.level].good_length, k.nice_match = C[k.level].nice_length, k.max_chain_length =
          C[k.level].max_chain, k.strstart = 0, k.block_start = 0, k.lookahead = 0, k.insert = 0, k.match_length = k.prev_length = bb - 1, k.match_available = 0, k.ins_h = 0);
        return r
      }

      function da(k, r, t, v, w, x) {
        if (!k) return db;
        var z = 1;
        if (r === ob && (r = 6), 0 > v ? (z = 0, v = -v) : 15 < v && (z = 2, v -= 16), 1 > w || w > Ka || t !== Pe || 8 > v || 15 < v || 0 > r || 9 < r || 0 > x || x > Qb) return J(k, db);
        8 === v && (v = 9);
        var aa = new qb;
        return k.state = aa, aa.strm = k, aa.wrap = z, aa.gzhead = null, aa.w_bits = v, aa.w_size = 1 << aa.w_bits, aa.w_mask = aa.w_size - 1, aa.hash_bits = w + 7, aa.hash_size = 1 << aa.hash_bits, aa.hash_mask =
          aa.hash_size - 1, aa.hash_shift = ~~((aa.hash_bits + bb - 1) / bb), aa.window = new Pb.Buf8(2 * aa.w_size), aa.head = new Pb.Buf16(aa.hash_size), aa.prev = new Pb.Buf16(aa.w_size), aa.lit_bufsize = 1 << w + 6, aa.pending_buf_size = 4 * aa.lit_bufsize, aa.pending_buf = new Pb.Buf8(aa.pending_buf_size), aa.d_buf = 1 * aa.lit_bufsize, aa.l_buf = 3 * aa.lit_bufsize, aa.level = r, aa.strategy = x, aa.method = t, nb(k)
      }
      var Pb = x("../utils/common"),
        dd = x("./trees"),
        rb = x("./adler32"),
        Y = x("./crc32"),
        M = x("./messages"),
        vb = 0,
        Qa = 4,
        W = 0,
        db = -2,
        ob = -1,
        ec = 1,
        Qb = 4,
        Ya = 2,
        Pe = 8,
        Ka = 9,
        Zd = 286,
        Fb = 30,
        E = 19,
        kd = 2 * Zd + 1,
        pc = 15,
        bb = 3,
        ya = 258,
        Oa = ya + bb + 1,
        Da = 42,
        Z = 113,
        V = 1,
        sb = 2,
        ia = 3,
        wc = 4;
      var C = [new S(0, 0, 0, 0, function(k, r) {
        var t = 65535;
        for (t > k.pending_buf_size - 5 && (t = k.pending_buf_size - 5);;) {
          if (1 >= k.lookahead) {
            if (O(k), 0 === k.lookahead && r === vb) return V;
            if (0 === k.lookahead) break
          }
          k.strstart += k.lookahead;
          k.lookahead = 0;
          var v = k.block_start + t;
          if ((0 === k.strstart || k.strstart >= v) && (k.lookahead = k.strstart - v, k.strstart = v, Ga(k, !1), 0 === k.strm.avail_out) || k.strstart - k.block_start >= k.w_size - Oa && (Ga(k, !1), 0 ===
              k.strm.avail_out)) return V
        }
        return k.insert = 0, r === Qa ? (Ga(k, !0), 0 === k.strm.avail_out ? ia : wc) : (k.strstart > k.block_start && Ga(k, !1), V)
      }), new S(4, 4, 8, 4, w), new S(4, 5, 16, 8, w), new S(4, 6, 32, 32, w), new S(4, 4, 16, 16, za), new S(8, 16, 32, 32, za), new S(8, 16, 128, 128, za), new S(8, 32, 128, 256, za), new S(32, 128, 258, 1024, za), new S(32, 258, 258, 4096, za)];
      I.deflateInit = function(k, r) {
        return da(k, r, Pe, 15, 8, 0)
      };
      I.deflateInit2 = da;
      I.deflateReset = nb;
      I.deflateResetKeep = zd;
      I.deflateSetHeader = function(k, r) {
        return k && k.state ? 2 !== k.state.wrap ?
          db : (k.state.gzhead = r, W) : db
      };
      I.deflate = function(v, w) {
        var x, z;
        if (!v || !v.state || 5 < w || 0 > w) return v ? J(v, db) : db;
        if (z = v.state, !v.output || !v.input && 0 !== v.avail_in || 666 === z.status && w !== Qa) return J(v, 0 === v.avail_out ? -5 : db);
        if (z.strm = v, x = z.last_flush, z.last_flush = w, z.status === Da)
          if (2 === z.wrap) v.adler = 0, r(z, 31), r(z, 139), r(z, 8), z.gzhead ? (r(z, (z.gzhead.text ? 1 : 0) + (z.gzhead.hcrc ? 2 : 0) + (z.gzhead.extra ? 4 : 0) + (z.gzhead.name ? 8 : 0) + (z.gzhead.comment ? 16 : 0)), r(z, 255 & z.gzhead.time), r(z, z.gzhead.time >> 8 & 255), r(z, z.gzhead.time >>
            16 & 255), r(z, z.gzhead.time >> 24 & 255), r(z, 9 === z.level ? 2 : 2 <= z.strategy || 2 > z.level ? 4 : 0), r(z, 255 & z.gzhead.os), z.gzhead.extra && z.gzhead.extra.length && (r(z, 255 & z.gzhead.extra.length), r(z, z.gzhead.extra.length >> 8 & 255)), z.gzhead.hcrc && (v.adler = Y(v.adler, z.pending_buf, z.pending, 0)), z.gzindex = 0, z.status = 69) : (r(z, 0), r(z, 0), r(z, 0), r(z, 0), r(z, 0), r(z, 9 === z.level ? 2 : 2 <= z.strategy || 2 > z.level ? 4 : 0), r(z, 3), z.status = Z);
          else {
            var E = Pe + (z.w_bits - 8 << 4) << 8;
            E |= (2 <= z.strategy || 2 > z.level ? 0 : 6 > z.level ? 1 : 6 === z.level ? 2 : 3) << 6;
            0 !== z.strstart &&
              (E |= 32);
            z.status = Z;
            k(z, E + (31 - E % 31));
            0 !== z.strstart && (k(z, v.adler >>> 16), k(z, 65535 & v.adler));
            v.adler = 1
          } if (69 === z.status)
          if (z.gzhead.extra) {
            for (E = z.pending; z.gzindex < (65535 & z.gzhead.extra.length) && (z.pending !== z.pending_buf_size || (z.gzhead.hcrc && z.pending > E && (v.adler = Y(v.adler, z.pending_buf, z.pending - E, E)), t(v), E = z.pending, z.pending !== z.pending_buf_size));) r(z, 255 & z.gzhead.extra[z.gzindex]), z.gzindex++;
            z.gzhead.hcrc && z.pending > E && (v.adler = Y(v.adler, z.pending_buf, z.pending - E, E));
            z.gzindex === z.gzhead.extra.length &&
              (z.gzindex = 0, z.status = 73)
          } else z.status = 73;
        if (73 === z.status)
          if (z.gzhead.name) {
            E = z.pending;
            do {
              if (z.pending === z.pending_buf_size && (z.gzhead.hcrc && z.pending > E && (v.adler = Y(v.adler, z.pending_buf, z.pending - E, E)), t(v), E = z.pending, z.pending === z.pending_buf_size)) {
                var M = 1;
                break
              }
              M = z.gzindex < z.gzhead.name.length ? 255 & z.gzhead.name.charCodeAt(z.gzindex++) : 0;
              r(z, M)
            } while (0 !== M);
            z.gzhead.hcrc && z.pending > E && (v.adler = Y(v.adler, z.pending_buf, z.pending - E, E));
            0 === M && (z.gzindex = 0, z.status = 91)
          } else z.status = 91;
        if (91 ===
          z.status)
          if (z.gzhead.comment) {
            E = z.pending;
            do {
              if (z.pending === z.pending_buf_size && (z.gzhead.hcrc && z.pending > E && (v.adler = Y(v.adler, z.pending_buf, z.pending - E, E)), t(v), E = z.pending, z.pending === z.pending_buf_size)) {
                M = 1;
                break
              }
              M = z.gzindex < z.gzhead.comment.length ? 255 & z.gzhead.comment.charCodeAt(z.gzindex++) : 0;
              r(z, M)
            } while (0 !== M);
            z.gzhead.hcrc && z.pending > E && (v.adler = Y(v.adler, z.pending_buf, z.pending - E, E));
            0 === M && (z.status = 103)
          } else z.status = 103;
        if (103 === z.status && (z.gzhead.hcrc ? (z.pending + 2 > z.pending_buf_size &&
            t(v), z.pending + 2 <= z.pending_buf_size && (r(z, 255 & v.adler), r(z, v.adler >> 8 & 255), v.adler = 0, z.status = Z)) : z.status = Z), 0 !== z.pending) {
          if (t(v), 0 === v.avail_out) return z.last_flush = -1, W
        } else if (0 === v.avail_in && (w << 1) - (4 < w ? 9 : 0) <= (x << 1) - (4 < x ? 9 : 0) && w !== Qa) return J(v, -5);
        if (666 === z.status && 0 !== v.avail_in) return J(v, -5);
        if (0 !== v.avail_in || 0 !== z.lookahead || w !== vb && 666 !== z.status) {
          if (2 === z.strategy) a: {
            for (var L;;) {
              if (0 === z.lookahead && (O(z), 0 === z.lookahead)) {
                if (w === vb) {
                  var I = V;
                  break a
                }
                break
              }
              if (z.match_length = 0, L = dd._tr_tally(z,
                  0, z.window[z.strstart]), z.lookahead--, z.strstart++, L && (Ga(z, !1), 0 === z.strm.avail_out)) {
                I = V;
                break a
              }
            }
            I = (z.insert = 0, w === Qa ? (Ga(z, !0), 0 === z.strm.avail_out ? ia : wc) : z.last_lit && (Ga(z, !1), 0 === z.strm.avail_out) ? V : sb)
          }
          else if (3 === z.strategy) a: {
            var Q, S;
            for (L = z.window;;) {
              if (z.lookahead <= ya) {
                if (O(z), z.lookahead <= ya && w === vb) {
                  I = V;
                  break a
                }
                if (0 === z.lookahead) break
              }
              if (z.match_length = 0, z.lookahead >= bb && 0 < z.strstart && (S = z.strstart - 1, Q = L[S], Q === L[++S] && Q === L[++S] && Q === L[++S])) {
                for (x = z.strstart + ya; Q === L[++S] && Q === L[++S] &&
                  Q === L[++S] && Q === L[++S] && Q === L[++S] && Q === L[++S] && Q === L[++S] && Q === L[++S] && S < x;);
                z.match_length = ya - (x - S);
                z.match_length > z.lookahead && (z.match_length = z.lookahead)
              }
              if (z.match_length >= bb ? (I = dd._tr_tally(z, 1, z.match_length - bb), z.lookahead -= z.match_length, z.strstart += z.match_length, z.match_length = 0) : (I = dd._tr_tally(z, 0, z.window[z.strstart]), z.lookahead--, z.strstart++), I && (Ga(z, !1), 0 === z.strm.avail_out)) {
                I = V;
                break a
              }
            }
            I = (z.insert = 0, w === Qa ? (Ga(z, !0), 0 === z.strm.avail_out ? ia : wc) : z.last_lit && (Ga(z, !1), 0 === z.strm.avail_out) ?
              V : sb)
          }
          else I = C[z.level].func(z, w);
          if (I !== ia && I !== wc || (z.status = 666), I === V || I === ia) return 0 === v.avail_out && (z.last_flush = -1), W;
          if (I === sb && (1 === w ? dd._tr_align(z) : 5 !== w && (dd._tr_stored_block(z, 0, 0, !1), 3 === w && (oa(z.head), 0 === z.lookahead && (z.strstart = 0, z.block_start = 0, z.insert = 0))), t(v), 0 === v.avail_out)) return z.last_flush = -1, W
        }
        return w !== Qa ? W : 0 >= z.wrap ? 1 : (2 === z.wrap ? (r(z, 255 & v.adler), r(z, v.adler >> 8 & 255), r(z, v.adler >> 16 & 255), r(z, v.adler >> 24 & 255), r(z, 255 & v.total_in), r(z, v.total_in >> 8 & 255), r(z, v.total_in >>
          16 & 255), r(z, v.total_in >> 24 & 255)) : (k(z, v.adler >>> 16), k(z, 65535 & v.adler)), t(v), 0 < z.wrap && (z.wrap = -z.wrap), 0 !== z.pending ? W : 1)
      };
      I.deflateEnd = function(k) {
        var r;
        return k && k.state ? (r = k.state.status, r !== Da && 69 !== r && 73 !== r && 91 !== r && 103 !== r && r !== Z && 666 !== r ? J(k, db) : (k.state = null, r === Z ? J(k, -3) : W)) : db
      };
      I.deflateSetDictionary = function(k, r) {
        var t, v, w;
        var x = r.length;
        if (!k || !k.state || (t = k.state, v = t.wrap, 2 === v || 1 === v && t.status !== Da || t.lookahead)) return db;
        1 === v && (k.adler = rb(k.adler, r, x, 0));
        t.wrap = 0;
        x >= t.w_size && (0 ===
          v && (oa(t.head), t.strstart = 0, t.block_start = 0, t.insert = 0), w = new Pb.Buf8(t.w_size), Pb.arraySet(w, r, x - t.w_size, t.w_size, 0), r = w, x = t.w_size);
        w = k.avail_in;
        var C = k.next_in;
        var E = k.input;
        k.avail_in = x;
        k.next_in = 0;
        k.input = r;
        for (O(t); t.lookahead >= bb;) {
          r = t.strstart;
          x = t.lookahead - (bb - 1);
          do t.ins_h = (t.ins_h << t.hash_shift ^ t.window[r + bb - 1]) & t.hash_mask, t.prev[r & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = r, r++; while (--x);
          t.strstart = r;
          t.lookahead = bb - 1;
          O(t)
        }
        return t.strstart += t.lookahead, t.block_start = t.strstart, t.insert =
          t.lookahead, t.lookahead = 0, t.match_length = t.prev_length = bb - 1, t.match_available = 0, k.next_in = C, k.input = E, k.avail_in = w, t.wrap = v, W
      };
      I.deflateInfo = "pako deflate (from Nodeca project)"
    }, {
      "../utils/common": 3,
      "./adler32": 5,
      "./crc32": 7,
      "./messages": 13,
      "./trees": 14
    }],
    9: [function(x, L, I) {
      L.exports = function() {
        this.os = this.xflags = this.time = this.text = 0;
        this.extra = null;
        this.extra_len = 0;
        this.comment = this.name = "";
        this.hcrc = 0;
        this.done = !1
      }
    }, {}],
    10: [function(x, L, I) {
      L.exports = function(x, L) {
        var t, J, r;
        var k = x.state;
        var v =
          x.next_in;
        var O = x.input;
        var w = v + (x.avail_in - 5);
        var I = x.next_out;
        var S = x.output;
        L = I - (L - x.avail_out);
        var oa = I + (x.avail_out - 257);
        var zd = k.dmax;
        var nb = k.wsize;
        var da = k.whave;
        var Pb = k.wnext;
        var dd = k.window;
        var rb = k.hold;
        var Y = k.bits;
        var M = k.lencode;
        var vb = k.distcode;
        var Qa = (1 << k.lenbits) - 1;
        var W = (1 << k.distbits) - 1;
        a: do {
          15 > Y && (rb += O[v++] << Y, Y += 8, rb += O[v++] << Y, Y += 8);
          var db = M[rb & Qa];
          b: for (;;) {
            if (t = db >>> 24, rb >>>= t, Y -= t, t = db >>> 16 & 255, 0 === t) S[I++] = 65535 & db;
            else {
              if (!(16 & t)) {
                if (0 === (64 & t)) {
                  db = M[(65535 & db) + (rb &
                    (1 << t) - 1)];
                  continue b
                }
                if (32 & t) {
                  k.mode = 12;
                  break a
                }
                x.msg = "invalid literal/length code";
                k.mode = 30;
                break a
              }
              var ob = 65535 & db;
              (t &= 15) && (Y < t && (rb += O[v++] << Y, Y += 8), ob += rb & (1 << t) - 1, rb >>>= t, Y -= t);
              15 > Y && (rb += O[v++] << Y, Y += 8, rb += O[v++] << Y, Y += 8);
              db = vb[rb & W];
              c: for (;;) {
                if (t = db >>> 24, rb >>>= t, Y -= t, t = db >>> 16 & 255, !(16 & t)) {
                  if (0 === (64 & t)) {
                    db = vb[(65535 & db) + (rb & (1 << t) - 1)];
                    continue c
                  }
                  x.msg = "invalid distance code";
                  k.mode = 30;
                  break a
                }
                if (J = 65535 & db, t &= 15, Y < t && (rb += O[v++] << Y, Y += 8, Y < t && (rb += O[v++] << Y, Y += 8)), J += rb & (1 << t) - 1, J > zd) {
                  x.msg =
                    "invalid distance too far back";
                  k.mode = 30;
                  break a
                }
                if (rb >>>= t, Y -= t, t = I - L, J > t) {
                  if (t = J - t, t > da && k.sane) {
                    x.msg = "invalid distance too far back";
                    k.mode = 30;
                    break a
                  }
                  if (db = 0, r = dd, 0 === Pb) {
                    if (db += nb - t, t < ob) {
                      ob -= t;
                      do S[I++] = dd[db++]; while (--t);
                      db = I - J;
                      r = S
                    }
                  } else if (Pb < t) {
                    if (db += nb + Pb - t, t -= Pb, t < ob) {
                      ob -= t;
                      do S[I++] = dd[db++]; while (--t);
                      if (db = 0, Pb < ob) {
                        t = Pb;
                        ob -= t;
                        do S[I++] = dd[db++]; while (--t);
                        db = I - J;
                        r = S
                      }
                    }
                  } else if (db += Pb - t, t < ob) {
                    ob -= t;
                    do S[I++] = dd[db++]; while (--t);
                    db = I - J;
                    r = S
                  }
                  for (; 2 < ob;) S[I++] = r[db++], S[I++] = r[db++], S[I++] =
                    r[db++], ob -= 3;
                  ob && (S[I++] = r[db++], 1 < ob && (S[I++] = r[db++]))
                } else {
                  db = I - J;
                  do S[I++] = S[db++], S[I++] = S[db++], S[I++] = S[db++], ob -= 3; while (2 < ob);
                  ob && (S[I++] = S[db++], 1 < ob && (S[I++] = S[db++]))
                }
                break
              }
            }
            break
          }
        } while (v < w && I < oa);
        ob = Y >> 3;
        v -= ob;
        Y -= ob << 3;
        x.next_in = v;
        x.next_out = I;
        x.avail_in = v < w ? 5 + (w - v) : 5 - (v - w);
        x.avail_out = I < oa ? 257 + (oa - I) : 257 - (I - oa);
        k.hold = rb & (1 << Y) - 1;
        k.bits = Y
      }
    }, {}],
    11: [function(x, L, I) {
      function J(k) {
        return (k >>> 24 & 255) + (k >>> 8 & 65280) + ((65280 & k) << 8) + ((255 & k) << 24)
      }

      function oa() {
        this.mode = 0;
        this.last = !1;
        this.wrap =
          0;
        this.havedict = !1;
        this.total = this.check = this.dmax = this.flags = 0;
        this.head = null;
        this.wnext = this.whave = this.wsize = this.wbits = 0;
        this.window = null;
        this.extra = this.offset = this.length = this.bits = this.hold = 0;
        this.distcode = this.lencode = null;
        this.have = this.ndist = this.nlen = this.ncode = this.distbits = this.lenbits = 0;
        this.next = null;
        this.lens = new za.Buf16(320);
        this.work = new za.Buf16(288);
        this.distdyn = this.lendyn = null;
        this.was = this.back = this.sane = 0
      }

      function t(k) {
        var r;
        return k && k.state ? (r = k.state, k.total_in = k.total_out =
          r.total = 0, k.msg = "", r.wrap && (k.adler = 1 & r.wrap), r.mode = dd, r.last = 0, r.havedict = 0, r.dmax = 32768, r.head = null, r.hold = 0, r.bits = 0, r.lencode = r.lendyn = new za.Buf32(rb), r.distcode = r.distdyn = new za.Buf32(Y), r.sane = 1, r.back = -1, da) : Pb
      }

      function Ga(k) {
        var r;
        return k && k.state ? (r = k.state, r.wsize = 0, r.whave = 0, r.wnext = 0, t(k)) : Pb
      }

      function r(k, r) {
        var t, v;
        return k && k.state ? (v = k.state, 0 > r ? (t = 0, r = -r) : (t = (r >> 4) + 1, 48 > r && (r &= 15)), r && (8 > r || 15 < r) ? Pb : (null !== v.window && v.wbits !== r && (v.window = null), v.wrap = t, v.wbits = r, Ga(k))) : Pb
      }

      function k(k,
        t) {
        var v, w;
        return k ? (w = new oa, k.state = w, w.window = null, v = r(k, t), v !== da && (k.state = null), v) : Pb
      }

      function v(k, r, t, v) {
        var w;
        k = k.state;
        return null === k.window && (k.wsize = 1 << k.wbits, k.wnext = 0, k.whave = 0, k.window = new za.Buf8(k.wsize)), v >= k.wsize ? (za.arraySet(k.window, r, t - k.wsize, k.wsize, 0), k.wnext = 0, k.whave = k.wsize) : (w = k.wsize - k.wnext, w > v && (w = v), za.arraySet(k.window, r, t - v, w, k.wnext), v -= w, v ? (za.arraySet(k.window, r, t - v, v, 0), k.wnext = v, k.whave = k.wsize) : (k.wnext += w, k.wnext === k.wsize && (k.wnext = 0), k.whave < k.wsize &&
          (k.whave += w))), 0
      }
      var O, w, za = x("../utils/common"),
        S = x("./adler32"),
        qb = x("./crc32"),
        zd = x("./inffast"),
        nb = x("./inftrees"),
        da = 0,
        Pb = -2,
        dd = 1,
        rb = 852,
        Y = 592,
        M = !0;
      I.inflateReset = Ga;
      I.inflateReset2 = r;
      I.inflateResetKeep = t;
      I.inflateInit = function(r) {
        return k(r, 15)
      };
      I.inflateInit2 = k;
      I.inflate = function(k, r) {
        var t, x, I, L, Y, oa, Ga, Ka = 0,
          Qa = new za.Buf8(4),
          vb = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!k || !k.state || !k.output || !k.input && 0 !== k.avail_in) return Pb;
        var E = k.state;
        12 === E.mode && (E.mode = 13);
        var rb = k.next_out;
        var pc = k.output;
        var bb = k.avail_out;
        var ya = k.next_in;
        var Oa = k.input;
        var Da = k.avail_in;
        var Z = E.hold;
        var V = E.bits;
        var sb = Da;
        var ia = bb;
        var wc = da;
        a: for (;;) switch (E.mode) {
          case dd:
            if (0 === E.wrap) {
              E.mode = 13;
              break
            }
            for (; 16 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            if (2 & E.wrap && 35615 === Z) {
              E.check = 0;
              Qa[0] = 255 & Z;
              Qa[1] = Z >>> 8 & 255;
              E.check = qb(E.check, Qa, 2, 0);
              V = Z = 0;
              E.mode = 2;
              break
            }
            if (E.flags = 0, E.head && (E.head.done = !1), !(1 & E.wrap) || (((255 & Z) << 8) + (Z >> 8)) % 31) {
              k.msg = "incorrect header check";
              E.mode = 30;
              break
            }
            if (8 !== (15 &
                Z)) {
              k.msg = "unknown compression method";
              E.mode = 30;
              break
            }
            if (Z >>>= 4, V -= 4, oa = (15 & Z) + 8, 0 === E.wbits) E.wbits = oa;
            else if (oa > E.wbits) {
              k.msg = "invalid window size";
              E.mode = 30;
              break
            }
            E.dmax = 1 << oa;
            k.adler = E.check = 1;
            E.mode = 512 & Z ? 10 : 12;
            V = Z = 0;
            break;
          case 2:
            for (; 16 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            if (E.flags = Z, 8 !== (255 & E.flags)) {
              k.msg = "unknown compression method";
              E.mode = 30;
              break
            }
            if (57344 & E.flags) {
              k.msg = "unknown header flags set";
              E.mode = 30;
              break
            }
            E.head && (E.head.text = Z >> 8 & 1);
            512 & E.flags && (Qa[0] = 255 & Z, Qa[1] =
              Z >>> 8 & 255, E.check = qb(E.check, Qa, 2, 0));
            V = Z = 0;
            E.mode = 3;
          case 3:
            for (; 32 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            E.head && (E.head.time = Z);
            512 & E.flags && (Qa[0] = 255 & Z, Qa[1] = Z >>> 8 & 255, Qa[2] = Z >>> 16 & 255, Qa[3] = Z >>> 24 & 255, E.check = qb(E.check, Qa, 4, 0));
            V = Z = 0;
            E.mode = 4;
          case 4:
            for (; 16 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            E.head && (E.head.xflags = 255 & Z, E.head.os = Z >> 8);
            512 & E.flags && (Qa[0] = 255 & Z, Qa[1] = Z >>> 8 & 255, E.check = qb(E.check, Qa, 2, 0));
            V = Z = 0;
            E.mode = 5;
          case 5:
            if (1024 & E.flags) {
              for (; 16 > V;) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              E.length = Z;
              E.head && (E.head.extra_len = Z);
              512 & E.flags && (Qa[0] = 255 & Z, Qa[1] = Z >>> 8 & 255, E.check = qb(E.check, Qa, 2, 0));
              V = Z = 0
            } else E.head && (E.head.extra = null);
            E.mode = 6;
          case 6:
            if (1024 & E.flags && (t = E.length, t > Da && (t = Da), t && (E.head && (oa = E.head.extra_len - E.length, E.head.extra || (E.head.extra = Array(E.head.extra_len)), za.arraySet(E.head.extra, Oa, ya, t, oa)), 512 & E.flags && (E.check = qb(E.check, Oa, t, ya)), Da -= t, ya += t, E.length -= t), E.length)) break a;
            E.length = 0;
            E.mode = 7;
          case 7:
            if (2048 & E.flags) {
              if (0 ===
                Da) break a;
              t = 0;
              do oa = Oa[ya + t++], E.head && oa && 65536 > E.length && (E.head.name += String.fromCharCode(oa)); while (oa && t < Da);
              if (512 & E.flags && (E.check = qb(E.check, Oa, t, ya)), Da -= t, ya += t, oa) break a
            } else E.head && (E.head.name = null);
            E.length = 0;
            E.mode = 8;
          case 8:
            if (4096 & E.flags) {
              if (0 === Da) break a;
              t = 0;
              do oa = Oa[ya + t++], E.head && oa && 65536 > E.length && (E.head.comment += String.fromCharCode(oa)); while (oa && t < Da);
              if (512 & E.flags && (E.check = qb(E.check, Oa, t, ya)), Da -= t, ya += t, oa) break a
            } else E.head && (E.head.comment = null);
            E.mode = 9;
          case 9:
            if (512 &
              E.flags) {
              for (; 16 > V;) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              if (Z !== (65535 & E.check)) {
                k.msg = "header crc mismatch";
                E.mode = 30;
                break
              }
              V = Z = 0
            }
            E.head && (E.head.hcrc = E.flags >> 9 & 1, E.head.done = !0);
            k.adler = E.check = 0;
            E.mode = 12;
            break;
          case 10:
            for (; 32 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            k.adler = E.check = J(Z);
            V = Z = 0;
            E.mode = 11;
          case 11:
            if (0 === E.havedict) return k.next_out = rb, k.avail_out = bb, k.next_in = ya, k.avail_in = Da, E.hold = Z, E.bits = V, 2;
            k.adler = E.check = 1;
            E.mode = 12;
          case 12:
            if (5 === r || 6 === r) break a;
          case 13:
            if (E.last) {
              Z >>>=
                7 & V;
              V -= 7 & V;
              E.mode = 27;
              break
            }
            for (; 3 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            switch (E.last = 1 & Z, Z >>>= 1, --V, 3 & Z) {
              case 0:
                E.mode = 14;
                break;
              case 1:
                var C = E;
                if (M) {
                  O = new za.Buf32(512);
                  w = new za.Buf32(32);
                  for (I = 0; 144 > I;) C.lens[I++] = 8;
                  for (; 256 > I;) C.lens[I++] = 9;
                  for (; 280 > I;) C.lens[I++] = 7;
                  for (; 288 > I;) C.lens[I++] = 8;
                  nb(1, C.lens, 0, 288, O, 0, C.work, {
                    bits: 9
                  });
                  for (I = 0; 32 > I;) C.lens[I++] = 5;
                  nb(2, C.lens, 0, 32, w, 0, C.work, {
                    bits: 5
                  });
                  M = !1
                }
                C.lencode = O;
                C.lenbits = 9;
                C.distcode = w;
                C.distbits = 5;
                if (E.mode = 20, 6 === r) {
                  Z >>>= 2;
                  V -= 2;
                  break a
                }
                break;
              case 2:
                E.mode = 17;
                break;
              case 3:
                k.msg = "invalid block type", E.mode = 30
            }
            Z >>>= 2;
            V -= 2;
            break;
          case 14:
            Z >>>= 7 & V;
            for (V -= 7 & V; 32 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            if ((65535 & Z) !== (Z >>> 16 ^ 65535)) {
              k.msg = "invalid stored block lengths";
              E.mode = 30;
              break
            }
            if (E.length = 65535 & Z, Z = 0, V = 0, E.mode = 15, 6 === r) break a;
          case 15:
            E.mode = 16;
          case 16:
            if (t = E.length) {
              if (t > Da && (t = Da), t > bb && (t = bb), 0 === t) break a;
              za.arraySet(pc, Oa, ya, t, rb);
              Da -= t;
              ya += t;
              bb -= t;
              rb += t;
              E.length -= t;
              break
            }
            E.mode = 12;
            break;
          case 17:
            for (; 14 > V;) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            if (E.nlen = (31 & Z) + 257, Z >>>= 5, V -= 5, E.ndist = (31 & Z) + 1, Z >>>= 5, V -= 5, E.ncode = (15 & Z) + 4, Z >>>= 4, V -= 4, 286 < E.nlen || 30 < E.ndist) {
              k.msg = "too many length or distance symbols";
              E.mode = 30;
              break
            }
            E.have = 0;
            E.mode = 18;
          case 18:
            for (; E.have < E.ncode;) {
              for (; 3 > V;) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              E.lens[vb[E.have++]] = 7 & Z;
              Z >>>= 3;
              V -= 3
            }
            for (; 19 > E.have;) E.lens[vb[E.have++]] = 0;
            if (E.lencode = E.lendyn, E.lenbits = 7, Ga = {
                bits: E.lenbits
              }, wc = nb(0, E.lens, 0, 19, E.lencode, 0, E.work, Ga), E.lenbits = Ga.bits, wc) {
              k.msg =
                "invalid code lengths set";
              E.mode = 30;
              break
            }
            E.have = 0;
            E.mode = 19;
          case 19:
            for (; E.have < E.nlen + E.ndist;) {
              for (; Ka = E.lencode[Z & (1 << E.lenbits) - 1], L = Ka >>> 24, C = 65535 & Ka, !(L <= V);) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              if (16 > C) Z >>>= L, V -= L, E.lens[E.have++] = C;
              else {
                if (16 === C) {
                  for (I = L + 2; V < I;) {
                    if (0 === Da) break a;
                    Da--;
                    Z += Oa[ya++] << V;
                    V += 8
                  }
                  if (Z >>>= L, V -= L, 0 === E.have) {
                    k.msg = "invalid bit length repeat";
                    E.mode = 30;
                    break
                  }
                  oa = E.lens[E.have - 1];
                  t = 3 + (3 & Z);
                  Z >>>= 2;
                  V -= 2
                } else if (17 === C) {
                  for (I = L + 3; V < I;) {
                    if (0 === Da) break a;
                    Da--;
                    Z +=
                      Oa[ya++] << V;
                    V += 8
                  }
                  Z >>>= L;
                  V -= L;
                  oa = 0;
                  t = 3 + (7 & Z);
                  Z >>>= 3;
                  V -= 3
                } else {
                  for (I = L + 7; V < I;) {
                    if (0 === Da) break a;
                    Da--;
                    Z += Oa[ya++] << V;
                    V += 8
                  }
                  Z >>>= L;
                  V -= L;
                  oa = 0;
                  t = 11 + (127 & Z);
                  Z >>>= 7;
                  V -= 7
                }
                if (E.have + t > E.nlen + E.ndist) {
                  k.msg = "invalid bit length repeat";
                  E.mode = 30;
                  break
                }
                for (; t--;) E.lens[E.have++] = oa
              }
            }
            if (30 === E.mode) break;
            if (0 === E.lens[256]) {
              k.msg = "invalid code -- missing end-of-block";
              E.mode = 30;
              break
            }
            if (E.lenbits = 9, Ga = {
                bits: E.lenbits
              }, wc = nb(1, E.lens, 0, E.nlen, E.lencode, 0, E.work, Ga), E.lenbits = Ga.bits, wc) {
              k.msg = "invalid literal/lengths set";
              E.mode = 30;
              break
            }
            if (E.distbits = 6, E.distcode = E.distdyn, Ga = {
                bits: E.distbits
              }, wc = nb(2, E.lens, E.nlen, E.ndist, E.distcode, 0, E.work, Ga), E.distbits = Ga.bits, wc) {
              k.msg = "invalid distances set";
              E.mode = 30;
              break
            }
            if (E.mode = 20, 6 === r) break a;
          case 20:
            E.mode = 21;
          case 21:
            if (6 <= Da && 258 <= bb) {
              k.next_out = rb;
              k.avail_out = bb;
              k.next_in = ya;
              k.avail_in = Da;
              E.hold = Z;
              E.bits = V;
              zd(k, ia);
              rb = k.next_out;
              pc = k.output;
              bb = k.avail_out;
              ya = k.next_in;
              Oa = k.input;
              Da = k.avail_in;
              Z = E.hold;
              V = E.bits;
              12 === E.mode && (E.back = -1);
              break
            }
            for (E.back = 0; Ka = E.lencode[Z &
                (1 << E.lenbits) - 1], L = Ka >>> 24, I = Ka >>> 16 & 255, C = 65535 & Ka, !(L <= V);) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            if (I && 0 === (240 & I)) {
              var Q = L;
              var Bc = I;
              for (Y = C; Ka = E.lencode[Y + ((Z & (1 << Q + Bc) - 1) >> Q)], L = Ka >>> 24, I = Ka >>> 16 & 255, C = 65535 & Ka, !(Q + L <= V);) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              Z >>>= Q;
              V -= Q;
              E.back += Q
            }
            if (Z >>>= L, V -= L, E.back += L, E.length = C, 0 === I) {
              E.mode = 26;
              break
            }
            if (32 & I) {
              E.back = -1;
              E.mode = 12;
              break
            }
            if (64 & I) {
              k.msg = "invalid literal/length code";
              E.mode = 30;
              break
            }
            E.extra = 15 & I;
            E.mode = 22;
          case 22:
            if (E.extra) {
              for (I =
                E.extra; V < I;) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              E.length += Z & (1 << E.extra) - 1;
              Z >>>= E.extra;
              V -= E.extra;
              E.back += E.extra
            }
            E.was = E.length;
            E.mode = 23;
          case 23:
            for (; Ka = E.distcode[Z & (1 << E.distbits) - 1], L = Ka >>> 24, I = Ka >>> 16 & 255, C = 65535 & Ka, !(L <= V);) {
              if (0 === Da) break a;
              Da--;
              Z += Oa[ya++] << V;
              V += 8
            }
            if (0 === (240 & I)) {
              Q = L;
              Bc = I;
              for (Y = C; Ka = E.distcode[Y + ((Z & (1 << Q + Bc) - 1) >> Q)], L = Ka >>> 24, I = Ka >>> 16 & 255, C = 65535 & Ka, !(Q + L <= V);) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              Z >>>= Q;
              V -= Q;
              E.back += Q
            }
            if (Z >>>= L, V -= L, E.back += L, 64 & I) {
              k.msg =
                "invalid distance code";
              E.mode = 30;
              break
            }
            E.offset = C;
            E.extra = 15 & I;
            E.mode = 24;
          case 24:
            if (E.extra) {
              for (I = E.extra; V < I;) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              E.offset += Z & (1 << E.extra) - 1;
              Z >>>= E.extra;
              V -= E.extra;
              E.back += E.extra
            }
            if (E.offset > E.dmax) {
              k.msg = "invalid distance too far back";
              E.mode = 30;
              break
            }
            E.mode = 25;
          case 25:
            if (0 === bb) break a;
            if (t = ia - bb, E.offset > t) {
              if (t = E.offset - t, t > E.whave && E.sane) {
                k.msg = "invalid distance too far back";
                E.mode = 30;
                break
              }
              t > E.wnext ? (t -= E.wnext, x = E.wsize - t) : x = E.wnext - t;
              t > E.length &&
                (t = E.length);
              I = E.window
            } else I = pc, x = rb - E.offset, t = E.length;
            t > bb && (t = bb);
            bb -= t;
            E.length -= t;
            do pc[rb++] = I[x++]; while (--t);
            0 === E.length && (E.mode = 21);
            break;
          case 26:
            if (0 === bb) break a;
            pc[rb++] = E.length;
            bb--;
            E.mode = 21;
            break;
          case 27:
            if (E.wrap) {
              for (; 32 > V;) {
                if (0 === Da) break a;
                Da--;
                Z |= Oa[ya++] << V;
                V += 8
              }
              if (ia -= bb, k.total_out += ia, E.total += ia, ia && (k.adler = E.check = E.flags ? qb(E.check, pc, ia, rb - ia) : S(E.check, pc, ia, rb - ia)), ia = bb, (E.flags ? Z : J(Z)) !== E.check) {
                k.msg = "incorrect data check";
                E.mode = 30;
                break
              }
              V = Z = 0
            }
            E.mode = 28;
          case 28:
            if (E.wrap && E.flags) {
              for (; 32 > V;) {
                if (0 === Da) break a;
                Da--;
                Z += Oa[ya++] << V;
                V += 8
              }
              if (Z !== (4294967295 & E.total)) {
                k.msg = "incorrect length check";
                E.mode = 30;
                break
              }
              V = Z = 0
            }
            E.mode = 29;
          case 29:
            wc = 1;
            break a;
          case 30:
            wc = -3;
            break a;
          case 31:
            return -4;
          default:
            return Pb
        }
        return k.next_out = rb, k.avail_out = bb, k.next_in = ya, k.avail_in = Da, E.hold = Z, E.bits = V, (E.wsize || ia !== k.avail_out && 30 > E.mode && (27 > E.mode || 4 !== r)) && v(k, k.output, k.next_out, ia - k.avail_out) ? (E.mode = 31, -4) : (sb -= k.avail_in, ia -= k.avail_out, k.total_in += sb, k.total_out +=
          ia, E.total += ia, E.wrap && ia && (k.adler = E.check = E.flags ? qb(E.check, pc, ia, k.next_out - ia) : S(E.check, pc, ia, k.next_out - ia)), k.data_type = E.bits + (E.last ? 64 : 0) + (12 === E.mode ? 128 : 0) + (20 === E.mode || 15 === E.mode ? 256 : 0), (0 === sb && 0 === ia || 4 === r) && wc === da && (wc = -5), wc)
      };
      I.inflateEnd = function(k) {
        if (!k || !k.state) return Pb;
        var r = k.state;
        return r.window && (r.window = null), k.state = null, da
      };
      I.inflateGetHeader = function(k, r) {
        var t;
        return k && k.state ? (t = k.state, 0 === (2 & t.wrap) ? Pb : (t.head = r, r.done = !1, da)) : Pb
      };
      I.inflateSetDictionary =
        function(k, r) {
          var t, w, x = r.length;
          return k && k.state ? (t = k.state, 0 !== t.wrap && 11 !== t.mode ? Pb : 11 === t.mode && (w = 1, w = S(w, r, x, 0), w !== t.check) ? -3 : v(k, r, x, x) ? (t.mode = 31, -4) : (t.havedict = 1, da)) : Pb
        };
      I.inflateInfo = "pako inflate (from Nodeca project)"
    }, {
      "../utils/common": 3,
      "./adler32": 5,
      "./crc32": 7,
      "./inffast": 10,
      "./inftrees": 12
    }],
    12: [function(x, L, I) {
      var J = x("../utils/common"),
        oa = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
        t = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18,
          18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78
        ],
        Ga = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
        r = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      L.exports = function(k, v, x, w, I, L, qb, zd) {
        var O, S, za, dd, rb, Y, M = zd.bits,
          vb, Qa, W, db, ob, ec = 0,
          Qb, Ya = null,
          Pe = 0,
          Ka = new J.Buf16(16);
        var Zd = new J.Buf16(16);
        var Fb = null,
          E = 0;
        for (vb = 0; 15 >= vb; vb++) Ka[vb] = 0;
        for (Qa = 0; Qa < w; Qa++) Ka[v[x + Qa]]++;
        var kd =
          M;
        for (W = 15; 1 <= W && 0 === Ka[W]; W--);
        if (kd > W && (kd = W), 0 === W) return I[L++] = 20971520, I[L++] = 20971520, zd.bits = 1, 0;
        for (M = 1; M < W && 0 === Ka[M]; M++);
        kd < M && (kd = M);
        for (vb = O = 1; 15 >= vb; vb++)
          if (O <<= 1, O -= Ka[vb], 0 > O) return -1;
        if (0 < O && (0 === k || 1 !== W)) return -1;
        Zd[1] = 0;
        for (vb = 1; 15 > vb; vb++) Zd[vb + 1] = Zd[vb] + Ka[vb];
        for (Qa = 0; Qa < w; Qa++) 0 !== v[x + Qa] && (qb[Zd[v[x + Qa]]++] = Qa);
        if (0 === k ? (Ya = Fb = qb, dd = 19) : 1 === k ? (Ya = oa, Pe -= 257, Fb = t, E -= 257, dd = 256) : (Ya = Ga, Fb = r, dd = -1), Qb = 0, Qa = 0, vb = M, Zd = L, db = kd, ob = 0, za = -1, ec = 1 << kd, w = ec - 1, 1 === k && 852 < ec || 2 === k && 592 <
          ec) return 1;
        for (var pc = 0;;) {
          pc++;
          var bb = vb - ob;
          qb[Qa] < dd ? (rb = 0, Y = qb[Qa]) : qb[Qa] > dd ? (rb = Fb[E + qb[Qa]], Y = Ya[Pe + qb[Qa]]) : (rb = 96, Y = 0);
          O = 1 << vb - ob;
          M = S = 1 << db;
          do S -= O, I[Zd + (Qb >> ob) + S] = bb << 24 | rb << 16 | Y | 0; while (0 !== S);
          for (O = 1 << vb - 1; Qb & O;) O >>= 1;
          if (0 !== O ? (Qb &= O - 1, Qb += O) : Qb = 0, Qa++, 0 === --Ka[vb]) {
            if (vb === W) break;
            vb = v[x + qb[Qa]]
          }
          if (vb > kd && (Qb & w) !== za) {
            0 === ob && (ob = kd);
            Zd += M;
            db = vb - ob;
            for (O = 1 << db; db + ob < W && (O -= Ka[db + ob], !(0 >= O));) db++, O <<= 1;
            if (ec += 1 << db, 1 === k && 852 < ec || 2 === k && 592 < ec) return 1;
            za = Qb & w;
            I[za] = kd << 24 | db << 16 | Zd -
              L | 0
          }
        }
        return 0 !== Qb && (I[Zd + Qb] = vb - ob << 24 | 4194304), zd.bits = kd, 0
      }
    }, {
      "../utils/common": 3
    }],
    13: [function(x, L, I) {
      L.exports = {
        2: "need dictionary",
        1: "stream end",
        0: "",
        "-1": "file error",
        "-2": "stream error",
        "-3": "data error",
        "-4": "insufficient memory",
        "-5": "buffer error",
        "-6": "incompatible version"
      }
    }, {}],
    14: [function(x, L, I) {
      function J(k) {
        for (var r = k.length; 0 <= --r;) k[r] = 0
      }

      function oa(k, r, t, v, w) {
        this.static_tree = k;
        this.extra_bits = r;
        this.extra_base = t;
        this.elems = v;
        this.max_length = w;
        this.has_stree = k && k.length
      }

      function t(k,
        r) {
        this.dyn_tree = k;
        this.max_code = 0;
        this.stat_desc = r
      }

      function Ga(k, r) {
        k.pending_buf[k.pending++] = 255 & r;
        k.pending_buf[k.pending++] = r >>> 8 & 255
      }

      function r(k, r, t) {
        k.bi_valid > Pe - t ? (k.bi_buf |= r << k.bi_valid & 65535, Ga(k, k.bi_buf), k.bi_buf = r >> Pe - k.bi_valid, k.bi_valid += t - Pe) : (k.bi_buf |= r << k.bi_valid & 65535, k.bi_valid += t)
      }

      function k(k, t, v) {
        r(k, v[2 * t], v[2 * t + 1])
      }

      function v(k, r) {
        var t = 0;
        do t |= 1 & k, k >>>= 1, t <<= 1; while (0 < --r);
        return t >>> 1
      }

      function O(k, r, t) {
        var w, x = Array(Ya + 1),
          z = 0;
        for (w = 1; w <= Ya; w++) x[w] = z = z + t[w - 1] << 1;
        for (t =
          0; t <= r; t++) w = k[2 * t + 1], 0 !== w && (k[2 * t] = v(x[w]++, w))
      }

      function w(k) {
        var r;
        for (r = 0; r < db; r++) k.dyn_ltree[2 * r] = 0;
        for (r = 0; r < ob; r++) k.dyn_dtree[2 * r] = 0;
        for (r = 0; r < ec; r++) k.bl_tree[2 * r] = 0;
        k.dyn_ltree[2 * Ka] = 1;
        k.opt_len = k.static_len = 0;
        k.last_lit = k.matches = 0
      }

      function za(k) {
        8 < k.bi_valid ? Ga(k, k.bi_buf) : 0 < k.bi_valid && (k.pending_buf[k.pending++] = k.bi_buf);
        k.bi_buf = 0;
        k.bi_valid = 0
      }

      function S(k, r, t, v) {
        var w = 2 * r,
          x = 2 * t;
        return k[w] < k[x] || k[w] === k[x] && v[r] <= v[t]
      }

      function qb(k, r, t) {
        for (var v = k.heap[t], w = t << 1; w <= k.heap_len &&
          (w < k.heap_len && S(r, k.heap[w + 1], k.heap[w], k.depth) && w++, !S(r, v, k.heap[w], k.depth));) k.heap[t] = k.heap[w], t = w, w <<= 1;
        k.heap[t] = v
      }

      function zd(t, v, w) {
        var x, z, C = 0;
        if (0 !== t.last_lit) {
          do {
            var E = t.pending_buf[t.d_buf + 2 * C] << 8 | t.pending_buf[t.d_buf + 2 * C + 1];
            var I = t.pending_buf[t.l_buf + C];
            C++;
            0 === E ? k(t, I, v) : (x = V[I], k(t, x + W + 1, v), z = kd[x], 0 !== z && (I -= sb[x], r(t, I, z)), E--, x = 256 > E ? Z[E] : Z[256 + (E >>> 7)], k(t, x, w), z = pc[x], 0 !== z && (E -= ia[x], r(t, E, z)))
          } while (C < t.last_lit)
        }
        k(t, Ka, v)
      }

      function nb(k, r) {
        var t, v = r.dyn_tree;
        var w = r.stat_desc.static_tree;
        var x = r.stat_desc.has_stree,
          z = r.stat_desc.elems,
          C = -1;
        k.heap_len = 0;
        k.heap_max = Qb;
        for (t = 0; t < z; t++) 0 !== v[2 * t] ? (k.heap[++k.heap_len] = C = t, k.depth[t] = 0) : v[2 * t + 1] = 0;
        for (; 2 > k.heap_len;) {
          var E = k.heap[++k.heap_len] = 2 > C ? ++C : 0;
          v[2 * E] = 1;
          k.depth[E] = 0;
          k.opt_len--;
          x && (k.static_len -= w[2 * E + 1])
        }
        r.max_code = C;
        for (t = k.heap_len >> 1; 1 <= t; t--) qb(k, v, t);
        E = z;
        do t = k.heap[1], k.heap[1] = k.heap[k.heap_len--], qb(k, v, 1), w = k.heap[1], k.heap[--k.heap_max] = t, k.heap[--k.heap_max] = w, v[2 * E] = v[2 * t] + v[2 * w], k.depth[E] = (k.depth[t] >= k.depth[w] ?
          k.depth[t] : k.depth[w]) + 1, v[2 * t + 1] = v[2 * w + 1] = E, k.heap[1] = E++, qb(k, v, 1); while (2 <= k.heap_len);
        k.heap[--k.heap_max] = k.heap[1];
        var I, J;
        t = r.dyn_tree;
        E = r.max_code;
        z = r.stat_desc.static_tree;
        var L = r.stat_desc.has_stree,
          M = r.stat_desc.extra_bits,
          aa = r.stat_desc.extra_base,
          Q = r.stat_desc.max_length,
          S = 0;
        for (x = 0; x <= Ya; x++) k.bl_count[x] = 0;
        t[2 * k.heap[k.heap_max] + 1] = 0;
        for (r = k.heap_max + 1; r < Qb; r++) w = k.heap[r], x = t[2 * t[2 * w + 1] + 1] + 1, x > Q && (x = Q, S++), t[2 * w + 1] = x, w > E || (k.bl_count[x]++, I = 0, w >= aa && (I = M[w - aa]), J = t[2 * w], k.opt_len +=
          J * (x + I), L && (k.static_len += J * (z[2 * w + 1] + I)));
        if (0 !== S) {
          do {
            for (x = Q - 1; 0 === k.bl_count[x];) x--;
            k.bl_count[x]--;
            k.bl_count[x + 1] += 2;
            k.bl_count[Q]--;
            S -= 2
          } while (0 < S);
          for (x = Q; 0 !== x; x--)
            for (w = k.bl_count[x]; 0 !== w;) I = k.heap[--r], I > E || (t[2 * I + 1] !== x && (k.opt_len += (x - t[2 * I + 1]) * t[2 * I], t[2 * I + 1] = x), w--)
        }
        O(v, C, k.bl_count)
      }

      function da(k, r, t) {
        var v, w = -1,
          x = r[1],
          z = 0,
          C = 7,
          I = 4;
        0 === x && (C = 138, I = 3);
        r[2 * (t + 1) + 1] = 65535;
        for (v = 0; v <= t; v++) {
          var J = x;
          x = r[2 * (v + 1) + 1];
          ++z < C && J === x || (z < I ? k.bl_tree[2 * J] += z : 0 !== J ? (J !== w && k.bl_tree[2 * J]++, k.bl_tree[2 *
            Zd]++) : 10 >= z ? k.bl_tree[2 * Fb]++ : k.bl_tree[2 * E]++, z = 0, w = J, 0 === x ? (C = 138, I = 3) : J === x ? (C = 6, I = 3) : (C = 7, I = 4))
        }
      }

      function Pb(t, v, w) {
        var x, z, C = -1,
          I = v[1],
          J = 0,
          L = 7,
          M = 4;
        0 === I && (L = 138, M = 3);
        for (x = 0; x <= w; x++)
          if (z = I, I = v[2 * (x + 1) + 1], !(++J < L && z === I)) {
            if (J < M) {
              do k(t, z, t.bl_tree); while (0 !== --J)
            } else 0 !== z ? (z !== C && (k(t, z, t.bl_tree), J--), k(t, Zd, t.bl_tree), r(t, J - 3, 2)) : 10 >= J ? (k(t, Fb, t.bl_tree), r(t, J - 3, 3)) : (k(t, E, t.bl_tree), r(t, J - 11, 7));
            J = 0;
            C = z;
            0 === I ? (L = 138, M = 3) : z === I ? (L = 6, M = 3) : (L = 7, M = 4)
          }
      }

      function dd(k) {
        var r, t = 4093624447;
        for (r =
          0; 31 >= r; r++, t >>>= 1)
          if (1 & t && 0 !== k.dyn_ltree[2 * r]) return M;
        if (0 !== k.dyn_ltree[18] || 0 !== k.dyn_ltree[20] || 0 !== k.dyn_ltree[26]) return vb;
        for (r = 32; r < W; r++)
          if (0 !== k.dyn_ltree[2 * r]) return vb;
        return M
      }

      function rb(k, t, v, w) {
        r(k, (Qa << 1) + (w ? 1 : 0), 3);
        za(k);
        Ga(k, v);
        Ga(k, ~v);
        Y.arraySet(k.pending_buf, k.window, t, v, k.pending);
        k.pending += v
      }
      var Y = x("../utils/common"),
        M = 0,
        vb = 1,
        Qa = 0,
        W = 256,
        db = W + 1 + 29,
        ob = 30,
        ec = 19,
        Qb = 2 * db + 1,
        Ya = 15,
        Pe = 16,
        Ka = 256,
        Zd = 16,
        Fb = 17,
        E = 18,
        kd = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
        pc = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
        bb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
        ya = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
        Oa = Array(2 * (db + 2));
      J(Oa);
      var Da = Array(2 * ob);
      J(Da);
      var Z = Array(512);
      J(Z);
      var V = Array(256);
      J(V);
      var sb = Array(29);
      J(sb);
      var ia = Array(ob);
      J(ia);
      var wc, C, Q, Bc = !1;
      I._tr_init = function(k) {
        if (!Bc) {
          var r, x, E, I = Array(Ya + 1);
          for (E = x = 0; 28 > E; E++)
            for (sb[E] = x, r = 0; r < 1 << kd[E]; r++) V[x++] = E;
          V[x - 1] = E;
          for (E = x = 0; 16 > E; E++)
            for (ia[E] = x, r = 0; r < 1 << pc[E]; r++) Z[x++] =
              E;
          for (x >>= 7; E < ob; E++)
            for (ia[E] = x << 7, r = 0; r < 1 << pc[E] - 7; r++) Z[256 + x++] = E;
          for (r = 0; r <= Ya; r++) I[r] = 0;
          for (r = 0; 143 >= r;) Oa[2 * r + 1] = 8, r++, I[8]++;
          for (; 255 >= r;) Oa[2 * r + 1] = 9, r++, I[9]++;
          for (; 279 >= r;) Oa[2 * r + 1] = 7, r++, I[7]++;
          for (; 287 >= r;) Oa[2 * r + 1] = 8, r++, I[8]++;
          O(Oa, db + 1, I);
          for (r = 0; r < ob; r++) Da[2 * r + 1] = 5, Da[2 * r] = v(r, 5);
          wc = new oa(Oa, kd, W + 1, db, Ya);
          C = new oa(Da, pc, 0, ob, Ya);
          Q = new oa([], bb, 0, ec, 7);
          Bc = !0
        }
        k.l_desc = new t(k.dyn_ltree, wc);
        k.d_desc = new t(k.dyn_dtree, C);
        k.bl_desc = new t(k.bl_tree, Q);
        k.bi_buf = 0;
        k.bi_valid = 0;
        w(k)
      };
      I._tr_stored_block =
        rb;
      I._tr_flush_block = function(k, t, v, x) {
        var z = 0;
        if (0 < k.level) {
          2 === k.strm.data_type && (k.strm.data_type = dd(k));
          nb(k, k.l_desc);
          nb(k, k.d_desc);
          da(k, k.dyn_ltree, k.l_desc.max_code);
          da(k, k.dyn_dtree, k.d_desc.max_code);
          nb(k, k.bl_desc);
          for (z = ec - 1; 3 <= z && 0 === k.bl_tree[2 * ya[z] + 1]; z--);
          z = (k.opt_len += 3 * (z + 1) + 14, z);
          var C = k.opt_len + 3 + 7 >>> 3;
          var E = k.static_len + 3 + 7 >>> 3;
          E <= C && (C = E)
        } else C = E = v + 5;
        if (v + 4 <= C && -1 !== t) rb(k, t, v, x);
        else if (4 === k.strategy || E === C) r(k, 2 + (x ? 1 : 0), 3), zd(k, Oa, Da);
        else {
          r(k, 4 + (x ? 1 : 0), 3);
          t = k.l_desc.max_code +
            1;
          v = k.d_desc.max_code + 1;
          z += 1;
          r(k, t - 257, 5);
          r(k, v - 1, 5);
          r(k, z - 4, 4);
          for (C = 0; C < z; C++) r(k, k.bl_tree[2 * ya[C] + 1], 3);
          Pb(k, k.dyn_ltree, t - 1);
          Pb(k, k.dyn_dtree, v - 1);
          zd(k, k.dyn_ltree, k.dyn_dtree)
        }
        w(k);
        x && za(k)
      };
      I._tr_tally = function(k, r, t) {
        return k.pending_buf[k.d_buf + 2 * k.last_lit] = r >>> 8 & 255, k.pending_buf[k.d_buf + 2 * k.last_lit + 1] = 255 & r, k.pending_buf[k.l_buf + k.last_lit] = 255 & t, k.last_lit++, 0 === r ? k.dyn_ltree[2 * t]++ : (k.matches++, r--, k.dyn_ltree[2 * (V[t] + W + 1)]++, k.dyn_dtree[2 * (256 > r ? Z[r] : Z[256 + (r >>> 7)])]++), k.last_lit ===
          k.lit_bufsize - 1
      };
      I._tr_align = function(t) {
        r(t, 2, 3);
        k(t, Ka, Oa);
        16 === t.bi_valid ? (Ga(t, t.bi_buf), t.bi_buf = 0, t.bi_valid = 0) : 8 <= t.bi_valid && (t.pending_buf[t.pending++] = 255 & t.bi_buf, t.bi_buf >>= 8, t.bi_valid -= 8)
      }
    }, {
      "../utils/common": 3
    }],
    15: [function(x, L, I) {
      L.exports = function() {
        this.input = null;
        this.total_in = this.avail_in = this.next_in = 0;
        this.output = null;
        this.total_out = this.avail_out = this.next_out = 0;
        this.msg = "";
        this.state = null;
        this.data_type = 2;
        this.adler = 0
      }
    }, {}],
    "/": [function(x, L, I) {
      I = x("./lib/utils/common").assign;
      var J = x("./lib/deflate"),
        oa = x("./lib/inflate");
      x = x("./lib/zlib/constants");
      var t = {};
      I(t, J, oa, x);
      L.exports = t
    }, {
      "./lib/deflate": 1,
      "./lib/inflate": 2,
      "./lib/utils/common": 3,
      "./lib/zlib/constants": 6
    }]
  }, {}, [])("/")
});
var saveAs = saveAs || function(ca) {
  if (!("undefined" === typeof ca || "undefined" !== typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
    var x = ca.document.createElementNS("http://www.w3.org/1999/xhtml", "a"),
      L = "download" in x,
      I = /constructor/i.test(ca.HTMLElement) || ca.safari,
      J = /CriOS\/[\d]+/.test(navigator.userAgent),
      oa = function(k) {
        (ca.setImmediate || ca.setTimeout)(function() {
          throw k;
        }, 0)
      },
      t = function(k) {
        setTimeout(function() {
            "string" === typeof k ? (ca.URL || ca.webkitURL || ca).revokeObjectURL(k) : k.remove()
          },
          4E4)
      },
      Ga = function(k) {
        return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(k.type) ? new Blob([String.fromCharCode(65279), k], {
          type: k.type
        }) : k
      },
      r = function(k, r, w) {
        w || (k = Ga(k));
        var v = this,
          O = "application/octet-stream" === k.type,
          qb = function() {
            var k = ["writestart", "progress", "write", "writeend"];
            k = [].concat(k);
            for (var r = k.length; r--;) {
              var t = v["on" + k[r]];
              if ("function" === typeof t) try {
                t.call(v, v)
              } catch (dd) {
                oa(dd)
              }
            }
          };
        v.readyState = v.INIT;
        if (L) {
          var zd = (ca.URL || ca.webkitURL || ca).createObjectURL(k);
          setTimeout(function() {
            x.href = zd;
            x.download = r;
            var k = new MouseEvent("click");
            x.dispatchEvent(k);
            qb();
            t(zd);
            v.readyState = v.DONE
          })
        } else(function() {
          if ((J || O && I) && ca.FileReader) {
            var r = new FileReader;
            r.onloadend = function() {
              var k = J ? r.result : r.result.replace(/^data:[^;]*;/, "data:attachment/file;");
              ca.open(k, "_blank") || (ca.location.href = k);
              v.readyState = v.DONE;
              qb()
            };
            r.readAsDataURL(k);
            v.readyState = v.INIT
          } else zd || (zd = (ca.URL || ca.webkitURL || ca).createObjectURL(k)), O ? ca.location.href = zd : ca.open(zd, "_blank") ||
            (ca.location.href = zd), v.readyState = v.DONE, qb(), t(zd)
        })()
      },
      k = r.prototype;
    if ("undefined" !== typeof navigator && navigator.msSaveOrOpenBlob) return function(k, r, t) {
      r = r || k.name || "download";
      t || (k = Ga(k));
      return navigator.msSaveOrOpenBlob(k, r)
    };
    k.abort = function() {};
    k.readyState = k.INIT = 0;
    k.WRITING = 1;
    k.DONE = 2;
    k.error = k.onwritestart = k.onprogress = k.onwrite = k.onabort = k.onerror = k.onwriteend = null;
    return function(k, t, w) {
      return new r(k, t || k.name || "download", w)
    }
  }
}("undefined" !== typeof self && self || "undefined" !== typeof window &&
  window || this.content);
"undefined" !== typeof module && module.exports ? module.exports.saveAs = saveAs : "undefined" !== typeof define && null !== define && null !== define.amd && define("FileSaver.js", function() {
  return saveAs
});
"function" == typeof define && define.__amd && (define.amd = define.__amd, delete define.__amd);
//# sourceMappingURL=ResizerHooda.js.map